var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip400\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip400)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip401\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip400)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip402\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip400)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.84 2211.02,1260.84 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.08 2211.02,1003.08 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.33 2211.02,745.33 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.575 2211.02,487.575 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.821 2211.02,229.821 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.84 423.181,1260.84 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.08 423.181,1003.08 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.33 423.181,745.33 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.575 423.181,487.575 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.821 423.181,229.821 \"/>\n<path clip-path=\"url(#clip400)\" d=\"M356.339 1246.64 Q352.728 1246.64 350.899 1250.2 Q349.094 1253.74 349.094 1260.87 Q349.094 1267.98 350.899 1271.54 Q352.728 1275.09 356.339 1275.09 Q359.973 1275.09 361.779 1271.54 Q363.608 1267.98 363.608 1260.87 Q363.608 1253.74 361.779 1250.2 Q359.973 1246.64 356.339 1246.64 M356.339 1242.93 Q362.149 1242.93 365.205 1247.54 Q368.284 1252.12 368.284 1260.87 Q368.284 1269.6 365.205 1274.21 Q362.149 1278.79 356.339 1278.79 Q350.529 1278.79 347.45 1274.21 Q344.395 1269.6 344.395 1260.87 Q344.395 1252.12 347.45 1247.54 Q350.529 1242.93 356.339 1242.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M290.043 1016.43 L306.363 1016.43 L306.363 1020.36 L284.418 1020.36 L284.418 1016.43 Q287.08 1013.67 291.664 1009.04 Q296.27 1004.39 297.451 1003.05 Q299.696 1000.53 300.576 998.79 Q301.478 997.031 301.478 995.341 Q301.478 992.587 299.534 990.851 Q297.613 989.114 294.511 989.114 Q292.312 989.114 289.858 989.878 Q287.427 990.642 284.65 992.193 L284.65 987.471 Q287.474 986.337 289.927 985.758 Q292.381 985.179 294.418 985.179 Q299.789 985.179 302.983 987.864 Q306.177 990.55 306.177 995.04 Q306.177 997.17 305.367 999.091 Q304.58 1000.99 302.474 1003.58 Q301.895 1004.25 298.793 1007.47 Q295.691 1010.67 290.043 1016.43 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M316.224 985.804 L334.58 985.804 L334.58 989.739 L320.506 989.739 L320.506 998.212 Q321.524 997.864 322.543 997.702 Q323.562 997.517 324.58 997.517 Q330.367 997.517 333.747 1000.69 Q337.126 1003.86 337.126 1009.28 Q337.126 1014.86 333.654 1017.96 Q330.182 1021.04 323.862 1021.04 Q321.687 1021.04 319.418 1020.67 Q317.173 1020.29 314.765 1019.55 L314.765 1014.86 Q316.849 1015.99 319.071 1016.54 Q321.293 1017.1 323.77 1017.1 Q327.774 1017.1 330.112 1014.99 Q332.45 1012.89 332.45 1009.28 Q332.45 1005.67 330.112 1003.56 Q327.774 1001.45 323.77 1001.45 Q321.895 1001.45 320.02 1001.87 Q318.168 1002.29 316.224 1003.17 L316.224 985.804 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M356.339 988.883 Q352.728 988.883 350.899 992.448 Q349.094 995.989 349.094 1003.12 Q349.094 1010.23 350.899 1013.79 Q352.728 1017.33 356.339 1017.33 Q359.973 1017.33 361.779 1013.79 Q363.608 1010.23 363.608 1003.12 Q363.608 995.989 361.779 992.448 Q359.973 988.883 356.339 988.883 M356.339 985.179 Q362.149 985.179 365.205 989.786 Q368.284 994.369 368.284 1003.12 Q368.284 1011.85 365.205 1016.45 Q362.149 1021.04 356.339 1021.04 Q350.529 1021.04 347.45 1016.45 Q344.395 1011.85 344.395 1003.12 Q344.395 994.369 347.45 989.786 Q350.529 985.179 356.339 985.179 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M286.062 728.05 L304.418 728.05 L304.418 731.985 L290.344 731.985 L290.344 740.457 Q291.363 740.11 292.381 739.948 Q293.4 739.763 294.418 739.763 Q300.205 739.763 303.585 742.934 Q306.964 746.105 306.964 751.522 Q306.964 757.101 303.492 760.202 Q300.02 763.281 293.701 763.281 Q291.525 763.281 289.256 762.911 Q287.011 762.54 284.603 761.8 L284.603 757.101 Q286.687 758.235 288.909 758.79 Q291.131 759.346 293.608 759.346 Q297.613 759.346 299.951 757.239 Q302.288 755.133 302.288 751.522 Q302.288 747.911 299.951 745.804 Q297.613 743.698 293.608 743.698 Q291.733 743.698 289.858 744.114 Q288.006 744.531 286.062 745.411 L286.062 728.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M326.177 731.128 Q322.566 731.128 320.737 734.693 Q318.932 738.235 318.932 745.364 Q318.932 752.471 320.737 756.036 Q322.566 759.577 326.177 759.577 Q329.811 759.577 331.617 756.036 Q333.446 752.471 333.446 745.364 Q333.446 738.235 331.617 734.693 Q329.811 731.128 326.177 731.128 M326.177 727.425 Q331.987 727.425 335.043 732.031 Q338.122 736.615 338.122 745.364 Q338.122 754.091 335.043 758.698 Q331.987 763.281 326.177 763.281 Q320.367 763.281 317.288 758.698 Q314.233 754.091 314.233 745.364 Q314.233 736.615 317.288 732.031 Q320.367 727.425 326.177 727.425 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M356.339 731.128 Q352.728 731.128 350.899 734.693 Q349.094 738.235 349.094 745.364 Q349.094 752.471 350.899 756.036 Q352.728 759.577 356.339 759.577 Q359.973 759.577 361.779 756.036 Q363.608 752.471 363.608 745.364 Q363.608 738.235 361.779 734.693 Q359.973 731.128 356.339 731.128 M356.339 727.425 Q362.149 727.425 365.205 732.031 Q368.284 736.615 368.284 745.364 Q368.284 754.091 365.205 758.698 Q362.149 763.281 356.339 763.281 Q350.529 763.281 347.45 758.698 Q344.395 754.091 344.395 745.364 Q344.395 736.615 347.45 732.031 Q350.529 727.425 356.339 727.425 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M284.835 470.295 L307.057 470.295 L307.057 472.286 L294.511 504.855 L289.627 504.855 L301.432 474.23 L284.835 474.23 L284.835 470.295 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M316.224 470.295 L334.58 470.295 L334.58 474.23 L320.506 474.23 L320.506 482.703 Q321.524 482.355 322.543 482.193 Q323.562 482.008 324.58 482.008 Q330.367 482.008 333.747 485.179 Q337.126 488.351 337.126 493.767 Q337.126 499.346 333.654 502.448 Q330.182 505.527 323.862 505.527 Q321.687 505.527 319.418 505.156 Q317.173 504.786 314.765 504.045 L314.765 499.346 Q316.849 500.48 319.071 501.036 Q321.293 501.591 323.77 501.591 Q327.774 501.591 330.112 499.485 Q332.45 497.378 332.45 493.767 Q332.45 490.156 330.112 488.05 Q327.774 485.943 323.77 485.943 Q321.895 485.943 320.02 486.36 Q318.168 486.777 316.224 487.656 L316.224 470.295 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M356.339 473.374 Q352.728 473.374 350.899 476.939 Q349.094 480.48 349.094 487.61 Q349.094 494.716 350.899 498.281 Q352.728 501.823 356.339 501.823 Q359.973 501.823 361.779 498.281 Q363.608 494.716 363.608 487.61 Q363.608 480.48 361.779 476.939 Q359.973 473.374 356.339 473.374 M356.339 469.67 Q362.149 469.67 365.205 474.277 Q368.284 478.86 368.284 487.61 Q368.284 496.337 365.205 500.943 Q362.149 505.527 356.339 505.527 Q350.529 505.527 347.45 500.943 Q344.395 496.337 344.395 487.61 Q344.395 478.86 347.45 474.277 Q350.529 469.67 356.339 469.67 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M256.664 243.166 L264.303 243.166 L264.303 216.8 L255.992 218.467 L255.992 214.207 L264.256 212.541 L268.932 212.541 L268.932 243.166 L276.571 243.166 L276.571 247.101 L256.664 247.101 L256.664 243.166 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M296.015 215.619 Q292.404 215.619 290.576 219.184 Q288.77 222.726 288.77 229.855 Q288.77 236.962 290.576 240.527 Q292.404 244.068 296.015 244.068 Q299.65 244.068 301.455 240.527 Q303.284 236.962 303.284 229.855 Q303.284 222.726 301.455 219.184 Q299.65 215.619 296.015 215.619 M296.015 211.916 Q301.826 211.916 304.881 216.522 Q307.96 221.106 307.96 229.855 Q307.96 238.582 304.881 243.189 Q301.826 247.772 296.015 247.772 Q290.205 247.772 287.127 243.189 Q284.071 238.582 284.071 229.855 Q284.071 221.106 287.127 216.522 Q290.205 211.916 296.015 211.916 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M326.177 215.619 Q322.566 215.619 320.737 219.184 Q318.932 222.726 318.932 229.855 Q318.932 236.962 320.737 240.527 Q322.566 244.068 326.177 244.068 Q329.811 244.068 331.617 240.527 Q333.446 236.962 333.446 229.855 Q333.446 222.726 331.617 219.184 Q329.811 215.619 326.177 215.619 M326.177 211.916 Q331.987 211.916 335.043 216.522 Q338.122 221.106 338.122 229.855 Q338.122 238.582 335.043 243.189 Q331.987 247.772 326.177 247.772 Q320.367 247.772 317.288 243.189 Q314.233 238.582 314.233 229.855 Q314.233 221.106 317.288 216.522 Q320.367 211.916 326.177 211.916 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M356.339 215.619 Q352.728 215.619 350.899 219.184 Q349.094 222.726 349.094 229.855 Q349.094 236.962 350.899 240.527 Q352.728 244.068 356.339 244.068 Q359.973 244.068 361.779 240.527 Q363.608 236.962 363.608 229.855 Q363.608 222.726 361.779 219.184 Q359.973 215.619 356.339 215.619 M356.339 211.916 Q362.149 211.916 365.205 216.522 Q368.284 221.106 368.284 229.855 Q368.284 238.582 365.205 243.189 Q362.149 247.772 356.339 247.772 Q350.529 247.772 347.45 243.189 Q344.395 238.582 344.395 229.855 Q344.395 221.106 347.45 216.522 Q350.529 211.916 356.339 211.916 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip402)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.821 4017.76,229.821 \"/>\n<polyline clip-path=\"url(#clip402)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1249.27 457.123,1249.13 457.691,1248.9 458.259,1248.56 458.828,1247.18 459.396,1246.79 459.964,1246.3 460.533,1244.73 461.101,1244.14 461.669,1243.46 462.238,1242.7 462.806,1241.85 463.375,1240.9 463.943,1238.84 464.511,1237.71 465.08,1236.49 465.648,1235.12 466.216,1232.64 466.785,1231.02 467.353,1229.32 467.921,1226.45 468.49,1224.45 469.058,1221.32 469.626,1219.05 470.195,1216.65 470.763,1214.08 471.331,1211.31 471.9,1208.39 472.468,1204.25 473.036,1200.94 473.605,1197.39 474.173,1193.69 474.741,1189.79 475.31,1182.6 475.878,1178.36 476.446,1173.9 477.015,1168.19 477.583,1161.24 478.152,1155.18 478.72,1149.86 479.288,1142.33 479.857,1136.61 480.425,1128.67 480.993,1120.39 481.562,1113.04 482.13,1106.53 482.698,1099.75 483.267,1092.78 483.835,1085.56 484.403,1078.13 484.972,1067.43 485.54,1059.7 486.108,1051.9 486.677,1043.81 487.245,1032.45 487.813,1021.94 488.382,1013.57 488.95,1003 489.518,992.326 490.087,981.636 490.655,971.87 491.224,961.946 491.792,951.848 492.36,938.618 492.929,927.324 493.497,917.201 494.065,904.002 494.634,893.909 495.202,883.692 495.77,873.37 496.339,864.153 496.907,849.631 497.475,839.497 498.044,831.498 498.612,822.125 499.18,812.764 499.749,802.534 500.317,793.329 500.885,781.035 501.454,770.836 502.022,761.868 502.59,751.833 503.159,741.669 503.727,731.433 504.295,719.515 504.864,709.778 505.432,702.196 506.001,692.523 506.569,680.819 507.137,667.394 507.706,659.474 508.274,648.322 508.842,638.56 509.411,628.89 509.979,619.428 510.547,610.07 511.116,601.974 511.684,594.945 512.252,585.148 512.821,575.287 513.389,567.796 513.957,561.282 514.526,548.911 515.094,543.137 515.662,535.088 516.231,529.38 516.799,520.678 517.367,512.129 517.936,507.016 518.504,500.825 519.072,492.559 519.641,486.604 520.209,481.842 520.778,474.994 521.346,470.273 521.914,462.525 522.483,456.257 523.051,450.022 523.619,444.962 524.188,441.054 524.756,435.193 525.324,431.521 525.893,425.713 526.461,417.91 527.029,412.721 527.598,407.583 528.166,403.766 528.734,399.089 529.303,395.506 529.871,393.848 530.439,389.226 531.008,385.659 531.576,382.16 532.144,379.955 532.713,374.273 533.281,372.901 533.85,369.46 534.418,367.121 534.986,366.918 535.555,364.373 536.123,362.045 536.691,359.702 537.26,355.311 537.828,351.819 538.396,349.477 538.965,347.335 539.533,347.38 540.101,342.947 540.67,340.685 541.238,338.538 541.806,336.401 542.375,334.282 542.943,329.003 543.511,325.068 544.08,322.274 544.648,316.66 545.216,314.391 545.785,310.13 546.353,309.008 546.921,309.018 547.49,306.919 548.058,304.817 548.627,302.878 549.195,302.853 549.763,302.821 550.332,298.6 550.9,297.79 551.468,297.961 552.037,297.96 552.605,296.814 553.173,295.727 553.742,294.581 554.31,295.59 554.878,293.205 555.447,290.922 556.015,290.877 556.583,286.708 557.152,285.05 557.72,283.275 558.288,281.457 558.857,280.57 559.425,277.744 559.993,275.961 560.562,276.49 561.13,275.884 561.698,275.286 562.267,273.561 562.835,270.891 563.404,270.425 563.972,270.061 564.54,270.576 565.109,270.087 565.677,269.533 566.245,269.137 566.814,265.583 567.382,266.2 567.95,265.896 568.519,264.466 569.087,262.074 569.655,258.623 570.224,259.927 570.792,258.779 571.36,258.931 571.929,258.921 572.497,257.505 573.065,256.472 573.634,255.373 574.202,256.479 574.77,256.277 575.339,257.221 575.907,257.152 576.476,255.888 577.044,257.867 577.612,257.552 578.181,255.118 578.749,254.12 579.317,253.092 579.886,253.01 580.454,252.82 581.022,251.858 581.591,250.784 582.159,250.767 582.727,251.738 583.296,250.558 583.864,250.386 584.432,249.263 585.001,249.066 585.569,247.882 586.137,247.943 586.706,247.106 587.274,246.99 587.842,248.228 588.411,247.335 588.979,246.515 589.547,245.504 590.116,246.702 590.684,244.78 591.253,242.878 591.821,242.918 592.389,242.144 592.958,239.443 593.526,240.042 594.094,243.512 594.663,240.512 595.231,242.009 595.799,242.496 596.368,243.77 596.936,243.689 597.504,243.731 598.073,243.961 598.641,244.165 599.209,242.311 599.778,243.583 600.346,243.7 600.914,242.014 601.483,243.326 602.051,244.57 602.619,245.836 603.188,244.798 603.756,245.959 604.325,244.986 604.893,245.862 605.461,245.781 606.03,245.678 606.598,246.733 607.166,247.47 607.735,250.26 608.303,249.518 608.871,249.016 609.44,247.614 610.008,247.457 610.576,246.048 611.145,246.515 611.713,244.962 612.281,248.559 612.85,249.211 613.418,248.834 613.986,248.185 614.555,246.565 615.123,245.928 615.691,244.589 616.26,243.071 616.828,240.782 617.396,241.51 617.965,240.257 618.533,240.213 619.102,238.917 619.67,239.99 620.238,238.863 620.807,240.076 621.375,239.813 621.943,240.795 622.512,239.62 623.08,239.212 623.648,238.102 624.217,238.868 624.785,238.742 625.353,237.42 625.922,237.309 626.49,235.142 627.058,237.456 627.627,236.348 628.195,236.641 628.763,234.627 629.332,233.709 629.9,233.822 630.468,234.208 631.037,233.301 631.605,231.337 632.173,232.95 632.742,233.306 633.31,232.466 633.879,231.788 634.447,232.032 635.015,233.338 635.584,232.461 636.152,232.904 636.72,231.174 637.289,231.426 637.857,229.54 638.425,229.163 638.994,231.696 639.562,235.169 640.13,233.386 640.699,234.742 641.267,233.873 641.835,234.101 642.404,234.229 642.972,232.294 643.54,232.637 644.109,234.861 644.677,234.98 645.245,234.242 645.814,232.529 646.382,233.983 646.951,233.177 647.519,232.548 648.087,232.874 648.656,231.118 649.224,231.459 649.792,231.948 650.361,232.567 650.929,232.862 651.497,232.242 652.066,231.573 652.634,232.044 653.202,232.465 653.771,232.768 654.339,231.977 654.907,232.425 655.476,230.713 656.044,232.088 656.612,231.429 657.181,231.839 657.749,233.078 658.317,234.46 658.886,236.683 659.454,236.622 660.022,235.415 660.591,238.729 661.159,236.573 661.728,235.678 662.296,235.768 662.864,234.881 663.433,234.095 664.001,234.02 664.569,234.321 665.138,234.423 665.706,232.538 666.274,233.921 666.843,236.136 667.411,236.109 667.979,233.065 668.548,232.335 669.116,231.331 669.684,231.537 670.253,232.087 670.821,233.447 671.389,232.602 671.958,233.825 672.526,233.776 673.094,233.966 673.663,233.126 674.231,234.408 674.799,234.503 675.368,233.553 675.936,234.709 676.505,233 677.073,231.305 677.641,230.736 678.21,230.362 678.778,229.804 679.346,230.282 679.915,231.773 680.483,232.877 681.051,235.004 681.62,235.104 682.188,235.139 682.756,235.041 683.325,234.133 683.893,234.272 684.461,234.507 685.03,233.603 685.598,231.553 686.166,232.732 686.735,232.988 687.303,232.13 687.871,230.091 688.44,230.339 689.008,227.825 689.577,227.166 690.145,226.734 690.713,227.394 691.282,226.978 691.85,228.558 692.418,229.929 692.987,231.407 693.555,230.659 694.123,231.818 694.692,232.179 695.26,233.379 695.828,234.48 696.397,234.479 696.965,236.778 697.533,233.758 698.102,234.856 698.67,234.071 699.238,233.205 699.807,233.318 700.375,233.609 700.943,233.885 701.512,237.385 702.08,237.153 702.648,236.287 703.217,233.79 703.785,234.814 704.354,232.936 704.922,233.063 705.49,235.381 706.059,235.252 706.627,235.18 707.195,236.064 707.764,235.817 708.332,234.804 708.9,236.785 709.469,235.638 710.037,235.575 710.605,237.431 711.174,237.189 711.742,237.999 712.31,237.704 712.879,238.404 713.447,234.93 714.015,236.738 714.584,235.181 715.152,232.121 715.72,230.072 716.289,232.456 716.857,232.46 717.425,232.644 717.994,231.669 718.562,232.769 719.131,231.857 719.699,231.88 720.267,234.96 720.836,234.783 721.404,234.609 721.972,233.609 722.541,233.537 723.109,232.506 723.677,234.872 724.246,233.885 724.814,234.745 725.382,233.698 725.951,234.703 726.519,233.605 727.087,233.578 727.656,232.52 728.224,231.771 728.792,232.887 729.361,234.98 729.929,234.779 730.497,233.645 731.066,231.434 731.634,231.576 732.203,232.779 732.771,231.849 733.339,229.801 733.908,229.739 734.476,231.164 735.044,232.294 735.613,231.25 736.181,229.541 736.749,227.811 737.318,225.008 737.886,225.518 738.454,226.237 739.023,226.555 739.591,228.029 740.159,228.196 740.728,228.61 741.296,229.946 741.864,230.019 742.433,230.24 743.001,230.528 743.569,229.725 744.138,226.639 744.706,228.012 745.274,229.238 745.843,229.657 746.411,231.053 746.98,231.382 747.548,230.55 748.116,232.993 748.685,235.199 749.253,235.158 749.821,234.143 750.39,236.106 750.958,239.012 751.526,235.54 752.095,234.426 752.663,232.13 753.231,230.209 753.8,230.334 754.368,229.472 754.936,228.836 755.505,229.148 756.073,229.524 756.641,230.683 757.21,228.788 757.778,230.062 758.346,228.079 758.915,228.434 759.483,228.633 760.052,230.307 760.62,230.207 761.188,229.292 761.757,231.636 762.325,230.708 762.893,230.911 763.462,234.086 764.03,232.901 764.598,233.858 765.167,231.655 765.735,232.661 766.303,233.913 766.872,235.721 767.44,235.491 768.008,237.318 768.577,235.753 769.145,235.281 769.713,234.15 770.282,231.906 770.85,230.862 771.418,232.003 771.987,230.065 772.555,229.17 773.123,230.509 773.692,230.586 774.26,228.503 774.829,228.659 775.397,228.824 775.965,228.958 776.534,228.105 777.102,228.244 777.67,229.623 778.239,230.87 778.807,230.621 779.375,230.711 779.944,231.979 780.512,233.212 781.08,232.217 781.649,232.163 782.217,232.221 782.785,233.316 783.354,234.151 783.922,233.952 784.49,234.788 785.059,233.543 785.627,233.48 786.195,233.477 786.764,233.398 787.332,234.1 787.9,232.81 788.469,233.625 789.037,234.338 789.606,235.049 790.174,233.695 790.742,232.521 791.311,232.581 791.879,234.579 792.447,232.244 793.016,229.88 793.584,230.83 794.152,229.67 794.721,228.627 795.289,226.81 795.857,226.01 796.426,226.609 796.994,225.99 797.562,225.316 798.131,226.046 798.699,227.592 799.267,226.859 799.836,228.266 800.404,228.862 800.972,229.243 801.541,230.605 802.109,231.989 802.678,232.058 803.246,234.289 803.814,232.203 804.383,231.094 804.951,231.157 805.519,231.944 806.088,230.769 806.656,230.95 807.224,228.954 807.793,229.293 808.361,228.666 808.929,230.889 809.498,232.996 810.066,233.077 810.634,232.874 811.203,232.906 811.771,233.562 812.339,234.515 812.908,233.313 813.476,233.1 814.044,234.029 814.613,232.867 815.181,232.916 815.749,230.798 816.318,232.788 816.886,232.908 817.455,235.044 818.023,233.574 818.591,232.651 819.16,234.449 819.728,234.373 820.296,234.123 820.865,232.763 821.433,232.585 822.001,232.466 822.57,232.439 823.138,233.24 823.706,232.05 824.275,232.915 824.843,237.035 825.411,235.445 825.98,232.891 826.548,232.658 827.116,230.218 827.685,229.052 828.253,228.98 828.821,229.077 829.39,231.145 829.958,230.95 830.526,230.728 831.095,230.616 831.663,230.812 832.232,230.917 832.8,228.838 833.368,229.015 833.937,229.892 834.505,229.937 835.073,229.946 835.642,230.837 836.21,229.629 836.778,232.698 837.347,233.477 837.915,233.181 838.483,229.853 839.052,231.761 839.62,232.548 840.188,233.26 840.757,234.075 841.325,230.802 841.893,229.791 842.462,228.737 843.03,228.865 843.598,227.833 844.167,230.075 844.735,229.092 845.304,226.989 845.872,228.268 846.44,228.401 847.009,228.421 847.577,225.534 848.145,223.723 848.714,225.024 849.282,225.577 849.85,225.933 850.419,227.167 850.987,227.369 851.555,227.521 852.124,226.703 852.692,227.199 853.26,229.477 853.829,229.416 854.397,230.456 854.965,229.379 855.534,228.573 856.102,230.647 856.67,232.738 857.239,233.29 857.807,233.079 858.375,232.85 858.944,232.645 859.512,233.629 860.081,234.403 860.649,234.088 861.217,233.829 861.786,233.567 862.354,233.528 862.922,233.385 863.491,234.35 864.059,232.825 864.627,232.736 865.196,231.565 865.764,231.322 866.332,232.378 866.901,233.122 867.469,232.973 868.037,232.761 868.606,230.553 869.174,231.393 869.742,233.289 870.311,233.111 870.879,231.851 871.447,229.328 872.016,229.507 872.584,231.385 873.152,230.258 873.721,228.142 874.289,227.349 874.858,229.47 875.426,229.474 875.994,227.402 876.563,226.532 877.131,227.789 877.699,226.897 878.268,226.135 878.836,228.426 879.404,229.822 879.973,228.85 880.541,227.279 881.109,228.76 881.678,228.88 882.246,229.024 882.814,231.05 883.383,231.917 883.951,231.662 884.519,230.572 885.088,228.475 885.656,228.651 886.224,226.772 886.793,225.941 887.361,224.006 887.93,224.434 888.498,225.059 889.066,225.655 889.635,228.995 890.203,229.402 890.771,230.518 891.34,232.748 891.908,232.586 892.476,229.221 893.045,228.355 893.613,228.682 894.181,226.752 894.75,226.069 895.318,226.363 895.886,226.63 896.455,224.82 897.023,224.195 897.591,224.479 898.16,225.095 898.728,224.496 899.296,225.937 899.865,225.484 900.433,227.006 901.001,227.551 901.57,228.828 902.138,229.06 902.707,231.202 903.275,232.358 903.843,233.354 904.412,235.21 904.98,234.095 905.548,234.027 906.117,235.145 906.685,236.008 907.253,235.619 907.822,235.423 908.39,236.217 908.958,235.82 909.527,232.337 910.095,232.536 910.663,233.519 911.232,234.398 911.8,233.102 912.368,234.017 912.937,234.649 913.505,235.515 914.073,236.488 914.642,238.399 915.21,238.783 915.779,238.194 916.347,237.564 916.915,237.683 917.484,236.258 918.052,234.849 918.62,234.507 919.189,232.01 919.757,230.72 920.325,230.637 920.894,230.602 921.462,230.389 922.03,228.252 922.599,229.535 923.167,230.703 923.735,231.783 924.304,232.519 924.872,233.112 925.44,234.241 926.009,234.658 926.577,232.37 927.145,231.2 927.714,232.134 928.282,230.623 928.85,228.408 929.419,228.547 929.987,226.569 930.556,228.928 931.124,228.919 931.692,226.982 932.261,228.191 932.829,227.057 933.397,227.296 933.966,227.485 934.534,228.656 935.102,228.733 935.671,229.956 936.239,230.019 936.807,228.842 937.376,227.956 937.944,227.284 938.512,228.4 939.081,230.227 939.649,231.229 940.217,228.013 940.786,227.915 941.354,227.074 941.922,227.234 942.491,226.298 943.059,227.514 943.627,224.549 944.196,228.006 944.764,228.246 945.333,227.389 945.901,228.569 946.469,226.755 947.038,226.943 947.606,227.032 948.174,225.281 948.743,227.535 949.311,226.567 949.879,226.548 950.448,226.951 951.016,226.22 951.584,226.66 952.153,228.003 952.721,227.024 953.289,227.328 953.858,227.597 954.426,228.945 954.994,227.068 955.563,228.259 956.131,228.374 956.699,229.849 957.268,229.767 957.836,228.886 958.405,227.905 958.973,229.091 959.541,229.994 960.11,229.162 960.678,230.4 961.246,231.309 961.815,231.259 962.383,232.17 962.951,231.218 963.52,229.94 964.088,232.085 964.656,229.247 965.225,231.352 965.793,229.435 966.361,227.619 966.93,228.965 967.498,227.01 968.066,227.177 968.635,229.653 969.203,230.735 969.771,230.989 970.34,230.988 970.908,230.005 971.476,230.045 972.045,231.328 972.613,231.397 973.182,233.487 973.75,233.422 974.318,233.202 974.887,233.014 975.455,233.795 976.023,232.505 976.592,236.68 977.16,236.16 977.728,232.653 978.297,234.746 978.865,232.533 979.433,231.214 980.002,228.949 980.57,231.177 981.138,230.185 981.707,229.362 982.275,231.416 982.843,229.346 983.412,230.542 983.98,232.631 984.548,236.318 985.117,235.839 985.685,233.251 986.253,234.831 986.822,233.53 987.39,232.147 987.959,229.98 988.527,232.014 989.095,232.984 989.664,231.791 990.232,231.545 990.8,232.482 991.369,232.109 991.937,231.226 992.505,229.931 993.074,228.835 993.642,229.836 994.21,228.801 994.779,231.851 995.347,234.812 995.915,234.638 996.484,231.438 997.052,232.477 997.62,233.201 998.189,231.881 998.757,229.539 999.325,230.639 999.894,230.7 1000.46,230.638 1001.03,231.294 1001.6,230.02 1002.17,229.945 1002.74,228.776 1003.3,227.995 1003.87,229.122 1004.44,227.963 1005.01,229.052 1005.58,229.923 1006.15,227.852 1006.71,225.904 1007.28,226.213 1007.85,227.876 1008.42,228.151 1008.99,226.163 1009.56,226.247 1010.12,224.395 1010.69,224.778 1011.26,224.949 1011.83,224.321 1012.4,225.59 1012.97,226.004 1013.53,226.081 1014.1,226.481 1014.67,231.754 1015.24,231.447 1015.81,231.56 1016.38,231.312 1016.94,232.223 1017.51,232.057 1018.08,231.838 1018.65,233.805 1019.22,233.696 1019.79,234.447 1020.35,232.889 1020.92,232.39 1021.49,230.975 1022.06,232.889 1022.63,232.77 1023.2,231.619 1023.76,232.334 1024.33,231.1 1024.9,228.867 1025.47,229.853 1026.04,230.932 1026.61,231.878 1027.17,229.798 1027.74,227.608 1028.31,227.968 1028.88,228.267 1029.45,227.399 1030.02,227.479 1030.58,227.588 1031.15,227.906 1031.72,228.944 1032.29,230.009 1032.86,228.892 1033.43,228.845 1033.99,228.869 1034.56,226.788 1035.13,228.134 1035.7,229.405 1036.27,227.398 1036.84,227.45 1037.4,227.84 1037.97,228.087 1038.54,229.314 1039.11,227.292 1039.68,227.555 1040.25,230.786 1040.81,230.961 1041.38,231.988 1041.95,234.048 1042.52,232.627 1043.09,233.479 1043.66,231.051 1044.22,231.014 1044.79,233.021 1045.36,231.846 1045.93,231.506 1046.5,231.352 1047.07,230.276 1047.63,230.323 1048.2,230.16 1048.77,230.227 1049.34,230.327 1049.91,233.575 1050.48,233.127 1051.05,234.724 1051.61,234.324 1052.18,232.885 1052.75,231.441 1053.32,232.261 1053.89,230.172 1054.46,227.109 1055.02,227.344 1055.59,226.449 1056.16,226.478 1056.73,227.76 1057.3,226.973 1057.87,221.974 1058.43,222.796 1059,221.019 1059.57,223.957 1060.14,224.477 1060.71,226.109 1061.28,226.667 1061.84,228.672 1062.41,229.94 1062.98,231.167 1063.55,230.193 1064.12,231.212 1064.69,231.212 1065.25,233.339 1065.82,233.899 1066.39,232.596 1066.96,232.417 1067.53,234.142 1068.1,232.943 1068.66,232.651 1069.23,235.719 1069.8,237.395 1070.37,236.873 1070.94,237.343 1071.51,237.709 1072.07,237.077 1072.64,234.568 1073.21,232.148 1073.78,231.156 1074.35,229.959 1074.92,229.66 1075.48,227.643 1076.05,226.74 1076.62,226.872 1077.19,228.085 1077.76,228.254 1078.33,226.353 1078.89,225.52 1079.46,225.793 1080.03,225.957 1080.6,227.228 1081.17,227.627 1081.74,228.794 1082.3,227.772 1082.87,227.999 1083.44,228.314 1084.01,230.446 1084.58,231.479 1085.15,232.562 1085.71,232.374 1086.28,233.278 1086.85,233.033 1087.42,234.924 1087.99,232.523 1088.56,231.401 1089.12,232.412 1089.69,232.919 1090.26,233.898 1090.83,233.668 1091.4,233.285 1091.97,234.051 1092.53,233.575 1093.1,233.322 1093.67,232.129 1094.24,231.908 1094.81,229.66 1095.38,227.32 1095.94,227.272 1096.51,227.509 1097.08,229.587 1097.65,229.494 1098.22,231.476 1098.79,231.348 1099.35,231.151 1099.92,230.778 1100.49,229.579 1101.06,228.437 1101.63,228.451 1102.2,228.498 1102.76,229.702 1103.33,228.895 1103.9,229.031 1104.47,230.032 1105.04,229.737 1105.61,228.653 1106.17,229.625 1106.74,229.776 1107.31,227.625 1107.88,229.73 1108.45,228.636 1109.02,228.657 1109.58,228.68 1110.15,227.792 1110.72,226.866 1111.29,227.088 1111.86,228.423 1112.43,228.586 1112.99,227.417 1113.56,226.352 1114.13,226.744 1114.7,225.959 1115.27,226.25 1115.84,226.6 1116.4,228.912 1116.97,229.987 1117.54,230.275 1118.11,226.054 1118.68,223.359 1119.25,225.95 1119.81,226.549 1120.38,229.052 1120.95,231.431 1121.52,230.069 1122.09,230.289 1122.66,230.335 1123.23,230.391 1123.79,229.448 1124.36,229.575 1124.93,227.493 1125.5,228.673 1126.07,227.808 1126.64,227.96 1127.2,228.06 1127.77,229.377 1128.34,229.418 1128.91,227.089 1129.48,225.277 1130.05,228.716 1130.61,226.797 1131.18,224.937 1131.75,224.315 1132.32,225.807 1132.89,223.205 1133.46,223.771 1134.02,226.331 1134.59,226.694 1135.16,228.125 1135.73,230.359 1136.3,231.597 1136.87,231.711 1137.43,232.519 1138,232.419 1138.57,230.823 1139.14,231.741 1139.71,232.689 1140.28,232.587 1140.84,232.411 1141.41,229.27 1141.98,230.443 1142.55,230.489 1143.12,228.321 1143.69,228.424 1144.25,228.515 1144.82,230.808 1145.39,230.675 1145.96,231.821 1146.53,232.655 1147.1,232.674 1147.66,233.652 1148.23,235.368 1148.8,235.995 1149.37,238.714 1149.94,236.003 1150.51,235.735 1151.07,237.129 1151.64,234.253 1152.21,233.876 1152.78,234.533 1153.35,234.038 1153.92,233.64 1154.48,232.467 1155.05,233.421 1155.62,231.936 1156.19,231.94 1156.76,230.722 1157.33,229.555 1157.89,229.512 1158.46,228.486 1159.03,227.547 1159.6,227.681 1160.17,229.964 1160.74,230.121 1161.3,231.001 1161.87,230.86 1162.44,230.689 1163.01,231.711 1163.58,231.344 1164.15,230.126 1164.71,231.305 1165.28,232.246 1165.85,231.933 1166.42,231.564 1166.99,230.355 1167.56,229.268 1168.12,232.331 1168.69,230.249 1169.26,230.069 1169.83,231.067 1170.4,229.857 1170.97,228.877 1171.53,229.777 1172.1,227.744 1172.67,229.932 1173.24,228.806 1173.81,228.802 1174.38,229.55 1174.94,230.439 1175.51,227.221 1176.08,228.377 1176.65,226.526 1177.22,225.712 1177.79,227.979 1178.35,228.354 1178.92,229.594 1179.49,229.559 1180.06,228.589 1180.63,226.687 1181.2,226.626 1181.76,228.85 1182.33,227.693 1182.9,227.691 1183.47,227.76 1184.04,227.775 1184.61,225.775 1185.17,227.862 1185.74,228.084 1186.31,227.252 1186.88,226.474 1187.45,226.693 1188.02,226.819 1188.58,227.986 1189.15,226.33 1189.72,226.718 1190.29,224.857 1190.86,225.03 1191.43,225.394 1192,224.42 1192.56,225.044 1193.13,223.32 1193.7,225.89 1194.27,228.12 1194.84,227.323 1195.41,227.456 1195.97,227.508 1196.54,230.943 1197.11,229.774 1197.68,231.103 1198.25,233.057 1198.82,229.885 1199.38,231.177 1199.95,232.107 1200.52,229.068 1201.09,231.49 1201.66,232.489 1202.23,231.169 1202.79,230.06 1203.36,231.263 1203.93,229.546 1204.5,228.621 1205.07,232.843 1205.64,230.735 1206.2,231.538 1206.77,229.324 1207.34,230.419 1207.91,230.581 1208.48,228.653 1209.05,227.985 1209.61,229.137 1210.18,228.372 1210.75,228.734 1211.32,233.015 1211.89,232.873 1212.46,229.341 1213.02,230.459 1213.59,233.541 1214.16,232.231 1214.73,232.876 1215.3,233.86 1215.87,234.694 1216.43,233.318 1217,232.173 1217.57,230.054 1218.14,228.69 1218.71,230.815 1219.28,230.546 1219.84,231.739 1220.41,229.61 1220.98,230.752 1221.55,230.565 1222.12,229.503 1222.69,229.547 1223.25,230.791 1223.82,230.661 1224.39,232.571 1224.96,233.055 1225.53,234.9 1226.1,234.33 1226.66,234.062 1227.23,234.614 1227.8,234.238 1228.37,234.072 1228.94,232.84 1229.51,232.775 1230.07,234.7 1230.64,233.401 1231.21,232.825 1231.78,232.515 1232.35,232.268 1232.92,231.945 1233.48,232.976 1234.05,230.942 1234.62,229.649 1235.19,229.59 1235.76,226.608 1236.33,226.747 1236.89,229.16 1237.46,230.209 1238.03,229.09 1238.6,226.908 1239.17,226.979 1239.74,229.141 1240.3,227.345 1240.87,227.443 1241.44,230.757 1242.01,231.807 1242.58,231.84 1243.15,231.525 1243.71,234.361 1244.28,234.8 1244.85,232.459 1245.42,228.441 1245.99,229.507 1246.56,229.252 1247.12,228.198 1247.69,228.078 1248.26,227.159 1248.83,225.258 1249.4,224.413 1249.97,224.565 1250.53,225.018 1251.1,224.394 1251.67,224.626 1252.24,224.804 1252.81,225.261 1253.38,225.73 1253.94,227.024 1254.51,225.407 1255.08,226.399 1255.65,227.896 1256.22,228.188 1256.79,230.217 1257.35,229.082 1257.92,230.136 1258.49,228.083 1259.06,229.229 1259.63,230.082 1260.2,227.007 1260.76,227.163 1261.33,226.419 1261.9,227.879 1262.47,230.399 1263.04,230.352 1263.61,229.251 1264.18,230.095 1264.74,231.169 1265.31,228.989 1265.88,229.133 1266.45,225.921 1267.02,224.058 1267.59,224.52 1268.15,226.011 1268.72,227.403 1269.29,228.577 1269.86,228.733 1270.43,230.2 1271,231.246 1271.56,229.083 1272.13,230.275 1272.7,230.372 1273.27,233.388 1273.84,233.336 1274.41,233.291 1274.97,233.099 1275.54,231.888 1276.11,228.753 1276.68,226.682 1277.25,225.849 1277.82,226.993 1278.38,228.23 1278.95,229.316 1279.52,233.356 1280.09,233.094 1280.66,234.004 1281.23,234.712 1281.79,235.712 1282.36,234.399 1282.93,233.965 1283.5,234.76 1284.07,234.318 1284.64,234.964 1285.2,233.629 1285.77,233.333 1286.34,230.739 1286.91,228.625 1287.48,227.871 1288.05,227.897 1288.61,228.004 1289.18,227.073 1289.75,227.348 1290.32,225.396 1290.89,226.696 1291.46,229.006 1292.02,229.007 1292.59,229.078 1293.16,229.158 1293.73,229.315 1294.3,229.486 1294.87,229.344 1295.43,231.366 1296,232.368 1296.57,233.25 1297.14,233.845 1297.71,234.691 1298.28,232.09 1298.84,232.103 1299.41,233.922 1299.98,232.52 1300.55,234.423 1301.12,232.166 1301.69,232.213 1302.25,233.067 1302.82,231.639 1303.39,231.278 1303.96,231 1304.53,229.95 1305.1,229.848 1305.66,229.659 1306.23,230.848 1306.8,230.877 1307.37,230.52 1307.94,229.421 1308.51,230.504 1309.07,231.412 1309.64,229.25 1310.21,228.248 1310.78,229.204 1311.35,230.261 1311.92,231.206 1312.48,232.079 1313.05,231.878 1313.62,229.448 1314.19,230.539 1314.76,229.26 1315.33,229.053 1315.89,227.946 1316.46,230.367 1317.03,231.25 1317.6,231.996 1318.17,228.89 1318.74,230.014 1319.3,230.815 1319.87,231.736 1320.44,231.675 1321.01,229.228 1321.58,226.119 1322.15,227.327 1322.71,227.514 1323.28,227.508 1323.85,227.861 1324.42,226.868 1324.99,227.128 1325.56,230.528 1326.12,228.269 1326.69,227.22 1327.26,229.477 1327.83,228.338 1328.4,226.34 1328.97,227.63 1329.53,225.701 1330.1,225.802 1330.67,226.127 1331.24,227.565 1331.81,227.72 1332.38,228.053 1332.94,229.287 1333.51,231.69 1334.08,232.563 1334.65,230.384 1335.22,232.545 1335.79,233.385 1336.36,232.026 1336.92,232.006 1337.49,231.92 1338.06,228.677 1338.63,229.749 1339.2,228.901 1339.77,230.842 1340.33,229.567 1340.9,230.469 1341.47,233.445 1342.04,233.101 1342.61,231.991 1343.18,230.879 1343.74,231.932 1344.31,231.694 1344.88,233.771 1345.45,234.426 1346.02,233.808 1346.59,234.693 1347.15,235.276 1347.72,234.986 1348.29,234.55 1348.86,233.081 1349.43,233.858 1350,234.412 1350.56,232.098 1351.13,230.995 1351.7,229.964 1352.27,229.884 1352.84,229.888 1353.41,228.796 1353.97,229.017 1354.54,230.118 1355.11,230.068 1355.68,231.954 1356.25,231.612 1356.82,229.237 1357.38,229.207 1357.95,229.244 1358.52,231.049 1359.09,228.708 1359.66,226.533 1360.23,226.873 1360.79,226.093 1361.36,225.199 1361.93,223.56 1362.5,223.038 1363.07,224.498 1363.64,227.146 1364.2,225.387 1364.77,225.675 1365.34,226.9 1365.91,227.108 1366.48,228.316 1367.05,229.229 1367.61,229.291 1368.18,228.436 1368.75,229.37 1369.32,229.419 1369.89,232.366 1370.46,233.238 1371.02,234.043 1371.59,231.615 1372.16,231.551 1372.73,232.475 1373.3,233.055 1373.87,232.645 1374.43,232.669 1375,233.549 1375.57,233.108 1376.14,232.848 1376.71,233.361 1377.28,233.005 1377.84,234.622 1378.41,232.998 1378.98,231.758 1379.55,232.54 1380.12,232.337 1380.69,232.069 1381.25,231.831 1381.82,231.779 1382.39,230.474 1382.96,232.284 1383.53,230.92 1384.1,231.846 1384.66,231.555 1385.23,230.332 1385.8,230.164 1386.37,228.123 1386.94,229.387 1387.51,229.441 1388.07,230.282 1388.64,232.173 1389.21,230.936 1389.78,228.935 1390.35,229.893 1390.92,227.682 1391.48,227.575 1392.05,227.403 1392.62,226.589 1393.19,227.758 1393.76,226.724 1394.33,224.78 1394.89,223.043 1395.46,222.42 1396.03,220.046 1396.6,220.542 1397.17,219.895 1397.74,221.634 1398.3,223.39 1398.87,223.923 1399.44,225.533 1400.01,224.88 1400.58,225.277 1401.15,224.487 1401.71,224.828 1402.28,225.422 1402.85,226.832 1403.42,226.109 1403.99,226.148 1404.56,227.611 1405.13,224.864 1405.69,225.334 1406.26,225.691 1406.83,227.216 1407.4,226.43 1407.97,225.642 1408.54,225.881 1409.1,222.005 1409.67,222.841 1410.24,222.483 1410.81,223.012 1411.38,224.474 1411.95,223.928 1412.51,223.461 1413.08,224.053 1413.65,223.539 1414.22,224.228 1414.79,224.824 1415.36,225.383 1415.92,225.83 1416.49,224.49 1417.06,224.042 1417.63,225.66 1418.2,224.851 1418.77,223.381 1419.33,224.816 1419.9,226.553 1420.47,224.374 1421.04,224.132 1421.61,226.727 1422.18,226.36 1422.74,229.096 1423.31,231.266 1423.88,231.368 1424.45,230.451 1425.02,231.527 1425.59,229.69 1426.15,230.914 1426.72,231.055 1427.29,233.288 1427.86,233.253 1428.43,235.396 1429,234.283 1429.56,234.225 1430.13,236.142 1430.7,236.9 1431.27,236.49 1431.84,237.331 1432.41,240.189 1432.97,238.576 1433.54,238.117 1434.11,238.566 1434.68,237.076 1435.25,236.722 1435.82,237.501 1436.38,236.016 1436.95,235.796 1437.52,235.597 1438.09,237.124 1438.66,237.601 1439.23,237.951 1439.79,238.314 1440.36,235.82 1440.93,236.482 1441.5,236.071 1442.07,234.28 1442.64,234.99 1443.2,234.535 1443.77,234.245 1444.34,232.948 1444.91,234.9 1445.48,235.691 1446.05,235.282 1446.61,235.195 1447.18,234.642 1447.75,234.5 1448.32,233.192 1448.89,234.046 1449.46,233.766 1450.02,231.307 1450.59,233.181 1451.16,230.645 1451.73,230.207 1452.3,227.117 1452.87,226.289 1453.43,225.695 1454,224.801 1454.57,226.113 1455.14,223.411 1455.71,221.892 1456.28,222.496 1456.84,225.972 1457.41,224.318 1457.98,224.794 1458.55,226.236 1459.12,226.526 1459.69,226.745 1460.25,226.926 1460.82,226.01 1461.39,226.163 1461.96,227.48 1462.53,227.663 1463.1,225.948 1463.66,225.321 1464.23,228.751 1464.8,228.635 1465.37,229.87 1465.94,230.842 1466.51,230.783 1467.07,229.657 1467.64,228.719 1468.21,228.832 1468.78,229.805 1469.35,227.792 1469.92,229.004 1470.48,229.19 1471.05,229.189 1471.62,233.282 1472.19,234.167 1472.76,233.989 1473.33,233.636 1473.89,233.076 1474.46,234.013 1475.03,235.641 1475.6,236.188 1476.17,235.801 1476.74,236.469 1477.31,237.033 1477.87,236.144 1478.44,234.501 1479.01,233.042 1479.58,233.714 1480.15,232.505 1480.72,231.21 1481.28,228.025 1481.85,224.695 1482.42,225.976 1482.99,228.314 1483.56,227.425 1484.13,227.786 1484.69,226.875 1485.26,228.956 1485.83,230.819 1486.4,231.828 1486.97,231.651 1487.54,231.521 1488.1,231.2 1488.67,230.118 1489.24,229.892 1489.81,225.887 1490.38,226.168 1490.95,226.344 1491.51,226.674 1492.08,227.852 1492.65,229.08 1493.22,229.087 1493.79,231.153 1494.36,230.128 1494.92,228.167 1495.49,227.397 1496.06,227.445 1496.63,227.401 1497.2,226.39 1497.77,227.676 1498.33,227.055 1498.9,227.231 1499.47,225.531 1500.04,227.122 1500.61,226.39 1501.18,226.734 1501.74,227.88 1502.31,225.947 1502.88,230.122 1503.45,231.049 1504.02,230.949 1504.59,234.221 1505.15,233.065 1505.72,233.735 1506.29,232.483 1506.86,233.411 1507.43,234.325 1508,236.09 1508.56,230.438 1509.13,231.425 1509.7,231.184 1510.27,229.051 1510.84,230.124 1511.41,230.138 1511.97,228.02 1512.54,227.1 1513.11,225.312 1513.68,224.511 1514.25,225.986 1514.82,227.363 1515.38,228.521 1515.95,228.495 1516.52,228.776 1517.09,228.76 1517.66,229.06 1518.23,228.162 1518.79,232.218 1519.36,232.027 1519.93,230.966 1520.5,232.853 1521.07,233.671 1521.64,230.481 1522.2,230.397 1522.77,230.213 1523.34,230.223 1523.91,233.27 1524.48,234.259 1525.05,236.072 1525.61,235.656 1526.18,236.267 1526.75,235.8 1527.32,235.53 1527.89,235.105 1528.46,234.819 1529.02,232.47 1529.59,232.124 1530.16,227.776 1530.73,228.898 1531.3,229.058 1531.87,231.103 1532.43,230.868 1533,232.614 1533.57,231.244 1534.14,230.033 1534.71,228.897 1535.28,227.82 1535.84,227.892 1536.41,228.913 1536.98,228.939 1537.55,228.993 1538.12,231.128 1538.69,230.901 1539.25,232.951 1539.82,231.716 1540.39,231.526 1540.96,233.306 1541.53,235.077 1542.1,234.668 1542.66,233.339 1543.23,233.331 1543.8,231.811 1544.37,231.635 1544.94,231.418 1545.51,229.046 1546.08,229.97 1546.64,230.89 1547.21,231.584 1547.78,230.466 1548.35,232.142 1548.92,230.682 1549.49,231.403 1550.05,231.064 1550.62,228.933 1551.19,230.91 1551.76,231.889 1552.33,232.69 1552.9,232.396 1553.46,231.058 1554.03,231.871 1554.6,231.669 1555.17,230.213 1555.74,228.904 1556.31,228.936 1556.87,227.806 1557.44,226.982 1558.01,226.298 1558.58,224.567 1559.15,223.775 1559.72,225.261 1560.28,231.617 1560.85,231.567 1561.42,229.404 1561.99,229.21 1562.56,229.175 1563.13,229.073 1563.69,232.144 1564.26,227.912 1564.83,227.764 1565.4,228.907 1565.97,228.804 1566.54,227.84 1567.1,227.797 1567.67,228.965 1568.24,229.839 1568.81,228.92 1569.38,228.873 1569.95,227.854 1570.51,225.746 1571.08,224.901 1571.65,225.242 1572.22,224.6 1572.79,225.9 1573.36,226.204 1573.92,228.318 1574.49,228.215 1575.06,228.301 1575.63,227.328 1576.2,229.526 1576.77,229.498 1577.33,226.317 1577.9,225.531 1578.47,225.784 1579.04,225.096 1579.61,225.359 1580.18,227.594 1580.74,227.839 1581.31,230.035 1581.88,226.913 1582.45,229.262 1583.02,231.279 1583.59,230.215 1584.15,229.167 1584.72,228.291 1585.29,228.415 1585.86,228.324 1586.43,227.513 1587,227.564 1587.56,229.094 1588.13,228.132 1588.7,226.095 1589.27,224.215 1589.84,225.62 1590.41,225.888 1590.97,226.321 1591.54,226.43 1592.11,226.598 1592.68,228.74 1593.25,228.824 1593.82,228.941 1594.38,229.159 1594.95,228.272 1595.52,229.311 1596.09,227.199 1596.66,228.711 1597.23,229.857 1597.79,229.94 1598.36,228.012 1598.93,229.269 1599.5,230.323 1600.07,230.405 1600.64,231.154 1601.2,232.19 1601.77,231.041 1602.34,233.15 1602.91,233.158 1603.48,234.089 1604.05,232.529 1604.61,232.472 1605.18,233.422 1605.75,234.228 1606.32,234.14 1606.89,232.881 1607.46,231.698 1608.02,233.431 1608.59,235.323 1609.16,232.905 1609.73,231.505 1610.3,232.424 1610.87,231.065 1611.43,232.133 1612,233.01 1612.57,233.589 1613.14,233.255 1613.71,229.858 1614.28,226.875 1614.84,226.262 1615.41,227.674 1615.98,228.821 1616.55,230.041 1617.12,230.934 1617.69,229.869 1618.26,231.115 1618.82,229.941 1619.39,228.913 1619.96,226.924 1620.53,228.31 1621.1,228.392 1621.67,229.873 1622.23,229.992 1622.8,230.202 1623.37,230.364 1623.94,231.604 1624.51,230.455 1625.08,232.633 1625.64,232.532 1626.21,231.431 1626.78,231.19 1627.35,230.297 1627.92,232.1 1628.49,229.902 1629.05,231.836 1629.62,230.741 1630.19,231.476 1630.76,232.485 1631.33,233.272 1631.9,230.772 1632.46,230.623 1633.03,230.501 1633.6,229.171 1634.17,226.113 1634.74,228.486 1635.31,228.755 1635.87,233.144 1636.44,233.651 1637.01,231.198 1637.58,229.848 1638.15,229.871 1638.72,232.845 1639.28,234.683 1639.85,232.022 1640.42,230.849 1640.99,227.665 1641.56,226.636 1642.13,226.988 1642.69,228.198 1643.26,228.405 1643.83,228.193 1644.4,229.221 1644.97,229.153 1645.54,230.073 1646.1,230.005 1646.67,229.028 1647.24,230.287 1647.81,228.373 1648.38,228.246 1648.95,229.342 1649.51,230.244 1650.08,229.092 1650.65,230.167 1651.22,229.064 1651.79,228.96 1652.36,229.355 1652.92,229.517 1653.49,228.276 1654.06,228.386 1654.63,229.424 1655.2,231.614 1655.77,230.267 1656.33,229.157 1656.9,230.219 1657.47,230.122 1658.04,226.969 1658.61,228.167 1659.18,227.297 1659.74,228.495 1660.31,227.807 1660.88,231.089 1661.45,232.072 1662.02,231.997 1662.59,231.891 1663.15,231.575 1663.72,230.403 1664.29,232.37 1664.86,232.194 1665.43,232.087 1666,230.945 1666.56,227.715 1667.13,226.851 1667.7,226.101 1668.27,225.354 1668.84,225.444 1669.41,225.705 1669.97,226.836 1670.54,225.159 1671.11,227.556 1671.68,225.574 1672.25,227.011 1672.82,225.868 1673.38,228.273 1673.95,229.458 1674.52,227.48 1675.09,226.806 1675.66,228.395 1676.23,229.366 1676.79,229.287 1677.36,228.315 1677.93,226.262 1678.5,225.795 1679.07,227.207 1679.64,225.437 1680.2,224.843 1680.77,226.083 1681.34,226.455 1681.91,225.488 1682.48,224.665 1683.05,227.104 1683.61,226.276 1684.18,226.558 1684.75,228.803 1685.32,228.905 1685.89,227.861 1686.46,230.384 1687.02,228.476 1687.59,229.708 1688.16,228.946 1688.73,226.942 1689.3,229.39 1689.87,229.397 1690.44,231.36 1691,233.426 1691.57,231.329 1692.14,231.476 1692.71,230.255 1693.28,228.455 1693.85,227.91 1694.41,228.138 1694.98,228.184 1695.55,229.427 1696.12,229.638 1696.69,227.846 1697.26,227.147 1697.82,228.488 1698.39,229.686 1698.96,229.629 1699.53,228.393 1700.1,229.475 1700.67,228.486 1701.23,229.742 1701.8,228.734 1702.37,228.736 1702.94,227.865 1703.51,229.106 1704.08,229.065 1704.64,229.179 1705.21,228.293 1705.78,226.261 1706.35,227.501 1706.92,228.652 1707.49,229.799 1708.05,231.925 1708.62,234.898 1709.19,231.475 1709.76,232.444 1710.33,232.189 1710.9,231.14 1711.46,232.143 1712.03,230.844 1712.6,229.853 1713.17,228.063 1713.74,230.319 1714.31,231.271 1714.87,233.206 1715.44,234.195 1716.01,233.005 1716.58,231.785 1717.15,231.774 1717.72,231.661 1718.28,231.435 1718.85,231.303 1719.42,232.232 1719.99,232.093 1720.56,230.978 1721.13,231.883 1721.69,231.723 1722.26,233.769 1722.83,234.588 1723.4,235.348 1723.97,236.248 1724.54,235.633 1725.1,236.217 1725.67,233.757 1726.24,233.539 1726.81,231.316 1727.38,231.309 1727.95,232.169 1728.51,229.935 1729.08,230.936 1729.65,230.821 1730.22,231.974 1730.79,232.793 1731.36,230.397 1731.92,231.479 1732.49,231.341 1733.06,230.132 1733.63,229.081 1734.2,229.18 1734.77,229.256 1735.33,229.332 1735.9,231.636 1736.47,232.464 1737.04,232.095 1737.61,229.796 1738.18,228.875 1738.74,230.179 1739.31,231.141 1739.88,232.074 1740.45,231.805 1741.02,231.788 1741.59,230.436 1742.15,232.456 1742.72,231.225 1743.29,232.067 1743.86,229.626 1744.43,230.449 1745,231.358 1745.56,231.227 1746.13,229.954 1746.7,231.815 1747.27,230.859 1747.84,231.75 1748.41,230.486 1748.97,229.422 1749.54,230.366 1750.11,229.151 1750.68,230.254 1751.25,231.206 1751.82,230.026 1752.38,229.062 1752.95,229.281 1753.52,227.538 1754.09,227.56 1754.66,226.5 1755.23,227.812 1755.79,227.977 1756.36,228.054 1756.93,231.244 1757.5,228.108 1758.07,228.083 1758.64,229.37 1759.21,230.418 1759.77,229.335 1760.34,227.432 1760.91,230.582 1761.48,229.563 1762.05,227.474 1762.62,227.616 1763.18,230.635 1763.75,228.563 1764.32,228.686 1764.89,230.621 1765.46,229.347 1766.03,229.324 1766.59,228.042 1767.16,229.114 1767.73,228.876 1768.3,228.761 1768.87,226.606 1769.44,226.673 1770,229.082 1770.57,228.046 1771.14,228.253 1771.71,228.257 1772.28,228.503 1772.85,227.639 1773.41,230.707 1773.98,230.462 1774.55,230.229 1775.12,230.213 1775.69,231.363 1776.26,232.349 1776.82,232.312 1777.39,234.221 1777.96,234.021 1778.53,233.706 1779.1,234.259 1779.67,235.016 1780.23,234.639 1780.8,233.096 1781.37,231.792 1781.94,230.711 1782.51,230.697 1783.08,229.494 1783.64,228.263 1784.21,228.268 1784.78,227.419 1785.35,228.59 1785.92,227.74 1786.49,229.041 1787.05,227.791 1787.62,226.965 1788.19,225.118 1788.76,224.276 1789.33,225.955 1789.9,229.527 1790.46,228.462 1791.03,228.646 1791.6,225.745 1792.17,225.073 1792.74,226.354 1793.31,226.651 1793.87,229.884 1794.44,228.871 1795.01,225.851 1795.58,226.042 1796.15,227.431 1796.72,228.565 1797.28,227.618 1797.85,226.628 1798.42,227.908 1798.99,229.194 1799.56,230.236 1800.13,230.14 1800.69,229.974 1801.26,230.01 1801.83,229.972 1802.4,230.006 1802.97,229.912 1803.54,228.806 1804.1,227.697 1804.67,229.852 1805.24,231.027 1805.81,231.021 1806.38,229.944 1806.95,224.934 1807.51,226.227 1808.08,226.547 1808.65,225.722 1809.22,225.13 1809.79,224.581 1810.36,225.929 1810.92,227.346 1811.49,229.451 1812.06,228.679 1812.63,227.787 1813.2,228.043 1813.77,226.333 1814.33,227.749 1814.9,227.898 1815.47,228.16 1816.04,229.47 1816.61,230.572 1817.18,230.584 1817.74,230.381 1818.31,231.394 1818.88,229.452 1819.45,229.677 1820.02,230.883 1820.59,230.715 1821.15,230.556 1821.72,231.396 1822.29,234.402 1822.86,235.188 1823.43,233.855 1824,233.805 1824.56,235.587 1825.13,234.353 1825.7,233.998 1826.27,235.917 1826.84,235.627 1827.41,234.979 1827.97,234.67 1828.54,234.381 1829.11,232.182 1829.68,231.065 1830.25,230.816 1830.82,230.784 1831.39,231.914 1831.95,228.484 1832.52,228.377 1833.09,228.296 1833.66,230.356 1834.23,229.38 1834.8,229.366 1835.36,228.485 1835.93,228.549 1836.5,227.893 1837.07,226.108 1837.64,226.471 1838.21,228.773 1838.77,228.967 1839.34,228.188 1839.91,230.289 1840.48,226.149 1841.05,224.448 1841.62,226.002 1842.18,226.328 1842.75,224.45 1843.32,223.775 1843.89,223.301 1844.46,226.102 1845.03,226.385 1845.59,226.44 1846.16,228.672 1846.73,227.838 1847.3,228.18 1847.87,231.49 1848.44,233.607 1849,235.396 1849.57,234.116 1850.14,235.812 1850.71,233.321 1851.28,235.034 1851.85,234.69 1852.41,236.44 1852.98,233.957 1853.55,234.643 1854.12,234.259 1854.69,233.006 1855.26,233.71 1855.82,232.433 1856.39,231.291 1856.96,231.1 1857.53,229.91 1858.1,229.939 1858.67,228.856 1859.23,228.8 1859.8,228.778 1860.37,229.068 1860.94,227.986 1861.51,230.133 1862.08,229.195 1862.64,228.307 1863.21,228.536 1863.78,228.753 1864.35,229.737 1864.92,231.835 1865.49,230.592 1866.05,231.73 1866.62,229.614 1867.19,229.754 1867.76,231.934 1868.33,229.826 1868.9,230.968 1869.46,232.184 1870.03,231.961 1870.6,230.881 1871.17,229.709 1871.74,232.168 1872.31,233.288 1872.87,233.275 1873.44,234.107 1874.01,233.945 1874.58,231.524 1875.15,230.284 1875.72,230.275 1876.28,232.17 1876.85,231.005 1877.42,232.75 1877.99,230.449 1878.56,228.534 1879.13,230.571 1879.69,231.458 1880.26,234.597 1880.83,234.28 1881.4,235.061 1881.97,234.544 1882.54,234.198 1883.1,230.567 1883.67,230.706 1884.24,230.579 1884.81,229.517 1885.38,229.353 1885.95,226.131 1886.51,228.375 1887.08,228.556 1887.65,226.691 1888.22,226.747 1888.79,229.771 1889.36,231.843 1889.92,232.343 1890.49,233.008 1891.06,231.82 1891.63,232.501 1892.2,231.142 1892.77,231.845 1893.33,233.653 1893.9,235.308 1894.47,233.513 1895.04,233.076 1895.61,232.503 1896.18,234.418 1896.74,232.641 1897.31,232.225 1897.88,229.965 1898.45,229.837 1899.02,229.689 1899.59,228.397 1900.16,228.439 1900.72,228.319 1901.29,226.243 1901.86,225.371 1902.43,225.4 1903,227.803 1903.57,224.952 1904.13,224.309 1904.7,224.86 1905.27,226.135 1905.84,227.312 1906.41,225.257 1906.98,224.685 1907.54,227.062 1908.11,229.035 1908.68,228.017 1909.25,228.453 1909.82,226.306 1910.39,228.772 1910.95,227.848 1911.52,226.869 1912.09,226.215 1912.66,226.464 1913.23,225.543 1913.8,223.768 1914.36,225.203 1914.93,224.377 1915.5,224.711 1916.07,227.049 1916.64,228.335 1917.21,228.496 1917.77,227.591 1918.34,227.779 1918.91,226.904 1919.48,228.261 1920.05,231.524 1920.62,232.474 1921.18,232.335 1921.75,232.179 1922.32,234.89 1922.89,232.641 1923.46,232.204 1924.03,231 1924.59,227.034 1925.16,228.163 1925.73,227.098 1926.3,227.195 1926.87,229.238 1927.44,230.473 1928,231.485 1928.57,231.203 1929.14,231.389 1929.71,227.232 1930.28,228.548 1930.85,229.673 1931.41,228.55 1931.98,229.857 1932.55,228.8 1933.12,226.876 1933.69,226.124 1934.26,226.411 1934.82,227.639 1935.39,229.88 1935.96,228.846 1936.53,230.047 1937.1,231.125 1937.67,230.96 1938.23,229.82 1938.8,229.867 1939.37,229.919 1939.94,230.053 1940.51,230.006 1941.08,229.018 1941.64,229.111 1942.21,228.177 1942.78,229.176 1943.35,230.271 1943.92,229.151 1944.49,228.275 1945.05,229.454 1945.62,227.334 1946.19,225.549 1946.76,226.509 1947.33,226.798 1947.9,225.992 1948.46,225.308 1949.03,225.767 1949.6,225.059 1950.17,227.511 1950.74,224.514 1951.31,226.044 1951.87,226.215 1952.44,228.768 1953.01,231.01 1953.58,229.882 1954.15,230.109 1954.72,230.171 1955.28,230.248 1955.85,229.251 1956.42,230.568 1956.99,230.835 1957.56,231.534 1958.13,232.399 1958.69,233.239 1959.26,232.169 1959.83,233.17 1960.4,234.934 1960.97,233.514 1961.54,231.098 1962.1,231.34 1962.67,230.23 1963.24,229.128 1963.81,229.368 1964.38,229.394 1964.95,231.644 1965.51,229.386 1966.08,231.463 1966.65,234.449 1967.22,235.552 1967.79,232.215 1968.36,232.079 1968.92,232.051 1969.49,231.891 1970.06,232.826 1970.63,232.641 1971.2,231.518 1971.77,229.209 1972.34,231.427 1972.9,232.364 1973.47,234.155 1974.04,234.745 1974.61,231.582 1975.18,234.382 1975.75,232.033 1976.31,230.721 1976.88,230.482 1977.45,227.54 1978.02,227.72 1978.59,227.816 1979.16,226.003 1979.72,227.336 1980.29,228.285 1980.86,228.602 1981.43,228.929 1982,226.895 1982.57,227.119 1983.13,227.362 1983.7,227.408 1984.27,227.59 1984.84,226.726 1985.41,225.864 1985.98,228.033 1986.54,228.467 1987.11,230.667 1987.68,230.616 1988.25,229.52 1988.82,229.556 1989.39,229.512 1989.95,228.477 1990.52,226.51 1991.09,227.811 1991.66,228.952 1992.23,229.035 1992.8,229.071 1993.36,230.06 1993.93,230.06 1994.5,231.065 1995.07,232.128 1995.64,232.046 1996.21,233.957 1996.77,232.421 1997.34,232.354 1997.91,232.357 1998.48,232.971 1999.05,233.627 1999.62,237.649 2000.18,237.114 2000.75,238.621 2001.32,239.135 2001.89,239.452 2002.46,238.805 2003.03,238.035 2003.59,237.49 2004.16,235.876 2004.73,234.374 2005.3,234.898 2005.87,234.305 2006.44,231.926 2007,231.794 2007.57,232.682 2008.14,232.49 2008.71,230.182 2009.28,230.17 2009.85,228.963 2010.41,232.043 2010.98,229.538 2011.55,231.627 2012.12,231.505 2012.69,231.588 2013.26,231.62 2013.82,232.43 2014.39,231.218 2014.96,229.981 2015.53,229.654 2016.1,230.578 2016.67,231.269 2017.23,230.063 2017.8,227.872 2018.37,228.889 2018.94,227.776 2019.51,227.777 2020.08,227.843 2020.64,228.971 2021.21,228.98 2021.78,229.239 2022.35,227.156 2022.92,227.438 2023.49,226.525 2024.05,227.534 2024.62,226.754 2025.19,227.956 2025.76,228.919 2026.33,228.081 2026.9,225.891 2027.46,223.192 2028.03,224.551 2028.6,225.188 2029.17,224.56 2029.74,222.879 2030.31,222.427 2030.87,221.038 2031.44,220.59 2032.01,221.198 2032.58,221.979 2033.15,221.463 2033.72,222.917 2034.28,225.361 2034.85,224.613 2035.42,225.116 2035.99,225.486 2036.56,223.873 2037.13,222.275 2037.69,222.749 2038.26,225.288 2038.83,227.717 2039.4,229.2 2039.97,230.374 2040.54,231.542 2041.11,232.706 2041.67,232.364 2042.24,233.467 2042.81,232.453 2043.38,229.263 2043.95,230.377 2044.52,229.496 2045.08,229.69 2045.65,228.821 2046.22,229.949 2046.79,231.294 2047.36,230.973 2047.93,228.686 2048.49,228.895 2049.06,228.742 2049.63,230.923 2050.2,231.757 2050.77,230.897 2051.34,230.847 2051.9,234.021 2052.47,231.637 2053.04,230.631 2053.61,229.725 2054.18,231.765 2054.75,229.716 2055.31,230.809 2055.88,231.871 2056.45,231.917 2057.02,232.984 2057.59,231.797 2058.16,232.877 2058.72,230.626 2059.29,230.73 2059.86,233.742 2060.43,231.585 2061,231.587 2061.57,232.618 2062.13,230.356 2062.7,227.227 2063.27,227.612 2063.84,226.719 2064.41,225.898 2064.98,226.144 2065.54,227.5 2066.11,223.671 2066.68,226.382 2067.25,225.539 2067.82,227.001 2068.39,226.293 2068.95,225.538 2069.52,224.989 2070.09,225.408 2070.66,225.767 2071.23,225.142 2071.8,226.47 2072.36,227.812 2072.93,227.967 2073.5,226.928 2074.07,227.116 2074.64,225.379 2075.21,224.765 2075.77,226.164 2076.34,229.548 2076.91,228.669 2077.48,229.636 2078.05,229.872 2078.62,233.246 2079.18,232.257 2079.75,230.085 2080.32,230.311 2080.89,231.475 2081.46,232.447 2082.03,233.364 2082.59,233.271 2083.16,234.063 2083.73,233.948 2084.3,234.955 2084.87,233.632 2085.44,236.49 2086,233.876 2086.57,234.74 2087.14,233.55 2087.71,236.644 2088.28,239.184 2088.85,236.433 2089.41,235.982 2089.98,237.765 2090.55,235.012 2091.12,235.715 2091.69,235.387 2092.26,236.085 2092.82,235.728 2093.39,237.117 2093.96,236.41 2094.53,236.82 2095.1,235.227 2095.67,234.668 2096.23,234.178 2096.8,234.969 2097.37,234.296 2097.94,235.553 2098.51,236.009 2099.08,234.302 2099.64,232.712 2100.21,232.48 2100.78,232.067 2101.35,233.011 2101.92,232.557 2102.49,230.209 2103.05,229.107 2103.62,231.254 2104.19,230.129 2104.76,229.076 2105.33,224.794 2105.9,223.992 2106.46,227.428 2107.03,228.843 2107.6,228.841 2108.17,227.948 2108.74,229.102 2109.31,228.887 2109.87,229.941 2110.44,231.01 2111.01,231.733 2111.58,231.502 2112.15,231.184 2112.72,230.829 2113.29,230.816 2113.85,230.523 2114.42,229.458 2114.99,229.304 2115.56,228.377 2116.13,228.574 2116.7,231.65 2117.26,231.443 2117.83,231.361 2118.4,230.049 2118.97,228.719 2119.54,225.641 2120.11,225.753 2120.67,224.056 2121.24,224.298 2121.81,224.601 2122.38,224.856 2122.95,226.193 2123.52,226.403 2124.08,224.435 2124.65,224.674 2125.22,224.886 2125.79,226.336 2126.36,225.372 2126.93,221.509 2127.49,220.828 2128.06,220.281 2128.63,220.832 2129.2,220.331 2129.77,224.032 2130.34,224.437 2130.9,225.973 2131.47,227.262 2132.04,228.346 2132.61,227.637 2133.18,227.872 2133.75,226.983 2134.31,228.387 2134.88,229.594 2135.45,229.453 2136.02,228.407 2136.59,231.576 2137.16,233.547 2137.72,234.525 2138.29,233.207 2138.86,233.899 2139.43,232.566 2140,233.306 2140.57,232.188 2141.13,232.025 2141.7,232.914 2142.27,232.755 2142.84,234.469 2143.41,234.208 2143.98,233.972 2144.54,233.806 2145.11,236.527 2145.68,233.957 2146.25,232.334 2146.82,230.087 2147.39,229.019 2147.95,227.99 2148.52,226.022 2149.09,221.866 2149.66,222.339 2150.23,220.939 2150.8,223.516 2151.36,224.862 2151.93,227.346 2152.5,229.612 2153.07,230.675 2153.64,232.736 2154.21,230.627 2154.77,229.688 2155.34,228.801 2155.91,230.155 2156.48,231.102 2157.05,230.118 2157.62,226.899 2158.18,226.127 2158.75,228.506 2159.32,230.784 2159.89,231.803 \"/>\n<path clip-path=\"url(#clip400)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip400)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip400)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip400)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip400)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip400)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.035 ± 0.021\n  with uncertainty of ± 0.0018967350211974278\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01601 ± (0.00342939, 0.00368237) (MC)\n  95% confidence interval: [-4.0228, -4.00904]) (MC)\n  linear error propagation: -4.01643 ± 0.00363841\n  |δ_y| = |0.00213781| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016011718536049, val_l = 0.006790426480248968, val_u = 0.0069747263979804686)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip430\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip430)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip431\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip430)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip432\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1145.28 2211.02,1145.28 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,975.816 2211.02,975.816 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,806.35 2211.02,806.35 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,636.884 2211.02,636.884 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,467.418 2211.02,467.418 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,297.952 2211.02,297.952 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1145.28 365.751,1145.28 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,975.816 365.751,975.816 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,806.35 365.751,806.35 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,636.884 365.751,636.884 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,467.418 365.751,467.418 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,297.952 365.751,297.952 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M298.909 1131.08 Q295.298 1131.08 293.469 1134.65 Q291.664 1138.19 291.664 1145.32 Q291.664 1152.42 293.469 1155.99 Q295.298 1159.53 298.909 1159.53 Q302.543 1159.53 304.349 1155.99 Q306.177 1152.42 306.177 1145.32 Q306.177 1138.19 304.349 1134.65 Q302.543 1131.08 298.909 1131.08 M298.909 1127.38 Q304.719 1127.38 307.775 1131.98 Q310.853 1136.57 310.853 1145.32 Q310.853 1154.04 307.775 1158.65 Q304.719 1163.23 298.909 1163.23 Q293.099 1163.23 290.02 1158.65 Q286.964 1154.04 286.964 1145.32 Q286.964 1136.57 290.02 1131.98 Q293.099 1127.38 298.909 1127.38 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M259.557 989.161 L267.196 989.161 L267.196 962.795 L258.886 964.462 L258.886 960.202 L267.15 958.536 L271.826 958.536 L271.826 989.161 L279.465 989.161 L279.465 993.096 L259.557 993.096 L259.557 989.161 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M298.909 961.614 Q295.298 961.614 293.469 965.179 Q291.664 968.721 291.664 975.85 Q291.664 982.957 293.469 986.522 Q295.298 990.063 298.909 990.063 Q302.543 990.063 304.349 986.522 Q306.177 982.957 306.177 975.85 Q306.177 968.721 304.349 965.179 Q302.543 961.614 298.909 961.614 M298.909 957.911 Q304.719 957.911 307.775 962.517 Q310.853 967.1 310.853 975.85 Q310.853 984.577 307.775 989.184 Q304.719 993.767 298.909 993.767 Q293.099 993.767 290.02 989.184 Q286.964 984.577 286.964 975.85 Q286.964 967.1 290.02 962.517 Q293.099 957.911 298.909 957.911 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M262.775 819.695 L279.094 819.695 L279.094 823.63 L257.15 823.63 L257.15 819.695 Q259.812 816.94 264.395 812.31 Q269.002 807.658 270.182 806.315 Q272.428 803.792 273.307 802.056 Q274.21 800.296 274.21 798.607 Q274.21 795.852 272.266 794.116 Q270.344 792.38 267.242 792.38 Q265.043 792.38 262.59 793.144 Q260.159 793.908 257.381 795.459 L257.381 790.736 Q260.205 789.602 262.659 789.023 Q265.113 788.445 267.15 788.445 Q272.52 788.445 275.715 791.13 Q278.909 793.815 278.909 798.306 Q278.909 800.435 278.099 802.357 Q277.312 804.255 275.205 806.847 Q274.627 807.519 271.525 810.736 Q268.423 813.931 262.775 819.695 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M298.909 792.148 Q295.298 792.148 293.469 795.713 Q291.664 799.255 291.664 806.384 Q291.664 813.491 293.469 817.056 Q295.298 820.597 298.909 820.597 Q302.543 820.597 304.349 817.056 Q306.177 813.491 306.177 806.384 Q306.177 799.255 304.349 795.713 Q302.543 792.148 298.909 792.148 M298.909 788.445 Q304.719 788.445 307.775 793.051 Q310.853 797.634 310.853 806.384 Q310.853 815.111 307.775 819.718 Q304.719 824.301 298.909 824.301 Q293.099 824.301 290.02 819.718 Q286.964 815.111 286.964 806.384 Q286.964 797.634 290.02 793.051 Q293.099 788.445 298.909 788.445 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M272.914 635.53 Q276.27 636.247 278.145 638.516 Q280.043 640.784 280.043 644.117 Q280.043 649.233 276.525 652.034 Q273.006 654.835 266.525 654.835 Q264.349 654.835 262.034 654.395 Q259.742 653.978 257.289 653.122 L257.289 648.608 Q259.233 649.742 261.548 650.321 Q263.863 650.9 266.386 650.9 Q270.784 650.9 273.076 649.164 Q275.39 647.428 275.39 644.117 Q275.39 641.062 273.238 639.349 Q271.108 637.613 267.289 637.613 L263.261 637.613 L263.261 633.77 L267.474 633.77 Q270.923 633.77 272.752 632.405 Q274.58 631.016 274.58 628.423 Q274.58 625.761 272.682 624.349 Q270.807 622.914 267.289 622.914 Q265.367 622.914 263.168 623.33 Q260.969 623.747 258.33 624.627 L258.33 620.46 Q260.992 619.719 263.307 619.349 Q265.645 618.979 267.705 618.979 Q273.029 618.979 276.131 621.409 Q279.233 623.817 279.233 627.937 Q279.233 630.807 277.59 632.798 Q275.946 634.766 272.914 635.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M298.909 622.682 Q295.298 622.682 293.469 626.247 Q291.664 629.789 291.664 636.918 Q291.664 644.025 293.469 647.59 Q295.298 651.131 298.909 651.131 Q302.543 651.131 304.349 647.59 Q306.177 644.025 306.177 636.918 Q306.177 629.789 304.349 626.247 Q302.543 622.682 298.909 622.682 M298.909 618.979 Q304.719 618.979 307.775 623.585 Q310.853 628.168 310.853 636.918 Q310.853 645.645 307.775 650.252 Q304.719 654.835 298.909 654.835 Q293.099 654.835 290.02 650.252 Q286.964 645.645 286.964 636.918 Q286.964 628.168 290.02 623.585 Q293.099 618.979 298.909 618.979 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M271.594 454.212 L259.789 472.661 L271.594 472.661 L271.594 454.212 M270.367 450.138 L276.247 450.138 L276.247 472.661 L281.177 472.661 L281.177 476.55 L276.247 476.55 L276.247 484.698 L271.594 484.698 L271.594 476.55 L255.992 476.55 L255.992 472.036 L270.367 450.138 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M298.909 453.216 Q295.298 453.216 293.469 456.781 Q291.664 460.323 291.664 467.452 Q291.664 474.559 293.469 478.124 Q295.298 481.665 298.909 481.665 Q302.543 481.665 304.349 478.124 Q306.177 474.559 306.177 467.452 Q306.177 460.323 304.349 456.781 Q302.543 453.216 298.909 453.216 M298.909 449.513 Q304.719 449.513 307.775 454.119 Q310.853 458.702 310.853 467.452 Q310.853 476.179 307.775 480.786 Q304.719 485.369 298.909 485.369 Q293.099 485.369 290.02 480.786 Q286.964 476.179 286.964 467.452 Q286.964 458.702 290.02 454.119 Q293.099 449.513 298.909 449.513 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M258.793 280.672 L277.15 280.672 L277.15 284.607 L263.076 284.607 L263.076 293.079 Q264.094 292.732 265.113 292.57 Q266.131 292.385 267.15 292.385 Q272.937 292.385 276.316 295.556 Q279.696 298.727 279.696 304.144 Q279.696 309.722 276.224 312.824 Q272.752 315.903 266.432 315.903 Q264.256 315.903 261.988 315.533 Q259.742 315.162 257.335 314.421 L257.335 309.722 Q259.418 310.857 261.641 311.412 Q263.863 311.968 266.34 311.968 Q270.344 311.968 272.682 309.861 Q275.02 307.755 275.02 304.144 Q275.02 300.533 272.682 298.426 Q270.344 296.32 266.34 296.32 Q264.465 296.32 262.59 296.736 Q260.738 297.153 258.793 298.033 L258.793 280.672 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M298.909 283.75 Q295.298 283.75 293.469 287.315 Q291.664 290.857 291.664 297.986 Q291.664 305.093 293.469 308.658 Q295.298 312.199 298.909 312.199 Q302.543 312.199 304.349 308.658 Q306.177 305.093 306.177 297.986 Q306.177 290.857 304.349 287.315 Q302.543 283.75 298.909 283.75 M298.909 280.047 Q304.719 280.047 307.775 284.653 Q310.853 289.236 310.853 297.986 Q310.853 306.713 307.775 311.32 Q304.719 315.903 298.909 315.903 Q293.099 315.903 290.02 311.32 Q286.964 306.713 286.964 297.986 Q286.964 289.236 290.02 284.653 Q293.099 280.047 298.909 280.047 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip432)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1020.41 400.199,905.699 400.786,929.581 401.372,824.585 401.958,730.459 402.545,648.529 403.131,676.095 403.718,597.068 404.304,528.508 404.891,554.289 405.477,491.609 406.063,434.815 406.65,383.525 407.236,337.384 407.823,296.058 408.409,325.598 408.995,290.024 409.582,258.528 410.168,232.332 410.755,259.64 411.341,239.311 411.927,220.144 412.514,245.962 413.1,231.713 413.687,255.158 414.273,243.993 414.86,234.463 415.446,227.129 416.032,222.927 416.619,219.895 417.205,244.066 417.792,244.02 418.378,246.464 418.964,249.238 419.551,253.309 420.137,313.972 420.724,317.18 421.31,321.44 421.896,342.365 422.483,377.077 423.069,395.302 423.656,401.563 424.242,431.866 424.829,438.394 425.415,466.728 426.001,494.981 426.588,511.48 427.174,518.453 427.761,526.374 428.347,534.661 428.933,543.59 429.52,553.004 430.106,584.754 430.693,593.558 431.279,601.853 431.865,611.119 432.452,639.435 433.038,660.788 433.625,668.764 434.211,687.909 434.798,706.425 435.384,723.93 435.97,736.051 436.557,748.257 437.143,760.63 437.73,785.935 438.316,802.039 438.902,812.783 439.489,835.111 440.075,844.912 440.662,854.877 441.248,864.949 441.835,870.921 442.421,894.742 443.007,903.484 443.594,905.227 444.18,911.337 444.767,917.367 445.353,925.986 445.939,931.502 446.526,945.952 447.112,954.299 447.699,959.206 448.285,967.063 448.871,975.266 449.458,983.662 450.044,996.376 450.631,1003.56 451.217,1005.47 451.804,1012.59 452.39,1024.63 452.976,1040.68 453.563,1044.03 454.149,1054.82 454.736,1062.57 455.322,1070.2 455.908,1077.48 456.495,1084.64 457.081,1089.26 457.668,1091.8 458.254,1100.14 458.84,1108.72 459.427,1112.68 460.013,1114.85 460.6,1128.57 461.186,1129.7 461.773,1135.3 462.359,1136.61 462.945,1143.66 463.532,1150.55 464.118,1151.29 464.705,1154.11 465.291,1160.8 465.877,1163.5 466.464,1164.21 467.05,1168.72 467.637,1169.64 468.223,1175.92 468.809,1179.8 469.396,1183.75 469.982,1185.84 470.569,1186.1 471.155,1189.74 471.742,1189.85 472.328,1193.6 472.914,1200.75 473.501,1203.77 474.087,1206.83 474.674,1207.87 475.26,1210.39 475.846,1211.26 476.433,1209.16 477.019,1211.81 477.606,1212.91 478.192,1213.98 478.778,1213.11 479.365,1217.74 479.951,1215.78 480.538,1217.08 481.124,1216.76 481.711,1213.2 482.297,1213.26 482.883,1213.05 483.47,1212.93 484.056,1216 484.643,1217.81 485.229,1217.95 485.815,1217.85 486.402,1214.5 486.988,1217.91 487.575,1218.17 488.161,1218.3 488.748,1218.48 489.334,1218.69 489.92,1223.65 490.507,1226.73 491.093,1228.23 491.68,1233.93 492.266,1234.86 492.852,1238.75 493.439,1238.19 494.025,1236 494.612,1236.88 495.198,1237.82 495.784,1238.57 496.371,1236.62 496.957,1234.67 497.544,1238.76 498.13,1238.05 498.717,1235.96 499.303,1234.1 499.889,1233.9 500.476,1233.63 501.062,1233.48 501.649,1230.28 502.235,1231.9 502.821,1233.44 503.408,1231.85 503.994,1236.12 504.581,1236.94 505.167,1237.96 505.753,1239.08 506.34,1238.94 506.926,1241.55 507.513,1242.77 508.099,1240.78 508.686,1240.38 509.272,1239.98 509.858,1241.18 510.445,1243.73 511.031,1243.28 511.618,1242.7 512.204,1240.9 512.79,1240.49 513.377,1240.19 513.963,1239.67 514.55,1243.57 515.136,1241.75 515.722,1241.2 516.309,1242.22 516.895,1244.61 517.482,1248.52 518.068,1245.95 518.655,1246.73 519.241,1245.75 519.827,1244.98 520.414,1246.16 521,1246.85 521.587,1247.65 522.173,1245.45 522.759,1245.01 523.346,1243.01 523.932,1242.37 524.519,1243.39 525.105,1239.97 525.691,1239.65 526.278,1242.26 526.864,1242.96 527.451,1243.73 528.037,1243.22 528.624,1242.86 529.21,1243.57 529.796,1244.46 530.383,1243.92 530.969,1242.04 531.556,1243.07 532.142,1242.75 532.728,1243.74 533.315,1243.5 533.901,1244.6 534.488,1244.04 535.074,1244.7 535.661,1244.4 536.247,1242.26 536.833,1242.99 537.42,1243.64 538.006,1244.58 538.593,1242.53 539.179,1244.7 539.765,1246.89 540.352,1246.49 540.938,1247.19 541.525,1250.53 542.111,1249.46 542.697,1244.48 543.284,1248.19 543.87,1245.88 544.457,1244.9 545.043,1242.83 545.63,1242.57 546.216,1242.15 546.802,1241.47 547.389,1240.81 547.975,1242.95 548.562,1240.89 549.148,1240.37 549.734,1242.29 550.321,1240.19 550.907,1238.14 551.494,1236.03 552.08,1237.02 552.666,1235.04 553.253,1235.93 553.839,1234.34 554.426,1234.03 555.012,1233.74 555.599,1231.88 556.185,1230.43 556.771,1226.15 557.358,1226.62 557.944,1226.79 558.531,1228.19 559.117,1227.93 559.703,1229.39 560.29,1228.32 560.876,1229.99 561.463,1224.69 562.049,1223.3 562.635,1223.3 563.222,1223.68 563.808,1225.4 564.395,1225.83 564.981,1227.22 565.568,1228.9 566.154,1231.65 566.74,1230.38 567.327,1231.76 567.913,1231.55 568.5,1233.03 569.086,1231.34 569.672,1232.59 570.259,1230.71 570.845,1230.8 571.432,1229.2 572.018,1230.5 572.605,1230.8 573.191,1232.05 573.777,1230.8 574.364,1230.73 574.95,1232.28 575.537,1232.23 576.123,1234.96 576.709,1231.69 577.296,1232.99 577.882,1232.42 578.469,1234.96 579.055,1236.07 579.641,1235.81 580.228,1235.19 580.814,1236.29 581.401,1238.84 581.987,1236.63 582.574,1236.07 583.16,1237.11 583.746,1237.95 584.333,1237.57 584.919,1235.76 585.506,1236.84 586.092,1236.18 586.678,1238.42 587.265,1238.05 587.851,1240.54 588.438,1241.05 589.024,1237.67 589.61,1232.94 590.197,1235.2 590.783,1233.28 591.37,1234.33 591.956,1233.91 592.543,1233.63 593.129,1236.11 593.715,1235.59 594.302,1232.52 594.888,1232.23 595.475,1233.08 596.061,1235.27 596.647,1233.25 597.234,1234.22 597.82,1234.98 598.407,1234.47 598.993,1236.75 599.579,1236.26 600.166,1235.56 600.752,1234.67 601.339,1234.2 601.925,1234.95 602.512,1235.79 603.098,1235.11 603.684,1234.48 604.271,1234.01 604.857,1234.99 605.444,1234.33 606.03,1236.56 606.616,1234.69 607.203,1235.52 607.789,1234.93 608.376,1233.21 608.962,1231.26 609.548,1228.14 610.135,1228.04 610.721,1229.49 611.308,1224.87 611.894,1227.55 612.481,1228.58 613.067,1228.3 613.653,1229.34 614.24,1230.26 614.826,1230.25 615.413,1229.74 615.999,1229.48 616.585,1231.9 617.172,1229.96 617.758,1226.87 618.345,1226.74 618.931,1230.68 619.518,1231.57 620.104,1232.85 620.69,1232.54 621.277,1231.75 621.863,1229.87 622.45,1230.91 623.036,1229.19 623.622,1229.15 624.209,1228.79 624.795,1229.81 625.382,1228 625.968,1227.75 626.554,1228.9 627.141,1227.25 627.727,1229.42 628.314,1231.62 628.9,1232.34 629.487,1232.82 630.073,1233.55 630.659,1232.91 631.246,1230.9 631.832,1229.36 632.419,1226.42 633.005,1226.15 633.591,1225.96 634.178,1225.95 634.764,1227.04 635.351,1226.74 635.937,1226.3 636.523,1227.4 637.11,1230.05 637.696,1228.42 638.283,1228 638.869,1229.07 639.456,1231.75 640.042,1231.41 640.628,1234.77 641.215,1235.7 641.801,1236.35 642.388,1235.55 642.974,1236.17 643.56,1234.13 644.147,1232.32 644.733,1230.34 645.32,1231.3 645.906,1229.72 646.492,1229.18 647.079,1227.5 647.665,1225.93 648.252,1225.81 648.838,1222.58 649.425,1226.47 650.011,1224.89 650.597,1225.81 651.184,1226.87 651.77,1226.63 652.357,1226.14 652.943,1225.67 653.529,1220.84 654.116,1220.96 654.702,1221.93 655.289,1225.13 655.875,1223.64 656.462,1226.04 657.048,1225.79 657.634,1222.58 658.221,1222.61 658.807,1222.56 659.394,1221.23 659.98,1221.4 660.566,1222.6 661.153,1219.8 661.739,1221.17 662.326,1221.1 662.912,1218.44 663.498,1218.56 664.085,1217.28 664.671,1217.46 665.258,1216.3 665.844,1220.77 666.431,1218.19 667.017,1220.11 667.603,1224.09 668.19,1226.78 668.776,1223.57 669.363,1223.5 669.949,1223.18 670.535,1224.42 671.122,1222.89 671.708,1224.04 672.295,1223.95 672.881,1219.75 673.467,1219.86 674.054,1219.96 674.64,1221.18 675.227,1221.18 675.813,1222.47 676.4,1219.21 676.986,1220.41 677.572,1219.14 678.159,1220.42 678.745,1218.97 679.332,1220.32 679.918,1220.25 680.504,1221.58 681.091,1222.52 681.677,1220.96 682.264,1218.06 682.85,1218.2 683.436,1219.6 684.023,1222.47 684.609,1222.23 685.196,1220.57 685.782,1221.74 686.369,1224.44 686.955,1224.52 687.541,1222.61 688.128,1221.06 688.714,1222.4 689.301,1224.65 689.887,1226.98 690.473,1230.78 691.06,1230.22 691.646,1229.38 692.233,1229.04 692.819,1227.16 693.405,1226.98 693.992,1226.47 694.578,1224.71 695.165,1224.61 695.751,1224.31 696.338,1223.91 696.924,1224.97 697.51,1229.1 698.097,1227.35 698.683,1225.76 699.27,1225.21 699.856,1223.34 700.442,1222.87 701.029,1223.94 701.615,1220.64 702.202,1217.59 702.788,1217.5 703.375,1218.73 703.961,1215.97 704.547,1211.87 705.134,1216.32 705.72,1217.67 706.307,1220.64 706.893,1223.16 707.479,1222.98 708.066,1224.12 708.652,1224.99 709.239,1224.59 709.825,1224.11 710.411,1222.56 710.998,1225.08 711.584,1223.4 712.171,1226.05 712.757,1225.62 713.344,1225.39 713.93,1223.18 714.516,1223.3 715.103,1224.51 715.689,1221.38 716.276,1222.58 716.862,1222.28 717.448,1217.99 718.035,1219.47 718.621,1218.1 719.208,1220.96 719.794,1219.56 720.38,1217.8 720.967,1215.25 721.553,1215.41 722.14,1212.79 722.726,1214.71 723.313,1215.19 723.899,1216.57 724.485,1219.47 725.072,1220.82 725.658,1219.26 726.245,1221.8 726.831,1223 727.417,1221.22 728.004,1221.1 728.59,1223.87 729.177,1223.7 729.763,1223.5 730.349,1223.35 730.936,1224.52 731.522,1224.38 732.109,1222.57 732.695,1220.9 733.282,1221.21 733.868,1221.07 734.454,1219.34 735.041,1217.62 735.627,1218.87 736.214,1218.88 736.8,1218.74 737.386,1217.21 737.973,1215.99 738.559,1216.15 739.146,1214.91 739.732,1216.46 740.318,1216.44 740.905,1216.35 741.491,1216.36 742.078,1215.32 742.664,1216.94 743.251,1215.77 743.837,1214.71 744.423,1213.63 745.01,1215.32 745.596,1216.79 746.183,1216.64 746.769,1213.88 747.355,1216.9 747.942,1220.01 748.528,1218.73 749.115,1220.26 749.701,1221.66 750.288,1224.13 750.874,1225.28 751.46,1224.58 752.047,1225.49 752.633,1226.49 753.22,1225.63 753.806,1223.66 754.392,1224.7 754.979,1222.9 755.565,1222.14 756.152,1221.65 756.738,1219.84 757.324,1217.96 757.911,1217.81 758.497,1214.75 759.084,1217.44 759.67,1218.87 760.257,1218.75 760.843,1217.66 761.429,1219.18 762.016,1218.91 762.602,1221.56 763.189,1221.13 763.775,1221.98 764.361,1219.03 764.948,1216.17 765.534,1215.98 766.121,1216.17 766.707,1216.04 767.293,1215.08 767.88,1213.7 768.466,1215.19 769.053,1215.39 769.639,1214.05 770.226,1215.5 770.812,1215.36 771.398,1218.12 771.985,1215.42 772.571,1215.18 773.158,1212.22 773.744,1214.07 774.33,1215.21 774.917,1212.71 775.503,1212.69 776.09,1212.91 776.676,1214.63 777.262,1214.79 777.849,1214.88 778.435,1214.84 779.022,1213.7 779.608,1215.21 780.195,1213.99 780.781,1208.35 781.367,1210.31 781.954,1213.6 782.54,1213.83 783.127,1217.03 783.713,1218.59 784.299,1218.7 784.886,1218.6 785.472,1215.84 786.059,1216.07 786.645,1216.34 787.232,1216.46 787.818,1216.18 788.404,1216.01 788.991,1218.77 789.577,1218.56 790.164,1217.41 790.75,1217.34 791.336,1217.33 791.923,1216.13 792.509,1217.72 793.096,1213.61 793.682,1212.48 794.268,1212.79 794.855,1217.17 795.441,1214.61 796.028,1213.5 796.614,1212.47 797.201,1211.28 797.787,1215.57 798.373,1216.9 798.96,1218.31 799.546,1218.17 800.133,1219.58 800.719,1216.62 801.305,1217.94 801.892,1220.77 802.478,1219.13 803.065,1219 803.651,1219.01 804.237,1222.9 804.824,1225.43 805.41,1223.86 805.997,1223.25 806.583,1222.88 807.17,1221.33 807.756,1221.13 808.342,1220.99 808.929,1222.15 809.515,1221.57 810.102,1218.59 810.688,1218.68 811.274,1217.29 811.861,1218.72 812.447,1219.81 813.034,1217.06 813.62,1214.23 814.206,1213.41 814.793,1213.6 815.379,1213.83 815.966,1214.02 816.552,1212.62 817.139,1211.48 817.725,1211.79 818.311,1212.02 818.898,1212.27 819.484,1212.22 820.071,1212.32 820.657,1210.92 821.243,1212.86 821.83,1212.9 822.416,1214.39 823.003,1214.68 823.589,1213.22 824.175,1212.15 824.762,1212.26 825.348,1212.46 825.935,1215.35 826.521,1214.21 827.108,1211.62 827.694,1211.76 828.28,1213.37 828.867,1216.71 829.453,1216.48 830.04,1213.97 830.626,1215.44 831.212,1218.26 831.799,1219.37 832.385,1216.59 832.972,1216.6 833.558,1219.38 834.145,1220.61 834.731,1219.01 835.317,1220.26 835.904,1221.36 836.49,1218.39 837.077,1216.55 837.663,1217.86 838.249,1219.98 838.836,1218.07 839.422,1217.94 840.009,1217.77 840.595,1215.07 841.181,1213.87 841.768,1214.16 842.354,1215.58 842.941,1218.37 843.527,1218.17 844.114,1220.71 844.7,1221.9 845.286,1224.59 845.873,1224.17 846.459,1223.48 847.046,1222.81 847.632,1218.45 848.218,1217.92 848.805,1216.44 849.391,1213.42 849.978,1213.56 850.564,1218.01 851.15,1219.18 851.737,1218.78 852.323,1221.4 852.91,1222.39 853.496,1222.1 854.083,1221.83 854.669,1224.33 855.255,1225.3 855.842,1225.07 856.428,1224.38 857.015,1225.31 857.601,1223.52 858.187,1224.23 858.774,1222.31 859.36,1221.66 859.947,1220 860.533,1219.72 861.119,1216.87 861.706,1215.28 862.292,1213.87 862.879,1211.28 863.465,1212.64 864.052,1212.62 864.638,1211 865.224,1209.7 865.811,1210.06 866.397,1210.17 866.984,1208.95 867.57,1209.32 868.156,1213.85 868.743,1213.51 869.329,1212.12 869.916,1210.84 870.502,1212.46 871.089,1211.15 871.675,1210.18 872.261,1208.89 872.848,1207.42 873.434,1204.67 874.021,1203.92 874.607,1204.48 875.193,1205.11 875.78,1204.75 876.366,1206.46 876.953,1208.19 877.539,1208.52 878.125,1211.76 878.712,1213.43 879.298,1213.52 879.885,1213.55 880.471,1213.81 881.058,1216.66 881.644,1214.99 882.23,1213.42 882.817,1211.95 883.403,1210.91 883.99,1210.04 884.576,1208.43 885.162,1207.76 885.749,1210.71 886.335,1212.21 886.922,1210.92 887.508,1212.89 888.094,1215.84 888.681,1215.69 889.267,1218.37 889.854,1215.3 890.44,1215.34 891.027,1217.95 891.613,1216.41 892.199,1217.97 892.786,1217.72 893.372,1217.54 893.959,1216.03 894.545,1215.96 895.131,1214.35 895.718,1214.26 896.304,1215.83 896.891,1217.04 897.477,1217.99 898.063,1216.56 898.65,1214.15 899.236,1212.8 899.823,1217.07 900.409,1217.25 900.996,1218.43 901.582,1218.28 902.168,1219.6 902.755,1218.07 903.341,1222.09 903.928,1217.61 904.514,1217.34 905.1,1218.53 905.687,1217.01 906.273,1219.47 906.86,1219.3 907.446,1219.26 908.032,1221.67 908.619,1218.77 909.205,1220.13 909.792,1220.24 910.378,1219.79 910.965,1220.84 911.551,1220.35 912.137,1218.63 912.724,1219.99 913.31,1219.66 913.897,1219.36 914.483,1217.62 915.069,1220.15 915.656,1218.63 916.242,1218.52 916.829,1216.58 917.415,1216.69 918.002,1217.87 918.588,1219.21 919.174,1217.67 919.761,1216.48 920.347,1217.59 920.934,1215.95 921.52,1214.71 922.106,1214.74 922.693,1213.48 923.279,1214.7 923.866,1216.37 924.452,1213.49 925.038,1217.24 925.625,1214.43 926.211,1216.96 926.798,1219.41 927.384,1217.66 927.971,1220.3 928.557,1220.15 929.143,1216.9 929.73,1215.46 930.316,1215.09 930.903,1215.06 931.489,1216.35 932.075,1216.29 932.662,1214.56 933.248,1214.43 933.835,1211.58 934.421,1211.57 935.007,1211.77 935.594,1211.94 936.18,1210.8 936.767,1212.43 937.353,1206.73 937.94,1207.26 938.526,1211.81 939.112,1208.92 939.699,1211.77 940.285,1213.47 940.872,1216.47 941.458,1213.51 942.044,1214.8 942.631,1215.9 943.217,1213.15 943.804,1215.89 944.39,1214.3 944.976,1211.47 945.563,1206.43 946.149,1206.9 946.736,1210.23 947.322,1208.02 947.909,1209.64 948.495,1211.4 949.081,1214.25 949.668,1211.51 950.254,1210.15 950.841,1211.67 951.427,1211.95 952.013,1210.64 952.6,1211.08 953.186,1212.2 953.773,1213.9 954.359,1215.37 954.945,1214.05 955.532,1215.44 956.118,1211.37 956.705,1207.34 957.291,1207.44 957.878,1211.62 958.464,1210.18 959.05,1209.13 959.637,1210.82 960.223,1213.91 960.81,1212.44 961.396,1212.34 961.982,1212.4 962.569,1211.5 963.155,1213.17 963.742,1213.26 964.328,1214.83 964.915,1215.9 965.501,1214.44 966.087,1216.01 966.674,1214.6 967.26,1213.45 967.847,1216.23 968.433,1218.88 969.019,1218.57 969.606,1216.44 970.192,1216.13 970.779,1218.83 971.365,1218.81 971.951,1221.38 972.538,1221.01 973.124,1220.91 973.711,1221.88 974.297,1220.33 974.884,1219.89 975.47,1219.89 976.056,1219.45 976.643,1212.47 977.229,1212.83 977.816,1212.64 978.402,1212.92 978.988,1211.66 979.575,1211.82 980.161,1212.06 980.748,1209.36 981.334,1209.4 981.92,1208.29 982.507,1210.26 983.093,1210.85 983.68,1212.68 984.266,1210.08 984.853,1210.16 985.439,1211.63 986.025,1210.62 986.612,1212.21 987.198,1215.18 987.785,1213.88 988.371,1212.43 988.957,1211.13 989.544,1213.87 990.13,1216.8 990.717,1216.38 991.303,1216.03 991.889,1217.23 992.476,1217.19 993.062,1217.1 993.649,1216.74 994.235,1215.4 994.822,1213.99 995.408,1215.48 995.994,1215.57 996.581,1215.56 997.167,1218.38 997.754,1216.65 998.34,1215 998.926,1217.69 999.513,1217.69 1000.1,1217.23 1000.69,1216.95 1001.27,1215.35 1001.86,1218.07 1002.44,1217.79 1003.03,1213.52 1003.62,1213.26 1004.2,1211.85 1004.79,1209.02 1005.38,1210.82 1005.96,1209.6 1006.55,1212.77 1007.14,1212.78 1007.72,1210.06 1008.31,1211.55 1008.9,1211.95 1009.48,1212.12 1010.07,1213.52 1010.65,1213.45 1011.24,1213.65 1011.83,1213.55 1012.41,1213.41 1013,1209.03 1013.59,1209.53 1014.17,1207.29 1014.76,1207.7 1015.35,1209.52 1015.93,1211.38 1016.52,1210.24 1017.11,1212.98 1017.69,1217.07 1018.28,1216.83 1018.86,1218.09 1019.45,1218.14 1020.04,1216.52 1020.62,1217.62 1021.21,1224.37 1021.8,1223.48 1022.38,1226.03 1022.97,1222.35 1023.56,1221.81 1024.14,1219.77 1024.73,1219.12 1025.32,1216.52 1025.9,1214.85 1026.49,1213.2 1027.07,1214.47 1027.66,1213.09 1028.25,1213.06 1028.83,1210.16 1029.42,1209.31 1030.01,1210.96 1030.59,1211.13 1031.18,1208.74 1031.77,1210.24 1032.35,1210.55 1032.94,1206.34 1033.52,1203.92 1034.11,1204.43 1034.7,1203.61 1035.28,1202.91 1035.87,1203.56 1036.46,1206.75 1037.04,1209.89 1037.63,1211.16 1038.22,1212.73 1038.8,1213.12 1039.39,1215.83 1039.98,1217.1 1040.56,1217 1041.15,1215.46 1041.73,1215.27 1042.32,1217.86 1042.91,1219.06 1043.49,1218.81 1044.08,1218.7 1044.67,1217.1 1045.25,1216.63 1045.84,1215.13 1046.43,1216.53 1047.01,1216.27 1047.6,1215.9 1048.19,1213.08 1048.77,1211.68 1049.36,1210.18 1049.94,1210.36 1050.53,1209.08 1051.12,1209.32 1051.7,1206.68 1052.29,1209.78 1052.88,1211.22 1053.46,1209.82 1054.05,1209.07 1054.64,1207.67 1055.22,1207.87 1055.81,1208.29 1056.39,1207.16 1056.98,1207.69 1057.57,1207.93 1058.15,1209.45 1058.74,1209.68 1059.33,1212.65 1059.91,1215.78 1060.5,1215.92 1061.09,1215.66 1061.67,1212.94 1062.26,1213.07 1062.85,1210.42 1063.43,1210.55 1064.02,1210.77 1064.6,1211.24 1065.19,1212.82 1065.78,1214.36 1066.36,1214.38 1066.95,1214.35 1067.54,1212.77 1068.12,1213.86 1068.71,1213.7 1069.3,1212.38 1069.88,1212.77 1070.47,1214.22 1071.06,1212.95 1071.64,1212.75 1072.23,1215.64 1072.81,1212.87 1073.4,1214.34 1073.99,1214.35 1074.57,1214.35 1075.16,1215.56 1075.75,1216.86 1076.33,1216.64 1076.92,1214.92 1077.51,1214.74 1078.09,1216.34 1078.68,1217.83 1079.26,1217.39 1079.85,1218.52 1080.44,1218.24 1081.02,1217.86 1081.61,1214.85 1082.2,1213.43 1082.78,1213.04 1083.37,1218.68 1083.96,1222.38 1084.54,1219.09 1085.13,1218.39 1085.72,1215.13 1086.3,1211.95 1086.89,1213.74 1087.47,1213.44 1088.06,1213.36 1088.65,1213.28 1089.23,1214.53 1089.82,1214.37 1090.41,1217.16 1090.99,1215.64 1091.58,1216.83 1092.17,1216.68 1092.75,1216.6 1093.34,1214.88 1093.93,1214.83 1094.51,1217.96 1095.1,1220.46 1095.68,1215.98 1096.27,1218.57 1096.86,1221.14 1097.44,1222.1 1098.03,1220.25 1098.62,1223.83 1099.2,1223.25 1099.79,1219.99 1100.38,1219.59 1100.96,1217.76 1101.55,1214.81 1102.14,1213.13 1102.72,1212.93 1103.31,1211.8 1103.89,1211.86 1104.48,1213.94 1105.07,1212.68 1105.65,1211.35 1106.24,1211.41 1106.83,1211.58 1107.41,1215.73 1108,1214.17 1108.59,1214.09 1109.17,1216.98 1109.76,1216.88 1110.34,1216.79 1110.93,1213.75 1111.52,1213.91 1112.1,1212.35 1112.69,1211.17 1113.28,1211.07 1113.86,1209.68 1114.45,1207.27 1115.04,1206.27 1115.62,1202.44 1116.21,1205.87 1116.8,1206.06 1117.38,1204.03 1117.97,1207.71 1118.55,1208.1 1119.14,1207.11 1119.73,1207.66 1120.31,1208.08 1120.9,1209.56 1121.49,1208.21 1122.07,1210.11 1122.66,1210.05 1123.25,1211.63 1123.83,1213.17 1124.42,1213.23 1125.01,1214.62 1125.59,1215.91 1126.18,1215.79 1126.76,1212.79 1127.35,1212.57 1127.94,1211.38 1128.52,1211.54 1129.11,1211.74 1129.7,1210.35 1130.28,1210.79 1130.87,1212.39 1131.46,1210.8 1132.04,1209.49 1132.63,1209.85 1133.21,1210.29 1133.8,1211.87 1134.39,1213.31 1134.97,1209.21 1135.56,1211.94 1136.15,1212.17 1136.73,1210.83 1137.32,1212.42 1137.91,1213.73 1138.49,1212.55 1139.08,1215.28 1139.67,1212.4 1140.25,1213.9 1140.84,1213.94 1141.42,1212.96 1142.01,1211.77 1142.6,1216.07 1143.18,1214.59 1143.77,1217.11 1144.36,1218.28 1144.94,1215.36 1145.53,1214.9 1146.12,1213.28 1146.7,1213.33 1147.29,1214.64 1147.88,1217.22 1148.46,1217.38 1149.05,1214.49 1149.63,1216.06 1150.22,1216.12 1150.81,1216.09 1151.39,1216.12 1151.98,1218.85 1152.57,1216.16 1153.15,1215.92 1153.74,1217.08 1154.33,1218.18 1154.91,1217.98 1155.5,1217.89 1156.09,1216.41 1156.67,1218.67 1157.26,1218.25 1157.84,1220.81 1158.43,1220.71 1159.02,1220.35 1159.6,1221.77 1160.19,1221.08 1160.78,1223.5 1161.36,1220.24 1161.95,1217.36 1162.54,1218.48 1163.12,1218.36 1163.71,1218.36 1164.29,1213.81 1164.88,1215.35 1165.47,1213.57 1166.05,1210.91 1166.64,1215.09 1167.23,1213.35 1167.81,1212.06 1168.4,1216.08 1168.99,1212.85 1169.57,1211.47 1170.16,1213.17 1170.75,1214.62 1171.33,1213 1171.92,1215.27 1172.5,1216.52 1173.09,1210.88 1173.68,1213.63 1174.26,1212.53 1174.85,1215.46 1175.44,1214 1176.02,1213.77 1176.61,1216.33 1177.2,1217.26 1177.78,1215.76 1178.37,1216.81 1178.96,1216.36 1179.54,1210.64 1180.13,1210.75 1180.71,1215.41 1181.3,1213.92 1181.89,1209.76 1182.47,1211.43 1183.06,1210.5 1183.65,1209.09 1184.23,1207.86 1184.82,1209.59 1185.41,1211.03 1185.99,1213.82 1186.58,1215.64 1187.16,1212.82 1187.75,1213.15 1188.34,1211.53 1188.92,1214.34 1189.51,1212.81 1190.1,1213.04 1190.68,1214.45 1191.27,1214.4 1191.86,1212.73 1192.44,1212.88 1193.03,1210.29 1193.62,1209.57 1194.2,1207 1194.79,1207.63 1195.37,1207.88 1195.96,1207.02 1196.55,1207.4 1197.13,1207.51 1197.72,1209.06 1198.31,1209.06 1198.89,1206.39 1199.48,1208.01 1200.07,1208.7 1200.65,1209.03 1201.24,1209.3 1201.83,1209.66 1202.41,1208.22 1203,1210.87 1203.58,1212.58 1204.17,1212.66 1204.76,1216.66 1205.34,1216.56 1205.93,1213.41 1206.52,1212.02 1207.1,1213.51 1207.69,1216.45 1208.28,1216.43 1208.86,1213.61 1209.45,1216.04 1210.03,1215.97 1210.62,1211.59 1211.21,1210.15 1211.79,1210.06 1212.38,1210.43 1212.97,1206.57 1213.55,1205.86 1214.14,1208.88 1214.73,1214.2 1215.31,1212.81 1215.9,1213.16 1216.49,1214.59 1217.07,1214.79 1217.66,1216.06 1218.24,1218.67 1218.83,1219.92 1219.42,1219.86 1220,1219.39 1220.59,1220.35 1221.18,1220.19 1221.76,1220.09 1222.35,1219.61 1222.94,1219.1 1223.52,1217.48 1224.11,1219.71 1224.7,1218.5 1225.28,1216.59 1225.87,1216.25 1226.45,1213.57 1227.04,1215.08 1227.63,1213.69 1228.21,1216.43 1228.8,1214.94 1229.39,1213.82 1229.97,1217.93 1230.56,1217.79 1231.15,1218.86 1231.73,1216.99 1232.32,1213.67 1232.91,1213.72 1233.49,1215.18 1234.08,1214.06 1234.66,1212.61 1235.25,1215.5 1235.84,1215.33 1236.42,1219.65 1237.01,1222.24 1237.6,1221.77 1238.18,1219.92 1238.77,1218.16 1239.36,1216.65 1239.94,1216.47 1240.53,1214.53 1241.11,1213.12 1241.7,1215.99 1242.29,1214.41 1242.87,1214.26 1243.46,1210.2 1244.05,1210.17 1244.63,1210.14 1245.22,1210.31 1245.81,1211.85 1246.39,1216 1246.98,1218.8 1247.57,1220 1248.15,1218.57 1248.74,1216.99 1249.32,1215.58 1249.91,1210.17 1250.5,1210.42 1251.08,1209.11 1251.67,1208.05 1252.26,1206.57 1252.84,1208.19 1253.43,1208.65 1254.02,1207.47 1254.6,1207.94 1255.19,1206.95 1255.78,1208.61 1256.36,1208.91 1256.95,1212.3 1257.53,1215.11 1258.12,1216.15 1258.71,1216.17 1259.29,1216.08 1259.88,1217.37 1260.47,1217.07 1261.05,1219.75 1261.64,1218.13 1262.23,1215.12 1262.81,1215.14 1263.4,1215.06 1263.98,1214.98 1264.57,1214.78 1265.16,1214.57 1265.74,1214.77 1266.33,1212.07 1266.92,1210.68 1267.5,1209.42 1268.09,1208.53 1268.68,1207.29 1269.26,1210.66 1269.85,1210.58 1270.44,1208.08 1271.02,1209.85 1271.61,1207.22 1272.19,1210.14 1272.78,1210.01 1273.37,1208.8 1273.95,1210.64 1274.54,1211.07 1275.13,1211.41 1275.71,1212.79 1276.3,1212.92 1276.89,1213.17 1277.47,1211.58 1278.06,1211.52 1278.65,1211.97 1279.23,1213.42 1279.82,1211.98 1280.4,1210.74 1280.99,1213.6 1281.58,1214.96 1282.16,1213.72 1282.75,1212.32 1283.34,1211.04 1283.92,1209.83 1284.51,1210.04 1285.1,1213.25 1285.68,1211.79 1286.27,1213.49 1286.86,1213.78 1287.44,1215.29 1288.03,1212.09 1288.61,1210.89 1289.2,1209.85 1289.79,1213.96 1290.37,1212.48 1290.96,1211.4 1291.55,1210.14 1292.13,1210.17 1292.72,1213.4 1293.31,1217.58 1293.89,1216.06 1294.48,1215.88 1295.06,1215.95 1295.65,1215.53 1296.24,1216.91 1296.82,1216.64 1297.41,1212.16 1298,1215.17 1298.58,1216.61 1299.17,1213.66 1299.76,1215.19 1300.34,1217.91 1300.93,1216.27 1301.52,1218.91 1302.1,1218.88 1302.69,1218.55 1303.27,1216.73 1303.86,1216.58 1304.45,1216.19 1305.03,1214.58 1305.62,1211.37 1306.21,1210.15 1306.79,1213 1307.38,1210.08 1307.97,1208.88 1308.55,1210.62 1309.14,1210.59 1309.73,1210.64 1310.31,1214.94 1310.9,1213.53 1311.48,1214.67 1312.07,1212.09 1312.66,1213.78 1313.24,1212.57 1313.83,1208.56 1314.42,1208.92 1315,1210.33 1315.59,1211.77 1316.18,1210.32 1316.76,1210.59 1317.35,1207.75 1317.93,1206.76 1318.52,1207.47 1319.11,1206.17 1319.69,1205.26 1320.28,1205.51 1320.87,1205.96 1321.45,1207.81 1322.04,1206.68 1322.63,1205.83 1323.21,1208.82 1323.8,1210.24 1324.39,1211.6 1324.97,1211.7 1325.56,1211.69 1326.14,1213.15 1326.73,1212.88 1327.32,1211.43 1327.9,1211.49 1328.49,1208.95 1329.08,1209.35 1329.66,1212.49 1330.25,1212.55 1330.84,1212.51 1331.42,1210.11 1332.01,1213.22 1332.6,1216.16 1333.18,1215.79 1333.77,1216.91 1334.35,1218.2 1334.94,1220.51 1335.53,1221.37 1336.11,1219.6 1336.7,1216.2 1337.29,1218.62 1337.87,1218.35 1338.46,1216.83 1339.05,1216.62 1339.63,1215.08 1340.22,1213.89 1340.8,1213.83 1341.39,1214.99 1341.98,1213.77 1342.56,1213.72 1343.15,1209.77 1343.74,1208.53 1344.32,1207.36 1344.91,1210.51 1345.5,1210.55 1346.08,1209.26 1346.67,1208.41 1347.26,1208.88 1347.84,1208.77 1348.43,1207.51 1349.01,1208.01 1349.6,1208.27 1350.19,1207.5 1350.77,1207.89 1351.36,1205.63 1351.95,1207.69 1352.53,1209.27 1353.12,1208.17 1353.71,1208.37 1354.29,1208.66 1354.88,1208.92 1355.47,1208.94 1356.05,1210.64 1356.64,1208.19 1357.22,1209.96 1357.81,1208.69 1358.4,1209.03 1358.98,1210.62 1359.57,1210.84 1360.16,1213.56 1360.74,1211.91 1361.33,1211.85 1361.92,1210.73 1362.5,1208.18 1363.09,1209.78 1363.68,1212.44 1364.26,1211.18 1364.85,1214.14 1365.43,1214.34 1366.02,1214.62 1366.61,1215.78 1367.19,1214.3 1367.78,1215.74 1368.37,1218.41 1368.95,1220.86 1369.54,1221.87 1370.13,1225.22 1370.71,1224.82 1371.3,1225.92 1371.88,1223.87 1372.47,1221.75 1373.06,1221.2 1373.64,1219.21 1374.23,1220.19 1374.82,1219.79 1375.4,1220.97 1375.99,1220.65 1376.58,1219.99 1377.16,1218.22 1377.75,1219.27 1378.34,1219.31 1378.92,1217.45 1379.51,1221.18 1380.09,1220.68 1380.68,1220.32 1381.27,1218.39 1381.85,1219.51 1382.44,1220.66 1383.03,1220.45 1383.61,1225.72 1384.2,1224.81 1384.79,1225.47 1385.37,1224.96 1385.96,1223.19 1386.55,1224.05 1387.13,1224.83 1387.72,1224.21 1388.3,1225.05 1388.89,1224.29 1389.48,1223.64 1390.06,1223.03 1390.65,1222.55 1391.24,1224.44 1391.82,1225.18 1392.41,1223.17 1393,1224.36 1393.58,1226.45 1394.17,1224.71 1394.75,1222.52 1395.34,1225.51 1395.93,1225.98 1396.51,1222.66 1397.1,1223.23 1397.69,1219.66 1398.27,1216.77 1398.86,1216.59 1399.45,1217.79 1400.03,1216.32 1400.62,1218.75 1401.21,1217.11 1401.79,1216.89 1402.38,1213.85 1402.96,1213.81 1403.55,1210.83 1404.14,1212.19 1404.72,1212.15 1405.31,1209.44 1405.9,1208.26 1406.48,1208.62 1407.07,1207.31 1407.66,1203.24 1408.24,1205.15 1408.83,1205.54 1409.42,1204.72 1410,1206.5 1410.59,1206.79 1411.17,1205.55 1411.76,1207.36 1412.35,1207.49 1412.93,1207.6 1413.52,1205.39 1414.11,1204.55 1414.69,1203.87 1415.28,1203.17 1415.87,1206.31 1416.45,1205.26 1417.04,1205.64 1417.63,1207.89 1418.21,1206.81 1418.8,1207.29 1419.38,1207.56 1419.97,1209.18 1420.56,1206.47 1421.14,1205.27 1421.73,1205.67 1422.32,1205.64 1422.9,1206.25 1423.49,1206.31 1424.08,1207.95 1424.66,1206.71 1425.25,1206.98 1425.83,1210.18 1426.42,1207.62 1427.01,1210.94 1427.59,1211.51 1428.18,1215.64 1428.77,1216.82 1429.35,1217.7 1429.94,1219 1430.53,1217.38 1431.11,1221.09 1431.7,1223.28 1432.29,1222.68 1432.87,1218.24 1433.46,1220.55 1434.04,1220.06 1434.63,1218.26 1435.22,1217.97 1435.8,1217.76 1436.39,1217.6 1436.98,1218.9 1437.56,1218.8 1438.15,1217.13 1438.74,1216.95 1439.32,1219.3 1439.91,1220.24 1440.5,1215.77 1441.08,1215.95 1441.67,1214.33 1442.25,1213.02 1442.84,1213.07 1443.43,1214.56 1444.01,1215.82 1444.6,1215.7 1445.19,1214.42 1445.77,1217.12 1446.36,1215.55 1446.95,1215.32 1447.53,1215.34 1448.12,1209.86 1448.7,1208.57 1449.29,1208.7 1449.88,1209.06 1450.46,1209.72 1451.05,1208.37 1451.64,1206.07 1452.22,1205.17 1452.81,1205.53 1453.4,1204.47 1453.98,1203.53 1454.57,1204.54 1455.16,1206.59 1455.74,1208.43 1456.33,1207.44 1456.91,1208.97 1457.5,1210.64 1458.09,1214.87 1458.67,1219.37 1459.26,1217.79 1459.85,1214.77 1460.43,1216 1461.02,1215.58 1461.61,1216.85 1462.19,1214.14 1462.78,1211.66 1463.37,1210.28 1463.95,1210.47 1464.54,1210.59 1465.12,1210.98 1465.71,1212.4 1466.3,1212.69 1466.88,1218.05 1467.47,1217.78 1468.06,1217.64 1468.64,1217.29 1469.23,1215.8 1469.82,1214.2 1470.4,1214.21 1470.99,1211.46 1471.57,1212.8 1472.16,1215.42 1472.75,1216.5 1473.33,1216.49 1473.92,1216.62 1474.51,1218.03 1475.09,1216.4 1475.68,1217.29 1476.27,1217.13 1476.85,1219.47 1477.44,1217.45 1478.03,1218.5 1478.61,1218.13 1479.2,1216.68 1479.78,1219.32 1480.37,1213.83 1480.96,1212.58 1481.54,1212.68 1482.13,1208.25 1482.72,1209.69 1483.3,1208.7 1483.89,1210.28 1484.48,1208.96 1485.06,1207.64 1485.65,1205.14 1486.24,1212.58 1486.82,1211.24 1487.41,1211.52 1487.99,1214.35 1488.58,1212.93 1489.17,1212.9 1489.75,1215.73 1490.34,1217.01 1490.93,1219.47 1491.51,1220.66 1492.1,1218.83 1492.69,1217.09 1493.27,1215.6 1493.86,1215.67 1494.45,1215.33 1495.03,1215.38 1495.62,1215 1496.2,1216.23 1496.79,1210.83 1497.38,1211.02 1497.96,1212.39 1498.55,1209.82 1499.14,1208.64 1499.72,1212.83 1500.31,1212.93 1500.9,1213.16 1501.48,1213.13 1502.07,1209.03 1502.65,1207.61 1503.24,1205.04 1503.83,1205.44 1504.41,1204.46 1505,1204.92 1505.59,1205.13 1506.17,1205.55 1506.76,1205.8 1507.35,1208.83 1507.93,1209.22 1508.52,1215 1509.11,1213.55 1509.69,1213.36 1510.28,1210.63 1510.86,1210.92 1511.45,1208.54 1512.04,1210.31 1512.62,1211.9 1513.21,1213.41 1513.8,1214.88 1514.38,1214.84 1514.97,1213.52 1515.56,1213.51 1516.14,1213.46 1516.73,1210.62 1517.32,1210.89 1517.9,1208.1 1518.49,1209.68 1519.07,1209.89 1519.66,1207.45 1520.25,1204.97 1520.83,1205.38 1521.42,1207.05 1522.01,1206.97 1522.59,1208.92 1523.18,1209.1 1523.77,1209.35 1524.35,1212.49 1524.94,1211.27 1525.52,1210.03 1526.11,1209.07 1526.7,1210.52 1527.28,1208.25 1527.87,1210.16 1528.46,1209.16 1529.04,1209.58 1529.63,1212.4 1530.22,1209.78 1530.8,1208.43 1531.39,1207.3 1531.98,1207.62 1532.56,1209.35 1533.15,1208.23 1533.73,1208.44 1534.32,1210.35 1534.91,1212.09 1535.49,1212.07 1536.08,1213.61 1536.67,1214.77 1537.25,1215.76 1537.84,1218.16 1538.43,1219.35 1539.01,1217.53 1539.6,1209.14 1540.19,1209.16 1540.77,1212.01 1541.36,1212.28 1541.94,1212.35 1542.53,1212.5 1543.12,1208.4 1543.7,1214.02 1544.29,1214.26 1544.88,1212.79 1545.46,1212.95 1546.05,1214.27 1546.64,1214.38 1547.22,1212.87 1547.81,1211.72 1548.4,1212.95 1548.98,1213.03 1549.57,1214.42 1550.15,1217.29 1550.74,1218.53 1551.33,1218.2 1551.91,1219.18 1552.5,1217.58 1553.09,1217.28 1553.67,1214.55 1554.26,1214.72 1554.85,1214.65 1555.43,1215.99 1556.02,1213.11 1556.6,1213.16 1557.19,1217.43 1557.78,1218.57 1558.36,1218.34 1558.95,1219.37 1559.54,1219.14 1560.12,1216.27 1560.71,1216 1561.3,1213.11 1561.88,1217.29 1562.47,1214.22 1563.06,1211.52 1563.64,1212.91 1564.23,1214.31 1564.81,1215.5 1565.4,1215.38 1565.99,1215.53 1566.57,1216.66 1567.16,1216.65 1567.75,1214.66 1568.33,1215.97 1568.92,1218.74 1569.51,1221.35 1570.09,1219.62 1570.68,1219.37 1571.27,1218.9 1571.85,1218.84 1572.44,1218.7 1573.02,1215.92 1573.61,1215.84 1574.2,1215.71 1574.78,1215.44 1575.37,1216.64 1575.96,1215.29 1576.54,1218.13 1577.13,1216.18 1577.72,1214.67 1578.3,1214.56 1578.89,1217.14 1579.47,1215.5 1580.06,1214.11 1580.65,1213.98 1581.23,1212.96 1581.82,1211.53 1582.41,1213.02 1582.99,1210.15 1583.58,1210.05 1584.17,1208.71 1584.75,1210.7 1585.34,1210.7 1585.93,1209.35 1586.51,1208.17 1587.1,1208.18 1587.68,1209.76 1588.27,1211.27 1588.86,1208.89 1589.44,1206.24 1590.03,1209.35 1590.62,1211.15 1591.2,1209.88 1591.79,1211.63 1592.38,1210.17 1592.96,1208.92 1593.55,1208.06 1594.14,1208.41 1594.72,1212.88 1595.31,1216.88 1595.89,1217.78 1596.48,1215.98 1597.07,1214.5 1597.65,1212.89 1598.24,1211.69 1598.83,1213.09 1599.41,1211.42 1600,1212.96 1600.59,1214.33 1601.17,1217.02 1601.76,1215.24 1602.34,1215.17 1602.93,1213.22 1603.52,1213.06 1604.1,1212.77 1604.69,1212.55 1605.28,1210.87 1605.86,1212.36 1606.45,1209.42 1607.04,1209.48 1607.62,1210.89 1608.21,1211.17 1608.8,1212.33 1609.38,1209.9 1609.97,1212.79 1610.55,1210.19 1611.14,1211.61 1611.73,1210.6 1612.31,1209.2 1612.9,1208.07 1613.49,1211.34 1614.07,1211.52 1614.66,1211.66 1615.25,1213.42 1615.83,1217.53 1616.42,1214.46 1617.01,1214.13 1617.59,1208.27 1618.18,1207.5 1618.76,1210.69 1619.35,1212.47 1619.94,1212.44 1620.52,1208.44 1621.11,1205.89 1621.7,1209.34 1622.28,1210.86 1622.87,1215.1 1623.46,1216.53 1624.04,1216.14 1624.63,1214.6 1625.22,1214.37 1625.8,1214.69 1626.39,1213.35 1626.97,1213.46 1627.56,1212.24 1628.15,1212.33 1628.73,1213.63 1629.32,1211.97 1629.91,1214.52 1630.49,1214.73 1631.08,1213.3 1631.67,1212.1 1632.25,1213.64 1632.84,1212.21 1633.42,1213.68 1634.01,1213.84 1634.6,1213.34 1635.18,1213.13 1635.77,1214.8 1636.36,1214.7 1636.94,1213.34 1637.53,1210.41 1638.12,1212.18 1638.7,1213.65 1639.29,1212.25 1639.88,1212.37 1640.46,1216.58 1641.05,1215.05 1641.63,1216.26 1642.22,1214.72 1642.81,1215.68 1643.39,1211.33 1643.98,1209.98 1644.57,1210.02 1645.15,1210.1 1645.74,1210.47 1646.33,1212 1646.91,1209.34 1647.5,1209.51 1648.09,1209.59 1648.67,1211.07 1649.26,1215.37 1649.84,1216.58 1650.43,1217.66 1651.02,1218.76 1651.6,1218.76 1652.19,1218.52 1652.78,1217.12 1653.36,1219.44 1653.95,1216.35 1654.54,1219.06 1655.12,1217.26 1655.71,1218.86 1656.29,1215.74 1656.88,1214.2 1657.47,1216.86 1658.05,1217.82 1658.64,1215.77 1659.23,1214.51 1659.81,1214.62 1660.4,1215.94 1660.99,1218.73 1661.57,1219.45 1662.16,1217.66 1662.75,1220.1 1663.33,1221.01 1663.92,1219.48 1664.5,1219.08 1665.09,1220.46 1665.68,1221.67 1666.26,1218.55 1666.85,1219.73 1667.44,1219.44 1668.02,1216.53 1668.61,1216.42 1669.2,1217.84 1669.78,1214.51 1670.37,1217.05 1670.96,1215.44 1671.54,1216.46 1672.13,1219.17 1672.71,1215.96 1673.3,1215.97 1673.89,1213.34 1674.47,1210.52 1675.06,1213.25 1675.65,1213.01 1676.23,1214.61 1676.82,1217.01 1677.41,1217.78 1677.99,1217.52 1678.58,1217.5 1679.17,1215.88 1679.75,1215.61 1680.34,1218.01 1680.92,1219 1681.51,1217.28 1682.1,1215.71 1682.68,1215.79 1683.27,1217.45 1683.86,1216.03 1684.44,1217.37 1685.03,1215.72 1685.62,1217.07 1686.2,1217.1 1686.79,1218.29 1687.37,1216.68 1687.96,1216.76 1688.55,1216.62 1689.13,1217.83 1689.72,1220.59 1690.31,1219.02 1690.89,1217.54 1691.48,1216.04 1692.07,1213.18 1692.65,1209.12 1693.24,1213.6 1693.83,1212.25 1694.41,1212.53 1695,1213.87 1695.58,1212.49 1696.17,1214.17 1696.76,1215.48 1697.34,1217.87 1697.93,1214.9 1698.52,1213.61 1699.1,1210.97 1699.69,1209.54 1700.28,1211.03 1700.86,1212.59 1701.45,1212.55 1702.04,1212.65 1702.62,1212.91 1703.21,1213.04 1703.79,1211.76 1704.38,1211.88 1704.97,1213.32 1705.55,1212.07 1706.14,1212.23 1706.73,1209.43 1707.31,1208.22 1707.9,1207.07 1708.49,1205.71 1709.07,1206.37 1709.66,1205.43 1710.24,1208.58 1710.83,1208.77 1711.42,1211.66 1712,1211.63 1712.59,1210.43 1713.18,1213.37 1713.76,1212.03 1714.35,1212.15 1714.94,1210.57 1715.52,1209.42 1716.11,1212.56 1716.7,1211.09 1717.28,1211.23 1717.87,1212.82 1718.45,1214.22 1719.04,1214.1 1719.63,1214.02 1720.21,1213.93 1720.8,1210.85 1721.39,1209.69 1721.97,1210.12 1722.56,1213.14 1723.15,1214.38 1723.73,1212.66 1724.32,1211.36 1724.91,1210.07 1725.49,1210.37 1726.08,1210.34 1726.66,1212.1 1727.25,1209.37 1727.84,1210.96 1728.42,1209.79 1729.01,1213.01 1729.6,1211.91 1730.18,1210.67 1730.77,1210.81 1731.36,1212.48 1731.94,1209.98 1732.53,1211.21 1733.11,1209.99 1733.7,1211.63 1734.29,1213.04 1734.87,1211.79 1735.46,1213.4 1736.05,1211.94 1736.63,1210.65 1737.22,1212.2 1737.81,1213.48 1738.39,1213.21 1738.98,1215.56 1739.57,1215.59 1740.15,1217.07 1740.74,1215.4 1741.32,1215.23 1741.91,1215.18 1742.5,1210.95 1743.08,1215.11 1743.67,1215.19 1744.26,1213.51 1744.84,1212.12 1745.43,1213.56 1746.02,1216.12 1746.6,1211.96 1747.19,1213.31 1747.78,1216.11 1748.36,1215.98 1748.95,1211.99 1749.53,1214.75 1750.12,1214.62 1750.71,1212.06 1751.29,1213.74 1751.88,1213.79 1752.47,1215.52 1753.05,1214.13 1753.64,1214.47 1754.23,1214.64 1754.81,1217.56 1755.4,1217.55 1755.99,1214.41 1756.57,1215.82 1757.16,1215.59 1757.74,1215.62 1758.33,1215.33 1758.92,1216.52 1759.5,1212.47 1760.09,1212.77 1760.68,1213.07 1761.26,1213.08 1761.85,1211.53 1762.44,1210.16 1763.02,1210.14 1763.61,1207.51 1764.19,1207.66 1764.78,1207.98 1765.37,1207.13 1765.95,1205.99 1766.54,1206.36 1767.13,1208.31 1767.71,1209.98 1768.3,1211.38 1768.89,1211.38 1769.47,1212.97 1770.06,1214.63 1770.65,1214.66 1771.23,1215.84 1771.82,1214.33 1772.4,1215.5 1772.99,1213.82 1773.58,1215.51 1774.16,1216.67 1774.75,1219.21 1775.34,1220.46 1775.92,1218.36 1776.51,1213.68 1777.1,1215.12 1777.68,1214.91 1778.27,1218.82 1778.86,1219.82 1779.44,1218.24 1780.03,1217.93 1780.61,1213.68 1781.2,1215.04 1781.79,1219.11 1782.37,1218.96 1782.96,1217.2 1783.55,1215.74 1784.13,1217.04 1784.72,1218.43 1785.31,1216.8 1785.89,1215.12 1786.48,1213.74 1787.06,1213.86 1787.65,1214.08 1788.24,1214.02 1788.82,1214.07 1789.41,1214.02 1790,1214.14 1790.58,1215.62 1791.17,1217.13 1791.76,1214.3 1792.34,1212.72 1792.93,1212.7 1793.52,1214.11 1794.1,1220.81 1794.69,1219.22 1795.27,1218.88 1795.86,1220.07 1796.45,1220.97 1797.03,1221.83 1797.62,1220.16 1798.21,1218.37 1798.79,1215.62 1799.38,1216.66 1799.97,1217.88 1800.55,1217.6 1801.14,1219.93 1801.73,1218.13 1802.31,1217.98 1802.9,1217.68 1803.48,1215.97 1804.07,1214.5 1804.66,1214.46 1805.24,1214.72 1805.83,1213.34 1806.42,1215.91 1807,1215.62 1807.59,1214 1808.18,1214.2 1808.76,1214.39 1809.35,1213.24 1809.94,1209.16 1810.52,1207.98 1811.11,1209.63 1811.69,1209.59 1812.28,1207.09 1812.87,1208.6 1813.45,1208.96 1814.04,1206.26 1814.63,1206.49 1815.21,1207.21 1815.8,1207.49 1816.39,1207.75 1816.97,1210.59 1817.56,1212.03 1818.14,1212.33 1818.73,1212.35 1819.32,1210.8 1819.9,1215.35 1820.49,1215.53 1821.08,1215.68 1821.66,1212.95 1822.25,1214.25 1822.84,1214.28 1823.42,1215.47 1824.01,1215.42 1824.6,1216.33 1825.18,1218.77 1825.77,1218.38 1826.35,1215.39 1826.94,1215.16 1827.53,1216.22 1828.11,1213.45 1828.7,1218.98 1829.29,1221.35 1829.87,1219.42 1830.46,1219.08 1831.05,1221.68 1831.63,1222.72 1832.22,1223.51 1832.81,1219.95 1833.39,1219.67 1833.98,1219.68 1834.56,1216.78 1835.15,1217.93 1835.74,1217.52 1836.32,1213.13 1836.91,1210.24 1837.5,1207.73 1838.08,1209.31 1838.67,1206.91 1839.26,1210.11 1839.84,1207.71 1840.43,1208.03 1841.01,1205.54 1841.6,1208.72 1842.19,1207.68 1842.77,1208.07 1843.36,1209.64 1843.95,1208.61 1844.53,1210.23 1845.12,1211.69 1845.71,1211.91 1846.29,1213.47 1846.88,1213.43 1847.47,1214.88 1848.05,1214.98 1848.64,1215.04 1849.22,1214.68 1849.81,1216.15 1850.4,1213.32 1850.98,1214.57 1851.57,1215.77 1852.16,1215.51 1852.74,1215.25 1853.33,1213.96 1853.92,1211.14 1854.5,1212.76 1855.09,1211.21 1855.68,1214 1856.26,1213.82 1856.85,1210.89 1857.43,1213.67 1858.02,1212.14 1858.61,1210.47 1859.19,1210.71 1859.78,1212.1 1860.37,1213.65 1860.95,1210.35 1861.54,1208.78 1862.13,1208.71 1862.71,1207.5 1863.3,1207.6 1863.88,1210.75 1864.47,1212.37 1865.06,1212.37 1865.64,1209.81 1866.23,1211.32 1866.82,1208.94 1867.4,1211.95 1867.99,1214.51 1868.58,1211.81 1869.16,1210.6 1869.75,1206.33 1870.34,1206.63 1870.92,1205.46 1871.51,1206.02 1872.09,1206.36 1872.68,1211.13 1873.27,1210.92 1873.85,1211.07 1874.44,1212.47 1875.03,1212.7 1875.61,1217.03 1876.2,1214.12 1876.79,1213.92 1877.37,1216.45 1877.96,1216.45 1878.55,1212.49 1879.13,1209.71 1879.72,1208.98 1880.3,1208.02 1880.89,1209.53 1881.48,1208.56 1882.06,1210.32 1882.65,1209.34 1883.24,1206.86 1883.82,1204.53 1884.41,1206.8 1885,1207.29 1885.58,1207.97 1886.17,1205.33 1886.76,1207.6 1887.34,1208.08 1887.93,1211.05 1888.51,1211.22 1889.1,1211.42 1889.69,1213.15 1890.27,1213.14 1890.86,1213.33 1891.45,1216.15 1892.03,1217.41 1892.62,1217.49 1893.21,1214.39 1893.79,1218.25 1894.38,1219.24 1894.96,1218.65 1895.55,1217.08 1896.14,1215.6 1896.72,1218.41 1897.31,1219.3 1897.9,1216.25 1898.48,1213.68 1899.07,1215.07 1899.66,1214.53 1900.24,1217.44 1900.83,1214.23 1901.42,1215.5 1902,1216.86 1902.59,1217.81 1903.17,1217.57 1903.76,1218.89 1904.35,1221.37 1904.93,1219.62 1905.52,1220.84 1906.11,1220.54 1906.69,1217.55 1907.28,1215.9 1907.87,1215.72 1908.45,1216.97 1909.04,1216.78 1909.63,1218 1910.21,1216.26 1910.8,1211.93 1911.38,1210.6 1911.97,1210.72 1912.56,1210.86 1913.14,1207.15 1913.73,1210.05 1914.32,1210.56 1914.9,1212.12 1915.49,1217.4 1916.08,1215.96 1916.66,1217.43 1917.25,1217.37 1917.83,1214.71 1918.42,1213.07 1919.01,1211.69 1919.59,1212.02 1920.18,1211.74 1920.77,1217.27 1921.35,1215.58 1921.94,1214.1 1922.53,1215.61 1923.11,1213.89 1923.7,1215.31 1924.29,1217.91 1924.87,1218.99 1925.46,1218.71 1926.04,1217.15 1926.63,1214.21 1927.22,1215.59 1927.8,1214.01 1928.39,1212.56 1928.98,1212.74 1929.56,1214.24 1930.15,1214.18 1930.74,1214.11 1931.32,1213.93 1931.91,1213.98 1932.5,1215.3 1933.08,1215.2 1933.67,1216.47 1934.25,1215.17 1934.84,1213.72 1935.43,1215.21 1936.01,1216.4 1936.6,1214.87 1937.19,1217.71 1937.77,1220.17 1938.36,1218.99 1938.95,1218.7 1939.53,1219.85 1940.12,1220.87 1940.71,1220.37 1941.29,1221.42 1941.88,1218.27 1942.46,1222.34 1943.05,1220.43 1943.64,1220.3 1944.22,1216.98 1944.81,1214 1945.4,1215.48 1945.98,1215.18 1946.57,1215.09 1947.16,1214.98 1947.74,1216.3 1948.33,1214.55 1948.91,1214.17 1949.5,1213.21 1950.09,1212 1950.67,1210.8 1951.26,1212.15 1951.85,1210.74 1952.43,1208.28 1953.02,1210.05 1953.61,1213.21 1954.19,1212.85 1954.78,1214.3 1955.37,1215.77 1955.95,1215.46 1956.54,1215.44 1957.12,1212.43 1957.71,1215.41 1958.3,1212.64 1958.88,1208.58 1959.47,1206.97 1960.06,1211.31 1960.64,1211.43 1961.23,1211.41 1961.82,1211.56 1962.4,1210.25 1962.99,1210.42 1963.58,1211.86 1964.16,1214.91 1964.75,1211.95 1965.33,1210.65 1965.92,1208.17 1966.51,1207.26 1967.09,1211.39 1967.68,1207.58 1968.27,1210.62 1968.85,1212.32 1969.44,1212.62 1970.03,1216.54 1970.61,1216.36 1971.2,1216.29 1971.78,1218.77 1972.37,1217.08 1972.96,1215.88 1973.54,1215.5 1974.13,1215.09 1974.72,1217.84 1975.3,1217.61 1975.89,1217.36 1976.48,1217.36 1977.06,1217.18 1977.65,1218.4 1978.24,1219.63 1978.82,1216.83 1979.41,1216.3 1979.99,1213.38 1980.58,1213.43 1981.17,1214.88 1981.75,1214.84 1982.34,1214.9 1982.93,1216.3 1983.51,1218.97 1984.1,1217.31 1984.69,1215.84 1985.27,1215.75 1985.86,1215.72 1986.45,1214.42 1987.03,1214.41 1987.62,1213.05 1988.2,1211.59 1988.79,1211.64 1989.38,1209.01 1989.96,1210.97 1990.55,1210.99 1991.14,1210.92 1991.72,1210.03 1992.31,1209.06 1992.9,1203.54 1993.48,1204.05 1994.07,1201.82 1994.65,1200.9 1995.24,1200.22 1995.83,1200.84 1996.41,1201.65 1997,1202.17 1997.59,1204.14 1998.17,1206.01 1998.76,1205.18 1999.35,1205.85 1999.93,1208.93 2000.52,1209.05 2001.11,1207.81 2001.69,1207.99 2002.28,1211.02 2002.86,1211.03 2003.45,1212.64 2004.04,1208.53 2004.62,1211.83 2005.21,1209.03 2005.8,1209.15 2006.38,1208.99 2006.97,1208.9 2007.56,1207.77 2008.14,1209.33 2008.73,1210.95 2009.32,1211.39 2009.9,1210.15 2010.49,1209.2 2011.07,1210.78 2011.66,1213.71 2012.25,1212.4 2012.83,1213.92 2013.42,1213.97 2014.01,1213.94 2014.59,1212.48 2015.18,1212.49 2015.77,1212.16 2016.35,1214.97 2016.94,1214.66 2017.53,1215.94 2018.11,1214.68 2018.7,1215.78 2019.28,1214.26 2019.87,1213.01 2020.46,1214.16 2021.04,1217.14 2021.63,1220.84 2022.22,1219.2 2022.8,1218.49 2023.39,1219.45 2023.98,1221.83 2024.56,1222.61 2025.15,1224.66 2025.73,1225.48 2026.32,1224.91 2026.91,1224.1 2027.49,1224.99 2028.08,1223.28 2028.67,1220.2 2029.25,1221.31 2029.84,1220.78 2030.43,1220.41 2031.01,1222.67 2031.6,1224.96 2032.19,1224.53 2032.77,1221.32 2033.36,1218.2 2033.94,1216.26 2034.53,1214.71 2035.12,1213.12 2035.7,1211.51 2036.29,1211.9 2036.88,1210.35 2037.46,1211.61 2038.05,1215.83 2038.64,1214.35 2039.22,1215.52 2039.81,1215.26 2040.4,1216.43 2040.98,1214.95 2041.57,1213.14 2042.15,1213.53 2042.74,1216.57 2043.33,1216.32 2043.91,1216.55 2044.5,1213.65 2045.09,1212.5 2045.67,1213.6 2046.26,1213.64 2046.85,1209.35 2047.43,1212.44 2048.02,1213.75 2048.6,1214.94 2049.19,1212.21 2049.78,1214.91 2050.36,1213.44 2050.95,1211.99 2051.54,1211.87 2052.12,1210.38 2052.71,1211.9 2053.3,1210.39 2053.88,1213.34 2054.47,1213.18 2055.06,1209.1 2055.64,1211.9 2056.23,1211.85 2056.81,1210.42 2057.4,1213.38 2057.99,1217.56 2058.57,1217.12 2059.16,1218.37 2059.75,1219.55 2060.33,1219.32 2060.92,1217.6 2061.51,1222.78 2062.09,1219.32 2062.68,1220.54 2063.27,1218.7 2063.85,1219.72 2064.44,1220.82 2065.02,1221.66 2065.61,1221.23 2066.2,1220.87 2066.78,1221.81 2067.37,1220.16 2067.96,1218.45 2068.54,1218.3 2069.13,1219.74 2069.72,1219.56 2070.3,1221.95 2070.89,1222.89 2071.48,1221.15 2072.06,1216.72 2072.65,1217.9 2073.23,1216.64 2073.82,1216.33 2074.41,1211.79 2074.99,1213.03 2075.58,1215.88 2076.17,1215.57 2076.75,1214 2077.34,1212.65 2077.93,1211.35 2078.51,1211.38 2079.1,1210.22 2079.68,1210.26 2080.27,1208.8 2080.86,1210.45 2081.44,1206.49 2082.03,1209.84 2082.62,1208.57 2083.2,1210.04 2083.79,1205.77 2084.38,1202.16 2084.96,1205.63 2085.55,1206.06 2086.14,1203.49 2086.72,1207 2087.31,1205.92 2087.89,1206.2 2088.48,1205.11 2089.07,1205.43 2089.65,1203.4 2090.24,1204.16 2090.83,1203.43 2091.41,1205.4 2092,1206.01 2092.59,1206.54 2093.17,1205.36 2093.76,1206.13 2094.35,1204.32 2094.93,1203.56 2095.52,1205.69 2096.1,1207.72 2096.69,1207.95 2097.28,1208.44 2097.86,1207.11 2098.45,1207.63 2099.04,1210.72 2099.62,1212.18 2100.21,1209.32 2100.8,1210.79 2101.38,1212.2 2101.97,1217.94 2102.55,1219.15 2103.14,1214.71 2103.73,1212.88 2104.31,1212.91 2104.9,1214.13 2105.49,1212.63 2106.07,1212.94 2106.66,1211.55 2107.25,1210.11 2107.83,1209.11 2108.42,1209.37 2109.01,1209.75 2109.59,1210.19 2110.18,1210.18 2110.76,1210.55 2111.35,1211.96 2111.94,1212.18 2112.52,1213.43 2113.11,1213.21 2113.7,1209.11 2114.28,1209.34 2114.87,1209.41 2115.46,1211.13 2116.04,1212.91 2116.63,1217.05 2117.22,1217.01 2117.8,1219.39 2118.39,1219.22 2118.97,1218.96 2119.56,1218.75 2120.15,1217.1 2120.73,1216.91 2121.32,1219.63 2121.91,1219.45 2122.49,1219.3 2123.08,1217.5 2123.67,1218.88 2124.25,1224.14 2124.84,1225.27 2125.42,1226.23 2126.01,1225.75 2126.6,1226.65 2127.18,1221.97 2127.77,1221.58 2128.36,1219.67 2128.94,1218.05 2129.53,1216.66 2130.12,1217.65 2130.7,1217.39 2131.29,1218.64 2131.88,1216.83 2132.46,1215.25 2133.05,1215.45 2133.63,1216.86 2134.22,1212.64 2134.81,1209.95 2135.39,1208.53 2135.98,1210.18 2136.57,1209.16 2137.15,1210.85 2137.74,1209.78 2138.33,1211.19 2138.91,1211.35 2139.5,1210.1 2140.09,1210.23 2140.67,1207.84 2141.26,1208.07 2141.84,1208.27 2142.43,1208.39 2143.02,1204.61 2143.6,1207.9 2144.19,1209.98 2144.78,1212.93 2145.36,1214.35 2145.95,1215.75 2146.54,1218.43 2147.12,1224.08 2147.71,1223.66 2148.3,1225.71 2148.88,1222.51 2149.47,1220.88 2150.05,1217.7 2150.64,1214.73 2151.23,1213.3 2151.81,1210.51 2152.4,1213.27 2152.99,1214.51 2153.57,1215.7 2154.16,1213.91 2154.75,1212.63 2155.33,1213.92 2155.92,1218.22 2156.5,1219.33 2157.09,1216.25 2157.68,1213.23 2158.26,1211.83 \"/>\n<path clip-path=\"url(#clip432)\" d=\"M986.025 1214.01 L986.612 1214.01 L987.198 1214.01 L987.785 1214.01 L988.371 1214.01 L988.957 1214.01 L989.544 1214.01 L990.13 1214.01 L990.717 1214.01 L991.303 1214.01 L991.889 1214.01 L992.476 1214.01 L993.062 1214.01 L993.649 1214.01 L994.235 1214.01 L994.822 1214.01 L995.408 1214.01 L995.994 1214.01 L996.581 1214.01 L997.167 1214.01 L997.754 1214.01 L998.34 1214.01 L998.926 1214.01 L999.513 1214.01 L1000.1 1214.01 L1000.69 1214.01 L1001.27 1214.01 L1001.86 1214.01 L1002.44 1214.01 L1003.03 1214.01 L1003.62 1214.01 L1004.2 1214.01 L1004.79 1214.01 L1005.38 1214.01 L1005.96 1214.01 L1006.55 1214.01 L1007.14 1214.01 L1007.72 1214.01 L1008.31 1214.01 L1008.9 1214.01 L1009.48 1214.01 L1010.07 1214.01 L1010.65 1214.01 L1011.24 1214.01 L1011.83 1214.01 L1012.41 1214.01 L1013 1214.01 L1013.59 1214.01 L1014.17 1214.01 L1014.76 1214.01 L1015.35 1214.01 L1015.93 1214.01 L1016.52 1214.01 L1017.11 1214.01 L1017.69 1214.01 L1018.28 1214.01 L1018.86 1214.01 L1019.45 1214.01 L1020.04 1214.01 L1020.62 1214.01 L1021.21 1214.01 L1021.8 1214.01 L1022.38 1214.01 L1022.97 1214.01 L1023.56 1214.01 L1024.14 1214.01 L1024.73 1214.01 L1025.32 1214.01 L1025.9 1214.01 L1026.49 1214.01 L1027.07 1214.01 L1027.66 1214.01 L1028.25 1214.01 L1028.83 1214.01 L1029.42 1214.01 L1030.01 1214.01 L1030.59 1214.01 L1031.18 1214.01 L1031.77 1214.01 L1032.35 1214.01 L1032.94 1214.01 L1033.52 1214.01 L1034.11 1214.01 L1034.7 1214.01 L1035.28 1214.01 L1035.87 1214.01 L1036.46 1214.01 L1037.04 1214.01 L1037.63 1214.01 L1038.22 1214.01 L1038.8 1214.01 L1039.39 1214.01 L1039.98 1214.01 L1040.56 1214.01 L1041.15 1214.01 L1041.73 1214.01 L1042.32 1214.01 L1042.91 1214.01 L1043.49 1214.01 L1044.08 1214.01 L1044.67 1214.01 L1045.25 1214.01 L1045.84 1214.01 L1046.43 1214.01 L1047.01 1214.01 L1047.6 1214.01 L1048.19 1214.01 L1048.77 1214.01 L1049.36 1214.01 L1049.94 1214.01 L1050.53 1214.01 L1051.12 1214.01 L1051.7 1214.01 L1052.29 1214.01 L1052.88 1214.01 L1053.46 1214.01 L1054.05 1214.01 L1054.64 1214.01 L1055.22 1214.01 L1055.81 1214.01 L1056.39 1214.01 L1056.98 1214.01 L1057.57 1214.01 L1058.15 1214.01 L1058.74 1214.01 L1059.33 1214.01 L1059.91 1214.01 L1060.5 1214.01 L1061.09 1214.01 L1061.67 1214.01 L1062.26 1214.01 L1062.85 1214.01 L1063.43 1214.01 L1064.02 1214.01 L1064.6 1214.01 L1065.19 1214.01 L1065.78 1214.01 L1066.36 1214.01 L1066.95 1214.01 L1067.54 1214.01 L1068.12 1214.01 L1068.71 1214.01 L1069.3 1214.01 L1069.88 1214.01 L1070.47 1214.01 L1071.06 1214.01 L1071.64 1214.01 L1072.23 1214.01 L1072.81 1214.01 L1073.4 1214.01 L1073.99 1214.01 L1074.57 1214.01 L1075.16 1214.01 L1075.75 1214.01 L1076.33 1214.01 L1076.92 1214.01 L1077.51 1214.01 L1078.09 1214.01 L1078.68 1214.01 L1079.26 1214.01 L1079.85 1214.01 L1080.44 1214.01 L1081.02 1214.01 L1081.61 1214.01 L1082.2 1214.01 L1082.78 1214.01 L1083.37 1214.01 L1083.96 1214.01 L1084.54 1214.01 L1085.13 1214.01 L1085.72 1214.01 L1086.3 1214.01 L1086.89 1214.01 L1087.47 1214.01 L1088.06 1214.01 L1088.65 1214.01 L1089.23 1214.01 L1089.82 1214.01 L1090.41 1214.01 L1090.99 1214.01 L1091.58 1214.01 L1092.17 1214.01 L1092.75 1214.01 L1093.34 1214.01 L1093.93 1214.01 L1094.51 1214.01 L1095.1 1214.01 L1095.68 1214.01 L1096.27 1214.01 L1096.86 1214.01 L1097.44 1214.01 L1098.03 1214.01 L1098.62 1214.01 L1099.2 1214.01 L1099.79 1214.01 L1100.38 1214.01 L1100.96 1214.01 L1101.55 1214.01 L1102.14 1214.01 L1102.72 1214.01 L1103.31 1214.01 L1103.89 1214.01 L1104.48 1214.01 L1105.07 1214.01 L1105.65 1214.01 L1106.24 1214.01 L1106.83 1214.01 L1107.41 1214.01 L1108 1214.01 L1108.59 1214.01 L1109.17 1214.01 L1109.76 1214.01 L1110.34 1214.01 L1110.93 1214.01 L1111.52 1214.01 L1112.1 1214.01 L1112.69 1214.01 L1113.28 1214.01 L1113.86 1214.01 L1114.45 1214.01 L1115.04 1214.01 L1115.62 1214.01 L1116.21 1214.01 L1116.8 1214.01 L1117.38 1214.01 L1117.97 1214.01 L1118.55 1214.01 L1119.14 1214.01 L1119.73 1214.01 L1120.31 1214.01 L1120.9 1214.01 L1121.49 1214.01 L1122.07 1214.01 L1122.66 1214.01 L1123.25 1214.01 L1123.83 1214.01 L1124.42 1214.01 L1125.01 1214.01 L1125.59 1214.01 L1126.18 1214.01 L1126.76 1214.01 L1127.35 1214.01 L1127.94 1214.01 L1128.52 1214.01 L1129.11 1214.01 L1129.7 1214.01 L1130.28 1214.01 L1130.87 1214.01 L1131.46 1214.01 L1132.04 1214.01 L1132.63 1214.01 L1133.21 1214.01 L1133.8 1214.01 L1134.39 1214.01 L1134.97 1214.01 L1135.56 1214.01 L1136.15 1214.01 L1136.73 1214.01 L1137.32 1214.01 L1137.91 1214.01 L1138.49 1214.01 L1139.08 1214.01 L1139.67 1214.01 L1140.25 1214.01 L1140.84 1214.01 L1141.42 1214.01 L1142.01 1214.01 L1142.6 1214.01 L1143.18 1214.01 L1143.77 1214.01 L1144.36 1214.01 L1144.94 1214.01 L1145.53 1214.01 L1146.12 1214.01 L1146.7 1214.01 L1147.29 1214.01 L1147.88 1214.01 L1148.46 1214.01 L1149.05 1214.01 L1149.63 1214.01 L1150.22 1214.01 L1150.81 1214.01 L1151.39 1214.01 L1151.98 1214.01 L1152.57 1214.01 L1153.15 1214.01 L1153.74 1214.01 L1154.33 1214.01 L1154.91 1214.01 L1155.5 1214.01 L1156.09 1214.01 L1156.67 1214.01 L1157.26 1214.01 L1157.84 1214.01 L1158.43 1214.01 L1159.02 1214.01 L1159.6 1214.01 L1160.19 1214.01 L1160.78 1214.01 L1161.36 1214.01 L1161.95 1214.01 L1162.54 1214.01 L1163.12 1214.01 L1163.71 1214.01 L1164.29 1214.01 L1164.88 1214.01 L1165.47 1214.01 L1166.05 1214.01 L1166.64 1214.01 L1167.23 1214.01 L1167.81 1214.01 L1168.4 1214.01 L1168.99 1214.01 L1169.57 1214.01 L1170.16 1214.01 L1170.75 1214.01 L1171.33 1214.01 L1171.92 1214.01 L1172.5 1214.01 L1173.09 1214.01 L1173.68 1214.01 L1174.26 1214.01 L1174.85 1214.01 L1175.44 1214.01 L1176.02 1214.01 L1176.61 1214.01 L1177.2 1214.01 L1177.78 1214.01 L1178.37 1214.01 L1178.96 1214.01 L1179.54 1214.01 L1180.13 1214.01 L1180.71 1214.01 L1181.3 1214.01 L1181.89 1214.01 L1182.47 1214.01 L1183.06 1214.01 L1183.65 1214.01 L1184.23 1214.01 L1184.82 1214.01 L1185.41 1214.01 L1185.99 1214.01 L1186.58 1214.01 L1187.16 1214.01 L1187.75 1214.01 L1188.34 1214.01 L1188.92 1214.01 L1189.51 1214.01 L1190.1 1214.01 L1190.68 1214.01 L1191.27 1214.01 L1191.86 1214.01 L1192.44 1214.01 L1193.03 1214.01 L1193.62 1214.01 L1194.2 1214.01 L1194.79 1214.01 L1195.37 1214.01 L1195.96 1214.01 L1196.55 1214.01 L1197.13 1214.01 L1197.72 1214.01 L1198.31 1214.01 L1198.89 1214.01 L1199.48 1214.01 L1200.07 1214.01 L1200.65 1214.01 L1201.24 1214.01 L1201.83 1214.01 L1202.41 1214.01 L1203 1214.01 L1203.58 1214.01 L1204.17 1214.01 L1204.76 1214.01 L1205.34 1214.01 L1205.93 1214.01 L1206.52 1214.01 L1207.1 1214.01 L1207.69 1214.01 L1208.28 1214.01 L1208.86 1214.01 L1209.45 1214.01 L1210.03 1214.01 L1210.62 1214.01 L1211.21 1214.01 L1211.79 1214.01 L1212.38 1214.01 L1212.97 1214.01 L1213.55 1214.01 L1214.14 1214.01 L1214.73 1214.01 L1215.31 1214.01 L1215.9 1214.01 L1216.49 1214.01 L1217.07 1214.01 L1217.66 1214.01 L1218.24 1214.01 L1218.83 1214.01 L1219.42 1214.01 L1220 1214.01 L1220.59 1214.01 L1221.18 1214.01 L1221.76 1214.01 L1222.35 1214.01 L1222.94 1214.01 L1223.52 1214.01 L1224.11 1214.01 L1224.7 1214.01 L1225.28 1214.01 L1225.87 1214.01 L1226.45 1214.01 L1227.04 1214.01 L1227.63 1214.01 L1228.21 1214.01 L1228.8 1214.01 L1229.39 1214.01 L1229.97 1214.01 L1230.56 1214.01 L1231.15 1214.01 L1231.73 1214.01 L1232.32 1214.01 L1232.91 1214.01 L1233.49 1214.01 L1234.08 1214.01 L1234.66 1214.01 L1235.25 1214.01 L1235.84 1214.01 L1236.42 1214.01 L1237.01 1214.01 L1237.6 1214.01 L1238.18 1214.01 L1238.77 1214.01 L1239.36 1214.01 L1239.94 1214.01 L1240.53 1214.01 L1241.11 1214.01 L1241.7 1214.01 L1242.29 1214.01 L1242.87 1214.01 L1243.46 1214.01 L1244.05 1214.01 L1244.63 1214.01 L1245.22 1214.01 L1245.81 1214.01 L1246.39 1214.01 L1246.98 1214.01 L1247.57 1214.01 L1248.15 1214.01 L1248.74 1214.01 L1249.32 1214.01 L1249.91 1214.01 L1250.5 1214.01 L1251.08 1214.01 L1251.67 1214.01 L1252.26 1214.01 L1252.84 1214.01 L1253.43 1214.01 L1254.02 1214.01 L1254.6 1214.01 L1255.19 1214.01 L1255.78 1214.01 L1256.36 1214.01 L1256.95 1214.01 L1257.53 1214.01 L1258.12 1214.01 L1258.71 1214.01 L1259.29 1214.01 L1259.88 1214.01 L1260.47 1214.01 L1261.05 1214.01 L1261.64 1214.01 L1262.23 1214.01 L1262.81 1214.01 L1263.4 1214.01 L1263.98 1214.01 L1264.57 1214.01 L1265.16 1214.01 L1265.74 1214.01 L1266.33 1214.01 L1266.92 1214.01 L1267.5 1214.01 L1268.09 1214.01 L1268.68 1214.01 L1269.26 1214.01 L1269.85 1214.01 L1270.44 1214.01 L1271.02 1214.01 L1271.61 1214.01 L1272.19 1214.01 L1272.78 1214.01 L1273.37 1214.01 L1273.95 1214.01 L1274.54 1214.01 L1275.13 1214.01 L1275.71 1214.01 L1276.3 1214.01 L1276.89 1214.01 L1277.47 1214.01 L1278.06 1214.01 L1278.65 1214.01 L1279.23 1214.01 L1279.82 1214.01 L1280.4 1214.01 L1280.99 1214.01 L1281.58 1214.01 L1282.16 1214.01 L1282.75 1214.01 L1283.34 1214.01 L1283.92 1214.01 L1284.51 1214.01 L1285.1 1214.01 L1285.68 1214.01 L1286.27 1214.01 L1286.86 1214.01 L1287.44 1214.01 L1288.03 1214.01 L1288.61 1214.01 L1289.2 1214.01 L1289.79 1214.01 L1290.37 1214.01 L1290.96 1214.01 L1291.55 1214.01 L1292.13 1214.01 L1292.72 1214.01 L1293.31 1214.01 L1293.89 1214.01 L1294.48 1214.01 L1295.06 1214.01 L1295.65 1214.01 L1296.24 1214.01 L1296.82 1214.01 L1297.41 1214.01 L1298 1214.01 L1298.58 1214.01 L1299.17 1214.01 L1299.76 1214.01 L1300.34 1214.01 L1300.93 1214.01 L1301.52 1214.01 L1302.1 1214.01 L1302.69 1214.01 L1303.27 1214.01 L1303.86 1214.01 L1304.45 1214.01 L1305.03 1214.01 L1305.62 1214.01 L1306.21 1214.01 L1306.79 1214.01 L1307.38 1214.01 L1307.97 1214.01 L1308.55 1214.01 L1309.14 1214.01 L1309.73 1214.01 L1310.31 1214.01 L1310.9 1214.01 L1311.48 1214.01 L1312.07 1214.01 L1312.66 1214.01 L1313.24 1214.01 L1313.83 1214.01 L1314.42 1214.01 L1315 1214.01 L1315.59 1214.01 L1316.18 1214.01 L1316.76 1214.01 L1317.35 1214.01 L1317.93 1214.01 L1318.52 1214.01 L1319.11 1214.01 L1319.69 1214.01 L1320.28 1214.01 L1320.87 1214.01 L1321.45 1214.01 L1322.04 1214.01 L1322.63 1214.01 L1323.21 1214.01 L1323.8 1214.01 L1324.39 1214.01 L1324.97 1214.01 L1325.56 1214.01 L1326.14 1214.01 L1326.73 1214.01 L1327.32 1214.01 L1327.9 1214.01 L1328.49 1214.01 L1329.08 1214.01 L1329.66 1214.01 L1330.25 1214.01 L1330.84 1214.01 L1331.42 1214.01 L1332.01 1214.01 L1332.6 1214.01 L1333.18 1214.01 L1333.77 1214.01 L1334.35 1214.01 L1334.94 1214.01 L1335.53 1214.01 L1336.11 1214.01 L1336.7 1214.01 L1337.29 1214.01 L1337.87 1214.01 L1338.46 1214.01 L1339.05 1214.01 L1339.63 1214.01 L1340.22 1214.01 L1340.8 1214.01 L1341.39 1214.01 L1341.98 1214.01 L1342.56 1214.01 L1343.15 1214.01 L1343.74 1214.01 L1344.32 1214.01 L1344.91 1214.01 L1345.5 1214.01 L1346.08 1214.01 L1346.67 1214.01 L1347.26 1214.01 L1347.84 1214.01 L1348.43 1214.01 L1349.01 1214.01 L1349.6 1214.01 L1350.19 1214.01 L1350.77 1214.01 L1351.36 1214.01 L1351.95 1214.01 L1352.53 1214.01 L1353.12 1214.01 L1353.71 1214.01 L1354.29 1214.01 L1354.88 1214.01 L1355.47 1214.01 L1356.05 1214.01 L1356.64 1214.01 L1357.22 1214.01 L1357.81 1214.01 L1358.4 1214.01 L1358.98 1214.01 L1359.57 1214.01 L1360.16 1214.01 L1360.74 1214.01 L1361.33 1214.01 L1361.92 1214.01 L1362.5 1214.01 L1363.09 1214.01 L1363.68 1214.01 L1364.26 1214.01 L1364.85 1214.01 L1365.43 1214.01 L1366.02 1214.01 L1366.61 1214.01 L1367.19 1214.01 L1367.78 1214.01 L1368.37 1214.01 L1368.95 1214.01 L1369.54 1214.01 L1370.13 1214.01 L1370.71 1214.01 L1371.3 1214.01 L1371.88 1214.01 L1372.47 1214.01 L1373.06 1214.01 L1373.64 1214.01 L1374.23 1214.01 L1374.82 1214.01 L1375.4 1214.01 L1375.99 1214.01 L1376.58 1214.01 L1377.16 1214.01 L1377.75 1214.01 L1378.34 1214.01 L1378.92 1214.01 L1379.51 1214.01 L1380.09 1214.01 L1380.68 1214.01 L1381.27 1214.01 L1381.85 1214.01 L1382.44 1214.01 L1383.03 1214.01 L1383.61 1214.01 L1384.2 1214.01 L1384.79 1214.01 L1385.37 1214.01 L1385.96 1214.01 L1386.55 1214.01 L1387.13 1214.01 L1387.72 1214.01 L1388.3 1214.01 L1388.89 1214.01 L1389.48 1214.01 L1390.06 1214.01 L1390.65 1214.01 L1391.24 1214.01 L1391.82 1214.01 L1392.41 1214.01 L1393 1214.01 L1393.58 1214.01 L1394.17 1214.01 L1394.75 1214.01 L1395.34 1214.01 L1395.93 1214.01 L1396.51 1214.01 L1397.1 1214.01 L1397.69 1214.01 L1398.27 1214.01 L1398.86 1214.01 L1399.45 1214.01 L1400.03 1214.01 L1400.62 1214.01 L1401.21 1214.01 L1401.79 1214.01 L1402.38 1214.01 L1402.96 1214.01 L1403.55 1214.01 L1404.14 1214.01 L1404.72 1214.01 L1405.31 1214.01 L1405.9 1214.01 L1406.48 1214.01 L1407.07 1214.01 L1407.66 1214.01 L1408.24 1214.01 L1408.83 1214.01 L1409.42 1214.01 L1410 1214.01 L1410.59 1214.01 L1411.17 1214.01 L1411.76 1214.01 L1412.35 1214.01 L1412.93 1214.01 L1413.52 1214.01 L1414.11 1214.01 L1414.69 1214.01 L1415.28 1214.01 L1415.87 1214.01 L1416.45 1214.01 L1417.04 1214.01 L1417.63 1214.01 L1418.21 1214.01 L1418.8 1214.01 L1419.38 1214.01 L1419.97 1214.01 L1420.56 1214.01 L1421.14 1214.01 L1421.73 1214.01 L1422.32 1214.01 L1422.9 1214.01 L1423.49 1214.01 L1424.08 1214.01 L1424.66 1214.01 L1425.25 1214.01 L1425.83 1214.01 L1426.42 1214.01 L1427.01 1214.01 L1427.59 1214.01 L1428.18 1214.01 L1428.77 1214.01 L1429.35 1214.01 L1429.94 1214.01 L1430.53 1214.01 L1431.11 1214.01 L1431.7 1214.01 L1432.29 1214.01 L1432.87 1214.01 L1433.46 1214.01 L1434.04 1214.01 L1434.63 1214.01 L1435.22 1214.01 L1435.8 1214.01 L1436.39 1214.01 L1436.98 1214.01 L1437.56 1214.01 L1438.15 1214.01 L1438.74 1214.01 L1439.32 1214.01 L1439.91 1214.01 L1440.5 1214.01 L1441.08 1214.01 L1441.67 1214.01 L1442.25 1214.01 L1442.84 1214.01 L1443.43 1214.01 L1444.01 1214.01 L1444.6 1214.01 L1445.19 1214.01 L1445.77 1214.01 L1446.36 1214.01 L1446.95 1214.01 L1447.53 1214.01 L1448.12 1214.01 L1448.7 1214.01 L1449.29 1214.01 L1449.88 1214.01 L1450.46 1214.01 L1451.05 1214.01 L1451.64 1214.01 L1452.22 1214.01 L1452.81 1214.01 L1453.4 1214.01 L1453.98 1214.01 L1454.57 1214.01 L1455.16 1214.01 L1455.74 1214.01 L1456.33 1214.01 L1456.91 1214.01 L1457.5 1214.01 L1458.09 1214.01 L1458.67 1214.01 L1459.26 1214.01 L1459.85 1214.01 L1460.43 1214.01 L1461.02 1214.01 L1461.61 1214.01 L1462.19 1214.01 L1462.78 1214.01 L1463.37 1214.01 L1463.95 1214.01 L1464.54 1214.01 L1465.12 1214.01 L1465.71 1214.01 L1466.3 1214.01 L1466.88 1214.01 L1467.47 1214.01 L1468.06 1214.01 L1468.64 1214.01 L1469.23 1214.01 L1469.82 1214.01 L1470.4 1214.01 L1470.99 1214.01 L1471.57 1214.01 L1472.16 1214.01 L1472.75 1214.01 L1473.33 1214.01 L1473.92 1214.01 L1474.51 1214.01 L1475.09 1214.01 L1475.68 1214.01 L1476.27 1214.01 L1476.85 1214.01 L1477.44 1214.01 L1478.03 1214.01 L1478.61 1214.01 L1479.2 1214.01 L1479.78 1214.01 L1480.37 1214.01 L1480.96 1214.01 L1481.54 1214.01 L1482.13 1214.01 L1482.72 1214.01 L1483.3 1214.01 L1483.89 1214.01 L1484.48 1214.01 L1485.06 1214.01 L1485.65 1214.01 L1486.24 1214.01 L1486.82 1214.01 L1487.41 1214.01 L1487.99 1214.01 L1488.58 1214.01 L1489.17 1214.01 L1489.75 1214.01 L1490.34 1214.01 L1490.93 1214.01 L1491.51 1214.01 L1492.1 1214.01 L1492.69 1214.01 L1493.27 1214.01 L1493.86 1214.01 L1494.45 1214.01 L1495.03 1214.01 L1495.62 1214.01 L1496.2 1214.01 L1496.79 1214.01 L1497.38 1214.01 L1497.96 1214.01 L1498.55 1214.01 L1499.14 1214.01 L1499.72 1214.01 L1500.31 1214.01 L1500.9 1214.01 L1501.48 1214.01 L1502.07 1214.01 L1502.65 1214.01 L1503.24 1214.01 L1503.83 1214.01 L1504.41 1214.01 L1505 1214.01 L1505.59 1214.01 L1506.17 1214.01 L1506.76 1214.01 L1507.35 1214.01 L1507.93 1214.01 L1508.52 1214.01 L1509.11 1214.01 L1509.69 1214.01 L1510.28 1214.01 L1510.86 1214.01 L1511.45 1214.01 L1512.04 1214.01 L1512.62 1214.01 L1513.21 1214.01 L1513.8 1214.01 L1514.38 1214.01 L1514.97 1214.01 L1515.56 1214.01 L1516.14 1214.01 L1516.73 1214.01 L1517.32 1214.01 L1517.9 1214.01 L1518.49 1214.01 L1519.07 1214.01 L1519.66 1214.01 L1520.25 1214.01 L1520.83 1214.01 L1521.42 1214.01 L1522.01 1214.01 L1522.59 1214.01 L1523.18 1214.01 L1523.77 1214.01 L1524.35 1214.01 L1524.94 1214.01 L1525.52 1214.01 L1526.11 1214.01 L1526.7 1214.01 L1527.28 1214.01 L1527.87 1214.01 L1528.46 1214.01 L1529.04 1214.01 L1529.63 1214.01 L1530.22 1214.01 L1530.8 1214.01 L1531.39 1214.01 L1531.98 1214.01 L1532.56 1214.01 L1533.15 1214.01 L1533.73 1214.01 L1534.32 1214.01 L1534.91 1214.01 L1535.49 1214.01 L1536.08 1214.01 L1536.67 1214.01 L1537.25 1214.01 L1537.84 1214.01 L1538.43 1214.01 L1539.01 1214.01 L1539.6 1214.01 L1540.19 1214.01 L1540.77 1214.01 L1541.36 1214.01 L1541.94 1214.01 L1542.53 1214.01 L1543.12 1214.01 L1543.7 1214.01 L1544.29 1214.01 L1544.88 1214.01 L1545.46 1214.01 L1546.05 1214.01 L1546.64 1214.01 L1547.22 1214.01 L1547.81 1214.01 L1548.4 1214.01 L1548.98 1214.01 L1549.57 1214.01 L1550.15 1214.01 L1550.74 1214.01 L1551.33 1214.01 L1551.91 1214.01 L1552.5 1214.01 L1553.09 1214.01 L1553.67 1214.01 L1554.26 1214.01 L1554.85 1214.01 L1555.43 1214.01 L1556.02 1214.01 L1556.6 1214.01 L1557.19 1214.01 L1557.78 1214.01 L1558.36 1214.01 L1558.95 1214.01 L1559.54 1214.01 L1560.12 1214.01 L1560.71 1214.01 L1561.3 1214.01 L1561.88 1214.01 L1562.47 1214.01 L1563.06 1214.01 L1563.64 1214.01 L1564.23 1214.01 L1564.81 1214.01 L1565.4 1214.01 L1565.99 1214.01 L1566.57 1214.01 L1567.16 1214.01 L1567.75 1214.01 L1568.33 1214.01 L1568.92 1214.01 L1569.51 1214.01 L1570.09 1214.01 L1570.68 1214.01 L1571.27 1214.01 L1571.85 1214.01 L1572.44 1214.01 L1573.02 1214.01 L1573.61 1214.01 L1574.2 1214.01 L1574.78 1214.01 L1575.37 1214.01 L1575.96 1214.01 L1576.54 1214.01 L1577.13 1214.01 L1577.72 1214.01 L1578.3 1214.01 L1578.89 1214.01 L1579.47 1214.01 L1580.06 1214.01 L1580.65 1214.01 L1581.23 1214.01 L1581.82 1214.01 L1582.41 1214.01 L1582.99 1214.01 L1583.58 1214.01 L1584.17 1214.01 L1584.75 1214.01 L1585.34 1214.01 L1585.93 1214.01 L1586.51 1214.01 L1587.1 1214.01 L1587.68 1214.01 L1588.27 1214.01 L1588.86 1214.01 L1589.44 1214.01 L1590.03 1214.01 L1590.62 1214.01 L1591.2 1214.01 L1591.79 1214.01 L1592.38 1214.01 L1592.96 1214.01 L1593.55 1214.01 L1594.14 1214.01 L1594.72 1214.01 L1595.31 1214.01 L1595.89 1214.01 L1596.48 1214.01 L1597.07 1214.01 L1597.65 1214.01 L1598.24 1214.01 L1598.83 1214.01 L1599.41 1214.01 L1600 1214.01 L1600.59 1214.01 L1601.17 1214.01 L1601.76 1214.01 L1602.34 1214.01 L1602.93 1214.01 L1603.52 1214.01 L1604.1 1214.01 L1604.69 1214.01 L1605.28 1214.01 L1605.86 1214.01 L1606.45 1214.01 L1607.04 1214.01 L1607.62 1214.01 L1608.21 1214.01 L1608.8 1214.01 L1609.38 1214.01 L1609.97 1214.01 L1610.55 1214.01 L1611.14 1214.01 L1611.73 1214.01 L1612.31 1214.01 L1612.9 1214.01 L1613.49 1214.01 L1614.07 1214.01 L1614.66 1214.01 L1615.25 1214.01 L1615.83 1214.01 L1616.42 1214.01 L1617.01 1214.01 L1617.59 1214.01 L1618.18 1214.01 L1618.76 1214.01 L1619.35 1214.01 L1619.94 1214.01 L1620.52 1214.01 L1621.11 1214.01 L1621.7 1214.01 L1622.28 1214.01 L1622.87 1214.01 L1623.46 1214.01 L1624.04 1214.01 L1624.63 1214.01 L1625.22 1214.01 L1625.8 1214.01 L1626.39 1214.01 L1626.97 1214.01 L1627.56 1214.01 L1628.15 1214.01 L1628.73 1214.01 L1629.32 1214.01 L1629.91 1214.01 L1630.49 1214.01 L1631.08 1214.01 L1631.67 1214.01 L1632.25 1214.01 L1632.84 1214.01 L1633.42 1214.01 L1634.01 1214.01 L1634.6 1214.01 L1635.18 1214.01 L1635.77 1214.01 L1636.36 1214.01 L1636.94 1214.01 L1637.53 1214.01 L1638.12 1214.01 L1638.7 1214.01 L1639.29 1214.01 L1639.88 1214.01 L1640.46 1214.01 L1641.05 1214.01 L1641.63 1214.01 L1642.22 1214.01 L1642.81 1214.01 L1643.39 1214.01 L1643.98 1214.01 L1644.57 1214.01 L1645.15 1214.01 L1645.74 1214.01 L1646.33 1214.01 L1646.91 1214.01 L1647.5 1214.01 L1648.09 1214.01 L1648.67 1214.01 L1649.26 1214.01 L1649.84 1214.01 L1650.43 1214.01 L1651.02 1214.01 L1651.6 1214.01 L1652.19 1214.01 L1652.78 1214.01 L1653.36 1214.01 L1653.95 1214.01 L1654.54 1214.01 L1655.12 1214.01 L1655.71 1214.01 L1656.29 1214.01 L1656.88 1214.01 L1657.47 1214.01 L1658.05 1214.01 L1658.64 1214.01 L1659.23 1214.01 L1659.81 1214.01 L1660.4 1214.01 L1660.99 1214.01 L1661.57 1214.01 L1662.16 1214.01 L1662.75 1214.01 L1663.33 1214.01 L1663.92 1214.01 L1664.5 1214.01 L1665.09 1214.01 L1665.68 1214.01 L1666.26 1214.01 L1666.85 1214.01 L1667.44 1214.01 L1668.02 1214.01 L1668.61 1214.01 L1669.2 1214.01 L1669.78 1214.01 L1670.37 1214.01 L1670.96 1214.01 L1671.54 1214.01 L1672.13 1214.01 L1672.71 1214.01 L1673.3 1214.01 L1673.89 1214.01 L1674.47 1214.01 L1675.06 1214.01 L1675.65 1214.01 L1676.23 1214.01 L1676.82 1214.01 L1677.41 1214.01 L1677.99 1214.01 L1678.58 1214.01 L1679.17 1214.01 L1679.75 1214.01 L1680.34 1214.01 L1680.92 1214.01 L1681.51 1214.01 L1682.1 1214.01 L1682.68 1214.01 L1683.27 1214.01 L1683.86 1214.01 L1684.44 1214.01 L1685.03 1214.01 L1685.62 1214.01 L1686.2 1214.01 L1686.79 1214.01 L1687.37 1214.01 L1687.96 1214.01 L1688.55 1214.01 L1689.13 1214.01 L1689.72 1214.01 L1690.31 1214.01 L1690.89 1214.01 L1691.48 1214.01 L1692.07 1214.01 L1692.65 1214.01 L1693.24 1214.01 L1693.83 1214.01 L1694.41 1214.01 L1695 1214.01 L1695.58 1214.01 L1696.17 1214.01 L1696.76 1214.01 L1697.34 1214.01 L1697.93 1214.01 L1698.52 1214.01 L1699.1 1214.01 L1699.69 1214.01 L1700.28 1214.01 L1700.86 1214.01 L1701.45 1214.01 L1702.04 1214.01 L1702.62 1214.01 L1703.21 1214.01 L1703.79 1214.01 L1704.38 1214.01 L1704.97 1214.01 L1705.55 1214.01 L1706.14 1214.01 L1706.73 1214.01 L1707.31 1214.01 L1707.9 1214.01 L1708.49 1214.01 L1709.07 1214.01 L1709.66 1214.01 L1710.24 1214.01 L1710.83 1214.01 L1711.42 1214.01 L1712 1214.01 L1712.59 1214.01 L1713.18 1214.01 L1713.76 1214.01 L1714.35 1214.01 L1714.94 1214.01 L1715.52 1214.01 L1716.11 1214.01 L1716.7 1214.01 L1717.28 1214.01 L1717.87 1214.01 L1718.45 1214.01 L1719.04 1214.01 L1719.63 1214.01 L1720.21 1214.01 L1720.8 1214.01 L1721.39 1214.01 L1721.97 1214.01 L1722.56 1214.01 L1723.15 1214.01 L1723.73 1214.01 L1724.32 1214.01 L1724.91 1214.01 L1725.49 1214.01 L1726.08 1214.01 L1726.66 1214.01 L1727.25 1214.01 L1727.84 1214.01 L1728.42 1214.01 L1729.01 1214.01 L1729.6 1214.01 L1730.18 1214.01 L1730.77 1214.01 L1731.36 1214.01 L1731.94 1214.01 L1732.53 1214.01 L1733.11 1214.01 L1733.7 1214.01 L1734.29 1214.01 L1734.87 1214.01 L1735.46 1214.01 L1736.05 1214.01 L1736.63 1214.01 L1737.22 1214.01 L1737.81 1214.01 L1738.39 1214.01 L1738.98 1214.01 L1739.57 1214.01 L1740.15 1214.01 L1740.74 1214.01 L1741.32 1214.01 L1741.91 1214.01 L1742.5 1214.01 L1743.08 1214.01 L1743.67 1214.01 L1744.26 1214.01 L1744.84 1214.01 L1745.43 1214.01 L1746.02 1214.01 L1746.6 1214.01 L1747.19 1214.01 L1747.78 1214.01 L1748.36 1214.01 L1748.95 1214.01 L1749.53 1214.01 L1750.12 1214.01 L1750.71 1214.01 L1751.29 1214.01 L1751.88 1214.01 L1752.47 1214.01 L1753.05 1214.01 L1753.64 1214.01 L1754.23 1214.01 L1754.81 1214.01 L1755.4 1214.01 L1755.99 1214.01 L1756.57 1214.01 L1757.16 1214.01 L1757.74 1214.01 L1758.33 1214.01 L1758.92 1214.01 L1759.5 1214.01 L1760.09 1214.01 L1760.68 1214.01 L1761.26 1214.01 L1761.85 1214.01 L1762.44 1214.01 L1763.02 1214.01 L1763.61 1214.01 L1764.19 1214.01 L1764.78 1214.01 L1765.37 1214.01 L1765.95 1214.01 L1766.54 1214.01 L1767.13 1214.01 L1767.71 1214.01 L1768.3 1214.01 L1768.89 1214.01 L1769.47 1214.01 L1770.06 1214.01 L1770.65 1214.01 L1771.23 1214.01 L1771.82 1214.01 L1772.4 1214.01 L1772.99 1214.01 L1773.58 1214.01 L1774.16 1214.01 L1774.75 1214.01 L1775.34 1214.01 L1775.92 1214.01 L1776.51 1214.01 L1777.1 1214.01 L1777.68 1214.01 L1778.27 1214.01 L1778.86 1214.01 L1779.44 1214.01 L1780.03 1214.01 L1780.61 1214.01 L1781.2 1214.01 L1781.79 1214.01 L1782.37 1214.01 L1782.96 1214.01 L1783.55 1214.01 L1784.13 1214.01 L1784.72 1214.01 L1785.31 1214.01 L1785.89 1214.01 L1786.48 1214.01 L1787.06 1214.01 L1787.65 1214.01 L1788.24 1214.01 L1788.82 1214.01 L1789.41 1214.01 L1790 1214.01 L1790.58 1214.01 L1791.17 1214.01 L1791.76 1214.01 L1792.34 1214.01 L1792.93 1214.01 L1793.52 1214.01 L1794.1 1214.01 L1794.69 1214.01 L1795.27 1214.01 L1795.86 1214.01 L1796.45 1214.01 L1797.03 1214.01 L1797.62 1214.01 L1798.21 1214.01 L1798.79 1214.01 L1799.38 1214.01 L1799.97 1214.01 L1800.55 1214.01 L1801.14 1214.01 L1801.73 1214.01 L1802.31 1214.01 L1802.9 1214.01 L1803.48 1214.01 L1804.07 1214.01 L1804.66 1214.01 L1805.24 1214.01 L1805.83 1214.01 L1806.42 1214.01 L1807 1214.01 L1807.59 1214.01 L1808.18 1214.01 L1808.76 1214.01 L1809.35 1214.01 L1809.94 1214.01 L1810.52 1214.01 L1811.11 1214.01 L1811.69 1214.01 L1812.28 1214.01 L1812.87 1214.01 L1813.45 1214.01 L1814.04 1214.01 L1814.63 1214.01 L1815.21 1214.01 L1815.8 1214.01 L1816.39 1214.01 L1816.97 1214.01 L1817.56 1214.01 L1818.14 1214.01 L1818.73 1214.01 L1819.32 1214.01 L1819.9 1214.01 L1820.49 1214.01 L1821.08 1214.01 L1821.66 1214.01 L1822.25 1214.01 L1822.84 1214.01 L1823.42 1214.01 L1824.01 1214.01 L1824.6 1214.01 L1825.18 1214.01 L1825.77 1214.01 L1826.35 1214.01 L1826.94 1214.01 L1827.53 1214.01 L1828.11 1214.01 L1828.7 1214.01 L1829.29 1214.01 L1829.87 1214.01 L1830.46 1214.01 L1831.05 1214.01 L1831.63 1214.01 L1832.22 1214.01 L1832.81 1214.01 L1833.39 1214.01 L1833.98 1214.01 L1834.56 1214.01 L1835.15 1214.01 L1835.74 1214.01 L1836.32 1214.01 L1836.91 1214.01 L1837.5 1214.01 L1838.08 1214.01 L1838.67 1214.01 L1839.26 1214.01 L1839.84 1214.01 L1840.43 1214.01 L1841.01 1214.01 L1841.6 1214.01 L1842.19 1214.01 L1842.77 1214.01 L1843.36 1214.01 L1843.95 1214.01 L1844.53 1214.01 L1845.12 1214.01 L1845.71 1214.01 L1846.29 1214.01 L1846.88 1214.01 L1847.47 1214.01 L1848.05 1214.01 L1848.64 1214.01 L1849.22 1214.01 L1849.81 1214.01 L1850.4 1214.01 L1850.98 1214.01 L1851.57 1214.01 L1852.16 1214.01 L1852.74 1214.01 L1853.33 1214.01 L1853.92 1214.01 L1854.5 1214.01 L1855.09 1214.01 L1855.68 1214.01 L1856.26 1214.01 L1856.85 1214.01 L1857.43 1214.01 L1858.02 1214.01 L1858.61 1214.01 L1859.19 1214.01 L1859.78 1214.01 L1860.37 1214.01 L1860.95 1214.01 L1861.54 1214.01 L1862.13 1214.01 L1862.71 1214.01 L1863.3 1214.01 L1863.88 1214.01 L1864.47 1214.01 L1865.06 1214.01 L1865.64 1214.01 L1866.23 1214.01 L1866.82 1214.01 L1867.4 1214.01 L1867.99 1214.01 L1868.58 1214.01 L1869.16 1214.01 L1869.75 1214.01 L1870.34 1214.01 L1870.92 1214.01 L1871.51 1214.01 L1872.09 1214.01 L1872.68 1214.01 L1873.27 1214.01 L1873.85 1214.01 L1874.44 1214.01 L1875.03 1214.01 L1875.61 1214.01 L1876.2 1214.01 L1876.79 1214.01 L1877.37 1214.01 L1877.96 1214.01 L1878.55 1214.01 L1879.13 1214.01 L1879.72 1214.01 L1880.3 1214.01 L1880.89 1214.01 L1881.48 1214.01 L1882.06 1214.01 L1882.65 1214.01 L1883.24 1214.01 L1883.82 1214.01 L1884.41 1214.01 L1885 1214.01 L1885.58 1214.01 L1886.17 1214.01 L1886.76 1214.01 L1887.34 1214.01 L1887.93 1214.01 L1888.51 1214.01 L1889.1 1214.01 L1889.69 1214.01 L1890.27 1214.01 L1890.86 1214.01 L1891.45 1214.01 L1892.03 1214.01 L1892.62 1214.01 L1893.21 1214.01 L1893.79 1214.01 L1894.38 1214.01 L1894.96 1214.01 L1895.55 1214.01 L1896.14 1214.01 L1896.72 1214.01 L1897.31 1214.01 L1897.9 1214.01 L1898.48 1214.01 L1899.07 1214.01 L1899.66 1214.01 L1900.24 1214.01 L1900.83 1214.01 L1901.42 1214.01 L1902 1214.01 L1902.59 1214.01 L1903.17 1214.01 L1903.76 1214.01 L1904.35 1214.01 L1904.93 1214.01 L1905.52 1214.01 L1906.11 1214.01 L1906.69 1214.01 L1907.28 1214.01 L1907.87 1214.01 L1908.45 1214.01 L1909.04 1214.01 L1909.63 1214.01 L1910.21 1214.01 L1910.8 1214.01 L1911.38 1214.01 L1911.97 1214.01 L1912.56 1214.01 L1913.14 1214.01 L1913.73 1214.01 L1914.32 1214.01 L1914.9 1214.01 L1915.49 1214.01 L1916.08 1214.01 L1916.66 1214.01 L1917.25 1214.01 L1917.83 1214.01 L1918.42 1214.01 L1919.01 1214.01 L1919.59 1214.01 L1920.18 1214.01 L1920.77 1214.01 L1921.35 1214.01 L1921.94 1214.01 L1922.53 1214.01 L1923.11 1214.01 L1923.7 1214.01 L1924.29 1214.01 L1924.87 1214.01 L1925.46 1214.01 L1926.04 1214.01 L1926.63 1214.01 L1927.22 1214.01 L1927.8 1214.01 L1928.39 1214.01 L1928.98 1214.01 L1929.56 1214.01 L1930.15 1214.01 L1930.74 1214.01 L1931.32 1214.01 L1931.91 1214.01 L1932.5 1214.01 L1933.08 1214.01 L1933.67 1214.01 L1934.25 1214.01 L1934.84 1214.01 L1935.43 1214.01 L1936.01 1214.01 L1936.6 1214.01 L1937.19 1214.01 L1937.77 1214.01 L1938.36 1214.01 L1938.95 1214.01 L1939.53 1214.01 L1940.12 1214.01 L1940.71 1214.01 L1941.29 1214.01 L1941.88 1214.01 L1942.46 1214.01 L1943.05 1214.01 L1943.64 1214.01 L1944.22 1214.01 L1944.81 1214.01 L1945.4 1214.01 L1945.98 1214.01 L1946.57 1214.01 L1947.16 1214.01 L1947.74 1214.01 L1948.33 1214.01 L1948.91 1214.01 L1949.5 1214.01 L1950.09 1214.01 L1950.67 1214.01 L1951.26 1214.01 L1951.85 1214.01 L1952.43 1214.01 L1953.02 1214.01 L1953.61 1214.01 L1954.19 1214.01 L1954.78 1214.01 L1955.37 1214.01 L1955.95 1214.01 L1956.54 1214.01 L1957.12 1214.01 L1957.71 1214.01 L1958.3 1214.01 L1958.88 1214.01 L1959.47 1214.01 L1960.06 1214.01 L1960.64 1214.01 L1961.23 1214.01 L1961.82 1214.01 L1962.4 1214.01 L1962.99 1214.01 L1963.58 1214.01 L1964.16 1214.01 L1964.75 1214.01 L1965.33 1214.01 L1965.92 1214.01 L1966.51 1214.01 L1967.09 1214.01 L1967.68 1214.01 L1968.27 1214.01 L1968.85 1214.01 L1969.44 1214.01 L1970.03 1214.01 L1970.61 1214.01 L1971.2 1214.01 L1971.78 1214.01 L1972.37 1214.01 L1972.96 1214.01 L1973.54 1214.01 L1974.13 1214.01 L1974.72 1214.01 L1975.3 1214.01 L1975.89 1214.01 L1976.48 1214.01 L1977.06 1214.01 L1977.65 1214.01 L1978.24 1214.01 L1978.82 1214.01 L1979.41 1214.01 L1979.99 1214.01 L1980.58 1214.01 L1981.17 1214.01 L1981.75 1214.01 L1982.34 1214.01 L1982.93 1214.01 L1983.51 1214.01 L1984.1 1214.01 L1984.69 1214.01 L1985.27 1214.01 L1985.86 1214.01 L1986.45 1214.01 L1987.03 1214.01 L1987.62 1214.01 L1988.2 1214.01 L1988.79 1214.01 L1989.38 1214.01 L1989.96 1214.01 L1990.55 1214.01 L1991.14 1214.01 L1991.72 1214.01 L1992.31 1214.01 L1992.9 1214.01 L1993.48 1214.01 L1994.07 1214.01 L1994.65 1214.01 L1995.24 1214.01 L1995.83 1214.01 L1996.41 1214.01 L1997 1214.01 L1997.59 1214.01 L1998.17 1214.01 L1998.76 1214.01 L1999.35 1214.01 L1999.93 1214.01 L2000.52 1214.01 L2001.11 1214.01 L2001.69 1214.01 L2002.28 1214.01 L2002.86 1214.01 L2003.45 1214.01 L2004.04 1214.01 L2004.62 1214.01 L2005.21 1214.01 L2005.8 1214.01 L2006.38 1214.01 L2006.97 1214.01 L2007.56 1214.01 L2008.14 1214.01 L2008.73 1214.01 L2009.32 1214.01 L2009.9 1214.01 L2010.49 1214.01 L2011.07 1214.01 L2011.66 1214.01 L2012.25 1214.01 L2012.83 1214.01 L2013.42 1214.01 L2014.01 1214.01 L2014.59 1214.01 L2015.18 1214.01 L2015.77 1214.01 L2016.35 1214.01 L2016.94 1214.01 L2017.53 1214.01 L2018.11 1214.01 L2018.7 1214.01 L2019.28 1214.01 L2019.87 1214.01 L2020.46 1214.01 L2021.04 1214.01 L2021.63 1214.01 L2022.22 1214.01 L2022.8 1214.01 L2023.39 1214.01 L2023.98 1214.01 L2024.56 1214.01 L2025.15 1214.01 L2025.73 1214.01 L2026.32 1214.01 L2026.91 1214.01 L2027.49 1214.01 L2028.08 1214.01 L2028.67 1214.01 L2029.25 1214.01 L2029.84 1214.01 L2030.43 1214.01 L2031.01 1214.01 L2031.6 1214.01 L2032.19 1214.01 L2032.77 1214.01 L2033.36 1214.01 L2033.94 1214.01 L2034.53 1214.01 L2035.12 1214.01 L2035.7 1214.01 L2036.29 1214.01 L2036.88 1214.01 L2037.46 1214.01 L2038.05 1214.01 L2038.64 1214.01 L2039.22 1214.01 L2039.81 1214.01 L2040.4 1214.01 L2040.98 1214.01 L2041.57 1214.01 L2042.15 1214.01 L2042.74 1214.01 L2043.33 1214.01 L2043.91 1214.01 L2044.5 1214.01 L2045.09 1214.01 L2045.67 1214.01 L2046.26 1214.01 L2046.85 1214.01 L2047.43 1214.01 L2048.02 1214.01 L2048.6 1214.01 L2049.19 1214.01 L2049.78 1214.01 L2050.36 1214.01 L2050.95 1214.01 L2051.54 1214.01 L2052.12 1214.01 L2052.71 1214.01 L2053.3 1214.01 L2053.88 1214.01 L2054.47 1214.01 L2055.06 1214.01 L2055.64 1214.01 L2056.23 1214.01 L2056.81 1214.01 L2057.4 1214.01 L2057.99 1214.01 L2058.57 1214.01 L2059.16 1214.01 L2059.75 1214.01 L2060.33 1214.01 L2060.92 1214.01 L2061.51 1214.01 L2062.09 1214.01 L2062.68 1214.01 L2063.27 1214.01 L2063.85 1214.01 L2064.44 1214.01 L2065.02 1214.01 L2065.61 1214.01 L2066.2 1214.01 L2066.78 1214.01 L2067.37 1214.01 L2067.96 1214.01 L2068.54 1214.01 L2069.13 1214.01 L2069.72 1214.01 L2070.3 1214.01 L2070.89 1214.01 L2071.48 1214.01 L2072.06 1214.01 L2072.65 1214.01 L2073.23 1214.01 L2073.82 1214.01 L2074.41 1214.01 L2074.99 1214.01 L2075.58 1214.01 L2076.17 1214.01 L2076.75 1214.01 L2077.34 1214.01 L2077.93 1214.01 L2078.51 1214.01 L2079.1 1214.01 L2079.68 1214.01 L2080.27 1214.01 L2080.86 1214.01 L2081.44 1214.01 L2082.03 1214.01 L2082.62 1214.01 L2083.2 1214.01 L2083.79 1214.01 L2084.38 1214.01 L2084.96 1214.01 L2085.55 1214.01 L2086.14 1214.01 L2086.72 1214.01 L2087.31 1214.01 L2087.89 1214.01 L2088.48 1214.01 L2089.07 1214.01 L2089.65 1214.01 L2090.24 1214.01 L2090.83 1214.01 L2091.41 1214.01 L2092 1214.01 L2092.59 1214.01 L2093.17 1214.01 L2093.76 1214.01 L2094.35 1214.01 L2094.93 1214.01 L2095.52 1214.01 L2096.1 1214.01 L2096.69 1214.01 L2097.28 1214.01 L2097.86 1214.01 L2098.45 1214.01 L2099.04 1214.01 L2099.62 1214.01 L2100.21 1214.01 L2100.8 1214.01 L2101.38 1214.01 L2101.97 1214.01 L2102.55 1214.01 L2103.14 1214.01 L2103.73 1214.01 L2104.31 1214.01 L2104.9 1214.01 L2105.49 1214.01 L2106.07 1214.01 L2106.66 1214.01 L2107.25 1214.01 L2107.83 1214.01 L2108.42 1214.01 L2109.01 1214.01 L2109.59 1214.01 L2110.18 1214.01 L2110.76 1214.01 L2111.35 1214.01 L2111.94 1214.01 L2112.52 1214.01 L2113.11 1214.01 L2113.7 1214.01 L2114.28 1214.01 L2114.87 1214.01 L2115.46 1214.01 L2116.04 1214.01 L2116.63 1214.01 L2117.22 1214.01 L2117.8 1214.01 L2118.39 1214.01 L2118.97 1214.01 L2119.56 1214.01 L2120.15 1214.01 L2120.73 1214.01 L2121.32 1214.01 L2121.91 1214.01 L2122.49 1214.01 L2123.08 1214.01 L2123.67 1214.01 L2124.25 1214.01 L2124.84 1214.01 L2125.42 1214.01 L2126.01 1214.01 L2126.6 1214.01 L2127.18 1214.01 L2127.77 1214.01 L2128.36 1214.01 L2128.94 1214.01 L2129.53 1214.01 L2130.12 1214.01 L2130.7 1214.01 L2131.29 1214.01 L2131.88 1214.01 L2132.46 1214.01 L2133.05 1214.01 L2133.63 1214.01 L2134.22 1214.01 L2134.81 1214.01 L2135.39 1214.01 L2135.98 1214.01 L2136.57 1214.01 L2137.15 1214.01 L2137.74 1214.01 L2138.33 1214.01 L2138.91 1214.01 L2139.5 1214.01 L2140.09 1214.01 L2140.67 1214.01 L2141.26 1214.01 L2141.84 1214.01 L2142.43 1214.01 L2143.02 1214.01 L2143.6 1214.01 L2144.19 1214.01 L2144.78 1214.01 L2145.36 1214.01 L2145.95 1214.01 L2146.54 1214.01 L2147.12 1214.01 L2147.71 1214.01 L2148.3 1214.01 L2148.88 1214.01 L2149.47 1214.01 L2150.05 1214.01 L2150.64 1214.01 L2151.23 1214.01 L2151.81 1214.01 L2152.4 1214.01 L2152.99 1214.01 L2153.57 1214.01 L2154.16 1214.01 L2154.75 1214.01 L2155.33 1214.01 L2155.92 1214.01 L2156.5 1214.01 L2157.09 1214.01 L2157.68 1214.01 L2158.26 1214.01 L2158.26 1213.3 L2157.68 1213.3 L2157.09 1213.3 L2156.5 1213.3 L2155.92 1213.3 L2155.33 1213.3 L2154.75 1213.3 L2154.16 1213.3 L2153.57 1213.3 L2152.99 1213.3 L2152.4 1213.3 L2151.81 1213.3 L2151.23 1213.3 L2150.64 1213.3 L2150.05 1213.3 L2149.47 1213.3 L2148.88 1213.3 L2148.3 1213.3 L2147.71 1213.3 L2147.12 1213.3 L2146.54 1213.3 L2145.95 1213.3 L2145.36 1213.3 L2144.78 1213.3 L2144.19 1213.3 L2143.6 1213.3 L2143.02 1213.3 L2142.43 1213.3 L2141.84 1213.3 L2141.26 1213.3 L2140.67 1213.3 L2140.09 1213.3 L2139.5 1213.3 L2138.91 1213.3 L2138.33 1213.3 L2137.74 1213.3 L2137.15 1213.3 L2136.57 1213.3 L2135.98 1213.3 L2135.39 1213.3 L2134.81 1213.3 L2134.22 1213.3 L2133.63 1213.3 L2133.05 1213.3 L2132.46 1213.3 L2131.88 1213.3 L2131.29 1213.3 L2130.7 1213.3 L2130.12 1213.3 L2129.53 1213.3 L2128.94 1213.3 L2128.36 1213.3 L2127.77 1213.3 L2127.18 1213.3 L2126.6 1213.3 L2126.01 1213.3 L2125.42 1213.3 L2124.84 1213.3 L2124.25 1213.3 L2123.67 1213.3 L2123.08 1213.3 L2122.49 1213.3 L2121.91 1213.3 L2121.32 1213.3 L2120.73 1213.3 L2120.15 1213.3 L2119.56 1213.3 L2118.97 1213.3 L2118.39 1213.3 L2117.8 1213.3 L2117.22 1213.3 L2116.63 1213.3 L2116.04 1213.3 L2115.46 1213.3 L2114.87 1213.3 L2114.28 1213.3 L2113.7 1213.3 L2113.11 1213.3 L2112.52 1213.3 L2111.94 1213.3 L2111.35 1213.3 L2110.76 1213.3 L2110.18 1213.3 L2109.59 1213.3 L2109.01 1213.3 L2108.42 1213.3 L2107.83 1213.3 L2107.25 1213.3 L2106.66 1213.3 L2106.07 1213.3 L2105.49 1213.3 L2104.9 1213.3 L2104.31 1213.3 L2103.73 1213.3 L2103.14 1213.3 L2102.55 1213.3 L2101.97 1213.3 L2101.38 1213.3 L2100.8 1213.3 L2100.21 1213.3 L2099.62 1213.3 L2099.04 1213.3 L2098.45 1213.3 L2097.86 1213.3 L2097.28 1213.3 L2096.69 1213.3 L2096.1 1213.3 L2095.52 1213.3 L2094.93 1213.3 L2094.35 1213.3 L2093.76 1213.3 L2093.17 1213.3 L2092.59 1213.3 L2092 1213.3 L2091.41 1213.3 L2090.83 1213.3 L2090.24 1213.3 L2089.65 1213.3 L2089.07 1213.3 L2088.48 1213.3 L2087.89 1213.3 L2087.31 1213.3 L2086.72 1213.3 L2086.14 1213.3 L2085.55 1213.3 L2084.96 1213.3 L2084.38 1213.3 L2083.79 1213.3 L2083.2 1213.3 L2082.62 1213.3 L2082.03 1213.3 L2081.44 1213.3 L2080.86 1213.3 L2080.27 1213.3 L2079.68 1213.3 L2079.1 1213.3 L2078.51 1213.3 L2077.93 1213.3 L2077.34 1213.3 L2076.75 1213.3 L2076.17 1213.3 L2075.58 1213.3 L2074.99 1213.3 L2074.41 1213.3 L2073.82 1213.3 L2073.23 1213.3 L2072.65 1213.3 L2072.06 1213.3 L2071.48 1213.3 L2070.89 1213.3 L2070.3 1213.3 L2069.72 1213.3 L2069.13 1213.3 L2068.54 1213.3 L2067.96 1213.3 L2067.37 1213.3 L2066.78 1213.3 L2066.2 1213.3 L2065.61 1213.3 L2065.02 1213.3 L2064.44 1213.3 L2063.85 1213.3 L2063.27 1213.3 L2062.68 1213.3 L2062.09 1213.3 L2061.51 1213.3 L2060.92 1213.3 L2060.33 1213.3 L2059.75 1213.3 L2059.16 1213.3 L2058.57 1213.3 L2057.99 1213.3 L2057.4 1213.3 L2056.81 1213.3 L2056.23 1213.3 L2055.64 1213.3 L2055.06 1213.3 L2054.47 1213.3 L2053.88 1213.3 L2053.3 1213.3 L2052.71 1213.3 L2052.12 1213.3 L2051.54 1213.3 L2050.95 1213.3 L2050.36 1213.3 L2049.78 1213.3 L2049.19 1213.3 L2048.6 1213.3 L2048.02 1213.3 L2047.43 1213.3 L2046.85 1213.3 L2046.26 1213.3 L2045.67 1213.3 L2045.09 1213.3 L2044.5 1213.3 L2043.91 1213.3 L2043.33 1213.3 L2042.74 1213.3 L2042.15 1213.3 L2041.57 1213.3 L2040.98 1213.3 L2040.4 1213.3 L2039.81 1213.3 L2039.22 1213.3 L2038.64 1213.3 L2038.05 1213.3 L2037.46 1213.3 L2036.88 1213.3 L2036.29 1213.3 L2035.7 1213.3 L2035.12 1213.3 L2034.53 1213.3 L2033.94 1213.3 L2033.36 1213.3 L2032.77 1213.3 L2032.19 1213.3 L2031.6 1213.3 L2031.01 1213.3 L2030.43 1213.3 L2029.84 1213.3 L2029.25 1213.3 L2028.67 1213.3 L2028.08 1213.3 L2027.49 1213.3 L2026.91 1213.3 L2026.32 1213.3 L2025.73 1213.3 L2025.15 1213.3 L2024.56 1213.3 L2023.98 1213.3 L2023.39 1213.3 L2022.8 1213.3 L2022.22 1213.3 L2021.63 1213.3 L2021.04 1213.3 L2020.46 1213.3 L2019.87 1213.3 L2019.28 1213.3 L2018.7 1213.3 L2018.11 1213.3 L2017.53 1213.3 L2016.94 1213.3 L2016.35 1213.3 L2015.77 1213.3 L2015.18 1213.3 L2014.59 1213.3 L2014.01 1213.3 L2013.42 1213.3 L2012.83 1213.3 L2012.25 1213.3 L2011.66 1213.3 L2011.07 1213.3 L2010.49 1213.3 L2009.9 1213.3 L2009.32 1213.3 L2008.73 1213.3 L2008.14 1213.3 L2007.56 1213.3 L2006.97 1213.3 L2006.38 1213.3 L2005.8 1213.3 L2005.21 1213.3 L2004.62 1213.3 L2004.04 1213.3 L2003.45 1213.3 L2002.86 1213.3 L2002.28 1213.3 L2001.69 1213.3 L2001.11 1213.3 L2000.52 1213.3 L1999.93 1213.3 L1999.35 1213.3 L1998.76 1213.3 L1998.17 1213.3 L1997.59 1213.3 L1997 1213.3 L1996.41 1213.3 L1995.83 1213.3 L1995.24 1213.3 L1994.65 1213.3 L1994.07 1213.3 L1993.48 1213.3 L1992.9 1213.3 L1992.31 1213.3 L1991.72 1213.3 L1991.14 1213.3 L1990.55 1213.3 L1989.96 1213.3 L1989.38 1213.3 L1988.79 1213.3 L1988.2 1213.3 L1987.62 1213.3 L1987.03 1213.3 L1986.45 1213.3 L1985.86 1213.3 L1985.27 1213.3 L1984.69 1213.3 L1984.1 1213.3 L1983.51 1213.3 L1982.93 1213.3 L1982.34 1213.3 L1981.75 1213.3 L1981.17 1213.3 L1980.58 1213.3 L1979.99 1213.3 L1979.41 1213.3 L1978.82 1213.3 L1978.24 1213.3 L1977.65 1213.3 L1977.06 1213.3 L1976.48 1213.3 L1975.89 1213.3 L1975.3 1213.3 L1974.72 1213.3 L1974.13 1213.3 L1973.54 1213.3 L1972.96 1213.3 L1972.37 1213.3 L1971.78 1213.3 L1971.2 1213.3 L1970.61 1213.3 L1970.03 1213.3 L1969.44 1213.3 L1968.85 1213.3 L1968.27 1213.3 L1967.68 1213.3 L1967.09 1213.3 L1966.51 1213.3 L1965.92 1213.3 L1965.33 1213.3 L1964.75 1213.3 L1964.16 1213.3 L1963.58 1213.3 L1962.99 1213.3 L1962.4 1213.3 L1961.82 1213.3 L1961.23 1213.3 L1960.64 1213.3 L1960.06 1213.3 L1959.47 1213.3 L1958.88 1213.3 L1958.3 1213.3 L1957.71 1213.3 L1957.12 1213.3 L1956.54 1213.3 L1955.95 1213.3 L1955.37 1213.3 L1954.78 1213.3 L1954.19 1213.3 L1953.61 1213.3 L1953.02 1213.3 L1952.43 1213.3 L1951.85 1213.3 L1951.26 1213.3 L1950.67 1213.3 L1950.09 1213.3 L1949.5 1213.3 L1948.91 1213.3 L1948.33 1213.3 L1947.74 1213.3 L1947.16 1213.3 L1946.57 1213.3 L1945.98 1213.3 L1945.4 1213.3 L1944.81 1213.3 L1944.22 1213.3 L1943.64 1213.3 L1943.05 1213.3 L1942.46 1213.3 L1941.88 1213.3 L1941.29 1213.3 L1940.71 1213.3 L1940.12 1213.3 L1939.53 1213.3 L1938.95 1213.3 L1938.36 1213.3 L1937.77 1213.3 L1937.19 1213.3 L1936.6 1213.3 L1936.01 1213.3 L1935.43 1213.3 L1934.84 1213.3 L1934.25 1213.3 L1933.67 1213.3 L1933.08 1213.3 L1932.5 1213.3 L1931.91 1213.3 L1931.32 1213.3 L1930.74 1213.3 L1930.15 1213.3 L1929.56 1213.3 L1928.98 1213.3 L1928.39 1213.3 L1927.8 1213.3 L1927.22 1213.3 L1926.63 1213.3 L1926.04 1213.3 L1925.46 1213.3 L1924.87 1213.3 L1924.29 1213.3 L1923.7 1213.3 L1923.11 1213.3 L1922.53 1213.3 L1921.94 1213.3 L1921.35 1213.3 L1920.77 1213.3 L1920.18 1213.3 L1919.59 1213.3 L1919.01 1213.3 L1918.42 1213.3 L1917.83 1213.3 L1917.25 1213.3 L1916.66 1213.3 L1916.08 1213.3 L1915.49 1213.3 L1914.9 1213.3 L1914.32 1213.3 L1913.73 1213.3 L1913.14 1213.3 L1912.56 1213.3 L1911.97 1213.3 L1911.38 1213.3 L1910.8 1213.3 L1910.21 1213.3 L1909.63 1213.3 L1909.04 1213.3 L1908.45 1213.3 L1907.87 1213.3 L1907.28 1213.3 L1906.69 1213.3 L1906.11 1213.3 L1905.52 1213.3 L1904.93 1213.3 L1904.35 1213.3 L1903.76 1213.3 L1903.17 1213.3 L1902.59 1213.3 L1902 1213.3 L1901.42 1213.3 L1900.83 1213.3 L1900.24 1213.3 L1899.66 1213.3 L1899.07 1213.3 L1898.48 1213.3 L1897.9 1213.3 L1897.31 1213.3 L1896.72 1213.3 L1896.14 1213.3 L1895.55 1213.3 L1894.96 1213.3 L1894.38 1213.3 L1893.79 1213.3 L1893.21 1213.3 L1892.62 1213.3 L1892.03 1213.3 L1891.45 1213.3 L1890.86 1213.3 L1890.27 1213.3 L1889.69 1213.3 L1889.1 1213.3 L1888.51 1213.3 L1887.93 1213.3 L1887.34 1213.3 L1886.76 1213.3 L1886.17 1213.3 L1885.58 1213.3 L1885 1213.3 L1884.41 1213.3 L1883.82 1213.3 L1883.24 1213.3 L1882.65 1213.3 L1882.06 1213.3 L1881.48 1213.3 L1880.89 1213.3 L1880.3 1213.3 L1879.72 1213.3 L1879.13 1213.3 L1878.55 1213.3 L1877.96 1213.3 L1877.37 1213.3 L1876.79 1213.3 L1876.2 1213.3 L1875.61 1213.3 L1875.03 1213.3 L1874.44 1213.3 L1873.85 1213.3 L1873.27 1213.3 L1872.68 1213.3 L1872.09 1213.3 L1871.51 1213.3 L1870.92 1213.3 L1870.34 1213.3 L1869.75 1213.3 L1869.16 1213.3 L1868.58 1213.3 L1867.99 1213.3 L1867.4 1213.3 L1866.82 1213.3 L1866.23 1213.3 L1865.64 1213.3 L1865.06 1213.3 L1864.47 1213.3 L1863.88 1213.3 L1863.3 1213.3 L1862.71 1213.3 L1862.13 1213.3 L1861.54 1213.3 L1860.95 1213.3 L1860.37 1213.3 L1859.78 1213.3 L1859.19 1213.3 L1858.61 1213.3 L1858.02 1213.3 L1857.43 1213.3 L1856.85 1213.3 L1856.26 1213.3 L1855.68 1213.3 L1855.09 1213.3 L1854.5 1213.3 L1853.92 1213.3 L1853.33 1213.3 L1852.74 1213.3 L1852.16 1213.3 L1851.57 1213.3 L1850.98 1213.3 L1850.4 1213.3 L1849.81 1213.3 L1849.22 1213.3 L1848.64 1213.3 L1848.05 1213.3 L1847.47 1213.3 L1846.88 1213.3 L1846.29 1213.3 L1845.71 1213.3 L1845.12 1213.3 L1844.53 1213.3 L1843.95 1213.3 L1843.36 1213.3 L1842.77 1213.3 L1842.19 1213.3 L1841.6 1213.3 L1841.01 1213.3 L1840.43 1213.3 L1839.84 1213.3 L1839.26 1213.3 L1838.67 1213.3 L1838.08 1213.3 L1837.5 1213.3 L1836.91 1213.3 L1836.32 1213.3 L1835.74 1213.3 L1835.15 1213.3 L1834.56 1213.3 L1833.98 1213.3 L1833.39 1213.3 L1832.81 1213.3 L1832.22 1213.3 L1831.63 1213.3 L1831.05 1213.3 L1830.46 1213.3 L1829.87 1213.3 L1829.29 1213.3 L1828.7 1213.3 L1828.11 1213.3 L1827.53 1213.3 L1826.94 1213.3 L1826.35 1213.3 L1825.77 1213.3 L1825.18 1213.3 L1824.6 1213.3 L1824.01 1213.3 L1823.42 1213.3 L1822.84 1213.3 L1822.25 1213.3 L1821.66 1213.3 L1821.08 1213.3 L1820.49 1213.3 L1819.9 1213.3 L1819.32 1213.3 L1818.73 1213.3 L1818.14 1213.3 L1817.56 1213.3 L1816.97 1213.3 L1816.39 1213.3 L1815.8 1213.3 L1815.21 1213.3 L1814.63 1213.3 L1814.04 1213.3 L1813.45 1213.3 L1812.87 1213.3 L1812.28 1213.3 L1811.69 1213.3 L1811.11 1213.3 L1810.52 1213.3 L1809.94 1213.3 L1809.35 1213.3 L1808.76 1213.3 L1808.18 1213.3 L1807.59 1213.3 L1807 1213.3 L1806.42 1213.3 L1805.83 1213.3 L1805.24 1213.3 L1804.66 1213.3 L1804.07 1213.3 L1803.48 1213.3 L1802.9 1213.3 L1802.31 1213.3 L1801.73 1213.3 L1801.14 1213.3 L1800.55 1213.3 L1799.97 1213.3 L1799.38 1213.3 L1798.79 1213.3 L1798.21 1213.3 L1797.62 1213.3 L1797.03 1213.3 L1796.45 1213.3 L1795.86 1213.3 L1795.27 1213.3 L1794.69 1213.3 L1794.1 1213.3 L1793.52 1213.3 L1792.93 1213.3 L1792.34 1213.3 L1791.76 1213.3 L1791.17 1213.3 L1790.58 1213.3 L1790 1213.3 L1789.41 1213.3 L1788.82 1213.3 L1788.24 1213.3 L1787.65 1213.3 L1787.06 1213.3 L1786.48 1213.3 L1785.89 1213.3 L1785.31 1213.3 L1784.72 1213.3 L1784.13 1213.3 L1783.55 1213.3 L1782.96 1213.3 L1782.37 1213.3 L1781.79 1213.3 L1781.2 1213.3 L1780.61 1213.3 L1780.03 1213.3 L1779.44 1213.3 L1778.86 1213.3 L1778.27 1213.3 L1777.68 1213.3 L1777.1 1213.3 L1776.51 1213.3 L1775.92 1213.3 L1775.34 1213.3 L1774.75 1213.3 L1774.16 1213.3 L1773.58 1213.3 L1772.99 1213.3 L1772.4 1213.3 L1771.82 1213.3 L1771.23 1213.3 L1770.65 1213.3 L1770.06 1213.3 L1769.47 1213.3 L1768.89 1213.3 L1768.3 1213.3 L1767.71 1213.3 L1767.13 1213.3 L1766.54 1213.3 L1765.95 1213.3 L1765.37 1213.3 L1764.78 1213.3 L1764.19 1213.3 L1763.61 1213.3 L1763.02 1213.3 L1762.44 1213.3 L1761.85 1213.3 L1761.26 1213.3 L1760.68 1213.3 L1760.09 1213.3 L1759.5 1213.3 L1758.92 1213.3 L1758.33 1213.3 L1757.74 1213.3 L1757.16 1213.3 L1756.57 1213.3 L1755.99 1213.3 L1755.4 1213.3 L1754.81 1213.3 L1754.23 1213.3 L1753.64 1213.3 L1753.05 1213.3 L1752.47 1213.3 L1751.88 1213.3 L1751.29 1213.3 L1750.71 1213.3 L1750.12 1213.3 L1749.53 1213.3 L1748.95 1213.3 L1748.36 1213.3 L1747.78 1213.3 L1747.19 1213.3 L1746.6 1213.3 L1746.02 1213.3 L1745.43 1213.3 L1744.84 1213.3 L1744.26 1213.3 L1743.67 1213.3 L1743.08 1213.3 L1742.5 1213.3 L1741.91 1213.3 L1741.32 1213.3 L1740.74 1213.3 L1740.15 1213.3 L1739.57 1213.3 L1738.98 1213.3 L1738.39 1213.3 L1737.81 1213.3 L1737.22 1213.3 L1736.63 1213.3 L1736.05 1213.3 L1735.46 1213.3 L1734.87 1213.3 L1734.29 1213.3 L1733.7 1213.3 L1733.11 1213.3 L1732.53 1213.3 L1731.94 1213.3 L1731.36 1213.3 L1730.77 1213.3 L1730.18 1213.3 L1729.6 1213.3 L1729.01 1213.3 L1728.42 1213.3 L1727.84 1213.3 L1727.25 1213.3 L1726.66 1213.3 L1726.08 1213.3 L1725.49 1213.3 L1724.91 1213.3 L1724.32 1213.3 L1723.73 1213.3 L1723.15 1213.3 L1722.56 1213.3 L1721.97 1213.3 L1721.39 1213.3 L1720.8 1213.3 L1720.21 1213.3 L1719.63 1213.3 L1719.04 1213.3 L1718.45 1213.3 L1717.87 1213.3 L1717.28 1213.3 L1716.7 1213.3 L1716.11 1213.3 L1715.52 1213.3 L1714.94 1213.3 L1714.35 1213.3 L1713.76 1213.3 L1713.18 1213.3 L1712.59 1213.3 L1712 1213.3 L1711.42 1213.3 L1710.83 1213.3 L1710.24 1213.3 L1709.66 1213.3 L1709.07 1213.3 L1708.49 1213.3 L1707.9 1213.3 L1707.31 1213.3 L1706.73 1213.3 L1706.14 1213.3 L1705.55 1213.3 L1704.97 1213.3 L1704.38 1213.3 L1703.79 1213.3 L1703.21 1213.3 L1702.62 1213.3 L1702.04 1213.3 L1701.45 1213.3 L1700.86 1213.3 L1700.28 1213.3 L1699.69 1213.3 L1699.1 1213.3 L1698.52 1213.3 L1697.93 1213.3 L1697.34 1213.3 L1696.76 1213.3 L1696.17 1213.3 L1695.58 1213.3 L1695 1213.3 L1694.41 1213.3 L1693.83 1213.3 L1693.24 1213.3 L1692.65 1213.3 L1692.07 1213.3 L1691.48 1213.3 L1690.89 1213.3 L1690.31 1213.3 L1689.72 1213.3 L1689.13 1213.3 L1688.55 1213.3 L1687.96 1213.3 L1687.37 1213.3 L1686.79 1213.3 L1686.2 1213.3 L1685.62 1213.3 L1685.03 1213.3 L1684.44 1213.3 L1683.86 1213.3 L1683.27 1213.3 L1682.68 1213.3 L1682.1 1213.3 L1681.51 1213.3 L1680.92 1213.3 L1680.34 1213.3 L1679.75 1213.3 L1679.17 1213.3 L1678.58 1213.3 L1677.99 1213.3 L1677.41 1213.3 L1676.82 1213.3 L1676.23 1213.3 L1675.65 1213.3 L1675.06 1213.3 L1674.47 1213.3 L1673.89 1213.3 L1673.3 1213.3 L1672.71 1213.3 L1672.13 1213.3 L1671.54 1213.3 L1670.96 1213.3 L1670.37 1213.3 L1669.78 1213.3 L1669.2 1213.3 L1668.61 1213.3 L1668.02 1213.3 L1667.44 1213.3 L1666.85 1213.3 L1666.26 1213.3 L1665.68 1213.3 L1665.09 1213.3 L1664.5 1213.3 L1663.92 1213.3 L1663.33 1213.3 L1662.75 1213.3 L1662.16 1213.3 L1661.57 1213.3 L1660.99 1213.3 L1660.4 1213.3 L1659.81 1213.3 L1659.23 1213.3 L1658.64 1213.3 L1658.05 1213.3 L1657.47 1213.3 L1656.88 1213.3 L1656.29 1213.3 L1655.71 1213.3 L1655.12 1213.3 L1654.54 1213.3 L1653.95 1213.3 L1653.36 1213.3 L1652.78 1213.3 L1652.19 1213.3 L1651.6 1213.3 L1651.02 1213.3 L1650.43 1213.3 L1649.84 1213.3 L1649.26 1213.3 L1648.67 1213.3 L1648.09 1213.3 L1647.5 1213.3 L1646.91 1213.3 L1646.33 1213.3 L1645.74 1213.3 L1645.15 1213.3 L1644.57 1213.3 L1643.98 1213.3 L1643.39 1213.3 L1642.81 1213.3 L1642.22 1213.3 L1641.63 1213.3 L1641.05 1213.3 L1640.46 1213.3 L1639.88 1213.3 L1639.29 1213.3 L1638.7 1213.3 L1638.12 1213.3 L1637.53 1213.3 L1636.94 1213.3 L1636.36 1213.3 L1635.77 1213.3 L1635.18 1213.3 L1634.6 1213.3 L1634.01 1213.3 L1633.42 1213.3 L1632.84 1213.3 L1632.25 1213.3 L1631.67 1213.3 L1631.08 1213.3 L1630.49 1213.3 L1629.91 1213.3 L1629.32 1213.3 L1628.73 1213.3 L1628.15 1213.3 L1627.56 1213.3 L1626.97 1213.3 L1626.39 1213.3 L1625.8 1213.3 L1625.22 1213.3 L1624.63 1213.3 L1624.04 1213.3 L1623.46 1213.3 L1622.87 1213.3 L1622.28 1213.3 L1621.7 1213.3 L1621.11 1213.3 L1620.52 1213.3 L1619.94 1213.3 L1619.35 1213.3 L1618.76 1213.3 L1618.18 1213.3 L1617.59 1213.3 L1617.01 1213.3 L1616.42 1213.3 L1615.83 1213.3 L1615.25 1213.3 L1614.66 1213.3 L1614.07 1213.3 L1613.49 1213.3 L1612.9 1213.3 L1612.31 1213.3 L1611.73 1213.3 L1611.14 1213.3 L1610.55 1213.3 L1609.97 1213.3 L1609.38 1213.3 L1608.8 1213.3 L1608.21 1213.3 L1607.62 1213.3 L1607.04 1213.3 L1606.45 1213.3 L1605.86 1213.3 L1605.28 1213.3 L1604.69 1213.3 L1604.1 1213.3 L1603.52 1213.3 L1602.93 1213.3 L1602.34 1213.3 L1601.76 1213.3 L1601.17 1213.3 L1600.59 1213.3 L1600 1213.3 L1599.41 1213.3 L1598.83 1213.3 L1598.24 1213.3 L1597.65 1213.3 L1597.07 1213.3 L1596.48 1213.3 L1595.89 1213.3 L1595.31 1213.3 L1594.72 1213.3 L1594.14 1213.3 L1593.55 1213.3 L1592.96 1213.3 L1592.38 1213.3 L1591.79 1213.3 L1591.2 1213.3 L1590.62 1213.3 L1590.03 1213.3 L1589.44 1213.3 L1588.86 1213.3 L1588.27 1213.3 L1587.68 1213.3 L1587.1 1213.3 L1586.51 1213.3 L1585.93 1213.3 L1585.34 1213.3 L1584.75 1213.3 L1584.17 1213.3 L1583.58 1213.3 L1582.99 1213.3 L1582.41 1213.3 L1581.82 1213.3 L1581.23 1213.3 L1580.65 1213.3 L1580.06 1213.3 L1579.47 1213.3 L1578.89 1213.3 L1578.3 1213.3 L1577.72 1213.3 L1577.13 1213.3 L1576.54 1213.3 L1575.96 1213.3 L1575.37 1213.3 L1574.78 1213.3 L1574.2 1213.3 L1573.61 1213.3 L1573.02 1213.3 L1572.44 1213.3 L1571.85 1213.3 L1571.27 1213.3 L1570.68 1213.3 L1570.09 1213.3 L1569.51 1213.3 L1568.92 1213.3 L1568.33 1213.3 L1567.75 1213.3 L1567.16 1213.3 L1566.57 1213.3 L1565.99 1213.3 L1565.4 1213.3 L1564.81 1213.3 L1564.23 1213.3 L1563.64 1213.3 L1563.06 1213.3 L1562.47 1213.3 L1561.88 1213.3 L1561.3 1213.3 L1560.71 1213.3 L1560.12 1213.3 L1559.54 1213.3 L1558.95 1213.3 L1558.36 1213.3 L1557.78 1213.3 L1557.19 1213.3 L1556.6 1213.3 L1556.02 1213.3 L1555.43 1213.3 L1554.85 1213.3 L1554.26 1213.3 L1553.67 1213.3 L1553.09 1213.3 L1552.5 1213.3 L1551.91 1213.3 L1551.33 1213.3 L1550.74 1213.3 L1550.15 1213.3 L1549.57 1213.3 L1548.98 1213.3 L1548.4 1213.3 L1547.81 1213.3 L1547.22 1213.3 L1546.64 1213.3 L1546.05 1213.3 L1545.46 1213.3 L1544.88 1213.3 L1544.29 1213.3 L1543.7 1213.3 L1543.12 1213.3 L1542.53 1213.3 L1541.94 1213.3 L1541.36 1213.3 L1540.77 1213.3 L1540.19 1213.3 L1539.6 1213.3 L1539.01 1213.3 L1538.43 1213.3 L1537.84 1213.3 L1537.25 1213.3 L1536.67 1213.3 L1536.08 1213.3 L1535.49 1213.3 L1534.91 1213.3 L1534.32 1213.3 L1533.73 1213.3 L1533.15 1213.3 L1532.56 1213.3 L1531.98 1213.3 L1531.39 1213.3 L1530.8 1213.3 L1530.22 1213.3 L1529.63 1213.3 L1529.04 1213.3 L1528.46 1213.3 L1527.87 1213.3 L1527.28 1213.3 L1526.7 1213.3 L1526.11 1213.3 L1525.52 1213.3 L1524.94 1213.3 L1524.35 1213.3 L1523.77 1213.3 L1523.18 1213.3 L1522.59 1213.3 L1522.01 1213.3 L1521.42 1213.3 L1520.83 1213.3 L1520.25 1213.3 L1519.66 1213.3 L1519.07 1213.3 L1518.49 1213.3 L1517.9 1213.3 L1517.32 1213.3 L1516.73 1213.3 L1516.14 1213.3 L1515.56 1213.3 L1514.97 1213.3 L1514.38 1213.3 L1513.8 1213.3 L1513.21 1213.3 L1512.62 1213.3 L1512.04 1213.3 L1511.45 1213.3 L1510.86 1213.3 L1510.28 1213.3 L1509.69 1213.3 L1509.11 1213.3 L1508.52 1213.3 L1507.93 1213.3 L1507.35 1213.3 L1506.76 1213.3 L1506.17 1213.3 L1505.59 1213.3 L1505 1213.3 L1504.41 1213.3 L1503.83 1213.3 L1503.24 1213.3 L1502.65 1213.3 L1502.07 1213.3 L1501.48 1213.3 L1500.9 1213.3 L1500.31 1213.3 L1499.72 1213.3 L1499.14 1213.3 L1498.55 1213.3 L1497.96 1213.3 L1497.38 1213.3 L1496.79 1213.3 L1496.2 1213.3 L1495.62 1213.3 L1495.03 1213.3 L1494.45 1213.3 L1493.86 1213.3 L1493.27 1213.3 L1492.69 1213.3 L1492.1 1213.3 L1491.51 1213.3 L1490.93 1213.3 L1490.34 1213.3 L1489.75 1213.3 L1489.17 1213.3 L1488.58 1213.3 L1487.99 1213.3 L1487.41 1213.3 L1486.82 1213.3 L1486.24 1213.3 L1485.65 1213.3 L1485.06 1213.3 L1484.48 1213.3 L1483.89 1213.3 L1483.3 1213.3 L1482.72 1213.3 L1482.13 1213.3 L1481.54 1213.3 L1480.96 1213.3 L1480.37 1213.3 L1479.78 1213.3 L1479.2 1213.3 L1478.61 1213.3 L1478.03 1213.3 L1477.44 1213.3 L1476.85 1213.3 L1476.27 1213.3 L1475.68 1213.3 L1475.09 1213.3 L1474.51 1213.3 L1473.92 1213.3 L1473.33 1213.3 L1472.75 1213.3 L1472.16 1213.3 L1471.57 1213.3 L1470.99 1213.3 L1470.4 1213.3 L1469.82 1213.3 L1469.23 1213.3 L1468.64 1213.3 L1468.06 1213.3 L1467.47 1213.3 L1466.88 1213.3 L1466.3 1213.3 L1465.71 1213.3 L1465.12 1213.3 L1464.54 1213.3 L1463.95 1213.3 L1463.37 1213.3 L1462.78 1213.3 L1462.19 1213.3 L1461.61 1213.3 L1461.02 1213.3 L1460.43 1213.3 L1459.85 1213.3 L1459.26 1213.3 L1458.67 1213.3 L1458.09 1213.3 L1457.5 1213.3 L1456.91 1213.3 L1456.33 1213.3 L1455.74 1213.3 L1455.16 1213.3 L1454.57 1213.3 L1453.98 1213.3 L1453.4 1213.3 L1452.81 1213.3 L1452.22 1213.3 L1451.64 1213.3 L1451.05 1213.3 L1450.46 1213.3 L1449.88 1213.3 L1449.29 1213.3 L1448.7 1213.3 L1448.12 1213.3 L1447.53 1213.3 L1446.95 1213.3 L1446.36 1213.3 L1445.77 1213.3 L1445.19 1213.3 L1444.6 1213.3 L1444.01 1213.3 L1443.43 1213.3 L1442.84 1213.3 L1442.25 1213.3 L1441.67 1213.3 L1441.08 1213.3 L1440.5 1213.3 L1439.91 1213.3 L1439.32 1213.3 L1438.74 1213.3 L1438.15 1213.3 L1437.56 1213.3 L1436.98 1213.3 L1436.39 1213.3 L1435.8 1213.3 L1435.22 1213.3 L1434.63 1213.3 L1434.04 1213.3 L1433.46 1213.3 L1432.87 1213.3 L1432.29 1213.3 L1431.7 1213.3 L1431.11 1213.3 L1430.53 1213.3 L1429.94 1213.3 L1429.35 1213.3 L1428.77 1213.3 L1428.18 1213.3 L1427.59 1213.3 L1427.01 1213.3 L1426.42 1213.3 L1425.83 1213.3 L1425.25 1213.3 L1424.66 1213.3 L1424.08 1213.3 L1423.49 1213.3 L1422.9 1213.3 L1422.32 1213.3 L1421.73 1213.3 L1421.14 1213.3 L1420.56 1213.3 L1419.97 1213.3 L1419.38 1213.3 L1418.8 1213.3 L1418.21 1213.3 L1417.63 1213.3 L1417.04 1213.3 L1416.45 1213.3 L1415.87 1213.3 L1415.28 1213.3 L1414.69 1213.3 L1414.11 1213.3 L1413.52 1213.3 L1412.93 1213.3 L1412.35 1213.3 L1411.76 1213.3 L1411.17 1213.3 L1410.59 1213.3 L1410 1213.3 L1409.42 1213.3 L1408.83 1213.3 L1408.24 1213.3 L1407.66 1213.3 L1407.07 1213.3 L1406.48 1213.3 L1405.9 1213.3 L1405.31 1213.3 L1404.72 1213.3 L1404.14 1213.3 L1403.55 1213.3 L1402.96 1213.3 L1402.38 1213.3 L1401.79 1213.3 L1401.21 1213.3 L1400.62 1213.3 L1400.03 1213.3 L1399.45 1213.3 L1398.86 1213.3 L1398.27 1213.3 L1397.69 1213.3 L1397.1 1213.3 L1396.51 1213.3 L1395.93 1213.3 L1395.34 1213.3 L1394.75 1213.3 L1394.17 1213.3 L1393.58 1213.3 L1393 1213.3 L1392.41 1213.3 L1391.82 1213.3 L1391.24 1213.3 L1390.65 1213.3 L1390.06 1213.3 L1389.48 1213.3 L1388.89 1213.3 L1388.3 1213.3 L1387.72 1213.3 L1387.13 1213.3 L1386.55 1213.3 L1385.96 1213.3 L1385.37 1213.3 L1384.79 1213.3 L1384.2 1213.3 L1383.61 1213.3 L1383.03 1213.3 L1382.44 1213.3 L1381.85 1213.3 L1381.27 1213.3 L1380.68 1213.3 L1380.09 1213.3 L1379.51 1213.3 L1378.92 1213.3 L1378.34 1213.3 L1377.75 1213.3 L1377.16 1213.3 L1376.58 1213.3 L1375.99 1213.3 L1375.4 1213.3 L1374.82 1213.3 L1374.23 1213.3 L1373.64 1213.3 L1373.06 1213.3 L1372.47 1213.3 L1371.88 1213.3 L1371.3 1213.3 L1370.71 1213.3 L1370.13 1213.3 L1369.54 1213.3 L1368.95 1213.3 L1368.37 1213.3 L1367.78 1213.3 L1367.19 1213.3 L1366.61 1213.3 L1366.02 1213.3 L1365.43 1213.3 L1364.85 1213.3 L1364.26 1213.3 L1363.68 1213.3 L1363.09 1213.3 L1362.5 1213.3 L1361.92 1213.3 L1361.33 1213.3 L1360.74 1213.3 L1360.16 1213.3 L1359.57 1213.3 L1358.98 1213.3 L1358.4 1213.3 L1357.81 1213.3 L1357.22 1213.3 L1356.64 1213.3 L1356.05 1213.3 L1355.47 1213.3 L1354.88 1213.3 L1354.29 1213.3 L1353.71 1213.3 L1353.12 1213.3 L1352.53 1213.3 L1351.95 1213.3 L1351.36 1213.3 L1350.77 1213.3 L1350.19 1213.3 L1349.6 1213.3 L1349.01 1213.3 L1348.43 1213.3 L1347.84 1213.3 L1347.26 1213.3 L1346.67 1213.3 L1346.08 1213.3 L1345.5 1213.3 L1344.91 1213.3 L1344.32 1213.3 L1343.74 1213.3 L1343.15 1213.3 L1342.56 1213.3 L1341.98 1213.3 L1341.39 1213.3 L1340.8 1213.3 L1340.22 1213.3 L1339.63 1213.3 L1339.05 1213.3 L1338.46 1213.3 L1337.87 1213.3 L1337.29 1213.3 L1336.7 1213.3 L1336.11 1213.3 L1335.53 1213.3 L1334.94 1213.3 L1334.35 1213.3 L1333.77 1213.3 L1333.18 1213.3 L1332.6 1213.3 L1332.01 1213.3 L1331.42 1213.3 L1330.84 1213.3 L1330.25 1213.3 L1329.66 1213.3 L1329.08 1213.3 L1328.49 1213.3 L1327.9 1213.3 L1327.32 1213.3 L1326.73 1213.3 L1326.14 1213.3 L1325.56 1213.3 L1324.97 1213.3 L1324.39 1213.3 L1323.8 1213.3 L1323.21 1213.3 L1322.63 1213.3 L1322.04 1213.3 L1321.45 1213.3 L1320.87 1213.3 L1320.28 1213.3 L1319.69 1213.3 L1319.11 1213.3 L1318.52 1213.3 L1317.93 1213.3 L1317.35 1213.3 L1316.76 1213.3 L1316.18 1213.3 L1315.59 1213.3 L1315 1213.3 L1314.42 1213.3 L1313.83 1213.3 L1313.24 1213.3 L1312.66 1213.3 L1312.07 1213.3 L1311.48 1213.3 L1310.9 1213.3 L1310.31 1213.3 L1309.73 1213.3 L1309.14 1213.3 L1308.55 1213.3 L1307.97 1213.3 L1307.38 1213.3 L1306.79 1213.3 L1306.21 1213.3 L1305.62 1213.3 L1305.03 1213.3 L1304.45 1213.3 L1303.86 1213.3 L1303.27 1213.3 L1302.69 1213.3 L1302.1 1213.3 L1301.52 1213.3 L1300.93 1213.3 L1300.34 1213.3 L1299.76 1213.3 L1299.17 1213.3 L1298.58 1213.3 L1298 1213.3 L1297.41 1213.3 L1296.82 1213.3 L1296.24 1213.3 L1295.65 1213.3 L1295.06 1213.3 L1294.48 1213.3 L1293.89 1213.3 L1293.31 1213.3 L1292.72 1213.3 L1292.13 1213.3 L1291.55 1213.3 L1290.96 1213.3 L1290.37 1213.3 L1289.79 1213.3 L1289.2 1213.3 L1288.61 1213.3 L1288.03 1213.3 L1287.44 1213.3 L1286.86 1213.3 L1286.27 1213.3 L1285.68 1213.3 L1285.1 1213.3 L1284.51 1213.3 L1283.92 1213.3 L1283.34 1213.3 L1282.75 1213.3 L1282.16 1213.3 L1281.58 1213.3 L1280.99 1213.3 L1280.4 1213.3 L1279.82 1213.3 L1279.23 1213.3 L1278.65 1213.3 L1278.06 1213.3 L1277.47 1213.3 L1276.89 1213.3 L1276.3 1213.3 L1275.71 1213.3 L1275.13 1213.3 L1274.54 1213.3 L1273.95 1213.3 L1273.37 1213.3 L1272.78 1213.3 L1272.19 1213.3 L1271.61 1213.3 L1271.02 1213.3 L1270.44 1213.3 L1269.85 1213.3 L1269.26 1213.3 L1268.68 1213.3 L1268.09 1213.3 L1267.5 1213.3 L1266.92 1213.3 L1266.33 1213.3 L1265.74 1213.3 L1265.16 1213.3 L1264.57 1213.3 L1263.98 1213.3 L1263.4 1213.3 L1262.81 1213.3 L1262.23 1213.3 L1261.64 1213.3 L1261.05 1213.3 L1260.47 1213.3 L1259.88 1213.3 L1259.29 1213.3 L1258.71 1213.3 L1258.12 1213.3 L1257.53 1213.3 L1256.95 1213.3 L1256.36 1213.3 L1255.78 1213.3 L1255.19 1213.3 L1254.6 1213.3 L1254.02 1213.3 L1253.43 1213.3 L1252.84 1213.3 L1252.26 1213.3 L1251.67 1213.3 L1251.08 1213.3 L1250.5 1213.3 L1249.91 1213.3 L1249.32 1213.3 L1248.74 1213.3 L1248.15 1213.3 L1247.57 1213.3 L1246.98 1213.3 L1246.39 1213.3 L1245.81 1213.3 L1245.22 1213.3 L1244.63 1213.3 L1244.05 1213.3 L1243.46 1213.3 L1242.87 1213.3 L1242.29 1213.3 L1241.7 1213.3 L1241.11 1213.3 L1240.53 1213.3 L1239.94 1213.3 L1239.36 1213.3 L1238.77 1213.3 L1238.18 1213.3 L1237.6 1213.3 L1237.01 1213.3 L1236.42 1213.3 L1235.84 1213.3 L1235.25 1213.3 L1234.66 1213.3 L1234.08 1213.3 L1233.49 1213.3 L1232.91 1213.3 L1232.32 1213.3 L1231.73 1213.3 L1231.15 1213.3 L1230.56 1213.3 L1229.97 1213.3 L1229.39 1213.3 L1228.8 1213.3 L1228.21 1213.3 L1227.63 1213.3 L1227.04 1213.3 L1226.45 1213.3 L1225.87 1213.3 L1225.28 1213.3 L1224.7 1213.3 L1224.11 1213.3 L1223.52 1213.3 L1222.94 1213.3 L1222.35 1213.3 L1221.76 1213.3 L1221.18 1213.3 L1220.59 1213.3 L1220 1213.3 L1219.42 1213.3 L1218.83 1213.3 L1218.24 1213.3 L1217.66 1213.3 L1217.07 1213.3 L1216.49 1213.3 L1215.9 1213.3 L1215.31 1213.3 L1214.73 1213.3 L1214.14 1213.3 L1213.55 1213.3 L1212.97 1213.3 L1212.38 1213.3 L1211.79 1213.3 L1211.21 1213.3 L1210.62 1213.3 L1210.03 1213.3 L1209.45 1213.3 L1208.86 1213.3 L1208.28 1213.3 L1207.69 1213.3 L1207.1 1213.3 L1206.52 1213.3 L1205.93 1213.3 L1205.34 1213.3 L1204.76 1213.3 L1204.17 1213.3 L1203.58 1213.3 L1203 1213.3 L1202.41 1213.3 L1201.83 1213.3 L1201.24 1213.3 L1200.65 1213.3 L1200.07 1213.3 L1199.48 1213.3 L1198.89 1213.3 L1198.31 1213.3 L1197.72 1213.3 L1197.13 1213.3 L1196.55 1213.3 L1195.96 1213.3 L1195.37 1213.3 L1194.79 1213.3 L1194.2 1213.3 L1193.62 1213.3 L1193.03 1213.3 L1192.44 1213.3 L1191.86 1213.3 L1191.27 1213.3 L1190.68 1213.3 L1190.1 1213.3 L1189.51 1213.3 L1188.92 1213.3 L1188.34 1213.3 L1187.75 1213.3 L1187.16 1213.3 L1186.58 1213.3 L1185.99 1213.3 L1185.41 1213.3 L1184.82 1213.3 L1184.23 1213.3 L1183.65 1213.3 L1183.06 1213.3 L1182.47 1213.3 L1181.89 1213.3 L1181.3 1213.3 L1180.71 1213.3 L1180.13 1213.3 L1179.54 1213.3 L1178.96 1213.3 L1178.37 1213.3 L1177.78 1213.3 L1177.2 1213.3 L1176.61 1213.3 L1176.02 1213.3 L1175.44 1213.3 L1174.85 1213.3 L1174.26 1213.3 L1173.68 1213.3 L1173.09 1213.3 L1172.5 1213.3 L1171.92 1213.3 L1171.33 1213.3 L1170.75 1213.3 L1170.16 1213.3 L1169.57 1213.3 L1168.99 1213.3 L1168.4 1213.3 L1167.81 1213.3 L1167.23 1213.3 L1166.64 1213.3 L1166.05 1213.3 L1165.47 1213.3 L1164.88 1213.3 L1164.29 1213.3 L1163.71 1213.3 L1163.12 1213.3 L1162.54 1213.3 L1161.95 1213.3 L1161.36 1213.3 L1160.78 1213.3 L1160.19 1213.3 L1159.6 1213.3 L1159.02 1213.3 L1158.43 1213.3 L1157.84 1213.3 L1157.26 1213.3 L1156.67 1213.3 L1156.09 1213.3 L1155.5 1213.3 L1154.91 1213.3 L1154.33 1213.3 L1153.74 1213.3 L1153.15 1213.3 L1152.57 1213.3 L1151.98 1213.3 L1151.39 1213.3 L1150.81 1213.3 L1150.22 1213.3 L1149.63 1213.3 L1149.05 1213.3 L1148.46 1213.3 L1147.88 1213.3 L1147.29 1213.3 L1146.7 1213.3 L1146.12 1213.3 L1145.53 1213.3 L1144.94 1213.3 L1144.36 1213.3 L1143.77 1213.3 L1143.18 1213.3 L1142.6 1213.3 L1142.01 1213.3 L1141.42 1213.3 L1140.84 1213.3 L1140.25 1213.3 L1139.67 1213.3 L1139.08 1213.3 L1138.49 1213.3 L1137.91 1213.3 L1137.32 1213.3 L1136.73 1213.3 L1136.15 1213.3 L1135.56 1213.3 L1134.97 1213.3 L1134.39 1213.3 L1133.8 1213.3 L1133.21 1213.3 L1132.63 1213.3 L1132.04 1213.3 L1131.46 1213.3 L1130.87 1213.3 L1130.28 1213.3 L1129.7 1213.3 L1129.11 1213.3 L1128.52 1213.3 L1127.94 1213.3 L1127.35 1213.3 L1126.76 1213.3 L1126.18 1213.3 L1125.59 1213.3 L1125.01 1213.3 L1124.42 1213.3 L1123.83 1213.3 L1123.25 1213.3 L1122.66 1213.3 L1122.07 1213.3 L1121.49 1213.3 L1120.9 1213.3 L1120.31 1213.3 L1119.73 1213.3 L1119.14 1213.3 L1118.55 1213.3 L1117.97 1213.3 L1117.38 1213.3 L1116.8 1213.3 L1116.21 1213.3 L1115.62 1213.3 L1115.04 1213.3 L1114.45 1213.3 L1113.86 1213.3 L1113.28 1213.3 L1112.69 1213.3 L1112.1 1213.3 L1111.52 1213.3 L1110.93 1213.3 L1110.34 1213.3 L1109.76 1213.3 L1109.17 1213.3 L1108.59 1213.3 L1108 1213.3 L1107.41 1213.3 L1106.83 1213.3 L1106.24 1213.3 L1105.65 1213.3 L1105.07 1213.3 L1104.48 1213.3 L1103.89 1213.3 L1103.31 1213.3 L1102.72 1213.3 L1102.14 1213.3 L1101.55 1213.3 L1100.96 1213.3 L1100.38 1213.3 L1099.79 1213.3 L1099.2 1213.3 L1098.62 1213.3 L1098.03 1213.3 L1097.44 1213.3 L1096.86 1213.3 L1096.27 1213.3 L1095.68 1213.3 L1095.1 1213.3 L1094.51 1213.3 L1093.93 1213.3 L1093.34 1213.3 L1092.75 1213.3 L1092.17 1213.3 L1091.58 1213.3 L1090.99 1213.3 L1090.41 1213.3 L1089.82 1213.3 L1089.23 1213.3 L1088.65 1213.3 L1088.06 1213.3 L1087.47 1213.3 L1086.89 1213.3 L1086.3 1213.3 L1085.72 1213.3 L1085.13 1213.3 L1084.54 1213.3 L1083.96 1213.3 L1083.37 1213.3 L1082.78 1213.3 L1082.2 1213.3 L1081.61 1213.3 L1081.02 1213.3 L1080.44 1213.3 L1079.85 1213.3 L1079.26 1213.3 L1078.68 1213.3 L1078.09 1213.3 L1077.51 1213.3 L1076.92 1213.3 L1076.33 1213.3 L1075.75 1213.3 L1075.16 1213.3 L1074.57 1213.3 L1073.99 1213.3 L1073.4 1213.3 L1072.81 1213.3 L1072.23 1213.3 L1071.64 1213.3 L1071.06 1213.3 L1070.47 1213.3 L1069.88 1213.3 L1069.3 1213.3 L1068.71 1213.3 L1068.12 1213.3 L1067.54 1213.3 L1066.95 1213.3 L1066.36 1213.3 L1065.78 1213.3 L1065.19 1213.3 L1064.6 1213.3 L1064.02 1213.3 L1063.43 1213.3 L1062.85 1213.3 L1062.26 1213.3 L1061.67 1213.3 L1061.09 1213.3 L1060.5 1213.3 L1059.91 1213.3 L1059.33 1213.3 L1058.74 1213.3 L1058.15 1213.3 L1057.57 1213.3 L1056.98 1213.3 L1056.39 1213.3 L1055.81 1213.3 L1055.22 1213.3 L1054.64 1213.3 L1054.05 1213.3 L1053.46 1213.3 L1052.88 1213.3 L1052.29 1213.3 L1051.7 1213.3 L1051.12 1213.3 L1050.53 1213.3 L1049.94 1213.3 L1049.36 1213.3 L1048.77 1213.3 L1048.19 1213.3 L1047.6 1213.3 L1047.01 1213.3 L1046.43 1213.3 L1045.84 1213.3 L1045.25 1213.3 L1044.67 1213.3 L1044.08 1213.3 L1043.49 1213.3 L1042.91 1213.3 L1042.32 1213.3 L1041.73 1213.3 L1041.15 1213.3 L1040.56 1213.3 L1039.98 1213.3 L1039.39 1213.3 L1038.8 1213.3 L1038.22 1213.3 L1037.63 1213.3 L1037.04 1213.3 L1036.46 1213.3 L1035.87 1213.3 L1035.28 1213.3 L1034.7 1213.3 L1034.11 1213.3 L1033.52 1213.3 L1032.94 1213.3 L1032.35 1213.3 L1031.77 1213.3 L1031.18 1213.3 L1030.59 1213.3 L1030.01 1213.3 L1029.42 1213.3 L1028.83 1213.3 L1028.25 1213.3 L1027.66 1213.3 L1027.07 1213.3 L1026.49 1213.3 L1025.9 1213.3 L1025.32 1213.3 L1024.73 1213.3 L1024.14 1213.3 L1023.56 1213.3 L1022.97 1213.3 L1022.38 1213.3 L1021.8 1213.3 L1021.21 1213.3 L1020.62 1213.3 L1020.04 1213.3 L1019.45 1213.3 L1018.86 1213.3 L1018.28 1213.3 L1017.69 1213.3 L1017.11 1213.3 L1016.52 1213.3 L1015.93 1213.3 L1015.35 1213.3 L1014.76 1213.3 L1014.17 1213.3 L1013.59 1213.3 L1013 1213.3 L1012.41 1213.3 L1011.83 1213.3 L1011.24 1213.3 L1010.65 1213.3 L1010.07 1213.3 L1009.48 1213.3 L1008.9 1213.3 L1008.31 1213.3 L1007.72 1213.3 L1007.14 1213.3 L1006.55 1213.3 L1005.96 1213.3 L1005.38 1213.3 L1004.79 1213.3 L1004.2 1213.3 L1003.62 1213.3 L1003.03 1213.3 L1002.44 1213.3 L1001.86 1213.3 L1001.27 1213.3 L1000.69 1213.3 L1000.1 1213.3 L999.513 1213.3 L998.926 1213.3 L998.34 1213.3 L997.754 1213.3 L997.167 1213.3 L996.581 1213.3 L995.994 1213.3 L995.408 1213.3 L994.822 1213.3 L994.235 1213.3 L993.649 1213.3 L993.062 1213.3 L992.476 1213.3 L991.889 1213.3 L991.303 1213.3 L990.717 1213.3 L990.13 1213.3 L989.544 1213.3 L988.957 1213.3 L988.371 1213.3 L987.785 1213.3 L987.198 1213.3 L986.612 1213.3 L986.025 1213.3  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.65 986.612,1213.65 987.198,1213.65 987.785,1213.65 988.371,1213.65 988.957,1213.65 989.544,1213.65 990.13,1213.65 990.717,1213.65 991.303,1213.65 991.889,1213.65 992.476,1213.65 993.062,1213.65 993.649,1213.65 994.235,1213.65 994.822,1213.65 995.408,1213.65 995.994,1213.65 996.581,1213.65 997.167,1213.65 997.754,1213.65 998.34,1213.65 998.926,1213.65 999.513,1213.65 1000.1,1213.65 1000.69,1213.65 1001.27,1213.65 1001.86,1213.65 1002.44,1213.65 1003.03,1213.65 1003.62,1213.65 1004.2,1213.65 1004.79,1213.65 1005.38,1213.65 1005.96,1213.65 1006.55,1213.65 1007.14,1213.65 1007.72,1213.65 1008.31,1213.65 1008.9,1213.65 1009.48,1213.65 1010.07,1213.65 1010.65,1213.65 1011.24,1213.65 1011.83,1213.65 1012.41,1213.65 1013,1213.65 1013.59,1213.65 1014.17,1213.65 1014.76,1213.65 1015.35,1213.65 1015.93,1213.65 1016.52,1213.65 1017.11,1213.65 1017.69,1213.65 1018.28,1213.65 1018.86,1213.65 1019.45,1213.65 1020.04,1213.65 1020.62,1213.65 1021.21,1213.65 1021.8,1213.65 1022.38,1213.65 1022.97,1213.65 1023.56,1213.65 1024.14,1213.65 1024.73,1213.65 1025.32,1213.65 1025.9,1213.65 1026.49,1213.65 1027.07,1213.65 1027.66,1213.65 1028.25,1213.65 1028.83,1213.65 1029.42,1213.65 1030.01,1213.65 1030.59,1213.65 1031.18,1213.65 1031.77,1213.65 1032.35,1213.65 1032.94,1213.65 1033.52,1213.65 1034.11,1213.65 1034.7,1213.65 1035.28,1213.65 1035.87,1213.65 1036.46,1213.65 1037.04,1213.65 1037.63,1213.65 1038.22,1213.65 1038.8,1213.65 1039.39,1213.65 1039.98,1213.65 1040.56,1213.65 1041.15,1213.65 1041.73,1213.65 1042.32,1213.65 1042.91,1213.65 1043.49,1213.65 1044.08,1213.65 1044.67,1213.65 1045.25,1213.65 1045.84,1213.65 1046.43,1213.65 1047.01,1213.65 1047.6,1213.65 1048.19,1213.65 1048.77,1213.65 1049.36,1213.65 1049.94,1213.65 1050.53,1213.65 1051.12,1213.65 1051.7,1213.65 1052.29,1213.65 1052.88,1213.65 1053.46,1213.65 1054.05,1213.65 1054.64,1213.65 1055.22,1213.65 1055.81,1213.65 1056.39,1213.65 1056.98,1213.65 1057.57,1213.65 1058.15,1213.65 1058.74,1213.65 1059.33,1213.65 1059.91,1213.65 1060.5,1213.65 1061.09,1213.65 1061.67,1213.65 1062.26,1213.65 1062.85,1213.65 1063.43,1213.65 1064.02,1213.65 1064.6,1213.65 1065.19,1213.65 1065.78,1213.65 1066.36,1213.65 1066.95,1213.65 1067.54,1213.65 1068.12,1213.65 1068.71,1213.65 1069.3,1213.65 1069.88,1213.65 1070.47,1213.65 1071.06,1213.65 1071.64,1213.65 1072.23,1213.65 1072.81,1213.65 1073.4,1213.65 1073.99,1213.65 1074.57,1213.65 1075.16,1213.65 1075.75,1213.65 1076.33,1213.65 1076.92,1213.65 1077.51,1213.65 1078.09,1213.65 1078.68,1213.65 1079.26,1213.65 1079.85,1213.65 1080.44,1213.65 1081.02,1213.65 1081.61,1213.65 1082.2,1213.65 1082.78,1213.65 1083.37,1213.65 1083.96,1213.65 1084.54,1213.65 1085.13,1213.65 1085.72,1213.65 1086.3,1213.65 1086.89,1213.65 1087.47,1213.65 1088.06,1213.65 1088.65,1213.65 1089.23,1213.65 1089.82,1213.65 1090.41,1213.65 1090.99,1213.65 1091.58,1213.65 1092.17,1213.65 1092.75,1213.65 1093.34,1213.65 1093.93,1213.65 1094.51,1213.65 1095.1,1213.65 1095.68,1213.65 1096.27,1213.65 1096.86,1213.65 1097.44,1213.65 1098.03,1213.65 1098.62,1213.65 1099.2,1213.65 1099.79,1213.65 1100.38,1213.65 1100.96,1213.65 1101.55,1213.65 1102.14,1213.65 1102.72,1213.65 1103.31,1213.65 1103.89,1213.65 1104.48,1213.65 1105.07,1213.65 1105.65,1213.65 1106.24,1213.65 1106.83,1213.65 1107.41,1213.65 1108,1213.65 1108.59,1213.65 1109.17,1213.65 1109.76,1213.65 1110.34,1213.65 1110.93,1213.65 1111.52,1213.65 1112.1,1213.65 1112.69,1213.65 1113.28,1213.65 1113.86,1213.65 1114.45,1213.65 1115.04,1213.65 1115.62,1213.65 1116.21,1213.65 1116.8,1213.65 1117.38,1213.65 1117.97,1213.65 1118.55,1213.65 1119.14,1213.65 1119.73,1213.65 1120.31,1213.65 1120.9,1213.65 1121.49,1213.65 1122.07,1213.65 1122.66,1213.65 1123.25,1213.65 1123.83,1213.65 1124.42,1213.65 1125.01,1213.65 1125.59,1213.65 1126.18,1213.65 1126.76,1213.65 1127.35,1213.65 1127.94,1213.65 1128.52,1213.65 1129.11,1213.65 1129.7,1213.65 1130.28,1213.65 1130.87,1213.65 1131.46,1213.65 1132.04,1213.65 1132.63,1213.65 1133.21,1213.65 1133.8,1213.65 1134.39,1213.65 1134.97,1213.65 1135.56,1213.65 1136.15,1213.65 1136.73,1213.65 1137.32,1213.65 1137.91,1213.65 1138.49,1213.65 1139.08,1213.65 1139.67,1213.65 1140.25,1213.65 1140.84,1213.65 1141.42,1213.65 1142.01,1213.65 1142.6,1213.65 1143.18,1213.65 1143.77,1213.65 1144.36,1213.65 1144.94,1213.65 1145.53,1213.65 1146.12,1213.65 1146.7,1213.65 1147.29,1213.65 1147.88,1213.65 1148.46,1213.65 1149.05,1213.65 1149.63,1213.65 1150.22,1213.65 1150.81,1213.65 1151.39,1213.65 1151.98,1213.65 1152.57,1213.65 1153.15,1213.65 1153.74,1213.65 1154.33,1213.65 1154.91,1213.65 1155.5,1213.65 1156.09,1213.65 1156.67,1213.65 1157.26,1213.65 1157.84,1213.65 1158.43,1213.65 1159.02,1213.65 1159.6,1213.65 1160.19,1213.65 1160.78,1213.65 1161.36,1213.65 1161.95,1213.65 1162.54,1213.65 1163.12,1213.65 1163.71,1213.65 1164.29,1213.65 1164.88,1213.65 1165.47,1213.65 1166.05,1213.65 1166.64,1213.65 1167.23,1213.65 1167.81,1213.65 1168.4,1213.65 1168.99,1213.65 1169.57,1213.65 1170.16,1213.65 1170.75,1213.65 1171.33,1213.65 1171.92,1213.65 1172.5,1213.65 1173.09,1213.65 1173.68,1213.65 1174.26,1213.65 1174.85,1213.65 1175.44,1213.65 1176.02,1213.65 1176.61,1213.65 1177.2,1213.65 1177.78,1213.65 1178.37,1213.65 1178.96,1213.65 1179.54,1213.65 1180.13,1213.65 1180.71,1213.65 1181.3,1213.65 1181.89,1213.65 1182.47,1213.65 1183.06,1213.65 1183.65,1213.65 1184.23,1213.65 1184.82,1213.65 1185.41,1213.65 1185.99,1213.65 1186.58,1213.65 1187.16,1213.65 1187.75,1213.65 1188.34,1213.65 1188.92,1213.65 1189.51,1213.65 1190.1,1213.65 1190.68,1213.65 1191.27,1213.65 1191.86,1213.65 1192.44,1213.65 1193.03,1213.65 1193.62,1213.65 1194.2,1213.65 1194.79,1213.65 1195.37,1213.65 1195.96,1213.65 1196.55,1213.65 1197.13,1213.65 1197.72,1213.65 1198.31,1213.65 1198.89,1213.65 1199.48,1213.65 1200.07,1213.65 1200.65,1213.65 1201.24,1213.65 1201.83,1213.65 1202.41,1213.65 1203,1213.65 1203.58,1213.65 1204.17,1213.65 1204.76,1213.65 1205.34,1213.65 1205.93,1213.65 1206.52,1213.65 1207.1,1213.65 1207.69,1213.65 1208.28,1213.65 1208.86,1213.65 1209.45,1213.65 1210.03,1213.65 1210.62,1213.65 1211.21,1213.65 1211.79,1213.65 1212.38,1213.65 1212.97,1213.65 1213.55,1213.65 1214.14,1213.65 1214.73,1213.65 1215.31,1213.65 1215.9,1213.65 1216.49,1213.65 1217.07,1213.65 1217.66,1213.65 1218.24,1213.65 1218.83,1213.65 1219.42,1213.65 1220,1213.65 1220.59,1213.65 1221.18,1213.65 1221.76,1213.65 1222.35,1213.65 1222.94,1213.65 1223.52,1213.65 1224.11,1213.65 1224.7,1213.65 1225.28,1213.65 1225.87,1213.65 1226.45,1213.65 1227.04,1213.65 1227.63,1213.65 1228.21,1213.65 1228.8,1213.65 1229.39,1213.65 1229.97,1213.65 1230.56,1213.65 1231.15,1213.65 1231.73,1213.65 1232.32,1213.65 1232.91,1213.65 1233.49,1213.65 1234.08,1213.65 1234.66,1213.65 1235.25,1213.65 1235.84,1213.65 1236.42,1213.65 1237.01,1213.65 1237.6,1213.65 1238.18,1213.65 1238.77,1213.65 1239.36,1213.65 1239.94,1213.65 1240.53,1213.65 1241.11,1213.65 1241.7,1213.65 1242.29,1213.65 1242.87,1213.65 1243.46,1213.65 1244.05,1213.65 1244.63,1213.65 1245.22,1213.65 1245.81,1213.65 1246.39,1213.65 1246.98,1213.65 1247.57,1213.65 1248.15,1213.65 1248.74,1213.65 1249.32,1213.65 1249.91,1213.65 1250.5,1213.65 1251.08,1213.65 1251.67,1213.65 1252.26,1213.65 1252.84,1213.65 1253.43,1213.65 1254.02,1213.65 1254.6,1213.65 1255.19,1213.65 1255.78,1213.65 1256.36,1213.65 1256.95,1213.65 1257.53,1213.65 1258.12,1213.65 1258.71,1213.65 1259.29,1213.65 1259.88,1213.65 1260.47,1213.65 1261.05,1213.65 1261.64,1213.65 1262.23,1213.65 1262.81,1213.65 1263.4,1213.65 1263.98,1213.65 1264.57,1213.65 1265.16,1213.65 1265.74,1213.65 1266.33,1213.65 1266.92,1213.65 1267.5,1213.65 1268.09,1213.65 1268.68,1213.65 1269.26,1213.65 1269.85,1213.65 1270.44,1213.65 1271.02,1213.65 1271.61,1213.65 1272.19,1213.65 1272.78,1213.65 1273.37,1213.65 1273.95,1213.65 1274.54,1213.65 1275.13,1213.65 1275.71,1213.65 1276.3,1213.65 1276.89,1213.65 1277.47,1213.65 1278.06,1213.65 1278.65,1213.65 1279.23,1213.65 1279.82,1213.65 1280.4,1213.65 1280.99,1213.65 1281.58,1213.65 1282.16,1213.65 1282.75,1213.65 1283.34,1213.65 1283.92,1213.65 1284.51,1213.65 1285.1,1213.65 1285.68,1213.65 1286.27,1213.65 1286.86,1213.65 1287.44,1213.65 1288.03,1213.65 1288.61,1213.65 1289.2,1213.65 1289.79,1213.65 1290.37,1213.65 1290.96,1213.65 1291.55,1213.65 1292.13,1213.65 1292.72,1213.65 1293.31,1213.65 1293.89,1213.65 1294.48,1213.65 1295.06,1213.65 1295.65,1213.65 1296.24,1213.65 1296.82,1213.65 1297.41,1213.65 1298,1213.65 1298.58,1213.65 1299.17,1213.65 1299.76,1213.65 1300.34,1213.65 1300.93,1213.65 1301.52,1213.65 1302.1,1213.65 1302.69,1213.65 1303.27,1213.65 1303.86,1213.65 1304.45,1213.65 1305.03,1213.65 1305.62,1213.65 1306.21,1213.65 1306.79,1213.65 1307.38,1213.65 1307.97,1213.65 1308.55,1213.65 1309.14,1213.65 1309.73,1213.65 1310.31,1213.65 1310.9,1213.65 1311.48,1213.65 1312.07,1213.65 1312.66,1213.65 1313.24,1213.65 1313.83,1213.65 1314.42,1213.65 1315,1213.65 1315.59,1213.65 1316.18,1213.65 1316.76,1213.65 1317.35,1213.65 1317.93,1213.65 1318.52,1213.65 1319.11,1213.65 1319.69,1213.65 1320.28,1213.65 1320.87,1213.65 1321.45,1213.65 1322.04,1213.65 1322.63,1213.65 1323.21,1213.65 1323.8,1213.65 1324.39,1213.65 1324.97,1213.65 1325.56,1213.65 1326.14,1213.65 1326.73,1213.65 1327.32,1213.65 1327.9,1213.65 1328.49,1213.65 1329.08,1213.65 1329.66,1213.65 1330.25,1213.65 1330.84,1213.65 1331.42,1213.65 1332.01,1213.65 1332.6,1213.65 1333.18,1213.65 1333.77,1213.65 1334.35,1213.65 1334.94,1213.65 1335.53,1213.65 1336.11,1213.65 1336.7,1213.65 1337.29,1213.65 1337.87,1213.65 1338.46,1213.65 1339.05,1213.65 1339.63,1213.65 1340.22,1213.65 1340.8,1213.65 1341.39,1213.65 1341.98,1213.65 1342.56,1213.65 1343.15,1213.65 1343.74,1213.65 1344.32,1213.65 1344.91,1213.65 1345.5,1213.65 1346.08,1213.65 1346.67,1213.65 1347.26,1213.65 1347.84,1213.65 1348.43,1213.65 1349.01,1213.65 1349.6,1213.65 1350.19,1213.65 1350.77,1213.65 1351.36,1213.65 1351.95,1213.65 1352.53,1213.65 1353.12,1213.65 1353.71,1213.65 1354.29,1213.65 1354.88,1213.65 1355.47,1213.65 1356.05,1213.65 1356.64,1213.65 1357.22,1213.65 1357.81,1213.65 1358.4,1213.65 1358.98,1213.65 1359.57,1213.65 1360.16,1213.65 1360.74,1213.65 1361.33,1213.65 1361.92,1213.65 1362.5,1213.65 1363.09,1213.65 1363.68,1213.65 1364.26,1213.65 1364.85,1213.65 1365.43,1213.65 1366.02,1213.65 1366.61,1213.65 1367.19,1213.65 1367.78,1213.65 1368.37,1213.65 1368.95,1213.65 1369.54,1213.65 1370.13,1213.65 1370.71,1213.65 1371.3,1213.65 1371.88,1213.65 1372.47,1213.65 1373.06,1213.65 1373.64,1213.65 1374.23,1213.65 1374.82,1213.65 1375.4,1213.65 1375.99,1213.65 1376.58,1213.65 1377.16,1213.65 1377.75,1213.65 1378.34,1213.65 1378.92,1213.65 1379.51,1213.65 1380.09,1213.65 1380.68,1213.65 1381.27,1213.65 1381.85,1213.65 1382.44,1213.65 1383.03,1213.65 1383.61,1213.65 1384.2,1213.65 1384.79,1213.65 1385.37,1213.65 1385.96,1213.65 1386.55,1213.65 1387.13,1213.65 1387.72,1213.65 1388.3,1213.65 1388.89,1213.65 1389.48,1213.65 1390.06,1213.65 1390.65,1213.65 1391.24,1213.65 1391.82,1213.65 1392.41,1213.65 1393,1213.65 1393.58,1213.65 1394.17,1213.65 1394.75,1213.65 1395.34,1213.65 1395.93,1213.65 1396.51,1213.65 1397.1,1213.65 1397.69,1213.65 1398.27,1213.65 1398.86,1213.65 1399.45,1213.65 1400.03,1213.65 1400.62,1213.65 1401.21,1213.65 1401.79,1213.65 1402.38,1213.65 1402.96,1213.65 1403.55,1213.65 1404.14,1213.65 1404.72,1213.65 1405.31,1213.65 1405.9,1213.65 1406.48,1213.65 1407.07,1213.65 1407.66,1213.65 1408.24,1213.65 1408.83,1213.65 1409.42,1213.65 1410,1213.65 1410.59,1213.65 1411.17,1213.65 1411.76,1213.65 1412.35,1213.65 1412.93,1213.65 1413.52,1213.65 1414.11,1213.65 1414.69,1213.65 1415.28,1213.65 1415.87,1213.65 1416.45,1213.65 1417.04,1213.65 1417.63,1213.65 1418.21,1213.65 1418.8,1213.65 1419.38,1213.65 1419.97,1213.65 1420.56,1213.65 1421.14,1213.65 1421.73,1213.65 1422.32,1213.65 1422.9,1213.65 1423.49,1213.65 1424.08,1213.65 1424.66,1213.65 1425.25,1213.65 1425.83,1213.65 1426.42,1213.65 1427.01,1213.65 1427.59,1213.65 1428.18,1213.65 1428.77,1213.65 1429.35,1213.65 1429.94,1213.65 1430.53,1213.65 1431.11,1213.65 1431.7,1213.65 1432.29,1213.65 1432.87,1213.65 1433.46,1213.65 1434.04,1213.65 1434.63,1213.65 1435.22,1213.65 1435.8,1213.65 1436.39,1213.65 1436.98,1213.65 1437.56,1213.65 1438.15,1213.65 1438.74,1213.65 1439.32,1213.65 1439.91,1213.65 1440.5,1213.65 1441.08,1213.65 1441.67,1213.65 1442.25,1213.65 1442.84,1213.65 1443.43,1213.65 1444.01,1213.65 1444.6,1213.65 1445.19,1213.65 1445.77,1213.65 1446.36,1213.65 1446.95,1213.65 1447.53,1213.65 1448.12,1213.65 1448.7,1213.65 1449.29,1213.65 1449.88,1213.65 1450.46,1213.65 1451.05,1213.65 1451.64,1213.65 1452.22,1213.65 1452.81,1213.65 1453.4,1213.65 1453.98,1213.65 1454.57,1213.65 1455.16,1213.65 1455.74,1213.65 1456.33,1213.65 1456.91,1213.65 1457.5,1213.65 1458.09,1213.65 1458.67,1213.65 1459.26,1213.65 1459.85,1213.65 1460.43,1213.65 1461.02,1213.65 1461.61,1213.65 1462.19,1213.65 1462.78,1213.65 1463.37,1213.65 1463.95,1213.65 1464.54,1213.65 1465.12,1213.65 1465.71,1213.65 1466.3,1213.65 1466.88,1213.65 1467.47,1213.65 1468.06,1213.65 1468.64,1213.65 1469.23,1213.65 1469.82,1213.65 1470.4,1213.65 1470.99,1213.65 1471.57,1213.65 1472.16,1213.65 1472.75,1213.65 1473.33,1213.65 1473.92,1213.65 1474.51,1213.65 1475.09,1213.65 1475.68,1213.65 1476.27,1213.65 1476.85,1213.65 1477.44,1213.65 1478.03,1213.65 1478.61,1213.65 1479.2,1213.65 1479.78,1213.65 1480.37,1213.65 1480.96,1213.65 1481.54,1213.65 1482.13,1213.65 1482.72,1213.65 1483.3,1213.65 1483.89,1213.65 1484.48,1213.65 1485.06,1213.65 1485.65,1213.65 1486.24,1213.65 1486.82,1213.65 1487.41,1213.65 1487.99,1213.65 1488.58,1213.65 1489.17,1213.65 1489.75,1213.65 1490.34,1213.65 1490.93,1213.65 1491.51,1213.65 1492.1,1213.65 1492.69,1213.65 1493.27,1213.65 1493.86,1213.65 1494.45,1213.65 1495.03,1213.65 1495.62,1213.65 1496.2,1213.65 1496.79,1213.65 1497.38,1213.65 1497.96,1213.65 1498.55,1213.65 1499.14,1213.65 1499.72,1213.65 1500.31,1213.65 1500.9,1213.65 1501.48,1213.65 1502.07,1213.65 1502.65,1213.65 1503.24,1213.65 1503.83,1213.65 1504.41,1213.65 1505,1213.65 1505.59,1213.65 1506.17,1213.65 1506.76,1213.65 1507.35,1213.65 1507.93,1213.65 1508.52,1213.65 1509.11,1213.65 1509.69,1213.65 1510.28,1213.65 1510.86,1213.65 1511.45,1213.65 1512.04,1213.65 1512.62,1213.65 1513.21,1213.65 1513.8,1213.65 1514.38,1213.65 1514.97,1213.65 1515.56,1213.65 1516.14,1213.65 1516.73,1213.65 1517.32,1213.65 1517.9,1213.65 1518.49,1213.65 1519.07,1213.65 1519.66,1213.65 1520.25,1213.65 1520.83,1213.65 1521.42,1213.65 1522.01,1213.65 1522.59,1213.65 1523.18,1213.65 1523.77,1213.65 1524.35,1213.65 1524.94,1213.65 1525.52,1213.65 1526.11,1213.65 1526.7,1213.65 1527.28,1213.65 1527.87,1213.65 1528.46,1213.65 1529.04,1213.65 1529.63,1213.65 1530.22,1213.65 1530.8,1213.65 1531.39,1213.65 1531.98,1213.65 1532.56,1213.65 1533.15,1213.65 1533.73,1213.65 1534.32,1213.65 1534.91,1213.65 1535.49,1213.65 1536.08,1213.65 1536.67,1213.65 1537.25,1213.65 1537.84,1213.65 1538.43,1213.65 1539.01,1213.65 1539.6,1213.65 1540.19,1213.65 1540.77,1213.65 1541.36,1213.65 1541.94,1213.65 1542.53,1213.65 1543.12,1213.65 1543.7,1213.65 1544.29,1213.65 1544.88,1213.65 1545.46,1213.65 1546.05,1213.65 1546.64,1213.65 1547.22,1213.65 1547.81,1213.65 1548.4,1213.65 1548.98,1213.65 1549.57,1213.65 1550.15,1213.65 1550.74,1213.65 1551.33,1213.65 1551.91,1213.65 1552.5,1213.65 1553.09,1213.65 1553.67,1213.65 1554.26,1213.65 1554.85,1213.65 1555.43,1213.65 1556.02,1213.65 1556.6,1213.65 1557.19,1213.65 1557.78,1213.65 1558.36,1213.65 1558.95,1213.65 1559.54,1213.65 1560.12,1213.65 1560.71,1213.65 1561.3,1213.65 1561.88,1213.65 1562.47,1213.65 1563.06,1213.65 1563.64,1213.65 1564.23,1213.65 1564.81,1213.65 1565.4,1213.65 1565.99,1213.65 1566.57,1213.65 1567.16,1213.65 1567.75,1213.65 1568.33,1213.65 1568.92,1213.65 1569.51,1213.65 1570.09,1213.65 1570.68,1213.65 1571.27,1213.65 1571.85,1213.65 1572.44,1213.65 1573.02,1213.65 1573.61,1213.65 1574.2,1213.65 1574.78,1213.65 1575.37,1213.65 1575.96,1213.65 1576.54,1213.65 1577.13,1213.65 1577.72,1213.65 1578.3,1213.65 1578.89,1213.65 1579.47,1213.65 1580.06,1213.65 1580.65,1213.65 1581.23,1213.65 1581.82,1213.65 1582.41,1213.65 1582.99,1213.65 1583.58,1213.65 1584.17,1213.65 1584.75,1213.65 1585.34,1213.65 1585.93,1213.65 1586.51,1213.65 1587.1,1213.65 1587.68,1213.65 1588.27,1213.65 1588.86,1213.65 1589.44,1213.65 1590.03,1213.65 1590.62,1213.65 1591.2,1213.65 1591.79,1213.65 1592.38,1213.65 1592.96,1213.65 1593.55,1213.65 1594.14,1213.65 1594.72,1213.65 1595.31,1213.65 1595.89,1213.65 1596.48,1213.65 1597.07,1213.65 1597.65,1213.65 1598.24,1213.65 1598.83,1213.65 1599.41,1213.65 1600,1213.65 1600.59,1213.65 1601.17,1213.65 1601.76,1213.65 1602.34,1213.65 1602.93,1213.65 1603.52,1213.65 1604.1,1213.65 1604.69,1213.65 1605.28,1213.65 1605.86,1213.65 1606.45,1213.65 1607.04,1213.65 1607.62,1213.65 1608.21,1213.65 1608.8,1213.65 1609.38,1213.65 1609.97,1213.65 1610.55,1213.65 1611.14,1213.65 1611.73,1213.65 1612.31,1213.65 1612.9,1213.65 1613.49,1213.65 1614.07,1213.65 1614.66,1213.65 1615.25,1213.65 1615.83,1213.65 1616.42,1213.65 1617.01,1213.65 1617.59,1213.65 1618.18,1213.65 1618.76,1213.65 1619.35,1213.65 1619.94,1213.65 1620.52,1213.65 1621.11,1213.65 1621.7,1213.65 1622.28,1213.65 1622.87,1213.65 1623.46,1213.65 1624.04,1213.65 1624.63,1213.65 1625.22,1213.65 1625.8,1213.65 1626.39,1213.65 1626.97,1213.65 1627.56,1213.65 1628.15,1213.65 1628.73,1213.65 1629.32,1213.65 1629.91,1213.65 1630.49,1213.65 1631.08,1213.65 1631.67,1213.65 1632.25,1213.65 1632.84,1213.65 1633.42,1213.65 1634.01,1213.65 1634.6,1213.65 1635.18,1213.65 1635.77,1213.65 1636.36,1213.65 1636.94,1213.65 1637.53,1213.65 1638.12,1213.65 1638.7,1213.65 1639.29,1213.65 1639.88,1213.65 1640.46,1213.65 1641.05,1213.65 1641.63,1213.65 1642.22,1213.65 1642.81,1213.65 1643.39,1213.65 1643.98,1213.65 1644.57,1213.65 1645.15,1213.65 1645.74,1213.65 1646.33,1213.65 1646.91,1213.65 1647.5,1213.65 1648.09,1213.65 1648.67,1213.65 1649.26,1213.65 1649.84,1213.65 1650.43,1213.65 1651.02,1213.65 1651.6,1213.65 1652.19,1213.65 1652.78,1213.65 1653.36,1213.65 1653.95,1213.65 1654.54,1213.65 1655.12,1213.65 1655.71,1213.65 1656.29,1213.65 1656.88,1213.65 1657.47,1213.65 1658.05,1213.65 1658.64,1213.65 1659.23,1213.65 1659.81,1213.65 1660.4,1213.65 1660.99,1213.65 1661.57,1213.65 1662.16,1213.65 1662.75,1213.65 1663.33,1213.65 1663.92,1213.65 1664.5,1213.65 1665.09,1213.65 1665.68,1213.65 1666.26,1213.65 1666.85,1213.65 1667.44,1213.65 1668.02,1213.65 1668.61,1213.65 1669.2,1213.65 1669.78,1213.65 1670.37,1213.65 1670.96,1213.65 1671.54,1213.65 1672.13,1213.65 1672.71,1213.65 1673.3,1213.65 1673.89,1213.65 1674.47,1213.65 1675.06,1213.65 1675.65,1213.65 1676.23,1213.65 1676.82,1213.65 1677.41,1213.65 1677.99,1213.65 1678.58,1213.65 1679.17,1213.65 1679.75,1213.65 1680.34,1213.65 1680.92,1213.65 1681.51,1213.65 1682.1,1213.65 1682.68,1213.65 1683.27,1213.65 1683.86,1213.65 1684.44,1213.65 1685.03,1213.65 1685.62,1213.65 1686.2,1213.65 1686.79,1213.65 1687.37,1213.65 1687.96,1213.65 1688.55,1213.65 1689.13,1213.65 1689.72,1213.65 1690.31,1213.65 1690.89,1213.65 1691.48,1213.65 1692.07,1213.65 1692.65,1213.65 1693.24,1213.65 1693.83,1213.65 1694.41,1213.65 1695,1213.65 1695.58,1213.65 1696.17,1213.65 1696.76,1213.65 1697.34,1213.65 1697.93,1213.65 1698.52,1213.65 1699.1,1213.65 1699.69,1213.65 1700.28,1213.65 1700.86,1213.65 1701.45,1213.65 1702.04,1213.65 1702.62,1213.65 1703.21,1213.65 1703.79,1213.65 1704.38,1213.65 1704.97,1213.65 1705.55,1213.65 1706.14,1213.65 1706.73,1213.65 1707.31,1213.65 1707.9,1213.65 1708.49,1213.65 1709.07,1213.65 1709.66,1213.65 1710.24,1213.65 1710.83,1213.65 1711.42,1213.65 1712,1213.65 1712.59,1213.65 1713.18,1213.65 1713.76,1213.65 1714.35,1213.65 1714.94,1213.65 1715.52,1213.65 1716.11,1213.65 1716.7,1213.65 1717.28,1213.65 1717.87,1213.65 1718.45,1213.65 1719.04,1213.65 1719.63,1213.65 1720.21,1213.65 1720.8,1213.65 1721.39,1213.65 1721.97,1213.65 1722.56,1213.65 1723.15,1213.65 1723.73,1213.65 1724.32,1213.65 1724.91,1213.65 1725.49,1213.65 1726.08,1213.65 1726.66,1213.65 1727.25,1213.65 1727.84,1213.65 1728.42,1213.65 1729.01,1213.65 1729.6,1213.65 1730.18,1213.65 1730.77,1213.65 1731.36,1213.65 1731.94,1213.65 1732.53,1213.65 1733.11,1213.65 1733.7,1213.65 1734.29,1213.65 1734.87,1213.65 1735.46,1213.65 1736.05,1213.65 1736.63,1213.65 1737.22,1213.65 1737.81,1213.65 1738.39,1213.65 1738.98,1213.65 1739.57,1213.65 1740.15,1213.65 1740.74,1213.65 1741.32,1213.65 1741.91,1213.65 1742.5,1213.65 1743.08,1213.65 1743.67,1213.65 1744.26,1213.65 1744.84,1213.65 1745.43,1213.65 1746.02,1213.65 1746.6,1213.65 1747.19,1213.65 1747.78,1213.65 1748.36,1213.65 1748.95,1213.65 1749.53,1213.65 1750.12,1213.65 1750.71,1213.65 1751.29,1213.65 1751.88,1213.65 1752.47,1213.65 1753.05,1213.65 1753.64,1213.65 1754.23,1213.65 1754.81,1213.65 1755.4,1213.65 1755.99,1213.65 1756.57,1213.65 1757.16,1213.65 1757.74,1213.65 1758.33,1213.65 1758.92,1213.65 1759.5,1213.65 1760.09,1213.65 1760.68,1213.65 1761.26,1213.65 1761.85,1213.65 1762.44,1213.65 1763.02,1213.65 1763.61,1213.65 1764.19,1213.65 1764.78,1213.65 1765.37,1213.65 1765.95,1213.65 1766.54,1213.65 1767.13,1213.65 1767.71,1213.65 1768.3,1213.65 1768.89,1213.65 1769.47,1213.65 1770.06,1213.65 1770.65,1213.65 1771.23,1213.65 1771.82,1213.65 1772.4,1213.65 1772.99,1213.65 1773.58,1213.65 1774.16,1213.65 1774.75,1213.65 1775.34,1213.65 1775.92,1213.65 1776.51,1213.65 1777.1,1213.65 1777.68,1213.65 1778.27,1213.65 1778.86,1213.65 1779.44,1213.65 1780.03,1213.65 1780.61,1213.65 1781.2,1213.65 1781.79,1213.65 1782.37,1213.65 1782.96,1213.65 1783.55,1213.65 1784.13,1213.65 1784.72,1213.65 1785.31,1213.65 1785.89,1213.65 1786.48,1213.65 1787.06,1213.65 1787.65,1213.65 1788.24,1213.65 1788.82,1213.65 1789.41,1213.65 1790,1213.65 1790.58,1213.65 1791.17,1213.65 1791.76,1213.65 1792.34,1213.65 1792.93,1213.65 1793.52,1213.65 1794.1,1213.65 1794.69,1213.65 1795.27,1213.65 1795.86,1213.65 1796.45,1213.65 1797.03,1213.65 1797.62,1213.65 1798.21,1213.65 1798.79,1213.65 1799.38,1213.65 1799.97,1213.65 1800.55,1213.65 1801.14,1213.65 1801.73,1213.65 1802.31,1213.65 1802.9,1213.65 1803.48,1213.65 1804.07,1213.65 1804.66,1213.65 1805.24,1213.65 1805.83,1213.65 1806.42,1213.65 1807,1213.65 1807.59,1213.65 1808.18,1213.65 1808.76,1213.65 1809.35,1213.65 1809.94,1213.65 1810.52,1213.65 1811.11,1213.65 1811.69,1213.65 1812.28,1213.65 1812.87,1213.65 1813.45,1213.65 1814.04,1213.65 1814.63,1213.65 1815.21,1213.65 1815.8,1213.65 1816.39,1213.65 1816.97,1213.65 1817.56,1213.65 1818.14,1213.65 1818.73,1213.65 1819.32,1213.65 1819.9,1213.65 1820.49,1213.65 1821.08,1213.65 1821.66,1213.65 1822.25,1213.65 1822.84,1213.65 1823.42,1213.65 1824.01,1213.65 1824.6,1213.65 1825.18,1213.65 1825.77,1213.65 1826.35,1213.65 1826.94,1213.65 1827.53,1213.65 1828.11,1213.65 1828.7,1213.65 1829.29,1213.65 1829.87,1213.65 1830.46,1213.65 1831.05,1213.65 1831.63,1213.65 1832.22,1213.65 1832.81,1213.65 1833.39,1213.65 1833.98,1213.65 1834.56,1213.65 1835.15,1213.65 1835.74,1213.65 1836.32,1213.65 1836.91,1213.65 1837.5,1213.65 1838.08,1213.65 1838.67,1213.65 1839.26,1213.65 1839.84,1213.65 1840.43,1213.65 1841.01,1213.65 1841.6,1213.65 1842.19,1213.65 1842.77,1213.65 1843.36,1213.65 1843.95,1213.65 1844.53,1213.65 1845.12,1213.65 1845.71,1213.65 1846.29,1213.65 1846.88,1213.65 1847.47,1213.65 1848.05,1213.65 1848.64,1213.65 1849.22,1213.65 1849.81,1213.65 1850.4,1213.65 1850.98,1213.65 1851.57,1213.65 1852.16,1213.65 1852.74,1213.65 1853.33,1213.65 1853.92,1213.65 1854.5,1213.65 1855.09,1213.65 1855.68,1213.65 1856.26,1213.65 1856.85,1213.65 1857.43,1213.65 1858.02,1213.65 1858.61,1213.65 1859.19,1213.65 1859.78,1213.65 1860.37,1213.65 1860.95,1213.65 1861.54,1213.65 1862.13,1213.65 1862.71,1213.65 1863.3,1213.65 1863.88,1213.65 1864.47,1213.65 1865.06,1213.65 1865.64,1213.65 1866.23,1213.65 1866.82,1213.65 1867.4,1213.65 1867.99,1213.65 1868.58,1213.65 1869.16,1213.65 1869.75,1213.65 1870.34,1213.65 1870.92,1213.65 1871.51,1213.65 1872.09,1213.65 1872.68,1213.65 1873.27,1213.65 1873.85,1213.65 1874.44,1213.65 1875.03,1213.65 1875.61,1213.65 1876.2,1213.65 1876.79,1213.65 1877.37,1213.65 1877.96,1213.65 1878.55,1213.65 1879.13,1213.65 1879.72,1213.65 1880.3,1213.65 1880.89,1213.65 1881.48,1213.65 1882.06,1213.65 1882.65,1213.65 1883.24,1213.65 1883.82,1213.65 1884.41,1213.65 1885,1213.65 1885.58,1213.65 1886.17,1213.65 1886.76,1213.65 1887.34,1213.65 1887.93,1213.65 1888.51,1213.65 1889.1,1213.65 1889.69,1213.65 1890.27,1213.65 1890.86,1213.65 1891.45,1213.65 1892.03,1213.65 1892.62,1213.65 1893.21,1213.65 1893.79,1213.65 1894.38,1213.65 1894.96,1213.65 1895.55,1213.65 1896.14,1213.65 1896.72,1213.65 1897.31,1213.65 1897.9,1213.65 1898.48,1213.65 1899.07,1213.65 1899.66,1213.65 1900.24,1213.65 1900.83,1213.65 1901.42,1213.65 1902,1213.65 1902.59,1213.65 1903.17,1213.65 1903.76,1213.65 1904.35,1213.65 1904.93,1213.65 1905.52,1213.65 1906.11,1213.65 1906.69,1213.65 1907.28,1213.65 1907.87,1213.65 1908.45,1213.65 1909.04,1213.65 1909.63,1213.65 1910.21,1213.65 1910.8,1213.65 1911.38,1213.65 1911.97,1213.65 1912.56,1213.65 1913.14,1213.65 1913.73,1213.65 1914.32,1213.65 1914.9,1213.65 1915.49,1213.65 1916.08,1213.65 1916.66,1213.65 1917.25,1213.65 1917.83,1213.65 1918.42,1213.65 1919.01,1213.65 1919.59,1213.65 1920.18,1213.65 1920.77,1213.65 1921.35,1213.65 1921.94,1213.65 1922.53,1213.65 1923.11,1213.65 1923.7,1213.65 1924.29,1213.65 1924.87,1213.65 1925.46,1213.65 1926.04,1213.65 1926.63,1213.65 1927.22,1213.65 1927.8,1213.65 1928.39,1213.65 1928.98,1213.65 1929.56,1213.65 1930.15,1213.65 1930.74,1213.65 1931.32,1213.65 1931.91,1213.65 1932.5,1213.65 1933.08,1213.65 1933.67,1213.65 1934.25,1213.65 1934.84,1213.65 1935.43,1213.65 1936.01,1213.65 1936.6,1213.65 1937.19,1213.65 1937.77,1213.65 1938.36,1213.65 1938.95,1213.65 1939.53,1213.65 1940.12,1213.65 1940.71,1213.65 1941.29,1213.65 1941.88,1213.65 1942.46,1213.65 1943.05,1213.65 1943.64,1213.65 1944.22,1213.65 1944.81,1213.65 1945.4,1213.65 1945.98,1213.65 1946.57,1213.65 1947.16,1213.65 1947.74,1213.65 1948.33,1213.65 1948.91,1213.65 1949.5,1213.65 1950.09,1213.65 1950.67,1213.65 1951.26,1213.65 1951.85,1213.65 1952.43,1213.65 1953.02,1213.65 1953.61,1213.65 1954.19,1213.65 1954.78,1213.65 1955.37,1213.65 1955.95,1213.65 1956.54,1213.65 1957.12,1213.65 1957.71,1213.65 1958.3,1213.65 1958.88,1213.65 1959.47,1213.65 1960.06,1213.65 1960.64,1213.65 1961.23,1213.65 1961.82,1213.65 1962.4,1213.65 1962.99,1213.65 1963.58,1213.65 1964.16,1213.65 1964.75,1213.65 1965.33,1213.65 1965.92,1213.65 1966.51,1213.65 1967.09,1213.65 1967.68,1213.65 1968.27,1213.65 1968.85,1213.65 1969.44,1213.65 1970.03,1213.65 1970.61,1213.65 1971.2,1213.65 1971.78,1213.65 1972.37,1213.65 1972.96,1213.65 1973.54,1213.65 1974.13,1213.65 1974.72,1213.65 1975.3,1213.65 1975.89,1213.65 1976.48,1213.65 1977.06,1213.65 1977.65,1213.65 1978.24,1213.65 1978.82,1213.65 1979.41,1213.65 1979.99,1213.65 1980.58,1213.65 1981.17,1213.65 1981.75,1213.65 1982.34,1213.65 1982.93,1213.65 1983.51,1213.65 1984.1,1213.65 1984.69,1213.65 1985.27,1213.65 1985.86,1213.65 1986.45,1213.65 1987.03,1213.65 1987.62,1213.65 1988.2,1213.65 1988.79,1213.65 1989.38,1213.65 1989.96,1213.65 1990.55,1213.65 1991.14,1213.65 1991.72,1213.65 1992.31,1213.65 1992.9,1213.65 1993.48,1213.65 1994.07,1213.65 1994.65,1213.65 1995.24,1213.65 1995.83,1213.65 1996.41,1213.65 1997,1213.65 1997.59,1213.65 1998.17,1213.65 1998.76,1213.65 1999.35,1213.65 1999.93,1213.65 2000.52,1213.65 2001.11,1213.65 2001.69,1213.65 2002.28,1213.65 2002.86,1213.65 2003.45,1213.65 2004.04,1213.65 2004.62,1213.65 2005.21,1213.65 2005.8,1213.65 2006.38,1213.65 2006.97,1213.65 2007.56,1213.65 2008.14,1213.65 2008.73,1213.65 2009.32,1213.65 2009.9,1213.65 2010.49,1213.65 2011.07,1213.65 2011.66,1213.65 2012.25,1213.65 2012.83,1213.65 2013.42,1213.65 2014.01,1213.65 2014.59,1213.65 2015.18,1213.65 2015.77,1213.65 2016.35,1213.65 2016.94,1213.65 2017.53,1213.65 2018.11,1213.65 2018.7,1213.65 2019.28,1213.65 2019.87,1213.65 2020.46,1213.65 2021.04,1213.65 2021.63,1213.65 2022.22,1213.65 2022.8,1213.65 2023.39,1213.65 2023.98,1213.65 2024.56,1213.65 2025.15,1213.65 2025.73,1213.65 2026.32,1213.65 2026.91,1213.65 2027.49,1213.65 2028.08,1213.65 2028.67,1213.65 2029.25,1213.65 2029.84,1213.65 2030.43,1213.65 2031.01,1213.65 2031.6,1213.65 2032.19,1213.65 2032.77,1213.65 2033.36,1213.65 2033.94,1213.65 2034.53,1213.65 2035.12,1213.65 2035.7,1213.65 2036.29,1213.65 2036.88,1213.65 2037.46,1213.65 2038.05,1213.65 2038.64,1213.65 2039.22,1213.65 2039.81,1213.65 2040.4,1213.65 2040.98,1213.65 2041.57,1213.65 2042.15,1213.65 2042.74,1213.65 2043.33,1213.65 2043.91,1213.65 2044.5,1213.65 2045.09,1213.65 2045.67,1213.65 2046.26,1213.65 2046.85,1213.65 2047.43,1213.65 2048.02,1213.65 2048.6,1213.65 2049.19,1213.65 2049.78,1213.65 2050.36,1213.65 2050.95,1213.65 2051.54,1213.65 2052.12,1213.65 2052.71,1213.65 2053.3,1213.65 2053.88,1213.65 2054.47,1213.65 2055.06,1213.65 2055.64,1213.65 2056.23,1213.65 2056.81,1213.65 2057.4,1213.65 2057.99,1213.65 2058.57,1213.65 2059.16,1213.65 2059.75,1213.65 2060.33,1213.65 2060.92,1213.65 2061.51,1213.65 2062.09,1213.65 2062.68,1213.65 2063.27,1213.65 2063.85,1213.65 2064.44,1213.65 2065.02,1213.65 2065.61,1213.65 2066.2,1213.65 2066.78,1213.65 2067.37,1213.65 2067.96,1213.65 2068.54,1213.65 2069.13,1213.65 2069.72,1213.65 2070.3,1213.65 2070.89,1213.65 2071.48,1213.65 2072.06,1213.65 2072.65,1213.65 2073.23,1213.65 2073.82,1213.65 2074.41,1213.65 2074.99,1213.65 2075.58,1213.65 2076.17,1213.65 2076.75,1213.65 2077.34,1213.65 2077.93,1213.65 2078.51,1213.65 2079.1,1213.65 2079.68,1213.65 2080.27,1213.65 2080.86,1213.65 2081.44,1213.65 2082.03,1213.65 2082.62,1213.65 2083.2,1213.65 2083.79,1213.65 2084.38,1213.65 2084.96,1213.65 2085.55,1213.65 2086.14,1213.65 2086.72,1213.65 2087.31,1213.65 2087.89,1213.65 2088.48,1213.65 2089.07,1213.65 2089.65,1213.65 2090.24,1213.65 2090.83,1213.65 2091.41,1213.65 2092,1213.65 2092.59,1213.65 2093.17,1213.65 2093.76,1213.65 2094.35,1213.65 2094.93,1213.65 2095.52,1213.65 2096.1,1213.65 2096.69,1213.65 2097.28,1213.65 2097.86,1213.65 2098.45,1213.65 2099.04,1213.65 2099.62,1213.65 2100.21,1213.65 2100.8,1213.65 2101.38,1213.65 2101.97,1213.65 2102.55,1213.65 2103.14,1213.65 2103.73,1213.65 2104.31,1213.65 2104.9,1213.65 2105.49,1213.65 2106.07,1213.65 2106.66,1213.65 2107.25,1213.65 2107.83,1213.65 2108.42,1213.65 2109.01,1213.65 2109.59,1213.65 2110.18,1213.65 2110.76,1213.65 2111.35,1213.65 2111.94,1213.65 2112.52,1213.65 2113.11,1213.65 2113.7,1213.65 2114.28,1213.65 2114.87,1213.65 2115.46,1213.65 2116.04,1213.65 2116.63,1213.65 2117.22,1213.65 2117.8,1213.65 2118.39,1213.65 2118.97,1213.65 2119.56,1213.65 2120.15,1213.65 2120.73,1213.65 2121.32,1213.65 2121.91,1213.65 2122.49,1213.65 2123.08,1213.65 2123.67,1213.65 2124.25,1213.65 2124.84,1213.65 2125.42,1213.65 2126.01,1213.65 2126.6,1213.65 2127.18,1213.65 2127.77,1213.65 2128.36,1213.65 2128.94,1213.65 2129.53,1213.65 2130.12,1213.65 2130.7,1213.65 2131.29,1213.65 2131.88,1213.65 2132.46,1213.65 2133.05,1213.65 2133.63,1213.65 2134.22,1213.65 2134.81,1213.65 2135.39,1213.65 2135.98,1213.65 2136.57,1213.65 2137.15,1213.65 2137.74,1213.65 2138.33,1213.65 2138.91,1213.65 2139.5,1213.65 2140.09,1213.65 2140.67,1213.65 2141.26,1213.65 2141.84,1213.65 2142.43,1213.65 2143.02,1213.65 2143.6,1213.65 2144.19,1213.65 2144.78,1213.65 2145.36,1213.65 2145.95,1213.65 2146.54,1213.65 2147.12,1213.65 2147.71,1213.65 2148.3,1213.65 2148.88,1213.65 2149.47,1213.65 2150.05,1213.65 2150.64,1213.65 2151.23,1213.65 2151.81,1213.65 2152.4,1213.65 2152.99,1213.65 2153.57,1213.65 2154.16,1213.65 2154.75,1213.65 2155.33,1213.65 2155.92,1213.65 2156.5,1213.65 2157.09,1213.65 2157.68,1213.65 2158.26,1213.65 \"/>\n<path clip-path=\"url(#clip432)\" d=\"M986.025 1213.45 L986.612 1213.45 L987.198 1213.45 L987.785 1213.45 L988.371 1213.45 L988.957 1213.45 L989.544 1213.45 L990.13 1213.45 L990.717 1213.45 L991.303 1213.45 L991.889 1213.45 L992.476 1213.45 L993.062 1213.45 L993.649 1213.45 L994.235 1213.45 L994.822 1213.45 L995.408 1213.45 L995.994 1213.45 L996.581 1213.45 L997.167 1213.45 L997.754 1213.45 L998.34 1213.45 L998.926 1213.45 L999.513 1213.45 L1000.1 1213.45 L1000.69 1213.45 L1001.27 1213.45 L1001.86 1213.45 L1002.44 1213.45 L1003.03 1213.45 L1003.62 1213.45 L1004.2 1213.45 L1004.79 1213.45 L1005.38 1213.45 L1005.96 1213.45 L1006.55 1213.45 L1007.14 1213.45 L1007.72 1213.45 L1008.31 1213.45 L1008.9 1213.45 L1009.48 1213.45 L1010.07 1213.45 L1010.65 1213.45 L1011.24 1213.45 L1011.83 1213.45 L1012.41 1213.45 L1013 1213.45 L1013.59 1213.45 L1014.17 1213.45 L1014.76 1213.45 L1015.35 1213.45 L1015.93 1213.45 L1016.52 1213.45 L1017.11 1213.45 L1017.69 1213.45 L1018.28 1213.45 L1018.86 1213.45 L1019.45 1213.45 L1020.04 1213.45 L1020.62 1213.45 L1021.21 1213.45 L1021.8 1213.45 L1022.38 1213.45 L1022.97 1213.45 L1023.56 1213.45 L1024.14 1213.45 L1024.73 1213.45 L1025.32 1213.45 L1025.9 1213.45 L1026.49 1213.45 L1027.07 1213.45 L1027.66 1213.45 L1028.25 1213.45 L1028.83 1213.45 L1029.42 1213.45 L1030.01 1213.45 L1030.59 1213.45 L1031.18 1213.45 L1031.77 1213.45 L1032.35 1213.45 L1032.94 1213.45 L1033.52 1213.45 L1034.11 1213.45 L1034.7 1213.45 L1035.28 1213.45 L1035.87 1213.45 L1036.46 1213.45 L1037.04 1213.45 L1037.63 1213.45 L1038.22 1213.45 L1038.8 1213.45 L1039.39 1213.45 L1039.98 1213.45 L1040.56 1213.45 L1041.15 1213.45 L1041.73 1213.45 L1042.32 1213.45 L1042.91 1213.45 L1043.49 1213.45 L1044.08 1213.45 L1044.67 1213.45 L1045.25 1213.45 L1045.84 1213.45 L1046.43 1213.45 L1047.01 1213.45 L1047.6 1213.45 L1048.19 1213.45 L1048.77 1213.45 L1049.36 1213.45 L1049.94 1213.45 L1050.53 1213.45 L1051.12 1213.45 L1051.7 1213.45 L1052.29 1213.45 L1052.88 1213.45 L1053.46 1213.45 L1054.05 1213.45 L1054.64 1213.45 L1055.22 1213.45 L1055.81 1213.45 L1056.39 1213.45 L1056.98 1213.45 L1057.57 1213.45 L1058.15 1213.45 L1058.74 1213.45 L1059.33 1213.45 L1059.91 1213.45 L1060.5 1213.45 L1061.09 1213.45 L1061.67 1213.45 L1062.26 1213.45 L1062.85 1213.45 L1063.43 1213.45 L1064.02 1213.45 L1064.6 1213.45 L1065.19 1213.45 L1065.78 1213.45 L1066.36 1213.45 L1066.95 1213.45 L1067.54 1213.45 L1068.12 1213.45 L1068.71 1213.45 L1069.3 1213.45 L1069.88 1213.45 L1070.47 1213.45 L1071.06 1213.45 L1071.64 1213.45 L1072.23 1213.45 L1072.81 1213.45 L1073.4 1213.45 L1073.99 1213.45 L1074.57 1213.45 L1075.16 1213.45 L1075.75 1213.45 L1076.33 1213.45 L1076.92 1213.45 L1077.51 1213.45 L1078.09 1213.45 L1078.68 1213.45 L1079.26 1213.45 L1079.85 1213.45 L1080.44 1213.45 L1081.02 1213.45 L1081.61 1213.45 L1082.2 1213.45 L1082.78 1213.45 L1083.37 1213.45 L1083.96 1213.45 L1084.54 1213.45 L1085.13 1213.45 L1085.72 1213.45 L1086.3 1213.45 L1086.89 1213.45 L1087.47 1213.45 L1088.06 1213.45 L1088.65 1213.45 L1089.23 1213.45 L1089.82 1213.45 L1090.41 1213.45 L1090.99 1213.45 L1091.58 1213.45 L1092.17 1213.45 L1092.75 1213.45 L1093.34 1213.45 L1093.93 1213.45 L1094.51 1213.45 L1095.1 1213.45 L1095.68 1213.45 L1096.27 1213.45 L1096.86 1213.45 L1097.44 1213.45 L1098.03 1213.45 L1098.62 1213.45 L1099.2 1213.45 L1099.79 1213.45 L1100.38 1213.45 L1100.96 1213.45 L1101.55 1213.45 L1102.14 1213.45 L1102.72 1213.45 L1103.31 1213.45 L1103.89 1213.45 L1104.48 1213.45 L1105.07 1213.45 L1105.65 1213.45 L1106.24 1213.45 L1106.83 1213.45 L1107.41 1213.45 L1108 1213.45 L1108.59 1213.45 L1109.17 1213.45 L1109.76 1213.45 L1110.34 1213.45 L1110.93 1213.45 L1111.52 1213.45 L1112.1 1213.45 L1112.69 1213.45 L1113.28 1213.45 L1113.86 1213.45 L1114.45 1213.45 L1115.04 1213.45 L1115.62 1213.45 L1116.21 1213.45 L1116.8 1213.45 L1117.38 1213.45 L1117.97 1213.45 L1118.55 1213.45 L1119.14 1213.45 L1119.73 1213.45 L1120.31 1213.45 L1120.9 1213.45 L1121.49 1213.45 L1122.07 1213.45 L1122.66 1213.45 L1123.25 1213.45 L1123.83 1213.45 L1124.42 1213.45 L1125.01 1213.45 L1125.59 1213.45 L1126.18 1213.45 L1126.76 1213.45 L1127.35 1213.45 L1127.94 1213.45 L1128.52 1213.45 L1129.11 1213.45 L1129.7 1213.45 L1130.28 1213.45 L1130.87 1213.45 L1131.46 1213.45 L1132.04 1213.45 L1132.63 1213.45 L1133.21 1213.45 L1133.8 1213.45 L1134.39 1213.45 L1134.97 1213.45 L1135.56 1213.45 L1136.15 1213.45 L1136.73 1213.45 L1137.32 1213.45 L1137.91 1213.45 L1138.49 1213.45 L1139.08 1213.45 L1139.67 1213.45 L1140.25 1213.45 L1140.84 1213.45 L1141.42 1213.45 L1142.01 1213.45 L1142.6 1213.45 L1143.18 1213.45 L1143.77 1213.45 L1144.36 1213.45 L1144.94 1213.45 L1145.53 1213.45 L1146.12 1213.45 L1146.7 1213.45 L1147.29 1213.45 L1147.88 1213.45 L1148.46 1213.45 L1149.05 1213.45 L1149.63 1213.45 L1150.22 1213.45 L1150.81 1213.45 L1151.39 1213.45 L1151.98 1213.45 L1152.57 1213.45 L1153.15 1213.45 L1153.74 1213.45 L1154.33 1213.45 L1154.91 1213.45 L1155.5 1213.45 L1156.09 1213.45 L1156.67 1213.45 L1157.26 1213.45 L1157.84 1213.45 L1158.43 1213.45 L1159.02 1213.45 L1159.6 1213.45 L1160.19 1213.45 L1160.78 1213.45 L1161.36 1213.45 L1161.95 1213.45 L1162.54 1213.45 L1163.12 1213.45 L1163.71 1213.45 L1164.29 1213.45 L1164.88 1213.45 L1165.47 1213.45 L1166.05 1213.45 L1166.64 1213.45 L1167.23 1213.45 L1167.81 1213.45 L1168.4 1213.45 L1168.99 1213.45 L1169.57 1213.45 L1170.16 1213.45 L1170.75 1213.45 L1171.33 1213.45 L1171.92 1213.45 L1172.5 1213.45 L1173.09 1213.45 L1173.68 1213.45 L1174.26 1213.45 L1174.85 1213.45 L1175.44 1213.45 L1176.02 1213.45 L1176.61 1213.45 L1177.2 1213.45 L1177.78 1213.45 L1178.37 1213.45 L1178.96 1213.45 L1179.54 1213.45 L1180.13 1213.45 L1180.71 1213.45 L1181.3 1213.45 L1181.89 1213.45 L1182.47 1213.45 L1183.06 1213.45 L1183.65 1213.45 L1184.23 1213.45 L1184.82 1213.45 L1185.41 1213.45 L1185.99 1213.45 L1186.58 1213.45 L1187.16 1213.45 L1187.75 1213.45 L1188.34 1213.45 L1188.92 1213.45 L1189.51 1213.45 L1190.1 1213.45 L1190.68 1213.45 L1191.27 1213.45 L1191.86 1213.45 L1192.44 1213.45 L1193.03 1213.45 L1193.62 1213.45 L1194.2 1213.45 L1194.79 1213.45 L1195.37 1213.45 L1195.96 1213.45 L1196.55 1213.45 L1197.13 1213.45 L1197.72 1213.45 L1198.31 1213.45 L1198.89 1213.45 L1199.48 1213.45 L1200.07 1213.45 L1200.65 1213.45 L1201.24 1213.45 L1201.83 1213.45 L1202.41 1213.45 L1203 1213.45 L1203.58 1213.45 L1204.17 1213.45 L1204.76 1213.45 L1205.34 1213.45 L1205.93 1213.45 L1206.52 1213.45 L1207.1 1213.45 L1207.69 1213.45 L1208.28 1213.45 L1208.86 1213.45 L1209.45 1213.45 L1210.03 1213.45 L1210.62 1213.45 L1211.21 1213.45 L1211.79 1213.45 L1212.38 1213.45 L1212.97 1213.45 L1213.55 1213.45 L1214.14 1213.45 L1214.73 1213.45 L1215.31 1213.45 L1215.9 1213.45 L1216.49 1213.45 L1217.07 1213.45 L1217.66 1213.45 L1218.24 1213.45 L1218.83 1213.45 L1219.42 1213.45 L1220 1213.45 L1220.59 1213.45 L1221.18 1213.45 L1221.76 1213.45 L1222.35 1213.45 L1222.94 1213.45 L1223.52 1213.45 L1224.11 1213.45 L1224.7 1213.45 L1225.28 1213.45 L1225.87 1213.45 L1226.45 1213.45 L1227.04 1213.45 L1227.63 1213.45 L1228.21 1213.45 L1228.8 1213.45 L1229.39 1213.45 L1229.97 1213.45 L1230.56 1213.45 L1231.15 1213.45 L1231.73 1213.45 L1232.32 1213.45 L1232.91 1213.45 L1233.49 1213.45 L1234.08 1213.45 L1234.66 1213.45 L1235.25 1213.45 L1235.84 1213.45 L1236.42 1213.45 L1237.01 1213.45 L1237.6 1213.45 L1238.18 1213.45 L1238.77 1213.45 L1239.36 1213.45 L1239.94 1213.45 L1240.53 1213.45 L1241.11 1213.45 L1241.7 1213.45 L1242.29 1213.45 L1242.87 1213.45 L1243.46 1213.45 L1244.05 1213.45 L1244.63 1213.45 L1245.22 1213.45 L1245.81 1213.45 L1246.39 1213.45 L1246.98 1213.45 L1247.57 1213.45 L1248.15 1213.45 L1248.74 1213.45 L1249.32 1213.45 L1249.91 1213.45 L1250.5 1213.45 L1251.08 1213.45 L1251.67 1213.45 L1252.26 1213.45 L1252.84 1213.45 L1253.43 1213.45 L1254.02 1213.45 L1254.6 1213.45 L1255.19 1213.45 L1255.78 1213.45 L1256.36 1213.45 L1256.95 1213.45 L1257.53 1213.45 L1258.12 1213.45 L1258.71 1213.45 L1259.29 1213.45 L1259.88 1213.45 L1260.47 1213.45 L1261.05 1213.45 L1261.64 1213.45 L1262.23 1213.45 L1262.81 1213.45 L1263.4 1213.45 L1263.98 1213.45 L1264.57 1213.45 L1265.16 1213.45 L1265.74 1213.45 L1266.33 1213.45 L1266.92 1213.45 L1267.5 1213.45 L1268.09 1213.45 L1268.68 1213.45 L1269.26 1213.45 L1269.85 1213.45 L1270.44 1213.45 L1271.02 1213.45 L1271.61 1213.45 L1272.19 1213.45 L1272.78 1213.45 L1273.37 1213.45 L1273.95 1213.45 L1274.54 1213.45 L1275.13 1213.45 L1275.71 1213.45 L1276.3 1213.45 L1276.89 1213.45 L1277.47 1213.45 L1278.06 1213.45 L1278.65 1213.45 L1279.23 1213.45 L1279.82 1213.45 L1280.4 1213.45 L1280.99 1213.45 L1281.58 1213.45 L1282.16 1213.45 L1282.75 1213.45 L1283.34 1213.45 L1283.92 1213.45 L1284.51 1213.45 L1285.1 1213.45 L1285.68 1213.45 L1286.27 1213.45 L1286.86 1213.45 L1287.44 1213.45 L1288.03 1213.45 L1288.61 1213.45 L1289.2 1213.45 L1289.79 1213.45 L1290.37 1213.45 L1290.96 1213.45 L1291.55 1213.45 L1292.13 1213.45 L1292.72 1213.45 L1293.31 1213.45 L1293.89 1213.45 L1294.48 1213.45 L1295.06 1213.45 L1295.65 1213.45 L1296.24 1213.45 L1296.82 1213.45 L1297.41 1213.45 L1298 1213.45 L1298.58 1213.45 L1299.17 1213.45 L1299.76 1213.45 L1300.34 1213.45 L1300.93 1213.45 L1301.52 1213.45 L1302.1 1213.45 L1302.69 1213.45 L1303.27 1213.45 L1303.86 1213.45 L1304.45 1213.45 L1305.03 1213.45 L1305.62 1213.45 L1306.21 1213.45 L1306.79 1213.45 L1307.38 1213.45 L1307.97 1213.45 L1308.55 1213.45 L1309.14 1213.45 L1309.73 1213.45 L1310.31 1213.45 L1310.9 1213.45 L1311.48 1213.45 L1312.07 1213.45 L1312.66 1213.45 L1313.24 1213.45 L1313.83 1213.45 L1314.42 1213.45 L1315 1213.45 L1315.59 1213.45 L1316.18 1213.45 L1316.76 1213.45 L1317.35 1213.45 L1317.93 1213.45 L1318.52 1213.45 L1319.11 1213.45 L1319.69 1213.45 L1320.28 1213.45 L1320.87 1213.45 L1321.45 1213.45 L1322.04 1213.45 L1322.63 1213.45 L1323.21 1213.45 L1323.8 1213.45 L1324.39 1213.45 L1324.97 1213.45 L1325.56 1213.45 L1326.14 1213.45 L1326.73 1213.45 L1327.32 1213.45 L1327.9 1213.45 L1328.49 1213.45 L1329.08 1213.45 L1329.66 1213.45 L1330.25 1213.45 L1330.84 1213.45 L1331.42 1213.45 L1332.01 1213.45 L1332.6 1213.45 L1333.18 1213.45 L1333.77 1213.45 L1334.35 1213.45 L1334.94 1213.45 L1335.53 1213.45 L1336.11 1213.45 L1336.7 1213.45 L1337.29 1213.45 L1337.87 1213.45 L1338.46 1213.45 L1339.05 1213.45 L1339.63 1213.45 L1340.22 1213.45 L1340.8 1213.45 L1341.39 1213.45 L1341.98 1213.45 L1342.56 1213.45 L1343.15 1213.45 L1343.74 1213.45 L1344.32 1213.45 L1344.91 1213.45 L1345.5 1213.45 L1346.08 1213.45 L1346.67 1213.45 L1347.26 1213.45 L1347.84 1213.45 L1348.43 1213.45 L1349.01 1213.45 L1349.6 1213.45 L1350.19 1213.45 L1350.77 1213.45 L1351.36 1213.45 L1351.95 1213.45 L1352.53 1213.45 L1353.12 1213.45 L1353.71 1213.45 L1354.29 1213.45 L1354.88 1213.45 L1355.47 1213.45 L1356.05 1213.45 L1356.64 1213.45 L1357.22 1213.45 L1357.81 1213.45 L1358.4 1213.45 L1358.98 1213.45 L1359.57 1213.45 L1360.16 1213.45 L1360.74 1213.45 L1361.33 1213.45 L1361.92 1213.45 L1362.5 1213.45 L1363.09 1213.45 L1363.68 1213.45 L1364.26 1213.45 L1364.85 1213.45 L1365.43 1213.45 L1366.02 1213.45 L1366.61 1213.45 L1367.19 1213.45 L1367.78 1213.45 L1368.37 1213.45 L1368.95 1213.45 L1369.54 1213.45 L1370.13 1213.45 L1370.71 1213.45 L1371.3 1213.45 L1371.88 1213.45 L1372.47 1213.45 L1373.06 1213.45 L1373.64 1213.45 L1374.23 1213.45 L1374.82 1213.45 L1375.4 1213.45 L1375.99 1213.45 L1376.58 1213.45 L1377.16 1213.45 L1377.75 1213.45 L1378.34 1213.45 L1378.92 1213.45 L1379.51 1213.45 L1380.09 1213.45 L1380.68 1213.45 L1381.27 1213.45 L1381.85 1213.45 L1382.44 1213.45 L1383.03 1213.45 L1383.61 1213.45 L1384.2 1213.45 L1384.79 1213.45 L1385.37 1213.45 L1385.96 1213.45 L1386.55 1213.45 L1387.13 1213.45 L1387.72 1213.45 L1388.3 1213.45 L1388.89 1213.45 L1389.48 1213.45 L1390.06 1213.45 L1390.65 1213.45 L1391.24 1213.45 L1391.82 1213.45 L1392.41 1213.45 L1393 1213.45 L1393.58 1213.45 L1394.17 1213.45 L1394.75 1213.45 L1395.34 1213.45 L1395.93 1213.45 L1396.51 1213.45 L1397.1 1213.45 L1397.69 1213.45 L1398.27 1213.45 L1398.86 1213.45 L1399.45 1213.45 L1400.03 1213.45 L1400.62 1213.45 L1401.21 1213.45 L1401.79 1213.45 L1402.38 1213.45 L1402.96 1213.45 L1403.55 1213.45 L1404.14 1213.45 L1404.72 1213.45 L1405.31 1213.45 L1405.9 1213.45 L1406.48 1213.45 L1407.07 1213.45 L1407.66 1213.45 L1408.24 1213.45 L1408.83 1213.45 L1409.42 1213.45 L1410 1213.45 L1410.59 1213.45 L1411.17 1213.45 L1411.76 1213.45 L1412.35 1213.45 L1412.93 1213.45 L1413.52 1213.45 L1414.11 1213.45 L1414.69 1213.45 L1415.28 1213.45 L1415.87 1213.45 L1416.45 1213.45 L1417.04 1213.45 L1417.63 1213.45 L1418.21 1213.45 L1418.8 1213.45 L1419.38 1213.45 L1419.97 1213.45 L1420.56 1213.45 L1421.14 1213.45 L1421.73 1213.45 L1422.32 1213.45 L1422.9 1213.45 L1423.49 1213.45 L1424.08 1213.45 L1424.66 1213.45 L1425.25 1213.45 L1425.83 1213.45 L1426.42 1213.45 L1427.01 1213.45 L1427.59 1213.45 L1428.18 1213.45 L1428.77 1213.45 L1429.35 1213.45 L1429.94 1213.45 L1430.53 1213.45 L1431.11 1213.45 L1431.7 1213.45 L1432.29 1213.45 L1432.87 1213.45 L1433.46 1213.45 L1434.04 1213.45 L1434.63 1213.45 L1435.22 1213.45 L1435.8 1213.45 L1436.39 1213.45 L1436.98 1213.45 L1437.56 1213.45 L1438.15 1213.45 L1438.74 1213.45 L1439.32 1213.45 L1439.91 1213.45 L1440.5 1213.45 L1441.08 1213.45 L1441.67 1213.45 L1442.25 1213.45 L1442.84 1213.45 L1443.43 1213.45 L1444.01 1213.45 L1444.6 1213.45 L1445.19 1213.45 L1445.77 1213.45 L1446.36 1213.45 L1446.95 1213.45 L1447.53 1213.45 L1448.12 1213.45 L1448.7 1213.45 L1449.29 1213.45 L1449.88 1213.45 L1450.46 1213.45 L1451.05 1213.45 L1451.64 1213.45 L1452.22 1213.45 L1452.81 1213.45 L1453.4 1213.45 L1453.98 1213.45 L1454.57 1213.45 L1455.16 1213.45 L1455.74 1213.45 L1456.33 1213.45 L1456.91 1213.45 L1457.5 1213.45 L1458.09 1213.45 L1458.67 1213.45 L1459.26 1213.45 L1459.85 1213.45 L1460.43 1213.45 L1461.02 1213.45 L1461.61 1213.45 L1462.19 1213.45 L1462.78 1213.45 L1463.37 1213.45 L1463.95 1213.45 L1464.54 1213.45 L1465.12 1213.45 L1465.71 1213.45 L1466.3 1213.45 L1466.88 1213.45 L1467.47 1213.45 L1468.06 1213.45 L1468.64 1213.45 L1469.23 1213.45 L1469.82 1213.45 L1470.4 1213.45 L1470.99 1213.45 L1471.57 1213.45 L1472.16 1213.45 L1472.75 1213.45 L1473.33 1213.45 L1473.92 1213.45 L1474.51 1213.45 L1475.09 1213.45 L1475.68 1213.45 L1476.27 1213.45 L1476.85 1213.45 L1477.44 1213.45 L1478.03 1213.45 L1478.61 1213.45 L1479.2 1213.45 L1479.78 1213.45 L1480.37 1213.45 L1480.96 1213.45 L1481.54 1213.45 L1482.13 1213.45 L1482.72 1213.45 L1483.3 1213.45 L1483.89 1213.45 L1484.48 1213.45 L1485.06 1213.45 L1485.65 1213.45 L1486.24 1213.45 L1486.82 1213.45 L1487.41 1213.45 L1487.99 1213.45 L1488.58 1213.45 L1489.17 1213.45 L1489.75 1213.45 L1490.34 1213.45 L1490.93 1213.45 L1491.51 1213.45 L1492.1 1213.45 L1492.69 1213.45 L1493.27 1213.45 L1493.86 1213.45 L1494.45 1213.45 L1495.03 1213.45 L1495.62 1213.45 L1496.2 1213.45 L1496.79 1213.45 L1497.38 1213.45 L1497.96 1213.45 L1498.55 1213.45 L1499.14 1213.45 L1499.72 1213.45 L1500.31 1213.45 L1500.9 1213.45 L1501.48 1213.45 L1502.07 1213.45 L1502.65 1213.45 L1503.24 1213.45 L1503.83 1213.45 L1504.41 1213.45 L1505 1213.45 L1505.59 1213.45 L1506.17 1213.45 L1506.76 1213.45 L1507.35 1213.45 L1507.93 1213.45 L1508.52 1213.45 L1509.11 1213.45 L1509.69 1213.45 L1510.28 1213.45 L1510.86 1213.45 L1511.45 1213.45 L1512.04 1213.45 L1512.62 1213.45 L1513.21 1213.45 L1513.8 1213.45 L1514.38 1213.45 L1514.97 1213.45 L1515.56 1213.45 L1516.14 1213.45 L1516.73 1213.45 L1517.32 1213.45 L1517.9 1213.45 L1518.49 1213.45 L1519.07 1213.45 L1519.66 1213.45 L1520.25 1213.45 L1520.83 1213.45 L1521.42 1213.45 L1522.01 1213.45 L1522.59 1213.45 L1523.18 1213.45 L1523.77 1213.45 L1524.35 1213.45 L1524.94 1213.45 L1525.52 1213.45 L1526.11 1213.45 L1526.7 1213.45 L1527.28 1213.45 L1527.87 1213.45 L1528.46 1213.45 L1529.04 1213.45 L1529.63 1213.45 L1530.22 1213.45 L1530.8 1213.45 L1531.39 1213.45 L1531.98 1213.45 L1532.56 1213.45 L1533.15 1213.45 L1533.73 1213.45 L1534.32 1213.45 L1534.91 1213.45 L1535.49 1213.45 L1536.08 1213.45 L1536.67 1213.45 L1537.25 1213.45 L1537.84 1213.45 L1538.43 1213.45 L1539.01 1213.45 L1539.6 1213.45 L1540.19 1213.45 L1540.77 1213.45 L1541.36 1213.45 L1541.94 1213.45 L1542.53 1213.45 L1543.12 1213.45 L1543.7 1213.45 L1544.29 1213.45 L1544.88 1213.45 L1545.46 1213.45 L1546.05 1213.45 L1546.64 1213.45 L1547.22 1213.45 L1547.81 1213.45 L1548.4 1213.45 L1548.98 1213.45 L1549.57 1213.45 L1550.15 1213.45 L1550.74 1213.45 L1551.33 1213.45 L1551.91 1213.45 L1552.5 1213.45 L1553.09 1213.45 L1553.67 1213.45 L1554.26 1213.45 L1554.85 1213.45 L1555.43 1213.45 L1556.02 1213.45 L1556.6 1213.45 L1557.19 1213.45 L1557.78 1213.45 L1558.36 1213.45 L1558.95 1213.45 L1559.54 1213.45 L1560.12 1213.45 L1560.71 1213.45 L1561.3 1213.45 L1561.88 1213.45 L1562.47 1213.45 L1563.06 1213.45 L1563.64 1213.45 L1564.23 1213.45 L1564.81 1213.45 L1565.4 1213.45 L1565.99 1213.45 L1566.57 1213.45 L1567.16 1213.45 L1567.75 1213.45 L1568.33 1213.45 L1568.92 1213.45 L1569.51 1213.45 L1570.09 1213.45 L1570.68 1213.45 L1571.27 1213.45 L1571.85 1213.45 L1572.44 1213.45 L1573.02 1213.45 L1573.61 1213.45 L1574.2 1213.45 L1574.78 1213.45 L1575.37 1213.45 L1575.96 1213.45 L1576.54 1213.45 L1577.13 1213.45 L1577.72 1213.45 L1578.3 1213.45 L1578.89 1213.45 L1579.47 1213.45 L1580.06 1213.45 L1580.65 1213.45 L1581.23 1213.45 L1581.82 1213.45 L1582.41 1213.45 L1582.99 1213.45 L1583.58 1213.45 L1584.17 1213.45 L1584.75 1213.45 L1585.34 1213.45 L1585.93 1213.45 L1586.51 1213.45 L1587.1 1213.45 L1587.68 1213.45 L1588.27 1213.45 L1588.86 1213.45 L1589.44 1213.45 L1590.03 1213.45 L1590.62 1213.45 L1591.2 1213.45 L1591.79 1213.45 L1592.38 1213.45 L1592.96 1213.45 L1593.55 1213.45 L1594.14 1213.45 L1594.72 1213.45 L1595.31 1213.45 L1595.89 1213.45 L1596.48 1213.45 L1597.07 1213.45 L1597.65 1213.45 L1598.24 1213.45 L1598.83 1213.45 L1599.41 1213.45 L1600 1213.45 L1600.59 1213.45 L1601.17 1213.45 L1601.76 1213.45 L1602.34 1213.45 L1602.93 1213.45 L1603.52 1213.45 L1604.1 1213.45 L1604.69 1213.45 L1605.28 1213.45 L1605.86 1213.45 L1606.45 1213.45 L1607.04 1213.45 L1607.62 1213.45 L1608.21 1213.45 L1608.8 1213.45 L1609.38 1213.45 L1609.97 1213.45 L1610.55 1213.45 L1611.14 1213.45 L1611.73 1213.45 L1612.31 1213.45 L1612.9 1213.45 L1613.49 1213.45 L1614.07 1213.45 L1614.66 1213.45 L1615.25 1213.45 L1615.83 1213.45 L1616.42 1213.45 L1617.01 1213.45 L1617.59 1213.45 L1618.18 1213.45 L1618.76 1213.45 L1619.35 1213.45 L1619.94 1213.45 L1620.52 1213.45 L1621.11 1213.45 L1621.7 1213.45 L1622.28 1213.45 L1622.87 1213.45 L1623.46 1213.45 L1624.04 1213.45 L1624.63 1213.45 L1625.22 1213.45 L1625.8 1213.45 L1626.39 1213.45 L1626.97 1213.45 L1627.56 1213.45 L1628.15 1213.45 L1628.73 1213.45 L1629.32 1213.45 L1629.91 1213.45 L1630.49 1213.45 L1631.08 1213.45 L1631.67 1213.45 L1632.25 1213.45 L1632.84 1213.45 L1633.42 1213.45 L1634.01 1213.45 L1634.6 1213.45 L1635.18 1213.45 L1635.77 1213.45 L1636.36 1213.45 L1636.94 1213.45 L1637.53 1213.45 L1638.12 1213.45 L1638.7 1213.45 L1639.29 1213.45 L1639.88 1213.45 L1640.46 1213.45 L1641.05 1213.45 L1641.63 1213.45 L1642.22 1213.45 L1642.81 1213.45 L1643.39 1213.45 L1643.98 1213.45 L1644.57 1213.45 L1645.15 1213.45 L1645.74 1213.45 L1646.33 1213.45 L1646.91 1213.45 L1647.5 1213.45 L1648.09 1213.45 L1648.67 1213.45 L1649.26 1213.45 L1649.84 1213.45 L1650.43 1213.45 L1651.02 1213.45 L1651.6 1213.45 L1652.19 1213.45 L1652.78 1213.45 L1653.36 1213.45 L1653.95 1213.45 L1654.54 1213.45 L1655.12 1213.45 L1655.71 1213.45 L1656.29 1213.45 L1656.88 1213.45 L1657.47 1213.45 L1658.05 1213.45 L1658.64 1213.45 L1659.23 1213.45 L1659.81 1213.45 L1660.4 1213.45 L1660.99 1213.45 L1661.57 1213.45 L1662.16 1213.45 L1662.75 1213.45 L1663.33 1213.45 L1663.92 1213.45 L1664.5 1213.45 L1665.09 1213.45 L1665.68 1213.45 L1666.26 1213.45 L1666.85 1213.45 L1667.44 1213.45 L1668.02 1213.45 L1668.61 1213.45 L1669.2 1213.45 L1669.78 1213.45 L1670.37 1213.45 L1670.96 1213.45 L1671.54 1213.45 L1672.13 1213.45 L1672.71 1213.45 L1673.3 1213.45 L1673.89 1213.45 L1674.47 1213.45 L1675.06 1213.45 L1675.65 1213.45 L1676.23 1213.45 L1676.82 1213.45 L1677.41 1213.45 L1677.99 1213.45 L1678.58 1213.45 L1679.17 1213.45 L1679.75 1213.45 L1680.34 1213.45 L1680.92 1213.45 L1681.51 1213.45 L1682.1 1213.45 L1682.68 1213.45 L1683.27 1213.45 L1683.86 1213.45 L1684.44 1213.45 L1685.03 1213.45 L1685.62 1213.45 L1686.2 1213.45 L1686.79 1213.45 L1687.37 1213.45 L1687.96 1213.45 L1688.55 1213.45 L1689.13 1213.45 L1689.72 1213.45 L1690.31 1213.45 L1690.89 1213.45 L1691.48 1213.45 L1692.07 1213.45 L1692.65 1213.45 L1693.24 1213.45 L1693.83 1213.45 L1694.41 1213.45 L1695 1213.45 L1695.58 1213.45 L1696.17 1213.45 L1696.76 1213.45 L1697.34 1213.45 L1697.93 1213.45 L1698.52 1213.45 L1699.1 1213.45 L1699.69 1213.45 L1700.28 1213.45 L1700.86 1213.45 L1701.45 1213.45 L1702.04 1213.45 L1702.62 1213.45 L1703.21 1213.45 L1703.79 1213.45 L1704.38 1213.45 L1704.97 1213.45 L1705.55 1213.45 L1706.14 1213.45 L1706.73 1213.45 L1707.31 1213.45 L1707.9 1213.45 L1708.49 1213.45 L1709.07 1213.45 L1709.66 1213.45 L1710.24 1213.45 L1710.83 1213.45 L1711.42 1213.45 L1712 1213.45 L1712.59 1213.45 L1713.18 1213.45 L1713.76 1213.45 L1714.35 1213.45 L1714.94 1213.45 L1715.52 1213.45 L1716.11 1213.45 L1716.7 1213.45 L1717.28 1213.45 L1717.87 1213.45 L1718.45 1213.45 L1719.04 1213.45 L1719.63 1213.45 L1720.21 1213.45 L1720.8 1213.45 L1721.39 1213.45 L1721.97 1213.45 L1722.56 1213.45 L1723.15 1213.45 L1723.73 1213.45 L1724.32 1213.45 L1724.91 1213.45 L1725.49 1213.45 L1726.08 1213.45 L1726.66 1213.45 L1727.25 1213.45 L1727.84 1213.45 L1728.42 1213.45 L1729.01 1213.45 L1729.6 1213.45 L1730.18 1213.45 L1730.77 1213.45 L1731.36 1213.45 L1731.94 1213.45 L1732.53 1213.45 L1733.11 1213.45 L1733.7 1213.45 L1734.29 1213.45 L1734.87 1213.45 L1735.46 1213.45 L1736.05 1213.45 L1736.63 1213.45 L1737.22 1213.45 L1737.81 1213.45 L1738.39 1213.45 L1738.98 1213.45 L1739.57 1213.45 L1740.15 1213.45 L1740.74 1213.45 L1741.32 1213.45 L1741.91 1213.45 L1742.5 1213.45 L1743.08 1213.45 L1743.67 1213.45 L1744.26 1213.45 L1744.84 1213.45 L1745.43 1213.45 L1746.02 1213.45 L1746.6 1213.45 L1747.19 1213.45 L1747.78 1213.45 L1748.36 1213.45 L1748.95 1213.45 L1749.53 1213.45 L1750.12 1213.45 L1750.71 1213.45 L1751.29 1213.45 L1751.88 1213.45 L1752.47 1213.45 L1753.05 1213.45 L1753.64 1213.45 L1754.23 1213.45 L1754.81 1213.45 L1755.4 1213.45 L1755.99 1213.45 L1756.57 1213.45 L1757.16 1213.45 L1757.74 1213.45 L1758.33 1213.45 L1758.92 1213.45 L1759.5 1213.45 L1760.09 1213.45 L1760.68 1213.45 L1761.26 1213.45 L1761.85 1213.45 L1762.44 1213.45 L1763.02 1213.45 L1763.61 1213.45 L1764.19 1213.45 L1764.78 1213.45 L1765.37 1213.45 L1765.95 1213.45 L1766.54 1213.45 L1767.13 1213.45 L1767.71 1213.45 L1768.3 1213.45 L1768.89 1213.45 L1769.47 1213.45 L1770.06 1213.45 L1770.65 1213.45 L1771.23 1213.45 L1771.82 1213.45 L1772.4 1213.45 L1772.99 1213.45 L1773.58 1213.45 L1774.16 1213.45 L1774.75 1213.45 L1775.34 1213.45 L1775.92 1213.45 L1776.51 1213.45 L1777.1 1213.45 L1777.68 1213.45 L1778.27 1213.45 L1778.86 1213.45 L1779.44 1213.45 L1780.03 1213.45 L1780.61 1213.45 L1781.2 1213.45 L1781.79 1213.45 L1782.37 1213.45 L1782.96 1213.45 L1783.55 1213.45 L1784.13 1213.45 L1784.72 1213.45 L1785.31 1213.45 L1785.89 1213.45 L1786.48 1213.45 L1787.06 1213.45 L1787.65 1213.45 L1788.24 1213.45 L1788.82 1213.45 L1789.41 1213.45 L1790 1213.45 L1790.58 1213.45 L1791.17 1213.45 L1791.76 1213.45 L1792.34 1213.45 L1792.93 1213.45 L1793.52 1213.45 L1794.1 1213.45 L1794.69 1213.45 L1795.27 1213.45 L1795.86 1213.45 L1796.45 1213.45 L1797.03 1213.45 L1797.62 1213.45 L1798.21 1213.45 L1798.79 1213.45 L1799.38 1213.45 L1799.97 1213.45 L1800.55 1213.45 L1801.14 1213.45 L1801.73 1213.45 L1802.31 1213.45 L1802.9 1213.45 L1803.48 1213.45 L1804.07 1213.45 L1804.66 1213.45 L1805.24 1213.45 L1805.83 1213.45 L1806.42 1213.45 L1807 1213.45 L1807.59 1213.45 L1808.18 1213.45 L1808.76 1213.45 L1809.35 1213.45 L1809.94 1213.45 L1810.52 1213.45 L1811.11 1213.45 L1811.69 1213.45 L1812.28 1213.45 L1812.87 1213.45 L1813.45 1213.45 L1814.04 1213.45 L1814.63 1213.45 L1815.21 1213.45 L1815.8 1213.45 L1816.39 1213.45 L1816.97 1213.45 L1817.56 1213.45 L1818.14 1213.45 L1818.73 1213.45 L1819.32 1213.45 L1819.9 1213.45 L1820.49 1213.45 L1821.08 1213.45 L1821.66 1213.45 L1822.25 1213.45 L1822.84 1213.45 L1823.42 1213.45 L1824.01 1213.45 L1824.6 1213.45 L1825.18 1213.45 L1825.77 1213.45 L1826.35 1213.45 L1826.94 1213.45 L1827.53 1213.45 L1828.11 1213.45 L1828.7 1213.45 L1829.29 1213.45 L1829.87 1213.45 L1830.46 1213.45 L1831.05 1213.45 L1831.63 1213.45 L1832.22 1213.45 L1832.81 1213.45 L1833.39 1213.45 L1833.98 1213.45 L1834.56 1213.45 L1835.15 1213.45 L1835.74 1213.45 L1836.32 1213.45 L1836.91 1213.45 L1837.5 1213.45 L1838.08 1213.45 L1838.67 1213.45 L1839.26 1213.45 L1839.84 1213.45 L1840.43 1213.45 L1841.01 1213.45 L1841.6 1213.45 L1842.19 1213.45 L1842.77 1213.45 L1843.36 1213.45 L1843.95 1213.45 L1844.53 1213.45 L1845.12 1213.45 L1845.71 1213.45 L1846.29 1213.45 L1846.88 1213.45 L1847.47 1213.45 L1848.05 1213.45 L1848.64 1213.45 L1849.22 1213.45 L1849.81 1213.45 L1850.4 1213.45 L1850.98 1213.45 L1851.57 1213.45 L1852.16 1213.45 L1852.74 1213.45 L1853.33 1213.45 L1853.92 1213.45 L1854.5 1213.45 L1855.09 1213.45 L1855.68 1213.45 L1856.26 1213.45 L1856.85 1213.45 L1857.43 1213.45 L1858.02 1213.45 L1858.61 1213.45 L1859.19 1213.45 L1859.78 1213.45 L1860.37 1213.45 L1860.95 1213.45 L1861.54 1213.45 L1862.13 1213.45 L1862.71 1213.45 L1863.3 1213.45 L1863.88 1213.45 L1864.47 1213.45 L1865.06 1213.45 L1865.64 1213.45 L1866.23 1213.45 L1866.82 1213.45 L1867.4 1213.45 L1867.99 1213.45 L1868.58 1213.45 L1869.16 1213.45 L1869.75 1213.45 L1870.34 1213.45 L1870.92 1213.45 L1871.51 1213.45 L1872.09 1213.45 L1872.68 1213.45 L1873.27 1213.45 L1873.85 1213.45 L1874.44 1213.45 L1875.03 1213.45 L1875.61 1213.45 L1876.2 1213.45 L1876.79 1213.45 L1877.37 1213.45 L1877.96 1213.45 L1878.55 1213.45 L1879.13 1213.45 L1879.72 1213.45 L1880.3 1213.45 L1880.89 1213.45 L1881.48 1213.45 L1882.06 1213.45 L1882.65 1213.45 L1883.24 1213.45 L1883.82 1213.45 L1884.41 1213.45 L1885 1213.45 L1885.58 1213.45 L1886.17 1213.45 L1886.76 1213.45 L1887.34 1213.45 L1887.93 1213.45 L1888.51 1213.45 L1889.1 1213.45 L1889.69 1213.45 L1890.27 1213.45 L1890.86 1213.45 L1891.45 1213.45 L1892.03 1213.45 L1892.62 1213.45 L1893.21 1213.45 L1893.79 1213.45 L1894.38 1213.45 L1894.96 1213.45 L1895.55 1213.45 L1896.14 1213.45 L1896.72 1213.45 L1897.31 1213.45 L1897.9 1213.45 L1898.48 1213.45 L1899.07 1213.45 L1899.66 1213.45 L1900.24 1213.45 L1900.83 1213.45 L1901.42 1213.45 L1902 1213.45 L1902.59 1213.45 L1903.17 1213.45 L1903.76 1213.45 L1904.35 1213.45 L1904.93 1213.45 L1905.52 1213.45 L1906.11 1213.45 L1906.69 1213.45 L1907.28 1213.45 L1907.87 1213.45 L1908.45 1213.45 L1909.04 1213.45 L1909.63 1213.45 L1910.21 1213.45 L1910.8 1213.45 L1911.38 1213.45 L1911.97 1213.45 L1912.56 1213.45 L1913.14 1213.45 L1913.73 1213.45 L1914.32 1213.45 L1914.9 1213.45 L1915.49 1213.45 L1916.08 1213.45 L1916.66 1213.45 L1917.25 1213.45 L1917.83 1213.45 L1918.42 1213.45 L1919.01 1213.45 L1919.59 1213.45 L1920.18 1213.45 L1920.77 1213.45 L1921.35 1213.45 L1921.94 1213.45 L1922.53 1213.45 L1923.11 1213.45 L1923.7 1213.45 L1924.29 1213.45 L1924.87 1213.45 L1925.46 1213.45 L1926.04 1213.45 L1926.63 1213.45 L1927.22 1213.45 L1927.8 1213.45 L1928.39 1213.45 L1928.98 1213.45 L1929.56 1213.45 L1930.15 1213.45 L1930.74 1213.45 L1931.32 1213.45 L1931.91 1213.45 L1932.5 1213.45 L1933.08 1213.45 L1933.67 1213.45 L1934.25 1213.45 L1934.84 1213.45 L1935.43 1213.45 L1936.01 1213.45 L1936.6 1213.45 L1937.19 1213.45 L1937.77 1213.45 L1938.36 1213.45 L1938.95 1213.45 L1939.53 1213.45 L1940.12 1213.45 L1940.71 1213.45 L1941.29 1213.45 L1941.88 1213.45 L1942.46 1213.45 L1943.05 1213.45 L1943.64 1213.45 L1944.22 1213.45 L1944.81 1213.45 L1945.4 1213.45 L1945.98 1213.45 L1946.57 1213.45 L1947.16 1213.45 L1947.74 1213.45 L1948.33 1213.45 L1948.91 1213.45 L1949.5 1213.45 L1950.09 1213.45 L1950.67 1213.45 L1951.26 1213.45 L1951.85 1213.45 L1952.43 1213.45 L1953.02 1213.45 L1953.61 1213.45 L1954.19 1213.45 L1954.78 1213.45 L1955.37 1213.45 L1955.95 1213.45 L1956.54 1213.45 L1957.12 1213.45 L1957.71 1213.45 L1958.3 1213.45 L1958.88 1213.45 L1959.47 1213.45 L1960.06 1213.45 L1960.64 1213.45 L1961.23 1213.45 L1961.82 1213.45 L1962.4 1213.45 L1962.99 1213.45 L1963.58 1213.45 L1964.16 1213.45 L1964.75 1213.45 L1965.33 1213.45 L1965.92 1213.45 L1966.51 1213.45 L1967.09 1213.45 L1967.68 1213.45 L1968.27 1213.45 L1968.85 1213.45 L1969.44 1213.45 L1970.03 1213.45 L1970.61 1213.45 L1971.2 1213.45 L1971.78 1213.45 L1972.37 1213.45 L1972.96 1213.45 L1973.54 1213.45 L1974.13 1213.45 L1974.72 1213.45 L1975.3 1213.45 L1975.89 1213.45 L1976.48 1213.45 L1977.06 1213.45 L1977.65 1213.45 L1978.24 1213.45 L1978.82 1213.45 L1979.41 1213.45 L1979.99 1213.45 L1980.58 1213.45 L1981.17 1213.45 L1981.75 1213.45 L1982.34 1213.45 L1982.93 1213.45 L1983.51 1213.45 L1984.1 1213.45 L1984.69 1213.45 L1985.27 1213.45 L1985.86 1213.45 L1986.45 1213.45 L1987.03 1213.45 L1987.62 1213.45 L1988.2 1213.45 L1988.79 1213.45 L1989.38 1213.45 L1989.96 1213.45 L1990.55 1213.45 L1991.14 1213.45 L1991.72 1213.45 L1992.31 1213.45 L1992.9 1213.45 L1993.48 1213.45 L1994.07 1213.45 L1994.65 1213.45 L1995.24 1213.45 L1995.83 1213.45 L1996.41 1213.45 L1997 1213.45 L1997.59 1213.45 L1998.17 1213.45 L1998.76 1213.45 L1999.35 1213.45 L1999.93 1213.45 L2000.52 1213.45 L2001.11 1213.45 L2001.69 1213.45 L2002.28 1213.45 L2002.86 1213.45 L2003.45 1213.45 L2004.04 1213.45 L2004.62 1213.45 L2005.21 1213.45 L2005.8 1213.45 L2006.38 1213.45 L2006.97 1213.45 L2007.56 1213.45 L2008.14 1213.45 L2008.73 1213.45 L2009.32 1213.45 L2009.9 1213.45 L2010.49 1213.45 L2011.07 1213.45 L2011.66 1213.45 L2012.25 1213.45 L2012.83 1213.45 L2013.42 1213.45 L2014.01 1213.45 L2014.59 1213.45 L2015.18 1213.45 L2015.77 1213.45 L2016.35 1213.45 L2016.94 1213.45 L2017.53 1213.45 L2018.11 1213.45 L2018.7 1213.45 L2019.28 1213.45 L2019.87 1213.45 L2020.46 1213.45 L2021.04 1213.45 L2021.63 1213.45 L2022.22 1213.45 L2022.8 1213.45 L2023.39 1213.45 L2023.98 1213.45 L2024.56 1213.45 L2025.15 1213.45 L2025.73 1213.45 L2026.32 1213.45 L2026.91 1213.45 L2027.49 1213.45 L2028.08 1213.45 L2028.67 1213.45 L2029.25 1213.45 L2029.84 1213.45 L2030.43 1213.45 L2031.01 1213.45 L2031.6 1213.45 L2032.19 1213.45 L2032.77 1213.45 L2033.36 1213.45 L2033.94 1213.45 L2034.53 1213.45 L2035.12 1213.45 L2035.7 1213.45 L2036.29 1213.45 L2036.88 1213.45 L2037.46 1213.45 L2038.05 1213.45 L2038.64 1213.45 L2039.22 1213.45 L2039.81 1213.45 L2040.4 1213.45 L2040.98 1213.45 L2041.57 1213.45 L2042.15 1213.45 L2042.74 1213.45 L2043.33 1213.45 L2043.91 1213.45 L2044.5 1213.45 L2045.09 1213.45 L2045.67 1213.45 L2046.26 1213.45 L2046.85 1213.45 L2047.43 1213.45 L2048.02 1213.45 L2048.6 1213.45 L2049.19 1213.45 L2049.78 1213.45 L2050.36 1213.45 L2050.95 1213.45 L2051.54 1213.45 L2052.12 1213.45 L2052.71 1213.45 L2053.3 1213.45 L2053.88 1213.45 L2054.47 1213.45 L2055.06 1213.45 L2055.64 1213.45 L2056.23 1213.45 L2056.81 1213.45 L2057.4 1213.45 L2057.99 1213.45 L2058.57 1213.45 L2059.16 1213.45 L2059.75 1213.45 L2060.33 1213.45 L2060.92 1213.45 L2061.51 1213.45 L2062.09 1213.45 L2062.68 1213.45 L2063.27 1213.45 L2063.85 1213.45 L2064.44 1213.45 L2065.02 1213.45 L2065.61 1213.45 L2066.2 1213.45 L2066.78 1213.45 L2067.37 1213.45 L2067.96 1213.45 L2068.54 1213.45 L2069.13 1213.45 L2069.72 1213.45 L2070.3 1213.45 L2070.89 1213.45 L2071.48 1213.45 L2072.06 1213.45 L2072.65 1213.45 L2073.23 1213.45 L2073.82 1213.45 L2074.41 1213.45 L2074.99 1213.45 L2075.58 1213.45 L2076.17 1213.45 L2076.75 1213.45 L2077.34 1213.45 L2077.93 1213.45 L2078.51 1213.45 L2079.1 1213.45 L2079.68 1213.45 L2080.27 1213.45 L2080.86 1213.45 L2081.44 1213.45 L2082.03 1213.45 L2082.62 1213.45 L2083.2 1213.45 L2083.79 1213.45 L2084.38 1213.45 L2084.96 1213.45 L2085.55 1213.45 L2086.14 1213.45 L2086.72 1213.45 L2087.31 1213.45 L2087.89 1213.45 L2088.48 1213.45 L2089.07 1213.45 L2089.65 1213.45 L2090.24 1213.45 L2090.83 1213.45 L2091.41 1213.45 L2092 1213.45 L2092.59 1213.45 L2093.17 1213.45 L2093.76 1213.45 L2094.35 1213.45 L2094.93 1213.45 L2095.52 1213.45 L2096.1 1213.45 L2096.69 1213.45 L2097.28 1213.45 L2097.86 1213.45 L2098.45 1213.45 L2099.04 1213.45 L2099.62 1213.45 L2100.21 1213.45 L2100.8 1213.45 L2101.38 1213.45 L2101.97 1213.45 L2102.55 1213.45 L2103.14 1213.45 L2103.73 1213.45 L2104.31 1213.45 L2104.9 1213.45 L2105.49 1213.45 L2106.07 1213.45 L2106.66 1213.45 L2107.25 1213.45 L2107.83 1213.45 L2108.42 1213.45 L2109.01 1213.45 L2109.59 1213.45 L2110.18 1213.45 L2110.76 1213.45 L2111.35 1213.45 L2111.94 1213.45 L2112.52 1213.45 L2113.11 1213.45 L2113.7 1213.45 L2114.28 1213.45 L2114.87 1213.45 L2115.46 1213.45 L2116.04 1213.45 L2116.63 1213.45 L2117.22 1213.45 L2117.8 1213.45 L2118.39 1213.45 L2118.97 1213.45 L2119.56 1213.45 L2120.15 1213.45 L2120.73 1213.45 L2121.32 1213.45 L2121.91 1213.45 L2122.49 1213.45 L2123.08 1213.45 L2123.67 1213.45 L2124.25 1213.45 L2124.84 1213.45 L2125.42 1213.45 L2126.01 1213.45 L2126.6 1213.45 L2127.18 1213.45 L2127.77 1213.45 L2128.36 1213.45 L2128.94 1213.45 L2129.53 1213.45 L2130.12 1213.45 L2130.7 1213.45 L2131.29 1213.45 L2131.88 1213.45 L2132.46 1213.45 L2133.05 1213.45 L2133.63 1213.45 L2134.22 1213.45 L2134.81 1213.45 L2135.39 1213.45 L2135.98 1213.45 L2136.57 1213.45 L2137.15 1213.45 L2137.74 1213.45 L2138.33 1213.45 L2138.91 1213.45 L2139.5 1213.45 L2140.09 1213.45 L2140.67 1213.45 L2141.26 1213.45 L2141.84 1213.45 L2142.43 1213.45 L2143.02 1213.45 L2143.6 1213.45 L2144.19 1213.45 L2144.78 1213.45 L2145.36 1213.45 L2145.95 1213.45 L2146.54 1213.45 L2147.12 1213.45 L2147.71 1213.45 L2148.3 1213.45 L2148.88 1213.45 L2149.47 1213.45 L2150.05 1213.45 L2150.64 1213.45 L2151.23 1213.45 L2151.81 1213.45 L2152.4 1213.45 L2152.99 1213.45 L2153.57 1213.45 L2154.16 1213.45 L2154.75 1213.45 L2155.33 1213.45 L2155.92 1213.45 L2156.5 1213.45 L2157.09 1213.45 L2157.68 1213.45 L2158.26 1213.45 L2158.26 1213.22 L2157.68 1213.22 L2157.09 1213.22 L2156.5 1213.22 L2155.92 1213.22 L2155.33 1213.22 L2154.75 1213.22 L2154.16 1213.22 L2153.57 1213.22 L2152.99 1213.22 L2152.4 1213.22 L2151.81 1213.22 L2151.23 1213.22 L2150.64 1213.22 L2150.05 1213.22 L2149.47 1213.22 L2148.88 1213.22 L2148.3 1213.22 L2147.71 1213.22 L2147.12 1213.22 L2146.54 1213.22 L2145.95 1213.22 L2145.36 1213.22 L2144.78 1213.22 L2144.19 1213.22 L2143.6 1213.22 L2143.02 1213.22 L2142.43 1213.22 L2141.84 1213.22 L2141.26 1213.22 L2140.67 1213.22 L2140.09 1213.22 L2139.5 1213.22 L2138.91 1213.22 L2138.33 1213.22 L2137.74 1213.22 L2137.15 1213.22 L2136.57 1213.22 L2135.98 1213.22 L2135.39 1213.22 L2134.81 1213.22 L2134.22 1213.22 L2133.63 1213.22 L2133.05 1213.22 L2132.46 1213.22 L2131.88 1213.22 L2131.29 1213.22 L2130.7 1213.22 L2130.12 1213.22 L2129.53 1213.22 L2128.94 1213.22 L2128.36 1213.22 L2127.77 1213.22 L2127.18 1213.22 L2126.6 1213.22 L2126.01 1213.22 L2125.42 1213.22 L2124.84 1213.22 L2124.25 1213.22 L2123.67 1213.22 L2123.08 1213.22 L2122.49 1213.22 L2121.91 1213.22 L2121.32 1213.22 L2120.73 1213.22 L2120.15 1213.22 L2119.56 1213.22 L2118.97 1213.22 L2118.39 1213.22 L2117.8 1213.22 L2117.22 1213.22 L2116.63 1213.22 L2116.04 1213.22 L2115.46 1213.22 L2114.87 1213.22 L2114.28 1213.22 L2113.7 1213.22 L2113.11 1213.22 L2112.52 1213.22 L2111.94 1213.22 L2111.35 1213.22 L2110.76 1213.22 L2110.18 1213.22 L2109.59 1213.22 L2109.01 1213.22 L2108.42 1213.22 L2107.83 1213.22 L2107.25 1213.22 L2106.66 1213.22 L2106.07 1213.22 L2105.49 1213.22 L2104.9 1213.22 L2104.31 1213.22 L2103.73 1213.22 L2103.14 1213.22 L2102.55 1213.22 L2101.97 1213.22 L2101.38 1213.22 L2100.8 1213.22 L2100.21 1213.22 L2099.62 1213.22 L2099.04 1213.22 L2098.45 1213.22 L2097.86 1213.22 L2097.28 1213.22 L2096.69 1213.22 L2096.1 1213.22 L2095.52 1213.22 L2094.93 1213.22 L2094.35 1213.22 L2093.76 1213.22 L2093.17 1213.22 L2092.59 1213.22 L2092 1213.22 L2091.41 1213.22 L2090.83 1213.22 L2090.24 1213.22 L2089.65 1213.22 L2089.07 1213.22 L2088.48 1213.22 L2087.89 1213.22 L2087.31 1213.22 L2086.72 1213.22 L2086.14 1213.22 L2085.55 1213.22 L2084.96 1213.22 L2084.38 1213.22 L2083.79 1213.22 L2083.2 1213.22 L2082.62 1213.22 L2082.03 1213.22 L2081.44 1213.22 L2080.86 1213.22 L2080.27 1213.22 L2079.68 1213.22 L2079.1 1213.22 L2078.51 1213.22 L2077.93 1213.22 L2077.34 1213.22 L2076.75 1213.22 L2076.17 1213.22 L2075.58 1213.22 L2074.99 1213.22 L2074.41 1213.22 L2073.82 1213.22 L2073.23 1213.22 L2072.65 1213.22 L2072.06 1213.22 L2071.48 1213.22 L2070.89 1213.22 L2070.3 1213.22 L2069.72 1213.22 L2069.13 1213.22 L2068.54 1213.22 L2067.96 1213.22 L2067.37 1213.22 L2066.78 1213.22 L2066.2 1213.22 L2065.61 1213.22 L2065.02 1213.22 L2064.44 1213.22 L2063.85 1213.22 L2063.27 1213.22 L2062.68 1213.22 L2062.09 1213.22 L2061.51 1213.22 L2060.92 1213.22 L2060.33 1213.22 L2059.75 1213.22 L2059.16 1213.22 L2058.57 1213.22 L2057.99 1213.22 L2057.4 1213.22 L2056.81 1213.22 L2056.23 1213.22 L2055.64 1213.22 L2055.06 1213.22 L2054.47 1213.22 L2053.88 1213.22 L2053.3 1213.22 L2052.71 1213.22 L2052.12 1213.22 L2051.54 1213.22 L2050.95 1213.22 L2050.36 1213.22 L2049.78 1213.22 L2049.19 1213.22 L2048.6 1213.22 L2048.02 1213.22 L2047.43 1213.22 L2046.85 1213.22 L2046.26 1213.22 L2045.67 1213.22 L2045.09 1213.22 L2044.5 1213.22 L2043.91 1213.22 L2043.33 1213.22 L2042.74 1213.22 L2042.15 1213.22 L2041.57 1213.22 L2040.98 1213.22 L2040.4 1213.22 L2039.81 1213.22 L2039.22 1213.22 L2038.64 1213.22 L2038.05 1213.22 L2037.46 1213.22 L2036.88 1213.22 L2036.29 1213.22 L2035.7 1213.22 L2035.12 1213.22 L2034.53 1213.22 L2033.94 1213.22 L2033.36 1213.22 L2032.77 1213.22 L2032.19 1213.22 L2031.6 1213.22 L2031.01 1213.22 L2030.43 1213.22 L2029.84 1213.22 L2029.25 1213.22 L2028.67 1213.22 L2028.08 1213.22 L2027.49 1213.22 L2026.91 1213.22 L2026.32 1213.22 L2025.73 1213.22 L2025.15 1213.22 L2024.56 1213.22 L2023.98 1213.22 L2023.39 1213.22 L2022.8 1213.22 L2022.22 1213.22 L2021.63 1213.22 L2021.04 1213.22 L2020.46 1213.22 L2019.87 1213.22 L2019.28 1213.22 L2018.7 1213.22 L2018.11 1213.22 L2017.53 1213.22 L2016.94 1213.22 L2016.35 1213.22 L2015.77 1213.22 L2015.18 1213.22 L2014.59 1213.22 L2014.01 1213.22 L2013.42 1213.22 L2012.83 1213.22 L2012.25 1213.22 L2011.66 1213.22 L2011.07 1213.22 L2010.49 1213.22 L2009.9 1213.22 L2009.32 1213.22 L2008.73 1213.22 L2008.14 1213.22 L2007.56 1213.22 L2006.97 1213.22 L2006.38 1213.22 L2005.8 1213.22 L2005.21 1213.22 L2004.62 1213.22 L2004.04 1213.22 L2003.45 1213.22 L2002.86 1213.22 L2002.28 1213.22 L2001.69 1213.22 L2001.11 1213.22 L2000.52 1213.22 L1999.93 1213.22 L1999.35 1213.22 L1998.76 1213.22 L1998.17 1213.22 L1997.59 1213.22 L1997 1213.22 L1996.41 1213.22 L1995.83 1213.22 L1995.24 1213.22 L1994.65 1213.22 L1994.07 1213.22 L1993.48 1213.22 L1992.9 1213.22 L1992.31 1213.22 L1991.72 1213.22 L1991.14 1213.22 L1990.55 1213.22 L1989.96 1213.22 L1989.38 1213.22 L1988.79 1213.22 L1988.2 1213.22 L1987.62 1213.22 L1987.03 1213.22 L1986.45 1213.22 L1985.86 1213.22 L1985.27 1213.22 L1984.69 1213.22 L1984.1 1213.22 L1983.51 1213.22 L1982.93 1213.22 L1982.34 1213.22 L1981.75 1213.22 L1981.17 1213.22 L1980.58 1213.22 L1979.99 1213.22 L1979.41 1213.22 L1978.82 1213.22 L1978.24 1213.22 L1977.65 1213.22 L1977.06 1213.22 L1976.48 1213.22 L1975.89 1213.22 L1975.3 1213.22 L1974.72 1213.22 L1974.13 1213.22 L1973.54 1213.22 L1972.96 1213.22 L1972.37 1213.22 L1971.78 1213.22 L1971.2 1213.22 L1970.61 1213.22 L1970.03 1213.22 L1969.44 1213.22 L1968.85 1213.22 L1968.27 1213.22 L1967.68 1213.22 L1967.09 1213.22 L1966.51 1213.22 L1965.92 1213.22 L1965.33 1213.22 L1964.75 1213.22 L1964.16 1213.22 L1963.58 1213.22 L1962.99 1213.22 L1962.4 1213.22 L1961.82 1213.22 L1961.23 1213.22 L1960.64 1213.22 L1960.06 1213.22 L1959.47 1213.22 L1958.88 1213.22 L1958.3 1213.22 L1957.71 1213.22 L1957.12 1213.22 L1956.54 1213.22 L1955.95 1213.22 L1955.37 1213.22 L1954.78 1213.22 L1954.19 1213.22 L1953.61 1213.22 L1953.02 1213.22 L1952.43 1213.22 L1951.85 1213.22 L1951.26 1213.22 L1950.67 1213.22 L1950.09 1213.22 L1949.5 1213.22 L1948.91 1213.22 L1948.33 1213.22 L1947.74 1213.22 L1947.16 1213.22 L1946.57 1213.22 L1945.98 1213.22 L1945.4 1213.22 L1944.81 1213.22 L1944.22 1213.22 L1943.64 1213.22 L1943.05 1213.22 L1942.46 1213.22 L1941.88 1213.22 L1941.29 1213.22 L1940.71 1213.22 L1940.12 1213.22 L1939.53 1213.22 L1938.95 1213.22 L1938.36 1213.22 L1937.77 1213.22 L1937.19 1213.22 L1936.6 1213.22 L1936.01 1213.22 L1935.43 1213.22 L1934.84 1213.22 L1934.25 1213.22 L1933.67 1213.22 L1933.08 1213.22 L1932.5 1213.22 L1931.91 1213.22 L1931.32 1213.22 L1930.74 1213.22 L1930.15 1213.22 L1929.56 1213.22 L1928.98 1213.22 L1928.39 1213.22 L1927.8 1213.22 L1927.22 1213.22 L1926.63 1213.22 L1926.04 1213.22 L1925.46 1213.22 L1924.87 1213.22 L1924.29 1213.22 L1923.7 1213.22 L1923.11 1213.22 L1922.53 1213.22 L1921.94 1213.22 L1921.35 1213.22 L1920.77 1213.22 L1920.18 1213.22 L1919.59 1213.22 L1919.01 1213.22 L1918.42 1213.22 L1917.83 1213.22 L1917.25 1213.22 L1916.66 1213.22 L1916.08 1213.22 L1915.49 1213.22 L1914.9 1213.22 L1914.32 1213.22 L1913.73 1213.22 L1913.14 1213.22 L1912.56 1213.22 L1911.97 1213.22 L1911.38 1213.22 L1910.8 1213.22 L1910.21 1213.22 L1909.63 1213.22 L1909.04 1213.22 L1908.45 1213.22 L1907.87 1213.22 L1907.28 1213.22 L1906.69 1213.22 L1906.11 1213.22 L1905.52 1213.22 L1904.93 1213.22 L1904.35 1213.22 L1903.76 1213.22 L1903.17 1213.22 L1902.59 1213.22 L1902 1213.22 L1901.42 1213.22 L1900.83 1213.22 L1900.24 1213.22 L1899.66 1213.22 L1899.07 1213.22 L1898.48 1213.22 L1897.9 1213.22 L1897.31 1213.22 L1896.72 1213.22 L1896.14 1213.22 L1895.55 1213.22 L1894.96 1213.22 L1894.38 1213.22 L1893.79 1213.22 L1893.21 1213.22 L1892.62 1213.22 L1892.03 1213.22 L1891.45 1213.22 L1890.86 1213.22 L1890.27 1213.22 L1889.69 1213.22 L1889.1 1213.22 L1888.51 1213.22 L1887.93 1213.22 L1887.34 1213.22 L1886.76 1213.22 L1886.17 1213.22 L1885.58 1213.22 L1885 1213.22 L1884.41 1213.22 L1883.82 1213.22 L1883.24 1213.22 L1882.65 1213.22 L1882.06 1213.22 L1881.48 1213.22 L1880.89 1213.22 L1880.3 1213.22 L1879.72 1213.22 L1879.13 1213.22 L1878.55 1213.22 L1877.96 1213.22 L1877.37 1213.22 L1876.79 1213.22 L1876.2 1213.22 L1875.61 1213.22 L1875.03 1213.22 L1874.44 1213.22 L1873.85 1213.22 L1873.27 1213.22 L1872.68 1213.22 L1872.09 1213.22 L1871.51 1213.22 L1870.92 1213.22 L1870.34 1213.22 L1869.75 1213.22 L1869.16 1213.22 L1868.58 1213.22 L1867.99 1213.22 L1867.4 1213.22 L1866.82 1213.22 L1866.23 1213.22 L1865.64 1213.22 L1865.06 1213.22 L1864.47 1213.22 L1863.88 1213.22 L1863.3 1213.22 L1862.71 1213.22 L1862.13 1213.22 L1861.54 1213.22 L1860.95 1213.22 L1860.37 1213.22 L1859.78 1213.22 L1859.19 1213.22 L1858.61 1213.22 L1858.02 1213.22 L1857.43 1213.22 L1856.85 1213.22 L1856.26 1213.22 L1855.68 1213.22 L1855.09 1213.22 L1854.5 1213.22 L1853.92 1213.22 L1853.33 1213.22 L1852.74 1213.22 L1852.16 1213.22 L1851.57 1213.22 L1850.98 1213.22 L1850.4 1213.22 L1849.81 1213.22 L1849.22 1213.22 L1848.64 1213.22 L1848.05 1213.22 L1847.47 1213.22 L1846.88 1213.22 L1846.29 1213.22 L1845.71 1213.22 L1845.12 1213.22 L1844.53 1213.22 L1843.95 1213.22 L1843.36 1213.22 L1842.77 1213.22 L1842.19 1213.22 L1841.6 1213.22 L1841.01 1213.22 L1840.43 1213.22 L1839.84 1213.22 L1839.26 1213.22 L1838.67 1213.22 L1838.08 1213.22 L1837.5 1213.22 L1836.91 1213.22 L1836.32 1213.22 L1835.74 1213.22 L1835.15 1213.22 L1834.56 1213.22 L1833.98 1213.22 L1833.39 1213.22 L1832.81 1213.22 L1832.22 1213.22 L1831.63 1213.22 L1831.05 1213.22 L1830.46 1213.22 L1829.87 1213.22 L1829.29 1213.22 L1828.7 1213.22 L1828.11 1213.22 L1827.53 1213.22 L1826.94 1213.22 L1826.35 1213.22 L1825.77 1213.22 L1825.18 1213.22 L1824.6 1213.22 L1824.01 1213.22 L1823.42 1213.22 L1822.84 1213.22 L1822.25 1213.22 L1821.66 1213.22 L1821.08 1213.22 L1820.49 1213.22 L1819.9 1213.22 L1819.32 1213.22 L1818.73 1213.22 L1818.14 1213.22 L1817.56 1213.22 L1816.97 1213.22 L1816.39 1213.22 L1815.8 1213.22 L1815.21 1213.22 L1814.63 1213.22 L1814.04 1213.22 L1813.45 1213.22 L1812.87 1213.22 L1812.28 1213.22 L1811.69 1213.22 L1811.11 1213.22 L1810.52 1213.22 L1809.94 1213.22 L1809.35 1213.22 L1808.76 1213.22 L1808.18 1213.22 L1807.59 1213.22 L1807 1213.22 L1806.42 1213.22 L1805.83 1213.22 L1805.24 1213.22 L1804.66 1213.22 L1804.07 1213.22 L1803.48 1213.22 L1802.9 1213.22 L1802.31 1213.22 L1801.73 1213.22 L1801.14 1213.22 L1800.55 1213.22 L1799.97 1213.22 L1799.38 1213.22 L1798.79 1213.22 L1798.21 1213.22 L1797.62 1213.22 L1797.03 1213.22 L1796.45 1213.22 L1795.86 1213.22 L1795.27 1213.22 L1794.69 1213.22 L1794.1 1213.22 L1793.52 1213.22 L1792.93 1213.22 L1792.34 1213.22 L1791.76 1213.22 L1791.17 1213.22 L1790.58 1213.22 L1790 1213.22 L1789.41 1213.22 L1788.82 1213.22 L1788.24 1213.22 L1787.65 1213.22 L1787.06 1213.22 L1786.48 1213.22 L1785.89 1213.22 L1785.31 1213.22 L1784.72 1213.22 L1784.13 1213.22 L1783.55 1213.22 L1782.96 1213.22 L1782.37 1213.22 L1781.79 1213.22 L1781.2 1213.22 L1780.61 1213.22 L1780.03 1213.22 L1779.44 1213.22 L1778.86 1213.22 L1778.27 1213.22 L1777.68 1213.22 L1777.1 1213.22 L1776.51 1213.22 L1775.92 1213.22 L1775.34 1213.22 L1774.75 1213.22 L1774.16 1213.22 L1773.58 1213.22 L1772.99 1213.22 L1772.4 1213.22 L1771.82 1213.22 L1771.23 1213.22 L1770.65 1213.22 L1770.06 1213.22 L1769.47 1213.22 L1768.89 1213.22 L1768.3 1213.22 L1767.71 1213.22 L1767.13 1213.22 L1766.54 1213.22 L1765.95 1213.22 L1765.37 1213.22 L1764.78 1213.22 L1764.19 1213.22 L1763.61 1213.22 L1763.02 1213.22 L1762.44 1213.22 L1761.85 1213.22 L1761.26 1213.22 L1760.68 1213.22 L1760.09 1213.22 L1759.5 1213.22 L1758.92 1213.22 L1758.33 1213.22 L1757.74 1213.22 L1757.16 1213.22 L1756.57 1213.22 L1755.99 1213.22 L1755.4 1213.22 L1754.81 1213.22 L1754.23 1213.22 L1753.64 1213.22 L1753.05 1213.22 L1752.47 1213.22 L1751.88 1213.22 L1751.29 1213.22 L1750.71 1213.22 L1750.12 1213.22 L1749.53 1213.22 L1748.95 1213.22 L1748.36 1213.22 L1747.78 1213.22 L1747.19 1213.22 L1746.6 1213.22 L1746.02 1213.22 L1745.43 1213.22 L1744.84 1213.22 L1744.26 1213.22 L1743.67 1213.22 L1743.08 1213.22 L1742.5 1213.22 L1741.91 1213.22 L1741.32 1213.22 L1740.74 1213.22 L1740.15 1213.22 L1739.57 1213.22 L1738.98 1213.22 L1738.39 1213.22 L1737.81 1213.22 L1737.22 1213.22 L1736.63 1213.22 L1736.05 1213.22 L1735.46 1213.22 L1734.87 1213.22 L1734.29 1213.22 L1733.7 1213.22 L1733.11 1213.22 L1732.53 1213.22 L1731.94 1213.22 L1731.36 1213.22 L1730.77 1213.22 L1730.18 1213.22 L1729.6 1213.22 L1729.01 1213.22 L1728.42 1213.22 L1727.84 1213.22 L1727.25 1213.22 L1726.66 1213.22 L1726.08 1213.22 L1725.49 1213.22 L1724.91 1213.22 L1724.32 1213.22 L1723.73 1213.22 L1723.15 1213.22 L1722.56 1213.22 L1721.97 1213.22 L1721.39 1213.22 L1720.8 1213.22 L1720.21 1213.22 L1719.63 1213.22 L1719.04 1213.22 L1718.45 1213.22 L1717.87 1213.22 L1717.28 1213.22 L1716.7 1213.22 L1716.11 1213.22 L1715.52 1213.22 L1714.94 1213.22 L1714.35 1213.22 L1713.76 1213.22 L1713.18 1213.22 L1712.59 1213.22 L1712 1213.22 L1711.42 1213.22 L1710.83 1213.22 L1710.24 1213.22 L1709.66 1213.22 L1709.07 1213.22 L1708.49 1213.22 L1707.9 1213.22 L1707.31 1213.22 L1706.73 1213.22 L1706.14 1213.22 L1705.55 1213.22 L1704.97 1213.22 L1704.38 1213.22 L1703.79 1213.22 L1703.21 1213.22 L1702.62 1213.22 L1702.04 1213.22 L1701.45 1213.22 L1700.86 1213.22 L1700.28 1213.22 L1699.69 1213.22 L1699.1 1213.22 L1698.52 1213.22 L1697.93 1213.22 L1697.34 1213.22 L1696.76 1213.22 L1696.17 1213.22 L1695.58 1213.22 L1695 1213.22 L1694.41 1213.22 L1693.83 1213.22 L1693.24 1213.22 L1692.65 1213.22 L1692.07 1213.22 L1691.48 1213.22 L1690.89 1213.22 L1690.31 1213.22 L1689.72 1213.22 L1689.13 1213.22 L1688.55 1213.22 L1687.96 1213.22 L1687.37 1213.22 L1686.79 1213.22 L1686.2 1213.22 L1685.62 1213.22 L1685.03 1213.22 L1684.44 1213.22 L1683.86 1213.22 L1683.27 1213.22 L1682.68 1213.22 L1682.1 1213.22 L1681.51 1213.22 L1680.92 1213.22 L1680.34 1213.22 L1679.75 1213.22 L1679.17 1213.22 L1678.58 1213.22 L1677.99 1213.22 L1677.41 1213.22 L1676.82 1213.22 L1676.23 1213.22 L1675.65 1213.22 L1675.06 1213.22 L1674.47 1213.22 L1673.89 1213.22 L1673.3 1213.22 L1672.71 1213.22 L1672.13 1213.22 L1671.54 1213.22 L1670.96 1213.22 L1670.37 1213.22 L1669.78 1213.22 L1669.2 1213.22 L1668.61 1213.22 L1668.02 1213.22 L1667.44 1213.22 L1666.85 1213.22 L1666.26 1213.22 L1665.68 1213.22 L1665.09 1213.22 L1664.5 1213.22 L1663.92 1213.22 L1663.33 1213.22 L1662.75 1213.22 L1662.16 1213.22 L1661.57 1213.22 L1660.99 1213.22 L1660.4 1213.22 L1659.81 1213.22 L1659.23 1213.22 L1658.64 1213.22 L1658.05 1213.22 L1657.47 1213.22 L1656.88 1213.22 L1656.29 1213.22 L1655.71 1213.22 L1655.12 1213.22 L1654.54 1213.22 L1653.95 1213.22 L1653.36 1213.22 L1652.78 1213.22 L1652.19 1213.22 L1651.6 1213.22 L1651.02 1213.22 L1650.43 1213.22 L1649.84 1213.22 L1649.26 1213.22 L1648.67 1213.22 L1648.09 1213.22 L1647.5 1213.22 L1646.91 1213.22 L1646.33 1213.22 L1645.74 1213.22 L1645.15 1213.22 L1644.57 1213.22 L1643.98 1213.22 L1643.39 1213.22 L1642.81 1213.22 L1642.22 1213.22 L1641.63 1213.22 L1641.05 1213.22 L1640.46 1213.22 L1639.88 1213.22 L1639.29 1213.22 L1638.7 1213.22 L1638.12 1213.22 L1637.53 1213.22 L1636.94 1213.22 L1636.36 1213.22 L1635.77 1213.22 L1635.18 1213.22 L1634.6 1213.22 L1634.01 1213.22 L1633.42 1213.22 L1632.84 1213.22 L1632.25 1213.22 L1631.67 1213.22 L1631.08 1213.22 L1630.49 1213.22 L1629.91 1213.22 L1629.32 1213.22 L1628.73 1213.22 L1628.15 1213.22 L1627.56 1213.22 L1626.97 1213.22 L1626.39 1213.22 L1625.8 1213.22 L1625.22 1213.22 L1624.63 1213.22 L1624.04 1213.22 L1623.46 1213.22 L1622.87 1213.22 L1622.28 1213.22 L1621.7 1213.22 L1621.11 1213.22 L1620.52 1213.22 L1619.94 1213.22 L1619.35 1213.22 L1618.76 1213.22 L1618.18 1213.22 L1617.59 1213.22 L1617.01 1213.22 L1616.42 1213.22 L1615.83 1213.22 L1615.25 1213.22 L1614.66 1213.22 L1614.07 1213.22 L1613.49 1213.22 L1612.9 1213.22 L1612.31 1213.22 L1611.73 1213.22 L1611.14 1213.22 L1610.55 1213.22 L1609.97 1213.22 L1609.38 1213.22 L1608.8 1213.22 L1608.21 1213.22 L1607.62 1213.22 L1607.04 1213.22 L1606.45 1213.22 L1605.86 1213.22 L1605.28 1213.22 L1604.69 1213.22 L1604.1 1213.22 L1603.52 1213.22 L1602.93 1213.22 L1602.34 1213.22 L1601.76 1213.22 L1601.17 1213.22 L1600.59 1213.22 L1600 1213.22 L1599.41 1213.22 L1598.83 1213.22 L1598.24 1213.22 L1597.65 1213.22 L1597.07 1213.22 L1596.48 1213.22 L1595.89 1213.22 L1595.31 1213.22 L1594.72 1213.22 L1594.14 1213.22 L1593.55 1213.22 L1592.96 1213.22 L1592.38 1213.22 L1591.79 1213.22 L1591.2 1213.22 L1590.62 1213.22 L1590.03 1213.22 L1589.44 1213.22 L1588.86 1213.22 L1588.27 1213.22 L1587.68 1213.22 L1587.1 1213.22 L1586.51 1213.22 L1585.93 1213.22 L1585.34 1213.22 L1584.75 1213.22 L1584.17 1213.22 L1583.58 1213.22 L1582.99 1213.22 L1582.41 1213.22 L1581.82 1213.22 L1581.23 1213.22 L1580.65 1213.22 L1580.06 1213.22 L1579.47 1213.22 L1578.89 1213.22 L1578.3 1213.22 L1577.72 1213.22 L1577.13 1213.22 L1576.54 1213.22 L1575.96 1213.22 L1575.37 1213.22 L1574.78 1213.22 L1574.2 1213.22 L1573.61 1213.22 L1573.02 1213.22 L1572.44 1213.22 L1571.85 1213.22 L1571.27 1213.22 L1570.68 1213.22 L1570.09 1213.22 L1569.51 1213.22 L1568.92 1213.22 L1568.33 1213.22 L1567.75 1213.22 L1567.16 1213.22 L1566.57 1213.22 L1565.99 1213.22 L1565.4 1213.22 L1564.81 1213.22 L1564.23 1213.22 L1563.64 1213.22 L1563.06 1213.22 L1562.47 1213.22 L1561.88 1213.22 L1561.3 1213.22 L1560.71 1213.22 L1560.12 1213.22 L1559.54 1213.22 L1558.95 1213.22 L1558.36 1213.22 L1557.78 1213.22 L1557.19 1213.22 L1556.6 1213.22 L1556.02 1213.22 L1555.43 1213.22 L1554.85 1213.22 L1554.26 1213.22 L1553.67 1213.22 L1553.09 1213.22 L1552.5 1213.22 L1551.91 1213.22 L1551.33 1213.22 L1550.74 1213.22 L1550.15 1213.22 L1549.57 1213.22 L1548.98 1213.22 L1548.4 1213.22 L1547.81 1213.22 L1547.22 1213.22 L1546.64 1213.22 L1546.05 1213.22 L1545.46 1213.22 L1544.88 1213.22 L1544.29 1213.22 L1543.7 1213.22 L1543.12 1213.22 L1542.53 1213.22 L1541.94 1213.22 L1541.36 1213.22 L1540.77 1213.22 L1540.19 1213.22 L1539.6 1213.22 L1539.01 1213.22 L1538.43 1213.22 L1537.84 1213.22 L1537.25 1213.22 L1536.67 1213.22 L1536.08 1213.22 L1535.49 1213.22 L1534.91 1213.22 L1534.32 1213.22 L1533.73 1213.22 L1533.15 1213.22 L1532.56 1213.22 L1531.98 1213.22 L1531.39 1213.22 L1530.8 1213.22 L1530.22 1213.22 L1529.63 1213.22 L1529.04 1213.22 L1528.46 1213.22 L1527.87 1213.22 L1527.28 1213.22 L1526.7 1213.22 L1526.11 1213.22 L1525.52 1213.22 L1524.94 1213.22 L1524.35 1213.22 L1523.77 1213.22 L1523.18 1213.22 L1522.59 1213.22 L1522.01 1213.22 L1521.42 1213.22 L1520.83 1213.22 L1520.25 1213.22 L1519.66 1213.22 L1519.07 1213.22 L1518.49 1213.22 L1517.9 1213.22 L1517.32 1213.22 L1516.73 1213.22 L1516.14 1213.22 L1515.56 1213.22 L1514.97 1213.22 L1514.38 1213.22 L1513.8 1213.22 L1513.21 1213.22 L1512.62 1213.22 L1512.04 1213.22 L1511.45 1213.22 L1510.86 1213.22 L1510.28 1213.22 L1509.69 1213.22 L1509.11 1213.22 L1508.52 1213.22 L1507.93 1213.22 L1507.35 1213.22 L1506.76 1213.22 L1506.17 1213.22 L1505.59 1213.22 L1505 1213.22 L1504.41 1213.22 L1503.83 1213.22 L1503.24 1213.22 L1502.65 1213.22 L1502.07 1213.22 L1501.48 1213.22 L1500.9 1213.22 L1500.31 1213.22 L1499.72 1213.22 L1499.14 1213.22 L1498.55 1213.22 L1497.96 1213.22 L1497.38 1213.22 L1496.79 1213.22 L1496.2 1213.22 L1495.62 1213.22 L1495.03 1213.22 L1494.45 1213.22 L1493.86 1213.22 L1493.27 1213.22 L1492.69 1213.22 L1492.1 1213.22 L1491.51 1213.22 L1490.93 1213.22 L1490.34 1213.22 L1489.75 1213.22 L1489.17 1213.22 L1488.58 1213.22 L1487.99 1213.22 L1487.41 1213.22 L1486.82 1213.22 L1486.24 1213.22 L1485.65 1213.22 L1485.06 1213.22 L1484.48 1213.22 L1483.89 1213.22 L1483.3 1213.22 L1482.72 1213.22 L1482.13 1213.22 L1481.54 1213.22 L1480.96 1213.22 L1480.37 1213.22 L1479.78 1213.22 L1479.2 1213.22 L1478.61 1213.22 L1478.03 1213.22 L1477.44 1213.22 L1476.85 1213.22 L1476.27 1213.22 L1475.68 1213.22 L1475.09 1213.22 L1474.51 1213.22 L1473.92 1213.22 L1473.33 1213.22 L1472.75 1213.22 L1472.16 1213.22 L1471.57 1213.22 L1470.99 1213.22 L1470.4 1213.22 L1469.82 1213.22 L1469.23 1213.22 L1468.64 1213.22 L1468.06 1213.22 L1467.47 1213.22 L1466.88 1213.22 L1466.3 1213.22 L1465.71 1213.22 L1465.12 1213.22 L1464.54 1213.22 L1463.95 1213.22 L1463.37 1213.22 L1462.78 1213.22 L1462.19 1213.22 L1461.61 1213.22 L1461.02 1213.22 L1460.43 1213.22 L1459.85 1213.22 L1459.26 1213.22 L1458.67 1213.22 L1458.09 1213.22 L1457.5 1213.22 L1456.91 1213.22 L1456.33 1213.22 L1455.74 1213.22 L1455.16 1213.22 L1454.57 1213.22 L1453.98 1213.22 L1453.4 1213.22 L1452.81 1213.22 L1452.22 1213.22 L1451.64 1213.22 L1451.05 1213.22 L1450.46 1213.22 L1449.88 1213.22 L1449.29 1213.22 L1448.7 1213.22 L1448.12 1213.22 L1447.53 1213.22 L1446.95 1213.22 L1446.36 1213.22 L1445.77 1213.22 L1445.19 1213.22 L1444.6 1213.22 L1444.01 1213.22 L1443.43 1213.22 L1442.84 1213.22 L1442.25 1213.22 L1441.67 1213.22 L1441.08 1213.22 L1440.5 1213.22 L1439.91 1213.22 L1439.32 1213.22 L1438.74 1213.22 L1438.15 1213.22 L1437.56 1213.22 L1436.98 1213.22 L1436.39 1213.22 L1435.8 1213.22 L1435.22 1213.22 L1434.63 1213.22 L1434.04 1213.22 L1433.46 1213.22 L1432.87 1213.22 L1432.29 1213.22 L1431.7 1213.22 L1431.11 1213.22 L1430.53 1213.22 L1429.94 1213.22 L1429.35 1213.22 L1428.77 1213.22 L1428.18 1213.22 L1427.59 1213.22 L1427.01 1213.22 L1426.42 1213.22 L1425.83 1213.22 L1425.25 1213.22 L1424.66 1213.22 L1424.08 1213.22 L1423.49 1213.22 L1422.9 1213.22 L1422.32 1213.22 L1421.73 1213.22 L1421.14 1213.22 L1420.56 1213.22 L1419.97 1213.22 L1419.38 1213.22 L1418.8 1213.22 L1418.21 1213.22 L1417.63 1213.22 L1417.04 1213.22 L1416.45 1213.22 L1415.87 1213.22 L1415.28 1213.22 L1414.69 1213.22 L1414.11 1213.22 L1413.52 1213.22 L1412.93 1213.22 L1412.35 1213.22 L1411.76 1213.22 L1411.17 1213.22 L1410.59 1213.22 L1410 1213.22 L1409.42 1213.22 L1408.83 1213.22 L1408.24 1213.22 L1407.66 1213.22 L1407.07 1213.22 L1406.48 1213.22 L1405.9 1213.22 L1405.31 1213.22 L1404.72 1213.22 L1404.14 1213.22 L1403.55 1213.22 L1402.96 1213.22 L1402.38 1213.22 L1401.79 1213.22 L1401.21 1213.22 L1400.62 1213.22 L1400.03 1213.22 L1399.45 1213.22 L1398.86 1213.22 L1398.27 1213.22 L1397.69 1213.22 L1397.1 1213.22 L1396.51 1213.22 L1395.93 1213.22 L1395.34 1213.22 L1394.75 1213.22 L1394.17 1213.22 L1393.58 1213.22 L1393 1213.22 L1392.41 1213.22 L1391.82 1213.22 L1391.24 1213.22 L1390.65 1213.22 L1390.06 1213.22 L1389.48 1213.22 L1388.89 1213.22 L1388.3 1213.22 L1387.72 1213.22 L1387.13 1213.22 L1386.55 1213.22 L1385.96 1213.22 L1385.37 1213.22 L1384.79 1213.22 L1384.2 1213.22 L1383.61 1213.22 L1383.03 1213.22 L1382.44 1213.22 L1381.85 1213.22 L1381.27 1213.22 L1380.68 1213.22 L1380.09 1213.22 L1379.51 1213.22 L1378.92 1213.22 L1378.34 1213.22 L1377.75 1213.22 L1377.16 1213.22 L1376.58 1213.22 L1375.99 1213.22 L1375.4 1213.22 L1374.82 1213.22 L1374.23 1213.22 L1373.64 1213.22 L1373.06 1213.22 L1372.47 1213.22 L1371.88 1213.22 L1371.3 1213.22 L1370.71 1213.22 L1370.13 1213.22 L1369.54 1213.22 L1368.95 1213.22 L1368.37 1213.22 L1367.78 1213.22 L1367.19 1213.22 L1366.61 1213.22 L1366.02 1213.22 L1365.43 1213.22 L1364.85 1213.22 L1364.26 1213.22 L1363.68 1213.22 L1363.09 1213.22 L1362.5 1213.22 L1361.92 1213.22 L1361.33 1213.22 L1360.74 1213.22 L1360.16 1213.22 L1359.57 1213.22 L1358.98 1213.22 L1358.4 1213.22 L1357.81 1213.22 L1357.22 1213.22 L1356.64 1213.22 L1356.05 1213.22 L1355.47 1213.22 L1354.88 1213.22 L1354.29 1213.22 L1353.71 1213.22 L1353.12 1213.22 L1352.53 1213.22 L1351.95 1213.22 L1351.36 1213.22 L1350.77 1213.22 L1350.19 1213.22 L1349.6 1213.22 L1349.01 1213.22 L1348.43 1213.22 L1347.84 1213.22 L1347.26 1213.22 L1346.67 1213.22 L1346.08 1213.22 L1345.5 1213.22 L1344.91 1213.22 L1344.32 1213.22 L1343.74 1213.22 L1343.15 1213.22 L1342.56 1213.22 L1341.98 1213.22 L1341.39 1213.22 L1340.8 1213.22 L1340.22 1213.22 L1339.63 1213.22 L1339.05 1213.22 L1338.46 1213.22 L1337.87 1213.22 L1337.29 1213.22 L1336.7 1213.22 L1336.11 1213.22 L1335.53 1213.22 L1334.94 1213.22 L1334.35 1213.22 L1333.77 1213.22 L1333.18 1213.22 L1332.6 1213.22 L1332.01 1213.22 L1331.42 1213.22 L1330.84 1213.22 L1330.25 1213.22 L1329.66 1213.22 L1329.08 1213.22 L1328.49 1213.22 L1327.9 1213.22 L1327.32 1213.22 L1326.73 1213.22 L1326.14 1213.22 L1325.56 1213.22 L1324.97 1213.22 L1324.39 1213.22 L1323.8 1213.22 L1323.21 1213.22 L1322.63 1213.22 L1322.04 1213.22 L1321.45 1213.22 L1320.87 1213.22 L1320.28 1213.22 L1319.69 1213.22 L1319.11 1213.22 L1318.52 1213.22 L1317.93 1213.22 L1317.35 1213.22 L1316.76 1213.22 L1316.18 1213.22 L1315.59 1213.22 L1315 1213.22 L1314.42 1213.22 L1313.83 1213.22 L1313.24 1213.22 L1312.66 1213.22 L1312.07 1213.22 L1311.48 1213.22 L1310.9 1213.22 L1310.31 1213.22 L1309.73 1213.22 L1309.14 1213.22 L1308.55 1213.22 L1307.97 1213.22 L1307.38 1213.22 L1306.79 1213.22 L1306.21 1213.22 L1305.62 1213.22 L1305.03 1213.22 L1304.45 1213.22 L1303.86 1213.22 L1303.27 1213.22 L1302.69 1213.22 L1302.1 1213.22 L1301.52 1213.22 L1300.93 1213.22 L1300.34 1213.22 L1299.76 1213.22 L1299.17 1213.22 L1298.58 1213.22 L1298 1213.22 L1297.41 1213.22 L1296.82 1213.22 L1296.24 1213.22 L1295.65 1213.22 L1295.06 1213.22 L1294.48 1213.22 L1293.89 1213.22 L1293.31 1213.22 L1292.72 1213.22 L1292.13 1213.22 L1291.55 1213.22 L1290.96 1213.22 L1290.37 1213.22 L1289.79 1213.22 L1289.2 1213.22 L1288.61 1213.22 L1288.03 1213.22 L1287.44 1213.22 L1286.86 1213.22 L1286.27 1213.22 L1285.68 1213.22 L1285.1 1213.22 L1284.51 1213.22 L1283.92 1213.22 L1283.34 1213.22 L1282.75 1213.22 L1282.16 1213.22 L1281.58 1213.22 L1280.99 1213.22 L1280.4 1213.22 L1279.82 1213.22 L1279.23 1213.22 L1278.65 1213.22 L1278.06 1213.22 L1277.47 1213.22 L1276.89 1213.22 L1276.3 1213.22 L1275.71 1213.22 L1275.13 1213.22 L1274.54 1213.22 L1273.95 1213.22 L1273.37 1213.22 L1272.78 1213.22 L1272.19 1213.22 L1271.61 1213.22 L1271.02 1213.22 L1270.44 1213.22 L1269.85 1213.22 L1269.26 1213.22 L1268.68 1213.22 L1268.09 1213.22 L1267.5 1213.22 L1266.92 1213.22 L1266.33 1213.22 L1265.74 1213.22 L1265.16 1213.22 L1264.57 1213.22 L1263.98 1213.22 L1263.4 1213.22 L1262.81 1213.22 L1262.23 1213.22 L1261.64 1213.22 L1261.05 1213.22 L1260.47 1213.22 L1259.88 1213.22 L1259.29 1213.22 L1258.71 1213.22 L1258.12 1213.22 L1257.53 1213.22 L1256.95 1213.22 L1256.36 1213.22 L1255.78 1213.22 L1255.19 1213.22 L1254.6 1213.22 L1254.02 1213.22 L1253.43 1213.22 L1252.84 1213.22 L1252.26 1213.22 L1251.67 1213.22 L1251.08 1213.22 L1250.5 1213.22 L1249.91 1213.22 L1249.32 1213.22 L1248.74 1213.22 L1248.15 1213.22 L1247.57 1213.22 L1246.98 1213.22 L1246.39 1213.22 L1245.81 1213.22 L1245.22 1213.22 L1244.63 1213.22 L1244.05 1213.22 L1243.46 1213.22 L1242.87 1213.22 L1242.29 1213.22 L1241.7 1213.22 L1241.11 1213.22 L1240.53 1213.22 L1239.94 1213.22 L1239.36 1213.22 L1238.77 1213.22 L1238.18 1213.22 L1237.6 1213.22 L1237.01 1213.22 L1236.42 1213.22 L1235.84 1213.22 L1235.25 1213.22 L1234.66 1213.22 L1234.08 1213.22 L1233.49 1213.22 L1232.91 1213.22 L1232.32 1213.22 L1231.73 1213.22 L1231.15 1213.22 L1230.56 1213.22 L1229.97 1213.22 L1229.39 1213.22 L1228.8 1213.22 L1228.21 1213.22 L1227.63 1213.22 L1227.04 1213.22 L1226.45 1213.22 L1225.87 1213.22 L1225.28 1213.22 L1224.7 1213.22 L1224.11 1213.22 L1223.52 1213.22 L1222.94 1213.22 L1222.35 1213.22 L1221.76 1213.22 L1221.18 1213.22 L1220.59 1213.22 L1220 1213.22 L1219.42 1213.22 L1218.83 1213.22 L1218.24 1213.22 L1217.66 1213.22 L1217.07 1213.22 L1216.49 1213.22 L1215.9 1213.22 L1215.31 1213.22 L1214.73 1213.22 L1214.14 1213.22 L1213.55 1213.22 L1212.97 1213.22 L1212.38 1213.22 L1211.79 1213.22 L1211.21 1213.22 L1210.62 1213.22 L1210.03 1213.22 L1209.45 1213.22 L1208.86 1213.22 L1208.28 1213.22 L1207.69 1213.22 L1207.1 1213.22 L1206.52 1213.22 L1205.93 1213.22 L1205.34 1213.22 L1204.76 1213.22 L1204.17 1213.22 L1203.58 1213.22 L1203 1213.22 L1202.41 1213.22 L1201.83 1213.22 L1201.24 1213.22 L1200.65 1213.22 L1200.07 1213.22 L1199.48 1213.22 L1198.89 1213.22 L1198.31 1213.22 L1197.72 1213.22 L1197.13 1213.22 L1196.55 1213.22 L1195.96 1213.22 L1195.37 1213.22 L1194.79 1213.22 L1194.2 1213.22 L1193.62 1213.22 L1193.03 1213.22 L1192.44 1213.22 L1191.86 1213.22 L1191.27 1213.22 L1190.68 1213.22 L1190.1 1213.22 L1189.51 1213.22 L1188.92 1213.22 L1188.34 1213.22 L1187.75 1213.22 L1187.16 1213.22 L1186.58 1213.22 L1185.99 1213.22 L1185.41 1213.22 L1184.82 1213.22 L1184.23 1213.22 L1183.65 1213.22 L1183.06 1213.22 L1182.47 1213.22 L1181.89 1213.22 L1181.3 1213.22 L1180.71 1213.22 L1180.13 1213.22 L1179.54 1213.22 L1178.96 1213.22 L1178.37 1213.22 L1177.78 1213.22 L1177.2 1213.22 L1176.61 1213.22 L1176.02 1213.22 L1175.44 1213.22 L1174.85 1213.22 L1174.26 1213.22 L1173.68 1213.22 L1173.09 1213.22 L1172.5 1213.22 L1171.92 1213.22 L1171.33 1213.22 L1170.75 1213.22 L1170.16 1213.22 L1169.57 1213.22 L1168.99 1213.22 L1168.4 1213.22 L1167.81 1213.22 L1167.23 1213.22 L1166.64 1213.22 L1166.05 1213.22 L1165.47 1213.22 L1164.88 1213.22 L1164.29 1213.22 L1163.71 1213.22 L1163.12 1213.22 L1162.54 1213.22 L1161.95 1213.22 L1161.36 1213.22 L1160.78 1213.22 L1160.19 1213.22 L1159.6 1213.22 L1159.02 1213.22 L1158.43 1213.22 L1157.84 1213.22 L1157.26 1213.22 L1156.67 1213.22 L1156.09 1213.22 L1155.5 1213.22 L1154.91 1213.22 L1154.33 1213.22 L1153.74 1213.22 L1153.15 1213.22 L1152.57 1213.22 L1151.98 1213.22 L1151.39 1213.22 L1150.81 1213.22 L1150.22 1213.22 L1149.63 1213.22 L1149.05 1213.22 L1148.46 1213.22 L1147.88 1213.22 L1147.29 1213.22 L1146.7 1213.22 L1146.12 1213.22 L1145.53 1213.22 L1144.94 1213.22 L1144.36 1213.22 L1143.77 1213.22 L1143.18 1213.22 L1142.6 1213.22 L1142.01 1213.22 L1141.42 1213.22 L1140.84 1213.22 L1140.25 1213.22 L1139.67 1213.22 L1139.08 1213.22 L1138.49 1213.22 L1137.91 1213.22 L1137.32 1213.22 L1136.73 1213.22 L1136.15 1213.22 L1135.56 1213.22 L1134.97 1213.22 L1134.39 1213.22 L1133.8 1213.22 L1133.21 1213.22 L1132.63 1213.22 L1132.04 1213.22 L1131.46 1213.22 L1130.87 1213.22 L1130.28 1213.22 L1129.7 1213.22 L1129.11 1213.22 L1128.52 1213.22 L1127.94 1213.22 L1127.35 1213.22 L1126.76 1213.22 L1126.18 1213.22 L1125.59 1213.22 L1125.01 1213.22 L1124.42 1213.22 L1123.83 1213.22 L1123.25 1213.22 L1122.66 1213.22 L1122.07 1213.22 L1121.49 1213.22 L1120.9 1213.22 L1120.31 1213.22 L1119.73 1213.22 L1119.14 1213.22 L1118.55 1213.22 L1117.97 1213.22 L1117.38 1213.22 L1116.8 1213.22 L1116.21 1213.22 L1115.62 1213.22 L1115.04 1213.22 L1114.45 1213.22 L1113.86 1213.22 L1113.28 1213.22 L1112.69 1213.22 L1112.1 1213.22 L1111.52 1213.22 L1110.93 1213.22 L1110.34 1213.22 L1109.76 1213.22 L1109.17 1213.22 L1108.59 1213.22 L1108 1213.22 L1107.41 1213.22 L1106.83 1213.22 L1106.24 1213.22 L1105.65 1213.22 L1105.07 1213.22 L1104.48 1213.22 L1103.89 1213.22 L1103.31 1213.22 L1102.72 1213.22 L1102.14 1213.22 L1101.55 1213.22 L1100.96 1213.22 L1100.38 1213.22 L1099.79 1213.22 L1099.2 1213.22 L1098.62 1213.22 L1098.03 1213.22 L1097.44 1213.22 L1096.86 1213.22 L1096.27 1213.22 L1095.68 1213.22 L1095.1 1213.22 L1094.51 1213.22 L1093.93 1213.22 L1093.34 1213.22 L1092.75 1213.22 L1092.17 1213.22 L1091.58 1213.22 L1090.99 1213.22 L1090.41 1213.22 L1089.82 1213.22 L1089.23 1213.22 L1088.65 1213.22 L1088.06 1213.22 L1087.47 1213.22 L1086.89 1213.22 L1086.3 1213.22 L1085.72 1213.22 L1085.13 1213.22 L1084.54 1213.22 L1083.96 1213.22 L1083.37 1213.22 L1082.78 1213.22 L1082.2 1213.22 L1081.61 1213.22 L1081.02 1213.22 L1080.44 1213.22 L1079.85 1213.22 L1079.26 1213.22 L1078.68 1213.22 L1078.09 1213.22 L1077.51 1213.22 L1076.92 1213.22 L1076.33 1213.22 L1075.75 1213.22 L1075.16 1213.22 L1074.57 1213.22 L1073.99 1213.22 L1073.4 1213.22 L1072.81 1213.22 L1072.23 1213.22 L1071.64 1213.22 L1071.06 1213.22 L1070.47 1213.22 L1069.88 1213.22 L1069.3 1213.22 L1068.71 1213.22 L1068.12 1213.22 L1067.54 1213.22 L1066.95 1213.22 L1066.36 1213.22 L1065.78 1213.22 L1065.19 1213.22 L1064.6 1213.22 L1064.02 1213.22 L1063.43 1213.22 L1062.85 1213.22 L1062.26 1213.22 L1061.67 1213.22 L1061.09 1213.22 L1060.5 1213.22 L1059.91 1213.22 L1059.33 1213.22 L1058.74 1213.22 L1058.15 1213.22 L1057.57 1213.22 L1056.98 1213.22 L1056.39 1213.22 L1055.81 1213.22 L1055.22 1213.22 L1054.64 1213.22 L1054.05 1213.22 L1053.46 1213.22 L1052.88 1213.22 L1052.29 1213.22 L1051.7 1213.22 L1051.12 1213.22 L1050.53 1213.22 L1049.94 1213.22 L1049.36 1213.22 L1048.77 1213.22 L1048.19 1213.22 L1047.6 1213.22 L1047.01 1213.22 L1046.43 1213.22 L1045.84 1213.22 L1045.25 1213.22 L1044.67 1213.22 L1044.08 1213.22 L1043.49 1213.22 L1042.91 1213.22 L1042.32 1213.22 L1041.73 1213.22 L1041.15 1213.22 L1040.56 1213.22 L1039.98 1213.22 L1039.39 1213.22 L1038.8 1213.22 L1038.22 1213.22 L1037.63 1213.22 L1037.04 1213.22 L1036.46 1213.22 L1035.87 1213.22 L1035.28 1213.22 L1034.7 1213.22 L1034.11 1213.22 L1033.52 1213.22 L1032.94 1213.22 L1032.35 1213.22 L1031.77 1213.22 L1031.18 1213.22 L1030.59 1213.22 L1030.01 1213.22 L1029.42 1213.22 L1028.83 1213.22 L1028.25 1213.22 L1027.66 1213.22 L1027.07 1213.22 L1026.49 1213.22 L1025.9 1213.22 L1025.32 1213.22 L1024.73 1213.22 L1024.14 1213.22 L1023.56 1213.22 L1022.97 1213.22 L1022.38 1213.22 L1021.8 1213.22 L1021.21 1213.22 L1020.62 1213.22 L1020.04 1213.22 L1019.45 1213.22 L1018.86 1213.22 L1018.28 1213.22 L1017.69 1213.22 L1017.11 1213.22 L1016.52 1213.22 L1015.93 1213.22 L1015.35 1213.22 L1014.76 1213.22 L1014.17 1213.22 L1013.59 1213.22 L1013 1213.22 L1012.41 1213.22 L1011.83 1213.22 L1011.24 1213.22 L1010.65 1213.22 L1010.07 1213.22 L1009.48 1213.22 L1008.9 1213.22 L1008.31 1213.22 L1007.72 1213.22 L1007.14 1213.22 L1006.55 1213.22 L1005.96 1213.22 L1005.38 1213.22 L1004.79 1213.22 L1004.2 1213.22 L1003.62 1213.22 L1003.03 1213.22 L1002.44 1213.22 L1001.86 1213.22 L1001.27 1213.22 L1000.69 1213.22 L1000.1 1213.22 L999.513 1213.22 L998.926 1213.22 L998.34 1213.22 L997.754 1213.22 L997.167 1213.22 L996.581 1213.22 L995.994 1213.22 L995.408 1213.22 L994.822 1213.22 L994.235 1213.22 L993.649 1213.22 L993.062 1213.22 L992.476 1213.22 L991.889 1213.22 L991.303 1213.22 L990.717 1213.22 L990.13 1213.22 L989.544 1213.22 L988.957 1213.22 L988.371 1213.22 L987.785 1213.22 L987.198 1213.22 L986.612 1213.22 L986.025 1213.22  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.34 986.612,1213.34 987.198,1213.34 987.785,1213.34 988.371,1213.34 988.957,1213.34 989.544,1213.34 990.13,1213.34 990.717,1213.34 991.303,1213.34 991.889,1213.34 992.476,1213.34 993.062,1213.34 993.649,1213.34 994.235,1213.34 994.822,1213.34 995.408,1213.34 995.994,1213.34 996.581,1213.34 997.167,1213.34 997.754,1213.34 998.34,1213.34 998.926,1213.34 999.513,1213.34 1000.1,1213.34 1000.69,1213.34 1001.27,1213.34 1001.86,1213.34 1002.44,1213.34 1003.03,1213.34 1003.62,1213.34 1004.2,1213.34 1004.79,1213.34 1005.38,1213.34 1005.96,1213.34 1006.55,1213.34 1007.14,1213.34 1007.72,1213.34 1008.31,1213.34 1008.9,1213.34 1009.48,1213.34 1010.07,1213.34 1010.65,1213.34 1011.24,1213.34 1011.83,1213.34 1012.41,1213.34 1013,1213.34 1013.59,1213.34 1014.17,1213.34 1014.76,1213.34 1015.35,1213.34 1015.93,1213.34 1016.52,1213.34 1017.11,1213.34 1017.69,1213.34 1018.28,1213.34 1018.86,1213.34 1019.45,1213.34 1020.04,1213.34 1020.62,1213.34 1021.21,1213.34 1021.8,1213.34 1022.38,1213.34 1022.97,1213.34 1023.56,1213.34 1024.14,1213.34 1024.73,1213.34 1025.32,1213.34 1025.9,1213.34 1026.49,1213.34 1027.07,1213.34 1027.66,1213.34 1028.25,1213.34 1028.83,1213.34 1029.42,1213.34 1030.01,1213.34 1030.59,1213.34 1031.18,1213.34 1031.77,1213.34 1032.35,1213.34 1032.94,1213.34 1033.52,1213.34 1034.11,1213.34 1034.7,1213.34 1035.28,1213.34 1035.87,1213.34 1036.46,1213.34 1037.04,1213.34 1037.63,1213.34 1038.22,1213.34 1038.8,1213.34 1039.39,1213.34 1039.98,1213.34 1040.56,1213.34 1041.15,1213.34 1041.73,1213.34 1042.32,1213.34 1042.91,1213.34 1043.49,1213.34 1044.08,1213.34 1044.67,1213.34 1045.25,1213.34 1045.84,1213.34 1046.43,1213.34 1047.01,1213.34 1047.6,1213.34 1048.19,1213.34 1048.77,1213.34 1049.36,1213.34 1049.94,1213.34 1050.53,1213.34 1051.12,1213.34 1051.7,1213.34 1052.29,1213.34 1052.88,1213.34 1053.46,1213.34 1054.05,1213.34 1054.64,1213.34 1055.22,1213.34 1055.81,1213.34 1056.39,1213.34 1056.98,1213.34 1057.57,1213.34 1058.15,1213.34 1058.74,1213.34 1059.33,1213.34 1059.91,1213.34 1060.5,1213.34 1061.09,1213.34 1061.67,1213.34 1062.26,1213.34 1062.85,1213.34 1063.43,1213.34 1064.02,1213.34 1064.6,1213.34 1065.19,1213.34 1065.78,1213.34 1066.36,1213.34 1066.95,1213.34 1067.54,1213.34 1068.12,1213.34 1068.71,1213.34 1069.3,1213.34 1069.88,1213.34 1070.47,1213.34 1071.06,1213.34 1071.64,1213.34 1072.23,1213.34 1072.81,1213.34 1073.4,1213.34 1073.99,1213.34 1074.57,1213.34 1075.16,1213.34 1075.75,1213.34 1076.33,1213.34 1076.92,1213.34 1077.51,1213.34 1078.09,1213.34 1078.68,1213.34 1079.26,1213.34 1079.85,1213.34 1080.44,1213.34 1081.02,1213.34 1081.61,1213.34 1082.2,1213.34 1082.78,1213.34 1083.37,1213.34 1083.96,1213.34 1084.54,1213.34 1085.13,1213.34 1085.72,1213.34 1086.3,1213.34 1086.89,1213.34 1087.47,1213.34 1088.06,1213.34 1088.65,1213.34 1089.23,1213.34 1089.82,1213.34 1090.41,1213.34 1090.99,1213.34 1091.58,1213.34 1092.17,1213.34 1092.75,1213.34 1093.34,1213.34 1093.93,1213.34 1094.51,1213.34 1095.1,1213.34 1095.68,1213.34 1096.27,1213.34 1096.86,1213.34 1097.44,1213.34 1098.03,1213.34 1098.62,1213.34 1099.2,1213.34 1099.79,1213.34 1100.38,1213.34 1100.96,1213.34 1101.55,1213.34 1102.14,1213.34 1102.72,1213.34 1103.31,1213.34 1103.89,1213.34 1104.48,1213.34 1105.07,1213.34 1105.65,1213.34 1106.24,1213.34 1106.83,1213.34 1107.41,1213.34 1108,1213.34 1108.59,1213.34 1109.17,1213.34 1109.76,1213.34 1110.34,1213.34 1110.93,1213.34 1111.52,1213.34 1112.1,1213.34 1112.69,1213.34 1113.28,1213.34 1113.86,1213.34 1114.45,1213.34 1115.04,1213.34 1115.62,1213.34 1116.21,1213.34 1116.8,1213.34 1117.38,1213.34 1117.97,1213.34 1118.55,1213.34 1119.14,1213.34 1119.73,1213.34 1120.31,1213.34 1120.9,1213.34 1121.49,1213.34 1122.07,1213.34 1122.66,1213.34 1123.25,1213.34 1123.83,1213.34 1124.42,1213.34 1125.01,1213.34 1125.59,1213.34 1126.18,1213.34 1126.76,1213.34 1127.35,1213.34 1127.94,1213.34 1128.52,1213.34 1129.11,1213.34 1129.7,1213.34 1130.28,1213.34 1130.87,1213.34 1131.46,1213.34 1132.04,1213.34 1132.63,1213.34 1133.21,1213.34 1133.8,1213.34 1134.39,1213.34 1134.97,1213.34 1135.56,1213.34 1136.15,1213.34 1136.73,1213.34 1137.32,1213.34 1137.91,1213.34 1138.49,1213.34 1139.08,1213.34 1139.67,1213.34 1140.25,1213.34 1140.84,1213.34 1141.42,1213.34 1142.01,1213.34 1142.6,1213.34 1143.18,1213.34 1143.77,1213.34 1144.36,1213.34 1144.94,1213.34 1145.53,1213.34 1146.12,1213.34 1146.7,1213.34 1147.29,1213.34 1147.88,1213.34 1148.46,1213.34 1149.05,1213.34 1149.63,1213.34 1150.22,1213.34 1150.81,1213.34 1151.39,1213.34 1151.98,1213.34 1152.57,1213.34 1153.15,1213.34 1153.74,1213.34 1154.33,1213.34 1154.91,1213.34 1155.5,1213.34 1156.09,1213.34 1156.67,1213.34 1157.26,1213.34 1157.84,1213.34 1158.43,1213.34 1159.02,1213.34 1159.6,1213.34 1160.19,1213.34 1160.78,1213.34 1161.36,1213.34 1161.95,1213.34 1162.54,1213.34 1163.12,1213.34 1163.71,1213.34 1164.29,1213.34 1164.88,1213.34 1165.47,1213.34 1166.05,1213.34 1166.64,1213.34 1167.23,1213.34 1167.81,1213.34 1168.4,1213.34 1168.99,1213.34 1169.57,1213.34 1170.16,1213.34 1170.75,1213.34 1171.33,1213.34 1171.92,1213.34 1172.5,1213.34 1173.09,1213.34 1173.68,1213.34 1174.26,1213.34 1174.85,1213.34 1175.44,1213.34 1176.02,1213.34 1176.61,1213.34 1177.2,1213.34 1177.78,1213.34 1178.37,1213.34 1178.96,1213.34 1179.54,1213.34 1180.13,1213.34 1180.71,1213.34 1181.3,1213.34 1181.89,1213.34 1182.47,1213.34 1183.06,1213.34 1183.65,1213.34 1184.23,1213.34 1184.82,1213.34 1185.41,1213.34 1185.99,1213.34 1186.58,1213.34 1187.16,1213.34 1187.75,1213.34 1188.34,1213.34 1188.92,1213.34 1189.51,1213.34 1190.1,1213.34 1190.68,1213.34 1191.27,1213.34 1191.86,1213.34 1192.44,1213.34 1193.03,1213.34 1193.62,1213.34 1194.2,1213.34 1194.79,1213.34 1195.37,1213.34 1195.96,1213.34 1196.55,1213.34 1197.13,1213.34 1197.72,1213.34 1198.31,1213.34 1198.89,1213.34 1199.48,1213.34 1200.07,1213.34 1200.65,1213.34 1201.24,1213.34 1201.83,1213.34 1202.41,1213.34 1203,1213.34 1203.58,1213.34 1204.17,1213.34 1204.76,1213.34 1205.34,1213.34 1205.93,1213.34 1206.52,1213.34 1207.1,1213.34 1207.69,1213.34 1208.28,1213.34 1208.86,1213.34 1209.45,1213.34 1210.03,1213.34 1210.62,1213.34 1211.21,1213.34 1211.79,1213.34 1212.38,1213.34 1212.97,1213.34 1213.55,1213.34 1214.14,1213.34 1214.73,1213.34 1215.31,1213.34 1215.9,1213.34 1216.49,1213.34 1217.07,1213.34 1217.66,1213.34 1218.24,1213.34 1218.83,1213.34 1219.42,1213.34 1220,1213.34 1220.59,1213.34 1221.18,1213.34 1221.76,1213.34 1222.35,1213.34 1222.94,1213.34 1223.52,1213.34 1224.11,1213.34 1224.7,1213.34 1225.28,1213.34 1225.87,1213.34 1226.45,1213.34 1227.04,1213.34 1227.63,1213.34 1228.21,1213.34 1228.8,1213.34 1229.39,1213.34 1229.97,1213.34 1230.56,1213.34 1231.15,1213.34 1231.73,1213.34 1232.32,1213.34 1232.91,1213.34 1233.49,1213.34 1234.08,1213.34 1234.66,1213.34 1235.25,1213.34 1235.84,1213.34 1236.42,1213.34 1237.01,1213.34 1237.6,1213.34 1238.18,1213.34 1238.77,1213.34 1239.36,1213.34 1239.94,1213.34 1240.53,1213.34 1241.11,1213.34 1241.7,1213.34 1242.29,1213.34 1242.87,1213.34 1243.46,1213.34 1244.05,1213.34 1244.63,1213.34 1245.22,1213.34 1245.81,1213.34 1246.39,1213.34 1246.98,1213.34 1247.57,1213.34 1248.15,1213.34 1248.74,1213.34 1249.32,1213.34 1249.91,1213.34 1250.5,1213.34 1251.08,1213.34 1251.67,1213.34 1252.26,1213.34 1252.84,1213.34 1253.43,1213.34 1254.02,1213.34 1254.6,1213.34 1255.19,1213.34 1255.78,1213.34 1256.36,1213.34 1256.95,1213.34 1257.53,1213.34 1258.12,1213.34 1258.71,1213.34 1259.29,1213.34 1259.88,1213.34 1260.47,1213.34 1261.05,1213.34 1261.64,1213.34 1262.23,1213.34 1262.81,1213.34 1263.4,1213.34 1263.98,1213.34 1264.57,1213.34 1265.16,1213.34 1265.74,1213.34 1266.33,1213.34 1266.92,1213.34 1267.5,1213.34 1268.09,1213.34 1268.68,1213.34 1269.26,1213.34 1269.85,1213.34 1270.44,1213.34 1271.02,1213.34 1271.61,1213.34 1272.19,1213.34 1272.78,1213.34 1273.37,1213.34 1273.95,1213.34 1274.54,1213.34 1275.13,1213.34 1275.71,1213.34 1276.3,1213.34 1276.89,1213.34 1277.47,1213.34 1278.06,1213.34 1278.65,1213.34 1279.23,1213.34 1279.82,1213.34 1280.4,1213.34 1280.99,1213.34 1281.58,1213.34 1282.16,1213.34 1282.75,1213.34 1283.34,1213.34 1283.92,1213.34 1284.51,1213.34 1285.1,1213.34 1285.68,1213.34 1286.27,1213.34 1286.86,1213.34 1287.44,1213.34 1288.03,1213.34 1288.61,1213.34 1289.2,1213.34 1289.79,1213.34 1290.37,1213.34 1290.96,1213.34 1291.55,1213.34 1292.13,1213.34 1292.72,1213.34 1293.31,1213.34 1293.89,1213.34 1294.48,1213.34 1295.06,1213.34 1295.65,1213.34 1296.24,1213.34 1296.82,1213.34 1297.41,1213.34 1298,1213.34 1298.58,1213.34 1299.17,1213.34 1299.76,1213.34 1300.34,1213.34 1300.93,1213.34 1301.52,1213.34 1302.1,1213.34 1302.69,1213.34 1303.27,1213.34 1303.86,1213.34 1304.45,1213.34 1305.03,1213.34 1305.62,1213.34 1306.21,1213.34 1306.79,1213.34 1307.38,1213.34 1307.97,1213.34 1308.55,1213.34 1309.14,1213.34 1309.73,1213.34 1310.31,1213.34 1310.9,1213.34 1311.48,1213.34 1312.07,1213.34 1312.66,1213.34 1313.24,1213.34 1313.83,1213.34 1314.42,1213.34 1315,1213.34 1315.59,1213.34 1316.18,1213.34 1316.76,1213.34 1317.35,1213.34 1317.93,1213.34 1318.52,1213.34 1319.11,1213.34 1319.69,1213.34 1320.28,1213.34 1320.87,1213.34 1321.45,1213.34 1322.04,1213.34 1322.63,1213.34 1323.21,1213.34 1323.8,1213.34 1324.39,1213.34 1324.97,1213.34 1325.56,1213.34 1326.14,1213.34 1326.73,1213.34 1327.32,1213.34 1327.9,1213.34 1328.49,1213.34 1329.08,1213.34 1329.66,1213.34 1330.25,1213.34 1330.84,1213.34 1331.42,1213.34 1332.01,1213.34 1332.6,1213.34 1333.18,1213.34 1333.77,1213.34 1334.35,1213.34 1334.94,1213.34 1335.53,1213.34 1336.11,1213.34 1336.7,1213.34 1337.29,1213.34 1337.87,1213.34 1338.46,1213.34 1339.05,1213.34 1339.63,1213.34 1340.22,1213.34 1340.8,1213.34 1341.39,1213.34 1341.98,1213.34 1342.56,1213.34 1343.15,1213.34 1343.74,1213.34 1344.32,1213.34 1344.91,1213.34 1345.5,1213.34 1346.08,1213.34 1346.67,1213.34 1347.26,1213.34 1347.84,1213.34 1348.43,1213.34 1349.01,1213.34 1349.6,1213.34 1350.19,1213.34 1350.77,1213.34 1351.36,1213.34 1351.95,1213.34 1352.53,1213.34 1353.12,1213.34 1353.71,1213.34 1354.29,1213.34 1354.88,1213.34 1355.47,1213.34 1356.05,1213.34 1356.64,1213.34 1357.22,1213.34 1357.81,1213.34 1358.4,1213.34 1358.98,1213.34 1359.57,1213.34 1360.16,1213.34 1360.74,1213.34 1361.33,1213.34 1361.92,1213.34 1362.5,1213.34 1363.09,1213.34 1363.68,1213.34 1364.26,1213.34 1364.85,1213.34 1365.43,1213.34 1366.02,1213.34 1366.61,1213.34 1367.19,1213.34 1367.78,1213.34 1368.37,1213.34 1368.95,1213.34 1369.54,1213.34 1370.13,1213.34 1370.71,1213.34 1371.3,1213.34 1371.88,1213.34 1372.47,1213.34 1373.06,1213.34 1373.64,1213.34 1374.23,1213.34 1374.82,1213.34 1375.4,1213.34 1375.99,1213.34 1376.58,1213.34 1377.16,1213.34 1377.75,1213.34 1378.34,1213.34 1378.92,1213.34 1379.51,1213.34 1380.09,1213.34 1380.68,1213.34 1381.27,1213.34 1381.85,1213.34 1382.44,1213.34 1383.03,1213.34 1383.61,1213.34 1384.2,1213.34 1384.79,1213.34 1385.37,1213.34 1385.96,1213.34 1386.55,1213.34 1387.13,1213.34 1387.72,1213.34 1388.3,1213.34 1388.89,1213.34 1389.48,1213.34 1390.06,1213.34 1390.65,1213.34 1391.24,1213.34 1391.82,1213.34 1392.41,1213.34 1393,1213.34 1393.58,1213.34 1394.17,1213.34 1394.75,1213.34 1395.34,1213.34 1395.93,1213.34 1396.51,1213.34 1397.1,1213.34 1397.69,1213.34 1398.27,1213.34 1398.86,1213.34 1399.45,1213.34 1400.03,1213.34 1400.62,1213.34 1401.21,1213.34 1401.79,1213.34 1402.38,1213.34 1402.96,1213.34 1403.55,1213.34 1404.14,1213.34 1404.72,1213.34 1405.31,1213.34 1405.9,1213.34 1406.48,1213.34 1407.07,1213.34 1407.66,1213.34 1408.24,1213.34 1408.83,1213.34 1409.42,1213.34 1410,1213.34 1410.59,1213.34 1411.17,1213.34 1411.76,1213.34 1412.35,1213.34 1412.93,1213.34 1413.52,1213.34 1414.11,1213.34 1414.69,1213.34 1415.28,1213.34 1415.87,1213.34 1416.45,1213.34 1417.04,1213.34 1417.63,1213.34 1418.21,1213.34 1418.8,1213.34 1419.38,1213.34 1419.97,1213.34 1420.56,1213.34 1421.14,1213.34 1421.73,1213.34 1422.32,1213.34 1422.9,1213.34 1423.49,1213.34 1424.08,1213.34 1424.66,1213.34 1425.25,1213.34 1425.83,1213.34 1426.42,1213.34 1427.01,1213.34 1427.59,1213.34 1428.18,1213.34 1428.77,1213.34 1429.35,1213.34 1429.94,1213.34 1430.53,1213.34 1431.11,1213.34 1431.7,1213.34 1432.29,1213.34 1432.87,1213.34 1433.46,1213.34 1434.04,1213.34 1434.63,1213.34 1435.22,1213.34 1435.8,1213.34 1436.39,1213.34 1436.98,1213.34 1437.56,1213.34 1438.15,1213.34 1438.74,1213.34 1439.32,1213.34 1439.91,1213.34 1440.5,1213.34 1441.08,1213.34 1441.67,1213.34 1442.25,1213.34 1442.84,1213.34 1443.43,1213.34 1444.01,1213.34 1444.6,1213.34 1445.19,1213.34 1445.77,1213.34 1446.36,1213.34 1446.95,1213.34 1447.53,1213.34 1448.12,1213.34 1448.7,1213.34 1449.29,1213.34 1449.88,1213.34 1450.46,1213.34 1451.05,1213.34 1451.64,1213.34 1452.22,1213.34 1452.81,1213.34 1453.4,1213.34 1453.98,1213.34 1454.57,1213.34 1455.16,1213.34 1455.74,1213.34 1456.33,1213.34 1456.91,1213.34 1457.5,1213.34 1458.09,1213.34 1458.67,1213.34 1459.26,1213.34 1459.85,1213.34 1460.43,1213.34 1461.02,1213.34 1461.61,1213.34 1462.19,1213.34 1462.78,1213.34 1463.37,1213.34 1463.95,1213.34 1464.54,1213.34 1465.12,1213.34 1465.71,1213.34 1466.3,1213.34 1466.88,1213.34 1467.47,1213.34 1468.06,1213.34 1468.64,1213.34 1469.23,1213.34 1469.82,1213.34 1470.4,1213.34 1470.99,1213.34 1471.57,1213.34 1472.16,1213.34 1472.75,1213.34 1473.33,1213.34 1473.92,1213.34 1474.51,1213.34 1475.09,1213.34 1475.68,1213.34 1476.27,1213.34 1476.85,1213.34 1477.44,1213.34 1478.03,1213.34 1478.61,1213.34 1479.2,1213.34 1479.78,1213.34 1480.37,1213.34 1480.96,1213.34 1481.54,1213.34 1482.13,1213.34 1482.72,1213.34 1483.3,1213.34 1483.89,1213.34 1484.48,1213.34 1485.06,1213.34 1485.65,1213.34 1486.24,1213.34 1486.82,1213.34 1487.41,1213.34 1487.99,1213.34 1488.58,1213.34 1489.17,1213.34 1489.75,1213.34 1490.34,1213.34 1490.93,1213.34 1491.51,1213.34 1492.1,1213.34 1492.69,1213.34 1493.27,1213.34 1493.86,1213.34 1494.45,1213.34 1495.03,1213.34 1495.62,1213.34 1496.2,1213.34 1496.79,1213.34 1497.38,1213.34 1497.96,1213.34 1498.55,1213.34 1499.14,1213.34 1499.72,1213.34 1500.31,1213.34 1500.9,1213.34 1501.48,1213.34 1502.07,1213.34 1502.65,1213.34 1503.24,1213.34 1503.83,1213.34 1504.41,1213.34 1505,1213.34 1505.59,1213.34 1506.17,1213.34 1506.76,1213.34 1507.35,1213.34 1507.93,1213.34 1508.52,1213.34 1509.11,1213.34 1509.69,1213.34 1510.28,1213.34 1510.86,1213.34 1511.45,1213.34 1512.04,1213.34 1512.62,1213.34 1513.21,1213.34 1513.8,1213.34 1514.38,1213.34 1514.97,1213.34 1515.56,1213.34 1516.14,1213.34 1516.73,1213.34 1517.32,1213.34 1517.9,1213.34 1518.49,1213.34 1519.07,1213.34 1519.66,1213.34 1520.25,1213.34 1520.83,1213.34 1521.42,1213.34 1522.01,1213.34 1522.59,1213.34 1523.18,1213.34 1523.77,1213.34 1524.35,1213.34 1524.94,1213.34 1525.52,1213.34 1526.11,1213.34 1526.7,1213.34 1527.28,1213.34 1527.87,1213.34 1528.46,1213.34 1529.04,1213.34 1529.63,1213.34 1530.22,1213.34 1530.8,1213.34 1531.39,1213.34 1531.98,1213.34 1532.56,1213.34 1533.15,1213.34 1533.73,1213.34 1534.32,1213.34 1534.91,1213.34 1535.49,1213.34 1536.08,1213.34 1536.67,1213.34 1537.25,1213.34 1537.84,1213.34 1538.43,1213.34 1539.01,1213.34 1539.6,1213.34 1540.19,1213.34 1540.77,1213.34 1541.36,1213.34 1541.94,1213.34 1542.53,1213.34 1543.12,1213.34 1543.7,1213.34 1544.29,1213.34 1544.88,1213.34 1545.46,1213.34 1546.05,1213.34 1546.64,1213.34 1547.22,1213.34 1547.81,1213.34 1548.4,1213.34 1548.98,1213.34 1549.57,1213.34 1550.15,1213.34 1550.74,1213.34 1551.33,1213.34 1551.91,1213.34 1552.5,1213.34 1553.09,1213.34 1553.67,1213.34 1554.26,1213.34 1554.85,1213.34 1555.43,1213.34 1556.02,1213.34 1556.6,1213.34 1557.19,1213.34 1557.78,1213.34 1558.36,1213.34 1558.95,1213.34 1559.54,1213.34 1560.12,1213.34 1560.71,1213.34 1561.3,1213.34 1561.88,1213.34 1562.47,1213.34 1563.06,1213.34 1563.64,1213.34 1564.23,1213.34 1564.81,1213.34 1565.4,1213.34 1565.99,1213.34 1566.57,1213.34 1567.16,1213.34 1567.75,1213.34 1568.33,1213.34 1568.92,1213.34 1569.51,1213.34 1570.09,1213.34 1570.68,1213.34 1571.27,1213.34 1571.85,1213.34 1572.44,1213.34 1573.02,1213.34 1573.61,1213.34 1574.2,1213.34 1574.78,1213.34 1575.37,1213.34 1575.96,1213.34 1576.54,1213.34 1577.13,1213.34 1577.72,1213.34 1578.3,1213.34 1578.89,1213.34 1579.47,1213.34 1580.06,1213.34 1580.65,1213.34 1581.23,1213.34 1581.82,1213.34 1582.41,1213.34 1582.99,1213.34 1583.58,1213.34 1584.17,1213.34 1584.75,1213.34 1585.34,1213.34 1585.93,1213.34 1586.51,1213.34 1587.1,1213.34 1587.68,1213.34 1588.27,1213.34 1588.86,1213.34 1589.44,1213.34 1590.03,1213.34 1590.62,1213.34 1591.2,1213.34 1591.79,1213.34 1592.38,1213.34 1592.96,1213.34 1593.55,1213.34 1594.14,1213.34 1594.72,1213.34 1595.31,1213.34 1595.89,1213.34 1596.48,1213.34 1597.07,1213.34 1597.65,1213.34 1598.24,1213.34 1598.83,1213.34 1599.41,1213.34 1600,1213.34 1600.59,1213.34 1601.17,1213.34 1601.76,1213.34 1602.34,1213.34 1602.93,1213.34 1603.52,1213.34 1604.1,1213.34 1604.69,1213.34 1605.28,1213.34 1605.86,1213.34 1606.45,1213.34 1607.04,1213.34 1607.62,1213.34 1608.21,1213.34 1608.8,1213.34 1609.38,1213.34 1609.97,1213.34 1610.55,1213.34 1611.14,1213.34 1611.73,1213.34 1612.31,1213.34 1612.9,1213.34 1613.49,1213.34 1614.07,1213.34 1614.66,1213.34 1615.25,1213.34 1615.83,1213.34 1616.42,1213.34 1617.01,1213.34 1617.59,1213.34 1618.18,1213.34 1618.76,1213.34 1619.35,1213.34 1619.94,1213.34 1620.52,1213.34 1621.11,1213.34 1621.7,1213.34 1622.28,1213.34 1622.87,1213.34 1623.46,1213.34 1624.04,1213.34 1624.63,1213.34 1625.22,1213.34 1625.8,1213.34 1626.39,1213.34 1626.97,1213.34 1627.56,1213.34 1628.15,1213.34 1628.73,1213.34 1629.32,1213.34 1629.91,1213.34 1630.49,1213.34 1631.08,1213.34 1631.67,1213.34 1632.25,1213.34 1632.84,1213.34 1633.42,1213.34 1634.01,1213.34 1634.6,1213.34 1635.18,1213.34 1635.77,1213.34 1636.36,1213.34 1636.94,1213.34 1637.53,1213.34 1638.12,1213.34 1638.7,1213.34 1639.29,1213.34 1639.88,1213.34 1640.46,1213.34 1641.05,1213.34 1641.63,1213.34 1642.22,1213.34 1642.81,1213.34 1643.39,1213.34 1643.98,1213.34 1644.57,1213.34 1645.15,1213.34 1645.74,1213.34 1646.33,1213.34 1646.91,1213.34 1647.5,1213.34 1648.09,1213.34 1648.67,1213.34 1649.26,1213.34 1649.84,1213.34 1650.43,1213.34 1651.02,1213.34 1651.6,1213.34 1652.19,1213.34 1652.78,1213.34 1653.36,1213.34 1653.95,1213.34 1654.54,1213.34 1655.12,1213.34 1655.71,1213.34 1656.29,1213.34 1656.88,1213.34 1657.47,1213.34 1658.05,1213.34 1658.64,1213.34 1659.23,1213.34 1659.81,1213.34 1660.4,1213.34 1660.99,1213.34 1661.57,1213.34 1662.16,1213.34 1662.75,1213.34 1663.33,1213.34 1663.92,1213.34 1664.5,1213.34 1665.09,1213.34 1665.68,1213.34 1666.26,1213.34 1666.85,1213.34 1667.44,1213.34 1668.02,1213.34 1668.61,1213.34 1669.2,1213.34 1669.78,1213.34 1670.37,1213.34 1670.96,1213.34 1671.54,1213.34 1672.13,1213.34 1672.71,1213.34 1673.3,1213.34 1673.89,1213.34 1674.47,1213.34 1675.06,1213.34 1675.65,1213.34 1676.23,1213.34 1676.82,1213.34 1677.41,1213.34 1677.99,1213.34 1678.58,1213.34 1679.17,1213.34 1679.75,1213.34 1680.34,1213.34 1680.92,1213.34 1681.51,1213.34 1682.1,1213.34 1682.68,1213.34 1683.27,1213.34 1683.86,1213.34 1684.44,1213.34 1685.03,1213.34 1685.62,1213.34 1686.2,1213.34 1686.79,1213.34 1687.37,1213.34 1687.96,1213.34 1688.55,1213.34 1689.13,1213.34 1689.72,1213.34 1690.31,1213.34 1690.89,1213.34 1691.48,1213.34 1692.07,1213.34 1692.65,1213.34 1693.24,1213.34 1693.83,1213.34 1694.41,1213.34 1695,1213.34 1695.58,1213.34 1696.17,1213.34 1696.76,1213.34 1697.34,1213.34 1697.93,1213.34 1698.52,1213.34 1699.1,1213.34 1699.69,1213.34 1700.28,1213.34 1700.86,1213.34 1701.45,1213.34 1702.04,1213.34 1702.62,1213.34 1703.21,1213.34 1703.79,1213.34 1704.38,1213.34 1704.97,1213.34 1705.55,1213.34 1706.14,1213.34 1706.73,1213.34 1707.31,1213.34 1707.9,1213.34 1708.49,1213.34 1709.07,1213.34 1709.66,1213.34 1710.24,1213.34 1710.83,1213.34 1711.42,1213.34 1712,1213.34 1712.59,1213.34 1713.18,1213.34 1713.76,1213.34 1714.35,1213.34 1714.94,1213.34 1715.52,1213.34 1716.11,1213.34 1716.7,1213.34 1717.28,1213.34 1717.87,1213.34 1718.45,1213.34 1719.04,1213.34 1719.63,1213.34 1720.21,1213.34 1720.8,1213.34 1721.39,1213.34 1721.97,1213.34 1722.56,1213.34 1723.15,1213.34 1723.73,1213.34 1724.32,1213.34 1724.91,1213.34 1725.49,1213.34 1726.08,1213.34 1726.66,1213.34 1727.25,1213.34 1727.84,1213.34 1728.42,1213.34 1729.01,1213.34 1729.6,1213.34 1730.18,1213.34 1730.77,1213.34 1731.36,1213.34 1731.94,1213.34 1732.53,1213.34 1733.11,1213.34 1733.7,1213.34 1734.29,1213.34 1734.87,1213.34 1735.46,1213.34 1736.05,1213.34 1736.63,1213.34 1737.22,1213.34 1737.81,1213.34 1738.39,1213.34 1738.98,1213.34 1739.57,1213.34 1740.15,1213.34 1740.74,1213.34 1741.32,1213.34 1741.91,1213.34 1742.5,1213.34 1743.08,1213.34 1743.67,1213.34 1744.26,1213.34 1744.84,1213.34 1745.43,1213.34 1746.02,1213.34 1746.6,1213.34 1747.19,1213.34 1747.78,1213.34 1748.36,1213.34 1748.95,1213.34 1749.53,1213.34 1750.12,1213.34 1750.71,1213.34 1751.29,1213.34 1751.88,1213.34 1752.47,1213.34 1753.05,1213.34 1753.64,1213.34 1754.23,1213.34 1754.81,1213.34 1755.4,1213.34 1755.99,1213.34 1756.57,1213.34 1757.16,1213.34 1757.74,1213.34 1758.33,1213.34 1758.92,1213.34 1759.5,1213.34 1760.09,1213.34 1760.68,1213.34 1761.26,1213.34 1761.85,1213.34 1762.44,1213.34 1763.02,1213.34 1763.61,1213.34 1764.19,1213.34 1764.78,1213.34 1765.37,1213.34 1765.95,1213.34 1766.54,1213.34 1767.13,1213.34 1767.71,1213.34 1768.3,1213.34 1768.89,1213.34 1769.47,1213.34 1770.06,1213.34 1770.65,1213.34 1771.23,1213.34 1771.82,1213.34 1772.4,1213.34 1772.99,1213.34 1773.58,1213.34 1774.16,1213.34 1774.75,1213.34 1775.34,1213.34 1775.92,1213.34 1776.51,1213.34 1777.1,1213.34 1777.68,1213.34 1778.27,1213.34 1778.86,1213.34 1779.44,1213.34 1780.03,1213.34 1780.61,1213.34 1781.2,1213.34 1781.79,1213.34 1782.37,1213.34 1782.96,1213.34 1783.55,1213.34 1784.13,1213.34 1784.72,1213.34 1785.31,1213.34 1785.89,1213.34 1786.48,1213.34 1787.06,1213.34 1787.65,1213.34 1788.24,1213.34 1788.82,1213.34 1789.41,1213.34 1790,1213.34 1790.58,1213.34 1791.17,1213.34 1791.76,1213.34 1792.34,1213.34 1792.93,1213.34 1793.52,1213.34 1794.1,1213.34 1794.69,1213.34 1795.27,1213.34 1795.86,1213.34 1796.45,1213.34 1797.03,1213.34 1797.62,1213.34 1798.21,1213.34 1798.79,1213.34 1799.38,1213.34 1799.97,1213.34 1800.55,1213.34 1801.14,1213.34 1801.73,1213.34 1802.31,1213.34 1802.9,1213.34 1803.48,1213.34 1804.07,1213.34 1804.66,1213.34 1805.24,1213.34 1805.83,1213.34 1806.42,1213.34 1807,1213.34 1807.59,1213.34 1808.18,1213.34 1808.76,1213.34 1809.35,1213.34 1809.94,1213.34 1810.52,1213.34 1811.11,1213.34 1811.69,1213.34 1812.28,1213.34 1812.87,1213.34 1813.45,1213.34 1814.04,1213.34 1814.63,1213.34 1815.21,1213.34 1815.8,1213.34 1816.39,1213.34 1816.97,1213.34 1817.56,1213.34 1818.14,1213.34 1818.73,1213.34 1819.32,1213.34 1819.9,1213.34 1820.49,1213.34 1821.08,1213.34 1821.66,1213.34 1822.25,1213.34 1822.84,1213.34 1823.42,1213.34 1824.01,1213.34 1824.6,1213.34 1825.18,1213.34 1825.77,1213.34 1826.35,1213.34 1826.94,1213.34 1827.53,1213.34 1828.11,1213.34 1828.7,1213.34 1829.29,1213.34 1829.87,1213.34 1830.46,1213.34 1831.05,1213.34 1831.63,1213.34 1832.22,1213.34 1832.81,1213.34 1833.39,1213.34 1833.98,1213.34 1834.56,1213.34 1835.15,1213.34 1835.74,1213.34 1836.32,1213.34 1836.91,1213.34 1837.5,1213.34 1838.08,1213.34 1838.67,1213.34 1839.26,1213.34 1839.84,1213.34 1840.43,1213.34 1841.01,1213.34 1841.6,1213.34 1842.19,1213.34 1842.77,1213.34 1843.36,1213.34 1843.95,1213.34 1844.53,1213.34 1845.12,1213.34 1845.71,1213.34 1846.29,1213.34 1846.88,1213.34 1847.47,1213.34 1848.05,1213.34 1848.64,1213.34 1849.22,1213.34 1849.81,1213.34 1850.4,1213.34 1850.98,1213.34 1851.57,1213.34 1852.16,1213.34 1852.74,1213.34 1853.33,1213.34 1853.92,1213.34 1854.5,1213.34 1855.09,1213.34 1855.68,1213.34 1856.26,1213.34 1856.85,1213.34 1857.43,1213.34 1858.02,1213.34 1858.61,1213.34 1859.19,1213.34 1859.78,1213.34 1860.37,1213.34 1860.95,1213.34 1861.54,1213.34 1862.13,1213.34 1862.71,1213.34 1863.3,1213.34 1863.88,1213.34 1864.47,1213.34 1865.06,1213.34 1865.64,1213.34 1866.23,1213.34 1866.82,1213.34 1867.4,1213.34 1867.99,1213.34 1868.58,1213.34 1869.16,1213.34 1869.75,1213.34 1870.34,1213.34 1870.92,1213.34 1871.51,1213.34 1872.09,1213.34 1872.68,1213.34 1873.27,1213.34 1873.85,1213.34 1874.44,1213.34 1875.03,1213.34 1875.61,1213.34 1876.2,1213.34 1876.79,1213.34 1877.37,1213.34 1877.96,1213.34 1878.55,1213.34 1879.13,1213.34 1879.72,1213.34 1880.3,1213.34 1880.89,1213.34 1881.48,1213.34 1882.06,1213.34 1882.65,1213.34 1883.24,1213.34 1883.82,1213.34 1884.41,1213.34 1885,1213.34 1885.58,1213.34 1886.17,1213.34 1886.76,1213.34 1887.34,1213.34 1887.93,1213.34 1888.51,1213.34 1889.1,1213.34 1889.69,1213.34 1890.27,1213.34 1890.86,1213.34 1891.45,1213.34 1892.03,1213.34 1892.62,1213.34 1893.21,1213.34 1893.79,1213.34 1894.38,1213.34 1894.96,1213.34 1895.55,1213.34 1896.14,1213.34 1896.72,1213.34 1897.31,1213.34 1897.9,1213.34 1898.48,1213.34 1899.07,1213.34 1899.66,1213.34 1900.24,1213.34 1900.83,1213.34 1901.42,1213.34 1902,1213.34 1902.59,1213.34 1903.17,1213.34 1903.76,1213.34 1904.35,1213.34 1904.93,1213.34 1905.52,1213.34 1906.11,1213.34 1906.69,1213.34 1907.28,1213.34 1907.87,1213.34 1908.45,1213.34 1909.04,1213.34 1909.63,1213.34 1910.21,1213.34 1910.8,1213.34 1911.38,1213.34 1911.97,1213.34 1912.56,1213.34 1913.14,1213.34 1913.73,1213.34 1914.32,1213.34 1914.9,1213.34 1915.49,1213.34 1916.08,1213.34 1916.66,1213.34 1917.25,1213.34 1917.83,1213.34 1918.42,1213.34 1919.01,1213.34 1919.59,1213.34 1920.18,1213.34 1920.77,1213.34 1921.35,1213.34 1921.94,1213.34 1922.53,1213.34 1923.11,1213.34 1923.7,1213.34 1924.29,1213.34 1924.87,1213.34 1925.46,1213.34 1926.04,1213.34 1926.63,1213.34 1927.22,1213.34 1927.8,1213.34 1928.39,1213.34 1928.98,1213.34 1929.56,1213.34 1930.15,1213.34 1930.74,1213.34 1931.32,1213.34 1931.91,1213.34 1932.5,1213.34 1933.08,1213.34 1933.67,1213.34 1934.25,1213.34 1934.84,1213.34 1935.43,1213.34 1936.01,1213.34 1936.6,1213.34 1937.19,1213.34 1937.77,1213.34 1938.36,1213.34 1938.95,1213.34 1939.53,1213.34 1940.12,1213.34 1940.71,1213.34 1941.29,1213.34 1941.88,1213.34 1942.46,1213.34 1943.05,1213.34 1943.64,1213.34 1944.22,1213.34 1944.81,1213.34 1945.4,1213.34 1945.98,1213.34 1946.57,1213.34 1947.16,1213.34 1947.74,1213.34 1948.33,1213.34 1948.91,1213.34 1949.5,1213.34 1950.09,1213.34 1950.67,1213.34 1951.26,1213.34 1951.85,1213.34 1952.43,1213.34 1953.02,1213.34 1953.61,1213.34 1954.19,1213.34 1954.78,1213.34 1955.37,1213.34 1955.95,1213.34 1956.54,1213.34 1957.12,1213.34 1957.71,1213.34 1958.3,1213.34 1958.88,1213.34 1959.47,1213.34 1960.06,1213.34 1960.64,1213.34 1961.23,1213.34 1961.82,1213.34 1962.4,1213.34 1962.99,1213.34 1963.58,1213.34 1964.16,1213.34 1964.75,1213.34 1965.33,1213.34 1965.92,1213.34 1966.51,1213.34 1967.09,1213.34 1967.68,1213.34 1968.27,1213.34 1968.85,1213.34 1969.44,1213.34 1970.03,1213.34 1970.61,1213.34 1971.2,1213.34 1971.78,1213.34 1972.37,1213.34 1972.96,1213.34 1973.54,1213.34 1974.13,1213.34 1974.72,1213.34 1975.3,1213.34 1975.89,1213.34 1976.48,1213.34 1977.06,1213.34 1977.65,1213.34 1978.24,1213.34 1978.82,1213.34 1979.41,1213.34 1979.99,1213.34 1980.58,1213.34 1981.17,1213.34 1981.75,1213.34 1982.34,1213.34 1982.93,1213.34 1983.51,1213.34 1984.1,1213.34 1984.69,1213.34 1985.27,1213.34 1985.86,1213.34 1986.45,1213.34 1987.03,1213.34 1987.62,1213.34 1988.2,1213.34 1988.79,1213.34 1989.38,1213.34 1989.96,1213.34 1990.55,1213.34 1991.14,1213.34 1991.72,1213.34 1992.31,1213.34 1992.9,1213.34 1993.48,1213.34 1994.07,1213.34 1994.65,1213.34 1995.24,1213.34 1995.83,1213.34 1996.41,1213.34 1997,1213.34 1997.59,1213.34 1998.17,1213.34 1998.76,1213.34 1999.35,1213.34 1999.93,1213.34 2000.52,1213.34 2001.11,1213.34 2001.69,1213.34 2002.28,1213.34 2002.86,1213.34 2003.45,1213.34 2004.04,1213.34 2004.62,1213.34 2005.21,1213.34 2005.8,1213.34 2006.38,1213.34 2006.97,1213.34 2007.56,1213.34 2008.14,1213.34 2008.73,1213.34 2009.32,1213.34 2009.9,1213.34 2010.49,1213.34 2011.07,1213.34 2011.66,1213.34 2012.25,1213.34 2012.83,1213.34 2013.42,1213.34 2014.01,1213.34 2014.59,1213.34 2015.18,1213.34 2015.77,1213.34 2016.35,1213.34 2016.94,1213.34 2017.53,1213.34 2018.11,1213.34 2018.7,1213.34 2019.28,1213.34 2019.87,1213.34 2020.46,1213.34 2021.04,1213.34 2021.63,1213.34 2022.22,1213.34 2022.8,1213.34 2023.39,1213.34 2023.98,1213.34 2024.56,1213.34 2025.15,1213.34 2025.73,1213.34 2026.32,1213.34 2026.91,1213.34 2027.49,1213.34 2028.08,1213.34 2028.67,1213.34 2029.25,1213.34 2029.84,1213.34 2030.43,1213.34 2031.01,1213.34 2031.6,1213.34 2032.19,1213.34 2032.77,1213.34 2033.36,1213.34 2033.94,1213.34 2034.53,1213.34 2035.12,1213.34 2035.7,1213.34 2036.29,1213.34 2036.88,1213.34 2037.46,1213.34 2038.05,1213.34 2038.64,1213.34 2039.22,1213.34 2039.81,1213.34 2040.4,1213.34 2040.98,1213.34 2041.57,1213.34 2042.15,1213.34 2042.74,1213.34 2043.33,1213.34 2043.91,1213.34 2044.5,1213.34 2045.09,1213.34 2045.67,1213.34 2046.26,1213.34 2046.85,1213.34 2047.43,1213.34 2048.02,1213.34 2048.6,1213.34 2049.19,1213.34 2049.78,1213.34 2050.36,1213.34 2050.95,1213.34 2051.54,1213.34 2052.12,1213.34 2052.71,1213.34 2053.3,1213.34 2053.88,1213.34 2054.47,1213.34 2055.06,1213.34 2055.64,1213.34 2056.23,1213.34 2056.81,1213.34 2057.4,1213.34 2057.99,1213.34 2058.57,1213.34 2059.16,1213.34 2059.75,1213.34 2060.33,1213.34 2060.92,1213.34 2061.51,1213.34 2062.09,1213.34 2062.68,1213.34 2063.27,1213.34 2063.85,1213.34 2064.44,1213.34 2065.02,1213.34 2065.61,1213.34 2066.2,1213.34 2066.78,1213.34 2067.37,1213.34 2067.96,1213.34 2068.54,1213.34 2069.13,1213.34 2069.72,1213.34 2070.3,1213.34 2070.89,1213.34 2071.48,1213.34 2072.06,1213.34 2072.65,1213.34 2073.23,1213.34 2073.82,1213.34 2074.41,1213.34 2074.99,1213.34 2075.58,1213.34 2076.17,1213.34 2076.75,1213.34 2077.34,1213.34 2077.93,1213.34 2078.51,1213.34 2079.1,1213.34 2079.68,1213.34 2080.27,1213.34 2080.86,1213.34 2081.44,1213.34 2082.03,1213.34 2082.62,1213.34 2083.2,1213.34 2083.79,1213.34 2084.38,1213.34 2084.96,1213.34 2085.55,1213.34 2086.14,1213.34 2086.72,1213.34 2087.31,1213.34 2087.89,1213.34 2088.48,1213.34 2089.07,1213.34 2089.65,1213.34 2090.24,1213.34 2090.83,1213.34 2091.41,1213.34 2092,1213.34 2092.59,1213.34 2093.17,1213.34 2093.76,1213.34 2094.35,1213.34 2094.93,1213.34 2095.52,1213.34 2096.1,1213.34 2096.69,1213.34 2097.28,1213.34 2097.86,1213.34 2098.45,1213.34 2099.04,1213.34 2099.62,1213.34 2100.21,1213.34 2100.8,1213.34 2101.38,1213.34 2101.97,1213.34 2102.55,1213.34 2103.14,1213.34 2103.73,1213.34 2104.31,1213.34 2104.9,1213.34 2105.49,1213.34 2106.07,1213.34 2106.66,1213.34 2107.25,1213.34 2107.83,1213.34 2108.42,1213.34 2109.01,1213.34 2109.59,1213.34 2110.18,1213.34 2110.76,1213.34 2111.35,1213.34 2111.94,1213.34 2112.52,1213.34 2113.11,1213.34 2113.7,1213.34 2114.28,1213.34 2114.87,1213.34 2115.46,1213.34 2116.04,1213.34 2116.63,1213.34 2117.22,1213.34 2117.8,1213.34 2118.39,1213.34 2118.97,1213.34 2119.56,1213.34 2120.15,1213.34 2120.73,1213.34 2121.32,1213.34 2121.91,1213.34 2122.49,1213.34 2123.08,1213.34 2123.67,1213.34 2124.25,1213.34 2124.84,1213.34 2125.42,1213.34 2126.01,1213.34 2126.6,1213.34 2127.18,1213.34 2127.77,1213.34 2128.36,1213.34 2128.94,1213.34 2129.53,1213.34 2130.12,1213.34 2130.7,1213.34 2131.29,1213.34 2131.88,1213.34 2132.46,1213.34 2133.05,1213.34 2133.63,1213.34 2134.22,1213.34 2134.81,1213.34 2135.39,1213.34 2135.98,1213.34 2136.57,1213.34 2137.15,1213.34 2137.74,1213.34 2138.33,1213.34 2138.91,1213.34 2139.5,1213.34 2140.09,1213.34 2140.67,1213.34 2141.26,1213.34 2141.84,1213.34 2142.43,1213.34 2143.02,1213.34 2143.6,1213.34 2144.19,1213.34 2144.78,1213.34 2145.36,1213.34 2145.95,1213.34 2146.54,1213.34 2147.12,1213.34 2147.71,1213.34 2148.3,1213.34 2148.88,1213.34 2149.47,1213.34 2150.05,1213.34 2150.64,1213.34 2151.23,1213.34 2151.81,1213.34 2152.4,1213.34 2152.99,1213.34 2153.57,1213.34 2154.16,1213.34 2154.75,1213.34 2155.33,1213.34 2155.92,1213.34 2156.5,1213.34 2157.09,1213.34 2157.68,1213.34 2158.26,1213.34 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.6,1194.43 1399.13,899.083 \"/>\n<polyline clip-path=\"url(#clip432)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1231.71 985.439,1194.43 2158.26,1194.43 2158.26,1231.71 985.439,1231.71 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip430)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip430)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip433\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip430)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip430)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip430)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip433)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-2642.16 162.673,-3872.82 163.232,-4976.07 163.792,-5936.37 164.351,-5613.28 164.91,-6539.54 165.469,-7343.15 166.029,-7040.96 166.588,-7775.63 167.147,-8441.31 167.706,-9042.48 168.266,-9583.3 168.825,-10067.7 169.384,-9721.44 169.943,-10138.4 170.503,-10507.6 171.062,-10814.6 171.621,-10494.5 172.18,-10732.8 172.74,-10957.5 173.299,-10654.9 173.858,-10821.9 174.417,-10547.1 174.977,-10677.9 175.536,-10789.6 176.095,-10875.6 176.655,-10924.9 177.214,-10960.4 177.773,-10677.1 178.332,-10677.6 178.892,-10649 179.451,-10616.5 180.01,-10568.8 180.569,-9857.71 181.129,-9820.12 181.688,-9770.18 182.247,-9524.93 182.806,-9118.07 183.366,-8904.45 183.925,-8831.06 184.484,-8475.88 185.043,-8399.36 185.603,-8067.27 186.162,-7736.11 186.721,-7542.73 187.28,-7461 187.84,-7368.15 188.399,-7271.02 188.958,-7166.37 189.517,-7056.02 190.077,-6683.88 190.636,-6580.7 191.195,-6483.47 191.754,-6374.85 192.314,-6042.97 192.873,-5792.68 193.432,-5699.2 193.991,-5474.8 194.551,-5257.77 195.11,-5052.6 195.669,-4910.53 196.228,-4767.46 196.788,-4622.44 197.347,-4325.84 197.906,-4137.09 198.465,-4011.15 199.025,-3749.45 199.584,-3634.56 200.143,-3517.77 200.702,-3399.72 201.262,-3329.72 201.821,-3050.51 202.38,-2948.05 202.939,-2927.61 203.499,-2856 204.058,-2785.33 204.617,-2684.3 205.176,-2619.65 205.736,-2450.28 206.295,-2352.44 206.854,-2294.93 207.413,-2202.84 207.973,-2106.69 208.532,-2008.28 209.091,-1859.27 209.65,-1775.08 210.21,-1752.69 210.769,-1669.18 211.328,-1528.07 211.887,-1340.03 212.447,-1300.68 213.006,-1174.18 213.565,-1083.39 214.124,-993.92 214.684,-908.615 215.243,-824.678 215.802,-770.528 216.361,-740.839 216.921,-643.061 217.48,-542.522 218.039,-496.061 218.598,-470.658 219.158,-309.802 219.717,-296.559 220.276,-230.933 220.835,-215.539 221.395,-132.927 221.954,-52.1353 222.513,-43.5068 223.072,-10.4624 223.632,67.9596 224.191,99.6287 224.75,107.973 225.309,160.757 225.869,171.544 226.428,245.218 226.987,290.698 227.546,337.006 228.106,361.482 228.665,364.548 229.224,407.151 229.783,408.488 230.343,452.419 230.902,536.193 231.461,571.65 232.02,607.483 232.58,619.685 233.139,649.156 233.698,659.411 234.257,634.766 234.817,665.868 235.376,678.69 235.935,691.285 236.494,681.093 237.054,735.295 237.613,712.376 238.172,727.597 238.731,723.814 239.291,682.086 239.85,682.813 240.409,680.4 240.968,678.989 241.528,714.981 242.087,736.121 242.646,737.791 243.205,736.643 243.765,697.391 244.324,737.377 244.883,740.339 245.442,741.949 246.002,744.063 246.561,746.49 247.12,804.614 247.679,840.772 248.239,858.29 248.798,925.1 249.357,936.042 249.916,981.644 250.476,974.992 251.035,949.413 251.594,959.716 252.153,970.705 252.713,979.538 253.272,956.609 253.831,933.802 254.39,981.72 254.95,973.416 255.509,948.851 256.068,927.146 256.627,924.7 257.187,921.6 257.746,919.844 258.305,882.305 258.864,901.341 259.424,919.375 259.983,900.721 260.542,950.824 261.101,960.354 261.661,972.324 262.22,985.517 262.779,983.852 263.338,1014.48 263.898,1028.72 264.457,1005.46 265.016,1000.71 265.575,996.029 266.135,1010.04 266.694,1040.03 267.253,1034.73 267.812,1027.92 268.372,1006.85 268.931,1002.04 269.49,998.429 270.049,992.42 270.609,1038.05 271.168,1016.77 271.727,1010.32 272.286,1022.27 272.846,1050.27 273.405,1096.09 273.964,1065.98 274.523,1075.14 275.083,1063.63 275.642,1054.68 276.201,1068.47 276.76,1076.51 277.32,1085.91 277.879,1060.09 278.438,1055.02 278.997,1031.52 279.557,1024.07 280.116,1035.94 280.675,995.847 281.234,992.181 281.794,1022.79 282.353,1030.97 282.912,1039.93 283.471,1034 284.031,1029.82 284.59,1038.11 285.149,1048.49 285.708,1042.24 286.268,1020.12 286.827,1032.23 287.386,1028.53 287.945,1040.13 288.505,1037.24 289.064,1050.21 289.623,1043.62 290.182,1051.37 290.742,1047.85 291.301,1022.7 291.86,1031.28 292.419,1038.93 292.979,1049.9 293.538,1025.89 294.097,1051.32 294.656,1076.99 295.216,1072.3 295.775,1080.57 296.334,1119.66 296.893,1107.17 297.453,1048.82 298.012,1092.3 298.571,1065.18 299.13,1053.65 299.69,1029.44 300.249,1026.4 300.808,1021.43 301.368,1013.44 301.927,1005.8 302.486,1030.88 303.045,1006.74 303.605,1000.62 304.164,1023.14 304.723,998.484 305.282,974.467 305.842,949.677 306.401,961.273 306.96,938.09 307.519,948.607 308.079,929.915 308.638,926.233 309.197,922.919 309.756,901.129 310.316,884.093 310.875,833.916 311.434,839.447 311.993,841.372 312.553,857.837 313.112,854.817 313.671,871.851 314.23,859.346 314.79,878.964 315.349,816.759 315.908,800.5 316.467,800.504 317.027,804.967 317.586,825.177 318.145,830.144 318.704,846.51 319.264,866.121 319.823,898.42 320.382,883.445 320.941,899.73 321.501,897.197 322.06,914.547 322.619,894.706 323.178,909.445 323.738,887.39 324.297,888.398 324.856,869.701 325.415,884.962 325.975,888.397 326.534,903.086 327.093,888.382 327.652,887.58 328.212,905.762 328.771,905.18 329.33,937.137 329.889,898.888 330.449,914.066 331.008,907.401 331.567,937.134 332.126,950.153 332.686,947.164 333.245,939.837 333.804,952.79 334.363,982.663 334.923,956.782 335.482,950.199 336.041,962.379 336.6,972.236 337.16,967.79 337.719,946.512 338.278,959.261 338.837,951.454 339.397,977.762 339.956,973.384 340.515,1002.55 341.074,1008.56 341.634,968.929 342.193,913.551 342.752,940.051 343.311,917.541 343.871,929.749 344.43,924.902 344.989,921.559 345.548,950.708 346.108,944.543 346.667,908.584 347.226,905.146 347.785,915.202 348.345,940.868 348.904,917.09 349.463,928.521 350.022,937.405 350.582,931.415 351.141,958.147 351.7,952.373 352.259,944.162 352.819,933.757 353.378,928.254 353.937,937.099 354.496,946.891 355.056,938.923 355.615,931.61 356.174,926.014 356.733,937.576 357.293,929.84 357.852,955.993 358.411,934.071 358.97,943.759 359.53,936.807 360.089,916.647 360.648,893.83 361.207,857.255 361.767,856.095 362.326,873.082 362.885,818.894 363.444,850.289 364.004,862.352 364.563,859.115 365.122,871.307 365.681,882.146 366.241,882.012 366.8,875.97 367.359,872.973 367.918,901.286 368.478,878.624 369.037,842.363 369.596,840.833 370.155,886.966 370.715,897.485 371.274,912.51 371.833,908.813 372.392,899.609 372.952,877.48 373.511,889.68 374.07,869.532 374.629,869.065 375.189,864.848 375.748,876.813 376.307,855.576 376.866,852.649 377.426,866.199 377.985,846.794 378.544,872.267 379.103,897.986 379.663,906.491 380.222,912.089 380.781,920.691 381.34,913.177 381.9,889.569 382.459,871.58 383.018,837.052 383.577,833.878 384.137,831.689 384.696,831.586 385.255,844.32 385.814,840.793 386.374,835.711 386.933,848.534 387.492,879.671 388.051,860.564 388.611,855.631 389.17,868.173 389.729,899.552 390.288,895.579 390.848,934.914 391.407,945.86 391.966,953.444 392.525,944.058 393.085,951.325 393.644,927.415 394.203,906.256 394.762,882.974 395.322,894.247 395.881,875.756 396.44,869.452 396.999,849.797 397.559,831.326 398.118,829.893 398.677,792.112 399.236,837.694 399.796,819.145 400.355,829.979 400.914,842.335 401.473,839.501 402.033,833.838 402.592,828.299 403.151,771.719 403.71,773.053 404.27,784.494 404.829,821.941 405.388,804.548 405.947,832.652 406.507,829.686 407.066,792.089 407.625,792.41 408.184,791.863 408.744,776.238 409.303,778.214 409.862,792.366 410.421,759.507 410.981,775.498 411.54,774.688 412.099,743.549 412.658,745.016 413.218,729.913 413.777,732.056 414.336,718.522 414.895,770.842 415.455,740.671 416.014,763.165 416.573,809.791 417.132,841.336 417.692,803.725 418.251,802.846 418.81,799.125 419.369,813.619 419.929,795.711 420.488,809.179 421.047,808.186 421.606,758.957 422.166,760.164 422.725,761.391 423.284,775.692 423.843,775.665 424.403,790.775 424.962,752.609 425.521,766.623 426.08,751.79 426.64,766.81 427.199,749.74 427.758,765.573 428.318,764.823 428.877,780.343 429.436,791.322 429.995,773.129 430.555,739.142 431.114,740.735 431.673,757.103 432.232,790.771 432.792,788.03 433.351,768.53 433.91,782.276 434.469,813.878 435.029,814.866 435.588,792.473 436.147,774.253 436.706,789.947 437.266,816.376 437.825,843.635 438.384,888.17 438.943,881.667 439.503,871.727 440.062,867.849 440.621,845.746 441.18,843.671 441.74,837.671 442.299,817.058 442.858,815.865 443.417,812.34 443.977,807.681 444.536,820.076 445.095,868.548 445.654,847.993 446.214,829.301 446.773,822.896 447.332,800.991 447.891,795.434 448.451,808.037 449.01,769.334 449.569,733.53 450.128,732.515 450.688,746.908 451.247,714.543 451.806,666.572 452.365,718.705 452.925,734.549 453.484,769.343 454.043,798.866 454.602,796.777 455.162,810.178 455.721,820.268 456.28,815.679 456.839,809.974 457.399,791.845 457.958,821.36 458.517,801.656 459.076,832.732 459.636,827.693 460.195,825 460.754,799.054 461.313,800.485 461.873,814.749 462.432,778.038 462.991,792.091 463.55,788.611 464.11,738.236 464.669,755.611 465.228,739.564 465.787,773.057 466.347,756.637 466.906,736.005 467.465,706.187 468.024,708.004 468.584,677.338 469.143,699.792 469.702,705.406 470.261,721.597 470.821,755.648 471.38,771.436 471.939,753.15 472.498,782.977 473.058,796.967 473.617,776.112 474.176,774.694 474.735,807.203 475.295,805.157 475.854,802.916 476.413,801.121 476.972,814.778 477.532,813.12 478.091,791.96 478.65,772.395 479.209,775.999 479.769,774.329 480.328,754.101 480.887,733.993 481.446,748.628 482.006,748.737 482.565,747.111 483.124,729.102 483.683,714.844 484.243,716.657 484.802,702.17 485.361,720.297 485.92,720.141 486.48,719.057 487.039,719.168 487.598,706.988 488.157,726.027 488.717,712.237 489.276,699.808 489.835,687.193 490.394,706.947 490.954,724.265 491.513,722.493 492.072,690.117 492.631,725.483 493.191,761.94 493.75,746.98 494.309,764.907 494.868,781.341 495.428,810.222 495.987,823.684 496.546,815.466 497.105,826.155 497.665,837.894 498.224,827.836 498.783,804.768 499.342,816.957 499.902,795.798 500.461,786.908 501.02,781.22 501.579,759.988 502.139,737.959 502.698,736.2 503.257,700.328 503.816,731.848 504.376,748.584 504.935,747.188 505.494,734.393 506.053,752.227 506.613,749.085 507.172,780.121 507.731,775.065 508.29,785.084 508.85,750.487 509.409,716.962 509.968,714.705 510.527,716.9 511.087,715.449 511.646,704.151 512.205,687.952 512.764,705.476 513.324,707.763 513.883,692.091 514.442,709.121 515.001,707.402 515.561,739.813 516.12,708.17 516.679,705.37 517.238,670.689 517.798,692.292 518.357,705.688 518.916,676.441 519.475,676.209 520.035,678.751 520.594,698.887 521.153,700.781 521.712,701.808 522.272,701.414 522.831,687.973 523.39,705.686 523.949,691.365 524.509,625.31 525.068,648.228 525.627,686.806 526.186,689.54 526.746,727.077 527.305,745.282 527.864,746.649 528.423,745.386 528.983,713.095 529.542,715.755 530.101,718.909 530.66,720.389 531.22,717.055 531.779,715.093 532.338,747.447 532.897,744.971 533.457,731.428 534.016,730.709 534.575,730.531 535.134,716.471 535.694,735.166 536.253,686.912 536.812,673.74 537.371,677.28 537.931,728.643 538.49,698.604 539.049,685.606 539.608,673.538 540.168,659.612 540.727,709.883 541.286,725.48 541.845,742.059 542.405,740.373 542.964,756.879 543.523,722.277 544.082,737.639 544.642,770.865 545.201,751.681 545.76,750.067 546.319,750.185 546.879,795.88 547.438,825.53 547.997,807.052 548.556,799.887 549.116,795.615 549.675,777.473 550.234,775.117 550.793,773.49 551.353,787.023 551.912,780.207 552.471,745.256 553.031,746.32 553.59,730.095 554.149,746.829 554.708,759.618 555.268,727.404 555.827,694.23 556.386,684.624 556.945,686.878 557.505,689.473 558.064,691.784 558.623,675.393 559.182,662 559.742,665.551 560.301,668.315 560.86,671.212 561.419,670.683 561.979,671.782 562.538,655.452 563.097,678.115 563.656,678.598 564.216,696.138 564.775,699.435 565.334,682.335 565.893,669.813 566.453,671.154 567.012,673.517 567.571,707.391 568.13,693.933 568.69,663.568 569.249,665.312 569.808,684.153 570.367,723.217 570.927,720.566 571.486,691.122 572.045,708.373 572.604,741.473 573.164,754.435 573.723,721.899 574.282,721.94 574.841,754.577 575.401,768.968 575.96,750.266 576.519,764.874 577.078,777.727 577.638,742.921 578.197,721.432 578.756,736.699 579.315,761.658 579.875,739.188 580.434,737.636 580.993,735.661 581.552,704.053 582.112,690.029 582.671,693.39 583.23,709.982 583.789,742.7 584.349,740.352 584.908,770.202 585.467,784.16 586.026,815.63 586.586,810.717 587.145,802.602 587.704,794.728 588.263,743.639 588.823,737.489 589.382,720.075 589.941,684.74 590.5,686.387 591.06,738.491 591.619,752.279 592.178,747.594 592.737,778.231 593.297,789.877 593.856,786.418 594.415,783.309 594.974,812.63 595.534,823.94 596.093,821.231 596.652,813.232 597.211,824.055 597.771,803.139 598.33,811.428 598.889,788.922 599.448,781.238 600.008,761.89 600.567,758.56 601.126,725.11 601.685,706.473 602.245,689.985 602.804,659.594 603.363,675.541 603.922,675.286 604.482,656.334 605.041,641.052 605.6,645.291 606.159,646.586 606.719,632.301 607.278,636.604 607.837,689.726 608.396,685.811 608.956,669.474 609.515,654.458 610.074,673.493 610.633,658.056 611.193,646.773 611.752,631.592 612.311,614.445 612.87,582.123 613.43,573.383 613.989,579.939 614.548,587.34 615.107,583.047 615.667,603.181 616.226,623.459 616.785,627.313 617.344,665.244 617.904,684.885 618.463,685.908 619.022,686.208 619.581,689.324 620.141,722.727 620.7,703.062 621.259,684.768 621.818,667.496 622.378,655.306 622.937,645.111 623.496,626.281 624.055,618.333 624.615,652.936 625.174,670.578 625.733,655.443 626.292,678.516 626.852,713.092 627.411,711.341 627.97,742.759 628.529,706.755 629.089,707.167 629.648,737.837 630.207,719.743 630.766,738.039 631.326,735.145 631.885,732.95 632.444,715.289 633.003,714.442 633.563,695.57 634.122,694.525 634.681,712.968 635.24,727.18 635.8,738.297 636.359,721.563 636.918,693.298 637.477,677.408 638.037,727.514 638.596,729.607 639.155,743.396 639.714,741.729 640.274,757.19 640.833,739.219 641.392,786.364 641.951,733.819 642.511,730.624 643.07,744.555 643.629,726.788 644.188,755.631 644.748,753.629 645.307,753.119 645.866,781.405 646.425,747.474 646.985,763.363 647.544,764.665 648.103,759.356 648.662,771.683 649.222,765.908 649.781,745.811 650.34,761.728 650.899,757.827 651.459,754.366 652.018,733.904 652.577,763.617 653.136,745.793 653.696,744.456 654.255,721.742 654.814,723.021 655.373,736.871 655.933,752.562 656.492,734.538 657.051,720.561 657.61,733.595 658.17,714.33 658.729,699.854 659.288,700.172 659.847,685.389 660.407,699.661 660.966,719.329 661.525,685.536 662.084,729.49 662.644,696.553 663.203,726.236 663.762,754.869 664.321,734.416 664.881,765.352 665.44,763.607 665.999,725.543 666.558,708.591 667.118,704.299 667.677,703.96 668.236,719.059 668.795,718.374 669.355,698.117 669.914,696.564 670.473,663.146 671.032,663.045 671.592,665.403 672.151,667.314 672.71,654.01 673.269,673.135 673.829,606.354 674.388,612.464 674.947,665.89 675.506,631.977 676.066,665.374 676.625,685.318 677.184,720.511 677.743,685.735 678.303,700.932 678.862,713.755 679.421,681.589 679.981,713.663 680.54,695 681.099,661.887 681.658,602.791 682.218,608.348 682.777,647.366 683.336,621.361 683.895,640.362 684.455,661.016 685.014,694.41 685.573,662.355 686.132,646.388 686.692,664.211 687.251,667.478 687.81,652.173 688.369,657.236 688.929,670.436 689.488,690.372 690.047,707.557 690.606,692.134 691.166,708.396 691.725,660.74 692.284,613.398 692.843,614.614 693.403,663.583 693.962,646.713 694.521,634.486 695.08,654.249 695.64,690.466 696.199,673.252 696.758,672.041 697.317,672.738 697.877,662.174 698.436,681.762 698.995,682.876 699.554,701.206 700.114,713.791 700.673,696.655 701.232,715.074 701.791,698.537 702.351,685.087 702.91,717.59 703.469,748.73 704.028,745.091 704.588,720.129 705.147,716.423 705.706,748.109 706.265,747.918 706.825,777.998 707.384,773.683 707.943,772.548 708.502,783.88 709.062,765.705 709.621,760.521 710.18,760.492 710.739,755.373 711.299,673.565 711.858,677.81 712.417,675.527 712.976,678.891 713.536,664.089 714.095,665.954 714.654,668.717 715.213,637.076 715.773,637.58 716.332,624.528 716.891,647.684 717.45,654.603 718.01,676.092 718.569,645.587 719.128,646.516 719.687,663.729 720.247,651.918 720.806,670.578 721.365,705.287 721.924,690.092 722.484,673.118 723.043,657.873 723.602,689.976 724.161,724.374 724.721,719.404 725.28,715.286 725.839,729.378 726.398,728.871 726.958,727.884 727.517,723.574 728.076,707.867 728.635,691.402 729.195,708.897 729.754,709.927 730.313,709.847 730.872,742.799 731.432,722.619 731.991,703.175 732.55,734.816 733.109,734.737 733.669,729.349 734.228,726.087 734.787,707.345 735.346,739.248 735.906,735.91 736.465,685.84 737.024,682.791 737.583,666.269 738.143,633.109 738.702,654.213 739.261,639.92 739.82,677.048 740.38,677.253 740.939,645.272 741.498,662.792 742.057,667.521 742.617,669.431 743.176,685.896 743.735,685.006 744.294,687.417 744.854,686.267 745.413,684.569 745.972,633.242 746.531,639.155 747.091,612.918 747.65,617.719 748.209,639.042 748.768,660.846 749.328,647.42 749.887,679.564 750.446,727.544 751.005,724.702 751.565,739.495 752.124,740.081 752.683,721.007 753.242,733.986 753.802,813.032 754.361,802.625 754.92,832.501 755.479,789.342 756.039,783.013 756.598,759.106 757.157,751.51 757.716,721.028 758.276,701.451 758.835,682.116 759.394,697.027 759.953,680.876 760.513,680.447 761.072,646.506 761.631,636.578 762.19,655.869 762.75,657.829 763.309,629.826 763.868,647.414 764.427,651.048 764.987,601.742 765.546,573.389 766.105,579.312 766.664,569.697 767.224,561.574 767.783,569.129 768.342,606.568 768.901,643.281 769.461,658.181 770.02,676.595 770.579,681.251 771.138,712.981 771.698,727.808 772.257,726.691 772.816,708.568 773.375,706.446 773.935,736.745 774.494,750.86 775.053,747.909 775.612,746.577 776.172,727.849 776.731,722.393 777.29,704.754 777.849,721.113 778.409,718.168 778.968,713.798 779.527,680.747 780.086,664.305 780.646,646.725 781.205,648.844 781.764,633.809 782.323,636.603 782.883,605.767 783.442,642.075 784.001,658.913 784.56,642.496 785.12,633.71 785.679,617.315 786.238,619.675 786.797,624.535 787.357,611.377 787.916,617.579 788.475,620.409 789.034,638.14 789.594,640.912 790.153,675.634 790.712,712.427 791.271,713.958 791.831,711.014 792.39,679.099 792.949,680.638 793.508,649.553 794.068,651.06 794.627,653.699 795.186,659.16 795.745,677.719 796.305,695.729 796.864,695.93 797.423,695.62 797.982,677.108 798.542,689.827 799.101,687.98 799.66,672.491 800.219,677.057 800.779,694.119 801.338,679.213 801.897,676.891 802.456,710.681 803.016,678.3 803.575,695.524 804.134,695.561 804.693,695.562 805.253,709.844 805.812,724.985 806.371,722.421 806.931,702.311 807.49,700.192 808.049,718.918 808.608,736.35 809.168,731.277 809.727,744.528 810.286,741.151 810.845,736.767 811.405,701.48 811.964,684.868 812.523,680.289 813.082,746.393 813.642,789.714 814.201,751.169 814.76,742.977 815.319,704.709 815.879,667.531 816.438,688.465 816.997,684.935 817.556,684.059 818.116,683.02 818.675,697.681 819.234,695.791 819.793,728.563 820.353,710.76 820.912,724.69 821.471,722.926 822.03,721.928 822.59,701.791 823.149,701.285 823.708,737.966 824.267,767.185 824.827,714.678 825.386,745.114 825.945,775.175 826.504,786.406 827.064,764.758 827.623,806.69 828.182,799.882 828.741,761.671 829.301,757.062 829.86,735.579 830.419,701.007 830.978,681.351 831.538,679.014 832.097,665.701 832.656,666.445 833.215,690.768 833.775,676.006 834.334,660.481 834.893,661.206 835.452,663.119 836.012,711.757 836.571,693.475 837.13,692.555 837.689,726.428 838.249,725.274 838.808,724.27 839.367,688.627 839.926,690.42 840.486,672.119 841.045,658.349 841.604,657.185 842.163,640.882 842.723,612.597 843.282,600.958 843.841,556.005 844.4,596.172 844.96,598.498 845.519,574.625 846.078,617.829 846.637,622.405 847.197,610.788 847.756,617.144 848.315,622.125 848.874,639.442 849.434,623.592 849.993,645.886 850.552,645.16 851.111,663.691 851.671,681.768 852.23,682.519 852.789,698.739 853.348,713.873 853.908,712.48 854.467,677.288 855.026,674.767 855.585,660.826 856.145,662.694 856.704,665.054 857.263,648.701 857.822,653.892 858.382,672.595 858.941,653.947 859.5,638.674 860.059,642.849 860.619,648.007 861.178,666.505 861.737,683.431 862.296,635.399 862.856,667.405 863.415,670.102 863.974,654.32 864.533,672.975 865.093,688.363 865.652,674.511 866.211,706.455 866.77,672.725 867.33,690.385 867.889,690.763 868.448,679.321 869.007,665.424 869.567,715.781 870.126,698.437 870.685,727.911 871.244,741.673 871.804,707.407 872.363,702.095 872.922,683.062 873.481,683.681 874.041,698.996 874.6,729.221 875.159,731.146 875.718,697.227 876.278,715.692 876.837,716.374 877.396,715.958 877.955,716.348 878.515,748.326 879.074,716.866 879.633,713.982 880.192,727.57 880.752,740.562 881.311,738.147 881.87,737.142 882.429,719.762 882.989,746.288 883.548,741.28 884.107,771.384 884.666,770.21 885.226,765.978 885.785,782.582 886.344,774.479 886.903,802.897 887.463,764.704 888.022,730.948 888.581,743.978 889.14,742.654 889.7,742.577 890.259,689.31 890.818,707.356 891.377,686.46 891.937,655.278 892.496,704.228 893.055,683.882 893.614,668.82 894.174,715.927 894.733,678.066 895.292,661.812 895.851,681.773 896.411,698.816 896.97,679.816 897.529,706.382 898.088,720.99 898.648,654.925 899.207,687.196 899.766,674.275 900.325,708.571 900.885,691.51 901.444,688.784 902.003,718.852 902.562,729.686 903.122,712.178 903.681,724.396 904.24,719.162 904.799,652.116 905.359,653.384 905.918,708.035 906.477,690.593 907.036,641.844 907.596,661.35 908.155,650.443 908.714,633.983 909.273,619.558 909.833,639.78 910.392,656.744 910.951,689.38 911.51,710.739 912.07,677.689 912.629,681.602 913.188,662.602 913.747,695.513 914.307,677.611 914.866,680.269 915.425,696.735 915.984,696.152 916.544,676.674 917.103,678.421 917.662,648.07 918.221,639.602 918.781,609.477 919.34,616.906 919.899,619.747 920.458,609.724 921.018,614.182 921.577,615.429 922.136,633.56 922.695,633.651 923.255,602.365 923.814,621.353 924.373,629.345 924.932,633.296 925.492,636.365 926.051,640.687 926.61,623.783 927.169,654.856 927.729,674.847 928.288,675.83 928.847,722.703 929.406,721.507 929.966,684.586 930.525,668.301 931.084,685.779 931.644,720.238 932.203,720.024 932.762,686.969 933.321,715.368 933.881,714.593 934.44,663.271 934.999,646.44 935.558,645.313 936.118,649.652 936.677,604.402 937.236,596.074 937.795,631.468 938.355,693.865 938.914,677.542 939.473,681.638 940.032,698.37 940.592,700.758 941.151,715.711 941.71,746.301 942.269,760.933 942.829,760.218 943.388,754.738 943.947,765.978 944.506,764.031 945.066,762.834 945.625,757.229 946.184,751.28 946.743,732.266 947.303,758.47 947.862,744.286 948.421,721.858 948.98,717.878 949.54,686.506 950.099,704.216 950.658,687.879 951.217,720.035 951.777,702.578 952.336,689.351 952.895,737.547 953.454,735.963 954.014,748.457 954.573,726.606 955.132,687.617 955.691,688.177 956.251,705.321 956.81,692.22 957.369,675.243 957.928,709.103 958.488,707.099 959.047,757.704 959.606,788.046 960.165,782.599 960.725,760.895 961.284,740.24 961.843,722.558 962.402,720.496 962.962,697.777 963.521,681.205 964.08,714.778 964.639,696.271 965.199,694.601 965.758,646.926 966.317,646.643 966.876,646.266 967.436,648.228 967.995,666.299 968.554,714.969 969.113,747.791 969.673,761.807 970.232,745.097 970.791,726.57 971.35,710.01 971.91,646.561 972.469,649.602 973.028,634.228 973.587,621.758 974.147,604.449 974.706,623.375 975.265,628.798 975.824,614.97 976.384,620.431 976.943,608.83 977.502,628.329 978.061,631.811 978.621,671.597 979.18,704.546 979.739,716.756 980.298,716.949 980.858,715.862 981.417,731.013 981.976,727.551 982.535,758.904 983.095,739.893 983.654,704.608 984.213,704.854 984.772,703.985 985.332,702.951 985.891,700.694 986.45,698.154 987.009,700.501 987.569,668.846 988.128,652.576 988.687,637.885 989.246,627.437 989.806,612.843 990.365,652.374 990.924,651.46 991.483,622.071 992.043,642.915 992.602,612.063 993.161,646.245 993.72,644.779 994.28,630.578 994.839,652.077 995.398,657.2 995.957,661.133 996.517,677.281 997.076,678.851 997.635,681.811 998.194,663.164 998.754,662.387 999.313,667.683 999.872,684.739 1000.43,667.837 1000.99,653.345 1001.55,686.856 1002.11,702.757 1002.67,688.236 1003.23,671.806 1003.79,656.812 1004.35,642.631 1004.91,645.103 1005.46,682.7 1006.02,665.662 1006.58,685.548 1007.14,688.97 1007.7,706.593 1008.26,669.122 1008.82,655.069 1009.38,642.875 1009.94,691.059 1010.5,673.686 1011.06,661.025 1011.62,646.225 1012.18,646.584 1012.73,684.511 1013.29,733.462 1013.85,715.665 1014.41,713.5 1014.97,714.319 1015.53,709.479 1016.09,725.661 1016.65,722.492 1017.21,669.926 1017.77,705.207 1018.33,722.139 1018.89,687.513 1019.45,705.513 1020.01,737.295 1020.56,718.147 1021.12,749.049 1021.68,748.742 1022.24,744.881 1022.8,723.477 1023.36,721.743 1023.92,717.171 1024.48,698.335 1025.04,660.687 1025.6,646.356 1026.16,679.83 1026.72,645.622 1027.28,631.537 1027.83,651.856 1028.39,651.497 1028.95,652.182 1029.51,702.533 1030.07,686.047 1030.63,699.387 1031.19,669.164 1031.75,688.891 1032.31,674.788 1032.87,627.718 1033.43,632.023 1033.99,648.502 1034.55,665.341 1035.1,648.434 1035.66,651.525 1036.22,618.21 1036.78,606.647 1037.34,614.982 1037.9,599.784 1038.46,589.059 1039.02,591.96 1039.58,597.245 1040.14,618.97 1040.7,605.714 1041.26,595.718 1041.82,630.788 1042.38,647.465 1042.93,663.325 1043.49,664.525 1044.05,664.444 1044.61,681.594 1045.17,678.438 1045.73,661.379 1046.29,662.072 1046.85,632.308 1047.41,637.033 1047.97,673.838 1048.53,674.499 1049.09,674.099 1049.65,645.901 1050.2,682.327 1050.76,716.78 1051.32,712.471 1051.88,725.599 1052.44,740.742 1053,767.798 1053.56,777.877 1054.12,757.135 1054.68,717.309 1055.24,745.689 1055.8,742.551 1056.36,724.627 1056.92,722.267 1057.48,704.144 1058.03,690.273 1058.59,689.475 1059.15,703.073 1059.71,688.824 1060.27,688.193 1060.83,641.948 1061.39,627.415 1061.95,613.662 1062.51,650.633 1063.07,651.09 1063.63,636.001 1064.19,626.041 1064.75,631.505 1065.3,630.247 1065.86,615.489 1066.42,621.292 1066.98,624.374 1067.54,615.355 1068.1,619.883 1068.66,593.373 1069.22,617.526 1069.78,636.09 1070.34,623.169 1070.9,625.524 1071.46,628.965 1072.02,632.026 1072.57,632.226 1073.13,652.167 1073.69,623.456 1074.25,644.183 1074.81,629.258 1075.37,633.223 1075.93,651.936 1076.49,654.421 1077.05,686.377 1077.61,667.054 1078.17,666.332 1078.73,653.227 1079.29,623.324 1079.85,642.073 1080.4,673.192 1080.96,658.414 1081.52,693.109 1082.08,695.446 1082.64,698.835 1083.2,712.34 1083.76,695.011 1084.32,711.858 1084.88,743.247 1085.44,771.956 1086,783.754 1086.56,823.042 1087.12,818.325 1087.67,831.239 1088.23,807.183 1088.79,782.294 1089.35,775.931 1089.91,752.564 1090.47,764.101 1091.03,759.407 1091.59,773.168 1092.15,769.481 1092.71,761.72 1093.27,740.973 1093.83,753.223 1094.39,753.763 1094.94,731.96 1095.5,775.674 1096.06,769.845 1096.62,765.634 1097.18,743.011 1097.74,756.127 1098.3,769.516 1098.86,767.066 1099.42,828.863 1099.98,818.208 1100.54,825.939 1101.1,819.936 1101.66,799.188 1102.22,809.358 1102.77,818.464 1103.33,811.175 1103.89,820.982 1104.45,812.145 1105.01,804.541 1105.57,797.325 1106.13,791.692 1106.69,813.885 1107.25,822.536 1107.81,798.991 1108.37,812.942 1108.93,837.449 1109.49,817.001 1110.04,791.336 1110.6,826.451 1111.16,831.914 1111.72,793.037 1112.28,799.749 1112.84,757.877 1113.4,723.977 1113.96,721.925 1114.52,735.882 1115.08,718.754 1115.64,747.132 1116.2,727.917 1116.76,725.359 1117.31,689.802 1117.87,689.276 1118.43,654.378 1118.99,670.242 1119.55,669.769 1120.11,638.116 1120.67,624.174 1121.23,628.471 1121.79,613.09 1122.35,565.448 1122.91,587.837 1123.47,592.404 1124.03,582.713 1124.59,603.62 1125.14,606.976 1125.7,592.512 1126.26,613.632 1126.82,615.2 1127.38,616.494 1127.94,590.554 1128.5,580.743 1129.06,572.787 1129.62,564.515 1130.18,601.365 1130.74,589.041 1131.3,593.494 1131.86,619.862 1132.41,607.271 1132.97,612.863 1133.53,615.988 1134.09,635.071 1134.65,603.308 1135.21,589.228 1135.77,593.879 1136.33,593.563 1136.89,600.644 1137.45,601.395 1138.01,620.602 1138.57,606.085 1139.13,609.199 1139.68,646.74 1140.24,616.745 1140.8,655.66 1141.36,662.295 1141.92,710.693 1142.48,724.509 1143.04,734.905 1143.6,750.165 1144.16,731.163 1144.72,774.567 1145.28,800.261 1145.84,793.27 1146.4,741.174 1146.96,768.233 1147.51,762.487 1148.07,741.453 1148.63,738.01 1149.19,735.6 1149.75,733.711 1150.31,748.947 1150.87,747.726 1151.43,728.208 1151.99,726.054 1152.55,753.598 1153.11,764.615 1153.67,712.221 1154.23,714.375 1154.78,695.331 1155.34,680.026 1155.9,680.647 1156.46,698.053 1157.02,712.84 1157.58,711.402 1158.14,696.423 1158.7,728.036 1159.26,709.633 1159.82,706.966 1160.38,707.176 1160.94,642.931 1161.5,627.901 1162.05,629.37 1162.61,633.655 1163.17,641.318 1163.73,625.527 1164.29,598.513 1164.85,588.065 1165.41,592.207 1165.97,579.8 1166.53,568.817 1167.09,580.643 1167.65,604.67 1168.21,626.249 1168.77,614.654 1169.33,632.516 1169.88,652.089 1170.44,701.707 1171,754.45 1171.56,735.961 1172.12,700.493 1172.68,714.909 1173.24,709.973 1173.8,724.896 1174.36,693.152 1174.92,664.119 1175.48,647.923 1176.04,650.094 1176.6,651.586 1177.15,656.111 1177.71,672.705 1178.27,676.168 1178.83,738.984 1179.39,735.798 1179.95,734.169 1180.51,730.067 1181.07,712.561 1181.63,693.886 1182.19,693.998 1182.75,661.744 1183.31,677.452 1183.87,708.164 1184.43,720.767 1184.98,720.749 1185.54,722.17 1186.1,738.767 1186.66,719.668 1187.22,730.067 1187.78,728.16 1188.34,755.589 1188.9,731.978 1189.46,744.283 1190.02,739.95 1190.58,722.931 1191.14,753.826 1191.7,689.495 1192.25,674.825 1192.81,676.017 1193.37,624.097 1193.93,640.979 1194.49,629.41 1195.05,647.945 1195.61,632.48 1196.17,616.959 1196.73,587.663 1197.29,674.887 1197.85,659.164 1198.41,662.449 1198.97,695.574 1199.52,678.943 1200.08,678.633 1200.64,711.817 1201.2,726.805 1201.76,755.643 1202.32,769.566 1202.88,748.11 1203.44,727.706 1204,710.294 1204.56,711.11 1205.12,707.106 1205.68,707.668 1206.24,703.281 1206.8,717.628 1207.35,654.35 1207.91,656.611 1208.47,672.638 1209.03,642.563 1209.59,628.733 1210.15,677.793 1210.71,678.918 1211.27,681.627 1211.83,681.356 1212.39,633.24 1212.95,616.57 1213.51,586.539 1214.07,591.184 1214.62,579.721 1215.18,585.123 1215.74,587.54 1216.3,592.496 1216.86,595.376 1217.42,630.895 1217.98,635.524 1218.54,703.184 1219.1,686.19 1219.66,683.964 1220.22,652.039 1220.78,655.356 1221.34,627.529 1221.89,648.246 1222.45,666.864 1223.01,684.644 1223.57,701.844 1224.13,701.331 1224.69,685.889 1225.25,685.765 1225.81,685.189 1226.37,651.872 1226.93,655.046 1227.49,622.406 1228.05,640.913 1228.61,643.309 1229.17,614.731 1229.72,585.707 1230.28,590.532 1230.84,610.023 1231.4,609.058 1231.96,631.929 1232.52,634.096 1233.08,636.95 1233.64,673.759 1234.2,659.472 1234.76,644.966 1235.32,633.698 1235.88,650.753 1236.44,624.173 1236.99,646.447 1237.55,634.837 1238.11,639.676 1238.67,672.794 1239.23,641.996 1239.79,626.238 1240.35,612.987 1240.91,616.724 1241.47,637.009 1242.03,623.823 1242.59,626.376 1243.15,648.718 1243.71,669.165 1244.26,668.943 1244.82,686.956 1245.38,700.512 1245.94,712.1 1246.5,740.288 1247.06,754.273 1247.62,732.892 1248.18,634.505 1248.74,634.748 1249.3,668.235 1249.86,671.401 1250.42,672.146 1250.98,673.953 1251.54,625.863 1252.09,691.691 1252.65,694.598 1253.21,677.283 1253.77,679.188 1254.33,694.637 1254.89,695.918 1255.45,678.213 1256.01,664.739 1256.57,679.176 1257.13,680.193 1257.69,696.471 1258.25,730.127 1258.81,744.599 1259.36,740.773 1259.92,752.234 1260.48,733.496 1261.04,729.943 1261.6,697.905 1262.16,699.981 1262.72,699.126 1263.28,714.86 1263.84,681.117 1264.4,681.654 1264.96,731.663 1265.52,745.053 1266.08,742.402 1266.63,754.416 1267.19,751.754 1267.75,718.103 1268.31,714.953 1268.87,681.062 1269.43,730.017 1269.99,694.04 1270.55,662.496 1271.11,678.784 1271.67,695.142 1272.23,709.101 1272.79,707.627 1273.35,709.488 1273.91,722.671 1274.46,722.584 1275.02,699.251 1275.58,714.585 1276.14,747.05 1276.7,777.613 1277.26,757.351 1277.82,754.451 1278.38,748.887 1278.94,748.241 1279.5,746.657 1280.06,714.048 1280.62,713.057 1281.18,711.527 1281.73,708.384 1282.29,722.504 1282.85,706.67 1283.41,739.973 1283.97,717.059 1284.53,699.397 1285.09,698.084 1285.65,728.319 1286.21,709.147 1286.77,692.751 1287.33,691.309 1287.89,679.34 1288.45,662.616 1289,679.979 1289.56,646.366 1290.12,645.211 1290.68,629.489 1291.24,652.778 1291.8,652.839 1292.36,637.045 1292.92,623.213 1293.48,623.248 1294.04,641.771 1294.6,659.472 1295.16,631.578 1295.72,600.59 1296.28,637.06 1296.83,658.156 1297.39,643.172 1297.95,663.765 1298.51,646.567 1299.07,632.025 1299.63,621.913 1300.19,626.011 1300.75,678.438 1301.31,725.259 1301.87,735.774 1302.43,714.731 1302.99,697.386 1303.55,678.53 1304.1,664.406 1304.66,680.825 1305.22,661.212 1305.78,679.275 1306.34,695.393 1306.9,726.881 1307.46,706.033 1308.02,705.217 1308.58,682.379 1309.14,680.495 1309.7,677.149 1310.26,674.472 1310.82,654.787 1311.38,672.325 1311.93,637.839 1312.49,638.556 1313.05,655.059 1313.61,658.362 1314.17,671.987 1314.73,643.46 1315.29,677.357 1315.85,646.886 1316.41,663.509 1316.97,651.652 1317.53,635.248 1318.09,622.027 1318.65,660.341 1319.2,662.399 1319.76,664.057 1320.32,684.76 1320.88,732.93 1321.44,696.863 1322,693.042 1322.56,624.304 1323.12,615.283 1323.68,652.751 1324.24,673.567 1324.8,673.195 1325.36,626.361 1325.92,596.42 1326.47,636.892 1327.03,654.68 1327.59,704.397 1328.15,721.189 1328.71,716.65 1329.27,698.555 1329.83,695.805 1330.39,699.569 1330.95,683.924 1331.51,685.174 1332.07,670.92 1332.63,671.905 1333.19,687.205 1333.75,667.66 1334.3,697.591 1334.86,700.039 1335.42,683.312 1335.98,669.278 1336.54,687.254 1337.1,670.581 1337.66,687.813 1338.22,689.684 1338.78,683.732 1339.34,681.34 1339.9,700.922 1340.46,699.664 1341.02,683.808 1341.57,649.475 1342.13,670.126 1342.69,687.433 1343.25,670.948 1343.81,672.35 1344.37,721.765 1344.93,703.853 1345.49,718.003 1346.05,699.985 1346.61,711.187 1347.17,660.236 1347.73,644.366 1348.29,644.852 1348.84,645.853 1349.4,650.181 1349.96,668.088 1350.52,636.943 1351.08,638.93 1351.64,639.874 1352.2,657.157 1352.76,707.577 1353.32,721.776 1353.88,734.441 1354.44,747.282 1355,747.251 1355.56,744.507 1356.12,728.048 1356.67,755.239 1357.23,719.106 1357.79,750.866 1358.35,729.663 1358.91,748.445 1359.47,711.94 1360.03,693.807 1360.59,724.984 1361.15,736.273 1361.71,712.264 1362.27,697.452 1362.83,698.832 1363.39,714.264 1363.94,746.93 1364.5,755.34 1365.06,734.442 1365.62,762.989 1366.18,773.636 1366.74,755.75 1367.3,751.077 1367.86,767.252 1368.42,781.459 1368.98,744.86 1369.54,758.666 1370.1,755.33 1370.66,721.129 1371.21,719.836 1371.77,736.499 1372.33,697.474 1372.89,727.281 1373.45,708.349 1374.01,720.356 1374.57,752.072 1375.13,714.538 1375.69,714.559 1376.25,683.806 1376.81,650.771 1377.37,682.709 1377.93,679.935 1378.49,698.64 1379.04,726.79 1379.6,735.762 1380.16,732.761 1380.72,732.559 1381.28,713.543 1381.84,710.348 1382.4,738.552 1382.96,750.119 1383.52,729.911 1384.08,711.502 1384.64,712.437 1385.2,731.905 1385.76,715.359 1386.31,731.001 1386.87,711.673 1387.43,727.534 1387.99,727.836 1388.55,741.852 1389.11,722.97 1389.67,723.836 1390.23,722.271 1390.79,736.379 1391.35,768.72 1391.91,750.382 1392.47,733.028 1393.03,715.364 1393.58,681.917 1394.14,634.362 1394.7,686.783 1395.26,671.016 1395.82,674.226 1396.38,690.004 1396.94,673.802 1397.5,693.548 1398.06,708.817 1398.62,736.915 1399.18,702.021 1399.74,686.887 1400.3,655.951 1400.86,639.289 1401.41,656.725 1401.97,674.959 1402.53,674.533 1403.09,675.707 1403.65,678.698 1404.21,680.282 1404.77,665.198 1405.33,666.641 1405.89,683.494 1406.45,668.883 1407.01,670.768 1407.57,637.924 1408.13,623.784 1408.68,610.299 1409.24,594.358 1409.8,602.095 1410.36,591.068 1410.92,627.961 1411.48,630.18 1412.04,664.072 1412.6,663.71 1413.16,649.714 1413.72,684.152 1414.28,668.363 1414.84,669.84 1415.4,651.365 1415.95,637.793 1416.51,674.621 1417.07,657.416 1417.63,659.062 1418.19,677.623 1418.75,694.051 1419.31,692.713 1419.87,691.725 1420.43,690.7 1420.99,654.602 1421.55,641.008 1422.11,646.006 1422.67,681.484 1423.23,695.958 1423.78,675.753 1424.34,660.52 1424.9,645.419 1425.46,648.951 1426.02,648.605 1426.58,669.287 1427.14,637.283 1427.7,655.862 1428.26,642.177 1428.82,679.9 1429.38,667.01 1429.94,652.518 1430.5,654.105 1431.05,673.696 1431.61,644.361 1432.17,658.809 1432.73,644.458 1433.29,663.763 1433.85,680.278 1434.41,665.566 1434.97,684.501 1435.53,667.361 1436.09,652.251 1436.65,670.385 1437.21,685.472 1437.77,682.273 1438.33,709.798 1438.88,710.15 1439.44,727.476 1440,707.914 1440.56,705.952 1441.12,705.315 1441.68,655.716 1442.24,704.567 1442.8,705.489 1443.36,685.81 1443.92,669.481 1444.48,686.316 1445.04,716.339 1445.6,667.588 1446.15,683.377 1446.71,716.256 1447.27,714.763 1447.83,668.002 1448.39,700.32 1448.95,698.778 1449.51,668.719 1450.07,688.497 1450.63,689.008 1451.19,709.283 1451.75,693.008 1452.31,696.968 1452.87,699.051 1453.42,733.193 1453.98,733.125 1454.54,696.307 1455.1,712.788 1455.66,710.096 1456.22,710.519 1456.78,707.139 1457.34,721.092 1457.9,673.572 1458.46,677.151 1459.02,680.624 1459.58,680.746 1460.14,662.523 1460.7,646.528 1461.25,646.322 1461.81,615.437 1462.37,617.242 1462.93,620.914 1463.49,610.987 1464.05,597.659 1464.61,602.014 1465.17,624.866 1465.73,644.413 1466.29,660.82 1466.85,660.77 1467.41,679.414 1467.97,698.847 1468.52,699.255 1469.08,713.058 1469.64,695.414 1470.2,709.129 1470.76,689.347 1471.32,709.221 1471.88,722.802 1472.44,752.603 1473,767.224 1473.56,742.646 1474.12,687.806 1474.68,704.623 1475.24,702.152 1475.79,748.007 1476.35,759.768 1476.91,741.17 1477.47,737.583 1478.03,687.809 1478.59,703.708 1479.15,751.377 1479.71,749.606 1480.27,728.994 1480.83,711.925 1481.39,727.189 1481.95,743.383 1482.51,724.29 1483.07,704.69 1483.62,688.508 1484.18,689.892 1484.74,692.397 1485.3,691.781 1485.86,692.329 1486.42,691.748 1486.98,693.16 1487.54,710.507 1488.1,728.24 1488.66,695.043 1489.22,676.547 1489.78,676.269 1490.34,692.843 1490.89,771.386 1491.45,752.652 1492.01,748.737 1492.57,762.662 1493.13,773.198 1493.69,783.236 1494.25,763.735 1494.81,742.733 1495.37,710.443 1495.93,722.689 1496.49,737.034 1497.05,733.654 1497.61,761.011 1498.16,739.891 1498.72,738.188 1499.28,734.664 1499.84,714.605 1500.4,697.388 1500.96,696.959 1501.52,699.929 1502.08,683.807 1502.64,713.868 1503.2,710.447 1503.76,691.519 1504.32,693.833 1504.88,696.072 1505.44,682.622 1505.99,634.738 1506.55,620.9 1507.11,640.292 1507.67,639.839 1508.23,610.463 1508.79,628.169 1509.35,632.382 1509.91,600.763 1510.47,603.477 1511.03,611.921 1511.59,615.207 1512.15,618.265 1512.71,651.548 1513.26,668.412 1513.82,671.948 1514.38,672.143 1514.94,654.052 1515.5,707.348 1516.06,709.439 1516.62,711.155 1517.18,679.259 1517.74,694.442 1518.3,694.792 1518.86,708.77 1519.42,708.185 1519.98,718.869 1520.53,747.45 1521.09,742.907 1521.65,707.813 1522.21,705.095 1522.77,717.584 1523.33,685.088 1523.89,749.926 1524.45,777.674 1525.01,755.005 1525.57,751.074 1526.13,781.548 1526.69,793.749 1527.25,803.014 1527.81,761.204 1528.36,757.914 1528.92,758.107 1529.48,724.134 1530.04,737.577 1530.6,732.82 1531.16,681.296 1531.72,647.412 1532.28,617.989 1532.84,636.489 1533.4,608.357 1533.96,645.858 1534.52,617.73 1535.08,621.543 1535.63,592.384 1536.19,629.579 1536.75,617.468 1537.31,622.043 1537.87,640.441 1538.43,628.345 1538.99,647.294 1539.55,664.474 1540.11,667.027 1540.67,685.347 1541.23,684.857 1541.79,701.845 1542.35,703.02 1542.9,703.678 1543.46,699.449 1544.02,716.67 1544.58,683.5 1545.14,698.155 1545.7,712.289 1546.26,709.166 1546.82,706.155 1547.38,691.019 1547.94,658.037 1548.5,676.982 1549.06,658.82 1549.62,691.536 1550.18,689.387 1550.73,655.104 1551.29,687.634 1551.85,669.672 1552.41,650.164 1552.97,652.942 1553.53,669.299 1554.09,687.403 1554.65,648.735 1555.21,630.349 1555.77,629.484 1556.33,615.288 1556.89,616.521 1557.45,653.414 1558,672.399 1558.56,672.402 1559.12,642.435 1559.68,660.063 1560.24,632.203 1560.8,667.527 1561.36,697.433 1561.92,665.812 1562.48,651.619 1563.04,601.623 1563.6,605.148 1564.16,591.438 1564.72,597.984 1565.28,601.988 1565.83,657.866 1566.39,655.44 1566.95,657.162 1567.51,673.631 1568.07,676.309 1568.63,726.991 1569.19,692.939 1569.75,690.552 1570.31,720.195 1570.87,720.277 1571.43,673.759 1571.99,641.17 1572.55,632.669 1573.1,621.412 1573.66,639.14 1574.22,627.803 1574.78,648.379 1575.34,636.906 1575.9,607.765 1576.46,580.455 1577.02,607.1 1577.58,612.849 1578.14,620.883 1578.7,589.842 1579.26,616.453 1579.82,622.139 1580.37,656.968 1580.93,658.95 1581.49,661.263 1582.05,681.603 1582.61,681.382 1583.17,683.69 1583.73,716.712 1584.29,731.471 1584.85,732.381 1585.41,696.079 1585.97,741.367 1586.53,752.923 1587.09,746.009 1587.65,727.567 1588.2,710.26 1588.76,743.218 1589.32,753.575 1589.88,717.933 1590.44,687.813 1591,704.046 1591.56,697.75 1592.12,731.849 1592.68,694.251 1593.24,709.068 1593.8,725.042 1594.36,736.188 1594.92,733.399 1595.47,748.853 1596.03,777.934 1596.59,757.357 1597.15,771.699 1597.71,768.145 1598.27,733.102 1598.83,713.777 1599.39,711.71 1599.95,726.321 1600.51,724.057 1601.07,738.416 1601.63,718.018 1602.19,667.198 1602.74,651.715 1603.3,653.085 1603.86,654.762 1604.42,611.27 1604.98,645.188 1605.54,651.209 1606.1,669.434 1606.66,731.366 1607.22,714.521 1607.78,731.731 1608.34,731.054 1608.9,699.79 1609.46,680.554 1610.02,664.434 1610.57,668.354 1611.13,664.998 1611.69,729.833 1612.25,709.987 1612.81,692.698 1613.37,710.381 1613.93,690.248 1614.49,706.836 1615.05,737.35 1615.61,750.035 1616.17,746.683 1616.73,728.473 1617.29,693.947 1617.84,710.176 1618.4,691.605 1618.96,674.575 1619.52,676.771 1620.08,694.346 1620.64,693.608 1621.2,692.776 1621.76,690.643 1622.32,691.307 1622.88,706.787 1623.44,705.569 1624,720.455 1624.56,705.273 1625.11,688.266 1625.67,705.728 1626.23,719.689 1626.79,701.65 1627.35,735.042 1627.91,763.774 1628.47,750.049 1629.03,746.541 1629.59,760.106 1630.15,771.99 1630.71,766.193 1631.27,778.525 1631.83,741.574 1632.39,789.219 1632.94,766.917 1633.5,765.39 1634.06,726.466 1634.62,691.535 1635.18,708.915 1635.74,705.327 1636.3,704.259 1636.86,702.941 1637.42,718.479 1637.98,697.958 1638.54,693.514 1639.1,682.206 1639.66,668.053 1640.21,654.002 1640.77,669.82 1641.33,653.314 1641.89,624.442 1642.45,645.27 1643.01,682.208 1643.57,678 1644.13,695.004 1644.69,712.204 1645.25,708.641 1645.81,708.379 1646.37,673.112 1646.93,708.061 1647.48,675.53 1648.04,627.932 1648.6,609.084 1649.16,659.98 1649.72,661.388 1650.28,661.127 1650.84,662.953 1651.4,647.589 1651.96,649.57 1652.52,666.399 1653.08,702.19 1653.64,667.497 1654.2,652.243 1654.76,623.2 1655.31,612.544 1655.87,660.904 1656.43,616.218 1656.99,651.86 1657.55,671.823 1658.11,675.316 1658.67,721.324 1659.23,719.207 1659.79,718.34 1660.35,747.388 1660.91,727.657 1661.47,713.545 1662.03,709.034 1662.58,704.269 1663.14,736.468 1663.7,733.858 1664.26,730.876 1664.82,730.907 1665.38,728.801 1665.94,743.03 1666.5,757.484 1667.06,724.709 1667.62,718.443 1668.18,684.286 1668.74,684.819 1669.3,701.818 1669.85,701.34 1670.41,702.114 1670.97,718.467 1671.53,749.738 1672.09,730.355 1672.65,713.056 1673.21,712.02 1673.77,711.698 1674.33,696.388 1674.89,696.309 1675.45,680.426 1676.01,663.305 1676.57,663.878 1677.13,633.059 1677.68,656.014 1678.24,656.268 1678.8,655.434 1679.36,644.979 1679.92,633.652 1680.48,568.894 1681.04,574.944 1681.6,548.805 1682.16,537.932 1682.72,530.019 1683.28,537.305 1683.84,546.718 1684.4,552.818 1684.95,575.992 1685.51,597.85 1686.07,588.173 1686.63,595.966 1687.19,632.1 1687.75,633.529 1688.31,618.932 1688.87,621.064 1689.43,656.586 1689.99,656.654 1690.55,675.529 1691.11,627.341 1691.67,666.069 1692.23,633.282 1692.78,634.657 1693.34,632.833 1693.9,631.774 1694.46,618.456 1695.02,636.742 1695.58,655.776 1696.14,660.87 1696.7,646.384 1697.26,635.282 1697.82,653.813 1698.38,688.155 1698.94,672.779 1699.5,690.548 1700.05,691.159 1700.61,690.755 1701.17,673.648 1701.73,673.772 1702.29,669.968 1702.85,702.842 1703.41,699.239 1703.97,714.288 1704.53,699.469 1705.09,712.413 1705.65,694.505 1706.21,679.963 1706.77,693.388 1707.32,728.257 1707.88,771.689 1708.44,752.483 1709,744.137 1709.56,755.391 1710.12,783.272 1710.68,792.47 1711.24,816.407 1711.8,826.084 1712.36,819.429 1712.92,809.901 1713.48,820.351 1714.04,800.24 1714.6,764.142 1715.15,777.226 1715.71,770.953 1716.27,766.61 1716.83,793.18 1717.39,819.955 1717.95,814.885 1718.51,777.354 1719.07,740.685 1719.63,718.047 1720.19,699.784 1720.75,681.242 1721.31,662.367 1721.87,666.869 1722.42,648.692 1722.98,663.551 1723.54,712.934 1724.1,695.593 1724.66,709.275 1725.22,706.324 1725.78,720.029 1726.34,702.608 1726.9,681.405 1727.46,686.003 1728.02,721.6 1728.58,718.666 1729.14,721.358 1729.69,687.406 1730.25,673.928 1730.81,686.876 1731.37,687.326 1731.93,636.989 1732.49,673.284 1733.05,688.552 1733.61,702.555 1734.17,670.487 1734.73,702.13 1735.29,684.962 1735.85,667.945 1736.41,666.578 1736.97,649.118 1737.52,666.852 1738.08,649.214 1738.64,683.737 1739.2,681.852 1739.76,634.104 1740.32,666.895 1740.88,666.327 1741.44,649.536 1742,684.288 1742.56,733.268 1743.12,728.028 1743.68,742.713 1744.24,756.53 1744.79,753.881 1745.35,733.76 1745.91,794.423 1746.47,753.883 1747.03,768.149 1747.59,746.56 1748.15,758.528 1748.71,771.429 1749.27,781.344 1749.83,776.266 1750.39,772.008 1750.95,783.031 1751.51,763.685 1752.06,743.666 1752.62,741.854 1753.18,758.731 1753.74,756.662 1754.3,784.709 1754.86,795.679 1755.42,775.341 1755.98,723.369 1756.54,737.266 1757.1,722.422 1757.66,718.776 1758.22,665.622 1758.78,680.156 1759.34,713.596 1759.89,709.957 1760.45,691.486 1761.01,675.676 1761.57,660.396 1762.13,660.779 1762.69,647.21 1763.25,647.715 1763.81,630.54 1764.37,649.843 1764.93,603.505 1765.49,642.755 1766.05,627.849 1766.61,645.128 1767.16,595.086 1767.72,552.722 1768.28,593.405 1768.84,598.491 1769.4,568.377 1769.96,609.465 1770.52,596.761 1771.08,600.112 1771.64,587.358 1772.2,591.063 1772.76,567.273 1773.32,576.197 1773.88,567.671 1774.43,590.709 1774.99,597.864 1775.55,604.1 1776.11,590.26 1776.67,599.305 1777.23,578.064 1777.79,569.086 1778.35,594.145 1778.91,617.845 1779.47,620.61 1780.03,626.291 1780.59,610.728 1781.15,616.894 1781.71,653.022 1782.26,670.216 1782.82,636.677 1783.38,653.927 1783.94,670.386 1784.5,737.748 1785.06,751.838 1785.62,699.819 1786.18,678.36 1786.74,678.679 1787.3,693.005 1787.86,675.47 1788.42,679.057 1788.98,662.795 1789.53,645.941 1790.09,634.183 1790.65,637.227 1791.21,641.715 1791.77,646.891 1792.33,646.777 1792.89,651.082 1793.45,667.617 1794.01,670.152 1794.57,684.866 1795.13,682.214 1795.69,634.232 1796.25,636.931 1796.8,637.715 1797.36,657.887 1797.92,678.716 1798.48,727.309 1799.04,726.842 1799.6,754.659 1800.16,752.64 1800.72,749.6 1801.28,747.217 1801.84,727.804 1802.4,725.639 1802.96,757.492 1803.52,755.413 1804.08,753.68 1804.63,732.498 1805.19,748.657 1805.75,810.383 1806.31,823.554 1806.87,834.833 1807.43,829.177 1807.99,839.748 1808.55,784.902 1809.11,780.344 1809.67,757.969 1810.23,738.954 1810.79,722.726 1811.35,734.306 1811.9,731.286 1812.46,745.838 1813.02,724.69 1813.58,706.165 1814.14,708.453 1814.7,724.988 1815.26,675.606 1815.82,643.988 1816.38,627.4 1816.94,646.75 1817.5,634.788 1818.06,654.554 1818.62,642.036 1819.18,658.58 1819.73,660.431 1820.29,645.74 1820.85,647.279 1821.41,619.341 1821.97,622.022 1822.53,624.393 1823.09,625.731 1823.65,581.498 1824.21,620.041 1824.77,644.361 1825.33,678.954 1825.89,695.657 1826.45,712.064 1827,743.476 1827.56,809.618 1828.12,804.683 1828.68,828.811 1829.24,791.314 1829.8,772.209 1830.36,734.821 1830.92,700.018 1831.48,683.358 1832.04,650.644 1832.6,682.958 1833.16,697.466 1833.72,711.453 1834.27,690.478 1834.83,675.476 1835.39,690.566 1835.95,741.014 1836.51,754.005 1837.07,717.842 1837.63,682.432 1838.19,666.096 \"/>\n<path clip-path=\"url(#clip433)\" d=\"M720.247 691.624 L720.806 691.624 L721.365 691.624 L721.924 691.624 L722.484 691.624 L723.043 691.624 L723.602 691.624 L724.161 691.624 L724.721 691.624 L725.28 691.624 L725.839 691.624 L726.398 691.624 L726.958 691.624 L727.517 691.624 L728.076 691.624 L728.635 691.624 L729.195 691.624 L729.754 691.624 L730.313 691.624 L730.872 691.624 L731.432 691.624 L731.991 691.624 L732.55 691.624 L733.109 691.624 L733.669 691.624 L734.228 691.624 L734.787 691.624 L735.346 691.624 L735.906 691.624 L736.465 691.624 L737.024 691.624 L737.583 691.624 L738.143 691.624 L738.702 691.624 L739.261 691.624 L739.82 691.624 L740.38 691.624 L740.939 691.624 L741.498 691.624 L742.057 691.624 L742.617 691.624 L743.176 691.624 L743.735 691.624 L744.294 691.624 L744.854 691.624 L745.413 691.624 L745.972 691.624 L746.531 691.624 L747.091 691.624 L747.65 691.624 L748.209 691.624 L748.768 691.624 L749.328 691.624 L749.887 691.624 L750.446 691.624 L751.005 691.624 L751.565 691.624 L752.124 691.624 L752.683 691.624 L753.242 691.624 L753.802 691.624 L754.361 691.624 L754.92 691.624 L755.479 691.624 L756.039 691.624 L756.598 691.624 L757.157 691.624 L757.716 691.624 L758.276 691.624 L758.835 691.624 L759.394 691.624 L759.953 691.624 L760.513 691.624 L761.072 691.624 L761.631 691.624 L762.19 691.624 L762.75 691.624 L763.309 691.624 L763.868 691.624 L764.427 691.624 L764.987 691.624 L765.546 691.624 L766.105 691.624 L766.664 691.624 L767.224 691.624 L767.783 691.624 L768.342 691.624 L768.901 691.624 L769.461 691.624 L770.02 691.624 L770.579 691.624 L771.138 691.624 L771.698 691.624 L772.257 691.624 L772.816 691.624 L773.375 691.624 L773.935 691.624 L774.494 691.624 L775.053 691.624 L775.612 691.624 L776.172 691.624 L776.731 691.624 L777.29 691.624 L777.849 691.624 L778.409 691.624 L778.968 691.624 L779.527 691.624 L780.086 691.624 L780.646 691.624 L781.205 691.624 L781.764 691.624 L782.323 691.624 L782.883 691.624 L783.442 691.624 L784.001 691.624 L784.56 691.624 L785.12 691.624 L785.679 691.624 L786.238 691.624 L786.797 691.624 L787.357 691.624 L787.916 691.624 L788.475 691.624 L789.034 691.624 L789.594 691.624 L790.153 691.624 L790.712 691.624 L791.271 691.624 L791.831 691.624 L792.39 691.624 L792.949 691.624 L793.508 691.624 L794.068 691.624 L794.627 691.624 L795.186 691.624 L795.745 691.624 L796.305 691.624 L796.864 691.624 L797.423 691.624 L797.982 691.624 L798.542 691.624 L799.101 691.624 L799.66 691.624 L800.219 691.624 L800.779 691.624 L801.338 691.624 L801.897 691.624 L802.456 691.624 L803.016 691.624 L803.575 691.624 L804.134 691.624 L804.693 691.624 L805.253 691.624 L805.812 691.624 L806.371 691.624 L806.931 691.624 L807.49 691.624 L808.049 691.624 L808.608 691.624 L809.168 691.624 L809.727 691.624 L810.286 691.624 L810.845 691.624 L811.405 691.624 L811.964 691.624 L812.523 691.624 L813.082 691.624 L813.642 691.624 L814.201 691.624 L814.76 691.624 L815.319 691.624 L815.879 691.624 L816.438 691.624 L816.997 691.624 L817.556 691.624 L818.116 691.624 L818.675 691.624 L819.234 691.624 L819.793 691.624 L820.353 691.624 L820.912 691.624 L821.471 691.624 L822.03 691.624 L822.59 691.624 L823.149 691.624 L823.708 691.624 L824.267 691.624 L824.827 691.624 L825.386 691.624 L825.945 691.624 L826.504 691.624 L827.064 691.624 L827.623 691.624 L828.182 691.624 L828.741 691.624 L829.301 691.624 L829.86 691.624 L830.419 691.624 L830.978 691.624 L831.538 691.624 L832.097 691.624 L832.656 691.624 L833.215 691.624 L833.775 691.624 L834.334 691.624 L834.893 691.624 L835.452 691.624 L836.012 691.624 L836.571 691.624 L837.13 691.624 L837.689 691.624 L838.249 691.624 L838.808 691.624 L839.367 691.624 L839.926 691.624 L840.486 691.624 L841.045 691.624 L841.604 691.624 L842.163 691.624 L842.723 691.624 L843.282 691.624 L843.841 691.624 L844.4 691.624 L844.96 691.624 L845.519 691.624 L846.078 691.624 L846.637 691.624 L847.197 691.624 L847.756 691.624 L848.315 691.624 L848.874 691.624 L849.434 691.624 L849.993 691.624 L850.552 691.624 L851.111 691.624 L851.671 691.624 L852.23 691.624 L852.789 691.624 L853.348 691.624 L853.908 691.624 L854.467 691.624 L855.026 691.624 L855.585 691.624 L856.145 691.624 L856.704 691.624 L857.263 691.624 L857.822 691.624 L858.382 691.624 L858.941 691.624 L859.5 691.624 L860.059 691.624 L860.619 691.624 L861.178 691.624 L861.737 691.624 L862.296 691.624 L862.856 691.624 L863.415 691.624 L863.974 691.624 L864.533 691.624 L865.093 691.624 L865.652 691.624 L866.211 691.624 L866.77 691.624 L867.33 691.624 L867.889 691.624 L868.448 691.624 L869.007 691.624 L869.567 691.624 L870.126 691.624 L870.685 691.624 L871.244 691.624 L871.804 691.624 L872.363 691.624 L872.922 691.624 L873.481 691.624 L874.041 691.624 L874.6 691.624 L875.159 691.624 L875.718 691.624 L876.278 691.624 L876.837 691.624 L877.396 691.624 L877.955 691.624 L878.515 691.624 L879.074 691.624 L879.633 691.624 L880.192 691.624 L880.752 691.624 L881.311 691.624 L881.87 691.624 L882.429 691.624 L882.989 691.624 L883.548 691.624 L884.107 691.624 L884.666 691.624 L885.226 691.624 L885.785 691.624 L886.344 691.624 L886.903 691.624 L887.463 691.624 L888.022 691.624 L888.581 691.624 L889.14 691.624 L889.7 691.624 L890.259 691.624 L890.818 691.624 L891.377 691.624 L891.937 691.624 L892.496 691.624 L893.055 691.624 L893.614 691.624 L894.174 691.624 L894.733 691.624 L895.292 691.624 L895.851 691.624 L896.411 691.624 L896.97 691.624 L897.529 691.624 L898.088 691.624 L898.648 691.624 L899.207 691.624 L899.766 691.624 L900.325 691.624 L900.885 691.624 L901.444 691.624 L902.003 691.624 L902.562 691.624 L903.122 691.624 L903.681 691.624 L904.24 691.624 L904.799 691.624 L905.359 691.624 L905.918 691.624 L906.477 691.624 L907.036 691.624 L907.596 691.624 L908.155 691.624 L908.714 691.624 L909.273 691.624 L909.833 691.624 L910.392 691.624 L910.951 691.624 L911.51 691.624 L912.07 691.624 L912.629 691.624 L913.188 691.624 L913.747 691.624 L914.307 691.624 L914.866 691.624 L915.425 691.624 L915.984 691.624 L916.544 691.624 L917.103 691.624 L917.662 691.624 L918.221 691.624 L918.781 691.624 L919.34 691.624 L919.899 691.624 L920.458 691.624 L921.018 691.624 L921.577 691.624 L922.136 691.624 L922.695 691.624 L923.255 691.624 L923.814 691.624 L924.373 691.624 L924.932 691.624 L925.492 691.624 L926.051 691.624 L926.61 691.624 L927.169 691.624 L927.729 691.624 L928.288 691.624 L928.847 691.624 L929.406 691.624 L929.966 691.624 L930.525 691.624 L931.084 691.624 L931.644 691.624 L932.203 691.624 L932.762 691.624 L933.321 691.624 L933.881 691.624 L934.44 691.624 L934.999 691.624 L935.558 691.624 L936.118 691.624 L936.677 691.624 L937.236 691.624 L937.795 691.624 L938.355 691.624 L938.914 691.624 L939.473 691.624 L940.032 691.624 L940.592 691.624 L941.151 691.624 L941.71 691.624 L942.269 691.624 L942.829 691.624 L943.388 691.624 L943.947 691.624 L944.506 691.624 L945.066 691.624 L945.625 691.624 L946.184 691.624 L946.743 691.624 L947.303 691.624 L947.862 691.624 L948.421 691.624 L948.98 691.624 L949.54 691.624 L950.099 691.624 L950.658 691.624 L951.217 691.624 L951.777 691.624 L952.336 691.624 L952.895 691.624 L953.454 691.624 L954.014 691.624 L954.573 691.624 L955.132 691.624 L955.691 691.624 L956.251 691.624 L956.81 691.624 L957.369 691.624 L957.928 691.624 L958.488 691.624 L959.047 691.624 L959.606 691.624 L960.165 691.624 L960.725 691.624 L961.284 691.624 L961.843 691.624 L962.402 691.624 L962.962 691.624 L963.521 691.624 L964.08 691.624 L964.639 691.624 L965.199 691.624 L965.758 691.624 L966.317 691.624 L966.876 691.624 L967.436 691.624 L967.995 691.624 L968.554 691.624 L969.113 691.624 L969.673 691.624 L970.232 691.624 L970.791 691.624 L971.35 691.624 L971.91 691.624 L972.469 691.624 L973.028 691.624 L973.587 691.624 L974.147 691.624 L974.706 691.624 L975.265 691.624 L975.824 691.624 L976.384 691.624 L976.943 691.624 L977.502 691.624 L978.061 691.624 L978.621 691.624 L979.18 691.624 L979.739 691.624 L980.298 691.624 L980.858 691.624 L981.417 691.624 L981.976 691.624 L982.535 691.624 L983.095 691.624 L983.654 691.624 L984.213 691.624 L984.772 691.624 L985.332 691.624 L985.891 691.624 L986.45 691.624 L987.009 691.624 L987.569 691.624 L988.128 691.624 L988.687 691.624 L989.246 691.624 L989.806 691.624 L990.365 691.624 L990.924 691.624 L991.483 691.624 L992.043 691.624 L992.602 691.624 L993.161 691.624 L993.72 691.624 L994.28 691.624 L994.839 691.624 L995.398 691.624 L995.957 691.624 L996.517 691.624 L997.076 691.624 L997.635 691.624 L998.194 691.624 L998.754 691.624 L999.313 691.624 L999.872 691.624 L1000.43 691.624 L1000.99 691.624 L1001.55 691.624 L1002.11 691.624 L1002.67 691.624 L1003.23 691.624 L1003.79 691.624 L1004.35 691.624 L1004.91 691.624 L1005.46 691.624 L1006.02 691.624 L1006.58 691.624 L1007.14 691.624 L1007.7 691.624 L1008.26 691.624 L1008.82 691.624 L1009.38 691.624 L1009.94 691.624 L1010.5 691.624 L1011.06 691.624 L1011.62 691.624 L1012.18 691.624 L1012.73 691.624 L1013.29 691.624 L1013.85 691.624 L1014.41 691.624 L1014.97 691.624 L1015.53 691.624 L1016.09 691.624 L1016.65 691.624 L1017.21 691.624 L1017.77 691.624 L1018.33 691.624 L1018.89 691.624 L1019.45 691.624 L1020.01 691.624 L1020.56 691.624 L1021.12 691.624 L1021.68 691.624 L1022.24 691.624 L1022.8 691.624 L1023.36 691.624 L1023.92 691.624 L1024.48 691.624 L1025.04 691.624 L1025.6 691.624 L1026.16 691.624 L1026.72 691.624 L1027.28 691.624 L1027.83 691.624 L1028.39 691.624 L1028.95 691.624 L1029.51 691.624 L1030.07 691.624 L1030.63 691.624 L1031.19 691.624 L1031.75 691.624 L1032.31 691.624 L1032.87 691.624 L1033.43 691.624 L1033.99 691.624 L1034.55 691.624 L1035.1 691.624 L1035.66 691.624 L1036.22 691.624 L1036.78 691.624 L1037.34 691.624 L1037.9 691.624 L1038.46 691.624 L1039.02 691.624 L1039.58 691.624 L1040.14 691.624 L1040.7 691.624 L1041.26 691.624 L1041.82 691.624 L1042.38 691.624 L1042.93 691.624 L1043.49 691.624 L1044.05 691.624 L1044.61 691.624 L1045.17 691.624 L1045.73 691.624 L1046.29 691.624 L1046.85 691.624 L1047.41 691.624 L1047.97 691.624 L1048.53 691.624 L1049.09 691.624 L1049.65 691.624 L1050.2 691.624 L1050.76 691.624 L1051.32 691.624 L1051.88 691.624 L1052.44 691.624 L1053 691.624 L1053.56 691.624 L1054.12 691.624 L1054.68 691.624 L1055.24 691.624 L1055.8 691.624 L1056.36 691.624 L1056.92 691.624 L1057.48 691.624 L1058.03 691.624 L1058.59 691.624 L1059.15 691.624 L1059.71 691.624 L1060.27 691.624 L1060.83 691.624 L1061.39 691.624 L1061.95 691.624 L1062.51 691.624 L1063.07 691.624 L1063.63 691.624 L1064.19 691.624 L1064.75 691.624 L1065.3 691.624 L1065.86 691.624 L1066.42 691.624 L1066.98 691.624 L1067.54 691.624 L1068.1 691.624 L1068.66 691.624 L1069.22 691.624 L1069.78 691.624 L1070.34 691.624 L1070.9 691.624 L1071.46 691.624 L1072.02 691.624 L1072.57 691.624 L1073.13 691.624 L1073.69 691.624 L1074.25 691.624 L1074.81 691.624 L1075.37 691.624 L1075.93 691.624 L1076.49 691.624 L1077.05 691.624 L1077.61 691.624 L1078.17 691.624 L1078.73 691.624 L1079.29 691.624 L1079.85 691.624 L1080.4 691.624 L1080.96 691.624 L1081.52 691.624 L1082.08 691.624 L1082.64 691.624 L1083.2 691.624 L1083.76 691.624 L1084.32 691.624 L1084.88 691.624 L1085.44 691.624 L1086 691.624 L1086.56 691.624 L1087.12 691.624 L1087.67 691.624 L1088.23 691.624 L1088.79 691.624 L1089.35 691.624 L1089.91 691.624 L1090.47 691.624 L1091.03 691.624 L1091.59 691.624 L1092.15 691.624 L1092.71 691.624 L1093.27 691.624 L1093.83 691.624 L1094.39 691.624 L1094.94 691.624 L1095.5 691.624 L1096.06 691.624 L1096.62 691.624 L1097.18 691.624 L1097.74 691.624 L1098.3 691.624 L1098.86 691.624 L1099.42 691.624 L1099.98 691.624 L1100.54 691.624 L1101.1 691.624 L1101.66 691.624 L1102.22 691.624 L1102.77 691.624 L1103.33 691.624 L1103.89 691.624 L1104.45 691.624 L1105.01 691.624 L1105.57 691.624 L1106.13 691.624 L1106.69 691.624 L1107.25 691.624 L1107.81 691.624 L1108.37 691.624 L1108.93 691.624 L1109.49 691.624 L1110.04 691.624 L1110.6 691.624 L1111.16 691.624 L1111.72 691.624 L1112.28 691.624 L1112.84 691.624 L1113.4 691.624 L1113.96 691.624 L1114.52 691.624 L1115.08 691.624 L1115.64 691.624 L1116.2 691.624 L1116.76 691.624 L1117.31 691.624 L1117.87 691.624 L1118.43 691.624 L1118.99 691.624 L1119.55 691.624 L1120.11 691.624 L1120.67 691.624 L1121.23 691.624 L1121.79 691.624 L1122.35 691.624 L1122.91 691.624 L1123.47 691.624 L1124.03 691.624 L1124.59 691.624 L1125.14 691.624 L1125.7 691.624 L1126.26 691.624 L1126.82 691.624 L1127.38 691.624 L1127.94 691.624 L1128.5 691.624 L1129.06 691.624 L1129.62 691.624 L1130.18 691.624 L1130.74 691.624 L1131.3 691.624 L1131.86 691.624 L1132.41 691.624 L1132.97 691.624 L1133.53 691.624 L1134.09 691.624 L1134.65 691.624 L1135.21 691.624 L1135.77 691.624 L1136.33 691.624 L1136.89 691.624 L1137.45 691.624 L1138.01 691.624 L1138.57 691.624 L1139.13 691.624 L1139.68 691.624 L1140.24 691.624 L1140.8 691.624 L1141.36 691.624 L1141.92 691.624 L1142.48 691.624 L1143.04 691.624 L1143.6 691.624 L1144.16 691.624 L1144.72 691.624 L1145.28 691.624 L1145.84 691.624 L1146.4 691.624 L1146.96 691.624 L1147.51 691.624 L1148.07 691.624 L1148.63 691.624 L1149.19 691.624 L1149.75 691.624 L1150.31 691.624 L1150.87 691.624 L1151.43 691.624 L1151.99 691.624 L1152.55 691.624 L1153.11 691.624 L1153.67 691.624 L1154.23 691.624 L1154.78 691.624 L1155.34 691.624 L1155.9 691.624 L1156.46 691.624 L1157.02 691.624 L1157.58 691.624 L1158.14 691.624 L1158.7 691.624 L1159.26 691.624 L1159.82 691.624 L1160.38 691.624 L1160.94 691.624 L1161.5 691.624 L1162.05 691.624 L1162.61 691.624 L1163.17 691.624 L1163.73 691.624 L1164.29 691.624 L1164.85 691.624 L1165.41 691.624 L1165.97 691.624 L1166.53 691.624 L1167.09 691.624 L1167.65 691.624 L1168.21 691.624 L1168.77 691.624 L1169.33 691.624 L1169.88 691.624 L1170.44 691.624 L1171 691.624 L1171.56 691.624 L1172.12 691.624 L1172.68 691.624 L1173.24 691.624 L1173.8 691.624 L1174.36 691.624 L1174.92 691.624 L1175.48 691.624 L1176.04 691.624 L1176.6 691.624 L1177.15 691.624 L1177.71 691.624 L1178.27 691.624 L1178.83 691.624 L1179.39 691.624 L1179.95 691.624 L1180.51 691.624 L1181.07 691.624 L1181.63 691.624 L1182.19 691.624 L1182.75 691.624 L1183.31 691.624 L1183.87 691.624 L1184.43 691.624 L1184.98 691.624 L1185.54 691.624 L1186.1 691.624 L1186.66 691.624 L1187.22 691.624 L1187.78 691.624 L1188.34 691.624 L1188.9 691.624 L1189.46 691.624 L1190.02 691.624 L1190.58 691.624 L1191.14 691.624 L1191.7 691.624 L1192.25 691.624 L1192.81 691.624 L1193.37 691.624 L1193.93 691.624 L1194.49 691.624 L1195.05 691.624 L1195.61 691.624 L1196.17 691.624 L1196.73 691.624 L1197.29 691.624 L1197.85 691.624 L1198.41 691.624 L1198.97 691.624 L1199.52 691.624 L1200.08 691.624 L1200.64 691.624 L1201.2 691.624 L1201.76 691.624 L1202.32 691.624 L1202.88 691.624 L1203.44 691.624 L1204 691.624 L1204.56 691.624 L1205.12 691.624 L1205.68 691.624 L1206.24 691.624 L1206.8 691.624 L1207.35 691.624 L1207.91 691.624 L1208.47 691.624 L1209.03 691.624 L1209.59 691.624 L1210.15 691.624 L1210.71 691.624 L1211.27 691.624 L1211.83 691.624 L1212.39 691.624 L1212.95 691.624 L1213.51 691.624 L1214.07 691.624 L1214.62 691.624 L1215.18 691.624 L1215.74 691.624 L1216.3 691.624 L1216.86 691.624 L1217.42 691.624 L1217.98 691.624 L1218.54 691.624 L1219.1 691.624 L1219.66 691.624 L1220.22 691.624 L1220.78 691.624 L1221.34 691.624 L1221.89 691.624 L1222.45 691.624 L1223.01 691.624 L1223.57 691.624 L1224.13 691.624 L1224.69 691.624 L1225.25 691.624 L1225.81 691.624 L1226.37 691.624 L1226.93 691.624 L1227.49 691.624 L1228.05 691.624 L1228.61 691.624 L1229.17 691.624 L1229.72 691.624 L1230.28 691.624 L1230.84 691.624 L1231.4 691.624 L1231.96 691.624 L1232.52 691.624 L1233.08 691.624 L1233.64 691.624 L1234.2 691.624 L1234.76 691.624 L1235.32 691.624 L1235.88 691.624 L1236.44 691.624 L1236.99 691.624 L1237.55 691.624 L1238.11 691.624 L1238.67 691.624 L1239.23 691.624 L1239.79 691.624 L1240.35 691.624 L1240.91 691.624 L1241.47 691.624 L1242.03 691.624 L1242.59 691.624 L1243.15 691.624 L1243.71 691.624 L1244.26 691.624 L1244.82 691.624 L1245.38 691.624 L1245.94 691.624 L1246.5 691.624 L1247.06 691.624 L1247.62 691.624 L1248.18 691.624 L1248.74 691.624 L1249.3 691.624 L1249.86 691.624 L1250.42 691.624 L1250.98 691.624 L1251.54 691.624 L1252.09 691.624 L1252.65 691.624 L1253.21 691.624 L1253.77 691.624 L1254.33 691.624 L1254.89 691.624 L1255.45 691.624 L1256.01 691.624 L1256.57 691.624 L1257.13 691.624 L1257.69 691.624 L1258.25 691.624 L1258.81 691.624 L1259.36 691.624 L1259.92 691.624 L1260.48 691.624 L1261.04 691.624 L1261.6 691.624 L1262.16 691.624 L1262.72 691.624 L1263.28 691.624 L1263.84 691.624 L1264.4 691.624 L1264.96 691.624 L1265.52 691.624 L1266.08 691.624 L1266.63 691.624 L1267.19 691.624 L1267.75 691.624 L1268.31 691.624 L1268.87 691.624 L1269.43 691.624 L1269.99 691.624 L1270.55 691.624 L1271.11 691.624 L1271.67 691.624 L1272.23 691.624 L1272.79 691.624 L1273.35 691.624 L1273.91 691.624 L1274.46 691.624 L1275.02 691.624 L1275.58 691.624 L1276.14 691.624 L1276.7 691.624 L1277.26 691.624 L1277.82 691.624 L1278.38 691.624 L1278.94 691.624 L1279.5 691.624 L1280.06 691.624 L1280.62 691.624 L1281.18 691.624 L1281.73 691.624 L1282.29 691.624 L1282.85 691.624 L1283.41 691.624 L1283.97 691.624 L1284.53 691.624 L1285.09 691.624 L1285.65 691.624 L1286.21 691.624 L1286.77 691.624 L1287.33 691.624 L1287.89 691.624 L1288.45 691.624 L1289 691.624 L1289.56 691.624 L1290.12 691.624 L1290.68 691.624 L1291.24 691.624 L1291.8 691.624 L1292.36 691.624 L1292.92 691.624 L1293.48 691.624 L1294.04 691.624 L1294.6 691.624 L1295.16 691.624 L1295.72 691.624 L1296.28 691.624 L1296.83 691.624 L1297.39 691.624 L1297.95 691.624 L1298.51 691.624 L1299.07 691.624 L1299.63 691.624 L1300.19 691.624 L1300.75 691.624 L1301.31 691.624 L1301.87 691.624 L1302.43 691.624 L1302.99 691.624 L1303.55 691.624 L1304.1 691.624 L1304.66 691.624 L1305.22 691.624 L1305.78 691.624 L1306.34 691.624 L1306.9 691.624 L1307.46 691.624 L1308.02 691.624 L1308.58 691.624 L1309.14 691.624 L1309.7 691.624 L1310.26 691.624 L1310.82 691.624 L1311.38 691.624 L1311.93 691.624 L1312.49 691.624 L1313.05 691.624 L1313.61 691.624 L1314.17 691.624 L1314.73 691.624 L1315.29 691.624 L1315.85 691.624 L1316.41 691.624 L1316.97 691.624 L1317.53 691.624 L1318.09 691.624 L1318.65 691.624 L1319.2 691.624 L1319.76 691.624 L1320.32 691.624 L1320.88 691.624 L1321.44 691.624 L1322 691.624 L1322.56 691.624 L1323.12 691.624 L1323.68 691.624 L1324.24 691.624 L1324.8 691.624 L1325.36 691.624 L1325.92 691.624 L1326.47 691.624 L1327.03 691.624 L1327.59 691.624 L1328.15 691.624 L1328.71 691.624 L1329.27 691.624 L1329.83 691.624 L1330.39 691.624 L1330.95 691.624 L1331.51 691.624 L1332.07 691.624 L1332.63 691.624 L1333.19 691.624 L1333.75 691.624 L1334.3 691.624 L1334.86 691.624 L1335.42 691.624 L1335.98 691.624 L1336.54 691.624 L1337.1 691.624 L1337.66 691.624 L1338.22 691.624 L1338.78 691.624 L1339.34 691.624 L1339.9 691.624 L1340.46 691.624 L1341.02 691.624 L1341.57 691.624 L1342.13 691.624 L1342.69 691.624 L1343.25 691.624 L1343.81 691.624 L1344.37 691.624 L1344.93 691.624 L1345.49 691.624 L1346.05 691.624 L1346.61 691.624 L1347.17 691.624 L1347.73 691.624 L1348.29 691.624 L1348.84 691.624 L1349.4 691.624 L1349.96 691.624 L1350.52 691.624 L1351.08 691.624 L1351.64 691.624 L1352.2 691.624 L1352.76 691.624 L1353.32 691.624 L1353.88 691.624 L1354.44 691.624 L1355 691.624 L1355.56 691.624 L1356.12 691.624 L1356.67 691.624 L1357.23 691.624 L1357.79 691.624 L1358.35 691.624 L1358.91 691.624 L1359.47 691.624 L1360.03 691.624 L1360.59 691.624 L1361.15 691.624 L1361.71 691.624 L1362.27 691.624 L1362.83 691.624 L1363.39 691.624 L1363.94 691.624 L1364.5 691.624 L1365.06 691.624 L1365.62 691.624 L1366.18 691.624 L1366.74 691.624 L1367.3 691.624 L1367.86 691.624 L1368.42 691.624 L1368.98 691.624 L1369.54 691.624 L1370.1 691.624 L1370.66 691.624 L1371.21 691.624 L1371.77 691.624 L1372.33 691.624 L1372.89 691.624 L1373.45 691.624 L1374.01 691.624 L1374.57 691.624 L1375.13 691.624 L1375.69 691.624 L1376.25 691.624 L1376.81 691.624 L1377.37 691.624 L1377.93 691.624 L1378.49 691.624 L1379.04 691.624 L1379.6 691.624 L1380.16 691.624 L1380.72 691.624 L1381.28 691.624 L1381.84 691.624 L1382.4 691.624 L1382.96 691.624 L1383.52 691.624 L1384.08 691.624 L1384.64 691.624 L1385.2 691.624 L1385.76 691.624 L1386.31 691.624 L1386.87 691.624 L1387.43 691.624 L1387.99 691.624 L1388.55 691.624 L1389.11 691.624 L1389.67 691.624 L1390.23 691.624 L1390.79 691.624 L1391.35 691.624 L1391.91 691.624 L1392.47 691.624 L1393.03 691.624 L1393.58 691.624 L1394.14 691.624 L1394.7 691.624 L1395.26 691.624 L1395.82 691.624 L1396.38 691.624 L1396.94 691.624 L1397.5 691.624 L1398.06 691.624 L1398.62 691.624 L1399.18 691.624 L1399.74 691.624 L1400.3 691.624 L1400.86 691.624 L1401.41 691.624 L1401.97 691.624 L1402.53 691.624 L1403.09 691.624 L1403.65 691.624 L1404.21 691.624 L1404.77 691.624 L1405.33 691.624 L1405.89 691.624 L1406.45 691.624 L1407.01 691.624 L1407.57 691.624 L1408.13 691.624 L1408.68 691.624 L1409.24 691.624 L1409.8 691.624 L1410.36 691.624 L1410.92 691.624 L1411.48 691.624 L1412.04 691.624 L1412.6 691.624 L1413.16 691.624 L1413.72 691.624 L1414.28 691.624 L1414.84 691.624 L1415.4 691.624 L1415.95 691.624 L1416.51 691.624 L1417.07 691.624 L1417.63 691.624 L1418.19 691.624 L1418.75 691.624 L1419.31 691.624 L1419.87 691.624 L1420.43 691.624 L1420.99 691.624 L1421.55 691.624 L1422.11 691.624 L1422.67 691.624 L1423.23 691.624 L1423.78 691.624 L1424.34 691.624 L1424.9 691.624 L1425.46 691.624 L1426.02 691.624 L1426.58 691.624 L1427.14 691.624 L1427.7 691.624 L1428.26 691.624 L1428.82 691.624 L1429.38 691.624 L1429.94 691.624 L1430.5 691.624 L1431.05 691.624 L1431.61 691.624 L1432.17 691.624 L1432.73 691.624 L1433.29 691.624 L1433.85 691.624 L1434.41 691.624 L1434.97 691.624 L1435.53 691.624 L1436.09 691.624 L1436.65 691.624 L1437.21 691.624 L1437.77 691.624 L1438.33 691.624 L1438.88 691.624 L1439.44 691.624 L1440 691.624 L1440.56 691.624 L1441.12 691.624 L1441.68 691.624 L1442.24 691.624 L1442.8 691.624 L1443.36 691.624 L1443.92 691.624 L1444.48 691.624 L1445.04 691.624 L1445.6 691.624 L1446.15 691.624 L1446.71 691.624 L1447.27 691.624 L1447.83 691.624 L1448.39 691.624 L1448.95 691.624 L1449.51 691.624 L1450.07 691.624 L1450.63 691.624 L1451.19 691.624 L1451.75 691.624 L1452.31 691.624 L1452.87 691.624 L1453.42 691.624 L1453.98 691.624 L1454.54 691.624 L1455.1 691.624 L1455.66 691.624 L1456.22 691.624 L1456.78 691.624 L1457.34 691.624 L1457.9 691.624 L1458.46 691.624 L1459.02 691.624 L1459.58 691.624 L1460.14 691.624 L1460.7 691.624 L1461.25 691.624 L1461.81 691.624 L1462.37 691.624 L1462.93 691.624 L1463.49 691.624 L1464.05 691.624 L1464.61 691.624 L1465.17 691.624 L1465.73 691.624 L1466.29 691.624 L1466.85 691.624 L1467.41 691.624 L1467.97 691.624 L1468.52 691.624 L1469.08 691.624 L1469.64 691.624 L1470.2 691.624 L1470.76 691.624 L1471.32 691.624 L1471.88 691.624 L1472.44 691.624 L1473 691.624 L1473.56 691.624 L1474.12 691.624 L1474.68 691.624 L1475.24 691.624 L1475.79 691.624 L1476.35 691.624 L1476.91 691.624 L1477.47 691.624 L1478.03 691.624 L1478.59 691.624 L1479.15 691.624 L1479.71 691.624 L1480.27 691.624 L1480.83 691.624 L1481.39 691.624 L1481.95 691.624 L1482.51 691.624 L1483.07 691.624 L1483.62 691.624 L1484.18 691.624 L1484.74 691.624 L1485.3 691.624 L1485.86 691.624 L1486.42 691.624 L1486.98 691.624 L1487.54 691.624 L1488.1 691.624 L1488.66 691.624 L1489.22 691.624 L1489.78 691.624 L1490.34 691.624 L1490.89 691.624 L1491.45 691.624 L1492.01 691.624 L1492.57 691.624 L1493.13 691.624 L1493.69 691.624 L1494.25 691.624 L1494.81 691.624 L1495.37 691.624 L1495.93 691.624 L1496.49 691.624 L1497.05 691.624 L1497.61 691.624 L1498.16 691.624 L1498.72 691.624 L1499.28 691.624 L1499.84 691.624 L1500.4 691.624 L1500.96 691.624 L1501.52 691.624 L1502.08 691.624 L1502.64 691.624 L1503.2 691.624 L1503.76 691.624 L1504.32 691.624 L1504.88 691.624 L1505.44 691.624 L1505.99 691.624 L1506.55 691.624 L1507.11 691.624 L1507.67 691.624 L1508.23 691.624 L1508.79 691.624 L1509.35 691.624 L1509.91 691.624 L1510.47 691.624 L1511.03 691.624 L1511.59 691.624 L1512.15 691.624 L1512.71 691.624 L1513.26 691.624 L1513.82 691.624 L1514.38 691.624 L1514.94 691.624 L1515.5 691.624 L1516.06 691.624 L1516.62 691.624 L1517.18 691.624 L1517.74 691.624 L1518.3 691.624 L1518.86 691.624 L1519.42 691.624 L1519.98 691.624 L1520.53 691.624 L1521.09 691.624 L1521.65 691.624 L1522.21 691.624 L1522.77 691.624 L1523.33 691.624 L1523.89 691.624 L1524.45 691.624 L1525.01 691.624 L1525.57 691.624 L1526.13 691.624 L1526.69 691.624 L1527.25 691.624 L1527.81 691.624 L1528.36 691.624 L1528.92 691.624 L1529.48 691.624 L1530.04 691.624 L1530.6 691.624 L1531.16 691.624 L1531.72 691.624 L1532.28 691.624 L1532.84 691.624 L1533.4 691.624 L1533.96 691.624 L1534.52 691.624 L1535.08 691.624 L1535.63 691.624 L1536.19 691.624 L1536.75 691.624 L1537.31 691.624 L1537.87 691.624 L1538.43 691.624 L1538.99 691.624 L1539.55 691.624 L1540.11 691.624 L1540.67 691.624 L1541.23 691.624 L1541.79 691.624 L1542.35 691.624 L1542.9 691.624 L1543.46 691.624 L1544.02 691.624 L1544.58 691.624 L1545.14 691.624 L1545.7 691.624 L1546.26 691.624 L1546.82 691.624 L1547.38 691.624 L1547.94 691.624 L1548.5 691.624 L1549.06 691.624 L1549.62 691.624 L1550.18 691.624 L1550.73 691.624 L1551.29 691.624 L1551.85 691.624 L1552.41 691.624 L1552.97 691.624 L1553.53 691.624 L1554.09 691.624 L1554.65 691.624 L1555.21 691.624 L1555.77 691.624 L1556.33 691.624 L1556.89 691.624 L1557.45 691.624 L1558 691.624 L1558.56 691.624 L1559.12 691.624 L1559.68 691.624 L1560.24 691.624 L1560.8 691.624 L1561.36 691.624 L1561.92 691.624 L1562.48 691.624 L1563.04 691.624 L1563.6 691.624 L1564.16 691.624 L1564.72 691.624 L1565.28 691.624 L1565.83 691.624 L1566.39 691.624 L1566.95 691.624 L1567.51 691.624 L1568.07 691.624 L1568.63 691.624 L1569.19 691.624 L1569.75 691.624 L1570.31 691.624 L1570.87 691.624 L1571.43 691.624 L1571.99 691.624 L1572.55 691.624 L1573.1 691.624 L1573.66 691.624 L1574.22 691.624 L1574.78 691.624 L1575.34 691.624 L1575.9 691.624 L1576.46 691.624 L1577.02 691.624 L1577.58 691.624 L1578.14 691.624 L1578.7 691.624 L1579.26 691.624 L1579.82 691.624 L1580.37 691.624 L1580.93 691.624 L1581.49 691.624 L1582.05 691.624 L1582.61 691.624 L1583.17 691.624 L1583.73 691.624 L1584.29 691.624 L1584.85 691.624 L1585.41 691.624 L1585.97 691.624 L1586.53 691.624 L1587.09 691.624 L1587.65 691.624 L1588.2 691.624 L1588.76 691.624 L1589.32 691.624 L1589.88 691.624 L1590.44 691.624 L1591 691.624 L1591.56 691.624 L1592.12 691.624 L1592.68 691.624 L1593.24 691.624 L1593.8 691.624 L1594.36 691.624 L1594.92 691.624 L1595.47 691.624 L1596.03 691.624 L1596.59 691.624 L1597.15 691.624 L1597.71 691.624 L1598.27 691.624 L1598.83 691.624 L1599.39 691.624 L1599.95 691.624 L1600.51 691.624 L1601.07 691.624 L1601.63 691.624 L1602.19 691.624 L1602.74 691.624 L1603.3 691.624 L1603.86 691.624 L1604.42 691.624 L1604.98 691.624 L1605.54 691.624 L1606.1 691.624 L1606.66 691.624 L1607.22 691.624 L1607.78 691.624 L1608.34 691.624 L1608.9 691.624 L1609.46 691.624 L1610.02 691.624 L1610.57 691.624 L1611.13 691.624 L1611.69 691.624 L1612.25 691.624 L1612.81 691.624 L1613.37 691.624 L1613.93 691.624 L1614.49 691.624 L1615.05 691.624 L1615.61 691.624 L1616.17 691.624 L1616.73 691.624 L1617.29 691.624 L1617.84 691.624 L1618.4 691.624 L1618.96 691.624 L1619.52 691.624 L1620.08 691.624 L1620.64 691.624 L1621.2 691.624 L1621.76 691.624 L1622.32 691.624 L1622.88 691.624 L1623.44 691.624 L1624 691.624 L1624.56 691.624 L1625.11 691.624 L1625.67 691.624 L1626.23 691.624 L1626.79 691.624 L1627.35 691.624 L1627.91 691.624 L1628.47 691.624 L1629.03 691.624 L1629.59 691.624 L1630.15 691.624 L1630.71 691.624 L1631.27 691.624 L1631.83 691.624 L1632.39 691.624 L1632.94 691.624 L1633.5 691.624 L1634.06 691.624 L1634.62 691.624 L1635.18 691.624 L1635.74 691.624 L1636.3 691.624 L1636.86 691.624 L1637.42 691.624 L1637.98 691.624 L1638.54 691.624 L1639.1 691.624 L1639.66 691.624 L1640.21 691.624 L1640.77 691.624 L1641.33 691.624 L1641.89 691.624 L1642.45 691.624 L1643.01 691.624 L1643.57 691.624 L1644.13 691.624 L1644.69 691.624 L1645.25 691.624 L1645.81 691.624 L1646.37 691.624 L1646.93 691.624 L1647.48 691.624 L1648.04 691.624 L1648.6 691.624 L1649.16 691.624 L1649.72 691.624 L1650.28 691.624 L1650.84 691.624 L1651.4 691.624 L1651.96 691.624 L1652.52 691.624 L1653.08 691.624 L1653.64 691.624 L1654.2 691.624 L1654.76 691.624 L1655.31 691.624 L1655.87 691.624 L1656.43 691.624 L1656.99 691.624 L1657.55 691.624 L1658.11 691.624 L1658.67 691.624 L1659.23 691.624 L1659.79 691.624 L1660.35 691.624 L1660.91 691.624 L1661.47 691.624 L1662.03 691.624 L1662.58 691.624 L1663.14 691.624 L1663.7 691.624 L1664.26 691.624 L1664.82 691.624 L1665.38 691.624 L1665.94 691.624 L1666.5 691.624 L1667.06 691.624 L1667.62 691.624 L1668.18 691.624 L1668.74 691.624 L1669.3 691.624 L1669.85 691.624 L1670.41 691.624 L1670.97 691.624 L1671.53 691.624 L1672.09 691.624 L1672.65 691.624 L1673.21 691.624 L1673.77 691.624 L1674.33 691.624 L1674.89 691.624 L1675.45 691.624 L1676.01 691.624 L1676.57 691.624 L1677.13 691.624 L1677.68 691.624 L1678.24 691.624 L1678.8 691.624 L1679.36 691.624 L1679.92 691.624 L1680.48 691.624 L1681.04 691.624 L1681.6 691.624 L1682.16 691.624 L1682.72 691.624 L1683.28 691.624 L1683.84 691.624 L1684.4 691.624 L1684.95 691.624 L1685.51 691.624 L1686.07 691.624 L1686.63 691.624 L1687.19 691.624 L1687.75 691.624 L1688.31 691.624 L1688.87 691.624 L1689.43 691.624 L1689.99 691.624 L1690.55 691.624 L1691.11 691.624 L1691.67 691.624 L1692.23 691.624 L1692.78 691.624 L1693.34 691.624 L1693.9 691.624 L1694.46 691.624 L1695.02 691.624 L1695.58 691.624 L1696.14 691.624 L1696.7 691.624 L1697.26 691.624 L1697.82 691.624 L1698.38 691.624 L1698.94 691.624 L1699.5 691.624 L1700.05 691.624 L1700.61 691.624 L1701.17 691.624 L1701.73 691.624 L1702.29 691.624 L1702.85 691.624 L1703.41 691.624 L1703.97 691.624 L1704.53 691.624 L1705.09 691.624 L1705.65 691.624 L1706.21 691.624 L1706.77 691.624 L1707.32 691.624 L1707.88 691.624 L1708.44 691.624 L1709 691.624 L1709.56 691.624 L1710.12 691.624 L1710.68 691.624 L1711.24 691.624 L1711.8 691.624 L1712.36 691.624 L1712.92 691.624 L1713.48 691.624 L1714.04 691.624 L1714.6 691.624 L1715.15 691.624 L1715.71 691.624 L1716.27 691.624 L1716.83 691.624 L1717.39 691.624 L1717.95 691.624 L1718.51 691.624 L1719.07 691.624 L1719.63 691.624 L1720.19 691.624 L1720.75 691.624 L1721.31 691.624 L1721.87 691.624 L1722.42 691.624 L1722.98 691.624 L1723.54 691.624 L1724.1 691.624 L1724.66 691.624 L1725.22 691.624 L1725.78 691.624 L1726.34 691.624 L1726.9 691.624 L1727.46 691.624 L1728.02 691.624 L1728.58 691.624 L1729.14 691.624 L1729.69 691.624 L1730.25 691.624 L1730.81 691.624 L1731.37 691.624 L1731.93 691.624 L1732.49 691.624 L1733.05 691.624 L1733.61 691.624 L1734.17 691.624 L1734.73 691.624 L1735.29 691.624 L1735.85 691.624 L1736.41 691.624 L1736.97 691.624 L1737.52 691.624 L1738.08 691.624 L1738.64 691.624 L1739.2 691.624 L1739.76 691.624 L1740.32 691.624 L1740.88 691.624 L1741.44 691.624 L1742 691.624 L1742.56 691.624 L1743.12 691.624 L1743.68 691.624 L1744.24 691.624 L1744.79 691.624 L1745.35 691.624 L1745.91 691.624 L1746.47 691.624 L1747.03 691.624 L1747.59 691.624 L1748.15 691.624 L1748.71 691.624 L1749.27 691.624 L1749.83 691.624 L1750.39 691.624 L1750.95 691.624 L1751.51 691.624 L1752.06 691.624 L1752.62 691.624 L1753.18 691.624 L1753.74 691.624 L1754.3 691.624 L1754.86 691.624 L1755.42 691.624 L1755.98 691.624 L1756.54 691.624 L1757.1 691.624 L1757.66 691.624 L1758.22 691.624 L1758.78 691.624 L1759.34 691.624 L1759.89 691.624 L1760.45 691.624 L1761.01 691.624 L1761.57 691.624 L1762.13 691.624 L1762.69 691.624 L1763.25 691.624 L1763.81 691.624 L1764.37 691.624 L1764.93 691.624 L1765.49 691.624 L1766.05 691.624 L1766.61 691.624 L1767.16 691.624 L1767.72 691.624 L1768.28 691.624 L1768.84 691.624 L1769.4 691.624 L1769.96 691.624 L1770.52 691.624 L1771.08 691.624 L1771.64 691.624 L1772.2 691.624 L1772.76 691.624 L1773.32 691.624 L1773.88 691.624 L1774.43 691.624 L1774.99 691.624 L1775.55 691.624 L1776.11 691.624 L1776.67 691.624 L1777.23 691.624 L1777.79 691.624 L1778.35 691.624 L1778.91 691.624 L1779.47 691.624 L1780.03 691.624 L1780.59 691.624 L1781.15 691.624 L1781.71 691.624 L1782.26 691.624 L1782.82 691.624 L1783.38 691.624 L1783.94 691.624 L1784.5 691.624 L1785.06 691.624 L1785.62 691.624 L1786.18 691.624 L1786.74 691.624 L1787.3 691.624 L1787.86 691.624 L1788.42 691.624 L1788.98 691.624 L1789.53 691.624 L1790.09 691.624 L1790.65 691.624 L1791.21 691.624 L1791.77 691.624 L1792.33 691.624 L1792.89 691.624 L1793.45 691.624 L1794.01 691.624 L1794.57 691.624 L1795.13 691.624 L1795.69 691.624 L1796.25 691.624 L1796.8 691.624 L1797.36 691.624 L1797.92 691.624 L1798.48 691.624 L1799.04 691.624 L1799.6 691.624 L1800.16 691.624 L1800.72 691.624 L1801.28 691.624 L1801.84 691.624 L1802.4 691.624 L1802.96 691.624 L1803.52 691.624 L1804.08 691.624 L1804.63 691.624 L1805.19 691.624 L1805.75 691.624 L1806.31 691.624 L1806.87 691.624 L1807.43 691.624 L1807.99 691.624 L1808.55 691.624 L1809.11 691.624 L1809.67 691.624 L1810.23 691.624 L1810.79 691.624 L1811.35 691.624 L1811.9 691.624 L1812.46 691.624 L1813.02 691.624 L1813.58 691.624 L1814.14 691.624 L1814.7 691.624 L1815.26 691.624 L1815.82 691.624 L1816.38 691.624 L1816.94 691.624 L1817.5 691.624 L1818.06 691.624 L1818.62 691.624 L1819.18 691.624 L1819.73 691.624 L1820.29 691.624 L1820.85 691.624 L1821.41 691.624 L1821.97 691.624 L1822.53 691.624 L1823.09 691.624 L1823.65 691.624 L1824.21 691.624 L1824.77 691.624 L1825.33 691.624 L1825.89 691.624 L1826.45 691.624 L1827 691.624 L1827.56 691.624 L1828.12 691.624 L1828.68 691.624 L1829.24 691.624 L1829.8 691.624 L1830.36 691.624 L1830.92 691.624 L1831.48 691.624 L1832.04 691.624 L1832.6 691.624 L1833.16 691.624 L1833.72 691.624 L1834.27 691.624 L1834.83 691.624 L1835.39 691.624 L1835.95 691.624 L1836.51 691.624 L1837.07 691.624 L1837.63 691.624 L1838.19 691.624 L1838.19 683.301 L1837.63 683.301 L1837.07 683.301 L1836.51 683.301 L1835.95 683.301 L1835.39 683.301 L1834.83 683.301 L1834.27 683.301 L1833.72 683.301 L1833.16 683.301 L1832.6 683.301 L1832.04 683.301 L1831.48 683.301 L1830.92 683.301 L1830.36 683.301 L1829.8 683.301 L1829.24 683.301 L1828.68 683.301 L1828.12 683.301 L1827.56 683.301 L1827 683.301 L1826.45 683.301 L1825.89 683.301 L1825.33 683.301 L1824.77 683.301 L1824.21 683.301 L1823.65 683.301 L1823.09 683.301 L1822.53 683.301 L1821.97 683.301 L1821.41 683.301 L1820.85 683.301 L1820.29 683.301 L1819.73 683.301 L1819.18 683.301 L1818.62 683.301 L1818.06 683.301 L1817.5 683.301 L1816.94 683.301 L1816.38 683.301 L1815.82 683.301 L1815.26 683.301 L1814.7 683.301 L1814.14 683.301 L1813.58 683.301 L1813.02 683.301 L1812.46 683.301 L1811.9 683.301 L1811.35 683.301 L1810.79 683.301 L1810.23 683.301 L1809.67 683.301 L1809.11 683.301 L1808.55 683.301 L1807.99 683.301 L1807.43 683.301 L1806.87 683.301 L1806.31 683.301 L1805.75 683.301 L1805.19 683.301 L1804.63 683.301 L1804.08 683.301 L1803.52 683.301 L1802.96 683.301 L1802.4 683.301 L1801.84 683.301 L1801.28 683.301 L1800.72 683.301 L1800.16 683.301 L1799.6 683.301 L1799.04 683.301 L1798.48 683.301 L1797.92 683.301 L1797.36 683.301 L1796.8 683.301 L1796.25 683.301 L1795.69 683.301 L1795.13 683.301 L1794.57 683.301 L1794.01 683.301 L1793.45 683.301 L1792.89 683.301 L1792.33 683.301 L1791.77 683.301 L1791.21 683.301 L1790.65 683.301 L1790.09 683.301 L1789.53 683.301 L1788.98 683.301 L1788.42 683.301 L1787.86 683.301 L1787.3 683.301 L1786.74 683.301 L1786.18 683.301 L1785.62 683.301 L1785.06 683.301 L1784.5 683.301 L1783.94 683.301 L1783.38 683.301 L1782.82 683.301 L1782.26 683.301 L1781.71 683.301 L1781.15 683.301 L1780.59 683.301 L1780.03 683.301 L1779.47 683.301 L1778.91 683.301 L1778.35 683.301 L1777.79 683.301 L1777.23 683.301 L1776.67 683.301 L1776.11 683.301 L1775.55 683.301 L1774.99 683.301 L1774.43 683.301 L1773.88 683.301 L1773.32 683.301 L1772.76 683.301 L1772.2 683.301 L1771.64 683.301 L1771.08 683.301 L1770.52 683.301 L1769.96 683.301 L1769.4 683.301 L1768.84 683.301 L1768.28 683.301 L1767.72 683.301 L1767.16 683.301 L1766.61 683.301 L1766.05 683.301 L1765.49 683.301 L1764.93 683.301 L1764.37 683.301 L1763.81 683.301 L1763.25 683.301 L1762.69 683.301 L1762.13 683.301 L1761.57 683.301 L1761.01 683.301 L1760.45 683.301 L1759.89 683.301 L1759.34 683.301 L1758.78 683.301 L1758.22 683.301 L1757.66 683.301 L1757.1 683.301 L1756.54 683.301 L1755.98 683.301 L1755.42 683.301 L1754.86 683.301 L1754.3 683.301 L1753.74 683.301 L1753.18 683.301 L1752.62 683.301 L1752.06 683.301 L1751.51 683.301 L1750.95 683.301 L1750.39 683.301 L1749.83 683.301 L1749.27 683.301 L1748.71 683.301 L1748.15 683.301 L1747.59 683.301 L1747.03 683.301 L1746.47 683.301 L1745.91 683.301 L1745.35 683.301 L1744.79 683.301 L1744.24 683.301 L1743.68 683.301 L1743.12 683.301 L1742.56 683.301 L1742 683.301 L1741.44 683.301 L1740.88 683.301 L1740.32 683.301 L1739.76 683.301 L1739.2 683.301 L1738.64 683.301 L1738.08 683.301 L1737.52 683.301 L1736.97 683.301 L1736.41 683.301 L1735.85 683.301 L1735.29 683.301 L1734.73 683.301 L1734.17 683.301 L1733.61 683.301 L1733.05 683.301 L1732.49 683.301 L1731.93 683.301 L1731.37 683.301 L1730.81 683.301 L1730.25 683.301 L1729.69 683.301 L1729.14 683.301 L1728.58 683.301 L1728.02 683.301 L1727.46 683.301 L1726.9 683.301 L1726.34 683.301 L1725.78 683.301 L1725.22 683.301 L1724.66 683.301 L1724.1 683.301 L1723.54 683.301 L1722.98 683.301 L1722.42 683.301 L1721.87 683.301 L1721.31 683.301 L1720.75 683.301 L1720.19 683.301 L1719.63 683.301 L1719.07 683.301 L1718.51 683.301 L1717.95 683.301 L1717.39 683.301 L1716.83 683.301 L1716.27 683.301 L1715.71 683.301 L1715.15 683.301 L1714.6 683.301 L1714.04 683.301 L1713.48 683.301 L1712.92 683.301 L1712.36 683.301 L1711.8 683.301 L1711.24 683.301 L1710.68 683.301 L1710.12 683.301 L1709.56 683.301 L1709 683.301 L1708.44 683.301 L1707.88 683.301 L1707.32 683.301 L1706.77 683.301 L1706.21 683.301 L1705.65 683.301 L1705.09 683.301 L1704.53 683.301 L1703.97 683.301 L1703.41 683.301 L1702.85 683.301 L1702.29 683.301 L1701.73 683.301 L1701.17 683.301 L1700.61 683.301 L1700.05 683.301 L1699.5 683.301 L1698.94 683.301 L1698.38 683.301 L1697.82 683.301 L1697.26 683.301 L1696.7 683.301 L1696.14 683.301 L1695.58 683.301 L1695.02 683.301 L1694.46 683.301 L1693.9 683.301 L1693.34 683.301 L1692.78 683.301 L1692.23 683.301 L1691.67 683.301 L1691.11 683.301 L1690.55 683.301 L1689.99 683.301 L1689.43 683.301 L1688.87 683.301 L1688.31 683.301 L1687.75 683.301 L1687.19 683.301 L1686.63 683.301 L1686.07 683.301 L1685.51 683.301 L1684.95 683.301 L1684.4 683.301 L1683.84 683.301 L1683.28 683.301 L1682.72 683.301 L1682.16 683.301 L1681.6 683.301 L1681.04 683.301 L1680.48 683.301 L1679.92 683.301 L1679.36 683.301 L1678.8 683.301 L1678.24 683.301 L1677.68 683.301 L1677.13 683.301 L1676.57 683.301 L1676.01 683.301 L1675.45 683.301 L1674.89 683.301 L1674.33 683.301 L1673.77 683.301 L1673.21 683.301 L1672.65 683.301 L1672.09 683.301 L1671.53 683.301 L1670.97 683.301 L1670.41 683.301 L1669.85 683.301 L1669.3 683.301 L1668.74 683.301 L1668.18 683.301 L1667.62 683.301 L1667.06 683.301 L1666.5 683.301 L1665.94 683.301 L1665.38 683.301 L1664.82 683.301 L1664.26 683.301 L1663.7 683.301 L1663.14 683.301 L1662.58 683.301 L1662.03 683.301 L1661.47 683.301 L1660.91 683.301 L1660.35 683.301 L1659.79 683.301 L1659.23 683.301 L1658.67 683.301 L1658.11 683.301 L1657.55 683.301 L1656.99 683.301 L1656.43 683.301 L1655.87 683.301 L1655.31 683.301 L1654.76 683.301 L1654.2 683.301 L1653.64 683.301 L1653.08 683.301 L1652.52 683.301 L1651.96 683.301 L1651.4 683.301 L1650.84 683.301 L1650.28 683.301 L1649.72 683.301 L1649.16 683.301 L1648.6 683.301 L1648.04 683.301 L1647.48 683.301 L1646.93 683.301 L1646.37 683.301 L1645.81 683.301 L1645.25 683.301 L1644.69 683.301 L1644.13 683.301 L1643.57 683.301 L1643.01 683.301 L1642.45 683.301 L1641.89 683.301 L1641.33 683.301 L1640.77 683.301 L1640.21 683.301 L1639.66 683.301 L1639.1 683.301 L1638.54 683.301 L1637.98 683.301 L1637.42 683.301 L1636.86 683.301 L1636.3 683.301 L1635.74 683.301 L1635.18 683.301 L1634.62 683.301 L1634.06 683.301 L1633.5 683.301 L1632.94 683.301 L1632.39 683.301 L1631.83 683.301 L1631.27 683.301 L1630.71 683.301 L1630.15 683.301 L1629.59 683.301 L1629.03 683.301 L1628.47 683.301 L1627.91 683.301 L1627.35 683.301 L1626.79 683.301 L1626.23 683.301 L1625.67 683.301 L1625.11 683.301 L1624.56 683.301 L1624 683.301 L1623.44 683.301 L1622.88 683.301 L1622.32 683.301 L1621.76 683.301 L1621.2 683.301 L1620.64 683.301 L1620.08 683.301 L1619.52 683.301 L1618.96 683.301 L1618.4 683.301 L1617.84 683.301 L1617.29 683.301 L1616.73 683.301 L1616.17 683.301 L1615.61 683.301 L1615.05 683.301 L1614.49 683.301 L1613.93 683.301 L1613.37 683.301 L1612.81 683.301 L1612.25 683.301 L1611.69 683.301 L1611.13 683.301 L1610.57 683.301 L1610.02 683.301 L1609.46 683.301 L1608.9 683.301 L1608.34 683.301 L1607.78 683.301 L1607.22 683.301 L1606.66 683.301 L1606.1 683.301 L1605.54 683.301 L1604.98 683.301 L1604.42 683.301 L1603.86 683.301 L1603.3 683.301 L1602.74 683.301 L1602.19 683.301 L1601.63 683.301 L1601.07 683.301 L1600.51 683.301 L1599.95 683.301 L1599.39 683.301 L1598.83 683.301 L1598.27 683.301 L1597.71 683.301 L1597.15 683.301 L1596.59 683.301 L1596.03 683.301 L1595.47 683.301 L1594.92 683.301 L1594.36 683.301 L1593.8 683.301 L1593.24 683.301 L1592.68 683.301 L1592.12 683.301 L1591.56 683.301 L1591 683.301 L1590.44 683.301 L1589.88 683.301 L1589.32 683.301 L1588.76 683.301 L1588.2 683.301 L1587.65 683.301 L1587.09 683.301 L1586.53 683.301 L1585.97 683.301 L1585.41 683.301 L1584.85 683.301 L1584.29 683.301 L1583.73 683.301 L1583.17 683.301 L1582.61 683.301 L1582.05 683.301 L1581.49 683.301 L1580.93 683.301 L1580.37 683.301 L1579.82 683.301 L1579.26 683.301 L1578.7 683.301 L1578.14 683.301 L1577.58 683.301 L1577.02 683.301 L1576.46 683.301 L1575.9 683.301 L1575.34 683.301 L1574.78 683.301 L1574.22 683.301 L1573.66 683.301 L1573.1 683.301 L1572.55 683.301 L1571.99 683.301 L1571.43 683.301 L1570.87 683.301 L1570.31 683.301 L1569.75 683.301 L1569.19 683.301 L1568.63 683.301 L1568.07 683.301 L1567.51 683.301 L1566.95 683.301 L1566.39 683.301 L1565.83 683.301 L1565.28 683.301 L1564.72 683.301 L1564.16 683.301 L1563.6 683.301 L1563.04 683.301 L1562.48 683.301 L1561.92 683.301 L1561.36 683.301 L1560.8 683.301 L1560.24 683.301 L1559.68 683.301 L1559.12 683.301 L1558.56 683.301 L1558 683.301 L1557.45 683.301 L1556.89 683.301 L1556.33 683.301 L1555.77 683.301 L1555.21 683.301 L1554.65 683.301 L1554.09 683.301 L1553.53 683.301 L1552.97 683.301 L1552.41 683.301 L1551.85 683.301 L1551.29 683.301 L1550.73 683.301 L1550.18 683.301 L1549.62 683.301 L1549.06 683.301 L1548.5 683.301 L1547.94 683.301 L1547.38 683.301 L1546.82 683.301 L1546.26 683.301 L1545.7 683.301 L1545.14 683.301 L1544.58 683.301 L1544.02 683.301 L1543.46 683.301 L1542.9 683.301 L1542.35 683.301 L1541.79 683.301 L1541.23 683.301 L1540.67 683.301 L1540.11 683.301 L1539.55 683.301 L1538.99 683.301 L1538.43 683.301 L1537.87 683.301 L1537.31 683.301 L1536.75 683.301 L1536.19 683.301 L1535.63 683.301 L1535.08 683.301 L1534.52 683.301 L1533.96 683.301 L1533.4 683.301 L1532.84 683.301 L1532.28 683.301 L1531.72 683.301 L1531.16 683.301 L1530.6 683.301 L1530.04 683.301 L1529.48 683.301 L1528.92 683.301 L1528.36 683.301 L1527.81 683.301 L1527.25 683.301 L1526.69 683.301 L1526.13 683.301 L1525.57 683.301 L1525.01 683.301 L1524.45 683.301 L1523.89 683.301 L1523.33 683.301 L1522.77 683.301 L1522.21 683.301 L1521.65 683.301 L1521.09 683.301 L1520.53 683.301 L1519.98 683.301 L1519.42 683.301 L1518.86 683.301 L1518.3 683.301 L1517.74 683.301 L1517.18 683.301 L1516.62 683.301 L1516.06 683.301 L1515.5 683.301 L1514.94 683.301 L1514.38 683.301 L1513.82 683.301 L1513.26 683.301 L1512.71 683.301 L1512.15 683.301 L1511.59 683.301 L1511.03 683.301 L1510.47 683.301 L1509.91 683.301 L1509.35 683.301 L1508.79 683.301 L1508.23 683.301 L1507.67 683.301 L1507.11 683.301 L1506.55 683.301 L1505.99 683.301 L1505.44 683.301 L1504.88 683.301 L1504.32 683.301 L1503.76 683.301 L1503.2 683.301 L1502.64 683.301 L1502.08 683.301 L1501.52 683.301 L1500.96 683.301 L1500.4 683.301 L1499.84 683.301 L1499.28 683.301 L1498.72 683.301 L1498.16 683.301 L1497.61 683.301 L1497.05 683.301 L1496.49 683.301 L1495.93 683.301 L1495.37 683.301 L1494.81 683.301 L1494.25 683.301 L1493.69 683.301 L1493.13 683.301 L1492.57 683.301 L1492.01 683.301 L1491.45 683.301 L1490.89 683.301 L1490.34 683.301 L1489.78 683.301 L1489.22 683.301 L1488.66 683.301 L1488.1 683.301 L1487.54 683.301 L1486.98 683.301 L1486.42 683.301 L1485.86 683.301 L1485.3 683.301 L1484.74 683.301 L1484.18 683.301 L1483.62 683.301 L1483.07 683.301 L1482.51 683.301 L1481.95 683.301 L1481.39 683.301 L1480.83 683.301 L1480.27 683.301 L1479.71 683.301 L1479.15 683.301 L1478.59 683.301 L1478.03 683.301 L1477.47 683.301 L1476.91 683.301 L1476.35 683.301 L1475.79 683.301 L1475.24 683.301 L1474.68 683.301 L1474.12 683.301 L1473.56 683.301 L1473 683.301 L1472.44 683.301 L1471.88 683.301 L1471.32 683.301 L1470.76 683.301 L1470.2 683.301 L1469.64 683.301 L1469.08 683.301 L1468.52 683.301 L1467.97 683.301 L1467.41 683.301 L1466.85 683.301 L1466.29 683.301 L1465.73 683.301 L1465.17 683.301 L1464.61 683.301 L1464.05 683.301 L1463.49 683.301 L1462.93 683.301 L1462.37 683.301 L1461.81 683.301 L1461.25 683.301 L1460.7 683.301 L1460.14 683.301 L1459.58 683.301 L1459.02 683.301 L1458.46 683.301 L1457.9 683.301 L1457.34 683.301 L1456.78 683.301 L1456.22 683.301 L1455.66 683.301 L1455.1 683.301 L1454.54 683.301 L1453.98 683.301 L1453.42 683.301 L1452.87 683.301 L1452.31 683.301 L1451.75 683.301 L1451.19 683.301 L1450.63 683.301 L1450.07 683.301 L1449.51 683.301 L1448.95 683.301 L1448.39 683.301 L1447.83 683.301 L1447.27 683.301 L1446.71 683.301 L1446.15 683.301 L1445.6 683.301 L1445.04 683.301 L1444.48 683.301 L1443.92 683.301 L1443.36 683.301 L1442.8 683.301 L1442.24 683.301 L1441.68 683.301 L1441.12 683.301 L1440.56 683.301 L1440 683.301 L1439.44 683.301 L1438.88 683.301 L1438.33 683.301 L1437.77 683.301 L1437.21 683.301 L1436.65 683.301 L1436.09 683.301 L1435.53 683.301 L1434.97 683.301 L1434.41 683.301 L1433.85 683.301 L1433.29 683.301 L1432.73 683.301 L1432.17 683.301 L1431.61 683.301 L1431.05 683.301 L1430.5 683.301 L1429.94 683.301 L1429.38 683.301 L1428.82 683.301 L1428.26 683.301 L1427.7 683.301 L1427.14 683.301 L1426.58 683.301 L1426.02 683.301 L1425.46 683.301 L1424.9 683.301 L1424.34 683.301 L1423.78 683.301 L1423.23 683.301 L1422.67 683.301 L1422.11 683.301 L1421.55 683.301 L1420.99 683.301 L1420.43 683.301 L1419.87 683.301 L1419.31 683.301 L1418.75 683.301 L1418.19 683.301 L1417.63 683.301 L1417.07 683.301 L1416.51 683.301 L1415.95 683.301 L1415.4 683.301 L1414.84 683.301 L1414.28 683.301 L1413.72 683.301 L1413.16 683.301 L1412.6 683.301 L1412.04 683.301 L1411.48 683.301 L1410.92 683.301 L1410.36 683.301 L1409.8 683.301 L1409.24 683.301 L1408.68 683.301 L1408.13 683.301 L1407.57 683.301 L1407.01 683.301 L1406.45 683.301 L1405.89 683.301 L1405.33 683.301 L1404.77 683.301 L1404.21 683.301 L1403.65 683.301 L1403.09 683.301 L1402.53 683.301 L1401.97 683.301 L1401.41 683.301 L1400.86 683.301 L1400.3 683.301 L1399.74 683.301 L1399.18 683.301 L1398.62 683.301 L1398.06 683.301 L1397.5 683.301 L1396.94 683.301 L1396.38 683.301 L1395.82 683.301 L1395.26 683.301 L1394.7 683.301 L1394.14 683.301 L1393.58 683.301 L1393.03 683.301 L1392.47 683.301 L1391.91 683.301 L1391.35 683.301 L1390.79 683.301 L1390.23 683.301 L1389.67 683.301 L1389.11 683.301 L1388.55 683.301 L1387.99 683.301 L1387.43 683.301 L1386.87 683.301 L1386.31 683.301 L1385.76 683.301 L1385.2 683.301 L1384.64 683.301 L1384.08 683.301 L1383.52 683.301 L1382.96 683.301 L1382.4 683.301 L1381.84 683.301 L1381.28 683.301 L1380.72 683.301 L1380.16 683.301 L1379.6 683.301 L1379.04 683.301 L1378.49 683.301 L1377.93 683.301 L1377.37 683.301 L1376.81 683.301 L1376.25 683.301 L1375.69 683.301 L1375.13 683.301 L1374.57 683.301 L1374.01 683.301 L1373.45 683.301 L1372.89 683.301 L1372.33 683.301 L1371.77 683.301 L1371.21 683.301 L1370.66 683.301 L1370.1 683.301 L1369.54 683.301 L1368.98 683.301 L1368.42 683.301 L1367.86 683.301 L1367.3 683.301 L1366.74 683.301 L1366.18 683.301 L1365.62 683.301 L1365.06 683.301 L1364.5 683.301 L1363.94 683.301 L1363.39 683.301 L1362.83 683.301 L1362.27 683.301 L1361.71 683.301 L1361.15 683.301 L1360.59 683.301 L1360.03 683.301 L1359.47 683.301 L1358.91 683.301 L1358.35 683.301 L1357.79 683.301 L1357.23 683.301 L1356.67 683.301 L1356.12 683.301 L1355.56 683.301 L1355 683.301 L1354.44 683.301 L1353.88 683.301 L1353.32 683.301 L1352.76 683.301 L1352.2 683.301 L1351.64 683.301 L1351.08 683.301 L1350.52 683.301 L1349.96 683.301 L1349.4 683.301 L1348.84 683.301 L1348.29 683.301 L1347.73 683.301 L1347.17 683.301 L1346.61 683.301 L1346.05 683.301 L1345.49 683.301 L1344.93 683.301 L1344.37 683.301 L1343.81 683.301 L1343.25 683.301 L1342.69 683.301 L1342.13 683.301 L1341.57 683.301 L1341.02 683.301 L1340.46 683.301 L1339.9 683.301 L1339.34 683.301 L1338.78 683.301 L1338.22 683.301 L1337.66 683.301 L1337.1 683.301 L1336.54 683.301 L1335.98 683.301 L1335.42 683.301 L1334.86 683.301 L1334.3 683.301 L1333.75 683.301 L1333.19 683.301 L1332.63 683.301 L1332.07 683.301 L1331.51 683.301 L1330.95 683.301 L1330.39 683.301 L1329.83 683.301 L1329.27 683.301 L1328.71 683.301 L1328.15 683.301 L1327.59 683.301 L1327.03 683.301 L1326.47 683.301 L1325.92 683.301 L1325.36 683.301 L1324.8 683.301 L1324.24 683.301 L1323.68 683.301 L1323.12 683.301 L1322.56 683.301 L1322 683.301 L1321.44 683.301 L1320.88 683.301 L1320.32 683.301 L1319.76 683.301 L1319.2 683.301 L1318.65 683.301 L1318.09 683.301 L1317.53 683.301 L1316.97 683.301 L1316.41 683.301 L1315.85 683.301 L1315.29 683.301 L1314.73 683.301 L1314.17 683.301 L1313.61 683.301 L1313.05 683.301 L1312.49 683.301 L1311.93 683.301 L1311.38 683.301 L1310.82 683.301 L1310.26 683.301 L1309.7 683.301 L1309.14 683.301 L1308.58 683.301 L1308.02 683.301 L1307.46 683.301 L1306.9 683.301 L1306.34 683.301 L1305.78 683.301 L1305.22 683.301 L1304.66 683.301 L1304.1 683.301 L1303.55 683.301 L1302.99 683.301 L1302.43 683.301 L1301.87 683.301 L1301.31 683.301 L1300.75 683.301 L1300.19 683.301 L1299.63 683.301 L1299.07 683.301 L1298.51 683.301 L1297.95 683.301 L1297.39 683.301 L1296.83 683.301 L1296.28 683.301 L1295.72 683.301 L1295.16 683.301 L1294.6 683.301 L1294.04 683.301 L1293.48 683.301 L1292.92 683.301 L1292.36 683.301 L1291.8 683.301 L1291.24 683.301 L1290.68 683.301 L1290.12 683.301 L1289.56 683.301 L1289 683.301 L1288.45 683.301 L1287.89 683.301 L1287.33 683.301 L1286.77 683.301 L1286.21 683.301 L1285.65 683.301 L1285.09 683.301 L1284.53 683.301 L1283.97 683.301 L1283.41 683.301 L1282.85 683.301 L1282.29 683.301 L1281.73 683.301 L1281.18 683.301 L1280.62 683.301 L1280.06 683.301 L1279.5 683.301 L1278.94 683.301 L1278.38 683.301 L1277.82 683.301 L1277.26 683.301 L1276.7 683.301 L1276.14 683.301 L1275.58 683.301 L1275.02 683.301 L1274.46 683.301 L1273.91 683.301 L1273.35 683.301 L1272.79 683.301 L1272.23 683.301 L1271.67 683.301 L1271.11 683.301 L1270.55 683.301 L1269.99 683.301 L1269.43 683.301 L1268.87 683.301 L1268.31 683.301 L1267.75 683.301 L1267.19 683.301 L1266.63 683.301 L1266.08 683.301 L1265.52 683.301 L1264.96 683.301 L1264.4 683.301 L1263.84 683.301 L1263.28 683.301 L1262.72 683.301 L1262.16 683.301 L1261.6 683.301 L1261.04 683.301 L1260.48 683.301 L1259.92 683.301 L1259.36 683.301 L1258.81 683.301 L1258.25 683.301 L1257.69 683.301 L1257.13 683.301 L1256.57 683.301 L1256.01 683.301 L1255.45 683.301 L1254.89 683.301 L1254.33 683.301 L1253.77 683.301 L1253.21 683.301 L1252.65 683.301 L1252.09 683.301 L1251.54 683.301 L1250.98 683.301 L1250.42 683.301 L1249.86 683.301 L1249.3 683.301 L1248.74 683.301 L1248.18 683.301 L1247.62 683.301 L1247.06 683.301 L1246.5 683.301 L1245.94 683.301 L1245.38 683.301 L1244.82 683.301 L1244.26 683.301 L1243.71 683.301 L1243.15 683.301 L1242.59 683.301 L1242.03 683.301 L1241.47 683.301 L1240.91 683.301 L1240.35 683.301 L1239.79 683.301 L1239.23 683.301 L1238.67 683.301 L1238.11 683.301 L1237.55 683.301 L1236.99 683.301 L1236.44 683.301 L1235.88 683.301 L1235.32 683.301 L1234.76 683.301 L1234.2 683.301 L1233.64 683.301 L1233.08 683.301 L1232.52 683.301 L1231.96 683.301 L1231.4 683.301 L1230.84 683.301 L1230.28 683.301 L1229.72 683.301 L1229.17 683.301 L1228.61 683.301 L1228.05 683.301 L1227.49 683.301 L1226.93 683.301 L1226.37 683.301 L1225.81 683.301 L1225.25 683.301 L1224.69 683.301 L1224.13 683.301 L1223.57 683.301 L1223.01 683.301 L1222.45 683.301 L1221.89 683.301 L1221.34 683.301 L1220.78 683.301 L1220.22 683.301 L1219.66 683.301 L1219.1 683.301 L1218.54 683.301 L1217.98 683.301 L1217.42 683.301 L1216.86 683.301 L1216.3 683.301 L1215.74 683.301 L1215.18 683.301 L1214.62 683.301 L1214.07 683.301 L1213.51 683.301 L1212.95 683.301 L1212.39 683.301 L1211.83 683.301 L1211.27 683.301 L1210.71 683.301 L1210.15 683.301 L1209.59 683.301 L1209.03 683.301 L1208.47 683.301 L1207.91 683.301 L1207.35 683.301 L1206.8 683.301 L1206.24 683.301 L1205.68 683.301 L1205.12 683.301 L1204.56 683.301 L1204 683.301 L1203.44 683.301 L1202.88 683.301 L1202.32 683.301 L1201.76 683.301 L1201.2 683.301 L1200.64 683.301 L1200.08 683.301 L1199.52 683.301 L1198.97 683.301 L1198.41 683.301 L1197.85 683.301 L1197.29 683.301 L1196.73 683.301 L1196.17 683.301 L1195.61 683.301 L1195.05 683.301 L1194.49 683.301 L1193.93 683.301 L1193.37 683.301 L1192.81 683.301 L1192.25 683.301 L1191.7 683.301 L1191.14 683.301 L1190.58 683.301 L1190.02 683.301 L1189.46 683.301 L1188.9 683.301 L1188.34 683.301 L1187.78 683.301 L1187.22 683.301 L1186.66 683.301 L1186.1 683.301 L1185.54 683.301 L1184.98 683.301 L1184.43 683.301 L1183.87 683.301 L1183.31 683.301 L1182.75 683.301 L1182.19 683.301 L1181.63 683.301 L1181.07 683.301 L1180.51 683.301 L1179.95 683.301 L1179.39 683.301 L1178.83 683.301 L1178.27 683.301 L1177.71 683.301 L1177.15 683.301 L1176.6 683.301 L1176.04 683.301 L1175.48 683.301 L1174.92 683.301 L1174.36 683.301 L1173.8 683.301 L1173.24 683.301 L1172.68 683.301 L1172.12 683.301 L1171.56 683.301 L1171 683.301 L1170.44 683.301 L1169.88 683.301 L1169.33 683.301 L1168.77 683.301 L1168.21 683.301 L1167.65 683.301 L1167.09 683.301 L1166.53 683.301 L1165.97 683.301 L1165.41 683.301 L1164.85 683.301 L1164.29 683.301 L1163.73 683.301 L1163.17 683.301 L1162.61 683.301 L1162.05 683.301 L1161.5 683.301 L1160.94 683.301 L1160.38 683.301 L1159.82 683.301 L1159.26 683.301 L1158.7 683.301 L1158.14 683.301 L1157.58 683.301 L1157.02 683.301 L1156.46 683.301 L1155.9 683.301 L1155.34 683.301 L1154.78 683.301 L1154.23 683.301 L1153.67 683.301 L1153.11 683.301 L1152.55 683.301 L1151.99 683.301 L1151.43 683.301 L1150.87 683.301 L1150.31 683.301 L1149.75 683.301 L1149.19 683.301 L1148.63 683.301 L1148.07 683.301 L1147.51 683.301 L1146.96 683.301 L1146.4 683.301 L1145.84 683.301 L1145.28 683.301 L1144.72 683.301 L1144.16 683.301 L1143.6 683.301 L1143.04 683.301 L1142.48 683.301 L1141.92 683.301 L1141.36 683.301 L1140.8 683.301 L1140.24 683.301 L1139.68 683.301 L1139.13 683.301 L1138.57 683.301 L1138.01 683.301 L1137.45 683.301 L1136.89 683.301 L1136.33 683.301 L1135.77 683.301 L1135.21 683.301 L1134.65 683.301 L1134.09 683.301 L1133.53 683.301 L1132.97 683.301 L1132.41 683.301 L1131.86 683.301 L1131.3 683.301 L1130.74 683.301 L1130.18 683.301 L1129.62 683.301 L1129.06 683.301 L1128.5 683.301 L1127.94 683.301 L1127.38 683.301 L1126.82 683.301 L1126.26 683.301 L1125.7 683.301 L1125.14 683.301 L1124.59 683.301 L1124.03 683.301 L1123.47 683.301 L1122.91 683.301 L1122.35 683.301 L1121.79 683.301 L1121.23 683.301 L1120.67 683.301 L1120.11 683.301 L1119.55 683.301 L1118.99 683.301 L1118.43 683.301 L1117.87 683.301 L1117.31 683.301 L1116.76 683.301 L1116.2 683.301 L1115.64 683.301 L1115.08 683.301 L1114.52 683.301 L1113.96 683.301 L1113.4 683.301 L1112.84 683.301 L1112.28 683.301 L1111.72 683.301 L1111.16 683.301 L1110.6 683.301 L1110.04 683.301 L1109.49 683.301 L1108.93 683.301 L1108.37 683.301 L1107.81 683.301 L1107.25 683.301 L1106.69 683.301 L1106.13 683.301 L1105.57 683.301 L1105.01 683.301 L1104.45 683.301 L1103.89 683.301 L1103.33 683.301 L1102.77 683.301 L1102.22 683.301 L1101.66 683.301 L1101.1 683.301 L1100.54 683.301 L1099.98 683.301 L1099.42 683.301 L1098.86 683.301 L1098.3 683.301 L1097.74 683.301 L1097.18 683.301 L1096.62 683.301 L1096.06 683.301 L1095.5 683.301 L1094.94 683.301 L1094.39 683.301 L1093.83 683.301 L1093.27 683.301 L1092.71 683.301 L1092.15 683.301 L1091.59 683.301 L1091.03 683.301 L1090.47 683.301 L1089.91 683.301 L1089.35 683.301 L1088.79 683.301 L1088.23 683.301 L1087.67 683.301 L1087.12 683.301 L1086.56 683.301 L1086 683.301 L1085.44 683.301 L1084.88 683.301 L1084.32 683.301 L1083.76 683.301 L1083.2 683.301 L1082.64 683.301 L1082.08 683.301 L1081.52 683.301 L1080.96 683.301 L1080.4 683.301 L1079.85 683.301 L1079.29 683.301 L1078.73 683.301 L1078.17 683.301 L1077.61 683.301 L1077.05 683.301 L1076.49 683.301 L1075.93 683.301 L1075.37 683.301 L1074.81 683.301 L1074.25 683.301 L1073.69 683.301 L1073.13 683.301 L1072.57 683.301 L1072.02 683.301 L1071.46 683.301 L1070.9 683.301 L1070.34 683.301 L1069.78 683.301 L1069.22 683.301 L1068.66 683.301 L1068.1 683.301 L1067.54 683.301 L1066.98 683.301 L1066.42 683.301 L1065.86 683.301 L1065.3 683.301 L1064.75 683.301 L1064.19 683.301 L1063.63 683.301 L1063.07 683.301 L1062.51 683.301 L1061.95 683.301 L1061.39 683.301 L1060.83 683.301 L1060.27 683.301 L1059.71 683.301 L1059.15 683.301 L1058.59 683.301 L1058.03 683.301 L1057.48 683.301 L1056.92 683.301 L1056.36 683.301 L1055.8 683.301 L1055.24 683.301 L1054.68 683.301 L1054.12 683.301 L1053.56 683.301 L1053 683.301 L1052.44 683.301 L1051.88 683.301 L1051.32 683.301 L1050.76 683.301 L1050.2 683.301 L1049.65 683.301 L1049.09 683.301 L1048.53 683.301 L1047.97 683.301 L1047.41 683.301 L1046.85 683.301 L1046.29 683.301 L1045.73 683.301 L1045.17 683.301 L1044.61 683.301 L1044.05 683.301 L1043.49 683.301 L1042.93 683.301 L1042.38 683.301 L1041.82 683.301 L1041.26 683.301 L1040.7 683.301 L1040.14 683.301 L1039.58 683.301 L1039.02 683.301 L1038.46 683.301 L1037.9 683.301 L1037.34 683.301 L1036.78 683.301 L1036.22 683.301 L1035.66 683.301 L1035.1 683.301 L1034.55 683.301 L1033.99 683.301 L1033.43 683.301 L1032.87 683.301 L1032.31 683.301 L1031.75 683.301 L1031.19 683.301 L1030.63 683.301 L1030.07 683.301 L1029.51 683.301 L1028.95 683.301 L1028.39 683.301 L1027.83 683.301 L1027.28 683.301 L1026.72 683.301 L1026.16 683.301 L1025.6 683.301 L1025.04 683.301 L1024.48 683.301 L1023.92 683.301 L1023.36 683.301 L1022.8 683.301 L1022.24 683.301 L1021.68 683.301 L1021.12 683.301 L1020.56 683.301 L1020.01 683.301 L1019.45 683.301 L1018.89 683.301 L1018.33 683.301 L1017.77 683.301 L1017.21 683.301 L1016.65 683.301 L1016.09 683.301 L1015.53 683.301 L1014.97 683.301 L1014.41 683.301 L1013.85 683.301 L1013.29 683.301 L1012.73 683.301 L1012.18 683.301 L1011.62 683.301 L1011.06 683.301 L1010.5 683.301 L1009.94 683.301 L1009.38 683.301 L1008.82 683.301 L1008.26 683.301 L1007.7 683.301 L1007.14 683.301 L1006.58 683.301 L1006.02 683.301 L1005.46 683.301 L1004.91 683.301 L1004.35 683.301 L1003.79 683.301 L1003.23 683.301 L1002.67 683.301 L1002.11 683.301 L1001.55 683.301 L1000.99 683.301 L1000.43 683.301 L999.872 683.301 L999.313 683.301 L998.754 683.301 L998.194 683.301 L997.635 683.301 L997.076 683.301 L996.517 683.301 L995.957 683.301 L995.398 683.301 L994.839 683.301 L994.28 683.301 L993.72 683.301 L993.161 683.301 L992.602 683.301 L992.043 683.301 L991.483 683.301 L990.924 683.301 L990.365 683.301 L989.806 683.301 L989.246 683.301 L988.687 683.301 L988.128 683.301 L987.569 683.301 L987.009 683.301 L986.45 683.301 L985.891 683.301 L985.332 683.301 L984.772 683.301 L984.213 683.301 L983.654 683.301 L983.095 683.301 L982.535 683.301 L981.976 683.301 L981.417 683.301 L980.858 683.301 L980.298 683.301 L979.739 683.301 L979.18 683.301 L978.621 683.301 L978.061 683.301 L977.502 683.301 L976.943 683.301 L976.384 683.301 L975.824 683.301 L975.265 683.301 L974.706 683.301 L974.147 683.301 L973.587 683.301 L973.028 683.301 L972.469 683.301 L971.91 683.301 L971.35 683.301 L970.791 683.301 L970.232 683.301 L969.673 683.301 L969.113 683.301 L968.554 683.301 L967.995 683.301 L967.436 683.301 L966.876 683.301 L966.317 683.301 L965.758 683.301 L965.199 683.301 L964.639 683.301 L964.08 683.301 L963.521 683.301 L962.962 683.301 L962.402 683.301 L961.843 683.301 L961.284 683.301 L960.725 683.301 L960.165 683.301 L959.606 683.301 L959.047 683.301 L958.488 683.301 L957.928 683.301 L957.369 683.301 L956.81 683.301 L956.251 683.301 L955.691 683.301 L955.132 683.301 L954.573 683.301 L954.014 683.301 L953.454 683.301 L952.895 683.301 L952.336 683.301 L951.777 683.301 L951.217 683.301 L950.658 683.301 L950.099 683.301 L949.54 683.301 L948.98 683.301 L948.421 683.301 L947.862 683.301 L947.303 683.301 L946.743 683.301 L946.184 683.301 L945.625 683.301 L945.066 683.301 L944.506 683.301 L943.947 683.301 L943.388 683.301 L942.829 683.301 L942.269 683.301 L941.71 683.301 L941.151 683.301 L940.592 683.301 L940.032 683.301 L939.473 683.301 L938.914 683.301 L938.355 683.301 L937.795 683.301 L937.236 683.301 L936.677 683.301 L936.118 683.301 L935.558 683.301 L934.999 683.301 L934.44 683.301 L933.881 683.301 L933.321 683.301 L932.762 683.301 L932.203 683.301 L931.644 683.301 L931.084 683.301 L930.525 683.301 L929.966 683.301 L929.406 683.301 L928.847 683.301 L928.288 683.301 L927.729 683.301 L927.169 683.301 L926.61 683.301 L926.051 683.301 L925.492 683.301 L924.932 683.301 L924.373 683.301 L923.814 683.301 L923.255 683.301 L922.695 683.301 L922.136 683.301 L921.577 683.301 L921.018 683.301 L920.458 683.301 L919.899 683.301 L919.34 683.301 L918.781 683.301 L918.221 683.301 L917.662 683.301 L917.103 683.301 L916.544 683.301 L915.984 683.301 L915.425 683.301 L914.866 683.301 L914.307 683.301 L913.747 683.301 L913.188 683.301 L912.629 683.301 L912.07 683.301 L911.51 683.301 L910.951 683.301 L910.392 683.301 L909.833 683.301 L909.273 683.301 L908.714 683.301 L908.155 683.301 L907.596 683.301 L907.036 683.301 L906.477 683.301 L905.918 683.301 L905.359 683.301 L904.799 683.301 L904.24 683.301 L903.681 683.301 L903.122 683.301 L902.562 683.301 L902.003 683.301 L901.444 683.301 L900.885 683.301 L900.325 683.301 L899.766 683.301 L899.207 683.301 L898.648 683.301 L898.088 683.301 L897.529 683.301 L896.97 683.301 L896.411 683.301 L895.851 683.301 L895.292 683.301 L894.733 683.301 L894.174 683.301 L893.614 683.301 L893.055 683.301 L892.496 683.301 L891.937 683.301 L891.377 683.301 L890.818 683.301 L890.259 683.301 L889.7 683.301 L889.14 683.301 L888.581 683.301 L888.022 683.301 L887.463 683.301 L886.903 683.301 L886.344 683.301 L885.785 683.301 L885.226 683.301 L884.666 683.301 L884.107 683.301 L883.548 683.301 L882.989 683.301 L882.429 683.301 L881.87 683.301 L881.311 683.301 L880.752 683.301 L880.192 683.301 L879.633 683.301 L879.074 683.301 L878.515 683.301 L877.955 683.301 L877.396 683.301 L876.837 683.301 L876.278 683.301 L875.718 683.301 L875.159 683.301 L874.6 683.301 L874.041 683.301 L873.481 683.301 L872.922 683.301 L872.363 683.301 L871.804 683.301 L871.244 683.301 L870.685 683.301 L870.126 683.301 L869.567 683.301 L869.007 683.301 L868.448 683.301 L867.889 683.301 L867.33 683.301 L866.77 683.301 L866.211 683.301 L865.652 683.301 L865.093 683.301 L864.533 683.301 L863.974 683.301 L863.415 683.301 L862.856 683.301 L862.296 683.301 L861.737 683.301 L861.178 683.301 L860.619 683.301 L860.059 683.301 L859.5 683.301 L858.941 683.301 L858.382 683.301 L857.822 683.301 L857.263 683.301 L856.704 683.301 L856.145 683.301 L855.585 683.301 L855.026 683.301 L854.467 683.301 L853.908 683.301 L853.348 683.301 L852.789 683.301 L852.23 683.301 L851.671 683.301 L851.111 683.301 L850.552 683.301 L849.993 683.301 L849.434 683.301 L848.874 683.301 L848.315 683.301 L847.756 683.301 L847.197 683.301 L846.637 683.301 L846.078 683.301 L845.519 683.301 L844.96 683.301 L844.4 683.301 L843.841 683.301 L843.282 683.301 L842.723 683.301 L842.163 683.301 L841.604 683.301 L841.045 683.301 L840.486 683.301 L839.926 683.301 L839.367 683.301 L838.808 683.301 L838.249 683.301 L837.689 683.301 L837.13 683.301 L836.571 683.301 L836.012 683.301 L835.452 683.301 L834.893 683.301 L834.334 683.301 L833.775 683.301 L833.215 683.301 L832.656 683.301 L832.097 683.301 L831.538 683.301 L830.978 683.301 L830.419 683.301 L829.86 683.301 L829.301 683.301 L828.741 683.301 L828.182 683.301 L827.623 683.301 L827.064 683.301 L826.504 683.301 L825.945 683.301 L825.386 683.301 L824.827 683.301 L824.267 683.301 L823.708 683.301 L823.149 683.301 L822.59 683.301 L822.03 683.301 L821.471 683.301 L820.912 683.301 L820.353 683.301 L819.793 683.301 L819.234 683.301 L818.675 683.301 L818.116 683.301 L817.556 683.301 L816.997 683.301 L816.438 683.301 L815.879 683.301 L815.319 683.301 L814.76 683.301 L814.201 683.301 L813.642 683.301 L813.082 683.301 L812.523 683.301 L811.964 683.301 L811.405 683.301 L810.845 683.301 L810.286 683.301 L809.727 683.301 L809.168 683.301 L808.608 683.301 L808.049 683.301 L807.49 683.301 L806.931 683.301 L806.371 683.301 L805.812 683.301 L805.253 683.301 L804.693 683.301 L804.134 683.301 L803.575 683.301 L803.016 683.301 L802.456 683.301 L801.897 683.301 L801.338 683.301 L800.779 683.301 L800.219 683.301 L799.66 683.301 L799.101 683.301 L798.542 683.301 L797.982 683.301 L797.423 683.301 L796.864 683.301 L796.305 683.301 L795.745 683.301 L795.186 683.301 L794.627 683.301 L794.068 683.301 L793.508 683.301 L792.949 683.301 L792.39 683.301 L791.831 683.301 L791.271 683.301 L790.712 683.301 L790.153 683.301 L789.594 683.301 L789.034 683.301 L788.475 683.301 L787.916 683.301 L787.357 683.301 L786.797 683.301 L786.238 683.301 L785.679 683.301 L785.12 683.301 L784.56 683.301 L784.001 683.301 L783.442 683.301 L782.883 683.301 L782.323 683.301 L781.764 683.301 L781.205 683.301 L780.646 683.301 L780.086 683.301 L779.527 683.301 L778.968 683.301 L778.409 683.301 L777.849 683.301 L777.29 683.301 L776.731 683.301 L776.172 683.301 L775.612 683.301 L775.053 683.301 L774.494 683.301 L773.935 683.301 L773.375 683.301 L772.816 683.301 L772.257 683.301 L771.698 683.301 L771.138 683.301 L770.579 683.301 L770.02 683.301 L769.461 683.301 L768.901 683.301 L768.342 683.301 L767.783 683.301 L767.224 683.301 L766.664 683.301 L766.105 683.301 L765.546 683.301 L764.987 683.301 L764.427 683.301 L763.868 683.301 L763.309 683.301 L762.75 683.301 L762.19 683.301 L761.631 683.301 L761.072 683.301 L760.513 683.301 L759.953 683.301 L759.394 683.301 L758.835 683.301 L758.276 683.301 L757.716 683.301 L757.157 683.301 L756.598 683.301 L756.039 683.301 L755.479 683.301 L754.92 683.301 L754.361 683.301 L753.802 683.301 L753.242 683.301 L752.683 683.301 L752.124 683.301 L751.565 683.301 L751.005 683.301 L750.446 683.301 L749.887 683.301 L749.328 683.301 L748.768 683.301 L748.209 683.301 L747.65 683.301 L747.091 683.301 L746.531 683.301 L745.972 683.301 L745.413 683.301 L744.854 683.301 L744.294 683.301 L743.735 683.301 L743.176 683.301 L742.617 683.301 L742.057 683.301 L741.498 683.301 L740.939 683.301 L740.38 683.301 L739.82 683.301 L739.261 683.301 L738.702 683.301 L738.143 683.301 L737.583 683.301 L737.024 683.301 L736.465 683.301 L735.906 683.301 L735.346 683.301 L734.787 683.301 L734.228 683.301 L733.669 683.301 L733.109 683.301 L732.55 683.301 L731.991 683.301 L731.432 683.301 L730.872 683.301 L730.313 683.301 L729.754 683.301 L729.195 683.301 L728.635 683.301 L728.076 683.301 L727.517 683.301 L726.958 683.301 L726.398 683.301 L725.839 683.301 L725.28 683.301 L724.721 683.301 L724.161 683.301 L723.602 683.301 L723.043 683.301 L722.484 683.301 L721.924 683.301 L721.365 683.301 L720.806 683.301 L720.247 683.301  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.463 720.806,687.463 721.365,687.463 721.924,687.463 722.484,687.463 723.043,687.463 723.602,687.463 724.161,687.463 724.721,687.463 725.28,687.463 725.839,687.463 726.398,687.463 726.958,687.463 727.517,687.463 728.076,687.463 728.635,687.463 729.195,687.463 729.754,687.463 730.313,687.463 730.872,687.463 731.432,687.463 731.991,687.463 732.55,687.463 733.109,687.463 733.669,687.463 734.228,687.463 734.787,687.463 735.346,687.463 735.906,687.463 736.465,687.463 737.024,687.463 737.583,687.463 738.143,687.463 738.702,687.463 739.261,687.463 739.82,687.463 740.38,687.463 740.939,687.463 741.498,687.463 742.057,687.463 742.617,687.463 743.176,687.463 743.735,687.463 744.294,687.463 744.854,687.463 745.413,687.463 745.972,687.463 746.531,687.463 747.091,687.463 747.65,687.463 748.209,687.463 748.768,687.463 749.328,687.463 749.887,687.463 750.446,687.463 751.005,687.463 751.565,687.463 752.124,687.463 752.683,687.463 753.242,687.463 753.802,687.463 754.361,687.463 754.92,687.463 755.479,687.463 756.039,687.463 756.598,687.463 757.157,687.463 757.716,687.463 758.276,687.463 758.835,687.463 759.394,687.463 759.953,687.463 760.513,687.463 761.072,687.463 761.631,687.463 762.19,687.463 762.75,687.463 763.309,687.463 763.868,687.463 764.427,687.463 764.987,687.463 765.546,687.463 766.105,687.463 766.664,687.463 767.224,687.463 767.783,687.463 768.342,687.463 768.901,687.463 769.461,687.463 770.02,687.463 770.579,687.463 771.138,687.463 771.698,687.463 772.257,687.463 772.816,687.463 773.375,687.463 773.935,687.463 774.494,687.463 775.053,687.463 775.612,687.463 776.172,687.463 776.731,687.463 777.29,687.463 777.849,687.463 778.409,687.463 778.968,687.463 779.527,687.463 780.086,687.463 780.646,687.463 781.205,687.463 781.764,687.463 782.323,687.463 782.883,687.463 783.442,687.463 784.001,687.463 784.56,687.463 785.12,687.463 785.679,687.463 786.238,687.463 786.797,687.463 787.357,687.463 787.916,687.463 788.475,687.463 789.034,687.463 789.594,687.463 790.153,687.463 790.712,687.463 791.271,687.463 791.831,687.463 792.39,687.463 792.949,687.463 793.508,687.463 794.068,687.463 794.627,687.463 795.186,687.463 795.745,687.463 796.305,687.463 796.864,687.463 797.423,687.463 797.982,687.463 798.542,687.463 799.101,687.463 799.66,687.463 800.219,687.463 800.779,687.463 801.338,687.463 801.897,687.463 802.456,687.463 803.016,687.463 803.575,687.463 804.134,687.463 804.693,687.463 805.253,687.463 805.812,687.463 806.371,687.463 806.931,687.463 807.49,687.463 808.049,687.463 808.608,687.463 809.168,687.463 809.727,687.463 810.286,687.463 810.845,687.463 811.405,687.463 811.964,687.463 812.523,687.463 813.082,687.463 813.642,687.463 814.201,687.463 814.76,687.463 815.319,687.463 815.879,687.463 816.438,687.463 816.997,687.463 817.556,687.463 818.116,687.463 818.675,687.463 819.234,687.463 819.793,687.463 820.353,687.463 820.912,687.463 821.471,687.463 822.03,687.463 822.59,687.463 823.149,687.463 823.708,687.463 824.267,687.463 824.827,687.463 825.386,687.463 825.945,687.463 826.504,687.463 827.064,687.463 827.623,687.463 828.182,687.463 828.741,687.463 829.301,687.463 829.86,687.463 830.419,687.463 830.978,687.463 831.538,687.463 832.097,687.463 832.656,687.463 833.215,687.463 833.775,687.463 834.334,687.463 834.893,687.463 835.452,687.463 836.012,687.463 836.571,687.463 837.13,687.463 837.689,687.463 838.249,687.463 838.808,687.463 839.367,687.463 839.926,687.463 840.486,687.463 841.045,687.463 841.604,687.463 842.163,687.463 842.723,687.463 843.282,687.463 843.841,687.463 844.4,687.463 844.96,687.463 845.519,687.463 846.078,687.463 846.637,687.463 847.197,687.463 847.756,687.463 848.315,687.463 848.874,687.463 849.434,687.463 849.993,687.463 850.552,687.463 851.111,687.463 851.671,687.463 852.23,687.463 852.789,687.463 853.348,687.463 853.908,687.463 854.467,687.463 855.026,687.463 855.585,687.463 856.145,687.463 856.704,687.463 857.263,687.463 857.822,687.463 858.382,687.463 858.941,687.463 859.5,687.463 860.059,687.463 860.619,687.463 861.178,687.463 861.737,687.463 862.296,687.463 862.856,687.463 863.415,687.463 863.974,687.463 864.533,687.463 865.093,687.463 865.652,687.463 866.211,687.463 866.77,687.463 867.33,687.463 867.889,687.463 868.448,687.463 869.007,687.463 869.567,687.463 870.126,687.463 870.685,687.463 871.244,687.463 871.804,687.463 872.363,687.463 872.922,687.463 873.481,687.463 874.041,687.463 874.6,687.463 875.159,687.463 875.718,687.463 876.278,687.463 876.837,687.463 877.396,687.463 877.955,687.463 878.515,687.463 879.074,687.463 879.633,687.463 880.192,687.463 880.752,687.463 881.311,687.463 881.87,687.463 882.429,687.463 882.989,687.463 883.548,687.463 884.107,687.463 884.666,687.463 885.226,687.463 885.785,687.463 886.344,687.463 886.903,687.463 887.463,687.463 888.022,687.463 888.581,687.463 889.14,687.463 889.7,687.463 890.259,687.463 890.818,687.463 891.377,687.463 891.937,687.463 892.496,687.463 893.055,687.463 893.614,687.463 894.174,687.463 894.733,687.463 895.292,687.463 895.851,687.463 896.411,687.463 896.97,687.463 897.529,687.463 898.088,687.463 898.648,687.463 899.207,687.463 899.766,687.463 900.325,687.463 900.885,687.463 901.444,687.463 902.003,687.463 902.562,687.463 903.122,687.463 903.681,687.463 904.24,687.463 904.799,687.463 905.359,687.463 905.918,687.463 906.477,687.463 907.036,687.463 907.596,687.463 908.155,687.463 908.714,687.463 909.273,687.463 909.833,687.463 910.392,687.463 910.951,687.463 911.51,687.463 912.07,687.463 912.629,687.463 913.188,687.463 913.747,687.463 914.307,687.463 914.866,687.463 915.425,687.463 915.984,687.463 916.544,687.463 917.103,687.463 917.662,687.463 918.221,687.463 918.781,687.463 919.34,687.463 919.899,687.463 920.458,687.463 921.018,687.463 921.577,687.463 922.136,687.463 922.695,687.463 923.255,687.463 923.814,687.463 924.373,687.463 924.932,687.463 925.492,687.463 926.051,687.463 926.61,687.463 927.169,687.463 927.729,687.463 928.288,687.463 928.847,687.463 929.406,687.463 929.966,687.463 930.525,687.463 931.084,687.463 931.644,687.463 932.203,687.463 932.762,687.463 933.321,687.463 933.881,687.463 934.44,687.463 934.999,687.463 935.558,687.463 936.118,687.463 936.677,687.463 937.236,687.463 937.795,687.463 938.355,687.463 938.914,687.463 939.473,687.463 940.032,687.463 940.592,687.463 941.151,687.463 941.71,687.463 942.269,687.463 942.829,687.463 943.388,687.463 943.947,687.463 944.506,687.463 945.066,687.463 945.625,687.463 946.184,687.463 946.743,687.463 947.303,687.463 947.862,687.463 948.421,687.463 948.98,687.463 949.54,687.463 950.099,687.463 950.658,687.463 951.217,687.463 951.777,687.463 952.336,687.463 952.895,687.463 953.454,687.463 954.014,687.463 954.573,687.463 955.132,687.463 955.691,687.463 956.251,687.463 956.81,687.463 957.369,687.463 957.928,687.463 958.488,687.463 959.047,687.463 959.606,687.463 960.165,687.463 960.725,687.463 961.284,687.463 961.843,687.463 962.402,687.463 962.962,687.463 963.521,687.463 964.08,687.463 964.639,687.463 965.199,687.463 965.758,687.463 966.317,687.463 966.876,687.463 967.436,687.463 967.995,687.463 968.554,687.463 969.113,687.463 969.673,687.463 970.232,687.463 970.791,687.463 971.35,687.463 971.91,687.463 972.469,687.463 973.028,687.463 973.587,687.463 974.147,687.463 974.706,687.463 975.265,687.463 975.824,687.463 976.384,687.463 976.943,687.463 977.502,687.463 978.061,687.463 978.621,687.463 979.18,687.463 979.739,687.463 980.298,687.463 980.858,687.463 981.417,687.463 981.976,687.463 982.535,687.463 983.095,687.463 983.654,687.463 984.213,687.463 984.772,687.463 985.332,687.463 985.891,687.463 986.45,687.463 987.009,687.463 987.569,687.463 988.128,687.463 988.687,687.463 989.246,687.463 989.806,687.463 990.365,687.463 990.924,687.463 991.483,687.463 992.043,687.463 992.602,687.463 993.161,687.463 993.72,687.463 994.28,687.463 994.839,687.463 995.398,687.463 995.957,687.463 996.517,687.463 997.076,687.463 997.635,687.463 998.194,687.463 998.754,687.463 999.313,687.463 999.872,687.463 1000.43,687.463 1000.99,687.463 1001.55,687.463 1002.11,687.463 1002.67,687.463 1003.23,687.463 1003.79,687.463 1004.35,687.463 1004.91,687.463 1005.46,687.463 1006.02,687.463 1006.58,687.463 1007.14,687.463 1007.7,687.463 1008.26,687.463 1008.82,687.463 1009.38,687.463 1009.94,687.463 1010.5,687.463 1011.06,687.463 1011.62,687.463 1012.18,687.463 1012.73,687.463 1013.29,687.463 1013.85,687.463 1014.41,687.463 1014.97,687.463 1015.53,687.463 1016.09,687.463 1016.65,687.463 1017.21,687.463 1017.77,687.463 1018.33,687.463 1018.89,687.463 1019.45,687.463 1020.01,687.463 1020.56,687.463 1021.12,687.463 1021.68,687.463 1022.24,687.463 1022.8,687.463 1023.36,687.463 1023.92,687.463 1024.48,687.463 1025.04,687.463 1025.6,687.463 1026.16,687.463 1026.72,687.463 1027.28,687.463 1027.83,687.463 1028.39,687.463 1028.95,687.463 1029.51,687.463 1030.07,687.463 1030.63,687.463 1031.19,687.463 1031.75,687.463 1032.31,687.463 1032.87,687.463 1033.43,687.463 1033.99,687.463 1034.55,687.463 1035.1,687.463 1035.66,687.463 1036.22,687.463 1036.78,687.463 1037.34,687.463 1037.9,687.463 1038.46,687.463 1039.02,687.463 1039.58,687.463 1040.14,687.463 1040.7,687.463 1041.26,687.463 1041.82,687.463 1042.38,687.463 1042.93,687.463 1043.49,687.463 1044.05,687.463 1044.61,687.463 1045.17,687.463 1045.73,687.463 1046.29,687.463 1046.85,687.463 1047.41,687.463 1047.97,687.463 1048.53,687.463 1049.09,687.463 1049.65,687.463 1050.2,687.463 1050.76,687.463 1051.32,687.463 1051.88,687.463 1052.44,687.463 1053,687.463 1053.56,687.463 1054.12,687.463 1054.68,687.463 1055.24,687.463 1055.8,687.463 1056.36,687.463 1056.92,687.463 1057.48,687.463 1058.03,687.463 1058.59,687.463 1059.15,687.463 1059.71,687.463 1060.27,687.463 1060.83,687.463 1061.39,687.463 1061.95,687.463 1062.51,687.463 1063.07,687.463 1063.63,687.463 1064.19,687.463 1064.75,687.463 1065.3,687.463 1065.86,687.463 1066.42,687.463 1066.98,687.463 1067.54,687.463 1068.1,687.463 1068.66,687.463 1069.22,687.463 1069.78,687.463 1070.34,687.463 1070.9,687.463 1071.46,687.463 1072.02,687.463 1072.57,687.463 1073.13,687.463 1073.69,687.463 1074.25,687.463 1074.81,687.463 1075.37,687.463 1075.93,687.463 1076.49,687.463 1077.05,687.463 1077.61,687.463 1078.17,687.463 1078.73,687.463 1079.29,687.463 1079.85,687.463 1080.4,687.463 1080.96,687.463 1081.52,687.463 1082.08,687.463 1082.64,687.463 1083.2,687.463 1083.76,687.463 1084.32,687.463 1084.88,687.463 1085.44,687.463 1086,687.463 1086.56,687.463 1087.12,687.463 1087.67,687.463 1088.23,687.463 1088.79,687.463 1089.35,687.463 1089.91,687.463 1090.47,687.463 1091.03,687.463 1091.59,687.463 1092.15,687.463 1092.71,687.463 1093.27,687.463 1093.83,687.463 1094.39,687.463 1094.94,687.463 1095.5,687.463 1096.06,687.463 1096.62,687.463 1097.18,687.463 1097.74,687.463 1098.3,687.463 1098.86,687.463 1099.42,687.463 1099.98,687.463 1100.54,687.463 1101.1,687.463 1101.66,687.463 1102.22,687.463 1102.77,687.463 1103.33,687.463 1103.89,687.463 1104.45,687.463 1105.01,687.463 1105.57,687.463 1106.13,687.463 1106.69,687.463 1107.25,687.463 1107.81,687.463 1108.37,687.463 1108.93,687.463 1109.49,687.463 1110.04,687.463 1110.6,687.463 1111.16,687.463 1111.72,687.463 1112.28,687.463 1112.84,687.463 1113.4,687.463 1113.96,687.463 1114.52,687.463 1115.08,687.463 1115.64,687.463 1116.2,687.463 1116.76,687.463 1117.31,687.463 1117.87,687.463 1118.43,687.463 1118.99,687.463 1119.55,687.463 1120.11,687.463 1120.67,687.463 1121.23,687.463 1121.79,687.463 1122.35,687.463 1122.91,687.463 1123.47,687.463 1124.03,687.463 1124.59,687.463 1125.14,687.463 1125.7,687.463 1126.26,687.463 1126.82,687.463 1127.38,687.463 1127.94,687.463 1128.5,687.463 1129.06,687.463 1129.62,687.463 1130.18,687.463 1130.74,687.463 1131.3,687.463 1131.86,687.463 1132.41,687.463 1132.97,687.463 1133.53,687.463 1134.09,687.463 1134.65,687.463 1135.21,687.463 1135.77,687.463 1136.33,687.463 1136.89,687.463 1137.45,687.463 1138.01,687.463 1138.57,687.463 1139.13,687.463 1139.68,687.463 1140.24,687.463 1140.8,687.463 1141.36,687.463 1141.92,687.463 1142.48,687.463 1143.04,687.463 1143.6,687.463 1144.16,687.463 1144.72,687.463 1145.28,687.463 1145.84,687.463 1146.4,687.463 1146.96,687.463 1147.51,687.463 1148.07,687.463 1148.63,687.463 1149.19,687.463 1149.75,687.463 1150.31,687.463 1150.87,687.463 1151.43,687.463 1151.99,687.463 1152.55,687.463 1153.11,687.463 1153.67,687.463 1154.23,687.463 1154.78,687.463 1155.34,687.463 1155.9,687.463 1156.46,687.463 1157.02,687.463 1157.58,687.463 1158.14,687.463 1158.7,687.463 1159.26,687.463 1159.82,687.463 1160.38,687.463 1160.94,687.463 1161.5,687.463 1162.05,687.463 1162.61,687.463 1163.17,687.463 1163.73,687.463 1164.29,687.463 1164.85,687.463 1165.41,687.463 1165.97,687.463 1166.53,687.463 1167.09,687.463 1167.65,687.463 1168.21,687.463 1168.77,687.463 1169.33,687.463 1169.88,687.463 1170.44,687.463 1171,687.463 1171.56,687.463 1172.12,687.463 1172.68,687.463 1173.24,687.463 1173.8,687.463 1174.36,687.463 1174.92,687.463 1175.48,687.463 1176.04,687.463 1176.6,687.463 1177.15,687.463 1177.71,687.463 1178.27,687.463 1178.83,687.463 1179.39,687.463 1179.95,687.463 1180.51,687.463 1181.07,687.463 1181.63,687.463 1182.19,687.463 1182.75,687.463 1183.31,687.463 1183.87,687.463 1184.43,687.463 1184.98,687.463 1185.54,687.463 1186.1,687.463 1186.66,687.463 1187.22,687.463 1187.78,687.463 1188.34,687.463 1188.9,687.463 1189.46,687.463 1190.02,687.463 1190.58,687.463 1191.14,687.463 1191.7,687.463 1192.25,687.463 1192.81,687.463 1193.37,687.463 1193.93,687.463 1194.49,687.463 1195.05,687.463 1195.61,687.463 1196.17,687.463 1196.73,687.463 1197.29,687.463 1197.85,687.463 1198.41,687.463 1198.97,687.463 1199.52,687.463 1200.08,687.463 1200.64,687.463 1201.2,687.463 1201.76,687.463 1202.32,687.463 1202.88,687.463 1203.44,687.463 1204,687.463 1204.56,687.463 1205.12,687.463 1205.68,687.463 1206.24,687.463 1206.8,687.463 1207.35,687.463 1207.91,687.463 1208.47,687.463 1209.03,687.463 1209.59,687.463 1210.15,687.463 1210.71,687.463 1211.27,687.463 1211.83,687.463 1212.39,687.463 1212.95,687.463 1213.51,687.463 1214.07,687.463 1214.62,687.463 1215.18,687.463 1215.74,687.463 1216.3,687.463 1216.86,687.463 1217.42,687.463 1217.98,687.463 1218.54,687.463 1219.1,687.463 1219.66,687.463 1220.22,687.463 1220.78,687.463 1221.34,687.463 1221.89,687.463 1222.45,687.463 1223.01,687.463 1223.57,687.463 1224.13,687.463 1224.69,687.463 1225.25,687.463 1225.81,687.463 1226.37,687.463 1226.93,687.463 1227.49,687.463 1228.05,687.463 1228.61,687.463 1229.17,687.463 1229.72,687.463 1230.28,687.463 1230.84,687.463 1231.4,687.463 1231.96,687.463 1232.52,687.463 1233.08,687.463 1233.64,687.463 1234.2,687.463 1234.76,687.463 1235.32,687.463 1235.88,687.463 1236.44,687.463 1236.99,687.463 1237.55,687.463 1238.11,687.463 1238.67,687.463 1239.23,687.463 1239.79,687.463 1240.35,687.463 1240.91,687.463 1241.47,687.463 1242.03,687.463 1242.59,687.463 1243.15,687.463 1243.71,687.463 1244.26,687.463 1244.82,687.463 1245.38,687.463 1245.94,687.463 1246.5,687.463 1247.06,687.463 1247.62,687.463 1248.18,687.463 1248.74,687.463 1249.3,687.463 1249.86,687.463 1250.42,687.463 1250.98,687.463 1251.54,687.463 1252.09,687.463 1252.65,687.463 1253.21,687.463 1253.77,687.463 1254.33,687.463 1254.89,687.463 1255.45,687.463 1256.01,687.463 1256.57,687.463 1257.13,687.463 1257.69,687.463 1258.25,687.463 1258.81,687.463 1259.36,687.463 1259.92,687.463 1260.48,687.463 1261.04,687.463 1261.6,687.463 1262.16,687.463 1262.72,687.463 1263.28,687.463 1263.84,687.463 1264.4,687.463 1264.96,687.463 1265.52,687.463 1266.08,687.463 1266.63,687.463 1267.19,687.463 1267.75,687.463 1268.31,687.463 1268.87,687.463 1269.43,687.463 1269.99,687.463 1270.55,687.463 1271.11,687.463 1271.67,687.463 1272.23,687.463 1272.79,687.463 1273.35,687.463 1273.91,687.463 1274.46,687.463 1275.02,687.463 1275.58,687.463 1276.14,687.463 1276.7,687.463 1277.26,687.463 1277.82,687.463 1278.38,687.463 1278.94,687.463 1279.5,687.463 1280.06,687.463 1280.62,687.463 1281.18,687.463 1281.73,687.463 1282.29,687.463 1282.85,687.463 1283.41,687.463 1283.97,687.463 1284.53,687.463 1285.09,687.463 1285.65,687.463 1286.21,687.463 1286.77,687.463 1287.33,687.463 1287.89,687.463 1288.45,687.463 1289,687.463 1289.56,687.463 1290.12,687.463 1290.68,687.463 1291.24,687.463 1291.8,687.463 1292.36,687.463 1292.92,687.463 1293.48,687.463 1294.04,687.463 1294.6,687.463 1295.16,687.463 1295.72,687.463 1296.28,687.463 1296.83,687.463 1297.39,687.463 1297.95,687.463 1298.51,687.463 1299.07,687.463 1299.63,687.463 1300.19,687.463 1300.75,687.463 1301.31,687.463 1301.87,687.463 1302.43,687.463 1302.99,687.463 1303.55,687.463 1304.1,687.463 1304.66,687.463 1305.22,687.463 1305.78,687.463 1306.34,687.463 1306.9,687.463 1307.46,687.463 1308.02,687.463 1308.58,687.463 1309.14,687.463 1309.7,687.463 1310.26,687.463 1310.82,687.463 1311.38,687.463 1311.93,687.463 1312.49,687.463 1313.05,687.463 1313.61,687.463 1314.17,687.463 1314.73,687.463 1315.29,687.463 1315.85,687.463 1316.41,687.463 1316.97,687.463 1317.53,687.463 1318.09,687.463 1318.65,687.463 1319.2,687.463 1319.76,687.463 1320.32,687.463 1320.88,687.463 1321.44,687.463 1322,687.463 1322.56,687.463 1323.12,687.463 1323.68,687.463 1324.24,687.463 1324.8,687.463 1325.36,687.463 1325.92,687.463 1326.47,687.463 1327.03,687.463 1327.59,687.463 1328.15,687.463 1328.71,687.463 1329.27,687.463 1329.83,687.463 1330.39,687.463 1330.95,687.463 1331.51,687.463 1332.07,687.463 1332.63,687.463 1333.19,687.463 1333.75,687.463 1334.3,687.463 1334.86,687.463 1335.42,687.463 1335.98,687.463 1336.54,687.463 1337.1,687.463 1337.66,687.463 1338.22,687.463 1338.78,687.463 1339.34,687.463 1339.9,687.463 1340.46,687.463 1341.02,687.463 1341.57,687.463 1342.13,687.463 1342.69,687.463 1343.25,687.463 1343.81,687.463 1344.37,687.463 1344.93,687.463 1345.49,687.463 1346.05,687.463 1346.61,687.463 1347.17,687.463 1347.73,687.463 1348.29,687.463 1348.84,687.463 1349.4,687.463 1349.96,687.463 1350.52,687.463 1351.08,687.463 1351.64,687.463 1352.2,687.463 1352.76,687.463 1353.32,687.463 1353.88,687.463 1354.44,687.463 1355,687.463 1355.56,687.463 1356.12,687.463 1356.67,687.463 1357.23,687.463 1357.79,687.463 1358.35,687.463 1358.91,687.463 1359.47,687.463 1360.03,687.463 1360.59,687.463 1361.15,687.463 1361.71,687.463 1362.27,687.463 1362.83,687.463 1363.39,687.463 1363.94,687.463 1364.5,687.463 1365.06,687.463 1365.62,687.463 1366.18,687.463 1366.74,687.463 1367.3,687.463 1367.86,687.463 1368.42,687.463 1368.98,687.463 1369.54,687.463 1370.1,687.463 1370.66,687.463 1371.21,687.463 1371.77,687.463 1372.33,687.463 1372.89,687.463 1373.45,687.463 1374.01,687.463 1374.57,687.463 1375.13,687.463 1375.69,687.463 1376.25,687.463 1376.81,687.463 1377.37,687.463 1377.93,687.463 1378.49,687.463 1379.04,687.463 1379.6,687.463 1380.16,687.463 1380.72,687.463 1381.28,687.463 1381.84,687.463 1382.4,687.463 1382.96,687.463 1383.52,687.463 1384.08,687.463 1384.64,687.463 1385.2,687.463 1385.76,687.463 1386.31,687.463 1386.87,687.463 1387.43,687.463 1387.99,687.463 1388.55,687.463 1389.11,687.463 1389.67,687.463 1390.23,687.463 1390.79,687.463 1391.35,687.463 1391.91,687.463 1392.47,687.463 1393.03,687.463 1393.58,687.463 1394.14,687.463 1394.7,687.463 1395.26,687.463 1395.82,687.463 1396.38,687.463 1396.94,687.463 1397.5,687.463 1398.06,687.463 1398.62,687.463 1399.18,687.463 1399.74,687.463 1400.3,687.463 1400.86,687.463 1401.41,687.463 1401.97,687.463 1402.53,687.463 1403.09,687.463 1403.65,687.463 1404.21,687.463 1404.77,687.463 1405.33,687.463 1405.89,687.463 1406.45,687.463 1407.01,687.463 1407.57,687.463 1408.13,687.463 1408.68,687.463 1409.24,687.463 1409.8,687.463 1410.36,687.463 1410.92,687.463 1411.48,687.463 1412.04,687.463 1412.6,687.463 1413.16,687.463 1413.72,687.463 1414.28,687.463 1414.84,687.463 1415.4,687.463 1415.95,687.463 1416.51,687.463 1417.07,687.463 1417.63,687.463 1418.19,687.463 1418.75,687.463 1419.31,687.463 1419.87,687.463 1420.43,687.463 1420.99,687.463 1421.55,687.463 1422.11,687.463 1422.67,687.463 1423.23,687.463 1423.78,687.463 1424.34,687.463 1424.9,687.463 1425.46,687.463 1426.02,687.463 1426.58,687.463 1427.14,687.463 1427.7,687.463 1428.26,687.463 1428.82,687.463 1429.38,687.463 1429.94,687.463 1430.5,687.463 1431.05,687.463 1431.61,687.463 1432.17,687.463 1432.73,687.463 1433.29,687.463 1433.85,687.463 1434.41,687.463 1434.97,687.463 1435.53,687.463 1436.09,687.463 1436.65,687.463 1437.21,687.463 1437.77,687.463 1438.33,687.463 1438.88,687.463 1439.44,687.463 1440,687.463 1440.56,687.463 1441.12,687.463 1441.68,687.463 1442.24,687.463 1442.8,687.463 1443.36,687.463 1443.92,687.463 1444.48,687.463 1445.04,687.463 1445.6,687.463 1446.15,687.463 1446.71,687.463 1447.27,687.463 1447.83,687.463 1448.39,687.463 1448.95,687.463 1449.51,687.463 1450.07,687.463 1450.63,687.463 1451.19,687.463 1451.75,687.463 1452.31,687.463 1452.87,687.463 1453.42,687.463 1453.98,687.463 1454.54,687.463 1455.1,687.463 1455.66,687.463 1456.22,687.463 1456.78,687.463 1457.34,687.463 1457.9,687.463 1458.46,687.463 1459.02,687.463 1459.58,687.463 1460.14,687.463 1460.7,687.463 1461.25,687.463 1461.81,687.463 1462.37,687.463 1462.93,687.463 1463.49,687.463 1464.05,687.463 1464.61,687.463 1465.17,687.463 1465.73,687.463 1466.29,687.463 1466.85,687.463 1467.41,687.463 1467.97,687.463 1468.52,687.463 1469.08,687.463 1469.64,687.463 1470.2,687.463 1470.76,687.463 1471.32,687.463 1471.88,687.463 1472.44,687.463 1473,687.463 1473.56,687.463 1474.12,687.463 1474.68,687.463 1475.24,687.463 1475.79,687.463 1476.35,687.463 1476.91,687.463 1477.47,687.463 1478.03,687.463 1478.59,687.463 1479.15,687.463 1479.71,687.463 1480.27,687.463 1480.83,687.463 1481.39,687.463 1481.95,687.463 1482.51,687.463 1483.07,687.463 1483.62,687.463 1484.18,687.463 1484.74,687.463 1485.3,687.463 1485.86,687.463 1486.42,687.463 1486.98,687.463 1487.54,687.463 1488.1,687.463 1488.66,687.463 1489.22,687.463 1489.78,687.463 1490.34,687.463 1490.89,687.463 1491.45,687.463 1492.01,687.463 1492.57,687.463 1493.13,687.463 1493.69,687.463 1494.25,687.463 1494.81,687.463 1495.37,687.463 1495.93,687.463 1496.49,687.463 1497.05,687.463 1497.61,687.463 1498.16,687.463 1498.72,687.463 1499.28,687.463 1499.84,687.463 1500.4,687.463 1500.96,687.463 1501.52,687.463 1502.08,687.463 1502.64,687.463 1503.2,687.463 1503.76,687.463 1504.32,687.463 1504.88,687.463 1505.44,687.463 1505.99,687.463 1506.55,687.463 1507.11,687.463 1507.67,687.463 1508.23,687.463 1508.79,687.463 1509.35,687.463 1509.91,687.463 1510.47,687.463 1511.03,687.463 1511.59,687.463 1512.15,687.463 1512.71,687.463 1513.26,687.463 1513.82,687.463 1514.38,687.463 1514.94,687.463 1515.5,687.463 1516.06,687.463 1516.62,687.463 1517.18,687.463 1517.74,687.463 1518.3,687.463 1518.86,687.463 1519.42,687.463 1519.98,687.463 1520.53,687.463 1521.09,687.463 1521.65,687.463 1522.21,687.463 1522.77,687.463 1523.33,687.463 1523.89,687.463 1524.45,687.463 1525.01,687.463 1525.57,687.463 1526.13,687.463 1526.69,687.463 1527.25,687.463 1527.81,687.463 1528.36,687.463 1528.92,687.463 1529.48,687.463 1530.04,687.463 1530.6,687.463 1531.16,687.463 1531.72,687.463 1532.28,687.463 1532.84,687.463 1533.4,687.463 1533.96,687.463 1534.52,687.463 1535.08,687.463 1535.63,687.463 1536.19,687.463 1536.75,687.463 1537.31,687.463 1537.87,687.463 1538.43,687.463 1538.99,687.463 1539.55,687.463 1540.11,687.463 1540.67,687.463 1541.23,687.463 1541.79,687.463 1542.35,687.463 1542.9,687.463 1543.46,687.463 1544.02,687.463 1544.58,687.463 1545.14,687.463 1545.7,687.463 1546.26,687.463 1546.82,687.463 1547.38,687.463 1547.94,687.463 1548.5,687.463 1549.06,687.463 1549.62,687.463 1550.18,687.463 1550.73,687.463 1551.29,687.463 1551.85,687.463 1552.41,687.463 1552.97,687.463 1553.53,687.463 1554.09,687.463 1554.65,687.463 1555.21,687.463 1555.77,687.463 1556.33,687.463 1556.89,687.463 1557.45,687.463 1558,687.463 1558.56,687.463 1559.12,687.463 1559.68,687.463 1560.24,687.463 1560.8,687.463 1561.36,687.463 1561.92,687.463 1562.48,687.463 1563.04,687.463 1563.6,687.463 1564.16,687.463 1564.72,687.463 1565.28,687.463 1565.83,687.463 1566.39,687.463 1566.95,687.463 1567.51,687.463 1568.07,687.463 1568.63,687.463 1569.19,687.463 1569.75,687.463 1570.31,687.463 1570.87,687.463 1571.43,687.463 1571.99,687.463 1572.55,687.463 1573.1,687.463 1573.66,687.463 1574.22,687.463 1574.78,687.463 1575.34,687.463 1575.9,687.463 1576.46,687.463 1577.02,687.463 1577.58,687.463 1578.14,687.463 1578.7,687.463 1579.26,687.463 1579.82,687.463 1580.37,687.463 1580.93,687.463 1581.49,687.463 1582.05,687.463 1582.61,687.463 1583.17,687.463 1583.73,687.463 1584.29,687.463 1584.85,687.463 1585.41,687.463 1585.97,687.463 1586.53,687.463 1587.09,687.463 1587.65,687.463 1588.2,687.463 1588.76,687.463 1589.32,687.463 1589.88,687.463 1590.44,687.463 1591,687.463 1591.56,687.463 1592.12,687.463 1592.68,687.463 1593.24,687.463 1593.8,687.463 1594.36,687.463 1594.92,687.463 1595.47,687.463 1596.03,687.463 1596.59,687.463 1597.15,687.463 1597.71,687.463 1598.27,687.463 1598.83,687.463 1599.39,687.463 1599.95,687.463 1600.51,687.463 1601.07,687.463 1601.63,687.463 1602.19,687.463 1602.74,687.463 1603.3,687.463 1603.86,687.463 1604.42,687.463 1604.98,687.463 1605.54,687.463 1606.1,687.463 1606.66,687.463 1607.22,687.463 1607.78,687.463 1608.34,687.463 1608.9,687.463 1609.46,687.463 1610.02,687.463 1610.57,687.463 1611.13,687.463 1611.69,687.463 1612.25,687.463 1612.81,687.463 1613.37,687.463 1613.93,687.463 1614.49,687.463 1615.05,687.463 1615.61,687.463 1616.17,687.463 1616.73,687.463 1617.29,687.463 1617.84,687.463 1618.4,687.463 1618.96,687.463 1619.52,687.463 1620.08,687.463 1620.64,687.463 1621.2,687.463 1621.76,687.463 1622.32,687.463 1622.88,687.463 1623.44,687.463 1624,687.463 1624.56,687.463 1625.11,687.463 1625.67,687.463 1626.23,687.463 1626.79,687.463 1627.35,687.463 1627.91,687.463 1628.47,687.463 1629.03,687.463 1629.59,687.463 1630.15,687.463 1630.71,687.463 1631.27,687.463 1631.83,687.463 1632.39,687.463 1632.94,687.463 1633.5,687.463 1634.06,687.463 1634.62,687.463 1635.18,687.463 1635.74,687.463 1636.3,687.463 1636.86,687.463 1637.42,687.463 1637.98,687.463 1638.54,687.463 1639.1,687.463 1639.66,687.463 1640.21,687.463 1640.77,687.463 1641.33,687.463 1641.89,687.463 1642.45,687.463 1643.01,687.463 1643.57,687.463 1644.13,687.463 1644.69,687.463 1645.25,687.463 1645.81,687.463 1646.37,687.463 1646.93,687.463 1647.48,687.463 1648.04,687.463 1648.6,687.463 1649.16,687.463 1649.72,687.463 1650.28,687.463 1650.84,687.463 1651.4,687.463 1651.96,687.463 1652.52,687.463 1653.08,687.463 1653.64,687.463 1654.2,687.463 1654.76,687.463 1655.31,687.463 1655.87,687.463 1656.43,687.463 1656.99,687.463 1657.55,687.463 1658.11,687.463 1658.67,687.463 1659.23,687.463 1659.79,687.463 1660.35,687.463 1660.91,687.463 1661.47,687.463 1662.03,687.463 1662.58,687.463 1663.14,687.463 1663.7,687.463 1664.26,687.463 1664.82,687.463 1665.38,687.463 1665.94,687.463 1666.5,687.463 1667.06,687.463 1667.62,687.463 1668.18,687.463 1668.74,687.463 1669.3,687.463 1669.85,687.463 1670.41,687.463 1670.97,687.463 1671.53,687.463 1672.09,687.463 1672.65,687.463 1673.21,687.463 1673.77,687.463 1674.33,687.463 1674.89,687.463 1675.45,687.463 1676.01,687.463 1676.57,687.463 1677.13,687.463 1677.68,687.463 1678.24,687.463 1678.8,687.463 1679.36,687.463 1679.92,687.463 1680.48,687.463 1681.04,687.463 1681.6,687.463 1682.16,687.463 1682.72,687.463 1683.28,687.463 1683.84,687.463 1684.4,687.463 1684.95,687.463 1685.51,687.463 1686.07,687.463 1686.63,687.463 1687.19,687.463 1687.75,687.463 1688.31,687.463 1688.87,687.463 1689.43,687.463 1689.99,687.463 1690.55,687.463 1691.11,687.463 1691.67,687.463 1692.23,687.463 1692.78,687.463 1693.34,687.463 1693.9,687.463 1694.46,687.463 1695.02,687.463 1695.58,687.463 1696.14,687.463 1696.7,687.463 1697.26,687.463 1697.82,687.463 1698.38,687.463 1698.94,687.463 1699.5,687.463 1700.05,687.463 1700.61,687.463 1701.17,687.463 1701.73,687.463 1702.29,687.463 1702.85,687.463 1703.41,687.463 1703.97,687.463 1704.53,687.463 1705.09,687.463 1705.65,687.463 1706.21,687.463 1706.77,687.463 1707.32,687.463 1707.88,687.463 1708.44,687.463 1709,687.463 1709.56,687.463 1710.12,687.463 1710.68,687.463 1711.24,687.463 1711.8,687.463 1712.36,687.463 1712.92,687.463 1713.48,687.463 1714.04,687.463 1714.6,687.463 1715.15,687.463 1715.71,687.463 1716.27,687.463 1716.83,687.463 1717.39,687.463 1717.95,687.463 1718.51,687.463 1719.07,687.463 1719.63,687.463 1720.19,687.463 1720.75,687.463 1721.31,687.463 1721.87,687.463 1722.42,687.463 1722.98,687.463 1723.54,687.463 1724.1,687.463 1724.66,687.463 1725.22,687.463 1725.78,687.463 1726.34,687.463 1726.9,687.463 1727.46,687.463 1728.02,687.463 1728.58,687.463 1729.14,687.463 1729.69,687.463 1730.25,687.463 1730.81,687.463 1731.37,687.463 1731.93,687.463 1732.49,687.463 1733.05,687.463 1733.61,687.463 1734.17,687.463 1734.73,687.463 1735.29,687.463 1735.85,687.463 1736.41,687.463 1736.97,687.463 1737.52,687.463 1738.08,687.463 1738.64,687.463 1739.2,687.463 1739.76,687.463 1740.32,687.463 1740.88,687.463 1741.44,687.463 1742,687.463 1742.56,687.463 1743.12,687.463 1743.68,687.463 1744.24,687.463 1744.79,687.463 1745.35,687.463 1745.91,687.463 1746.47,687.463 1747.03,687.463 1747.59,687.463 1748.15,687.463 1748.71,687.463 1749.27,687.463 1749.83,687.463 1750.39,687.463 1750.95,687.463 1751.51,687.463 1752.06,687.463 1752.62,687.463 1753.18,687.463 1753.74,687.463 1754.3,687.463 1754.86,687.463 1755.42,687.463 1755.98,687.463 1756.54,687.463 1757.1,687.463 1757.66,687.463 1758.22,687.463 1758.78,687.463 1759.34,687.463 1759.89,687.463 1760.45,687.463 1761.01,687.463 1761.57,687.463 1762.13,687.463 1762.69,687.463 1763.25,687.463 1763.81,687.463 1764.37,687.463 1764.93,687.463 1765.49,687.463 1766.05,687.463 1766.61,687.463 1767.16,687.463 1767.72,687.463 1768.28,687.463 1768.84,687.463 1769.4,687.463 1769.96,687.463 1770.52,687.463 1771.08,687.463 1771.64,687.463 1772.2,687.463 1772.76,687.463 1773.32,687.463 1773.88,687.463 1774.43,687.463 1774.99,687.463 1775.55,687.463 1776.11,687.463 1776.67,687.463 1777.23,687.463 1777.79,687.463 1778.35,687.463 1778.91,687.463 1779.47,687.463 1780.03,687.463 1780.59,687.463 1781.15,687.463 1781.71,687.463 1782.26,687.463 1782.82,687.463 1783.38,687.463 1783.94,687.463 1784.5,687.463 1785.06,687.463 1785.62,687.463 1786.18,687.463 1786.74,687.463 1787.3,687.463 1787.86,687.463 1788.42,687.463 1788.98,687.463 1789.53,687.463 1790.09,687.463 1790.65,687.463 1791.21,687.463 1791.77,687.463 1792.33,687.463 1792.89,687.463 1793.45,687.463 1794.01,687.463 1794.57,687.463 1795.13,687.463 1795.69,687.463 1796.25,687.463 1796.8,687.463 1797.36,687.463 1797.92,687.463 1798.48,687.463 1799.04,687.463 1799.6,687.463 1800.16,687.463 1800.72,687.463 1801.28,687.463 1801.84,687.463 1802.4,687.463 1802.96,687.463 1803.52,687.463 1804.08,687.463 1804.63,687.463 1805.19,687.463 1805.75,687.463 1806.31,687.463 1806.87,687.463 1807.43,687.463 1807.99,687.463 1808.55,687.463 1809.11,687.463 1809.67,687.463 1810.23,687.463 1810.79,687.463 1811.35,687.463 1811.9,687.463 1812.46,687.463 1813.02,687.463 1813.58,687.463 1814.14,687.463 1814.7,687.463 1815.26,687.463 1815.82,687.463 1816.38,687.463 1816.94,687.463 1817.5,687.463 1818.06,687.463 1818.62,687.463 1819.18,687.463 1819.73,687.463 1820.29,687.463 1820.85,687.463 1821.41,687.463 1821.97,687.463 1822.53,687.463 1823.09,687.463 1823.65,687.463 1824.21,687.463 1824.77,687.463 1825.33,687.463 1825.89,687.463 1826.45,687.463 1827,687.463 1827.56,687.463 1828.12,687.463 1828.68,687.463 1829.24,687.463 1829.8,687.463 1830.36,687.463 1830.92,687.463 1831.48,687.463 1832.04,687.463 1832.6,687.463 1833.16,687.463 1833.72,687.463 1834.27,687.463 1834.83,687.463 1835.39,687.463 1835.95,687.463 1836.51,687.463 1837.07,687.463 1837.63,687.463 1838.19,687.463 \"/>\n<path clip-path=\"url(#clip433)\" d=\"M720.247 685.118 L720.806 685.118 L721.365 685.118 L721.924 685.118 L722.484 685.118 L723.043 685.118 L723.602 685.118 L724.161 685.118 L724.721 685.118 L725.28 685.118 L725.839 685.118 L726.398 685.118 L726.958 685.118 L727.517 685.118 L728.076 685.118 L728.635 685.118 L729.195 685.118 L729.754 685.118 L730.313 685.118 L730.872 685.118 L731.432 685.118 L731.991 685.118 L732.55 685.118 L733.109 685.118 L733.669 685.118 L734.228 685.118 L734.787 685.118 L735.346 685.118 L735.906 685.118 L736.465 685.118 L737.024 685.118 L737.583 685.118 L738.143 685.118 L738.702 685.118 L739.261 685.118 L739.82 685.118 L740.38 685.118 L740.939 685.118 L741.498 685.118 L742.057 685.118 L742.617 685.118 L743.176 685.118 L743.735 685.118 L744.294 685.118 L744.854 685.118 L745.413 685.118 L745.972 685.118 L746.531 685.118 L747.091 685.118 L747.65 685.118 L748.209 685.118 L748.768 685.118 L749.328 685.118 L749.887 685.118 L750.446 685.118 L751.005 685.118 L751.565 685.118 L752.124 685.118 L752.683 685.118 L753.242 685.118 L753.802 685.118 L754.361 685.118 L754.92 685.118 L755.479 685.118 L756.039 685.118 L756.598 685.118 L757.157 685.118 L757.716 685.118 L758.276 685.118 L758.835 685.118 L759.394 685.118 L759.953 685.118 L760.513 685.118 L761.072 685.118 L761.631 685.118 L762.19 685.118 L762.75 685.118 L763.309 685.118 L763.868 685.118 L764.427 685.118 L764.987 685.118 L765.546 685.118 L766.105 685.118 L766.664 685.118 L767.224 685.118 L767.783 685.118 L768.342 685.118 L768.901 685.118 L769.461 685.118 L770.02 685.118 L770.579 685.118 L771.138 685.118 L771.698 685.118 L772.257 685.118 L772.816 685.118 L773.375 685.118 L773.935 685.118 L774.494 685.118 L775.053 685.118 L775.612 685.118 L776.172 685.118 L776.731 685.118 L777.29 685.118 L777.849 685.118 L778.409 685.118 L778.968 685.118 L779.527 685.118 L780.086 685.118 L780.646 685.118 L781.205 685.118 L781.764 685.118 L782.323 685.118 L782.883 685.118 L783.442 685.118 L784.001 685.118 L784.56 685.118 L785.12 685.118 L785.679 685.118 L786.238 685.118 L786.797 685.118 L787.357 685.118 L787.916 685.118 L788.475 685.118 L789.034 685.118 L789.594 685.118 L790.153 685.118 L790.712 685.118 L791.271 685.118 L791.831 685.118 L792.39 685.118 L792.949 685.118 L793.508 685.118 L794.068 685.118 L794.627 685.118 L795.186 685.118 L795.745 685.118 L796.305 685.118 L796.864 685.118 L797.423 685.118 L797.982 685.118 L798.542 685.118 L799.101 685.118 L799.66 685.118 L800.219 685.118 L800.779 685.118 L801.338 685.118 L801.897 685.118 L802.456 685.118 L803.016 685.118 L803.575 685.118 L804.134 685.118 L804.693 685.118 L805.253 685.118 L805.812 685.118 L806.371 685.118 L806.931 685.118 L807.49 685.118 L808.049 685.118 L808.608 685.118 L809.168 685.118 L809.727 685.118 L810.286 685.118 L810.845 685.118 L811.405 685.118 L811.964 685.118 L812.523 685.118 L813.082 685.118 L813.642 685.118 L814.201 685.118 L814.76 685.118 L815.319 685.118 L815.879 685.118 L816.438 685.118 L816.997 685.118 L817.556 685.118 L818.116 685.118 L818.675 685.118 L819.234 685.118 L819.793 685.118 L820.353 685.118 L820.912 685.118 L821.471 685.118 L822.03 685.118 L822.59 685.118 L823.149 685.118 L823.708 685.118 L824.267 685.118 L824.827 685.118 L825.386 685.118 L825.945 685.118 L826.504 685.118 L827.064 685.118 L827.623 685.118 L828.182 685.118 L828.741 685.118 L829.301 685.118 L829.86 685.118 L830.419 685.118 L830.978 685.118 L831.538 685.118 L832.097 685.118 L832.656 685.118 L833.215 685.118 L833.775 685.118 L834.334 685.118 L834.893 685.118 L835.452 685.118 L836.012 685.118 L836.571 685.118 L837.13 685.118 L837.689 685.118 L838.249 685.118 L838.808 685.118 L839.367 685.118 L839.926 685.118 L840.486 685.118 L841.045 685.118 L841.604 685.118 L842.163 685.118 L842.723 685.118 L843.282 685.118 L843.841 685.118 L844.4 685.118 L844.96 685.118 L845.519 685.118 L846.078 685.118 L846.637 685.118 L847.197 685.118 L847.756 685.118 L848.315 685.118 L848.874 685.118 L849.434 685.118 L849.993 685.118 L850.552 685.118 L851.111 685.118 L851.671 685.118 L852.23 685.118 L852.789 685.118 L853.348 685.118 L853.908 685.118 L854.467 685.118 L855.026 685.118 L855.585 685.118 L856.145 685.118 L856.704 685.118 L857.263 685.118 L857.822 685.118 L858.382 685.118 L858.941 685.118 L859.5 685.118 L860.059 685.118 L860.619 685.118 L861.178 685.118 L861.737 685.118 L862.296 685.118 L862.856 685.118 L863.415 685.118 L863.974 685.118 L864.533 685.118 L865.093 685.118 L865.652 685.118 L866.211 685.118 L866.77 685.118 L867.33 685.118 L867.889 685.118 L868.448 685.118 L869.007 685.118 L869.567 685.118 L870.126 685.118 L870.685 685.118 L871.244 685.118 L871.804 685.118 L872.363 685.118 L872.922 685.118 L873.481 685.118 L874.041 685.118 L874.6 685.118 L875.159 685.118 L875.718 685.118 L876.278 685.118 L876.837 685.118 L877.396 685.118 L877.955 685.118 L878.515 685.118 L879.074 685.118 L879.633 685.118 L880.192 685.118 L880.752 685.118 L881.311 685.118 L881.87 685.118 L882.429 685.118 L882.989 685.118 L883.548 685.118 L884.107 685.118 L884.666 685.118 L885.226 685.118 L885.785 685.118 L886.344 685.118 L886.903 685.118 L887.463 685.118 L888.022 685.118 L888.581 685.118 L889.14 685.118 L889.7 685.118 L890.259 685.118 L890.818 685.118 L891.377 685.118 L891.937 685.118 L892.496 685.118 L893.055 685.118 L893.614 685.118 L894.174 685.118 L894.733 685.118 L895.292 685.118 L895.851 685.118 L896.411 685.118 L896.97 685.118 L897.529 685.118 L898.088 685.118 L898.648 685.118 L899.207 685.118 L899.766 685.118 L900.325 685.118 L900.885 685.118 L901.444 685.118 L902.003 685.118 L902.562 685.118 L903.122 685.118 L903.681 685.118 L904.24 685.118 L904.799 685.118 L905.359 685.118 L905.918 685.118 L906.477 685.118 L907.036 685.118 L907.596 685.118 L908.155 685.118 L908.714 685.118 L909.273 685.118 L909.833 685.118 L910.392 685.118 L910.951 685.118 L911.51 685.118 L912.07 685.118 L912.629 685.118 L913.188 685.118 L913.747 685.118 L914.307 685.118 L914.866 685.118 L915.425 685.118 L915.984 685.118 L916.544 685.118 L917.103 685.118 L917.662 685.118 L918.221 685.118 L918.781 685.118 L919.34 685.118 L919.899 685.118 L920.458 685.118 L921.018 685.118 L921.577 685.118 L922.136 685.118 L922.695 685.118 L923.255 685.118 L923.814 685.118 L924.373 685.118 L924.932 685.118 L925.492 685.118 L926.051 685.118 L926.61 685.118 L927.169 685.118 L927.729 685.118 L928.288 685.118 L928.847 685.118 L929.406 685.118 L929.966 685.118 L930.525 685.118 L931.084 685.118 L931.644 685.118 L932.203 685.118 L932.762 685.118 L933.321 685.118 L933.881 685.118 L934.44 685.118 L934.999 685.118 L935.558 685.118 L936.118 685.118 L936.677 685.118 L937.236 685.118 L937.795 685.118 L938.355 685.118 L938.914 685.118 L939.473 685.118 L940.032 685.118 L940.592 685.118 L941.151 685.118 L941.71 685.118 L942.269 685.118 L942.829 685.118 L943.388 685.118 L943.947 685.118 L944.506 685.118 L945.066 685.118 L945.625 685.118 L946.184 685.118 L946.743 685.118 L947.303 685.118 L947.862 685.118 L948.421 685.118 L948.98 685.118 L949.54 685.118 L950.099 685.118 L950.658 685.118 L951.217 685.118 L951.777 685.118 L952.336 685.118 L952.895 685.118 L953.454 685.118 L954.014 685.118 L954.573 685.118 L955.132 685.118 L955.691 685.118 L956.251 685.118 L956.81 685.118 L957.369 685.118 L957.928 685.118 L958.488 685.118 L959.047 685.118 L959.606 685.118 L960.165 685.118 L960.725 685.118 L961.284 685.118 L961.843 685.118 L962.402 685.118 L962.962 685.118 L963.521 685.118 L964.08 685.118 L964.639 685.118 L965.199 685.118 L965.758 685.118 L966.317 685.118 L966.876 685.118 L967.436 685.118 L967.995 685.118 L968.554 685.118 L969.113 685.118 L969.673 685.118 L970.232 685.118 L970.791 685.118 L971.35 685.118 L971.91 685.118 L972.469 685.118 L973.028 685.118 L973.587 685.118 L974.147 685.118 L974.706 685.118 L975.265 685.118 L975.824 685.118 L976.384 685.118 L976.943 685.118 L977.502 685.118 L978.061 685.118 L978.621 685.118 L979.18 685.118 L979.739 685.118 L980.298 685.118 L980.858 685.118 L981.417 685.118 L981.976 685.118 L982.535 685.118 L983.095 685.118 L983.654 685.118 L984.213 685.118 L984.772 685.118 L985.332 685.118 L985.891 685.118 L986.45 685.118 L987.009 685.118 L987.569 685.118 L988.128 685.118 L988.687 685.118 L989.246 685.118 L989.806 685.118 L990.365 685.118 L990.924 685.118 L991.483 685.118 L992.043 685.118 L992.602 685.118 L993.161 685.118 L993.72 685.118 L994.28 685.118 L994.839 685.118 L995.398 685.118 L995.957 685.118 L996.517 685.118 L997.076 685.118 L997.635 685.118 L998.194 685.118 L998.754 685.118 L999.313 685.118 L999.872 685.118 L1000.43 685.118 L1000.99 685.118 L1001.55 685.118 L1002.11 685.118 L1002.67 685.118 L1003.23 685.118 L1003.79 685.118 L1004.35 685.118 L1004.91 685.118 L1005.46 685.118 L1006.02 685.118 L1006.58 685.118 L1007.14 685.118 L1007.7 685.118 L1008.26 685.118 L1008.82 685.118 L1009.38 685.118 L1009.94 685.118 L1010.5 685.118 L1011.06 685.118 L1011.62 685.118 L1012.18 685.118 L1012.73 685.118 L1013.29 685.118 L1013.85 685.118 L1014.41 685.118 L1014.97 685.118 L1015.53 685.118 L1016.09 685.118 L1016.65 685.118 L1017.21 685.118 L1017.77 685.118 L1018.33 685.118 L1018.89 685.118 L1019.45 685.118 L1020.01 685.118 L1020.56 685.118 L1021.12 685.118 L1021.68 685.118 L1022.24 685.118 L1022.8 685.118 L1023.36 685.118 L1023.92 685.118 L1024.48 685.118 L1025.04 685.118 L1025.6 685.118 L1026.16 685.118 L1026.72 685.118 L1027.28 685.118 L1027.83 685.118 L1028.39 685.118 L1028.95 685.118 L1029.51 685.118 L1030.07 685.118 L1030.63 685.118 L1031.19 685.118 L1031.75 685.118 L1032.31 685.118 L1032.87 685.118 L1033.43 685.118 L1033.99 685.118 L1034.55 685.118 L1035.1 685.118 L1035.66 685.118 L1036.22 685.118 L1036.78 685.118 L1037.34 685.118 L1037.9 685.118 L1038.46 685.118 L1039.02 685.118 L1039.58 685.118 L1040.14 685.118 L1040.7 685.118 L1041.26 685.118 L1041.82 685.118 L1042.38 685.118 L1042.93 685.118 L1043.49 685.118 L1044.05 685.118 L1044.61 685.118 L1045.17 685.118 L1045.73 685.118 L1046.29 685.118 L1046.85 685.118 L1047.41 685.118 L1047.97 685.118 L1048.53 685.118 L1049.09 685.118 L1049.65 685.118 L1050.2 685.118 L1050.76 685.118 L1051.32 685.118 L1051.88 685.118 L1052.44 685.118 L1053 685.118 L1053.56 685.118 L1054.12 685.118 L1054.68 685.118 L1055.24 685.118 L1055.8 685.118 L1056.36 685.118 L1056.92 685.118 L1057.48 685.118 L1058.03 685.118 L1058.59 685.118 L1059.15 685.118 L1059.71 685.118 L1060.27 685.118 L1060.83 685.118 L1061.39 685.118 L1061.95 685.118 L1062.51 685.118 L1063.07 685.118 L1063.63 685.118 L1064.19 685.118 L1064.75 685.118 L1065.3 685.118 L1065.86 685.118 L1066.42 685.118 L1066.98 685.118 L1067.54 685.118 L1068.1 685.118 L1068.66 685.118 L1069.22 685.118 L1069.78 685.118 L1070.34 685.118 L1070.9 685.118 L1071.46 685.118 L1072.02 685.118 L1072.57 685.118 L1073.13 685.118 L1073.69 685.118 L1074.25 685.118 L1074.81 685.118 L1075.37 685.118 L1075.93 685.118 L1076.49 685.118 L1077.05 685.118 L1077.61 685.118 L1078.17 685.118 L1078.73 685.118 L1079.29 685.118 L1079.85 685.118 L1080.4 685.118 L1080.96 685.118 L1081.52 685.118 L1082.08 685.118 L1082.64 685.118 L1083.2 685.118 L1083.76 685.118 L1084.32 685.118 L1084.88 685.118 L1085.44 685.118 L1086 685.118 L1086.56 685.118 L1087.12 685.118 L1087.67 685.118 L1088.23 685.118 L1088.79 685.118 L1089.35 685.118 L1089.91 685.118 L1090.47 685.118 L1091.03 685.118 L1091.59 685.118 L1092.15 685.118 L1092.71 685.118 L1093.27 685.118 L1093.83 685.118 L1094.39 685.118 L1094.94 685.118 L1095.5 685.118 L1096.06 685.118 L1096.62 685.118 L1097.18 685.118 L1097.74 685.118 L1098.3 685.118 L1098.86 685.118 L1099.42 685.118 L1099.98 685.118 L1100.54 685.118 L1101.1 685.118 L1101.66 685.118 L1102.22 685.118 L1102.77 685.118 L1103.33 685.118 L1103.89 685.118 L1104.45 685.118 L1105.01 685.118 L1105.57 685.118 L1106.13 685.118 L1106.69 685.118 L1107.25 685.118 L1107.81 685.118 L1108.37 685.118 L1108.93 685.118 L1109.49 685.118 L1110.04 685.118 L1110.6 685.118 L1111.16 685.118 L1111.72 685.118 L1112.28 685.118 L1112.84 685.118 L1113.4 685.118 L1113.96 685.118 L1114.52 685.118 L1115.08 685.118 L1115.64 685.118 L1116.2 685.118 L1116.76 685.118 L1117.31 685.118 L1117.87 685.118 L1118.43 685.118 L1118.99 685.118 L1119.55 685.118 L1120.11 685.118 L1120.67 685.118 L1121.23 685.118 L1121.79 685.118 L1122.35 685.118 L1122.91 685.118 L1123.47 685.118 L1124.03 685.118 L1124.59 685.118 L1125.14 685.118 L1125.7 685.118 L1126.26 685.118 L1126.82 685.118 L1127.38 685.118 L1127.94 685.118 L1128.5 685.118 L1129.06 685.118 L1129.62 685.118 L1130.18 685.118 L1130.74 685.118 L1131.3 685.118 L1131.86 685.118 L1132.41 685.118 L1132.97 685.118 L1133.53 685.118 L1134.09 685.118 L1134.65 685.118 L1135.21 685.118 L1135.77 685.118 L1136.33 685.118 L1136.89 685.118 L1137.45 685.118 L1138.01 685.118 L1138.57 685.118 L1139.13 685.118 L1139.68 685.118 L1140.24 685.118 L1140.8 685.118 L1141.36 685.118 L1141.92 685.118 L1142.48 685.118 L1143.04 685.118 L1143.6 685.118 L1144.16 685.118 L1144.72 685.118 L1145.28 685.118 L1145.84 685.118 L1146.4 685.118 L1146.96 685.118 L1147.51 685.118 L1148.07 685.118 L1148.63 685.118 L1149.19 685.118 L1149.75 685.118 L1150.31 685.118 L1150.87 685.118 L1151.43 685.118 L1151.99 685.118 L1152.55 685.118 L1153.11 685.118 L1153.67 685.118 L1154.23 685.118 L1154.78 685.118 L1155.34 685.118 L1155.9 685.118 L1156.46 685.118 L1157.02 685.118 L1157.58 685.118 L1158.14 685.118 L1158.7 685.118 L1159.26 685.118 L1159.82 685.118 L1160.38 685.118 L1160.94 685.118 L1161.5 685.118 L1162.05 685.118 L1162.61 685.118 L1163.17 685.118 L1163.73 685.118 L1164.29 685.118 L1164.85 685.118 L1165.41 685.118 L1165.97 685.118 L1166.53 685.118 L1167.09 685.118 L1167.65 685.118 L1168.21 685.118 L1168.77 685.118 L1169.33 685.118 L1169.88 685.118 L1170.44 685.118 L1171 685.118 L1171.56 685.118 L1172.12 685.118 L1172.68 685.118 L1173.24 685.118 L1173.8 685.118 L1174.36 685.118 L1174.92 685.118 L1175.48 685.118 L1176.04 685.118 L1176.6 685.118 L1177.15 685.118 L1177.71 685.118 L1178.27 685.118 L1178.83 685.118 L1179.39 685.118 L1179.95 685.118 L1180.51 685.118 L1181.07 685.118 L1181.63 685.118 L1182.19 685.118 L1182.75 685.118 L1183.31 685.118 L1183.87 685.118 L1184.43 685.118 L1184.98 685.118 L1185.54 685.118 L1186.1 685.118 L1186.66 685.118 L1187.22 685.118 L1187.78 685.118 L1188.34 685.118 L1188.9 685.118 L1189.46 685.118 L1190.02 685.118 L1190.58 685.118 L1191.14 685.118 L1191.7 685.118 L1192.25 685.118 L1192.81 685.118 L1193.37 685.118 L1193.93 685.118 L1194.49 685.118 L1195.05 685.118 L1195.61 685.118 L1196.17 685.118 L1196.73 685.118 L1197.29 685.118 L1197.85 685.118 L1198.41 685.118 L1198.97 685.118 L1199.52 685.118 L1200.08 685.118 L1200.64 685.118 L1201.2 685.118 L1201.76 685.118 L1202.32 685.118 L1202.88 685.118 L1203.44 685.118 L1204 685.118 L1204.56 685.118 L1205.12 685.118 L1205.68 685.118 L1206.24 685.118 L1206.8 685.118 L1207.35 685.118 L1207.91 685.118 L1208.47 685.118 L1209.03 685.118 L1209.59 685.118 L1210.15 685.118 L1210.71 685.118 L1211.27 685.118 L1211.83 685.118 L1212.39 685.118 L1212.95 685.118 L1213.51 685.118 L1214.07 685.118 L1214.62 685.118 L1215.18 685.118 L1215.74 685.118 L1216.3 685.118 L1216.86 685.118 L1217.42 685.118 L1217.98 685.118 L1218.54 685.118 L1219.1 685.118 L1219.66 685.118 L1220.22 685.118 L1220.78 685.118 L1221.34 685.118 L1221.89 685.118 L1222.45 685.118 L1223.01 685.118 L1223.57 685.118 L1224.13 685.118 L1224.69 685.118 L1225.25 685.118 L1225.81 685.118 L1226.37 685.118 L1226.93 685.118 L1227.49 685.118 L1228.05 685.118 L1228.61 685.118 L1229.17 685.118 L1229.72 685.118 L1230.28 685.118 L1230.84 685.118 L1231.4 685.118 L1231.96 685.118 L1232.52 685.118 L1233.08 685.118 L1233.64 685.118 L1234.2 685.118 L1234.76 685.118 L1235.32 685.118 L1235.88 685.118 L1236.44 685.118 L1236.99 685.118 L1237.55 685.118 L1238.11 685.118 L1238.67 685.118 L1239.23 685.118 L1239.79 685.118 L1240.35 685.118 L1240.91 685.118 L1241.47 685.118 L1242.03 685.118 L1242.59 685.118 L1243.15 685.118 L1243.71 685.118 L1244.26 685.118 L1244.82 685.118 L1245.38 685.118 L1245.94 685.118 L1246.5 685.118 L1247.06 685.118 L1247.62 685.118 L1248.18 685.118 L1248.74 685.118 L1249.3 685.118 L1249.86 685.118 L1250.42 685.118 L1250.98 685.118 L1251.54 685.118 L1252.09 685.118 L1252.65 685.118 L1253.21 685.118 L1253.77 685.118 L1254.33 685.118 L1254.89 685.118 L1255.45 685.118 L1256.01 685.118 L1256.57 685.118 L1257.13 685.118 L1257.69 685.118 L1258.25 685.118 L1258.81 685.118 L1259.36 685.118 L1259.92 685.118 L1260.48 685.118 L1261.04 685.118 L1261.6 685.118 L1262.16 685.118 L1262.72 685.118 L1263.28 685.118 L1263.84 685.118 L1264.4 685.118 L1264.96 685.118 L1265.52 685.118 L1266.08 685.118 L1266.63 685.118 L1267.19 685.118 L1267.75 685.118 L1268.31 685.118 L1268.87 685.118 L1269.43 685.118 L1269.99 685.118 L1270.55 685.118 L1271.11 685.118 L1271.67 685.118 L1272.23 685.118 L1272.79 685.118 L1273.35 685.118 L1273.91 685.118 L1274.46 685.118 L1275.02 685.118 L1275.58 685.118 L1276.14 685.118 L1276.7 685.118 L1277.26 685.118 L1277.82 685.118 L1278.38 685.118 L1278.94 685.118 L1279.5 685.118 L1280.06 685.118 L1280.62 685.118 L1281.18 685.118 L1281.73 685.118 L1282.29 685.118 L1282.85 685.118 L1283.41 685.118 L1283.97 685.118 L1284.53 685.118 L1285.09 685.118 L1285.65 685.118 L1286.21 685.118 L1286.77 685.118 L1287.33 685.118 L1287.89 685.118 L1288.45 685.118 L1289 685.118 L1289.56 685.118 L1290.12 685.118 L1290.68 685.118 L1291.24 685.118 L1291.8 685.118 L1292.36 685.118 L1292.92 685.118 L1293.48 685.118 L1294.04 685.118 L1294.6 685.118 L1295.16 685.118 L1295.72 685.118 L1296.28 685.118 L1296.83 685.118 L1297.39 685.118 L1297.95 685.118 L1298.51 685.118 L1299.07 685.118 L1299.63 685.118 L1300.19 685.118 L1300.75 685.118 L1301.31 685.118 L1301.87 685.118 L1302.43 685.118 L1302.99 685.118 L1303.55 685.118 L1304.1 685.118 L1304.66 685.118 L1305.22 685.118 L1305.78 685.118 L1306.34 685.118 L1306.9 685.118 L1307.46 685.118 L1308.02 685.118 L1308.58 685.118 L1309.14 685.118 L1309.7 685.118 L1310.26 685.118 L1310.82 685.118 L1311.38 685.118 L1311.93 685.118 L1312.49 685.118 L1313.05 685.118 L1313.61 685.118 L1314.17 685.118 L1314.73 685.118 L1315.29 685.118 L1315.85 685.118 L1316.41 685.118 L1316.97 685.118 L1317.53 685.118 L1318.09 685.118 L1318.65 685.118 L1319.2 685.118 L1319.76 685.118 L1320.32 685.118 L1320.88 685.118 L1321.44 685.118 L1322 685.118 L1322.56 685.118 L1323.12 685.118 L1323.68 685.118 L1324.24 685.118 L1324.8 685.118 L1325.36 685.118 L1325.92 685.118 L1326.47 685.118 L1327.03 685.118 L1327.59 685.118 L1328.15 685.118 L1328.71 685.118 L1329.27 685.118 L1329.83 685.118 L1330.39 685.118 L1330.95 685.118 L1331.51 685.118 L1332.07 685.118 L1332.63 685.118 L1333.19 685.118 L1333.75 685.118 L1334.3 685.118 L1334.86 685.118 L1335.42 685.118 L1335.98 685.118 L1336.54 685.118 L1337.1 685.118 L1337.66 685.118 L1338.22 685.118 L1338.78 685.118 L1339.34 685.118 L1339.9 685.118 L1340.46 685.118 L1341.02 685.118 L1341.57 685.118 L1342.13 685.118 L1342.69 685.118 L1343.25 685.118 L1343.81 685.118 L1344.37 685.118 L1344.93 685.118 L1345.49 685.118 L1346.05 685.118 L1346.61 685.118 L1347.17 685.118 L1347.73 685.118 L1348.29 685.118 L1348.84 685.118 L1349.4 685.118 L1349.96 685.118 L1350.52 685.118 L1351.08 685.118 L1351.64 685.118 L1352.2 685.118 L1352.76 685.118 L1353.32 685.118 L1353.88 685.118 L1354.44 685.118 L1355 685.118 L1355.56 685.118 L1356.12 685.118 L1356.67 685.118 L1357.23 685.118 L1357.79 685.118 L1358.35 685.118 L1358.91 685.118 L1359.47 685.118 L1360.03 685.118 L1360.59 685.118 L1361.15 685.118 L1361.71 685.118 L1362.27 685.118 L1362.83 685.118 L1363.39 685.118 L1363.94 685.118 L1364.5 685.118 L1365.06 685.118 L1365.62 685.118 L1366.18 685.118 L1366.74 685.118 L1367.3 685.118 L1367.86 685.118 L1368.42 685.118 L1368.98 685.118 L1369.54 685.118 L1370.1 685.118 L1370.66 685.118 L1371.21 685.118 L1371.77 685.118 L1372.33 685.118 L1372.89 685.118 L1373.45 685.118 L1374.01 685.118 L1374.57 685.118 L1375.13 685.118 L1375.69 685.118 L1376.25 685.118 L1376.81 685.118 L1377.37 685.118 L1377.93 685.118 L1378.49 685.118 L1379.04 685.118 L1379.6 685.118 L1380.16 685.118 L1380.72 685.118 L1381.28 685.118 L1381.84 685.118 L1382.4 685.118 L1382.96 685.118 L1383.52 685.118 L1384.08 685.118 L1384.64 685.118 L1385.2 685.118 L1385.76 685.118 L1386.31 685.118 L1386.87 685.118 L1387.43 685.118 L1387.99 685.118 L1388.55 685.118 L1389.11 685.118 L1389.67 685.118 L1390.23 685.118 L1390.79 685.118 L1391.35 685.118 L1391.91 685.118 L1392.47 685.118 L1393.03 685.118 L1393.58 685.118 L1394.14 685.118 L1394.7 685.118 L1395.26 685.118 L1395.82 685.118 L1396.38 685.118 L1396.94 685.118 L1397.5 685.118 L1398.06 685.118 L1398.62 685.118 L1399.18 685.118 L1399.74 685.118 L1400.3 685.118 L1400.86 685.118 L1401.41 685.118 L1401.97 685.118 L1402.53 685.118 L1403.09 685.118 L1403.65 685.118 L1404.21 685.118 L1404.77 685.118 L1405.33 685.118 L1405.89 685.118 L1406.45 685.118 L1407.01 685.118 L1407.57 685.118 L1408.13 685.118 L1408.68 685.118 L1409.24 685.118 L1409.8 685.118 L1410.36 685.118 L1410.92 685.118 L1411.48 685.118 L1412.04 685.118 L1412.6 685.118 L1413.16 685.118 L1413.72 685.118 L1414.28 685.118 L1414.84 685.118 L1415.4 685.118 L1415.95 685.118 L1416.51 685.118 L1417.07 685.118 L1417.63 685.118 L1418.19 685.118 L1418.75 685.118 L1419.31 685.118 L1419.87 685.118 L1420.43 685.118 L1420.99 685.118 L1421.55 685.118 L1422.11 685.118 L1422.67 685.118 L1423.23 685.118 L1423.78 685.118 L1424.34 685.118 L1424.9 685.118 L1425.46 685.118 L1426.02 685.118 L1426.58 685.118 L1427.14 685.118 L1427.7 685.118 L1428.26 685.118 L1428.82 685.118 L1429.38 685.118 L1429.94 685.118 L1430.5 685.118 L1431.05 685.118 L1431.61 685.118 L1432.17 685.118 L1432.73 685.118 L1433.29 685.118 L1433.85 685.118 L1434.41 685.118 L1434.97 685.118 L1435.53 685.118 L1436.09 685.118 L1436.65 685.118 L1437.21 685.118 L1437.77 685.118 L1438.33 685.118 L1438.88 685.118 L1439.44 685.118 L1440 685.118 L1440.56 685.118 L1441.12 685.118 L1441.68 685.118 L1442.24 685.118 L1442.8 685.118 L1443.36 685.118 L1443.92 685.118 L1444.48 685.118 L1445.04 685.118 L1445.6 685.118 L1446.15 685.118 L1446.71 685.118 L1447.27 685.118 L1447.83 685.118 L1448.39 685.118 L1448.95 685.118 L1449.51 685.118 L1450.07 685.118 L1450.63 685.118 L1451.19 685.118 L1451.75 685.118 L1452.31 685.118 L1452.87 685.118 L1453.42 685.118 L1453.98 685.118 L1454.54 685.118 L1455.1 685.118 L1455.66 685.118 L1456.22 685.118 L1456.78 685.118 L1457.34 685.118 L1457.9 685.118 L1458.46 685.118 L1459.02 685.118 L1459.58 685.118 L1460.14 685.118 L1460.7 685.118 L1461.25 685.118 L1461.81 685.118 L1462.37 685.118 L1462.93 685.118 L1463.49 685.118 L1464.05 685.118 L1464.61 685.118 L1465.17 685.118 L1465.73 685.118 L1466.29 685.118 L1466.85 685.118 L1467.41 685.118 L1467.97 685.118 L1468.52 685.118 L1469.08 685.118 L1469.64 685.118 L1470.2 685.118 L1470.76 685.118 L1471.32 685.118 L1471.88 685.118 L1472.44 685.118 L1473 685.118 L1473.56 685.118 L1474.12 685.118 L1474.68 685.118 L1475.24 685.118 L1475.79 685.118 L1476.35 685.118 L1476.91 685.118 L1477.47 685.118 L1478.03 685.118 L1478.59 685.118 L1479.15 685.118 L1479.71 685.118 L1480.27 685.118 L1480.83 685.118 L1481.39 685.118 L1481.95 685.118 L1482.51 685.118 L1483.07 685.118 L1483.62 685.118 L1484.18 685.118 L1484.74 685.118 L1485.3 685.118 L1485.86 685.118 L1486.42 685.118 L1486.98 685.118 L1487.54 685.118 L1488.1 685.118 L1488.66 685.118 L1489.22 685.118 L1489.78 685.118 L1490.34 685.118 L1490.89 685.118 L1491.45 685.118 L1492.01 685.118 L1492.57 685.118 L1493.13 685.118 L1493.69 685.118 L1494.25 685.118 L1494.81 685.118 L1495.37 685.118 L1495.93 685.118 L1496.49 685.118 L1497.05 685.118 L1497.61 685.118 L1498.16 685.118 L1498.72 685.118 L1499.28 685.118 L1499.84 685.118 L1500.4 685.118 L1500.96 685.118 L1501.52 685.118 L1502.08 685.118 L1502.64 685.118 L1503.2 685.118 L1503.76 685.118 L1504.32 685.118 L1504.88 685.118 L1505.44 685.118 L1505.99 685.118 L1506.55 685.118 L1507.11 685.118 L1507.67 685.118 L1508.23 685.118 L1508.79 685.118 L1509.35 685.118 L1509.91 685.118 L1510.47 685.118 L1511.03 685.118 L1511.59 685.118 L1512.15 685.118 L1512.71 685.118 L1513.26 685.118 L1513.82 685.118 L1514.38 685.118 L1514.94 685.118 L1515.5 685.118 L1516.06 685.118 L1516.62 685.118 L1517.18 685.118 L1517.74 685.118 L1518.3 685.118 L1518.86 685.118 L1519.42 685.118 L1519.98 685.118 L1520.53 685.118 L1521.09 685.118 L1521.65 685.118 L1522.21 685.118 L1522.77 685.118 L1523.33 685.118 L1523.89 685.118 L1524.45 685.118 L1525.01 685.118 L1525.57 685.118 L1526.13 685.118 L1526.69 685.118 L1527.25 685.118 L1527.81 685.118 L1528.36 685.118 L1528.92 685.118 L1529.48 685.118 L1530.04 685.118 L1530.6 685.118 L1531.16 685.118 L1531.72 685.118 L1532.28 685.118 L1532.84 685.118 L1533.4 685.118 L1533.96 685.118 L1534.52 685.118 L1535.08 685.118 L1535.63 685.118 L1536.19 685.118 L1536.75 685.118 L1537.31 685.118 L1537.87 685.118 L1538.43 685.118 L1538.99 685.118 L1539.55 685.118 L1540.11 685.118 L1540.67 685.118 L1541.23 685.118 L1541.79 685.118 L1542.35 685.118 L1542.9 685.118 L1543.46 685.118 L1544.02 685.118 L1544.58 685.118 L1545.14 685.118 L1545.7 685.118 L1546.26 685.118 L1546.82 685.118 L1547.38 685.118 L1547.94 685.118 L1548.5 685.118 L1549.06 685.118 L1549.62 685.118 L1550.18 685.118 L1550.73 685.118 L1551.29 685.118 L1551.85 685.118 L1552.41 685.118 L1552.97 685.118 L1553.53 685.118 L1554.09 685.118 L1554.65 685.118 L1555.21 685.118 L1555.77 685.118 L1556.33 685.118 L1556.89 685.118 L1557.45 685.118 L1558 685.118 L1558.56 685.118 L1559.12 685.118 L1559.68 685.118 L1560.24 685.118 L1560.8 685.118 L1561.36 685.118 L1561.92 685.118 L1562.48 685.118 L1563.04 685.118 L1563.6 685.118 L1564.16 685.118 L1564.72 685.118 L1565.28 685.118 L1565.83 685.118 L1566.39 685.118 L1566.95 685.118 L1567.51 685.118 L1568.07 685.118 L1568.63 685.118 L1569.19 685.118 L1569.75 685.118 L1570.31 685.118 L1570.87 685.118 L1571.43 685.118 L1571.99 685.118 L1572.55 685.118 L1573.1 685.118 L1573.66 685.118 L1574.22 685.118 L1574.78 685.118 L1575.34 685.118 L1575.9 685.118 L1576.46 685.118 L1577.02 685.118 L1577.58 685.118 L1578.14 685.118 L1578.7 685.118 L1579.26 685.118 L1579.82 685.118 L1580.37 685.118 L1580.93 685.118 L1581.49 685.118 L1582.05 685.118 L1582.61 685.118 L1583.17 685.118 L1583.73 685.118 L1584.29 685.118 L1584.85 685.118 L1585.41 685.118 L1585.97 685.118 L1586.53 685.118 L1587.09 685.118 L1587.65 685.118 L1588.2 685.118 L1588.76 685.118 L1589.32 685.118 L1589.88 685.118 L1590.44 685.118 L1591 685.118 L1591.56 685.118 L1592.12 685.118 L1592.68 685.118 L1593.24 685.118 L1593.8 685.118 L1594.36 685.118 L1594.92 685.118 L1595.47 685.118 L1596.03 685.118 L1596.59 685.118 L1597.15 685.118 L1597.71 685.118 L1598.27 685.118 L1598.83 685.118 L1599.39 685.118 L1599.95 685.118 L1600.51 685.118 L1601.07 685.118 L1601.63 685.118 L1602.19 685.118 L1602.74 685.118 L1603.3 685.118 L1603.86 685.118 L1604.42 685.118 L1604.98 685.118 L1605.54 685.118 L1606.1 685.118 L1606.66 685.118 L1607.22 685.118 L1607.78 685.118 L1608.34 685.118 L1608.9 685.118 L1609.46 685.118 L1610.02 685.118 L1610.57 685.118 L1611.13 685.118 L1611.69 685.118 L1612.25 685.118 L1612.81 685.118 L1613.37 685.118 L1613.93 685.118 L1614.49 685.118 L1615.05 685.118 L1615.61 685.118 L1616.17 685.118 L1616.73 685.118 L1617.29 685.118 L1617.84 685.118 L1618.4 685.118 L1618.96 685.118 L1619.52 685.118 L1620.08 685.118 L1620.64 685.118 L1621.2 685.118 L1621.76 685.118 L1622.32 685.118 L1622.88 685.118 L1623.44 685.118 L1624 685.118 L1624.56 685.118 L1625.11 685.118 L1625.67 685.118 L1626.23 685.118 L1626.79 685.118 L1627.35 685.118 L1627.91 685.118 L1628.47 685.118 L1629.03 685.118 L1629.59 685.118 L1630.15 685.118 L1630.71 685.118 L1631.27 685.118 L1631.83 685.118 L1632.39 685.118 L1632.94 685.118 L1633.5 685.118 L1634.06 685.118 L1634.62 685.118 L1635.18 685.118 L1635.74 685.118 L1636.3 685.118 L1636.86 685.118 L1637.42 685.118 L1637.98 685.118 L1638.54 685.118 L1639.1 685.118 L1639.66 685.118 L1640.21 685.118 L1640.77 685.118 L1641.33 685.118 L1641.89 685.118 L1642.45 685.118 L1643.01 685.118 L1643.57 685.118 L1644.13 685.118 L1644.69 685.118 L1645.25 685.118 L1645.81 685.118 L1646.37 685.118 L1646.93 685.118 L1647.48 685.118 L1648.04 685.118 L1648.6 685.118 L1649.16 685.118 L1649.72 685.118 L1650.28 685.118 L1650.84 685.118 L1651.4 685.118 L1651.96 685.118 L1652.52 685.118 L1653.08 685.118 L1653.64 685.118 L1654.2 685.118 L1654.76 685.118 L1655.31 685.118 L1655.87 685.118 L1656.43 685.118 L1656.99 685.118 L1657.55 685.118 L1658.11 685.118 L1658.67 685.118 L1659.23 685.118 L1659.79 685.118 L1660.35 685.118 L1660.91 685.118 L1661.47 685.118 L1662.03 685.118 L1662.58 685.118 L1663.14 685.118 L1663.7 685.118 L1664.26 685.118 L1664.82 685.118 L1665.38 685.118 L1665.94 685.118 L1666.5 685.118 L1667.06 685.118 L1667.62 685.118 L1668.18 685.118 L1668.74 685.118 L1669.3 685.118 L1669.85 685.118 L1670.41 685.118 L1670.97 685.118 L1671.53 685.118 L1672.09 685.118 L1672.65 685.118 L1673.21 685.118 L1673.77 685.118 L1674.33 685.118 L1674.89 685.118 L1675.45 685.118 L1676.01 685.118 L1676.57 685.118 L1677.13 685.118 L1677.68 685.118 L1678.24 685.118 L1678.8 685.118 L1679.36 685.118 L1679.92 685.118 L1680.48 685.118 L1681.04 685.118 L1681.6 685.118 L1682.16 685.118 L1682.72 685.118 L1683.28 685.118 L1683.84 685.118 L1684.4 685.118 L1684.95 685.118 L1685.51 685.118 L1686.07 685.118 L1686.63 685.118 L1687.19 685.118 L1687.75 685.118 L1688.31 685.118 L1688.87 685.118 L1689.43 685.118 L1689.99 685.118 L1690.55 685.118 L1691.11 685.118 L1691.67 685.118 L1692.23 685.118 L1692.78 685.118 L1693.34 685.118 L1693.9 685.118 L1694.46 685.118 L1695.02 685.118 L1695.58 685.118 L1696.14 685.118 L1696.7 685.118 L1697.26 685.118 L1697.82 685.118 L1698.38 685.118 L1698.94 685.118 L1699.5 685.118 L1700.05 685.118 L1700.61 685.118 L1701.17 685.118 L1701.73 685.118 L1702.29 685.118 L1702.85 685.118 L1703.41 685.118 L1703.97 685.118 L1704.53 685.118 L1705.09 685.118 L1705.65 685.118 L1706.21 685.118 L1706.77 685.118 L1707.32 685.118 L1707.88 685.118 L1708.44 685.118 L1709 685.118 L1709.56 685.118 L1710.12 685.118 L1710.68 685.118 L1711.24 685.118 L1711.8 685.118 L1712.36 685.118 L1712.92 685.118 L1713.48 685.118 L1714.04 685.118 L1714.6 685.118 L1715.15 685.118 L1715.71 685.118 L1716.27 685.118 L1716.83 685.118 L1717.39 685.118 L1717.95 685.118 L1718.51 685.118 L1719.07 685.118 L1719.63 685.118 L1720.19 685.118 L1720.75 685.118 L1721.31 685.118 L1721.87 685.118 L1722.42 685.118 L1722.98 685.118 L1723.54 685.118 L1724.1 685.118 L1724.66 685.118 L1725.22 685.118 L1725.78 685.118 L1726.34 685.118 L1726.9 685.118 L1727.46 685.118 L1728.02 685.118 L1728.58 685.118 L1729.14 685.118 L1729.69 685.118 L1730.25 685.118 L1730.81 685.118 L1731.37 685.118 L1731.93 685.118 L1732.49 685.118 L1733.05 685.118 L1733.61 685.118 L1734.17 685.118 L1734.73 685.118 L1735.29 685.118 L1735.85 685.118 L1736.41 685.118 L1736.97 685.118 L1737.52 685.118 L1738.08 685.118 L1738.64 685.118 L1739.2 685.118 L1739.76 685.118 L1740.32 685.118 L1740.88 685.118 L1741.44 685.118 L1742 685.118 L1742.56 685.118 L1743.12 685.118 L1743.68 685.118 L1744.24 685.118 L1744.79 685.118 L1745.35 685.118 L1745.91 685.118 L1746.47 685.118 L1747.03 685.118 L1747.59 685.118 L1748.15 685.118 L1748.71 685.118 L1749.27 685.118 L1749.83 685.118 L1750.39 685.118 L1750.95 685.118 L1751.51 685.118 L1752.06 685.118 L1752.62 685.118 L1753.18 685.118 L1753.74 685.118 L1754.3 685.118 L1754.86 685.118 L1755.42 685.118 L1755.98 685.118 L1756.54 685.118 L1757.1 685.118 L1757.66 685.118 L1758.22 685.118 L1758.78 685.118 L1759.34 685.118 L1759.89 685.118 L1760.45 685.118 L1761.01 685.118 L1761.57 685.118 L1762.13 685.118 L1762.69 685.118 L1763.25 685.118 L1763.81 685.118 L1764.37 685.118 L1764.93 685.118 L1765.49 685.118 L1766.05 685.118 L1766.61 685.118 L1767.16 685.118 L1767.72 685.118 L1768.28 685.118 L1768.84 685.118 L1769.4 685.118 L1769.96 685.118 L1770.52 685.118 L1771.08 685.118 L1771.64 685.118 L1772.2 685.118 L1772.76 685.118 L1773.32 685.118 L1773.88 685.118 L1774.43 685.118 L1774.99 685.118 L1775.55 685.118 L1776.11 685.118 L1776.67 685.118 L1777.23 685.118 L1777.79 685.118 L1778.35 685.118 L1778.91 685.118 L1779.47 685.118 L1780.03 685.118 L1780.59 685.118 L1781.15 685.118 L1781.71 685.118 L1782.26 685.118 L1782.82 685.118 L1783.38 685.118 L1783.94 685.118 L1784.5 685.118 L1785.06 685.118 L1785.62 685.118 L1786.18 685.118 L1786.74 685.118 L1787.3 685.118 L1787.86 685.118 L1788.42 685.118 L1788.98 685.118 L1789.53 685.118 L1790.09 685.118 L1790.65 685.118 L1791.21 685.118 L1791.77 685.118 L1792.33 685.118 L1792.89 685.118 L1793.45 685.118 L1794.01 685.118 L1794.57 685.118 L1795.13 685.118 L1795.69 685.118 L1796.25 685.118 L1796.8 685.118 L1797.36 685.118 L1797.92 685.118 L1798.48 685.118 L1799.04 685.118 L1799.6 685.118 L1800.16 685.118 L1800.72 685.118 L1801.28 685.118 L1801.84 685.118 L1802.4 685.118 L1802.96 685.118 L1803.52 685.118 L1804.08 685.118 L1804.63 685.118 L1805.19 685.118 L1805.75 685.118 L1806.31 685.118 L1806.87 685.118 L1807.43 685.118 L1807.99 685.118 L1808.55 685.118 L1809.11 685.118 L1809.67 685.118 L1810.23 685.118 L1810.79 685.118 L1811.35 685.118 L1811.9 685.118 L1812.46 685.118 L1813.02 685.118 L1813.58 685.118 L1814.14 685.118 L1814.7 685.118 L1815.26 685.118 L1815.82 685.118 L1816.38 685.118 L1816.94 685.118 L1817.5 685.118 L1818.06 685.118 L1818.62 685.118 L1819.18 685.118 L1819.73 685.118 L1820.29 685.118 L1820.85 685.118 L1821.41 685.118 L1821.97 685.118 L1822.53 685.118 L1823.09 685.118 L1823.65 685.118 L1824.21 685.118 L1824.77 685.118 L1825.33 685.118 L1825.89 685.118 L1826.45 685.118 L1827 685.118 L1827.56 685.118 L1828.12 685.118 L1828.68 685.118 L1829.24 685.118 L1829.8 685.118 L1830.36 685.118 L1830.92 685.118 L1831.48 685.118 L1832.04 685.118 L1832.6 685.118 L1833.16 685.118 L1833.72 685.118 L1834.27 685.118 L1834.83 685.118 L1835.39 685.118 L1835.95 685.118 L1836.51 685.118 L1837.07 685.118 L1837.63 685.118 L1838.19 685.118 L1838.19 682.383 L1837.63 682.383 L1837.07 682.383 L1836.51 682.383 L1835.95 682.383 L1835.39 682.383 L1834.83 682.383 L1834.27 682.383 L1833.72 682.383 L1833.16 682.383 L1832.6 682.383 L1832.04 682.383 L1831.48 682.383 L1830.92 682.383 L1830.36 682.383 L1829.8 682.383 L1829.24 682.383 L1828.68 682.383 L1828.12 682.383 L1827.56 682.383 L1827 682.383 L1826.45 682.383 L1825.89 682.383 L1825.33 682.383 L1824.77 682.383 L1824.21 682.383 L1823.65 682.383 L1823.09 682.383 L1822.53 682.383 L1821.97 682.383 L1821.41 682.383 L1820.85 682.383 L1820.29 682.383 L1819.73 682.383 L1819.18 682.383 L1818.62 682.383 L1818.06 682.383 L1817.5 682.383 L1816.94 682.383 L1816.38 682.383 L1815.82 682.383 L1815.26 682.383 L1814.7 682.383 L1814.14 682.383 L1813.58 682.383 L1813.02 682.383 L1812.46 682.383 L1811.9 682.383 L1811.35 682.383 L1810.79 682.383 L1810.23 682.383 L1809.67 682.383 L1809.11 682.383 L1808.55 682.383 L1807.99 682.383 L1807.43 682.383 L1806.87 682.383 L1806.31 682.383 L1805.75 682.383 L1805.19 682.383 L1804.63 682.383 L1804.08 682.383 L1803.52 682.383 L1802.96 682.383 L1802.4 682.383 L1801.84 682.383 L1801.28 682.383 L1800.72 682.383 L1800.16 682.383 L1799.6 682.383 L1799.04 682.383 L1798.48 682.383 L1797.92 682.383 L1797.36 682.383 L1796.8 682.383 L1796.25 682.383 L1795.69 682.383 L1795.13 682.383 L1794.57 682.383 L1794.01 682.383 L1793.45 682.383 L1792.89 682.383 L1792.33 682.383 L1791.77 682.383 L1791.21 682.383 L1790.65 682.383 L1790.09 682.383 L1789.53 682.383 L1788.98 682.383 L1788.42 682.383 L1787.86 682.383 L1787.3 682.383 L1786.74 682.383 L1786.18 682.383 L1785.62 682.383 L1785.06 682.383 L1784.5 682.383 L1783.94 682.383 L1783.38 682.383 L1782.82 682.383 L1782.26 682.383 L1781.71 682.383 L1781.15 682.383 L1780.59 682.383 L1780.03 682.383 L1779.47 682.383 L1778.91 682.383 L1778.35 682.383 L1777.79 682.383 L1777.23 682.383 L1776.67 682.383 L1776.11 682.383 L1775.55 682.383 L1774.99 682.383 L1774.43 682.383 L1773.88 682.383 L1773.32 682.383 L1772.76 682.383 L1772.2 682.383 L1771.64 682.383 L1771.08 682.383 L1770.52 682.383 L1769.96 682.383 L1769.4 682.383 L1768.84 682.383 L1768.28 682.383 L1767.72 682.383 L1767.16 682.383 L1766.61 682.383 L1766.05 682.383 L1765.49 682.383 L1764.93 682.383 L1764.37 682.383 L1763.81 682.383 L1763.25 682.383 L1762.69 682.383 L1762.13 682.383 L1761.57 682.383 L1761.01 682.383 L1760.45 682.383 L1759.89 682.383 L1759.34 682.383 L1758.78 682.383 L1758.22 682.383 L1757.66 682.383 L1757.1 682.383 L1756.54 682.383 L1755.98 682.383 L1755.42 682.383 L1754.86 682.383 L1754.3 682.383 L1753.74 682.383 L1753.18 682.383 L1752.62 682.383 L1752.06 682.383 L1751.51 682.383 L1750.95 682.383 L1750.39 682.383 L1749.83 682.383 L1749.27 682.383 L1748.71 682.383 L1748.15 682.383 L1747.59 682.383 L1747.03 682.383 L1746.47 682.383 L1745.91 682.383 L1745.35 682.383 L1744.79 682.383 L1744.24 682.383 L1743.68 682.383 L1743.12 682.383 L1742.56 682.383 L1742 682.383 L1741.44 682.383 L1740.88 682.383 L1740.32 682.383 L1739.76 682.383 L1739.2 682.383 L1738.64 682.383 L1738.08 682.383 L1737.52 682.383 L1736.97 682.383 L1736.41 682.383 L1735.85 682.383 L1735.29 682.383 L1734.73 682.383 L1734.17 682.383 L1733.61 682.383 L1733.05 682.383 L1732.49 682.383 L1731.93 682.383 L1731.37 682.383 L1730.81 682.383 L1730.25 682.383 L1729.69 682.383 L1729.14 682.383 L1728.58 682.383 L1728.02 682.383 L1727.46 682.383 L1726.9 682.383 L1726.34 682.383 L1725.78 682.383 L1725.22 682.383 L1724.66 682.383 L1724.1 682.383 L1723.54 682.383 L1722.98 682.383 L1722.42 682.383 L1721.87 682.383 L1721.31 682.383 L1720.75 682.383 L1720.19 682.383 L1719.63 682.383 L1719.07 682.383 L1718.51 682.383 L1717.95 682.383 L1717.39 682.383 L1716.83 682.383 L1716.27 682.383 L1715.71 682.383 L1715.15 682.383 L1714.6 682.383 L1714.04 682.383 L1713.48 682.383 L1712.92 682.383 L1712.36 682.383 L1711.8 682.383 L1711.24 682.383 L1710.68 682.383 L1710.12 682.383 L1709.56 682.383 L1709 682.383 L1708.44 682.383 L1707.88 682.383 L1707.32 682.383 L1706.77 682.383 L1706.21 682.383 L1705.65 682.383 L1705.09 682.383 L1704.53 682.383 L1703.97 682.383 L1703.41 682.383 L1702.85 682.383 L1702.29 682.383 L1701.73 682.383 L1701.17 682.383 L1700.61 682.383 L1700.05 682.383 L1699.5 682.383 L1698.94 682.383 L1698.38 682.383 L1697.82 682.383 L1697.26 682.383 L1696.7 682.383 L1696.14 682.383 L1695.58 682.383 L1695.02 682.383 L1694.46 682.383 L1693.9 682.383 L1693.34 682.383 L1692.78 682.383 L1692.23 682.383 L1691.67 682.383 L1691.11 682.383 L1690.55 682.383 L1689.99 682.383 L1689.43 682.383 L1688.87 682.383 L1688.31 682.383 L1687.75 682.383 L1687.19 682.383 L1686.63 682.383 L1686.07 682.383 L1685.51 682.383 L1684.95 682.383 L1684.4 682.383 L1683.84 682.383 L1683.28 682.383 L1682.72 682.383 L1682.16 682.383 L1681.6 682.383 L1681.04 682.383 L1680.48 682.383 L1679.92 682.383 L1679.36 682.383 L1678.8 682.383 L1678.24 682.383 L1677.68 682.383 L1677.13 682.383 L1676.57 682.383 L1676.01 682.383 L1675.45 682.383 L1674.89 682.383 L1674.33 682.383 L1673.77 682.383 L1673.21 682.383 L1672.65 682.383 L1672.09 682.383 L1671.53 682.383 L1670.97 682.383 L1670.41 682.383 L1669.85 682.383 L1669.3 682.383 L1668.74 682.383 L1668.18 682.383 L1667.62 682.383 L1667.06 682.383 L1666.5 682.383 L1665.94 682.383 L1665.38 682.383 L1664.82 682.383 L1664.26 682.383 L1663.7 682.383 L1663.14 682.383 L1662.58 682.383 L1662.03 682.383 L1661.47 682.383 L1660.91 682.383 L1660.35 682.383 L1659.79 682.383 L1659.23 682.383 L1658.67 682.383 L1658.11 682.383 L1657.55 682.383 L1656.99 682.383 L1656.43 682.383 L1655.87 682.383 L1655.31 682.383 L1654.76 682.383 L1654.2 682.383 L1653.64 682.383 L1653.08 682.383 L1652.52 682.383 L1651.96 682.383 L1651.4 682.383 L1650.84 682.383 L1650.28 682.383 L1649.72 682.383 L1649.16 682.383 L1648.6 682.383 L1648.04 682.383 L1647.48 682.383 L1646.93 682.383 L1646.37 682.383 L1645.81 682.383 L1645.25 682.383 L1644.69 682.383 L1644.13 682.383 L1643.57 682.383 L1643.01 682.383 L1642.45 682.383 L1641.89 682.383 L1641.33 682.383 L1640.77 682.383 L1640.21 682.383 L1639.66 682.383 L1639.1 682.383 L1638.54 682.383 L1637.98 682.383 L1637.42 682.383 L1636.86 682.383 L1636.3 682.383 L1635.74 682.383 L1635.18 682.383 L1634.62 682.383 L1634.06 682.383 L1633.5 682.383 L1632.94 682.383 L1632.39 682.383 L1631.83 682.383 L1631.27 682.383 L1630.71 682.383 L1630.15 682.383 L1629.59 682.383 L1629.03 682.383 L1628.47 682.383 L1627.91 682.383 L1627.35 682.383 L1626.79 682.383 L1626.23 682.383 L1625.67 682.383 L1625.11 682.383 L1624.56 682.383 L1624 682.383 L1623.44 682.383 L1622.88 682.383 L1622.32 682.383 L1621.76 682.383 L1621.2 682.383 L1620.64 682.383 L1620.08 682.383 L1619.52 682.383 L1618.96 682.383 L1618.4 682.383 L1617.84 682.383 L1617.29 682.383 L1616.73 682.383 L1616.17 682.383 L1615.61 682.383 L1615.05 682.383 L1614.49 682.383 L1613.93 682.383 L1613.37 682.383 L1612.81 682.383 L1612.25 682.383 L1611.69 682.383 L1611.13 682.383 L1610.57 682.383 L1610.02 682.383 L1609.46 682.383 L1608.9 682.383 L1608.34 682.383 L1607.78 682.383 L1607.22 682.383 L1606.66 682.383 L1606.1 682.383 L1605.54 682.383 L1604.98 682.383 L1604.42 682.383 L1603.86 682.383 L1603.3 682.383 L1602.74 682.383 L1602.19 682.383 L1601.63 682.383 L1601.07 682.383 L1600.51 682.383 L1599.95 682.383 L1599.39 682.383 L1598.83 682.383 L1598.27 682.383 L1597.71 682.383 L1597.15 682.383 L1596.59 682.383 L1596.03 682.383 L1595.47 682.383 L1594.92 682.383 L1594.36 682.383 L1593.8 682.383 L1593.24 682.383 L1592.68 682.383 L1592.12 682.383 L1591.56 682.383 L1591 682.383 L1590.44 682.383 L1589.88 682.383 L1589.32 682.383 L1588.76 682.383 L1588.2 682.383 L1587.65 682.383 L1587.09 682.383 L1586.53 682.383 L1585.97 682.383 L1585.41 682.383 L1584.85 682.383 L1584.29 682.383 L1583.73 682.383 L1583.17 682.383 L1582.61 682.383 L1582.05 682.383 L1581.49 682.383 L1580.93 682.383 L1580.37 682.383 L1579.82 682.383 L1579.26 682.383 L1578.7 682.383 L1578.14 682.383 L1577.58 682.383 L1577.02 682.383 L1576.46 682.383 L1575.9 682.383 L1575.34 682.383 L1574.78 682.383 L1574.22 682.383 L1573.66 682.383 L1573.1 682.383 L1572.55 682.383 L1571.99 682.383 L1571.43 682.383 L1570.87 682.383 L1570.31 682.383 L1569.75 682.383 L1569.19 682.383 L1568.63 682.383 L1568.07 682.383 L1567.51 682.383 L1566.95 682.383 L1566.39 682.383 L1565.83 682.383 L1565.28 682.383 L1564.72 682.383 L1564.16 682.383 L1563.6 682.383 L1563.04 682.383 L1562.48 682.383 L1561.92 682.383 L1561.36 682.383 L1560.8 682.383 L1560.24 682.383 L1559.68 682.383 L1559.12 682.383 L1558.56 682.383 L1558 682.383 L1557.45 682.383 L1556.89 682.383 L1556.33 682.383 L1555.77 682.383 L1555.21 682.383 L1554.65 682.383 L1554.09 682.383 L1553.53 682.383 L1552.97 682.383 L1552.41 682.383 L1551.85 682.383 L1551.29 682.383 L1550.73 682.383 L1550.18 682.383 L1549.62 682.383 L1549.06 682.383 L1548.5 682.383 L1547.94 682.383 L1547.38 682.383 L1546.82 682.383 L1546.26 682.383 L1545.7 682.383 L1545.14 682.383 L1544.58 682.383 L1544.02 682.383 L1543.46 682.383 L1542.9 682.383 L1542.35 682.383 L1541.79 682.383 L1541.23 682.383 L1540.67 682.383 L1540.11 682.383 L1539.55 682.383 L1538.99 682.383 L1538.43 682.383 L1537.87 682.383 L1537.31 682.383 L1536.75 682.383 L1536.19 682.383 L1535.63 682.383 L1535.08 682.383 L1534.52 682.383 L1533.96 682.383 L1533.4 682.383 L1532.84 682.383 L1532.28 682.383 L1531.72 682.383 L1531.16 682.383 L1530.6 682.383 L1530.04 682.383 L1529.48 682.383 L1528.92 682.383 L1528.36 682.383 L1527.81 682.383 L1527.25 682.383 L1526.69 682.383 L1526.13 682.383 L1525.57 682.383 L1525.01 682.383 L1524.45 682.383 L1523.89 682.383 L1523.33 682.383 L1522.77 682.383 L1522.21 682.383 L1521.65 682.383 L1521.09 682.383 L1520.53 682.383 L1519.98 682.383 L1519.42 682.383 L1518.86 682.383 L1518.3 682.383 L1517.74 682.383 L1517.18 682.383 L1516.62 682.383 L1516.06 682.383 L1515.5 682.383 L1514.94 682.383 L1514.38 682.383 L1513.82 682.383 L1513.26 682.383 L1512.71 682.383 L1512.15 682.383 L1511.59 682.383 L1511.03 682.383 L1510.47 682.383 L1509.91 682.383 L1509.35 682.383 L1508.79 682.383 L1508.23 682.383 L1507.67 682.383 L1507.11 682.383 L1506.55 682.383 L1505.99 682.383 L1505.44 682.383 L1504.88 682.383 L1504.32 682.383 L1503.76 682.383 L1503.2 682.383 L1502.64 682.383 L1502.08 682.383 L1501.52 682.383 L1500.96 682.383 L1500.4 682.383 L1499.84 682.383 L1499.28 682.383 L1498.72 682.383 L1498.16 682.383 L1497.61 682.383 L1497.05 682.383 L1496.49 682.383 L1495.93 682.383 L1495.37 682.383 L1494.81 682.383 L1494.25 682.383 L1493.69 682.383 L1493.13 682.383 L1492.57 682.383 L1492.01 682.383 L1491.45 682.383 L1490.89 682.383 L1490.34 682.383 L1489.78 682.383 L1489.22 682.383 L1488.66 682.383 L1488.1 682.383 L1487.54 682.383 L1486.98 682.383 L1486.42 682.383 L1485.86 682.383 L1485.3 682.383 L1484.74 682.383 L1484.18 682.383 L1483.62 682.383 L1483.07 682.383 L1482.51 682.383 L1481.95 682.383 L1481.39 682.383 L1480.83 682.383 L1480.27 682.383 L1479.71 682.383 L1479.15 682.383 L1478.59 682.383 L1478.03 682.383 L1477.47 682.383 L1476.91 682.383 L1476.35 682.383 L1475.79 682.383 L1475.24 682.383 L1474.68 682.383 L1474.12 682.383 L1473.56 682.383 L1473 682.383 L1472.44 682.383 L1471.88 682.383 L1471.32 682.383 L1470.76 682.383 L1470.2 682.383 L1469.64 682.383 L1469.08 682.383 L1468.52 682.383 L1467.97 682.383 L1467.41 682.383 L1466.85 682.383 L1466.29 682.383 L1465.73 682.383 L1465.17 682.383 L1464.61 682.383 L1464.05 682.383 L1463.49 682.383 L1462.93 682.383 L1462.37 682.383 L1461.81 682.383 L1461.25 682.383 L1460.7 682.383 L1460.14 682.383 L1459.58 682.383 L1459.02 682.383 L1458.46 682.383 L1457.9 682.383 L1457.34 682.383 L1456.78 682.383 L1456.22 682.383 L1455.66 682.383 L1455.1 682.383 L1454.54 682.383 L1453.98 682.383 L1453.42 682.383 L1452.87 682.383 L1452.31 682.383 L1451.75 682.383 L1451.19 682.383 L1450.63 682.383 L1450.07 682.383 L1449.51 682.383 L1448.95 682.383 L1448.39 682.383 L1447.83 682.383 L1447.27 682.383 L1446.71 682.383 L1446.15 682.383 L1445.6 682.383 L1445.04 682.383 L1444.48 682.383 L1443.92 682.383 L1443.36 682.383 L1442.8 682.383 L1442.24 682.383 L1441.68 682.383 L1441.12 682.383 L1440.56 682.383 L1440 682.383 L1439.44 682.383 L1438.88 682.383 L1438.33 682.383 L1437.77 682.383 L1437.21 682.383 L1436.65 682.383 L1436.09 682.383 L1435.53 682.383 L1434.97 682.383 L1434.41 682.383 L1433.85 682.383 L1433.29 682.383 L1432.73 682.383 L1432.17 682.383 L1431.61 682.383 L1431.05 682.383 L1430.5 682.383 L1429.94 682.383 L1429.38 682.383 L1428.82 682.383 L1428.26 682.383 L1427.7 682.383 L1427.14 682.383 L1426.58 682.383 L1426.02 682.383 L1425.46 682.383 L1424.9 682.383 L1424.34 682.383 L1423.78 682.383 L1423.23 682.383 L1422.67 682.383 L1422.11 682.383 L1421.55 682.383 L1420.99 682.383 L1420.43 682.383 L1419.87 682.383 L1419.31 682.383 L1418.75 682.383 L1418.19 682.383 L1417.63 682.383 L1417.07 682.383 L1416.51 682.383 L1415.95 682.383 L1415.4 682.383 L1414.84 682.383 L1414.28 682.383 L1413.72 682.383 L1413.16 682.383 L1412.6 682.383 L1412.04 682.383 L1411.48 682.383 L1410.92 682.383 L1410.36 682.383 L1409.8 682.383 L1409.24 682.383 L1408.68 682.383 L1408.13 682.383 L1407.57 682.383 L1407.01 682.383 L1406.45 682.383 L1405.89 682.383 L1405.33 682.383 L1404.77 682.383 L1404.21 682.383 L1403.65 682.383 L1403.09 682.383 L1402.53 682.383 L1401.97 682.383 L1401.41 682.383 L1400.86 682.383 L1400.3 682.383 L1399.74 682.383 L1399.18 682.383 L1398.62 682.383 L1398.06 682.383 L1397.5 682.383 L1396.94 682.383 L1396.38 682.383 L1395.82 682.383 L1395.26 682.383 L1394.7 682.383 L1394.14 682.383 L1393.58 682.383 L1393.03 682.383 L1392.47 682.383 L1391.91 682.383 L1391.35 682.383 L1390.79 682.383 L1390.23 682.383 L1389.67 682.383 L1389.11 682.383 L1388.55 682.383 L1387.99 682.383 L1387.43 682.383 L1386.87 682.383 L1386.31 682.383 L1385.76 682.383 L1385.2 682.383 L1384.64 682.383 L1384.08 682.383 L1383.52 682.383 L1382.96 682.383 L1382.4 682.383 L1381.84 682.383 L1381.28 682.383 L1380.72 682.383 L1380.16 682.383 L1379.6 682.383 L1379.04 682.383 L1378.49 682.383 L1377.93 682.383 L1377.37 682.383 L1376.81 682.383 L1376.25 682.383 L1375.69 682.383 L1375.13 682.383 L1374.57 682.383 L1374.01 682.383 L1373.45 682.383 L1372.89 682.383 L1372.33 682.383 L1371.77 682.383 L1371.21 682.383 L1370.66 682.383 L1370.1 682.383 L1369.54 682.383 L1368.98 682.383 L1368.42 682.383 L1367.86 682.383 L1367.3 682.383 L1366.74 682.383 L1366.18 682.383 L1365.62 682.383 L1365.06 682.383 L1364.5 682.383 L1363.94 682.383 L1363.39 682.383 L1362.83 682.383 L1362.27 682.383 L1361.71 682.383 L1361.15 682.383 L1360.59 682.383 L1360.03 682.383 L1359.47 682.383 L1358.91 682.383 L1358.35 682.383 L1357.79 682.383 L1357.23 682.383 L1356.67 682.383 L1356.12 682.383 L1355.56 682.383 L1355 682.383 L1354.44 682.383 L1353.88 682.383 L1353.32 682.383 L1352.76 682.383 L1352.2 682.383 L1351.64 682.383 L1351.08 682.383 L1350.52 682.383 L1349.96 682.383 L1349.4 682.383 L1348.84 682.383 L1348.29 682.383 L1347.73 682.383 L1347.17 682.383 L1346.61 682.383 L1346.05 682.383 L1345.49 682.383 L1344.93 682.383 L1344.37 682.383 L1343.81 682.383 L1343.25 682.383 L1342.69 682.383 L1342.13 682.383 L1341.57 682.383 L1341.02 682.383 L1340.46 682.383 L1339.9 682.383 L1339.34 682.383 L1338.78 682.383 L1338.22 682.383 L1337.66 682.383 L1337.1 682.383 L1336.54 682.383 L1335.98 682.383 L1335.42 682.383 L1334.86 682.383 L1334.3 682.383 L1333.75 682.383 L1333.19 682.383 L1332.63 682.383 L1332.07 682.383 L1331.51 682.383 L1330.95 682.383 L1330.39 682.383 L1329.83 682.383 L1329.27 682.383 L1328.71 682.383 L1328.15 682.383 L1327.59 682.383 L1327.03 682.383 L1326.47 682.383 L1325.92 682.383 L1325.36 682.383 L1324.8 682.383 L1324.24 682.383 L1323.68 682.383 L1323.12 682.383 L1322.56 682.383 L1322 682.383 L1321.44 682.383 L1320.88 682.383 L1320.32 682.383 L1319.76 682.383 L1319.2 682.383 L1318.65 682.383 L1318.09 682.383 L1317.53 682.383 L1316.97 682.383 L1316.41 682.383 L1315.85 682.383 L1315.29 682.383 L1314.73 682.383 L1314.17 682.383 L1313.61 682.383 L1313.05 682.383 L1312.49 682.383 L1311.93 682.383 L1311.38 682.383 L1310.82 682.383 L1310.26 682.383 L1309.7 682.383 L1309.14 682.383 L1308.58 682.383 L1308.02 682.383 L1307.46 682.383 L1306.9 682.383 L1306.34 682.383 L1305.78 682.383 L1305.22 682.383 L1304.66 682.383 L1304.1 682.383 L1303.55 682.383 L1302.99 682.383 L1302.43 682.383 L1301.87 682.383 L1301.31 682.383 L1300.75 682.383 L1300.19 682.383 L1299.63 682.383 L1299.07 682.383 L1298.51 682.383 L1297.95 682.383 L1297.39 682.383 L1296.83 682.383 L1296.28 682.383 L1295.72 682.383 L1295.16 682.383 L1294.6 682.383 L1294.04 682.383 L1293.48 682.383 L1292.92 682.383 L1292.36 682.383 L1291.8 682.383 L1291.24 682.383 L1290.68 682.383 L1290.12 682.383 L1289.56 682.383 L1289 682.383 L1288.45 682.383 L1287.89 682.383 L1287.33 682.383 L1286.77 682.383 L1286.21 682.383 L1285.65 682.383 L1285.09 682.383 L1284.53 682.383 L1283.97 682.383 L1283.41 682.383 L1282.85 682.383 L1282.29 682.383 L1281.73 682.383 L1281.18 682.383 L1280.62 682.383 L1280.06 682.383 L1279.5 682.383 L1278.94 682.383 L1278.38 682.383 L1277.82 682.383 L1277.26 682.383 L1276.7 682.383 L1276.14 682.383 L1275.58 682.383 L1275.02 682.383 L1274.46 682.383 L1273.91 682.383 L1273.35 682.383 L1272.79 682.383 L1272.23 682.383 L1271.67 682.383 L1271.11 682.383 L1270.55 682.383 L1269.99 682.383 L1269.43 682.383 L1268.87 682.383 L1268.31 682.383 L1267.75 682.383 L1267.19 682.383 L1266.63 682.383 L1266.08 682.383 L1265.52 682.383 L1264.96 682.383 L1264.4 682.383 L1263.84 682.383 L1263.28 682.383 L1262.72 682.383 L1262.16 682.383 L1261.6 682.383 L1261.04 682.383 L1260.48 682.383 L1259.92 682.383 L1259.36 682.383 L1258.81 682.383 L1258.25 682.383 L1257.69 682.383 L1257.13 682.383 L1256.57 682.383 L1256.01 682.383 L1255.45 682.383 L1254.89 682.383 L1254.33 682.383 L1253.77 682.383 L1253.21 682.383 L1252.65 682.383 L1252.09 682.383 L1251.54 682.383 L1250.98 682.383 L1250.42 682.383 L1249.86 682.383 L1249.3 682.383 L1248.74 682.383 L1248.18 682.383 L1247.62 682.383 L1247.06 682.383 L1246.5 682.383 L1245.94 682.383 L1245.38 682.383 L1244.82 682.383 L1244.26 682.383 L1243.71 682.383 L1243.15 682.383 L1242.59 682.383 L1242.03 682.383 L1241.47 682.383 L1240.91 682.383 L1240.35 682.383 L1239.79 682.383 L1239.23 682.383 L1238.67 682.383 L1238.11 682.383 L1237.55 682.383 L1236.99 682.383 L1236.44 682.383 L1235.88 682.383 L1235.32 682.383 L1234.76 682.383 L1234.2 682.383 L1233.64 682.383 L1233.08 682.383 L1232.52 682.383 L1231.96 682.383 L1231.4 682.383 L1230.84 682.383 L1230.28 682.383 L1229.72 682.383 L1229.17 682.383 L1228.61 682.383 L1228.05 682.383 L1227.49 682.383 L1226.93 682.383 L1226.37 682.383 L1225.81 682.383 L1225.25 682.383 L1224.69 682.383 L1224.13 682.383 L1223.57 682.383 L1223.01 682.383 L1222.45 682.383 L1221.89 682.383 L1221.34 682.383 L1220.78 682.383 L1220.22 682.383 L1219.66 682.383 L1219.1 682.383 L1218.54 682.383 L1217.98 682.383 L1217.42 682.383 L1216.86 682.383 L1216.3 682.383 L1215.74 682.383 L1215.18 682.383 L1214.62 682.383 L1214.07 682.383 L1213.51 682.383 L1212.95 682.383 L1212.39 682.383 L1211.83 682.383 L1211.27 682.383 L1210.71 682.383 L1210.15 682.383 L1209.59 682.383 L1209.03 682.383 L1208.47 682.383 L1207.91 682.383 L1207.35 682.383 L1206.8 682.383 L1206.24 682.383 L1205.68 682.383 L1205.12 682.383 L1204.56 682.383 L1204 682.383 L1203.44 682.383 L1202.88 682.383 L1202.32 682.383 L1201.76 682.383 L1201.2 682.383 L1200.64 682.383 L1200.08 682.383 L1199.52 682.383 L1198.97 682.383 L1198.41 682.383 L1197.85 682.383 L1197.29 682.383 L1196.73 682.383 L1196.17 682.383 L1195.61 682.383 L1195.05 682.383 L1194.49 682.383 L1193.93 682.383 L1193.37 682.383 L1192.81 682.383 L1192.25 682.383 L1191.7 682.383 L1191.14 682.383 L1190.58 682.383 L1190.02 682.383 L1189.46 682.383 L1188.9 682.383 L1188.34 682.383 L1187.78 682.383 L1187.22 682.383 L1186.66 682.383 L1186.1 682.383 L1185.54 682.383 L1184.98 682.383 L1184.43 682.383 L1183.87 682.383 L1183.31 682.383 L1182.75 682.383 L1182.19 682.383 L1181.63 682.383 L1181.07 682.383 L1180.51 682.383 L1179.95 682.383 L1179.39 682.383 L1178.83 682.383 L1178.27 682.383 L1177.71 682.383 L1177.15 682.383 L1176.6 682.383 L1176.04 682.383 L1175.48 682.383 L1174.92 682.383 L1174.36 682.383 L1173.8 682.383 L1173.24 682.383 L1172.68 682.383 L1172.12 682.383 L1171.56 682.383 L1171 682.383 L1170.44 682.383 L1169.88 682.383 L1169.33 682.383 L1168.77 682.383 L1168.21 682.383 L1167.65 682.383 L1167.09 682.383 L1166.53 682.383 L1165.97 682.383 L1165.41 682.383 L1164.85 682.383 L1164.29 682.383 L1163.73 682.383 L1163.17 682.383 L1162.61 682.383 L1162.05 682.383 L1161.5 682.383 L1160.94 682.383 L1160.38 682.383 L1159.82 682.383 L1159.26 682.383 L1158.7 682.383 L1158.14 682.383 L1157.58 682.383 L1157.02 682.383 L1156.46 682.383 L1155.9 682.383 L1155.34 682.383 L1154.78 682.383 L1154.23 682.383 L1153.67 682.383 L1153.11 682.383 L1152.55 682.383 L1151.99 682.383 L1151.43 682.383 L1150.87 682.383 L1150.31 682.383 L1149.75 682.383 L1149.19 682.383 L1148.63 682.383 L1148.07 682.383 L1147.51 682.383 L1146.96 682.383 L1146.4 682.383 L1145.84 682.383 L1145.28 682.383 L1144.72 682.383 L1144.16 682.383 L1143.6 682.383 L1143.04 682.383 L1142.48 682.383 L1141.92 682.383 L1141.36 682.383 L1140.8 682.383 L1140.24 682.383 L1139.68 682.383 L1139.13 682.383 L1138.57 682.383 L1138.01 682.383 L1137.45 682.383 L1136.89 682.383 L1136.33 682.383 L1135.77 682.383 L1135.21 682.383 L1134.65 682.383 L1134.09 682.383 L1133.53 682.383 L1132.97 682.383 L1132.41 682.383 L1131.86 682.383 L1131.3 682.383 L1130.74 682.383 L1130.18 682.383 L1129.62 682.383 L1129.06 682.383 L1128.5 682.383 L1127.94 682.383 L1127.38 682.383 L1126.82 682.383 L1126.26 682.383 L1125.7 682.383 L1125.14 682.383 L1124.59 682.383 L1124.03 682.383 L1123.47 682.383 L1122.91 682.383 L1122.35 682.383 L1121.79 682.383 L1121.23 682.383 L1120.67 682.383 L1120.11 682.383 L1119.55 682.383 L1118.99 682.383 L1118.43 682.383 L1117.87 682.383 L1117.31 682.383 L1116.76 682.383 L1116.2 682.383 L1115.64 682.383 L1115.08 682.383 L1114.52 682.383 L1113.96 682.383 L1113.4 682.383 L1112.84 682.383 L1112.28 682.383 L1111.72 682.383 L1111.16 682.383 L1110.6 682.383 L1110.04 682.383 L1109.49 682.383 L1108.93 682.383 L1108.37 682.383 L1107.81 682.383 L1107.25 682.383 L1106.69 682.383 L1106.13 682.383 L1105.57 682.383 L1105.01 682.383 L1104.45 682.383 L1103.89 682.383 L1103.33 682.383 L1102.77 682.383 L1102.22 682.383 L1101.66 682.383 L1101.1 682.383 L1100.54 682.383 L1099.98 682.383 L1099.42 682.383 L1098.86 682.383 L1098.3 682.383 L1097.74 682.383 L1097.18 682.383 L1096.62 682.383 L1096.06 682.383 L1095.5 682.383 L1094.94 682.383 L1094.39 682.383 L1093.83 682.383 L1093.27 682.383 L1092.71 682.383 L1092.15 682.383 L1091.59 682.383 L1091.03 682.383 L1090.47 682.383 L1089.91 682.383 L1089.35 682.383 L1088.79 682.383 L1088.23 682.383 L1087.67 682.383 L1087.12 682.383 L1086.56 682.383 L1086 682.383 L1085.44 682.383 L1084.88 682.383 L1084.32 682.383 L1083.76 682.383 L1083.2 682.383 L1082.64 682.383 L1082.08 682.383 L1081.52 682.383 L1080.96 682.383 L1080.4 682.383 L1079.85 682.383 L1079.29 682.383 L1078.73 682.383 L1078.17 682.383 L1077.61 682.383 L1077.05 682.383 L1076.49 682.383 L1075.93 682.383 L1075.37 682.383 L1074.81 682.383 L1074.25 682.383 L1073.69 682.383 L1073.13 682.383 L1072.57 682.383 L1072.02 682.383 L1071.46 682.383 L1070.9 682.383 L1070.34 682.383 L1069.78 682.383 L1069.22 682.383 L1068.66 682.383 L1068.1 682.383 L1067.54 682.383 L1066.98 682.383 L1066.42 682.383 L1065.86 682.383 L1065.3 682.383 L1064.75 682.383 L1064.19 682.383 L1063.63 682.383 L1063.07 682.383 L1062.51 682.383 L1061.95 682.383 L1061.39 682.383 L1060.83 682.383 L1060.27 682.383 L1059.71 682.383 L1059.15 682.383 L1058.59 682.383 L1058.03 682.383 L1057.48 682.383 L1056.92 682.383 L1056.36 682.383 L1055.8 682.383 L1055.24 682.383 L1054.68 682.383 L1054.12 682.383 L1053.56 682.383 L1053 682.383 L1052.44 682.383 L1051.88 682.383 L1051.32 682.383 L1050.76 682.383 L1050.2 682.383 L1049.65 682.383 L1049.09 682.383 L1048.53 682.383 L1047.97 682.383 L1047.41 682.383 L1046.85 682.383 L1046.29 682.383 L1045.73 682.383 L1045.17 682.383 L1044.61 682.383 L1044.05 682.383 L1043.49 682.383 L1042.93 682.383 L1042.38 682.383 L1041.82 682.383 L1041.26 682.383 L1040.7 682.383 L1040.14 682.383 L1039.58 682.383 L1039.02 682.383 L1038.46 682.383 L1037.9 682.383 L1037.34 682.383 L1036.78 682.383 L1036.22 682.383 L1035.66 682.383 L1035.1 682.383 L1034.55 682.383 L1033.99 682.383 L1033.43 682.383 L1032.87 682.383 L1032.31 682.383 L1031.75 682.383 L1031.19 682.383 L1030.63 682.383 L1030.07 682.383 L1029.51 682.383 L1028.95 682.383 L1028.39 682.383 L1027.83 682.383 L1027.28 682.383 L1026.72 682.383 L1026.16 682.383 L1025.6 682.383 L1025.04 682.383 L1024.48 682.383 L1023.92 682.383 L1023.36 682.383 L1022.8 682.383 L1022.24 682.383 L1021.68 682.383 L1021.12 682.383 L1020.56 682.383 L1020.01 682.383 L1019.45 682.383 L1018.89 682.383 L1018.33 682.383 L1017.77 682.383 L1017.21 682.383 L1016.65 682.383 L1016.09 682.383 L1015.53 682.383 L1014.97 682.383 L1014.41 682.383 L1013.85 682.383 L1013.29 682.383 L1012.73 682.383 L1012.18 682.383 L1011.62 682.383 L1011.06 682.383 L1010.5 682.383 L1009.94 682.383 L1009.38 682.383 L1008.82 682.383 L1008.26 682.383 L1007.7 682.383 L1007.14 682.383 L1006.58 682.383 L1006.02 682.383 L1005.46 682.383 L1004.91 682.383 L1004.35 682.383 L1003.79 682.383 L1003.23 682.383 L1002.67 682.383 L1002.11 682.383 L1001.55 682.383 L1000.99 682.383 L1000.43 682.383 L999.872 682.383 L999.313 682.383 L998.754 682.383 L998.194 682.383 L997.635 682.383 L997.076 682.383 L996.517 682.383 L995.957 682.383 L995.398 682.383 L994.839 682.383 L994.28 682.383 L993.72 682.383 L993.161 682.383 L992.602 682.383 L992.043 682.383 L991.483 682.383 L990.924 682.383 L990.365 682.383 L989.806 682.383 L989.246 682.383 L988.687 682.383 L988.128 682.383 L987.569 682.383 L987.009 682.383 L986.45 682.383 L985.891 682.383 L985.332 682.383 L984.772 682.383 L984.213 682.383 L983.654 682.383 L983.095 682.383 L982.535 682.383 L981.976 682.383 L981.417 682.383 L980.858 682.383 L980.298 682.383 L979.739 682.383 L979.18 682.383 L978.621 682.383 L978.061 682.383 L977.502 682.383 L976.943 682.383 L976.384 682.383 L975.824 682.383 L975.265 682.383 L974.706 682.383 L974.147 682.383 L973.587 682.383 L973.028 682.383 L972.469 682.383 L971.91 682.383 L971.35 682.383 L970.791 682.383 L970.232 682.383 L969.673 682.383 L969.113 682.383 L968.554 682.383 L967.995 682.383 L967.436 682.383 L966.876 682.383 L966.317 682.383 L965.758 682.383 L965.199 682.383 L964.639 682.383 L964.08 682.383 L963.521 682.383 L962.962 682.383 L962.402 682.383 L961.843 682.383 L961.284 682.383 L960.725 682.383 L960.165 682.383 L959.606 682.383 L959.047 682.383 L958.488 682.383 L957.928 682.383 L957.369 682.383 L956.81 682.383 L956.251 682.383 L955.691 682.383 L955.132 682.383 L954.573 682.383 L954.014 682.383 L953.454 682.383 L952.895 682.383 L952.336 682.383 L951.777 682.383 L951.217 682.383 L950.658 682.383 L950.099 682.383 L949.54 682.383 L948.98 682.383 L948.421 682.383 L947.862 682.383 L947.303 682.383 L946.743 682.383 L946.184 682.383 L945.625 682.383 L945.066 682.383 L944.506 682.383 L943.947 682.383 L943.388 682.383 L942.829 682.383 L942.269 682.383 L941.71 682.383 L941.151 682.383 L940.592 682.383 L940.032 682.383 L939.473 682.383 L938.914 682.383 L938.355 682.383 L937.795 682.383 L937.236 682.383 L936.677 682.383 L936.118 682.383 L935.558 682.383 L934.999 682.383 L934.44 682.383 L933.881 682.383 L933.321 682.383 L932.762 682.383 L932.203 682.383 L931.644 682.383 L931.084 682.383 L930.525 682.383 L929.966 682.383 L929.406 682.383 L928.847 682.383 L928.288 682.383 L927.729 682.383 L927.169 682.383 L926.61 682.383 L926.051 682.383 L925.492 682.383 L924.932 682.383 L924.373 682.383 L923.814 682.383 L923.255 682.383 L922.695 682.383 L922.136 682.383 L921.577 682.383 L921.018 682.383 L920.458 682.383 L919.899 682.383 L919.34 682.383 L918.781 682.383 L918.221 682.383 L917.662 682.383 L917.103 682.383 L916.544 682.383 L915.984 682.383 L915.425 682.383 L914.866 682.383 L914.307 682.383 L913.747 682.383 L913.188 682.383 L912.629 682.383 L912.07 682.383 L911.51 682.383 L910.951 682.383 L910.392 682.383 L909.833 682.383 L909.273 682.383 L908.714 682.383 L908.155 682.383 L907.596 682.383 L907.036 682.383 L906.477 682.383 L905.918 682.383 L905.359 682.383 L904.799 682.383 L904.24 682.383 L903.681 682.383 L903.122 682.383 L902.562 682.383 L902.003 682.383 L901.444 682.383 L900.885 682.383 L900.325 682.383 L899.766 682.383 L899.207 682.383 L898.648 682.383 L898.088 682.383 L897.529 682.383 L896.97 682.383 L896.411 682.383 L895.851 682.383 L895.292 682.383 L894.733 682.383 L894.174 682.383 L893.614 682.383 L893.055 682.383 L892.496 682.383 L891.937 682.383 L891.377 682.383 L890.818 682.383 L890.259 682.383 L889.7 682.383 L889.14 682.383 L888.581 682.383 L888.022 682.383 L887.463 682.383 L886.903 682.383 L886.344 682.383 L885.785 682.383 L885.226 682.383 L884.666 682.383 L884.107 682.383 L883.548 682.383 L882.989 682.383 L882.429 682.383 L881.87 682.383 L881.311 682.383 L880.752 682.383 L880.192 682.383 L879.633 682.383 L879.074 682.383 L878.515 682.383 L877.955 682.383 L877.396 682.383 L876.837 682.383 L876.278 682.383 L875.718 682.383 L875.159 682.383 L874.6 682.383 L874.041 682.383 L873.481 682.383 L872.922 682.383 L872.363 682.383 L871.804 682.383 L871.244 682.383 L870.685 682.383 L870.126 682.383 L869.567 682.383 L869.007 682.383 L868.448 682.383 L867.889 682.383 L867.33 682.383 L866.77 682.383 L866.211 682.383 L865.652 682.383 L865.093 682.383 L864.533 682.383 L863.974 682.383 L863.415 682.383 L862.856 682.383 L862.296 682.383 L861.737 682.383 L861.178 682.383 L860.619 682.383 L860.059 682.383 L859.5 682.383 L858.941 682.383 L858.382 682.383 L857.822 682.383 L857.263 682.383 L856.704 682.383 L856.145 682.383 L855.585 682.383 L855.026 682.383 L854.467 682.383 L853.908 682.383 L853.348 682.383 L852.789 682.383 L852.23 682.383 L851.671 682.383 L851.111 682.383 L850.552 682.383 L849.993 682.383 L849.434 682.383 L848.874 682.383 L848.315 682.383 L847.756 682.383 L847.197 682.383 L846.637 682.383 L846.078 682.383 L845.519 682.383 L844.96 682.383 L844.4 682.383 L843.841 682.383 L843.282 682.383 L842.723 682.383 L842.163 682.383 L841.604 682.383 L841.045 682.383 L840.486 682.383 L839.926 682.383 L839.367 682.383 L838.808 682.383 L838.249 682.383 L837.689 682.383 L837.13 682.383 L836.571 682.383 L836.012 682.383 L835.452 682.383 L834.893 682.383 L834.334 682.383 L833.775 682.383 L833.215 682.383 L832.656 682.383 L832.097 682.383 L831.538 682.383 L830.978 682.383 L830.419 682.383 L829.86 682.383 L829.301 682.383 L828.741 682.383 L828.182 682.383 L827.623 682.383 L827.064 682.383 L826.504 682.383 L825.945 682.383 L825.386 682.383 L824.827 682.383 L824.267 682.383 L823.708 682.383 L823.149 682.383 L822.59 682.383 L822.03 682.383 L821.471 682.383 L820.912 682.383 L820.353 682.383 L819.793 682.383 L819.234 682.383 L818.675 682.383 L818.116 682.383 L817.556 682.383 L816.997 682.383 L816.438 682.383 L815.879 682.383 L815.319 682.383 L814.76 682.383 L814.201 682.383 L813.642 682.383 L813.082 682.383 L812.523 682.383 L811.964 682.383 L811.405 682.383 L810.845 682.383 L810.286 682.383 L809.727 682.383 L809.168 682.383 L808.608 682.383 L808.049 682.383 L807.49 682.383 L806.931 682.383 L806.371 682.383 L805.812 682.383 L805.253 682.383 L804.693 682.383 L804.134 682.383 L803.575 682.383 L803.016 682.383 L802.456 682.383 L801.897 682.383 L801.338 682.383 L800.779 682.383 L800.219 682.383 L799.66 682.383 L799.101 682.383 L798.542 682.383 L797.982 682.383 L797.423 682.383 L796.864 682.383 L796.305 682.383 L795.745 682.383 L795.186 682.383 L794.627 682.383 L794.068 682.383 L793.508 682.383 L792.949 682.383 L792.39 682.383 L791.831 682.383 L791.271 682.383 L790.712 682.383 L790.153 682.383 L789.594 682.383 L789.034 682.383 L788.475 682.383 L787.916 682.383 L787.357 682.383 L786.797 682.383 L786.238 682.383 L785.679 682.383 L785.12 682.383 L784.56 682.383 L784.001 682.383 L783.442 682.383 L782.883 682.383 L782.323 682.383 L781.764 682.383 L781.205 682.383 L780.646 682.383 L780.086 682.383 L779.527 682.383 L778.968 682.383 L778.409 682.383 L777.849 682.383 L777.29 682.383 L776.731 682.383 L776.172 682.383 L775.612 682.383 L775.053 682.383 L774.494 682.383 L773.935 682.383 L773.375 682.383 L772.816 682.383 L772.257 682.383 L771.698 682.383 L771.138 682.383 L770.579 682.383 L770.02 682.383 L769.461 682.383 L768.901 682.383 L768.342 682.383 L767.783 682.383 L767.224 682.383 L766.664 682.383 L766.105 682.383 L765.546 682.383 L764.987 682.383 L764.427 682.383 L763.868 682.383 L763.309 682.383 L762.75 682.383 L762.19 682.383 L761.631 682.383 L761.072 682.383 L760.513 682.383 L759.953 682.383 L759.394 682.383 L758.835 682.383 L758.276 682.383 L757.716 682.383 L757.157 682.383 L756.598 682.383 L756.039 682.383 L755.479 682.383 L754.92 682.383 L754.361 682.383 L753.802 682.383 L753.242 682.383 L752.683 682.383 L752.124 682.383 L751.565 682.383 L751.005 682.383 L750.446 682.383 L749.887 682.383 L749.328 682.383 L748.768 682.383 L748.209 682.383 L747.65 682.383 L747.091 682.383 L746.531 682.383 L745.972 682.383 L745.413 682.383 L744.854 682.383 L744.294 682.383 L743.735 682.383 L743.176 682.383 L742.617 682.383 L742.057 682.383 L741.498 682.383 L740.939 682.383 L740.38 682.383 L739.82 682.383 L739.261 682.383 L738.702 682.383 L738.143 682.383 L737.583 682.383 L737.024 682.383 L736.465 682.383 L735.906 682.383 L735.346 682.383 L734.787 682.383 L734.228 682.383 L733.669 682.383 L733.109 682.383 L732.55 682.383 L731.991 682.383 L731.432 682.383 L730.872 682.383 L730.313 682.383 L729.754 682.383 L729.195 682.383 L728.635 682.383 L728.076 682.383 L727.517 682.383 L726.958 682.383 L726.398 682.383 L725.839 682.383 L725.28 682.383 L724.721 682.383 L724.161 682.383 L723.602 682.383 L723.043 682.383 L722.484 682.383 L721.924 682.383 L721.365 682.383 L720.806 682.383 L720.247 682.383  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip433)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.769 720.806,683.769 721.365,683.769 721.924,683.769 722.484,683.769 723.043,683.769 723.602,683.769 724.161,683.769 724.721,683.769 725.28,683.769 725.839,683.769 726.398,683.769 726.958,683.769 727.517,683.769 728.076,683.769 728.635,683.769 729.195,683.769 729.754,683.769 730.313,683.769 730.872,683.769 731.432,683.769 731.991,683.769 732.55,683.769 733.109,683.769 733.669,683.769 734.228,683.769 734.787,683.769 735.346,683.769 735.906,683.769 736.465,683.769 737.024,683.769 737.583,683.769 738.143,683.769 738.702,683.769 739.261,683.769 739.82,683.769 740.38,683.769 740.939,683.769 741.498,683.769 742.057,683.769 742.617,683.769 743.176,683.769 743.735,683.769 744.294,683.769 744.854,683.769 745.413,683.769 745.972,683.769 746.531,683.769 747.091,683.769 747.65,683.769 748.209,683.769 748.768,683.769 749.328,683.769 749.887,683.769 750.446,683.769 751.005,683.769 751.565,683.769 752.124,683.769 752.683,683.769 753.242,683.769 753.802,683.769 754.361,683.769 754.92,683.769 755.479,683.769 756.039,683.769 756.598,683.769 757.157,683.769 757.716,683.769 758.276,683.769 758.835,683.769 759.394,683.769 759.953,683.769 760.513,683.769 761.072,683.769 761.631,683.769 762.19,683.769 762.75,683.769 763.309,683.769 763.868,683.769 764.427,683.769 764.987,683.769 765.546,683.769 766.105,683.769 766.664,683.769 767.224,683.769 767.783,683.769 768.342,683.769 768.901,683.769 769.461,683.769 770.02,683.769 770.579,683.769 771.138,683.769 771.698,683.769 772.257,683.769 772.816,683.769 773.375,683.769 773.935,683.769 774.494,683.769 775.053,683.769 775.612,683.769 776.172,683.769 776.731,683.769 777.29,683.769 777.849,683.769 778.409,683.769 778.968,683.769 779.527,683.769 780.086,683.769 780.646,683.769 781.205,683.769 781.764,683.769 782.323,683.769 782.883,683.769 783.442,683.769 784.001,683.769 784.56,683.769 785.12,683.769 785.679,683.769 786.238,683.769 786.797,683.769 787.357,683.769 787.916,683.769 788.475,683.769 789.034,683.769 789.594,683.769 790.153,683.769 790.712,683.769 791.271,683.769 791.831,683.769 792.39,683.769 792.949,683.769 793.508,683.769 794.068,683.769 794.627,683.769 795.186,683.769 795.745,683.769 796.305,683.769 796.864,683.769 797.423,683.769 797.982,683.769 798.542,683.769 799.101,683.769 799.66,683.769 800.219,683.769 800.779,683.769 801.338,683.769 801.897,683.769 802.456,683.769 803.016,683.769 803.575,683.769 804.134,683.769 804.693,683.769 805.253,683.769 805.812,683.769 806.371,683.769 806.931,683.769 807.49,683.769 808.049,683.769 808.608,683.769 809.168,683.769 809.727,683.769 810.286,683.769 810.845,683.769 811.405,683.769 811.964,683.769 812.523,683.769 813.082,683.769 813.642,683.769 814.201,683.769 814.76,683.769 815.319,683.769 815.879,683.769 816.438,683.769 816.997,683.769 817.556,683.769 818.116,683.769 818.675,683.769 819.234,683.769 819.793,683.769 820.353,683.769 820.912,683.769 821.471,683.769 822.03,683.769 822.59,683.769 823.149,683.769 823.708,683.769 824.267,683.769 824.827,683.769 825.386,683.769 825.945,683.769 826.504,683.769 827.064,683.769 827.623,683.769 828.182,683.769 828.741,683.769 829.301,683.769 829.86,683.769 830.419,683.769 830.978,683.769 831.538,683.769 832.097,683.769 832.656,683.769 833.215,683.769 833.775,683.769 834.334,683.769 834.893,683.769 835.452,683.769 836.012,683.769 836.571,683.769 837.13,683.769 837.689,683.769 838.249,683.769 838.808,683.769 839.367,683.769 839.926,683.769 840.486,683.769 841.045,683.769 841.604,683.769 842.163,683.769 842.723,683.769 843.282,683.769 843.841,683.769 844.4,683.769 844.96,683.769 845.519,683.769 846.078,683.769 846.637,683.769 847.197,683.769 847.756,683.769 848.315,683.769 848.874,683.769 849.434,683.769 849.993,683.769 850.552,683.769 851.111,683.769 851.671,683.769 852.23,683.769 852.789,683.769 853.348,683.769 853.908,683.769 854.467,683.769 855.026,683.769 855.585,683.769 856.145,683.769 856.704,683.769 857.263,683.769 857.822,683.769 858.382,683.769 858.941,683.769 859.5,683.769 860.059,683.769 860.619,683.769 861.178,683.769 861.737,683.769 862.296,683.769 862.856,683.769 863.415,683.769 863.974,683.769 864.533,683.769 865.093,683.769 865.652,683.769 866.211,683.769 866.77,683.769 867.33,683.769 867.889,683.769 868.448,683.769 869.007,683.769 869.567,683.769 870.126,683.769 870.685,683.769 871.244,683.769 871.804,683.769 872.363,683.769 872.922,683.769 873.481,683.769 874.041,683.769 874.6,683.769 875.159,683.769 875.718,683.769 876.278,683.769 876.837,683.769 877.396,683.769 877.955,683.769 878.515,683.769 879.074,683.769 879.633,683.769 880.192,683.769 880.752,683.769 881.311,683.769 881.87,683.769 882.429,683.769 882.989,683.769 883.548,683.769 884.107,683.769 884.666,683.769 885.226,683.769 885.785,683.769 886.344,683.769 886.903,683.769 887.463,683.769 888.022,683.769 888.581,683.769 889.14,683.769 889.7,683.769 890.259,683.769 890.818,683.769 891.377,683.769 891.937,683.769 892.496,683.769 893.055,683.769 893.614,683.769 894.174,683.769 894.733,683.769 895.292,683.769 895.851,683.769 896.411,683.769 896.97,683.769 897.529,683.769 898.088,683.769 898.648,683.769 899.207,683.769 899.766,683.769 900.325,683.769 900.885,683.769 901.444,683.769 902.003,683.769 902.562,683.769 903.122,683.769 903.681,683.769 904.24,683.769 904.799,683.769 905.359,683.769 905.918,683.769 906.477,683.769 907.036,683.769 907.596,683.769 908.155,683.769 908.714,683.769 909.273,683.769 909.833,683.769 910.392,683.769 910.951,683.769 911.51,683.769 912.07,683.769 912.629,683.769 913.188,683.769 913.747,683.769 914.307,683.769 914.866,683.769 915.425,683.769 915.984,683.769 916.544,683.769 917.103,683.769 917.662,683.769 918.221,683.769 918.781,683.769 919.34,683.769 919.899,683.769 920.458,683.769 921.018,683.769 921.577,683.769 922.136,683.769 922.695,683.769 923.255,683.769 923.814,683.769 924.373,683.769 924.932,683.769 925.492,683.769 926.051,683.769 926.61,683.769 927.169,683.769 927.729,683.769 928.288,683.769 928.847,683.769 929.406,683.769 929.966,683.769 930.525,683.769 931.084,683.769 931.644,683.769 932.203,683.769 932.762,683.769 933.321,683.769 933.881,683.769 934.44,683.769 934.999,683.769 935.558,683.769 936.118,683.769 936.677,683.769 937.236,683.769 937.795,683.769 938.355,683.769 938.914,683.769 939.473,683.769 940.032,683.769 940.592,683.769 941.151,683.769 941.71,683.769 942.269,683.769 942.829,683.769 943.388,683.769 943.947,683.769 944.506,683.769 945.066,683.769 945.625,683.769 946.184,683.769 946.743,683.769 947.303,683.769 947.862,683.769 948.421,683.769 948.98,683.769 949.54,683.769 950.099,683.769 950.658,683.769 951.217,683.769 951.777,683.769 952.336,683.769 952.895,683.769 953.454,683.769 954.014,683.769 954.573,683.769 955.132,683.769 955.691,683.769 956.251,683.769 956.81,683.769 957.369,683.769 957.928,683.769 958.488,683.769 959.047,683.769 959.606,683.769 960.165,683.769 960.725,683.769 961.284,683.769 961.843,683.769 962.402,683.769 962.962,683.769 963.521,683.769 964.08,683.769 964.639,683.769 965.199,683.769 965.758,683.769 966.317,683.769 966.876,683.769 967.436,683.769 967.995,683.769 968.554,683.769 969.113,683.769 969.673,683.769 970.232,683.769 970.791,683.769 971.35,683.769 971.91,683.769 972.469,683.769 973.028,683.769 973.587,683.769 974.147,683.769 974.706,683.769 975.265,683.769 975.824,683.769 976.384,683.769 976.943,683.769 977.502,683.769 978.061,683.769 978.621,683.769 979.18,683.769 979.739,683.769 980.298,683.769 980.858,683.769 981.417,683.769 981.976,683.769 982.535,683.769 983.095,683.769 983.654,683.769 984.213,683.769 984.772,683.769 985.332,683.769 985.891,683.769 986.45,683.769 987.009,683.769 987.569,683.769 988.128,683.769 988.687,683.769 989.246,683.769 989.806,683.769 990.365,683.769 990.924,683.769 991.483,683.769 992.043,683.769 992.602,683.769 993.161,683.769 993.72,683.769 994.28,683.769 994.839,683.769 995.398,683.769 995.957,683.769 996.517,683.769 997.076,683.769 997.635,683.769 998.194,683.769 998.754,683.769 999.313,683.769 999.872,683.769 1000.43,683.769 1000.99,683.769 1001.55,683.769 1002.11,683.769 1002.67,683.769 1003.23,683.769 1003.79,683.769 1004.35,683.769 1004.91,683.769 1005.46,683.769 1006.02,683.769 1006.58,683.769 1007.14,683.769 1007.7,683.769 1008.26,683.769 1008.82,683.769 1009.38,683.769 1009.94,683.769 1010.5,683.769 1011.06,683.769 1011.62,683.769 1012.18,683.769 1012.73,683.769 1013.29,683.769 1013.85,683.769 1014.41,683.769 1014.97,683.769 1015.53,683.769 1016.09,683.769 1016.65,683.769 1017.21,683.769 1017.77,683.769 1018.33,683.769 1018.89,683.769 1019.45,683.769 1020.01,683.769 1020.56,683.769 1021.12,683.769 1021.68,683.769 1022.24,683.769 1022.8,683.769 1023.36,683.769 1023.92,683.769 1024.48,683.769 1025.04,683.769 1025.6,683.769 1026.16,683.769 1026.72,683.769 1027.28,683.769 1027.83,683.769 1028.39,683.769 1028.95,683.769 1029.51,683.769 1030.07,683.769 1030.63,683.769 1031.19,683.769 1031.75,683.769 1032.31,683.769 1032.87,683.769 1033.43,683.769 1033.99,683.769 1034.55,683.769 1035.1,683.769 1035.66,683.769 1036.22,683.769 1036.78,683.769 1037.34,683.769 1037.9,683.769 1038.46,683.769 1039.02,683.769 1039.58,683.769 1040.14,683.769 1040.7,683.769 1041.26,683.769 1041.82,683.769 1042.38,683.769 1042.93,683.769 1043.49,683.769 1044.05,683.769 1044.61,683.769 1045.17,683.769 1045.73,683.769 1046.29,683.769 1046.85,683.769 1047.41,683.769 1047.97,683.769 1048.53,683.769 1049.09,683.769 1049.65,683.769 1050.2,683.769 1050.76,683.769 1051.32,683.769 1051.88,683.769 1052.44,683.769 1053,683.769 1053.56,683.769 1054.12,683.769 1054.68,683.769 1055.24,683.769 1055.8,683.769 1056.36,683.769 1056.92,683.769 1057.48,683.769 1058.03,683.769 1058.59,683.769 1059.15,683.769 1059.71,683.769 1060.27,683.769 1060.83,683.769 1061.39,683.769 1061.95,683.769 1062.51,683.769 1063.07,683.769 1063.63,683.769 1064.19,683.769 1064.75,683.769 1065.3,683.769 1065.86,683.769 1066.42,683.769 1066.98,683.769 1067.54,683.769 1068.1,683.769 1068.66,683.769 1069.22,683.769 1069.78,683.769 1070.34,683.769 1070.9,683.769 1071.46,683.769 1072.02,683.769 1072.57,683.769 1073.13,683.769 1073.69,683.769 1074.25,683.769 1074.81,683.769 1075.37,683.769 1075.93,683.769 1076.49,683.769 1077.05,683.769 1077.61,683.769 1078.17,683.769 1078.73,683.769 1079.29,683.769 1079.85,683.769 1080.4,683.769 1080.96,683.769 1081.52,683.769 1082.08,683.769 1082.64,683.769 1083.2,683.769 1083.76,683.769 1084.32,683.769 1084.88,683.769 1085.44,683.769 1086,683.769 1086.56,683.769 1087.12,683.769 1087.67,683.769 1088.23,683.769 1088.79,683.769 1089.35,683.769 1089.91,683.769 1090.47,683.769 1091.03,683.769 1091.59,683.769 1092.15,683.769 1092.71,683.769 1093.27,683.769 1093.83,683.769 1094.39,683.769 1094.94,683.769 1095.5,683.769 1096.06,683.769 1096.62,683.769 1097.18,683.769 1097.74,683.769 1098.3,683.769 1098.86,683.769 1099.42,683.769 1099.98,683.769 1100.54,683.769 1101.1,683.769 1101.66,683.769 1102.22,683.769 1102.77,683.769 1103.33,683.769 1103.89,683.769 1104.45,683.769 1105.01,683.769 1105.57,683.769 1106.13,683.769 1106.69,683.769 1107.25,683.769 1107.81,683.769 1108.37,683.769 1108.93,683.769 1109.49,683.769 1110.04,683.769 1110.6,683.769 1111.16,683.769 1111.72,683.769 1112.28,683.769 1112.84,683.769 1113.4,683.769 1113.96,683.769 1114.52,683.769 1115.08,683.769 1115.64,683.769 1116.2,683.769 1116.76,683.769 1117.31,683.769 1117.87,683.769 1118.43,683.769 1118.99,683.769 1119.55,683.769 1120.11,683.769 1120.67,683.769 1121.23,683.769 1121.79,683.769 1122.35,683.769 1122.91,683.769 1123.47,683.769 1124.03,683.769 1124.59,683.769 1125.14,683.769 1125.7,683.769 1126.26,683.769 1126.82,683.769 1127.38,683.769 1127.94,683.769 1128.5,683.769 1129.06,683.769 1129.62,683.769 1130.18,683.769 1130.74,683.769 1131.3,683.769 1131.86,683.769 1132.41,683.769 1132.97,683.769 1133.53,683.769 1134.09,683.769 1134.65,683.769 1135.21,683.769 1135.77,683.769 1136.33,683.769 1136.89,683.769 1137.45,683.769 1138.01,683.769 1138.57,683.769 1139.13,683.769 1139.68,683.769 1140.24,683.769 1140.8,683.769 1141.36,683.769 1141.92,683.769 1142.48,683.769 1143.04,683.769 1143.6,683.769 1144.16,683.769 1144.72,683.769 1145.28,683.769 1145.84,683.769 1146.4,683.769 1146.96,683.769 1147.51,683.769 1148.07,683.769 1148.63,683.769 1149.19,683.769 1149.75,683.769 1150.31,683.769 1150.87,683.769 1151.43,683.769 1151.99,683.769 1152.55,683.769 1153.11,683.769 1153.67,683.769 1154.23,683.769 1154.78,683.769 1155.34,683.769 1155.9,683.769 1156.46,683.769 1157.02,683.769 1157.58,683.769 1158.14,683.769 1158.7,683.769 1159.26,683.769 1159.82,683.769 1160.38,683.769 1160.94,683.769 1161.5,683.769 1162.05,683.769 1162.61,683.769 1163.17,683.769 1163.73,683.769 1164.29,683.769 1164.85,683.769 1165.41,683.769 1165.97,683.769 1166.53,683.769 1167.09,683.769 1167.65,683.769 1168.21,683.769 1168.77,683.769 1169.33,683.769 1169.88,683.769 1170.44,683.769 1171,683.769 1171.56,683.769 1172.12,683.769 1172.68,683.769 1173.24,683.769 1173.8,683.769 1174.36,683.769 1174.92,683.769 1175.48,683.769 1176.04,683.769 1176.6,683.769 1177.15,683.769 1177.71,683.769 1178.27,683.769 1178.83,683.769 1179.39,683.769 1179.95,683.769 1180.51,683.769 1181.07,683.769 1181.63,683.769 1182.19,683.769 1182.75,683.769 1183.31,683.769 1183.87,683.769 1184.43,683.769 1184.98,683.769 1185.54,683.769 1186.1,683.769 1186.66,683.769 1187.22,683.769 1187.78,683.769 1188.34,683.769 1188.9,683.769 1189.46,683.769 1190.02,683.769 1190.58,683.769 1191.14,683.769 1191.7,683.769 1192.25,683.769 1192.81,683.769 1193.37,683.769 1193.93,683.769 1194.49,683.769 1195.05,683.769 1195.61,683.769 1196.17,683.769 1196.73,683.769 1197.29,683.769 1197.85,683.769 1198.41,683.769 1198.97,683.769 1199.52,683.769 1200.08,683.769 1200.64,683.769 1201.2,683.769 1201.76,683.769 1202.32,683.769 1202.88,683.769 1203.44,683.769 1204,683.769 1204.56,683.769 1205.12,683.769 1205.68,683.769 1206.24,683.769 1206.8,683.769 1207.35,683.769 1207.91,683.769 1208.47,683.769 1209.03,683.769 1209.59,683.769 1210.15,683.769 1210.71,683.769 1211.27,683.769 1211.83,683.769 1212.39,683.769 1212.95,683.769 1213.51,683.769 1214.07,683.769 1214.62,683.769 1215.18,683.769 1215.74,683.769 1216.3,683.769 1216.86,683.769 1217.42,683.769 1217.98,683.769 1218.54,683.769 1219.1,683.769 1219.66,683.769 1220.22,683.769 1220.78,683.769 1221.34,683.769 1221.89,683.769 1222.45,683.769 1223.01,683.769 1223.57,683.769 1224.13,683.769 1224.69,683.769 1225.25,683.769 1225.81,683.769 1226.37,683.769 1226.93,683.769 1227.49,683.769 1228.05,683.769 1228.61,683.769 1229.17,683.769 1229.72,683.769 1230.28,683.769 1230.84,683.769 1231.4,683.769 1231.96,683.769 1232.52,683.769 1233.08,683.769 1233.64,683.769 1234.2,683.769 1234.76,683.769 1235.32,683.769 1235.88,683.769 1236.44,683.769 1236.99,683.769 1237.55,683.769 1238.11,683.769 1238.67,683.769 1239.23,683.769 1239.79,683.769 1240.35,683.769 1240.91,683.769 1241.47,683.769 1242.03,683.769 1242.59,683.769 1243.15,683.769 1243.71,683.769 1244.26,683.769 1244.82,683.769 1245.38,683.769 1245.94,683.769 1246.5,683.769 1247.06,683.769 1247.62,683.769 1248.18,683.769 1248.74,683.769 1249.3,683.769 1249.86,683.769 1250.42,683.769 1250.98,683.769 1251.54,683.769 1252.09,683.769 1252.65,683.769 1253.21,683.769 1253.77,683.769 1254.33,683.769 1254.89,683.769 1255.45,683.769 1256.01,683.769 1256.57,683.769 1257.13,683.769 1257.69,683.769 1258.25,683.769 1258.81,683.769 1259.36,683.769 1259.92,683.769 1260.48,683.769 1261.04,683.769 1261.6,683.769 1262.16,683.769 1262.72,683.769 1263.28,683.769 1263.84,683.769 1264.4,683.769 1264.96,683.769 1265.52,683.769 1266.08,683.769 1266.63,683.769 1267.19,683.769 1267.75,683.769 1268.31,683.769 1268.87,683.769 1269.43,683.769 1269.99,683.769 1270.55,683.769 1271.11,683.769 1271.67,683.769 1272.23,683.769 1272.79,683.769 1273.35,683.769 1273.91,683.769 1274.46,683.769 1275.02,683.769 1275.58,683.769 1276.14,683.769 1276.7,683.769 1277.26,683.769 1277.82,683.769 1278.38,683.769 1278.94,683.769 1279.5,683.769 1280.06,683.769 1280.62,683.769 1281.18,683.769 1281.73,683.769 1282.29,683.769 1282.85,683.769 1283.41,683.769 1283.97,683.769 1284.53,683.769 1285.09,683.769 1285.65,683.769 1286.21,683.769 1286.77,683.769 1287.33,683.769 1287.89,683.769 1288.45,683.769 1289,683.769 1289.56,683.769 1290.12,683.769 1290.68,683.769 1291.24,683.769 1291.8,683.769 1292.36,683.769 1292.92,683.769 1293.48,683.769 1294.04,683.769 1294.6,683.769 1295.16,683.769 1295.72,683.769 1296.28,683.769 1296.83,683.769 1297.39,683.769 1297.95,683.769 1298.51,683.769 1299.07,683.769 1299.63,683.769 1300.19,683.769 1300.75,683.769 1301.31,683.769 1301.87,683.769 1302.43,683.769 1302.99,683.769 1303.55,683.769 1304.1,683.769 1304.66,683.769 1305.22,683.769 1305.78,683.769 1306.34,683.769 1306.9,683.769 1307.46,683.769 1308.02,683.769 1308.58,683.769 1309.14,683.769 1309.7,683.769 1310.26,683.769 1310.82,683.769 1311.38,683.769 1311.93,683.769 1312.49,683.769 1313.05,683.769 1313.61,683.769 1314.17,683.769 1314.73,683.769 1315.29,683.769 1315.85,683.769 1316.41,683.769 1316.97,683.769 1317.53,683.769 1318.09,683.769 1318.65,683.769 1319.2,683.769 1319.76,683.769 1320.32,683.769 1320.88,683.769 1321.44,683.769 1322,683.769 1322.56,683.769 1323.12,683.769 1323.68,683.769 1324.24,683.769 1324.8,683.769 1325.36,683.769 1325.92,683.769 1326.47,683.769 1327.03,683.769 1327.59,683.769 1328.15,683.769 1328.71,683.769 1329.27,683.769 1329.83,683.769 1330.39,683.769 1330.95,683.769 1331.51,683.769 1332.07,683.769 1332.63,683.769 1333.19,683.769 1333.75,683.769 1334.3,683.769 1334.86,683.769 1335.42,683.769 1335.98,683.769 1336.54,683.769 1337.1,683.769 1337.66,683.769 1338.22,683.769 1338.78,683.769 1339.34,683.769 1339.9,683.769 1340.46,683.769 1341.02,683.769 1341.57,683.769 1342.13,683.769 1342.69,683.769 1343.25,683.769 1343.81,683.769 1344.37,683.769 1344.93,683.769 1345.49,683.769 1346.05,683.769 1346.61,683.769 1347.17,683.769 1347.73,683.769 1348.29,683.769 1348.84,683.769 1349.4,683.769 1349.96,683.769 1350.52,683.769 1351.08,683.769 1351.64,683.769 1352.2,683.769 1352.76,683.769 1353.32,683.769 1353.88,683.769 1354.44,683.769 1355,683.769 1355.56,683.769 1356.12,683.769 1356.67,683.769 1357.23,683.769 1357.79,683.769 1358.35,683.769 1358.91,683.769 1359.47,683.769 1360.03,683.769 1360.59,683.769 1361.15,683.769 1361.71,683.769 1362.27,683.769 1362.83,683.769 1363.39,683.769 1363.94,683.769 1364.5,683.769 1365.06,683.769 1365.62,683.769 1366.18,683.769 1366.74,683.769 1367.3,683.769 1367.86,683.769 1368.42,683.769 1368.98,683.769 1369.54,683.769 1370.1,683.769 1370.66,683.769 1371.21,683.769 1371.77,683.769 1372.33,683.769 1372.89,683.769 1373.45,683.769 1374.01,683.769 1374.57,683.769 1375.13,683.769 1375.69,683.769 1376.25,683.769 1376.81,683.769 1377.37,683.769 1377.93,683.769 1378.49,683.769 1379.04,683.769 1379.6,683.769 1380.16,683.769 1380.72,683.769 1381.28,683.769 1381.84,683.769 1382.4,683.769 1382.96,683.769 1383.52,683.769 1384.08,683.769 1384.64,683.769 1385.2,683.769 1385.76,683.769 1386.31,683.769 1386.87,683.769 1387.43,683.769 1387.99,683.769 1388.55,683.769 1389.11,683.769 1389.67,683.769 1390.23,683.769 1390.79,683.769 1391.35,683.769 1391.91,683.769 1392.47,683.769 1393.03,683.769 1393.58,683.769 1394.14,683.769 1394.7,683.769 1395.26,683.769 1395.82,683.769 1396.38,683.769 1396.94,683.769 1397.5,683.769 1398.06,683.769 1398.62,683.769 1399.18,683.769 1399.74,683.769 1400.3,683.769 1400.86,683.769 1401.41,683.769 1401.97,683.769 1402.53,683.769 1403.09,683.769 1403.65,683.769 1404.21,683.769 1404.77,683.769 1405.33,683.769 1405.89,683.769 1406.45,683.769 1407.01,683.769 1407.57,683.769 1408.13,683.769 1408.68,683.769 1409.24,683.769 1409.8,683.769 1410.36,683.769 1410.92,683.769 1411.48,683.769 1412.04,683.769 1412.6,683.769 1413.16,683.769 1413.72,683.769 1414.28,683.769 1414.84,683.769 1415.4,683.769 1415.95,683.769 1416.51,683.769 1417.07,683.769 1417.63,683.769 1418.19,683.769 1418.75,683.769 1419.31,683.769 1419.87,683.769 1420.43,683.769 1420.99,683.769 1421.55,683.769 1422.11,683.769 1422.67,683.769 1423.23,683.769 1423.78,683.769 1424.34,683.769 1424.9,683.769 1425.46,683.769 1426.02,683.769 1426.58,683.769 1427.14,683.769 1427.7,683.769 1428.26,683.769 1428.82,683.769 1429.38,683.769 1429.94,683.769 1430.5,683.769 1431.05,683.769 1431.61,683.769 1432.17,683.769 1432.73,683.769 1433.29,683.769 1433.85,683.769 1434.41,683.769 1434.97,683.769 1435.53,683.769 1436.09,683.769 1436.65,683.769 1437.21,683.769 1437.77,683.769 1438.33,683.769 1438.88,683.769 1439.44,683.769 1440,683.769 1440.56,683.769 1441.12,683.769 1441.68,683.769 1442.24,683.769 1442.8,683.769 1443.36,683.769 1443.92,683.769 1444.48,683.769 1445.04,683.769 1445.6,683.769 1446.15,683.769 1446.71,683.769 1447.27,683.769 1447.83,683.769 1448.39,683.769 1448.95,683.769 1449.51,683.769 1450.07,683.769 1450.63,683.769 1451.19,683.769 1451.75,683.769 1452.31,683.769 1452.87,683.769 1453.42,683.769 1453.98,683.769 1454.54,683.769 1455.1,683.769 1455.66,683.769 1456.22,683.769 1456.78,683.769 1457.34,683.769 1457.9,683.769 1458.46,683.769 1459.02,683.769 1459.58,683.769 1460.14,683.769 1460.7,683.769 1461.25,683.769 1461.81,683.769 1462.37,683.769 1462.93,683.769 1463.49,683.769 1464.05,683.769 1464.61,683.769 1465.17,683.769 1465.73,683.769 1466.29,683.769 1466.85,683.769 1467.41,683.769 1467.97,683.769 1468.52,683.769 1469.08,683.769 1469.64,683.769 1470.2,683.769 1470.76,683.769 1471.32,683.769 1471.88,683.769 1472.44,683.769 1473,683.769 1473.56,683.769 1474.12,683.769 1474.68,683.769 1475.24,683.769 1475.79,683.769 1476.35,683.769 1476.91,683.769 1477.47,683.769 1478.03,683.769 1478.59,683.769 1479.15,683.769 1479.71,683.769 1480.27,683.769 1480.83,683.769 1481.39,683.769 1481.95,683.769 1482.51,683.769 1483.07,683.769 1483.62,683.769 1484.18,683.769 1484.74,683.769 1485.3,683.769 1485.86,683.769 1486.42,683.769 1486.98,683.769 1487.54,683.769 1488.1,683.769 1488.66,683.769 1489.22,683.769 1489.78,683.769 1490.34,683.769 1490.89,683.769 1491.45,683.769 1492.01,683.769 1492.57,683.769 1493.13,683.769 1493.69,683.769 1494.25,683.769 1494.81,683.769 1495.37,683.769 1495.93,683.769 1496.49,683.769 1497.05,683.769 1497.61,683.769 1498.16,683.769 1498.72,683.769 1499.28,683.769 1499.84,683.769 1500.4,683.769 1500.96,683.769 1501.52,683.769 1502.08,683.769 1502.64,683.769 1503.2,683.769 1503.76,683.769 1504.32,683.769 1504.88,683.769 1505.44,683.769 1505.99,683.769 1506.55,683.769 1507.11,683.769 1507.67,683.769 1508.23,683.769 1508.79,683.769 1509.35,683.769 1509.91,683.769 1510.47,683.769 1511.03,683.769 1511.59,683.769 1512.15,683.769 1512.71,683.769 1513.26,683.769 1513.82,683.769 1514.38,683.769 1514.94,683.769 1515.5,683.769 1516.06,683.769 1516.62,683.769 1517.18,683.769 1517.74,683.769 1518.3,683.769 1518.86,683.769 1519.42,683.769 1519.98,683.769 1520.53,683.769 1521.09,683.769 1521.65,683.769 1522.21,683.769 1522.77,683.769 1523.33,683.769 1523.89,683.769 1524.45,683.769 1525.01,683.769 1525.57,683.769 1526.13,683.769 1526.69,683.769 1527.25,683.769 1527.81,683.769 1528.36,683.769 1528.92,683.769 1529.48,683.769 1530.04,683.769 1530.6,683.769 1531.16,683.769 1531.72,683.769 1532.28,683.769 1532.84,683.769 1533.4,683.769 1533.96,683.769 1534.52,683.769 1535.08,683.769 1535.63,683.769 1536.19,683.769 1536.75,683.769 1537.31,683.769 1537.87,683.769 1538.43,683.769 1538.99,683.769 1539.55,683.769 1540.11,683.769 1540.67,683.769 1541.23,683.769 1541.79,683.769 1542.35,683.769 1542.9,683.769 1543.46,683.769 1544.02,683.769 1544.58,683.769 1545.14,683.769 1545.7,683.769 1546.26,683.769 1546.82,683.769 1547.38,683.769 1547.94,683.769 1548.5,683.769 1549.06,683.769 1549.62,683.769 1550.18,683.769 1550.73,683.769 1551.29,683.769 1551.85,683.769 1552.41,683.769 1552.97,683.769 1553.53,683.769 1554.09,683.769 1554.65,683.769 1555.21,683.769 1555.77,683.769 1556.33,683.769 1556.89,683.769 1557.45,683.769 1558,683.769 1558.56,683.769 1559.12,683.769 1559.68,683.769 1560.24,683.769 1560.8,683.769 1561.36,683.769 1561.92,683.769 1562.48,683.769 1563.04,683.769 1563.6,683.769 1564.16,683.769 1564.72,683.769 1565.28,683.769 1565.83,683.769 1566.39,683.769 1566.95,683.769 1567.51,683.769 1568.07,683.769 1568.63,683.769 1569.19,683.769 1569.75,683.769 1570.31,683.769 1570.87,683.769 1571.43,683.769 1571.99,683.769 1572.55,683.769 1573.1,683.769 1573.66,683.769 1574.22,683.769 1574.78,683.769 1575.34,683.769 1575.9,683.769 1576.46,683.769 1577.02,683.769 1577.58,683.769 1578.14,683.769 1578.7,683.769 1579.26,683.769 1579.82,683.769 1580.37,683.769 1580.93,683.769 1581.49,683.769 1582.05,683.769 1582.61,683.769 1583.17,683.769 1583.73,683.769 1584.29,683.769 1584.85,683.769 1585.41,683.769 1585.97,683.769 1586.53,683.769 1587.09,683.769 1587.65,683.769 1588.2,683.769 1588.76,683.769 1589.32,683.769 1589.88,683.769 1590.44,683.769 1591,683.769 1591.56,683.769 1592.12,683.769 1592.68,683.769 1593.24,683.769 1593.8,683.769 1594.36,683.769 1594.92,683.769 1595.47,683.769 1596.03,683.769 1596.59,683.769 1597.15,683.769 1597.71,683.769 1598.27,683.769 1598.83,683.769 1599.39,683.769 1599.95,683.769 1600.51,683.769 1601.07,683.769 1601.63,683.769 1602.19,683.769 1602.74,683.769 1603.3,683.769 1603.86,683.769 1604.42,683.769 1604.98,683.769 1605.54,683.769 1606.1,683.769 1606.66,683.769 1607.22,683.769 1607.78,683.769 1608.34,683.769 1608.9,683.769 1609.46,683.769 1610.02,683.769 1610.57,683.769 1611.13,683.769 1611.69,683.769 1612.25,683.769 1612.81,683.769 1613.37,683.769 1613.93,683.769 1614.49,683.769 1615.05,683.769 1615.61,683.769 1616.17,683.769 1616.73,683.769 1617.29,683.769 1617.84,683.769 1618.4,683.769 1618.96,683.769 1619.52,683.769 1620.08,683.769 1620.64,683.769 1621.2,683.769 1621.76,683.769 1622.32,683.769 1622.88,683.769 1623.44,683.769 1624,683.769 1624.56,683.769 1625.11,683.769 1625.67,683.769 1626.23,683.769 1626.79,683.769 1627.35,683.769 1627.91,683.769 1628.47,683.769 1629.03,683.769 1629.59,683.769 1630.15,683.769 1630.71,683.769 1631.27,683.769 1631.83,683.769 1632.39,683.769 1632.94,683.769 1633.5,683.769 1634.06,683.769 1634.62,683.769 1635.18,683.769 1635.74,683.769 1636.3,683.769 1636.86,683.769 1637.42,683.769 1637.98,683.769 1638.54,683.769 1639.1,683.769 1639.66,683.769 1640.21,683.769 1640.77,683.769 1641.33,683.769 1641.89,683.769 1642.45,683.769 1643.01,683.769 1643.57,683.769 1644.13,683.769 1644.69,683.769 1645.25,683.769 1645.81,683.769 1646.37,683.769 1646.93,683.769 1647.48,683.769 1648.04,683.769 1648.6,683.769 1649.16,683.769 1649.72,683.769 1650.28,683.769 1650.84,683.769 1651.4,683.769 1651.96,683.769 1652.52,683.769 1653.08,683.769 1653.64,683.769 1654.2,683.769 1654.76,683.769 1655.31,683.769 1655.87,683.769 1656.43,683.769 1656.99,683.769 1657.55,683.769 1658.11,683.769 1658.67,683.769 1659.23,683.769 1659.79,683.769 1660.35,683.769 1660.91,683.769 1661.47,683.769 1662.03,683.769 1662.58,683.769 1663.14,683.769 1663.7,683.769 1664.26,683.769 1664.82,683.769 1665.38,683.769 1665.94,683.769 1666.5,683.769 1667.06,683.769 1667.62,683.769 1668.18,683.769 1668.74,683.769 1669.3,683.769 1669.85,683.769 1670.41,683.769 1670.97,683.769 1671.53,683.769 1672.09,683.769 1672.65,683.769 1673.21,683.769 1673.77,683.769 1674.33,683.769 1674.89,683.769 1675.45,683.769 1676.01,683.769 1676.57,683.769 1677.13,683.769 1677.68,683.769 1678.24,683.769 1678.8,683.769 1679.36,683.769 1679.92,683.769 1680.48,683.769 1681.04,683.769 1681.6,683.769 1682.16,683.769 1682.72,683.769 1683.28,683.769 1683.84,683.769 1684.4,683.769 1684.95,683.769 1685.51,683.769 1686.07,683.769 1686.63,683.769 1687.19,683.769 1687.75,683.769 1688.31,683.769 1688.87,683.769 1689.43,683.769 1689.99,683.769 1690.55,683.769 1691.11,683.769 1691.67,683.769 1692.23,683.769 1692.78,683.769 1693.34,683.769 1693.9,683.769 1694.46,683.769 1695.02,683.769 1695.58,683.769 1696.14,683.769 1696.7,683.769 1697.26,683.769 1697.82,683.769 1698.38,683.769 1698.94,683.769 1699.5,683.769 1700.05,683.769 1700.61,683.769 1701.17,683.769 1701.73,683.769 1702.29,683.769 1702.85,683.769 1703.41,683.769 1703.97,683.769 1704.53,683.769 1705.09,683.769 1705.65,683.769 1706.21,683.769 1706.77,683.769 1707.32,683.769 1707.88,683.769 1708.44,683.769 1709,683.769 1709.56,683.769 1710.12,683.769 1710.68,683.769 1711.24,683.769 1711.8,683.769 1712.36,683.769 1712.92,683.769 1713.48,683.769 1714.04,683.769 1714.6,683.769 1715.15,683.769 1715.71,683.769 1716.27,683.769 1716.83,683.769 1717.39,683.769 1717.95,683.769 1718.51,683.769 1719.07,683.769 1719.63,683.769 1720.19,683.769 1720.75,683.769 1721.31,683.769 1721.87,683.769 1722.42,683.769 1722.98,683.769 1723.54,683.769 1724.1,683.769 1724.66,683.769 1725.22,683.769 1725.78,683.769 1726.34,683.769 1726.9,683.769 1727.46,683.769 1728.02,683.769 1728.58,683.769 1729.14,683.769 1729.69,683.769 1730.25,683.769 1730.81,683.769 1731.37,683.769 1731.93,683.769 1732.49,683.769 1733.05,683.769 1733.61,683.769 1734.17,683.769 1734.73,683.769 1735.29,683.769 1735.85,683.769 1736.41,683.769 1736.97,683.769 1737.52,683.769 1738.08,683.769 1738.64,683.769 1739.2,683.769 1739.76,683.769 1740.32,683.769 1740.88,683.769 1741.44,683.769 1742,683.769 1742.56,683.769 1743.12,683.769 1743.68,683.769 1744.24,683.769 1744.79,683.769 1745.35,683.769 1745.91,683.769 1746.47,683.769 1747.03,683.769 1747.59,683.769 1748.15,683.769 1748.71,683.769 1749.27,683.769 1749.83,683.769 1750.39,683.769 1750.95,683.769 1751.51,683.769 1752.06,683.769 1752.62,683.769 1753.18,683.769 1753.74,683.769 1754.3,683.769 1754.86,683.769 1755.42,683.769 1755.98,683.769 1756.54,683.769 1757.1,683.769 1757.66,683.769 1758.22,683.769 1758.78,683.769 1759.34,683.769 1759.89,683.769 1760.45,683.769 1761.01,683.769 1761.57,683.769 1762.13,683.769 1762.69,683.769 1763.25,683.769 1763.81,683.769 1764.37,683.769 1764.93,683.769 1765.49,683.769 1766.05,683.769 1766.61,683.769 1767.16,683.769 1767.72,683.769 1768.28,683.769 1768.84,683.769 1769.4,683.769 1769.96,683.769 1770.52,683.769 1771.08,683.769 1771.64,683.769 1772.2,683.769 1772.76,683.769 1773.32,683.769 1773.88,683.769 1774.43,683.769 1774.99,683.769 1775.55,683.769 1776.11,683.769 1776.67,683.769 1777.23,683.769 1777.79,683.769 1778.35,683.769 1778.91,683.769 1779.47,683.769 1780.03,683.769 1780.59,683.769 1781.15,683.769 1781.71,683.769 1782.26,683.769 1782.82,683.769 1783.38,683.769 1783.94,683.769 1784.5,683.769 1785.06,683.769 1785.62,683.769 1786.18,683.769 1786.74,683.769 1787.3,683.769 1787.86,683.769 1788.42,683.769 1788.98,683.769 1789.53,683.769 1790.09,683.769 1790.65,683.769 1791.21,683.769 1791.77,683.769 1792.33,683.769 1792.89,683.769 1793.45,683.769 1794.01,683.769 1794.57,683.769 1795.13,683.769 1795.69,683.769 1796.25,683.769 1796.8,683.769 1797.36,683.769 1797.92,683.769 1798.48,683.769 1799.04,683.769 1799.6,683.769 1800.16,683.769 1800.72,683.769 1801.28,683.769 1801.84,683.769 1802.4,683.769 1802.96,683.769 1803.52,683.769 1804.08,683.769 1804.63,683.769 1805.19,683.769 1805.75,683.769 1806.31,683.769 1806.87,683.769 1807.43,683.769 1807.99,683.769 1808.55,683.769 1809.11,683.769 1809.67,683.769 1810.23,683.769 1810.79,683.769 1811.35,683.769 1811.9,683.769 1812.46,683.769 1813.02,683.769 1813.58,683.769 1814.14,683.769 1814.7,683.769 1815.26,683.769 1815.82,683.769 1816.38,683.769 1816.94,683.769 1817.5,683.769 1818.06,683.769 1818.62,683.769 1819.18,683.769 1819.73,683.769 1820.29,683.769 1820.85,683.769 1821.41,683.769 1821.97,683.769 1822.53,683.769 1823.09,683.769 1823.65,683.769 1824.21,683.769 1824.77,683.769 1825.33,683.769 1825.89,683.769 1826.45,683.769 1827,683.769 1827.56,683.769 1828.12,683.769 1828.68,683.769 1829.24,683.769 1829.8,683.769 1830.36,683.769 1830.92,683.769 1831.48,683.769 1832.04,683.769 1832.6,683.769 1833.16,683.769 1833.72,683.769 1834.27,683.769 1834.83,683.769 1835.39,683.769 1835.95,683.769 1836.51,683.769 1837.07,683.769 1837.63,683.769 1838.19,683.769 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.034607498379434 ± 0.020950123063067923\nProjected Energy: -4.016011718536049 ± (0.006790426480248968, 0.0069747263979804686)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.456276</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.7553e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.2744e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.087e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.302e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.654e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.346e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
