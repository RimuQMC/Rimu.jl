var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip560\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip560)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip561\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip560)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip562\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip560)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.81 2211.02,1260.81 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.84 2211.02,1003.84 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.868 2211.02,746.868 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,489.899 2211.02,489.899 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,232.929 2211.02,232.929 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.81 423.181,1260.81 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.84 423.181,1003.84 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.868 423.181,746.868 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,489.899 423.181,489.899 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,232.929 423.181,232.929 \"/>\n<path clip-path=\"url(#clip560)\" d=\"M356.339 1246.61 Q352.728 1246.61 350.899 1250.17 Q349.094 1253.71 349.094 1260.84 Q349.094 1267.95 350.899 1271.51 Q352.728 1275.05 356.339 1275.05 Q359.973 1275.05 361.779 1271.51 Q363.608 1267.95 363.608 1260.84 Q363.608 1253.71 361.779 1250.17 Q359.973 1246.61 356.339 1246.61 M356.339 1242.9 Q362.149 1242.9 365.205 1247.51 Q368.284 1252.09 368.284 1260.84 Q368.284 1269.57 365.205 1274.18 Q362.149 1278.76 356.339 1278.76 Q350.529 1278.76 347.45 1274.18 Q344.395 1269.57 344.395 1260.84 Q344.395 1252.09 347.45 1247.51 Q350.529 1242.9 356.339 1242.9 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M290.043 1017.18 L306.363 1017.18 L306.363 1021.12 L284.418 1021.12 L284.418 1017.18 Q287.08 1014.43 291.664 1009.8 Q296.27 1005.15 297.451 1003.8 Q299.696 1001.28 300.576 999.544 Q301.478 997.785 301.478 996.095 Q301.478 993.34 299.534 991.604 Q297.613 989.868 294.511 989.868 Q292.312 989.868 289.858 990.632 Q287.427 991.396 284.65 992.947 L284.65 988.224 Q287.474 987.09 289.927 986.512 Q292.381 985.933 294.418 985.933 Q299.789 985.933 302.983 988.618 Q306.177 991.303 306.177 995.794 Q306.177 997.924 305.367 999.845 Q304.58 1001.74 302.474 1004.34 Q301.895 1005.01 298.793 1008.22 Q295.691 1011.42 290.043 1017.18 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M316.224 986.558 L334.58 986.558 L334.58 990.493 L320.506 990.493 L320.506 998.965 Q321.524 998.618 322.543 998.456 Q323.562 998.271 324.58 998.271 Q330.367 998.271 333.747 1001.44 Q337.126 1004.61 337.126 1010.03 Q337.126 1015.61 333.654 1018.71 Q330.182 1021.79 323.862 1021.79 Q321.687 1021.79 319.418 1021.42 Q317.173 1021.05 314.765 1020.31 L314.765 1015.61 Q316.849 1016.74 319.071 1017.3 Q321.293 1017.85 323.77 1017.85 Q327.774 1017.85 330.112 1015.75 Q332.45 1013.64 332.45 1010.03 Q332.45 1006.42 330.112 1004.31 Q327.774 1002.21 323.77 1002.21 Q321.895 1002.21 320.02 1002.62 Q318.168 1003.04 316.224 1003.92 L316.224 986.558 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M356.339 989.637 Q352.728 989.637 350.899 993.201 Q349.094 996.743 349.094 1003.87 Q349.094 1010.98 350.899 1014.54 Q352.728 1018.09 356.339 1018.09 Q359.973 1018.09 361.779 1014.54 Q363.608 1010.98 363.608 1003.87 Q363.608 996.743 361.779 993.201 Q359.973 989.637 356.339 989.637 M356.339 985.933 Q362.149 985.933 365.205 990.539 Q368.284 995.123 368.284 1003.87 Q368.284 1012.6 365.205 1017.21 Q362.149 1021.79 356.339 1021.79 Q350.529 1021.79 347.45 1017.21 Q344.395 1012.6 344.395 1003.87 Q344.395 995.123 347.45 990.539 Q350.529 985.933 356.339 985.933 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M286.062 729.588 L304.418 729.588 L304.418 733.523 L290.344 733.523 L290.344 741.996 Q291.363 741.648 292.381 741.486 Q293.4 741.301 294.418 741.301 Q300.205 741.301 303.585 744.473 Q306.964 747.644 306.964 753.06 Q306.964 758.639 303.492 761.741 Q300.02 764.82 293.701 764.82 Q291.525 764.82 289.256 764.449 Q287.011 764.079 284.603 763.338 L284.603 758.639 Q286.687 759.773 288.909 760.329 Q291.131 760.884 293.608 760.884 Q297.613 760.884 299.951 758.778 Q302.288 756.672 302.288 753.06 Q302.288 749.449 299.951 747.343 Q297.613 745.236 293.608 745.236 Q291.733 745.236 289.858 745.653 Q288.006 746.07 286.062 746.949 L286.062 729.588 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M326.177 732.667 Q322.566 732.667 320.737 736.232 Q318.932 739.773 318.932 746.903 Q318.932 754.009 320.737 757.574 Q322.566 761.116 326.177 761.116 Q329.811 761.116 331.617 757.574 Q333.446 754.009 333.446 746.903 Q333.446 739.773 331.617 736.232 Q329.811 732.667 326.177 732.667 M326.177 728.963 Q331.987 728.963 335.043 733.57 Q338.122 738.153 338.122 746.903 Q338.122 755.63 335.043 760.236 Q331.987 764.82 326.177 764.82 Q320.367 764.82 317.288 760.236 Q314.233 755.63 314.233 746.903 Q314.233 738.153 317.288 733.57 Q320.367 728.963 326.177 728.963 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M356.339 732.667 Q352.728 732.667 350.899 736.232 Q349.094 739.773 349.094 746.903 Q349.094 754.009 350.899 757.574 Q352.728 761.116 356.339 761.116 Q359.973 761.116 361.779 757.574 Q363.608 754.009 363.608 746.903 Q363.608 739.773 361.779 736.232 Q359.973 732.667 356.339 732.667 M356.339 728.963 Q362.149 728.963 365.205 733.57 Q368.284 738.153 368.284 746.903 Q368.284 755.63 365.205 760.236 Q362.149 764.82 356.339 764.82 Q350.529 764.82 347.45 760.236 Q344.395 755.63 344.395 746.903 Q344.395 738.153 347.45 733.57 Q350.529 728.963 356.339 728.963 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M284.835 472.619 L307.057 472.619 L307.057 474.61 L294.511 507.179 L289.627 507.179 L301.432 476.554 L284.835 476.554 L284.835 472.619 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M316.224 472.619 L334.58 472.619 L334.58 476.554 L320.506 476.554 L320.506 485.026 Q321.524 484.679 322.543 484.517 Q323.562 484.332 324.58 484.332 Q330.367 484.332 333.747 487.503 Q337.126 490.674 337.126 496.091 Q337.126 501.67 333.654 504.771 Q330.182 507.85 323.862 507.85 Q321.687 507.85 319.418 507.48 Q317.173 507.109 314.765 506.369 L314.765 501.67 Q316.849 502.804 319.071 503.359 Q321.293 503.915 323.77 503.915 Q327.774 503.915 330.112 501.808 Q332.45 499.702 332.45 496.091 Q332.45 492.48 330.112 490.373 Q327.774 488.267 323.77 488.267 Q321.895 488.267 320.02 488.684 Q318.168 489.1 316.224 489.98 L316.224 472.619 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M356.339 475.698 Q352.728 475.698 350.899 479.262 Q349.094 482.804 349.094 489.934 Q349.094 497.04 350.899 500.605 Q352.728 504.146 356.339 504.146 Q359.973 504.146 361.779 500.605 Q363.608 497.04 363.608 489.934 Q363.608 482.804 361.779 479.262 Q359.973 475.698 356.339 475.698 M356.339 471.994 Q362.149 471.994 365.205 476.6 Q368.284 481.184 368.284 489.934 Q368.284 498.66 365.205 503.267 Q362.149 507.85 356.339 507.85 Q350.529 507.85 347.45 503.267 Q344.395 498.66 344.395 489.934 Q344.395 481.184 347.45 476.6 Q350.529 471.994 356.339 471.994 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M256.664 246.274 L264.303 246.274 L264.303 219.909 L255.992 221.575 L255.992 217.316 L264.256 215.649 L268.932 215.649 L268.932 246.274 L276.571 246.274 L276.571 250.209 L256.664 250.209 L256.664 246.274 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M296.015 218.728 Q292.404 218.728 290.576 222.293 Q288.77 225.834 288.77 232.964 Q288.77 240.07 290.576 243.635 Q292.404 247.177 296.015 247.177 Q299.65 247.177 301.455 243.635 Q303.284 240.07 303.284 232.964 Q303.284 225.834 301.455 222.293 Q299.65 218.728 296.015 218.728 M296.015 215.024 Q301.826 215.024 304.881 219.631 Q307.96 224.214 307.96 232.964 Q307.96 241.691 304.881 246.297 Q301.826 250.881 296.015 250.881 Q290.205 250.881 287.127 246.297 Q284.071 241.691 284.071 232.964 Q284.071 224.214 287.127 219.631 Q290.205 215.024 296.015 215.024 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M326.177 218.728 Q322.566 218.728 320.737 222.293 Q318.932 225.834 318.932 232.964 Q318.932 240.07 320.737 243.635 Q322.566 247.177 326.177 247.177 Q329.811 247.177 331.617 243.635 Q333.446 240.07 333.446 232.964 Q333.446 225.834 331.617 222.293 Q329.811 218.728 326.177 218.728 M326.177 215.024 Q331.987 215.024 335.043 219.631 Q338.122 224.214 338.122 232.964 Q338.122 241.691 335.043 246.297 Q331.987 250.881 326.177 250.881 Q320.367 250.881 317.288 246.297 Q314.233 241.691 314.233 232.964 Q314.233 224.214 317.288 219.631 Q320.367 215.024 326.177 215.024 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M356.339 218.728 Q352.728 218.728 350.899 222.293 Q349.094 225.834 349.094 232.964 Q349.094 240.07 350.899 243.635 Q352.728 247.177 356.339 247.177 Q359.973 247.177 361.779 243.635 Q363.608 240.07 363.608 232.964 Q363.608 225.834 361.779 222.293 Q359.973 218.728 356.339 218.728 M356.339 215.024 Q362.149 215.024 365.205 219.631 Q368.284 224.214 368.284 232.964 Q368.284 241.691 365.205 246.297 Q362.149 250.881 356.339 250.881 Q350.529 250.881 347.45 246.297 Q344.395 241.691 344.395 232.964 Q344.395 224.214 347.45 219.631 Q350.529 215.024 356.339 215.024 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip562)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,232.929 4017.76,232.929 \"/>\n<polyline clip-path=\"url(#clip562)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.59 459.964,1248.05 460.533,1247.44 461.101,1246.76 461.669,1244.97 462.238,1244.13 462.806,1243.23 463.375,1242.23 463.943,1241.14 464.511,1239.93 465.08,1238.64 465.648,1237.24 466.216,1234.69 466.785,1233.05 467.353,1231.27 467.921,1229.35 468.49,1226.27 469.058,1224.06 469.626,1221.69 470.195,1218.14 470.763,1213.36 471.331,1210.46 471.9,1204.29 472.468,1200.97 473.036,1197.42 473.605,1191.63 474.173,1185.64 474.741,1181.55 475.31,1176.16 475.878,1170.62 476.446,1165.93 477.015,1161.05 477.583,1153.92 478.152,1148.61 478.72,1143.16 479.288,1137.48 479.857,1130.53 480.425,1124.23 480.993,1117.93 481.562,1109.2 482.13,1102.51 482.698,1094.53 483.267,1085.41 483.835,1076.13 484.403,1065.65 484.972,1058.3 485.54,1049.73 486.108,1040.04 486.677,1030.97 487.245,1022.89 487.813,1013.57 488.382,1002.11 488.95,991.687 489.518,982.296 490.087,973.685 490.655,965.08 491.224,956.251 491.792,947.418 492.36,937.278 492.929,927.241 493.497,918.161 494.065,904.781 494.634,894.675 495.202,883.442 495.77,873.149 496.339,863.882 496.907,851.679 497.475,842.415 498.044,832.018 498.612,820.759 499.18,810.413 499.749,801.188 500.317,789.888 500.885,778.865 501.454,766.759 502.022,756.903 502.59,748.197 503.159,739.34 503.727,730.604 504.295,719.735 504.864,711.137 505.432,700.489 506.001,692.036 506.569,682.529 507.137,675.231 507.706,662.597 508.274,653.253 508.842,645.102 509.411,634.903 509.979,623.628 510.547,614.679 511.116,604.974 511.684,596.585 512.252,589.337 512.821,579.887 513.389,570.598 513.957,561.633 514.526,553.919 515.094,545.277 515.662,538.851 516.231,531.538 516.799,524.204 517.367,516.018 517.936,510.098 518.504,504.315 519.072,497.524 519.641,490.728 520.209,483.224 520.778,475.892 521.346,469.775 521.914,463.733 522.483,457.832 523.051,450.197 523.619,444.718 524.188,439.236 524.756,436.095 525.324,430.904 525.893,424.831 526.461,418.915 527.029,416.472 527.598,409.804 528.166,403.258 528.734,397.97 529.303,393.764 529.871,385.532 530.439,382.764 531.008,379.949 531.576,376.423 532.144,373.015 532.713,371.67 533.281,371.373 533.85,363.596 534.418,361.379 534.986,358.098 535.555,356.814 536.123,353.703 536.691,349.49 537.26,347.643 537.828,346.673 538.396,343.716 538.965,340.582 539.533,337.982 540.101,337.372 540.67,332.475 541.238,330.826 541.806,326.121 542.375,322.598 542.943,320.398 543.511,317.023 544.08,316.071 544.648,314.013 545.216,313.065 545.785,311.963 546.353,310.884 546.921,308.825 547.49,306.935 548.058,305.994 548.627,304.139 549.195,303.327 549.763,303.501 550.332,300.596 550.9,299.77 551.468,298.924 552.037,297.941 552.605,295.146 553.173,294.302 553.742,294.557 554.31,290.559 554.878,287.787 555.447,287.44 556.015,286.783 556.583,286.229 557.152,284.649 557.72,285.435 558.288,283.922 558.857,283.418 559.425,280.801 559.993,282.384 560.562,282.832 561.13,280.098 561.698,279.536 562.267,278.776 562.835,279.32 563.404,276.977 563.972,276.409 564.54,270.527 565.109,270.293 565.677,268.043 566.245,264.681 566.814,262.937 567.382,261.117 567.95,261.422 568.519,263.683 569.087,262.63 569.655,263.753 570.224,263.705 570.792,263.417 571.36,263.383 571.929,262.406 572.497,262.254 573.065,263.434 573.634,266.185 574.202,265.963 574.77,263.52 575.339,263.098 575.907,260.651 576.476,259.297 577.044,260.313 577.612,257.072 578.181,257.043 578.749,253.007 579.317,254.349 579.886,254.348 580.454,254.496 581.022,252.57 581.591,253.9 582.159,252.902 582.727,253.108 583.296,250.202 583.864,250.651 584.432,251.86 585.001,251.968 585.569,252.098 586.137,253.357 586.706,252.477 587.274,253.908 587.842,252.965 588.411,253.908 588.979,252.868 589.547,252.895 590.116,253.008 590.684,252.962 591.253,250.81 591.821,252.764 592.389,251.653 592.958,250.539 593.526,249.678 594.094,247.675 594.663,245.857 595.231,245.303 595.799,245.595 596.368,244.989 596.936,246.328 597.504,245.433 598.073,245.83 598.641,247.292 599.209,247.271 599.778,245.434 600.346,246.92 600.914,247.008 601.483,247.403 602.051,247.505 602.619,243.332 603.188,243.578 603.756,244.104 604.325,243.592 604.893,244.619 605.461,244.009 606.03,244.476 606.598,245.584 607.166,246.816 607.735,244.725 608.303,241.979 608.871,242.44 609.44,241.704 610.008,241.114 610.576,240.414 611.145,240.905 611.713,241.557 612.281,241.133 612.85,241.688 613.418,241.281 613.986,240.512 614.555,240.778 615.123,241.197 615.691,242.578 616.26,242.786 616.828,241.058 617.396,241.524 617.965,236.834 618.533,237.504 619.102,238.217 619.67,238.717 620.238,240.439 620.807,239.747 621.375,241.24 621.943,242.604 622.512,242.841 623.08,242.334 623.648,243.573 624.217,243.638 624.785,242.848 625.353,244.044 625.922,242.304 626.49,244.601 627.058,242.598 627.627,241.672 628.195,242.848 628.763,243.002 629.332,243.327 629.9,242.128 630.468,240.411 631.037,239.982 631.605,241.303 632.173,241.467 632.742,247.018 633.31,247.919 633.879,248.773 634.447,248.144 635.015,247.416 635.584,246.034 636.152,243.852 636.72,242.85 637.289,244.051 637.857,242.68 638.425,240.575 638.994,241.702 639.562,241.728 640.13,240.83 640.699,240.965 641.267,238.985 641.835,239.336 642.404,239.444 642.972,241.688 643.54,242.819 644.109,241.69 644.677,241.717 645.245,238.866 645.814,240.993 646.382,241.814 646.951,242.802 647.519,242.537 648.087,242.304 648.656,242.253 649.224,241.237 649.792,244.206 650.361,242.055 650.929,240.032 651.497,240.327 652.066,242.571 652.634,242.51 653.202,242.191 653.771,241.801 654.339,242.661 654.907,241.632 655.476,241.533 656.044,239.426 656.612,237.484 657.181,238.744 657.749,234.697 658.317,234.941 658.886,236.398 659.454,237.613 660.022,238.88 660.591,238.662 661.159,237.668 661.728,240.989 662.296,241.935 662.864,241.977 663.433,242.801 664.001,243.425 664.569,242.094 665.138,241.586 665.706,241.51 666.274,242.361 666.843,242.364 667.411,241.205 667.979,241.899 668.548,241.54 669.116,240.108 669.684,240.968 670.253,239.474 670.821,239.356 671.389,240.153 671.958,239.918 672.526,239.798 673.094,238.543 673.663,237.509 674.231,238.404 674.799,239.123 675.368,239.898 675.936,238.618 676.505,237.509 677.073,237.481 677.641,237.501 678.21,237.549 678.778,235.392 679.346,236.327 679.915,236.547 680.483,238.783 681.051,238.75 681.62,239.734 682.188,238.7 682.756,238.48 683.325,238.098 683.893,235.945 684.461,235.009 685.03,235.159 685.598,234.162 686.166,233.367 686.735,232.498 687.303,232.659 687.871,233.046 688.44,233.189 689.008,233.456 689.577,232.515 690.145,232.657 690.713,230.945 691.282,234.247 691.85,233.201 692.418,234.492 692.987,234.783 693.555,233.745 694.123,233.97 694.692,234.467 695.26,233.728 695.828,235.061 696.397,234.138 696.965,232.441 697.533,234.856 698.102,233.895 698.67,234.02 699.238,235.288 699.807,234.262 700.375,234.484 700.943,234.643 701.512,234.676 702.08,234.859 702.648,231.779 703.217,233.37 703.785,233.808 704.354,234.202 704.922,232.246 705.49,228.378 706.059,229.936 706.627,230.577 707.195,230.934 707.764,233.399 708.332,233.591 708.9,233.659 709.469,233.968 710.037,234.235 710.605,233.602 711.174,233.704 711.742,233.209 712.31,231.523 712.879,231.894 713.447,234.448 714.015,234.688 714.584,233.889 715.152,235.07 715.72,236.275 716.289,236.24 716.857,235.17 717.425,236.127 717.994,237.016 718.562,236.178 719.131,236.128 719.699,235.344 720.267,234.227 720.836,233.251 721.404,234.456 721.972,233.743 722.541,233.738 723.109,234.984 723.677,235.198 724.246,235.14 724.814,234.425 725.382,235.522 725.951,236.589 726.519,235.544 727.087,235.541 727.656,238.586 728.224,237.411 728.792,237.429 729.361,236.37 729.929,237.501 730.497,235.564 731.066,235.905 731.634,233.75 732.203,233.916 732.771,235.328 733.339,237.597 733.908,237.514 734.476,237.577 735.044,235.491 735.613,235.489 736.181,234.377 736.749,236.695 737.318,235.785 737.886,234.829 738.454,234.938 739.023,236.161 739.591,237.261 740.159,237.25 740.728,236.278 741.296,237.451 741.864,235.284 742.433,235.41 743.001,234.345 743.569,235.559 744.138,236.618 744.706,235.497 745.274,235.405 745.843,234.352 746.411,231.544 746.98,233.02 747.548,233.143 748.116,233.313 748.685,234.624 749.253,235.758 749.821,236.576 750.39,237.7 750.958,237.688 751.526,237.748 752.095,236.668 752.663,235.604 753.231,234.647 753.8,235.869 754.368,235.019 754.936,233.002 755.505,231.228 756.073,232.603 756.641,231.869 757.21,233.016 757.778,233.263 758.346,233.332 758.915,234.561 759.483,235.678 760.052,234.666 760.62,233.773 761.188,235.04 761.757,234.131 762.325,235.343 762.893,236.661 763.462,238.624 764.03,238.398 764.598,238.156 765.167,239.085 765.735,236.645 766.303,236.495 766.872,236.284 767.44,233.304 768.008,232.546 768.577,232.746 769.145,232.868 769.713,232.018 770.282,231.341 770.85,232.554 771.418,231.878 771.987,232.262 772.555,229.599 773.123,229.183 773.692,227.537 774.26,230.301 774.829,230.745 775.397,230.227 775.965,231.681 776.534,231.891 777.102,232.048 777.67,232.273 778.239,232.439 778.807,234.793 779.375,232.749 779.944,233.959 780.512,235.077 781.08,236.411 781.649,235.238 782.217,235.462 782.785,235.645 783.354,236.689 783.922,234.615 784.49,233.508 785.059,233.846 785.627,234.952 786.195,233.852 786.764,232.913 787.332,235.136 787.9,231.297 788.469,230.446 789.037,229.527 789.606,227.752 790.174,228.134 790.742,228.646 791.311,231.13 791.879,230.39 792.447,232.882 793.016,235.352 793.584,234.216 794.152,236.329 794.721,235.353 795.289,235.417 795.857,235.566 796.426,234.647 796.994,234.75 797.562,233.96 798.131,234.238 798.699,235.342 799.267,235.446 799.836,236.722 800.404,237.734 800.972,238.669 801.541,235.45 802.109,235.468 802.678,236.649 803.246,237.502 803.814,239.598 804.383,241.248 804.951,240.216 805.519,239.903 806.088,238.744 806.656,240.42 807.224,242.017 807.793,240.387 808.361,238.903 808.929,239.695 809.498,238.413 810.066,238.007 810.634,237.71 811.203,236.613 811.771,236.482 812.339,237.481 812.908,236.381 813.476,235.112 814.044,235.693 814.613,234.418 815.181,237.427 815.749,237.301 816.318,236.212 816.886,235.92 817.455,236.947 818.023,236.563 818.591,237.6 819.16,237.238 819.728,236.902 820.296,237.717 820.865,237.386 821.433,236.771 822.001,236.43 822.57,234.158 823.138,236.169 823.706,235.172 824.275,236.215 824.843,236.152 825.411,235.724 825.98,236.814 826.548,235.585 827.116,232.419 827.685,230.296 828.253,231.489 828.821,229.769 829.39,230.977 829.958,231.154 830.526,232.201 831.095,232.222 831.663,229.321 832.232,229.557 832.8,229.85 833.368,229.272 833.937,231.646 834.505,232.772 835.073,233.952 835.642,234.005 836.21,235.959 836.778,235.735 837.347,235.597 837.915,238.511 838.483,237.175 839.052,236.143 839.62,238.017 840.188,237.639 840.757,236.42 841.325,236.186 841.893,233.875 842.462,232.532 843.03,232.7 843.598,232.857 844.167,231.784 844.735,235.994 845.304,236.987 845.872,235.791 846.44,235.586 847.009,234.523 847.577,235.493 848.145,237.278 848.714,238.075 849.282,237.57 849.85,236.214 850.419,234.93 850.987,233.935 851.555,234.906 852.124,233.81 852.692,234.875 853.26,233.771 853.829,234.666 854.397,235.41 854.965,236.055 855.534,236.595 856.102,234.182 856.67,235.162 857.239,235.006 857.807,235.951 858.375,236.689 858.944,234.425 859.512,234.291 860.081,233.326 860.649,234.436 861.217,235.348 861.786,235.115 862.354,236.896 862.922,235.523 863.491,235.3 864.059,239.234 864.627,237.537 865.196,238.061 865.764,236.893 866.332,235.478 866.901,236.145 867.469,235.968 868.037,236.862 868.606,234.397 869.174,233.031 869.742,232.755 870.311,231.371 870.879,231.339 871.447,232.376 872.016,229.449 872.584,230.557 873.152,229.77 873.721,229.987 874.289,230.964 874.858,230.908 875.426,231.999 875.994,231.901 876.563,233.004 877.131,232.961 877.699,233.03 878.268,230.923 878.836,231.267 879.404,232.499 879.973,231.37 880.541,230.352 881.109,231.275 881.678,230.326 882.246,230.432 882.814,229.658 883.383,231.8 883.951,230.757 884.519,232.963 885.088,233.049 885.656,234.912 886.224,232.71 886.793,232.479 887.361,231.32 887.93,230.311 888.498,228.338 889.066,229.661 889.635,231.031 890.203,230.021 890.771,231.272 891.34,231.374 891.908,230.601 892.476,229.562 893.045,230.749 893.613,232.027 894.181,233.024 894.75,234.948 895.318,232.732 895.886,232.749 896.455,233.528 897.023,233.483 897.591,234.533 898.16,233.551 898.728,233.623 899.296,232.466 899.865,232.508 900.433,234.515 901.001,233.271 901.57,235.34 902.138,235.231 902.707,231.96 903.275,231.181 903.843,227.201 904.412,227.563 904.98,229.016 905.548,229.41 906.117,229.763 906.685,230.229 907.253,230.578 907.822,229.735 908.39,230.111 908.958,230.697 909.527,231.226 910.095,230.053 910.663,231.452 911.232,232.628 911.8,232.82 912.368,231.776 912.937,230.732 913.505,231.102 914.073,230.347 914.642,231.515 915.21,227.526 915.779,228.899 916.347,230.222 916.915,230.439 917.484,229.728 918.052,228.91 918.62,228.279 919.189,227.614 919.757,230.146 920.325,231.51 920.894,232.525 921.462,230.655 922.03,231.883 922.599,230.134 923.167,231.337 923.735,232.521 924.304,233.675 924.872,234.784 925.44,234.908 926.009,235.667 926.577,236.697 927.145,237.426 927.714,237.165 928.282,238.834 928.85,238.322 929.419,237.93 929.987,236.599 930.556,236.354 931.124,235.395 931.692,235.237 932.261,236.184 932.829,234.043 933.397,237.342 933.966,236.238 934.534,236.208 935.102,235.125 935.671,235.059 936.239,233.744 936.807,237.775 937.376,238.407 937.944,238.103 938.512,238.85 939.081,237.49 939.649,236.121 940.217,237.936 940.786,234.611 941.354,235.632 941.922,236.544 942.491,234.229 943.059,233.872 943.627,232.738 944.196,231.645 944.764,232.823 945.333,231.651 945.901,231.809 946.469,232.905 947.038,232.957 947.606,234.063 948.174,234.1 948.743,235.19 949.311,234.957 949.879,235.85 950.448,235.768 951.016,234.505 951.584,235.409 952.153,237.153 952.721,236.927 953.289,238.648 953.858,238.263 954.426,236.692 954.994,235.522 955.563,235.314 956.131,235.207 956.699,235.985 957.268,235.853 957.836,236.858 958.405,237.559 958.973,238.183 959.541,239.975 960.11,239.464 960.678,238.923 961.246,237.182 961.815,240.048 962.383,238.418 962.951,238.776 963.52,238.384 964.088,238.035 964.656,236.433 965.225,234.945 965.793,233.632 966.361,232.363 966.93,234.223 967.498,234.16 968.066,233.172 968.635,230.966 969.203,230.922 969.771,230.767 970.34,229.71 970.908,230.851 971.476,230.869 972.045,232.884 972.613,233.98 973.182,233.83 973.75,232.682 974.318,233.529 974.887,233.35 975.455,234.187 976.023,233.151 976.592,233.199 977.16,231.951 977.728,232.112 978.297,232.106 978.865,231.22 979.433,230.504 980.002,229.632 980.57,231.134 981.138,230.511 981.707,230.48 982.275,227.317 982.843,228.606 983.412,229.837 983.98,230.071 984.548,229.119 985.117,230.399 985.685,230.512 986.253,230.458 986.822,232.428 987.39,234.626 987.959,233.54 988.527,234.422 989.095,233.57 989.664,231.541 990.232,231.525 990.8,231.605 991.369,231.806 991.937,231.643 992.505,230.472 993.074,229.504 993.642,229.546 994.21,227.821 994.779,226.958 995.347,227.429 995.915,225.757 996.484,226.104 997.052,227.639 997.62,227.902 998.189,226.452 998.757,226.8 999.325,225.153 999.894,224.6 1000.46,223.175 1001.03,221.833 1001.6,222.807 1002.17,221.337 1002.74,221.506 1003.3,222.519 1003.87,225.233 1004.44,226.039 1005.01,227.698 1005.58,229.384 1006.15,230.726 1006.71,230.771 1007.28,231.373 1007.85,229.383 1008.42,230.768 1008.99,231.045 1009.56,233.452 1010.12,233.387 1010.69,233.34 1011.26,235.541 1011.83,236.392 1012.4,236.468 1012.97,234.435 1013.53,234.606 1014.1,235.69 1014.67,235.757 1015.24,235.657 1015.81,235.698 1016.38,235.695 1016.94,233.724 1017.51,233.918 1018.08,237.366 1018.65,238.243 1019.22,237.833 1019.79,236.62 1020.35,237.682 1020.92,236.459 1021.49,236.016 1022.06,237.942 1022.63,237.59 1023.2,239.42 1023.76,239.155 1024.33,238.897 1024.9,239.651 1025.47,241.129 1026.04,240.48 1026.61,238.869 1027.17,239.276 1027.74,242.161 1028.31,241.434 1028.88,242.806 1029.45,243.037 1030.02,243.186 1030.58,241.354 1031.15,239.84 1031.72,238.946 1032.29,238.401 1032.86,238.013 1033.43,236.58 1033.99,236.202 1034.56,235.17 1035.13,234.707 1035.7,231.452 1036.27,232.629 1036.84,231.593 1037.4,232.862 1037.97,232.959 1038.54,232.693 1039.11,232.602 1039.68,230.691 1040.25,231.68 1040.81,230.657 1041.38,228.563 1041.95,228.961 1042.52,227.132 1043.09,228.617 1043.66,228.772 1044.22,229.091 1044.79,230.379 1045.36,232.486 1045.93,232.519 1046.5,231.577 1047.07,230.711 1047.63,230.801 1048.2,226.751 1048.77,225.121 1049.34,225.72 1049.91,226.361 1050.48,225.876 1051.05,227.432 1051.61,228.04 1052.18,231.627 1052.75,231.447 1053.32,232.615 1053.89,231.777 1054.46,234.83 1055.02,235.84 1055.59,235.998 1056.16,235.945 1056.73,235.712 1057.3,234.564 1057.87,234.472 1058.43,237.637 1059,238.349 1059.57,237.959 1060.14,238.516 1060.71,238.093 1061.28,236.81 1061.84,234.347 1062.41,234.224 1062.98,235.345 1063.55,235.184 1064.12,236.829 1064.69,237.719 1065.25,237.475 1065.82,238.004 1066.39,237.787 1066.96,235.349 1067.53,232.17 1068.1,231.128 1068.66,231.243 1069.23,230.131 1069.8,231.3 1070.37,230.315 1070.94,229.34 1071.51,228.67 1072.07,229.051 1072.64,229.405 1073.21,228.605 1073.78,225.659 1074.35,227.198 1074.92,226.613 1075.48,226.883 1076.05,226.316 1076.62,226.749 1077.19,227.044 1077.76,226.578 1078.33,226.89 1078.89,228.377 1079.46,230.951 1080.03,232.131 1080.6,231.187 1081.17,229.285 1081.74,231.853 1082.3,231.216 1082.87,231.449 1083.44,233.619 1084.01,232.486 1084.58,232.302 1085.15,232.281 1085.71,231.464 1086.28,230.526 1086.85,229.698 1087.42,231.117 1087.99,233.303 1088.56,232.293 1089.12,231.524 1089.69,227.711 1090.26,228.153 1090.83,228.863 1091.4,228.564 1091.97,230.225 1092.53,231.555 1093.1,231.694 1093.67,231.091 1094.24,231.201 1094.81,231.361 1095.38,231.675 1095.94,232.784 1096.51,233.829 1097.08,233.966 1097.65,234.006 1098.22,234.205 1098.79,234.304 1099.35,234.24 1099.92,234.492 1100.49,232.403 1101.06,233.498 1101.63,232.561 1102.2,232.677 1102.76,232.647 1103.33,231.896 1103.9,233.093 1104.47,236.299 1105.04,235.02 1105.61,232.845 1106.17,233.885 1106.74,233.83 1107.31,233.906 1107.88,235.154 1108.45,235.013 1109.02,235.95 1109.58,234.935 1110.15,236.874 1110.72,236.81 1111.29,236.647 1111.86,237.756 1112.43,238.577 1112.99,239.355 1113.56,238.683 1114.13,238.404 1114.7,238.268 1115.27,239.932 1115.84,239.386 1116.4,235.736 1116.97,236.554 1117.54,237.33 1118.11,238.973 1118.68,238.613 1119.25,238.205 1119.81,238.697 1120.38,236.317 1120.95,234.845 1121.52,235.43 1122.09,234.061 1122.66,232.887 1123.23,232.879 1123.79,230.9 1124.36,231.076 1124.93,230.16 1125.5,230.037 1126.07,228.174 1126.64,229.618 1127.2,229.834 1127.77,232.866 1128.34,231.747 1128.91,231.997 1129.48,231.076 1130.05,228.396 1130.61,229.931 1131.18,229.106 1131.75,228.311 1132.32,229.65 1132.89,229.812 1133.46,232.099 1134.02,231.344 1134.59,230.512 1135.16,235.654 1135.73,233.365 1136.3,232.354 1136.87,233.551 1137.43,234.73 1138,234.682 1138.57,234.717 1139.14,234.691 1139.71,234.839 1140.28,234.851 1140.84,233.676 1141.41,234.72 1141.98,234.463 1142.55,233.537 1143.12,234.626 1143.69,233.428 1144.25,237.635 1144.82,237.205 1145.39,241.878 1145.96,239.218 1146.53,238.705 1147.1,238.269 1147.66,237.971 1148.23,238.432 1148.8,238.133 1149.37,240.773 1149.94,242.146 1150.51,240.492 1151.07,240.904 1151.64,241.154 1152.21,240.332 1152.78,238.543 1153.35,236.861 1153.92,235.457 1154.48,236.157 1155.05,236.798 1155.62,237.055 1156.19,237.789 1156.76,236.195 1157.33,234.833 1157.89,234.824 1158.46,234.498 1159.03,235.272 1159.6,234.975 1160.17,234.584 1160.74,234.46 1161.3,233.136 1161.87,233.272 1162.44,232.213 1163.01,233.245 1163.58,232.141 1164.15,231.926 1164.71,231.838 1165.28,230.906 1165.85,230.694 1166.42,230.823 1166.99,230.72 1167.56,227.748 1168.12,230.035 1168.69,230.171 1169.26,228.226 1169.83,229.352 1170.4,230.447 1170.97,231.527 1171.53,228.545 1172.1,228.671 1172.67,231.156 1173.24,230.916 1173.81,229.999 1174.38,228.03 1174.94,227.19 1175.51,229.645 1176.08,231.778 1176.65,230.861 1177.22,229.915 1177.79,231.183 1178.35,231.239 1178.92,230.47 1179.49,230.573 1180.06,229.452 1180.63,227.626 1181.2,227.795 1181.76,228.324 1182.33,228.715 1182.9,231.032 1183.47,232.217 1184.04,232.241 1184.61,230.161 1185.17,228.16 1185.74,227.28 1186.31,227.619 1186.88,228.845 1187.45,228.344 1188.02,230.659 1188.58,230.57 1189.15,229.914 1189.72,230.25 1190.29,233.603 1190.86,233.827 1191.43,232.883 1192,233.724 1192.56,232.721 1193.13,232.845 1193.7,229.863 1194.27,232.443 1194.84,232.629 1195.41,233.7 1195.97,234.768 1196.54,232.774 1197.11,232.839 1197.68,231.873 1198.25,231.048 1198.82,230.153 1199.38,231.309 1199.95,229.568 1200.52,230.94 1201.09,229.121 1201.66,229.371 1202.23,227.52 1202.79,229.262 1203.36,231.479 1203.93,231.743 1204.5,233.178 1205.07,235.249 1205.64,231.177 1206.2,229.402 1206.77,230.844 1207.34,232.127 1207.91,234.309 1208.48,234.124 1209.05,234.027 1209.61,232.841 1210.18,232.63 1210.75,232.695 1211.32,231.575 1211.89,230.667 1212.46,230.842 1213.02,232.14 1213.59,232.133 1214.16,231.295 1214.73,231.489 1215.3,232.734 1215.87,233.869 1216.43,235.254 1217,234.916 1217.57,234.873 1218.14,234.836 1218.71,233.636 1219.28,234.566 1219.84,234.63 1220.41,237.618 1220.98,235.381 1221.55,234.226 1222.12,234.261 1222.69,234.111 1223.25,231.987 1223.82,232.211 1224.39,231.362 1224.96,233.834 1225.53,233.707 1226.1,233.471 1226.66,232.476 1227.23,232.733 1227.8,232.865 1228.37,235.005 1228.94,234.053 1229.51,235.123 1230.07,235.98 1230.64,235.602 1231.21,235.475 1231.78,235.266 1232.35,234.486 1232.92,234.469 1233.48,236.463 1234.05,235.12 1234.62,234.045 1235.19,233.053 1235.76,233.051 1236.33,233.094 1236.89,231.163 1237.46,233.337 1238.03,235.415 1238.6,232.998 1239.17,233.168 1239.74,233.176 1240.3,233.079 1240.87,233.179 1241.44,232.197 1242.01,231.213 1242.58,230.105 1243.15,230.247 1243.71,231.69 1244.28,232.805 1244.85,230.806 1245.42,230.775 1245.99,231.964 1246.56,233.015 1247.12,233.064 1247.69,232.194 1248.26,232.179 1248.83,233.401 1249.4,234.367 1249.97,232.333 1250.53,231.244 1251.1,229.175 1251.67,232.455 1252.24,231.367 1252.81,231.567 1253.38,232.702 1253.94,230.695 1254.51,230.87 1255.08,230.849 1255.65,230.151 1256.22,230.425 1256.79,230.649 1257.35,228.892 1257.92,229.377 1258.49,231.911 1259.06,231.375 1259.63,230.625 1260.2,232.085 1260.76,231.432 1261.33,231.647 1261.9,232.737 1262.47,234.712 1263.04,234.813 1263.61,235.647 1264.18,236.402 1264.74,236.107 1265.31,236.983 1265.88,235.876 1266.45,233.056 1267.02,233.143 1267.59,232.157 1268.15,230.323 1268.72,230.819 1269.29,231.179 1269.86,235.46 1270.43,235.406 1271,236.266 1271.56,235.019 1272.13,234.921 1272.7,233.859 1273.27,233.879 1273.84,235.153 1274.41,236.194 1274.97,234.69 1275.54,233.674 1276.11,231.81 1276.68,231.896 1277.25,231.106 1277.82,230.352 1278.38,230.498 1278.95,232.725 1279.52,232.815 1280.09,231.897 1280.66,230.075 1281.23,231.353 1281.79,232.428 1282.36,231.305 1282.93,231.529 1283.5,233.704 1284.07,232.905 1284.64,233.865 1285.2,233.769 1285.77,231.656 1286.34,228.693 1286.91,229.914 1287.48,230.204 1288.05,230.467 1288.61,229.645 1289.18,231.046 1289.75,231.252 1290.32,234.415 1290.89,233.205 1291.46,234.253 1292.02,234.244 1292.59,237.155 1293.16,234.886 1293.73,238.899 1294.3,237.578 1294.87,241.382 1295.43,241.816 1296,241.19 1296.57,239.607 1297.14,238.997 1297.71,235.467 1298.28,234.334 1298.84,235.325 1299.41,237.958 1299.98,237.692 1300.55,237.35 1301.12,234.024 1301.69,234.073 1302.25,231.979 1302.82,232.007 1303.39,231.087 1303.96,232.197 1304.53,233.247 1305.1,232.145 1305.66,232.231 1306.23,232.311 1306.8,233.261 1307.37,233.972 1307.94,235.888 1308.51,235.738 1309.07,233.464 1309.64,233.242 1310.21,234.303 1310.78,232.029 1311.35,230.944 1311.92,231.081 1312.48,231.209 1313.05,231.367 1313.62,230.517 1314.19,231.655 1314.76,231.628 1315.33,229.705 1315.89,230.996 1316.46,227.919 1317.03,227.462 1317.6,229.053 1318.17,228.347 1318.74,227.591 1319.3,227.909 1319.87,228.124 1320.44,226.372 1321.01,227.997 1321.58,225.494 1322.15,224.977 1322.71,222.371 1323.28,222.093 1323.85,222.993 1324.42,222.771 1324.99,225.494 1325.56,226.014 1326.12,225.66 1326.69,227.12 1327.26,228.654 1327.83,231.163 1328.4,230.687 1328.97,229.931 1329.53,230.104 1330.1,229.503 1330.67,230.855 1331.24,230.935 1331.81,231.058 1332.38,233.437 1332.94,233.525 1333.51,232.694 1334.08,233.933 1334.65,235.106 1335.22,236.166 1335.79,236.188 1336.36,234.217 1336.92,235.312 1337.49,235.388 1338.06,235.215 1338.63,236.11 1339.2,236.968 1339.77,234.964 1340.33,233.82 1340.9,233.808 1341.47,235.782 1342.04,234.632 1342.61,237.434 1343.18,239.171 1343.74,241.122 1344.31,241.528 1344.88,239.974 1345.45,238.559 1346.02,241.43 1346.59,242.79 1347.15,240.941 1347.72,243.48 1348.29,244.814 1348.86,244.923 1349.43,244.991 1350,243.958 1350.56,239.947 1351.13,242.641 1351.7,241.061 1352.27,239.269 1352.84,239.091 1353.41,236.439 1353.97,236.033 1354.54,234.914 1355.11,233.694 1355.68,234.562 1356.25,232.442 1356.82,230.397 1357.38,230.647 1357.95,228.739 1358.52,226.936 1359.09,227.301 1359.66,229.639 1360.23,229.512 1360.79,230.499 1361.36,231.677 1361.93,233.575 1362.5,235.681 1363.07,236.632 1363.64,235.337 1364.2,236.517 1364.77,234.096 1365.34,232.978 1365.91,232.836 1366.48,233.025 1367.05,233.745 1367.61,233.594 1368.18,235.708 1368.75,234.435 1369.32,235.374 1369.89,232.377 1370.46,233.53 1371.02,229.625 1371.59,230.077 1372.16,228.353 1372.73,226.398 1373.3,228.833 1373.87,230.054 1374.43,230.17 1375,232.46 1375.57,230.303 1376.14,229.302 1376.71,230.605 1377.28,232.699 1377.84,233.08 1378.41,235.081 1378.98,234.052 1379.55,232.889 1380.12,232.953 1380.69,233.035 1381.25,232.722 1381.82,232.765 1382.39,235.827 1382.96,235.618 1383.53,233.03 1384.1,231.686 1384.66,231.829 1385.23,232.868 1385.8,232.653 1386.37,233.7 1386.94,234.849 1387.51,234.441 1388.07,234.478 1388.64,231.215 1389.21,230.244 1389.78,229.323 1390.35,230.619 1390.92,228.488 1391.48,226.757 1392.05,228.399 1392.62,228.446 1393.19,228.676 1393.76,227.948 1394.33,229.427 1394.89,228.67 1395.46,229.084 1396.03,229.368 1396.6,230.705 1397.17,230.852 1397.74,230.102 1398.3,229.304 1398.87,226.668 1399.44,227.961 1400.01,229.539 1400.58,229.771 1401.15,229.895 1401.71,229.211 1402.28,231.532 1402.85,233.701 1403.42,234.805 1403.99,233.774 1404.56,237.927 1405.13,238.524 1405.69,241.077 1406.26,240.499 1406.83,240.1 1407.4,239.631 1407.97,239.964 1408.54,239.586 1409.1,240.169 1409.67,239.656 1410.24,238.115 1410.81,237.748 1411.38,239.565 1411.95,239.101 1412.51,239.937 1413.08,239.364 1413.65,234.636 1414.22,235.325 1414.79,236.091 1415.36,235.973 1415.92,234.85 1416.49,233.8 1417.06,233.682 1417.63,233.543 1418.2,234.552 1418.77,236.25 1419.33,236.937 1419.9,235.557 1420.47,235.278 1421.04,234.128 1421.61,232.917 1422.18,234.866 1422.74,233.97 1423.31,232.612 1423.88,233.365 1424.45,233.084 1425.02,232.923 1425.59,234.936 1426.15,234.596 1426.72,234.264 1427.29,233.008 1427.86,233.766 1428.43,232.424 1429,232.121 1429.56,233.066 1430.13,233.132 1430.7,233.093 1431.27,232.128 1431.84,232.822 1432.41,233.796 1432.97,232.768 1433.54,233.692 1434.11,233.581 1434.68,234.423 1435.25,235.09 1435.82,235.834 1436.38,234.402 1436.95,234.237 1437.52,235.772 1438.09,235.305 1438.66,234.869 1439.23,234.51 1439.79,233.227 1440.36,231.987 1440.93,232.896 1441.5,233.943 1442.07,233.021 1442.64,232.836 1443.2,232.77 1443.77,235.775 1444.34,234.084 1444.91,233.766 1445.48,233.28 1446.05,230.24 1446.61,230.422 1447.18,229.287 1447.75,229.52 1448.32,226.587 1448.89,226.98 1449.46,228.098 1450.02,229.456 1450.59,230.765 1451.16,230.577 1451.73,231.555 1452.3,229.293 1452.87,230.554 1453.43,229.616 1454,231.943 1454.57,232.862 1455.14,234.823 1455.71,235.484 1456.28,234.199 1456.84,234.959 1457.41,236.612 1457.98,237.05 1458.55,235.76 1459.12,236.483 1459.69,235.18 1460.25,232.947 1460.82,232.84 1461.39,233.545 1461.96,234.555 1462.53,233.528 1463.1,233.313 1463.66,232.152 1464.23,231.842 1464.8,233.858 1465.37,234.852 1465.94,232.456 1466.51,234.467 1467.07,232.387 1467.64,231.318 1468.21,230.351 1468.78,231.416 1469.35,229.427 1469.92,228.607 1470.48,230.801 1471.05,231.673 1471.62,232.793 1472.19,232.992 1472.76,231.699 1473.33,232.633 1473.89,231.515 1474.46,231.512 1475.03,231.621 1475.6,230.637 1476.17,228.756 1476.74,230.011 1477.31,228.143 1477.87,230.318 1478.44,230.659 1479.01,232.001 1479.58,233.027 1480.15,233.032 1480.72,234.022 1481.28,230.8 1481.85,229.948 1482.42,231.104 1482.99,231.257 1483.56,231.492 1484.13,230.635 1484.69,232.899 1485.26,231.656 1485.83,231.582 1486.4,231.782 1486.97,231.92 1487.54,231.031 1488.1,231.146 1488.67,231.351 1489.24,233.585 1489.81,235.276 1490.38,234.723 1490.95,234.329 1491.51,235.154 1492.08,234.948 1492.65,236.657 1493.22,236.386 1493.79,235.139 1494.36,233.802 1494.92,231.65 1495.49,229.366 1496.06,228.709 1496.63,229.001 1497.2,228.194 1497.77,225.3 1498.33,223.89 1498.9,225.316 1499.47,219.895 1500.04,220.816 1500.61,223.689 1501.18,224.592 1501.74,225.328 1502.31,225.023 1502.88,226.823 1503.45,226.355 1504.02,226.88 1504.59,228.505 1505.15,228.78 1505.72,232.346 1506.29,232.332 1506.86,234.563 1507.43,233.601 1508,232.505 1508.56,229.558 1509.13,228.903 1509.7,228.287 1510.27,229.935 1510.84,234.296 1511.41,233.382 1511.97,234.668 1512.54,234.636 1513.11,236.83 1513.68,236.58 1514.25,238.391 1514.82,240.175 1515.38,238.803 1515.95,236.471 1516.52,236.404 1517.09,236.326 1517.66,235.185 1518.23,233.965 1518.79,234.909 1519.36,237.956 1519.93,238.695 1520.5,237.345 1521.07,237.947 1521.64,236.532 1522.2,232.326 1522.77,231.532 1523.34,231.65 1523.91,232.8 1524.48,233.953 1525.05,231.91 1525.61,230.952 1526.18,233.208 1526.75,232.141 1527.32,231.527 1527.89,230.813 1528.46,230.12 1529.02,233.402 1529.59,235.494 1530.16,234.361 1530.73,234.373 1531.3,235.439 1531.87,235.34 1532.43,234.044 1533,234.948 1533.57,234.631 1534.14,232.636 1534.71,232.749 1535.28,232.808 1535.84,233.928 1536.41,232.987 1536.98,234.253 1537.55,234.127 1538.12,234.929 1538.69,235.011 1539.25,233.967 1539.82,235.051 1540.39,234.192 1540.96,234.07 1541.53,234.289 1542.1,233.049 1542.66,233.12 1543.23,233.089 1543.8,232.131 1544.37,232.316 1544.94,230.344 1545.51,228.766 1546.08,230.075 1546.64,227.338 1547.21,227.837 1547.78,227.099 1548.35,226.526 1548.92,226.922 1549.49,227.511 1550.05,225.919 1550.62,224.866 1551.19,224.274 1551.76,228.095 1552.33,229.637 1552.9,229.068 1553.46,231.485 1554.03,230.677 1554.6,232.028 1555.17,231.099 1555.74,231.25 1556.31,230.365 1556.87,230.719 1557.44,231.995 1558.01,232.15 1558.58,232.402 1559.15,234.82 1559.72,237.135 1560.28,237.926 1560.85,238.683 1561.42,236.5 1561.99,234.226 1562.56,235.382 1563.13,234.21 1563.69,234.083 1564.26,234.107 1564.83,234.984 1565.4,234.822 1565.97,237.81 1566.54,236.523 1567.1,238.295 1567.67,238.073 1568.24,236.832 1568.81,233.418 1569.38,233.458 1569.95,235.417 1570.51,235.429 1571.08,236.336 1571.65,236.469 1572.22,235.415 1572.79,233.205 1573.36,236.188 1573.92,234.849 1574.49,234.645 1575.06,234.483 1575.63,233.626 1576.2,233.44 1576.77,234.363 1577.33,233.23 1577.9,233.064 1578.47,230.082 1579.04,230.267 1579.61,230.423 1580.18,231.639 1580.74,231.673 1581.31,231.964 1581.88,232.135 1582.45,231.233 1583.02,233.548 1583.59,233.649 1584.15,234.917 1584.72,236.832 1585.29,236.361 1585.86,236.292 1586.43,237.072 1587,237.882 1587.56,238.525 1588.13,235.854 1588.7,234.62 1589.27,233.705 1589.84,233.672 1590.41,235.724 1590.97,235.617 1591.54,233.15 1592.11,231.352 1592.68,231.236 1593.25,231.411 1593.82,228.516 1594.38,229.767 1594.95,230.174 1595.52,230.429 1596.09,231.601 1596.66,235.853 1597.23,235.658 1597.79,237.534 1598.36,237.379 1598.93,237.165 1599.5,239.912 1600.07,238.23 1600.64,238.891 1601.2,237.771 1601.77,239.483 1602.34,240.139 1602.91,237.465 1603.48,235.013 1604.05,232.83 1604.61,231.79 1605.18,231.83 1605.75,233.695 1606.32,234.623 1606.89,235.447 1607.46,233.905 1608.02,234.597 1608.59,236.466 1609.16,236.005 1609.73,235.51 1610.3,234.207 1610.87,232.946 1611.43,232.914 1612,235.955 1612.57,239.014 1613.14,239.491 1613.71,237.82 1614.28,234.502 1614.84,235.386 1615.41,234.328 1615.98,233.128 1616.55,235.187 1617.12,234.801 1617.69,233.417 1618.26,233.407 1618.82,235.374 1619.39,238.27 1619.96,235.706 1620.53,233.168 1621.1,233.197 1621.67,233.17 1622.23,232.933 1622.8,230.612 1623.37,230.817 1623.94,235.852 1624.51,236.679 1625.08,236.266 1625.64,235.929 1626.21,234.572 1626.78,234.347 1627.35,234.138 1627.92,232.851 1628.49,232.595 1629.05,231.479 1629.62,231.365 1630.19,231.43 1630.76,232.586 1631.33,232.59 1631.9,232.632 1632.46,231.402 1633.03,231.289 1633.6,232.382 1634.17,233.125 1634.74,232.876 1635.31,232.706 1635.87,231.447 1636.44,231.522 1637.01,232.483 1637.58,232.583 1638.15,231.48 1638.72,233.624 1639.28,233.533 1639.85,235.432 1640.42,233.936 1640.99,234.586 1641.56,234.401 1642.13,233.104 1642.69,233.896 1643.26,234.773 1643.83,234.578 1644.4,235.358 1644.97,233.062 1645.54,233.146 1646.1,235.153 1646.67,233.801 1647.24,231.469 1647.81,231.443 1648.38,232.396 1648.95,230.352 1649.51,230.524 1650.08,230.749 1650.65,229.763 1651.22,229.135 1651.79,229.214 1652.36,231.376 1652.92,230.374 1653.49,230.51 1654.06,230.78 1654.63,229.704 1655.2,231.975 1655.77,234.069 1656.33,234.105 1656.9,233.936 1657.47,233.754 1658.04,231.384 1658.61,233.317 1659.18,233.084 1659.74,234.029 1660.31,233.934 1660.88,231.625 1661.45,232.591 1662.02,233.616 1662.59,234.433 1663.15,235.301 1663.72,233.995 1664.29,234.896 1664.86,234.729 1665.43,234.467 1666,233.071 1666.56,232.701 1667.13,232.699 1667.7,232.372 1668.27,231.442 1668.84,228.36 1669.41,228.376 1669.97,229.635 1670.54,227.764 1671.11,225.942 1671.68,225.354 1672.25,225.962 1672.82,226.292 1673.38,227.874 1673.95,227.058 1674.52,227.303 1675.09,226.449 1675.66,224.895 1676.23,226.337 1676.79,225.779 1677.36,225.089 1677.93,224.696 1678.5,226.325 1679.07,225.793 1679.64,227.312 1680.2,226.733 1680.77,227.018 1681.34,227.478 1681.91,230.927 1682.48,231.913 1683.05,233.146 1683.61,232.275 1684.18,233.44 1684.75,234.481 1685.32,234.558 1685.89,235.175 1686.46,233.987 1687.02,234.972 1687.59,234.935 1688.16,233.746 1688.73,234.999 1689.3,235.062 1689.87,235.811 1690.44,235.426 1691,236.213 1691.57,235.787 1692.14,235.517 1692.71,236.578 1693.28,235.167 1693.85,238.238 1694.41,237.927 1694.98,238.509 1695.55,238.13 1696.12,236.775 1696.69,237.36 1697.26,238.023 1697.82,237.923 1698.39,234.516 1698.96,234.419 1699.53,236.428 1700.1,235.975 1700.67,235.779 1701.23,237.754 1701.8,238.463 1702.37,239.943 1702.94,240.694 1703.51,239.034 1704.08,238.779 1704.64,239.388 1705.21,236.864 1705.78,236.653 1706.35,236.019 1706.92,237.302 1707.49,236.944 1708.05,235.423 1708.62,236.248 1709.19,234.969 1709.76,234.641 1710.33,235.321 1710.9,235.079 1711.46,232.756 1712.03,230.41 1712.6,230.704 1713.17,229.768 1713.74,228.06 1714.31,229.586 1714.87,226.718 1715.44,227.202 1716.01,229.558 1716.58,230.831 1717.15,230.95 1717.72,228.987 1718.28,228.174 1718.85,227.111 1719.42,229.691 1719.99,232.021 1720.56,232.092 1721.13,231.01 1721.69,231.079 1722.26,231.061 1722.83,234.121 1723.4,233.918 1723.97,232.796 1724.54,232.515 1725.1,233.681 1725.67,232.578 1726.24,231.435 1726.81,231.456 1727.38,232.489 1727.95,232.513 1728.51,232.635 1729.08,235.609 1729.65,234.305 1730.22,233.147 1730.79,234.368 1731.36,235.354 1731.92,233.955 1732.49,232.636 1733.06,233.671 1733.63,235.674 1734.2,234.337 1734.77,233.194 1735.33,231.863 1735.9,230.843 1736.47,228.742 1737.04,228.023 1737.61,227.37 1738.18,226.585 1738.74,225.9 1739.31,228.642 1739.88,229.098 1740.45,227.495 1741.02,227.669 1741.59,228.933 1742.15,228.468 1742.72,229.838 1743.29,230.184 1743.86,230.253 1744.43,229.494 1745,231.732 1745.56,230.848 1746.13,231.208 1746.7,232.328 1747.27,231.45 1747.84,232.493 1748.41,231.55 1748.97,231.748 1749.54,231.941 1750.11,231.95 1750.68,232.31 1751.25,234.476 1751.82,234.408 1752.38,234.26 1752.95,231.449 1753.52,231.81 1754.09,231.885 1754.66,228.881 1755.23,230.36 1755.79,230.34 1756.36,229.364 1756.93,230.46 1757.5,229.776 1758.07,229.16 1758.64,229.535 1759.21,229.796 1759.77,232.181 1760.34,234.311 1760.91,231.244 1761.48,229.717 1762.05,232.986 1762.62,234.386 1763.18,232.327 1763.75,228.386 1764.32,232.849 1764.89,232.022 1765.46,231.108 1766.03,231.173 1766.59,231.379 1767.16,231.551 1767.73,232.756 1768.3,232.78 1768.87,232.772 1769.44,234.967 1770,234.629 1770.57,234.516 1771.14,235.418 1771.71,234.383 1772.28,234.421 1772.85,234.481 1773.41,233.61 1773.98,233.761 1774.55,233.775 1775.12,232.862 1775.69,232.01 1776.26,230.091 1776.82,230.103 1777.39,231.181 1777.96,231.527 1778.53,231.673 1779.1,230.882 1779.67,230.975 1780.23,228.348 1780.8,229.757 1781.37,231.18 1781.94,231.357 1782.51,230.44 1783.08,229.832 1783.64,230.293 1784.21,229.611 1784.78,232.048 1785.35,233.364 1785.92,234.267 1786.49,233.444 1787.05,232.535 1787.62,232.72 1788.19,234.819 1788.76,235.658 1789.33,234.643 1789.9,235.708 1790.46,234.563 1791.03,235.383 1791.6,234.143 1792.17,235.047 1792.74,236.161 1793.31,236.908 1793.87,237.745 1794.44,235.518 1795.01,236.458 1795.58,237.399 1796.15,238.1 1796.72,238.039 1797.28,238.913 1797.85,238.528 1798.42,238.294 1798.99,238.051 1799.56,237.839 1800.13,239.566 1800.69,239.269 1801.26,236.687 1801.83,237.507 1802.4,238.038 1802.97,236.736 1803.54,236.582 1804.1,236.22 1804.67,236.138 1805.24,233.612 1805.81,233.366 1806.38,233.077 1806.95,232.988 1807.51,232.733 1808.08,231.97 1808.65,233.01 1809.22,232.003 1809.79,232.174 1810.36,234.221 1810.92,235.273 1811.49,236.159 1812.06,236.865 1812.63,234.537 1813.2,235.322 1813.77,233.951 1814.33,231.712 1814.9,229.478 1815.47,230.597 1816.04,229.56 1816.61,231.821 1817.18,230.872 1817.74,233.019 1818.31,235.064 1818.88,236.851 1819.45,236.49 1820.02,238.08 1820.59,238.735 1821.15,237.256 1821.72,239.972 1822.29,238.25 1822.86,237.62 1823.43,236.25 1824,236.045 1824.56,234.685 1825.13,234.222 1825.7,230.791 1826.27,230.817 1826.84,229.973 1827.41,232.049 1827.97,232.641 1828.54,233.645 1829.11,233.395 1829.68,232.173 1830.25,232.205 1830.82,232.071 1831.39,232.567 1831.95,230.293 1832.52,233.408 1833.09,234.318 1833.66,233.917 1834.23,233.794 1834.8,234.516 1835.36,234.467 1835.93,233.056 1836.5,232.738 1837.07,233.62 1837.64,233.467 1838.21,234.282 1838.77,234.063 1839.34,236.904 1839.91,235.65 1840.48,234.265 1841.05,234.853 1841.62,234.526 1842.18,234.385 1842.75,235.353 1843.32,232.953 1843.89,232.98 1844.46,231.846 1845.03,229.072 1845.59,229.46 1846.16,228.654 1846.73,228.946 1847.3,231.267 1847.87,230.322 1848.44,229.381 1849,229.603 1849.57,230.887 1850.14,230.908 1850.71,230.907 1851.28,229.242 1851.85,229.24 1852.41,230.566 1852.98,231.614 1853.55,229.808 1854.12,227.78 1854.69,225.056 1855.26,226.627 1855.82,228.026 1856.39,228.407 1856.96,228.658 1857.53,231.242 1858.1,232.393 1858.67,231.473 1859.23,231.522 1859.8,231.425 1860.37,232.736 1860.94,233.81 1861.51,232.825 1862.08,233.971 1862.64,232.779 1863.21,231.571 1863.78,230.733 1864.35,229.851 1864.92,230.139 1865.49,229.616 1866.05,228.986 1866.62,230.388 1867.19,229.834 1867.76,231.091 1868.33,232.363 1868.9,232.476 1869.46,231.601 1870.03,229.721 1870.6,230.068 1871.17,229.265 1871.74,229.679 1872.31,230.095 1872.87,230.181 1873.44,230.351 1874.01,230.56 1874.58,228.864 1875.15,232.259 1875.72,233.407 1876.28,232.26 1876.85,230.178 1877.42,229.3 1877.99,229.608 1878.56,230.872 1879.13,232.322 1879.69,231.457 1880.26,232.714 1880.83,232.813 1881.4,233.986 1881.97,233.908 1882.54,233.934 1883.1,232.889 1883.67,231.77 1884.24,230.935 1884.81,233.178 1885.38,233.321 1885.95,233.585 1886.51,234.785 1887.08,234.78 1887.65,234.676 1888.22,233.761 1888.79,232.774 1889.36,232.82 1889.92,232.767 1890.49,233.823 1891.06,232.839 1891.63,231.994 1892.2,231.208 1892.77,231.446 1893.33,231.759 1893.9,233.121 1894.47,232.132 1895.04,232.502 1895.61,232.736 1896.18,231.851 1896.74,234.039 1897.31,233.033 1897.88,231.921 1898.45,232.991 1899.02,232.853 1899.59,230.014 1900.16,233.357 1900.72,232.088 1901.29,235.354 1901.86,233.103 1902.43,234.248 1903,232.978 1903.57,233.881 1904.13,230.512 1904.7,229.714 1905.27,230.09 1905.84,231.634 1906.41,230.855 1906.98,233.139 1907.54,235.363 1908.11,234.129 1908.68,235.223 1909.25,235.18 1909.82,233.052 1910.39,233.238 1910.95,231.452 1911.52,231.796 1912.09,233.866 1912.66,236.136 1913.23,234.22 1913.8,232.041 1914.36,233.162 1914.93,235.318 1915.5,237.191 1916.07,238.088 1916.64,238.699 1917.21,238.367 1917.77,236.779 1918.34,235.653 1918.91,235.497 1919.48,233.493 1920.05,234.758 1920.62,233.492 1921.18,232.422 1921.75,232.488 1922.32,233.464 1922.89,234.428 1923.46,233.359 1924.03,232.484 1924.59,232.502 1925.16,233.724 1925.73,232.547 1926.3,230.354 1926.87,230.73 1927.44,229.85 1928,228.057 1928.57,229.612 1929.14,230.732 1929.71,229.098 1930.28,230.377 1930.85,230.599 1931.41,229.692 1931.98,228 1932.55,228.538 1933.12,227.798 1933.69,229.142 1934.26,230.614 1934.82,231.786 1935.39,230.028 1935.96,230.379 1936.53,230.794 1937.1,230.99 1937.67,234.404 1938.23,235.669 1938.8,237.598 1939.37,235.242 1939.94,234.128 1940.51,232.148 1941.08,231.133 1941.64,233.249 1942.21,234.291 1942.78,231.203 1943.35,229.385 1943.92,230.51 1944.49,230.682 1945.05,232.626 1945.62,233.658 1946.19,231.791 1946.76,235.098 1947.33,237.133 1947.9,238.941 1948.46,239.789 1949.03,238.134 1949.6,234.576 1950.17,235.447 1950.74,232.137 1951.31,233.155 1951.87,233.18 1952.44,232.348 1953.01,232.204 1953.58,233.184 1954.15,234.546 1954.72,235.659 1955.28,233.388 1955.85,234.431 1956.42,234.371 1956.99,233.264 1957.56,232.314 1958.13,230.574 1958.69,231.865 1959.26,232.683 1959.83,229.742 1960.4,230.993 1960.97,231.141 1961.54,231.158 1962.1,231.242 1962.67,232.475 1963.24,231.544 1963.81,231.67 1964.38,233.982 1964.95,235.16 1965.51,235.132 1966.08,234.858 1966.65,236.877 1967.22,236.493 1967.79,235.248 1968.36,234.117 1968.92,234.122 1969.49,232.986 1970.06,232.82 1970.63,231.863 1971.2,233.037 1971.77,233.978 1972.34,232.933 1972.9,233.191 1973.47,231.133 1974.04,230.281 1974.61,231.443 1975.18,230.58 1975.75,229.795 1976.31,229.285 1976.88,229.648 1977.45,231.127 1978.02,231.556 1978.59,231.658 1979.16,233.029 1979.72,234.283 1980.29,232.191 1980.86,233.083 1981.43,235.176 1982,238.289 1982.57,235.731 1983.13,236.582 1983.7,236.289 1984.27,237.176 1984.84,236.964 1985.41,237.715 1985.98,237.35 1986.54,237.956 1987.11,236.665 1987.68,237.345 1988.25,240.089 1988.82,240.473 1989.39,237.727 1989.95,237.203 1990.52,236.734 1991.09,239.726 1991.66,240.084 1992.23,239.621 1992.8,240.157 1993.36,239.385 1993.93,236.661 1994.5,236.246 1995.07,236.016 1995.64,236.959 1996.21,237.495 1996.77,237.053 1997.34,238.716 1997.91,237.284 1998.48,237.011 1999.05,236.643 1999.62,235.378 2000.18,235.959 2000.75,235.512 2001.32,234.251 2001.89,236.006 2002.46,236.829 2003.03,236.629 2003.59,234.213 2004.16,233.937 2004.73,233.925 2005.3,231.808 2005.87,232.639 2006.44,230.313 2007,231.382 2007.57,232.653 2008.14,235.653 2008.71,234.348 2009.28,233.23 2009.85,233.064 2010.41,234.012 2010.98,232.917 2011.55,232.741 2012.12,230.7 2012.69,229.351 2013.26,231.663 2013.82,229.457 2014.39,228.515 2014.96,229.942 2015.53,230.944 2016.1,228.911 2016.67,229.183 2017.23,229.424 2017.8,228.488 2018.37,225.507 2018.94,225.854 2019.51,226.321 2020.08,226.719 2020.64,225.109 2021.21,224.686 2021.78,223.075 2022.35,224.627 2022.92,225.241 2023.49,226.845 2024.05,228.271 2024.62,229.475 2025.19,227.873 2025.76,226.212 2026.33,227.767 2026.9,228.159 2027.46,228.365 2028.03,227.823 2028.6,227.404 2029.17,227.957 2029.74,230.384 2030.31,232.706 2030.87,232.7 2031.44,236.973 2032.01,238.633 2032.58,238.348 2033.15,237.915 2033.72,237.453 2034.28,236.101 2034.85,234.114 2035.42,234.065 2035.99,232.746 2036.56,231.574 2037.13,234.83 2037.69,232.823 2038.26,233.805 2038.83,233.721 2039.4,232.706 2039.97,232.862 2040.54,231.826 2041.11,232.015 2041.67,232.172 2042.24,234.452 2042.81,235.425 2043.38,234.178 2043.95,235.023 2044.52,234.964 2045.08,234.688 2045.65,234.615 2046.22,232.524 2046.79,232.578 2047.36,232.302 2047.93,230.321 2048.49,229.53 2049.06,228.676 2049.63,229.21 2050.2,229.467 2050.77,227.707 2051.34,228.082 2051.9,229.378 2052.47,230.758 2053.04,229.787 2053.61,226.84 2054.18,230.469 2054.75,230.679 2055.31,231.159 2055.88,230.266 2056.45,232.804 2057.02,233.155 2057.59,233.369 2058.16,234.498 2058.72,233.358 2059.29,232.304 2059.86,231.469 2060.43,232.792 2061,231.817 2061.57,234.054 2062.13,233.06 2062.7,234.113 2063.27,234.156 2063.84,233.154 2064.41,234.43 2064.98,233.302 2065.54,232.12 2066.11,232.252 2066.68,233.589 2067.25,230.772 2067.82,232.123 2068.39,233.152 2068.95,233.205 2069.52,233.255 2070.09,233.426 2070.66,233.414 2071.23,233.41 2071.8,234.477 2072.36,235.557 2072.93,235.454 2073.5,234.408 2074.07,233.495 2074.64,234.539 2075.21,231.372 2075.77,232.513 2076.34,231.577 2076.91,232.659 2077.48,230.852 2078.05,230.036 2078.62,228.224 2079.18,228.542 2079.75,229.135 2080.32,229.792 2080.89,232.056 2081.46,229.329 2082.03,229.699 2082.59,232.042 2083.16,231.119 2083.73,231.114 2084.3,231.543 2084.87,233.842 2085.44,234.984 2086,238.101 2086.57,239.601 2087.14,237.244 2087.71,237.956 2088.28,237.671 2088.85,237.536 2089.41,239.259 2089.98,239.123 2090.55,238.897 2091.12,241.589 2091.69,239.944 2092.26,239.481 2092.82,239.021 2093.39,240.694 2093.96,239.076 2094.53,239.57 2095.1,238.033 2095.67,238.8 2096.23,239.26 2096.8,237.847 2097.37,237.436 2097.94,236.919 2098.51,235.675 2099.08,238.409 2099.64,235.684 2100.21,234.204 2100.78,232.935 2101.35,232.815 2101.92,232.653 2102.49,229.434 2103.05,228.464 2103.62,227.755 2104.19,228.924 2104.76,227.162 2105.33,228.794 2105.9,228.995 2106.46,229.068 2107.03,229.356 2107.6,227.544 2108.17,227.749 2108.74,228.079 2109.31,228.503 2109.87,230.803 2110.44,230.09 2111.01,228.977 2111.58,229.212 2112.15,228.505 2112.72,223.933 2113.29,225.65 2113.85,226.172 2114.42,226.633 2114.99,228.334 2115.56,227.643 2116.13,228.991 2116.7,232.347 2117.26,230.549 2117.83,230.164 2118.4,233.645 2118.97,232.893 2119.54,238.96 2120.11,241.646 2120.67,241.22 2121.24,240.485 2121.81,240.962 2122.38,239.491 2122.95,239.09 2123.52,239.654 2124.08,238.58 2124.65,238.188 2125.22,235.891 2125.79,235.867 2126.36,238.715 2126.93,237.181 2127.49,237.839 2128.06,241.564 2128.63,242.067 2129.2,243.181 2129.77,243.461 2130.34,242.602 2130.9,242.98 2131.47,241.139 2132.04,241.662 2132.61,243.043 2133.18,242.121 2133.75,240.275 2134.31,239.608 2134.88,239.105 2135.45,238.445 2136.02,240.064 2136.59,238.293 2137.16,235.676 2137.72,237.061 2138.29,236.467 2138.86,236.111 2139.43,234.8 2140,235.349 2140.57,235.96 2141.13,236.46 2141.7,238.336 2142.27,238.928 2142.84,236.223 2143.41,235.795 2143.98,236.333 2144.54,236.809 2145.11,235.125 2145.68,233.724 2146.25,233.302 2146.82,233.052 2147.39,230.814 2147.95,230.481 2148.52,230.297 2149.09,230.218 2149.66,229.118 2150.23,229.341 2150.8,226.29 2151.36,225.352 2151.93,227.617 2152.5,228.964 2153.07,227.919 2153.64,227.257 2154.21,226.402 2154.77,227.563 2155.34,227.693 2155.91,225.999 2156.48,227.085 2157.05,229.7 2157.62,230.91 2158.18,229.779 2158.75,229.833 2159.32,230.127 2159.89,230.151 \"/>\n<path clip-path=\"url(#clip560)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip560)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip560)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip560)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip560)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip560)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.022 ± 0.025\n  with uncertainty of ± 0.002244773756361517\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01164 ± (0.00360158, 0.00367689) (MC)\n  95% confidence interval: [-4.01899, -4.00436]) (MC)\n  linear error propagation: -4.01211 ± 0.00374311\n  |δ_y| = |0.00285625| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.011637487626587, val_l = 0.007349040458896283, val_u = 0.007279030046642987)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip590\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip590)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip591\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip590)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip592\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1152.6 2211.02,1152.6 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1005.65 2211.02,1005.65 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,858.703 2211.02,858.703 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,711.756 2211.02,711.756 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,564.808 2211.02,564.808 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,417.86 2211.02,417.86 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,270.913 2211.02,270.913 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1152.6 365.751,1152.6 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1005.65 365.751,1005.65 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,858.703 365.751,858.703 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,711.756 365.751,711.756 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,564.808 365.751,564.808 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,417.86 365.751,417.86 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,270.913 365.751,270.913 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M298.909 1138.4 Q295.298 1138.4 293.469 1141.96 Q291.664 1145.5 291.664 1152.63 Q291.664 1159.74 293.469 1163.3 Q295.298 1166.85 298.909 1166.85 Q302.543 1166.85 304.349 1163.3 Q306.177 1159.74 306.177 1152.63 Q306.177 1145.5 304.349 1141.96 Q302.543 1138.4 298.909 1138.4 M298.909 1134.69 Q304.719 1134.69 307.775 1139.3 Q310.853 1143.88 310.853 1152.63 Q310.853 1161.36 307.775 1165.97 Q304.719 1170.55 298.909 1170.55 Q293.099 1170.55 290.02 1165.97 Q286.964 1161.36 286.964 1152.63 Q286.964 1143.88 290.02 1139.3 Q293.099 1134.69 298.909 1134.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M259.557 1019 L267.196 1019 L267.196 992.63 L258.886 994.297 L258.886 990.037 L267.15 988.371 L271.826 988.371 L271.826 1019 L279.465 1019 L279.465 1022.93 L259.557 1022.93 L259.557 1019 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M298.909 991.449 Q295.298 991.449 293.469 995.014 Q291.664 998.556 291.664 1005.69 Q291.664 1012.79 293.469 1016.36 Q295.298 1019.9 298.909 1019.9 Q302.543 1019.9 304.349 1016.36 Q306.177 1012.79 306.177 1005.69 Q306.177 998.556 304.349 995.014 Q302.543 991.449 298.909 991.449 M298.909 987.746 Q304.719 987.746 307.775 992.352 Q310.853 996.935 310.853 1005.69 Q310.853 1014.41 307.775 1019.02 Q304.719 1023.6 298.909 1023.6 Q293.099 1023.6 290.02 1019.02 Q286.964 1014.41 286.964 1005.69 Q286.964 996.935 290.02 992.352 Q293.099 987.746 298.909 987.746 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M262.775 872.048 L279.094 872.048 L279.094 875.983 L257.15 875.983 L257.15 872.048 Q259.812 869.293 264.395 864.664 Q269.002 860.011 270.182 858.668 Q272.428 856.145 273.307 854.409 Q274.21 852.65 274.21 850.96 Q274.21 848.205 272.266 846.469 Q270.344 844.733 267.242 844.733 Q265.043 844.733 262.59 845.497 Q260.159 846.261 257.381 847.812 L257.381 843.09 Q260.205 841.955 262.659 841.377 Q265.113 840.798 267.15 840.798 Q272.52 840.798 275.715 843.483 Q278.909 846.168 278.909 850.659 Q278.909 852.789 278.099 854.71 Q277.312 856.608 275.205 859.201 Q274.627 859.872 271.525 863.09 Q268.423 866.284 262.775 872.048 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M298.909 844.502 Q295.298 844.502 293.469 848.067 Q291.664 851.608 291.664 858.738 Q291.664 865.844 293.469 869.409 Q295.298 872.951 298.909 872.951 Q302.543 872.951 304.349 869.409 Q306.177 865.844 306.177 858.738 Q306.177 851.608 304.349 848.067 Q302.543 844.502 298.909 844.502 M298.909 840.798 Q304.719 840.798 307.775 845.405 Q310.853 849.988 310.853 858.738 Q310.853 867.465 307.775 872.071 Q304.719 876.654 298.909 876.654 Q293.099 876.654 290.02 872.071 Q286.964 867.465 286.964 858.738 Q286.964 849.988 290.02 845.405 Q293.099 840.798 298.909 840.798 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M272.914 710.401 Q276.27 711.119 278.145 713.387 Q280.043 715.656 280.043 718.989 Q280.043 724.105 276.525 726.906 Q273.006 729.707 266.525 729.707 Q264.349 729.707 262.034 729.267 Q259.742 728.85 257.289 727.994 L257.289 723.48 Q259.233 724.614 261.548 725.193 Q263.863 725.772 266.386 725.772 Q270.784 725.772 273.076 724.036 Q275.39 722.299 275.39 718.989 Q275.39 715.934 273.238 714.221 Q271.108 712.485 267.289 712.485 L263.261 712.485 L263.261 708.642 L267.474 708.642 Q270.923 708.642 272.752 707.276 Q274.58 705.888 274.58 703.295 Q274.58 700.633 272.682 699.221 Q270.807 697.786 267.289 697.786 Q265.367 697.786 263.168 698.202 Q260.969 698.619 258.33 699.499 L258.33 695.332 Q260.992 694.591 263.307 694.221 Q265.645 693.851 267.705 693.851 Q273.029 693.851 276.131 696.281 Q279.233 698.688 279.233 702.809 Q279.233 705.679 277.59 707.67 Q275.946 709.637 272.914 710.401 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M298.909 697.554 Q295.298 697.554 293.469 701.119 Q291.664 704.661 291.664 711.79 Q291.664 718.897 293.469 722.461 Q295.298 726.003 298.909 726.003 Q302.543 726.003 304.349 722.461 Q306.177 718.897 306.177 711.79 Q306.177 704.661 304.349 701.119 Q302.543 697.554 298.909 697.554 M298.909 693.851 Q304.719 693.851 307.775 698.457 Q310.853 703.04 310.853 711.79 Q310.853 720.517 307.775 725.124 Q304.719 729.707 298.909 729.707 Q293.099 729.707 290.02 725.124 Q286.964 720.517 286.964 711.79 Q286.964 703.04 290.02 698.457 Q293.099 693.851 298.909 693.851 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M271.594 551.602 L259.789 570.051 L271.594 570.051 L271.594 551.602 M270.367 547.528 L276.247 547.528 L276.247 570.051 L281.177 570.051 L281.177 573.94 L276.247 573.94 L276.247 582.088 L271.594 582.088 L271.594 573.94 L255.992 573.94 L255.992 569.426 L270.367 547.528 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M298.909 550.607 Q295.298 550.607 293.469 554.171 Q291.664 557.713 291.664 564.843 Q291.664 571.949 293.469 575.514 Q295.298 579.056 298.909 579.056 Q302.543 579.056 304.349 575.514 Q306.177 571.949 306.177 564.843 Q306.177 557.713 304.349 554.171 Q302.543 550.607 298.909 550.607 M298.909 546.903 Q304.719 546.903 307.775 551.509 Q310.853 556.093 310.853 564.843 Q310.853 573.569 307.775 578.176 Q304.719 582.759 298.909 582.759 Q293.099 582.759 290.02 578.176 Q286.964 573.569 286.964 564.843 Q286.964 556.093 290.02 551.509 Q293.099 546.903 298.909 546.903 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M258.793 400.58 L277.15 400.58 L277.15 404.516 L263.076 404.516 L263.076 412.988 Q264.094 412.641 265.113 412.478 Q266.131 412.293 267.15 412.293 Q272.937 412.293 276.316 415.465 Q279.696 418.636 279.696 424.053 Q279.696 429.631 276.224 432.733 Q272.752 435.812 266.432 435.812 Q264.256 435.812 261.988 435.441 Q259.742 435.071 257.335 434.33 L257.335 429.631 Q259.418 430.765 261.641 431.321 Q263.863 431.877 266.34 431.877 Q270.344 431.877 272.682 429.77 Q275.02 427.664 275.02 424.053 Q275.02 420.441 272.682 418.335 Q270.344 416.228 266.34 416.228 Q264.465 416.228 262.59 416.645 Q260.738 417.062 258.793 417.941 L258.793 400.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M298.909 403.659 Q295.298 403.659 293.469 407.224 Q291.664 410.766 291.664 417.895 Q291.664 425.002 293.469 428.566 Q295.298 432.108 298.909 432.108 Q302.543 432.108 304.349 428.566 Q306.177 425.002 306.177 417.895 Q306.177 410.766 304.349 407.224 Q302.543 403.659 298.909 403.659 M298.909 399.955 Q304.719 399.955 307.775 404.562 Q310.853 409.145 310.853 417.895 Q310.853 426.622 307.775 431.228 Q304.719 435.812 298.909 435.812 Q293.099 435.812 290.02 431.228 Q286.964 426.622 286.964 417.895 Q286.964 409.145 290.02 404.562 Q293.099 399.955 298.909 399.955 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M269.326 269.049 Q266.178 269.049 264.326 271.202 Q262.497 273.355 262.497 277.105 Q262.497 280.832 264.326 283.008 Q266.178 285.16 269.326 285.16 Q272.474 285.16 274.303 283.008 Q276.154 280.832 276.154 277.105 Q276.154 273.355 274.303 271.202 Q272.474 269.049 269.326 269.049 M278.608 254.397 L278.608 258.656 Q276.849 257.823 275.043 257.383 Q273.261 256.943 271.502 256.943 Q266.872 256.943 264.418 260.068 Q261.988 263.193 261.641 269.512 Q263.006 267.499 265.066 266.434 Q267.127 265.346 269.603 265.346 Q274.812 265.346 277.821 268.517 Q280.853 271.665 280.853 277.105 Q280.853 282.429 277.705 285.647 Q274.557 288.864 269.326 288.864 Q263.33 288.864 260.159 284.281 Q256.988 279.674 256.988 270.948 Q256.988 262.753 260.877 257.892 Q264.766 253.008 271.316 253.008 Q273.076 253.008 274.858 253.355 Q276.664 253.702 278.608 254.397 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M298.909 256.712 Q295.298 256.712 293.469 260.276 Q291.664 263.818 291.664 270.948 Q291.664 278.054 293.469 281.619 Q295.298 285.16 298.909 285.16 Q302.543 285.16 304.349 281.619 Q306.177 278.054 306.177 270.948 Q306.177 263.818 304.349 260.276 Q302.543 256.712 298.909 256.712 M298.909 253.008 Q304.719 253.008 307.775 257.614 Q310.853 262.198 310.853 270.948 Q310.853 279.674 307.775 284.281 Q304.719 288.864 298.909 288.864 Q293.099 288.864 290.02 284.281 Q286.964 279.674 286.964 270.948 Q286.964 262.198 290.02 257.614 Q293.099 253.008 298.909 253.008 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip592)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1044.32 400.199,944.851 400.786,853.582 401.372,769.965 401.958,693.489 402.545,623.685 403.131,560.115 403.718,502.373 404.304,450.08 404.891,402.886 405.477,360.458 406.063,402.958 406.65,366.617 407.236,333.251 407.823,303.703 408.409,277.724 408.995,256.169 409.582,236.577 410.168,219.895 410.755,254.079 411.341,241.011 411.927,230.366 412.514,222.634 413.1,252.539 413.687,247.208 414.273,243.719 414.86,271.178 415.446,323.518 416.032,322.376 416.619,390.036 417.205,390.345 417.792,392.596 418.378,431.96 418.964,468.074 419.551,470.122 420.137,488.707 420.724,506.05 421.31,509.605 421.896,513.725 422.483,541.694 423.069,546.636 423.656,551.364 424.242,556.941 424.829,572.898 425.415,580.94 426.001,587.524 426.588,612.292 427.174,619.053 427.761,634.003 428.347,655.228 428.933,675.501 429.52,701.299 430.106,706.555 430.693,718.068 431.279,734.656 431.865,746.8 432.452,753.002 433.038,764.664 433.625,785.49 434.211,800.433 434.798,810.055 435.384,815.865 435.97,821.29 436.557,827.272 437.143,832.957 437.73,843.213 438.316,852.669 438.902,858.412 439.489,878.517 440.075,887.151 440.662,899.117 441.248,907.824 441.835,913.225 442.421,927.164 443.007,932.353 443.594,940.651 444.18,951.177 444.767,959.094 445.353,964.005 445.939,974.207 446.526,983.599 447.112,995.539 447.699,1002 448.285,1005.78 448.871,1009.96 449.458,1013.93 450.044,1022.7 450.631,1026.51 451.217,1034.8 451.804,1038.49 452.39,1044.46 452.976,1045.97 453.563,1058.34 454.149,1064.19 454.736,1067.81 455.322,1075.46 455.908,1085.21 456.495,1090.69 457.081,1097.65 457.668,1102.32 458.254,1105.07 458.84,1111.82 459.427,1118.38 460.013,1124.5 460.6,1128.59 461.186,1134.36 461.773,1136.57 462.359,1140.34 462.945,1144.27 463.532,1149.69 464.118,1151.61 464.705,1153.42 465.291,1156.93 465.877,1160.56 466.464,1165.4 467.05,1170.09 467.637,1173.06 468.223,1176.03 468.809,1178.89 469.396,1184.44 469.982,1186.93 470.569,1189.53 471.155,1188.84 471.742,1191.19 472.328,1194.9 472.914,1198.5 473.501,1197.28 474.087,1202.09 474.674,1206.83 475.26,1209.95 475.846,1211.66 476.433,1218.99 477.019,1219 477.606,1219.13 478.192,1220.29 478.778,1221.37 479.365,1219.74 479.951,1216.73 480.538,1223.77 481.124,1223.53 481.711,1224.76 482.297,1223.41 482.883,1224.51 483.47,1227.13 484.056,1226.73 484.643,1225.22 485.229,1226.33 485.815,1227.74 486.402,1228.52 486.988,1226.78 487.575,1230.6 488.161,1230.34 488.748,1234.04 489.334,1236.31 489.92,1236.97 490.507,1239.18 491.093,1238.38 491.68,1239.01 492.266,1238.28 492.852,1237.76 493.439,1237.24 494.025,1237.98 494.612,1238.56 495.198,1237.99 495.784,1238.58 496.371,1237.91 496.957,1236.02 497.544,1237.98 498.13,1237.41 498.717,1236.89 499.303,1236.55 499.889,1238.49 500.476,1238.07 501.062,1236.31 501.649,1239.8 502.235,1241.87 502.821,1241.01 503.408,1240.53 503.994,1239.95 504.581,1240.64 505.167,1238.46 505.753,1239.09 506.34,1238.51 506.926,1240.53 507.513,1237.47 508.099,1235.76 508.686,1237.94 509.272,1237.52 509.858,1237.36 510.445,1235.62 511.031,1237.4 511.618,1237.06 512.204,1243.19 512.79,1242.59 513.377,1244.44 513.963,1247.68 514.55,1249.04 515.136,1250.53 515.722,1249.51 516.309,1246.13 516.895,1246.68 517.482,1244.64 518.068,1243.99 518.655,1243.62 519.241,1242.95 519.827,1243.42 520.414,1242.92 521,1240.82 521.587,1236.8 522.173,1236.29 522.759,1238.46 523.346,1238.26 523.932,1240.5 524.519,1241.48 525.105,1239.65 525.691,1242.89 526.278,1242.37 526.864,1246.62 527.451,1244.56 528.037,1244.07 528.624,1243.4 529.21,1245.19 529.796,1243.15 530.383,1243.86 530.969,1243.15 531.556,1246.14 532.142,1245.21 532.728,1243.36 533.315,1242.8 533.901,1242.2 534.488,1240.26 535.074,1240.84 535.661,1238.68 536.247,1239.32 536.833,1237.73 537.42,1238.49 538.006,1237.99 538.593,1237.4 539.179,1236.99 539.765,1239.08 540.352,1236.35 540.938,1237.21 541.525,1238.1 542.111,1238.72 542.697,1240.71 543.284,1242.51 543.87,1242.87 544.457,1242.24 545.043,1242.67 545.63,1240.81 546.216,1241.56 546.802,1240.8 547.389,1238.77 547.975,1238.47 548.562,1240.31 549.148,1238.27 549.734,1237.84 550.321,1237.05 550.907,1236.59 551.494,1241.19 552.08,1240.66 552.666,1239.79 553.253,1240.14 553.839,1238.68 554.426,1239.13 555.012,1238.33 555.599,1236.75 556.185,1235.01 556.771,1237.16 557.358,1240.12 557.944,1239.37 558.531,1240.02 559.117,1240.51 559.703,1241.14 560.29,1240.4 560.876,1239.45 561.463,1239.75 562.049,1238.91 562.635,1239.18 563.222,1239.9 563.808,1239.41 564.395,1238.74 564.981,1236.92 565.568,1236.45 566.154,1238.26 566.74,1237.53 567.327,1242.83 567.913,1241.96 568.5,1241.02 569.086,1240.31 569.672,1238.16 570.259,1238.8 570.845,1236.89 571.432,1235.09 572.018,1234.59 572.605,1234.96 573.191,1233.28 573.777,1232.96 574.364,1233.64 574.95,1232.01 575.537,1233.8 576.123,1230.88 576.709,1232.97 577.296,1233.84 577.882,1232.25 578.469,1231.85 579.055,1231.23 579.641,1232.4 580.228,1234.21 580.814,1234.54 581.401,1232.83 581.987,1232.44 582.574,1225.7 583.16,1224.31 583.746,1222.95 584.333,1223.33 584.919,1223.84 585.506,1225.14 586.092,1227.42 586.678,1228.35 587.265,1226.7 587.851,1228.06 588.438,1230.32 589.024,1228.82 589.61,1228.58 590.197,1229.44 590.783,1229.1 591.37,1231.24 591.956,1230.69 592.543,1230.41 593.129,1227.63 593.715,1226.09 594.302,1227.2 594.888,1226.96 595.475,1230.11 596.061,1227.48 596.647,1226.33 597.234,1224.96 597.82,1225.04 598.407,1225.1 598.993,1224.94 599.579,1225.92 600.166,1222.24 600.752,1224.51 601.339,1226.68 601.925,1226.17 602.512,1223.36 603.098,1223.21 603.684,1223.37 604.271,1223.61 604.857,1222.4 605.444,1223.38 606.03,1223.3 606.616,1225.58 607.203,1227.71 607.789,1226.13 608.376,1230.73 608.962,1230.41 609.548,1228.66 610.135,1227.15 610.721,1225.56 611.308,1225.68 611.894,1226.71 612.481,1222.71 613.067,1221.41 613.653,1221.15 614.24,1219.97 614.826,1219.01 615.413,1220.34 615.999,1220.72 616.585,1220.62 617.172,1219.42 617.758,1219.2 618.345,1220.34 618.931,1219.34 619.518,1219.55 620.104,1221.04 620.69,1219.86 621.277,1221.43 621.863,1221.42 622.45,1220.34 623.036,1220.45 623.622,1220.43 624.209,1221.75 624.795,1222.83 625.382,1221.67 625.968,1220.7 626.554,1219.65 627.141,1221 627.727,1222.17 628.314,1222.09 628.9,1221.97 629.487,1221.8 630.073,1224.22 630.659,1223.07 631.246,1222.74 631.832,1220.03 632.419,1219.94 633.005,1218.65 633.591,1219.71 634.178,1219.83 634.764,1220.15 635.351,1222.56 635.937,1223.58 636.523,1223.36 637.11,1224.47 637.696,1225.37 638.283,1226.38 638.869,1226.2 639.456,1225.76 640.042,1225.59 640.628,1225.27 641.215,1226.35 641.801,1226.2 642.388,1228.2 642.974,1224.39 643.56,1225.58 644.147,1224.07 644.733,1223.7 645.32,1224.86 645.906,1224.58 646.492,1223.98 647.079,1224.81 647.665,1223.23 648.252,1224.26 648.838,1226.21 649.425,1223.41 650.011,1224.48 650.597,1224.32 651.184,1222.81 651.77,1223.95 652.357,1223.66 652.943,1223.44 653.529,1223.37 654.116,1223.11 654.702,1226.66 655.289,1224.83 655.875,1224.31 656.462,1223.83 657.048,1226.08 657.634,1230.6 658.221,1228.89 658.807,1228.22 659.394,1227.86 659.98,1225.03 660.566,1224.79 661.153,1224.7 661.739,1224.32 662.326,1223.98 662.912,1224.69 663.498,1224.56 664.085,1225.12 664.671,1227.08 665.258,1226.68 665.844,1223.72 666.431,1223.41 667.017,1224.3 667.603,1222.9 668.19,1221.44 668.776,1221.4 669.363,1222.58 669.949,1221.41 670.535,1220.3 671.122,1221.18 671.708,1221.17 672.295,1222.01 672.881,1223.26 673.467,1224.37 674.054,1222.96 674.64,1223.75 675.227,1223.74 675.813,1222.27 676.4,1221.97 676.986,1221.99 677.572,1222.77 678.159,1221.45 678.745,1220.15 679.332,1221.29 679.918,1221.23 680.504,1217.6 681.091,1218.85 681.677,1218.73 682.264,1219.86 682.85,1218.46 683.436,1220.62 684.023,1220.16 684.609,1222.61 685.196,1222.4 685.782,1220.73 686.369,1218.02 686.955,1218.01 687.541,1217.83 688.128,1220.16 688.714,1220.11 689.301,1221.35 689.887,1218.61 690.473,1219.58 691.06,1220.64 691.646,1220.46 692.233,1218.99 692.819,1217.63 693.405,1217.54 693.992,1218.58 694.578,1217.13 695.165,1219.56 695.751,1219.36 696.338,1220.55 696.924,1219.1 697.51,1217.8 698.097,1219.03 698.683,1219.07 699.27,1220.25 699.856,1223.49 700.442,1221.8 701.029,1221.66 701.615,1221.45 702.202,1219.91 702.788,1218.55 703.375,1217.53 703.961,1216.13 704.547,1216.03 705.134,1215.85 705.72,1217.01 706.307,1218.17 706.893,1219.22 707.479,1217.75 708.066,1218.68 708.652,1220.99 709.239,1223.06 709.825,1221.49 710.411,1222.36 710.998,1221.04 711.584,1220.75 712.171,1220.66 712.757,1219.22 713.344,1217.88 713.93,1219 714.516,1220 715.103,1218.5 715.689,1219.51 716.276,1218.07 716.862,1216.47 717.448,1214.09 718.035,1214.22 718.621,1214.38 719.208,1213.17 719.794,1215.89 720.38,1215.98 720.967,1216.15 721.553,1219.55 722.14,1220.43 722.726,1220.2 723.313,1220.06 723.899,1221.06 724.485,1221.87 725.072,1220.49 725.658,1221.29 726.245,1220.86 726.831,1223.98 727.417,1224.54 728.004,1226.53 728.59,1223.44 729.177,1222.99 729.763,1223.64 730.349,1222.01 730.936,1221.79 731.522,1221.64 732.109,1221.39 732.695,1221.21 733.282,1218.48 733.868,1220.82 734.454,1219.41 735.041,1218.08 735.627,1216.47 736.214,1217.77 736.8,1217.45 737.386,1217.18 737.973,1215.9 738.559,1218.23 739.146,1219.49 739.732,1219.08 740.318,1217.77 740.905,1219.01 741.491,1220.08 742.078,1217.49 742.664,1221.92 743.251,1222.94 743.837,1224.07 744.423,1226.21 745.01,1225.88 745.596,1225.4 746.183,1222.61 746.769,1223.51 747.355,1220.66 747.942,1217.78 748.528,1219.05 749.115,1216.55 749.701,1217.62 750.288,1217.49 750.874,1217.25 751.46,1218.27 752.047,1218.11 752.633,1218.99 753.22,1218.64 753.806,1217.32 754.392,1217.15 754.979,1215.59 755.565,1214.32 756.152,1213.12 756.738,1216.75 757.324,1216.68 757.911,1215.24 758.497,1214.15 759.084,1211.59 759.67,1209.5 760.257,1210.52 760.843,1210.72 761.429,1211.92 762.016,1209.82 762.602,1207.77 763.189,1209.48 763.775,1211.05 764.361,1209.98 764.948,1211.33 765.534,1211.68 766.121,1211.91 766.707,1213.09 767.293,1213.15 767.88,1211.9 768.466,1213.09 769.053,1214.49 769.639,1213.76 770.226,1215.19 770.812,1211.64 771.398,1211.68 771.985,1212.86 772.571,1213.12 773.158,1211.85 773.744,1212.21 774.33,1210.91 774.917,1211.23 775.503,1211.52 776.09,1210.48 776.676,1210.76 777.262,1211.37 777.849,1211.69 778.435,1214.26 779.022,1211.88 779.608,1212.97 780.195,1211.7 780.781,1211.7 781.367,1212.13 781.954,1210.79 782.54,1212.14 783.127,1215.77 783.713,1218.26 784.299,1216.93 784.886,1218.97 785.472,1217.63 786.059,1217.47 786.645,1216.29 787.232,1216.28 787.818,1219.68 788.404,1219.48 788.991,1219.22 789.577,1219.96 790.164,1217.28 790.75,1216 791.336,1214.63 791.923,1214.54 792.509,1212.23 793.096,1212.42 793.682,1212.52 794.268,1209.05 794.855,1210.49 795.441,1211.6 796.028,1209.33 796.614,1209.66 797.201,1210.97 797.787,1211.17 798.373,1213.8 798.96,1215.34 799.546,1215.15 800.133,1214.98 800.719,1216.23 801.305,1211.34 801.892,1210.11 802.478,1211.41 803.065,1211.59 803.651,1212.77 804.237,1211.6 804.824,1209.45 805.41,1208.42 805.997,1208.89 806.583,1210.37 807.17,1211.8 807.756,1212.92 808.342,1211.76 808.929,1212.99 809.515,1211.73 810.102,1212.97 810.688,1211.91 811.274,1211 811.861,1210.19 812.447,1209.48 813.034,1212.22 813.62,1211.05 814.206,1211.18 814.793,1210.03 815.379,1209.09 815.966,1211.66 816.552,1211.78 817.139,1212.87 817.725,1211.57 818.311,1210.47 818.898,1210.69 819.484,1208.55 820.071,1210.07 820.657,1210.27 821.243,1205.61 821.83,1207.45 822.416,1206.73 823.003,1207.98 823.589,1209.55 824.175,1208.71 824.762,1208.84 825.348,1207.73 825.935,1210.52 826.521,1212.08 827.108,1212.4 827.694,1214.02 828.28,1214.09 828.867,1212.92 829.453,1216.34 830.04,1215.13 830.626,1216.1 831.212,1215.92 831.799,1214.85 832.385,1214.96 832.972,1213.73 833.558,1213.87 834.145,1212.61 834.731,1212.66 835.317,1212.57 835.904,1215.03 836.49,1214.67 837.077,1213.28 837.663,1214.6 838.249,1215.82 838.836,1214.81 839.422,1215.95 840.009,1215.88 840.595,1216.84 841.181,1214.42 841.768,1215.66 842.354,1213.14 842.941,1213.04 843.527,1210.86 844.114,1213.39 844.7,1213.66 845.286,1215.02 845.873,1216.24 846.459,1218.59 847.046,1217.16 847.632,1215.64 848.218,1216.86 848.805,1215.47 849.391,1215.39 849.978,1216.32 850.564,1217.58 851.15,1216.28 851.737,1214.84 852.323,1213.7 852.91,1211.45 853.496,1213.99 854.083,1213.97 854.669,1213.07 855.255,1213.11 855.842,1211.87 856.428,1212.98 857.015,1212.88 857.601,1214.22 858.187,1214.18 858.774,1211.84 859.36,1213.26 859.947,1210.84 860.533,1210.91 861.119,1214.67 861.706,1215.6 862.292,1220.27 862.879,1219.98 863.465,1218.42 864.052,1218.05 864.638,1217.72 865.224,1217.25 865.811,1216.9 866.397,1217.94 866.984,1217.57 867.57,1216.95 868.156,1216.39 868.743,1217.79 869.329,1216.23 869.916,1214.89 870.502,1214.68 871.089,1215.9 871.675,1217.14 872.261,1216.76 872.848,1217.68 873.434,1216.38 874.021,1221.05 874.607,1219.58 875.193,1218.13 875.78,1217.94 876.366,1218.82 876.953,1219.85 877.539,1220.67 878.125,1221.55 878.712,1218.73 879.298,1217.21 879.885,1216.06 880.471,1218.24 881.058,1216.87 881.644,1218.93 882.23,1217.59 882.817,1216.25 883.403,1214.91 883.99,1213.6 884.576,1213.41 885.162,1212.48 885.749,1211.21 886.335,1210.27 886.922,1210.47 887.508,1208.42 888.094,1208.88 888.681,1209.22 889.267,1210.66 889.854,1210.87 890.44,1211.91 891.027,1212.04 891.613,1210.88 892.199,1213.3 892.786,1209.42 893.372,1210.61 893.959,1210.57 894.545,1211.76 895.131,1211.79 895.718,1213.28 896.304,1208.54 896.891,1207.69 897.477,1207.92 898.063,1206.93 898.65,1208.39 899.236,1209.88 899.823,1207.69 900.409,1211.46 900.996,1210.23 901.582,1209.1 902.168,1211.73 902.755,1212.11 903.341,1213.41 903.928,1214.69 904.514,1213.35 905.1,1214.72 905.687,1214.56 906.273,1213.31 906.86,1213.25 907.446,1211.96 908.032,1211.89 908.619,1210.59 909.205,1210.81 909.792,1209.72 910.378,1209.75 910.965,1211.16 911.551,1210.07 912.137,1207.97 912.724,1208.14 913.31,1206.03 913.897,1206.35 914.483,1208.07 915.069,1209.35 915.656,1209.53 916.242,1209.6 916.829,1208.64 917.415,1208.73 918.002,1207.48 918.588,1206.57 919.174,1205.74 919.761,1203.51 920.347,1203.95 920.934,1204.43 921.52,1206.34 922.106,1202.88 922.693,1204.63 923.279,1204.08 923.866,1204.41 924.452,1204.69 925.038,1206.45 925.625,1208.11 926.211,1209.6 926.798,1211.06 927.384,1208.91 927.971,1208.95 928.557,1210.08 929.143,1212.64 929.73,1212.74 930.316,1212.96 930.903,1214.24 931.489,1212.99 932.075,1213.02 932.662,1210.71 933.248,1209.44 933.835,1209.59 934.421,1210.91 935.007,1209.92 935.594,1210.12 936.18,1209.13 936.767,1210.31 937.353,1210.25 937.94,1211.7 938.526,1211.54 939.112,1211.56 939.699,1212.61 940.285,1213.49 940.872,1214.55 941.458,1212.88 942.044,1213.65 942.631,1213.74 943.217,1217.47 943.804,1216.1 944.39,1214.77 944.976,1214.57 945.563,1215.74 946.149,1214.34 946.736,1214.27 947.322,1214.38 947.909,1212.15 948.495,1209.59 949.081,1210.82 949.668,1209.78 950.254,1210.74 950.841,1213.09 951.427,1213.14 952.013,1213.08 952.6,1212.87 953.186,1213.09 953.773,1214.48 954.359,1215.67 954.945,1215.69 955.532,1217.78 956.118,1218.89 956.705,1218.48 957.291,1220.55 957.878,1220.31 958.464,1218.69 959.05,1218.5 959.637,1220.3 960.223,1220.04 960.81,1222.09 961.396,1222.91 961.982,1224.75 962.569,1226.52 963.155,1225.64 963.742,1227.57 964.328,1227.64 964.915,1226.73 965.501,1223.83 966.087,1223.07 966.674,1221.3 967.26,1219.47 967.847,1217.99 968.433,1217.98 969.019,1217.33 969.606,1219.68 970.192,1218.15 970.779,1217.88 971.365,1215.12 971.951,1215.18 972.538,1215.22 973.124,1212.64 973.711,1211.59 974.297,1211.42 974.884,1213.72 975.47,1213.48 976.056,1212.18 976.643,1212.03 977.229,1212.09 977.816,1211.98 978.402,1211.92 978.988,1214.16 979.575,1213.91 980.161,1209.86 980.748,1208.73 981.334,1209.09 981.92,1210.39 982.507,1209.07 983.093,1210.39 983.68,1210.83 984.266,1208.5 984.853,1208.8 985.439,1206.54 986.025,1206.71 986.612,1206.87 987.198,1205.84 987.785,1203.95 988.371,1204.53 988.957,1206.25 989.544,1205.63 990.13,1202.1 990.717,1202.74 991.303,1200.93 991.889,1200.43 992.476,1200.02 993.062,1201.94 993.649,1203.53 994.235,1204.42 994.822,1204.92 995.408,1205.25 995.994,1206.81 996.581,1207.17 997.167,1208.3 997.754,1208.79 998.34,1212.55 998.926,1211.21 999.513,1212.43 1000.1,1210.98 1000.69,1210.87 1001.27,1211.18 1001.86,1211.29 1002.44,1213.52 1003.03,1212.42 1003.62,1213.64 1004.2,1216.13 1004.79,1215.76 1005.38,1217.98 1005.96,1216.39 1006.55,1216.31 1007.14,1216.03 1007.72,1214.62 1008.31,1212.22 1008.9,1212.2 1009.48,1213.3 1010.07,1214.34 1010.65,1214.29 1011.24,1219.04 1011.83,1221.07 1012.41,1220.56 1013,1219.98 1013.59,1220.69 1014.17,1219.05 1014.76,1218.47 1015.35,1214.41 1015.93,1214.64 1016.52,1213.32 1017.11,1214.3 1017.69,1210.77 1018.28,1209.54 1018.86,1209.29 1019.45,1209.28 1020.04,1209.48 1020.62,1210.76 1021.21,1210.83 1021.8,1207.09 1022.38,1206.15 1022.97,1206.48 1023.56,1205.72 1024.14,1206.08 1024.73,1207.47 1025.32,1210.26 1025.9,1210.37 1026.49,1209.03 1027.07,1209.16 1027.66,1207.19 1028.25,1206.06 1028.83,1206.23 1029.42,1205.51 1030.01,1205.65 1030.59,1208.39 1031.18,1212.05 1031.77,1213.28 1032.35,1213.18 1032.94,1214.52 1033.52,1213.22 1034.11,1214.4 1034.7,1215.6 1035.28,1216.46 1035.87,1216.11 1036.46,1215.79 1037.04,1216.8 1037.63,1220.32 1038.22,1218.7 1038.8,1219.51 1039.39,1219.34 1039.98,1220.13 1040.56,1219.78 1041.15,1219.58 1041.73,1220.26 1042.32,1220.04 1042.91,1218.45 1043.49,1215.56 1044.08,1214.23 1044.67,1215.35 1045.25,1217.6 1045.84,1214.7 1046.43,1215.46 1047.01,1215.23 1047.6,1212.73 1048.19,1214.04 1048.77,1214.27 1049.36,1214.3 1049.94,1215.27 1050.53,1216.4 1051.12,1217.41 1051.7,1215.84 1052.29,1213.33 1052.88,1214.5 1053.46,1215.41 1054.05,1219.88 1054.64,1219.48 1055.22,1218.77 1055.81,1219.21 1056.39,1217.38 1056.98,1215.89 1057.57,1215.76 1058.15,1216.49 1058.74,1216.4 1059.33,1216.26 1059.91,1215.93 1060.5,1214.66 1061.09,1213.45 1061.67,1213.27 1062.26,1213.19 1062.85,1212.94 1063.43,1212.79 1064.02,1212.84 1064.6,1212.51 1065.19,1214.91 1065.78,1213.65 1066.36,1214.73 1066.95,1214.6 1067.54,1214.64 1068.12,1215.53 1068.71,1214.15 1069.3,1210.4 1069.88,1211.82 1070.47,1214.31 1071.06,1213.1 1071.64,1213.14 1072.23,1213.04 1072.81,1211.55 1073.4,1211.67 1073.99,1210.52 1074.57,1211.64 1075.16,1209.33 1075.75,1209.31 1076.33,1209.41 1076.92,1208.03 1077.51,1206.96 1078.09,1205.91 1078.68,1206.56 1079.26,1206.75 1079.85,1206.78 1080.44,1204.71 1081.02,1205.19 1081.61,1209.32 1082.2,1208.3 1082.78,1207.3 1083.37,1205.28 1083.96,1205.56 1084.54,1205.91 1085.13,1205.21 1085.72,1207.87 1086.3,1209.51 1086.89,1208.78 1087.47,1210.33 1088.06,1211.67 1088.65,1211.68 1089.23,1213.99 1089.82,1213.83 1090.41,1214.94 1090.99,1215.15 1091.58,1217.38 1092.17,1215.81 1092.75,1215.63 1093.34,1212.17 1093.93,1213.48 1094.51,1213.21 1095.1,1214.31 1095.68,1217.47 1096.27,1215.79 1096.86,1216.81 1097.44,1217.82 1098.03,1216.37 1098.62,1216.26 1099.2,1213.67 1099.79,1214.57 1100.38,1215.57 1100.96,1209.63 1101.55,1212.24 1102.14,1213.41 1102.72,1212.03 1103.31,1210.63 1103.89,1210.65 1104.48,1210.57 1105.07,1210.56 1105.65,1210.34 1106.24,1210.29 1106.83,1211.62 1107.41,1210.38 1108,1210.64 1108.59,1211.68 1109.17,1210.4 1109.76,1211.76 1110.34,1206.83 1110.93,1207.22 1111.52,1201.64 1112.1,1204.56 1112.69,1205.02 1113.28,1205.4 1113.86,1205.62 1114.45,1204.97 1115.04,1205.19 1115.62,1201.97 1116.21,1200.18 1116.8,1201.91 1117.38,1201.25 1117.97,1200.78 1118.55,1201.55 1119.14,1203.48 1119.73,1205.33 1120.31,1206.88 1120.9,1206 1121.49,1205.18 1122.07,1204.79 1122.66,1203.83 1123.25,1205.59 1123.83,1207.11 1124.42,1207.07 1125.01,1207.41 1125.59,1206.47 1126.18,1206.76 1126.76,1207.17 1127.35,1207.28 1127.94,1208.79 1128.52,1208.63 1129.11,1209.86 1129.7,1208.67 1130.28,1209.95 1130.87,1210.22 1131.46,1210.34 1132.04,1211.45 1132.63,1211.75 1133.21,1211.65 1133.8,1211.82 1134.39,1215.32 1134.97,1212.78 1135.56,1212.69 1136.15,1215.01 1136.73,1213.81 1137.32,1212.62 1137.91,1211.42 1138.49,1214.92 1139.08,1214.87 1139.67,1212.08 1140.25,1212.4 1140.84,1213.51 1141.42,1215.87 1142.01,1216.96 1142.6,1214.24 1143.18,1211.83 1143.77,1212.92 1144.36,1214.07 1144.94,1212.66 1145.53,1212.64 1146.12,1213.57 1146.7,1213.51 1147.29,1214.87 1147.88,1217.07 1148.46,1216.99 1149.05,1216.5 1149.63,1216.15 1150.22,1213.55 1150.81,1212.21 1151.39,1212.2 1151.98,1214.64 1152.57,1217.03 1153.15,1218.16 1153.74,1217.89 1154.33,1216.59 1154.91,1217.26 1155.5,1214.68 1156.09,1214.83 1156.67,1215.65 1157.26,1215.33 1157.84,1211.48 1158.43,1211.2 1159.02,1212.28 1159.6,1211.3 1160.19,1212.46 1160.78,1212.32 1161.36,1215.79 1161.95,1212.86 1162.54,1212.65 1163.12,1211.41 1163.71,1210.14 1164.29,1212.43 1164.88,1212.36 1165.47,1213.49 1166.05,1214.47 1166.64,1215.56 1167.23,1214.27 1167.81,1216.34 1168.4,1214.82 1168.99,1216.98 1169.57,1216.78 1170.16,1219.01 1170.75,1217.11 1171.33,1214.61 1171.92,1214.34 1172.5,1212.69 1173.09,1210.26 1173.68,1214.96 1174.26,1217.07 1174.85,1215.47 1175.44,1214.02 1176.02,1211.5 1176.61,1211.68 1177.2,1211.77 1177.78,1213.13 1178.37,1213.37 1178.96,1213.31 1179.54,1214.62 1180.13,1215.7 1180.71,1215.55 1181.3,1214.09 1181.89,1214.11 1182.47,1215.11 1183.06,1214.92 1183.65,1213.5 1184.23,1212.18 1184.82,1210.54 1185.41,1210.88 1185.99,1210.89 1186.58,1210.89 1187.16,1212.25 1187.75,1211.14 1188.34,1211.03 1188.92,1207.5 1189.51,1210.01 1190.1,1211.3 1190.68,1211.23 1191.27,1211.38 1191.86,1213.83 1192.44,1213.59 1193.03,1214.59 1193.62,1211.75 1194.2,1211.87 1194.79,1212.13 1195.37,1213.28 1195.96,1212.99 1196.55,1212.84 1197.13,1210.34 1197.72,1211.41 1198.31,1210.13 1198.89,1209.08 1199.48,1209.45 1200.07,1209.54 1200.65,1209.72 1201.24,1210.58 1201.83,1210.57 1202.41,1208.2 1203,1209.69 1203.58,1210.9 1204.17,1212.03 1204.76,1212.03 1205.34,1211.97 1205.93,1214.22 1206.52,1211.73 1207.1,1209.29 1207.69,1212.06 1208.28,1211.86 1208.86,1211.84 1209.45,1211.95 1210.03,1211.83 1210.62,1212.97 1211.21,1214.13 1211.79,1215.46 1212.38,1215.36 1212.97,1213.74 1213.55,1212.47 1214.14,1214.8 1214.73,1214.89 1215.31,1213.55 1215.9,1212.35 1216.49,1212.29 1217.07,1213.3 1217.66,1213.34 1218.24,1211.93 1218.83,1210.79 1219.42,1213.13 1220,1214.41 1220.59,1216.86 1221.18,1213.12 1221.76,1214.4 1222.35,1214.21 1222.94,1212.91 1223.52,1215.26 1224.11,1215.1 1224.7,1215.18 1225.28,1216.04 1225.87,1215.78 1226.45,1215.58 1227.04,1217.67 1227.63,1217.2 1228.21,1214.33 1228.8,1214.98 1229.39,1215.89 1229.97,1214.24 1230.56,1215.02 1231.15,1214.81 1231.73,1213.56 1232.32,1211.26 1232.91,1211.1 1233.49,1210.09 1234.08,1209.14 1234.66,1209.41 1235.25,1208.31 1235.84,1209.51 1236.42,1212.74 1237.01,1212.63 1237.6,1213.78 1238.18,1215.93 1238.77,1215.41 1239.36,1215.04 1239.94,1210.09 1240.53,1210.09 1241.11,1209.03 1241.7,1210.41 1242.29,1210.48 1242.87,1211.67 1243.46,1211.63 1244.05,1210.12 1244.63,1208.85 1245.22,1210.53 1245.81,1211.68 1246.39,1213.84 1246.98,1213.76 1247.57,1214.71 1248.15,1215.63 1248.74,1215.52 1249.32,1212.98 1249.91,1212.88 1250.5,1213.95 1251.08,1216.09 1251.67,1214.67 1252.26,1213.45 1252.84,1214.78 1253.43,1214.55 1254.02,1212.05 1254.6,1212.96 1255.19,1211.84 1255.78,1211.93 1256.36,1214.38 1256.95,1217.85 1257.53,1216.53 1258.12,1216.26 1258.71,1216.02 1259.29,1217.03 1259.88,1215.48 1260.47,1215.28 1261.05,1211.63 1261.64,1213.01 1262.23,1211.78 1262.81,1211.76 1263.4,1208.32 1263.98,1210.88 1264.57,1206.14 1265.16,1207.55 1265.74,1202.98 1266.33,1202.27 1266.92,1202.8 1267.5,1204.47 1268.09,1205.04 1268.68,1209.03 1269.26,1210.3 1269.85,1209.11 1270.44,1205.97 1271.02,1206.17 1271.61,1206.46 1272.19,1210.25 1272.78,1210.17 1273.37,1212.58 1273.95,1212.57 1274.54,1213.66 1275.13,1212.41 1275.71,1211.2 1276.3,1212.48 1276.89,1212.4 1277.47,1212.32 1278.06,1211.23 1278.65,1210.39 1279.23,1208.13 1279.82,1208.24 1280.4,1210.83 1280.99,1211.08 1281.58,1209.83 1282.16,1212.45 1282.75,1213.74 1283.34,1213.62 1283.92,1213.52 1284.51,1213.37 1285.1,1214.4 1285.68,1213.13 1286.27,1213.19 1286.86,1215.45 1287.44,1214.03 1288.03,1217.65 1288.61,1218.29 1289.2,1216.57 1289.79,1217.48 1290.37,1218.46 1290.96,1218.21 1291.55,1218.08 1292.13,1220.22 1292.72,1218.49 1293.31,1221.5 1293.89,1222.27 1294.48,1225.46 1295.06,1226.02 1295.65,1225.23 1296.24,1225.71 1296.82,1222.79 1297.41,1222.36 1298,1222.93 1298.58,1221.4 1299.17,1219.75 1299.76,1216.93 1300.34,1217.53 1300.93,1218.46 1301.52,1218.33 1302.1,1219.09 1302.69,1217.6 1303.27,1217.55 1303.86,1217.45 1304.45,1214.72 1305.03,1214.61 1305.62,1215.56 1306.21,1214.12 1306.79,1212.73 1307.38,1211.44 1307.97,1211.34 1308.55,1213.57 1309.14,1212.26 1309.73,1212.12 1310.31,1212.26 1310.9,1211.16 1311.48,1210.09 1312.07,1212.34 1312.66,1213.63 1313.24,1213.62 1313.83,1211.29 1314.42,1212.57 1315,1209.26 1315.59,1207.12 1316.18,1204.68 1316.76,1204.01 1317.35,1205.64 1317.93,1207.14 1318.52,1203.64 1319.11,1201.85 1319.69,1203.8 1320.28,1200.62 1320.87,1198.81 1321.45,1198.4 1322.04,1198.05 1322.63,1198.99 1323.21,1203.46 1323.8,1200.13 1324.39,1201.76 1324.97,1203.68 1325.56,1203.74 1326.14,1206.71 1326.73,1207.11 1327.32,1208.34 1327.9,1209.72 1328.49,1208.69 1329.08,1211.13 1329.66,1213.52 1330.25,1213.29 1330.84,1215.56 1331.42,1217.75 1332.01,1217.46 1332.6,1214.88 1333.18,1215.1 1333.77,1214.03 1334.35,1212.71 1334.94,1210.53 1335.53,1208.05 1336.11,1206.88 1336.7,1208.31 1337.29,1206.87 1337.87,1209.62 1338.46,1210.9 1339.05,1211.06 1339.63,1210.84 1340.22,1210 1340.8,1210.16 1341.39,1207.67 1341.98,1209.1 1342.56,1207.97 1343.15,1211.41 1343.74,1210.08 1344.32,1214.61 1344.91,1214.16 1345.5,1216.23 1346.08,1218.6 1346.67,1215.93 1347.26,1214.6 1347.84,1214.53 1348.43,1211.93 1349.01,1214.45 1349.6,1215.67 1350.19,1214.24 1350.77,1211.85 1351.36,1211.42 1351.95,1209.08 1352.53,1210.23 1353.12,1211.56 1353.71,1211.49 1354.29,1211.39 1354.88,1211.75 1355.47,1211.71 1356.05,1208.13 1356.64,1208.31 1357.22,1211.27 1357.81,1212.84 1358.4,1212.7 1358.98,1211.51 1359.57,1211.77 1360.16,1210.55 1360.74,1209.19 1361.33,1209.62 1361.92,1209.55 1362.5,1213.32 1363.09,1214.49 1363.68,1215.62 1364.26,1214.19 1364.85,1216.72 1365.43,1218.83 1366.02,1217.07 1366.61,1217.12 1367.19,1216.95 1367.78,1217.9 1368.37,1216.29 1368.95,1217.25 1369.54,1216.87 1370.13,1216.63 1370.71,1215.15 1371.3,1215.03 1371.88,1215.95 1372.47,1216.94 1373.06,1220.09 1373.64,1218.73 1374.23,1217.01 1374.82,1216.82 1375.4,1216.74 1375.99,1217.61 1376.58,1214.99 1377.16,1212.5 1377.75,1211.19 1378.34,1212.35 1378.92,1207.47 1379.51,1206.66 1380.09,1203.53 1380.68,1204.02 1381.27,1204.32 1381.85,1204.7 1382.44,1204.16 1383.03,1204.44 1383.61,1203.6 1384.2,1204.04 1384.79,1205.69 1385.37,1206.01 1385.96,1203.76 1386.55,1204.16 1387.13,1203.03 1387.72,1203.55 1388.3,1208.94 1388.89,1208.09 1389.48,1207.14 1390.06,1207.21 1390.65,1208.45 1391.24,1209.63 1391.82,1209.75 1392.41,1209.89 1393,1208.7 1393.58,1206.68 1394.17,1205.8 1394.75,1207.32 1395.34,1207.59 1395.93,1208.88 1396.51,1210.27 1397.1,1207.99 1397.69,1208.99 1398.27,1210.55 1398.86,1209.68 1399.45,1210 1400.03,1210.18 1400.62,1207.83 1401.21,1208.18 1401.79,1208.53 1402.38,1209.97 1402.96,1209.08 1403.55,1210.63 1404.14,1210.99 1404.72,1209.91 1405.31,1209.83 1405.9,1209.87 1406.48,1210.99 1407.07,1210.2 1407.66,1209.07 1408.24,1210.25 1408.83,1209.17 1409.42,1209.29 1410,1208.29 1410.59,1207.47 1411.17,1206.55 1411.76,1208.16 1412.35,1208.32 1412.93,1206.5 1413.52,1206.98 1414.11,1207.43 1414.69,1207.81 1415.28,1209.27 1415.87,1210.71 1416.45,1209.67 1417.04,1208.45 1417.63,1209.5 1418.21,1209.72 1418.8,1209.8 1419.38,1206.29 1419.97,1208.2 1420.56,1208.55 1421.14,1209.09 1421.73,1212.63 1422.32,1212.48 1422.9,1213.85 1423.49,1213.67 1424.08,1217.15 1424.66,1216.84 1425.25,1215.68 1425.83,1214.21 1426.42,1212.77 1427.01,1213.03 1427.59,1211.95 1428.18,1214.61 1428.77,1213.23 1429.35,1214.38 1429.94,1211.74 1430.53,1210.69 1431.11,1208.41 1431.7,1207.59 1432.29,1209.03 1432.87,1208.12 1433.46,1206.14 1434.04,1205.54 1434.63,1206.95 1435.22,1206.04 1435.8,1207.48 1436.39,1210.04 1436.98,1210.17 1437.56,1209.35 1438.15,1208.15 1438.74,1209.31 1439.32,1209.55 1439.91,1210.9 1440.5,1211.28 1441.08,1208.95 1441.67,1207.77 1442.25,1210.52 1442.84,1208.18 1443.43,1210.58 1444.01,1211.83 1444.6,1213 1445.19,1211.81 1445.77,1214.16 1446.36,1215.2 1446.95,1212.74 1447.53,1211.78 1448.12,1210.5 1448.7,1210.27 1449.29,1211.78 1449.88,1210.72 1450.46,1212.03 1451.05,1212.06 1451.64,1211.97 1452.22,1213.14 1452.81,1215.38 1453.4,1214.02 1453.98,1216.26 1454.57,1213.84 1455.16,1213.5 1455.74,1211.99 1456.33,1210.82 1456.91,1210.81 1457.5,1209.65 1458.09,1213.38 1458.67,1214.42 1459.26,1213.14 1459.85,1213.01 1460.43,1212.77 1461.02,1213.8 1461.61,1211.22 1462.19,1212.67 1462.78,1212.78 1463.37,1212.58 1463.95,1212.45 1464.54,1213.5 1465.12,1213.41 1465.71,1213.22 1466.3,1210.65 1466.88,1208.66 1467.47,1209.25 1468.06,1209.67 1468.64,1208.67 1469.23,1208.86 1469.82,1206.82 1470.4,1207.05 1470.99,1208.43 1471.57,1209.94 1472.16,1212.43 1472.75,1215.12 1473.33,1215.96 1473.92,1215.72 1474.51,1216.75 1475.09,1220.21 1475.68,1222.01 1476.27,1220.57 1476.85,1227 1477.44,1226.24 1478.03,1223.2 1478.61,1222.36 1479.2,1221.7 1479.78,1222.23 1480.37,1220.32 1480.96,1221.01 1481.54,1220.55 1482.13,1218.8 1482.72,1218.58 1483.3,1214.52 1483.89,1214.55 1484.48,1211.96 1485.06,1213.05 1485.65,1214.31 1486.24,1217.75 1486.82,1218.59 1487.41,1219.4 1487.99,1217.59 1488.58,1212.58 1489.17,1213.61 1489.75,1212.1 1490.34,1212.1 1490.93,1209.49 1491.51,1209.69 1492.1,1207.49 1492.69,1205.27 1493.27,1206.71 1493.86,1209.31 1494.45,1209.31 1495.03,1209.32 1495.62,1210.58 1496.2,1211.95 1496.79,1210.83 1497.38,1207.21 1497.96,1206.23 1498.55,1207.68 1499.14,1206.87 1499.72,1208.42 1500.31,1213.25 1500.9,1214.19 1501.48,1214.08 1502.07,1212.77 1502.65,1211.43 1503.24,1213.79 1503.83,1214.93 1504.41,1212.34 1505,1213.58 1505.59,1214.32 1506.17,1215.18 1506.76,1216.03 1507.35,1212.27 1507.93,1209.82 1508.52,1211.08 1509.11,1211.04 1509.69,1209.76 1510.28,1209.82 1510.86,1211.28 1511.45,1210.19 1512.04,1210.52 1512.62,1212.81 1513.21,1212.68 1513.8,1212.62 1514.38,1211.31 1514.97,1212.39 1515.56,1210.91 1516.14,1211.03 1516.73,1210.06 1517.32,1209.92 1517.9,1211.09 1518.49,1209.8 1519.07,1210.76 1519.66,1210.87 1520.25,1210.59 1520.83,1212.01 1521.42,1211.92 1522.01,1211.95 1522.59,1213.07 1523.18,1212.87 1523.77,1215.18 1524.35,1217.07 1524.94,1215.65 1525.52,1218.89 1526.11,1218.44 1526.7,1219.41 1527.28,1220.21 1527.87,1219.9 1528.46,1219.35 1529.04,1221.32 1529.63,1222.7 1530.22,1223.57 1530.8,1219.34 1531.39,1217.66 1531.98,1218.39 1532.56,1215.67 1533.15,1216.64 1533.73,1215.12 1534.32,1216.22 1534.91,1216.09 1535.49,1217.16 1536.08,1216.8 1536.67,1215.37 1537.25,1215.21 1537.84,1214.93 1538.43,1212.12 1539.01,1209.37 1539.6,1208.35 1540.19,1207.34 1540.77,1209.77 1541.36,1212.35 1541.94,1210.97 1542.53,1212.28 1543.12,1212.4 1543.7,1212.35 1544.29,1211.29 1544.88,1211.44 1545.46,1207.9 1546.05,1209.29 1546.64,1207.13 1547.22,1207.27 1547.81,1208.61 1548.4,1212.51 1548.98,1212.45 1549.57,1210.15 1550.15,1210.08 1550.74,1208.96 1551.33,1208.73 1551.91,1209.88 1552.5,1212.4 1553.09,1208.91 1553.67,1210.4 1554.26,1210.6 1554.85,1210.75 1555.43,1211.71 1556.02,1211.91 1556.6,1210.82 1557.19,1212.11 1557.78,1212.3 1558.36,1215.77 1558.95,1215.62 1559.54,1215.5 1560.12,1214.14 1560.71,1214.13 1561.3,1213.82 1561.88,1213.64 1562.47,1214.71 1563.06,1212.05 1563.64,1211.92 1564.23,1210.42 1564.81,1208.14 1565.4,1208.6 1565.99,1208.6 1566.57,1207.61 1567.16,1206.57 1567.75,1205.7 1568.33,1208.7 1568.92,1210.08 1569.51,1211.11 1570.09,1211.13 1570.68,1208.71 1571.27,1208.77 1571.85,1211.59 1572.44,1213.68 1573.02,1213.86 1573.61,1213.69 1574.2,1217.09 1574.78,1215.74 1575.37,1215.34 1575.96,1215.1 1576.54,1213.8 1577.13,1208.86 1577.72,1209.02 1578.3,1206.77 1578.89,1206.84 1579.47,1206.99 1580.06,1203.67 1580.65,1205.48 1581.23,1204.59 1581.82,1205.76 1582.41,1203.65 1582.99,1202.72 1583.58,1205.7 1584.17,1208.46 1584.75,1210.96 1585.34,1212.18 1585.93,1212.16 1586.51,1210.01 1587.1,1208.91 1587.68,1207.9 1588.27,1209.65 1588.86,1208.82 1589.44,1206.59 1590.03,1207.05 1590.62,1207.56 1591.2,1209.02 1591.79,1210.47 1592.38,1210.5 1592.96,1206.95 1593.55,1203.3 1594.14,1202.6 1594.72,1204.41 1595.31,1208.18 1595.89,1207.11 1596.48,1208.29 1597.07,1209.66 1597.65,1207.25 1598.24,1207.65 1598.83,1209.22 1599.41,1209.22 1600,1206.91 1600.59,1203.47 1601.17,1206.35 1601.76,1209.25 1602.34,1209.21 1602.93,1209.23 1603.52,1209.51 1604.1,1212.21 1604.69,1212.02 1605.28,1206.2 1605.86,1205.16 1606.45,1205.56 1607.04,1205.88 1607.62,1207.4 1608.21,1207.62 1608.8,1207.83 1609.38,1209.31 1609.97,1209.61 1610.55,1210.92 1611.14,1211.08 1611.73,1211.04 1612.31,1209.73 1612.9,1209.73 1613.49,1209.69 1614.07,1211.13 1614.66,1211.3 1615.25,1210.06 1615.83,1209.21 1616.42,1209.49 1617.01,1209.69 1617.59,1211.17 1618.18,1211.11 1618.76,1210.02 1619.35,1209.92 1619.94,1211.21 1620.52,1208.74 1621.11,1208.83 1621.7,1206.6 1622.28,1208.29 1622.87,1207.51 1623.46,1207.69 1624.04,1209.17 1624.63,1208.24 1625.22,1207.19 1625.8,1207.38 1626.39,1206.43 1626.97,1209.06 1627.56,1208.96 1628.15,1206.61 1628.73,1208.14 1629.32,1210.83 1629.91,1210.9 1630.49,1209.82 1631.08,1212.21 1631.67,1212.07 1632.25,1211.87 1632.84,1213.06 1633.42,1213.87 1634.01,1213.86 1634.6,1211.43 1635.18,1212.63 1635.77,1212.53 1636.36,1212.27 1636.94,1213.57 1637.53,1211 1638.12,1208.58 1638.7,1208.51 1639.29,1208.68 1639.88,1208.87 1640.46,1211.62 1641.05,1209.4 1641.63,1209.66 1642.22,1208.56 1642.81,1208.64 1643.39,1211.31 1643.98,1210.22 1644.57,1209.03 1645.15,1208.06 1645.74,1207.01 1646.33,1208.48 1646.91,1207.4 1647.5,1207.55 1648.09,1207.82 1648.67,1209.41 1649.26,1209.84 1649.84,1209.85 1650.43,1210.24 1651.02,1211.33 1651.6,1214.95 1652.19,1215.04 1652.78,1213.68 1653.36,1215.93 1653.95,1218.16 1654.54,1219 1655.12,1218.47 1655.71,1218.24 1656.29,1216.56 1656.88,1217.62 1657.47,1217.47 1658.05,1218.59 1658.64,1220.54 1659.23,1219.05 1659.81,1219.85 1660.4,1220.81 1660.99,1221.44 1661.57,1219.74 1662.16,1220.51 1662.75,1218.91 1663.33,1219.71 1663.92,1219.52 1664.5,1219.13 1665.09,1215.24 1665.68,1214.14 1666.26,1212.72 1666.85,1213.73 1667.44,1212.39 1668.02,1211.16 1668.61,1211.04 1669.2,1210.28 1669.78,1211.62 1670.37,1210.44 1670.96,1210.44 1671.54,1211.78 1672.13,1210.3 1672.71,1210.18 1673.3,1209.25 1673.89,1209.64 1674.47,1208.66 1675.06,1209.08 1675.65,1209.33 1676.23,1208.03 1676.82,1209.6 1677.41,1205.95 1677.99,1206.19 1678.58,1205.4 1679.17,1205.71 1679.75,1207.18 1680.34,1206.41 1680.92,1205.53 1681.51,1205.53 1682.1,1209.4 1682.68,1209.48 1683.27,1207.1 1683.86,1207.55 1684.44,1207.71 1685.03,1205.33 1685.62,1204.39 1686.2,1202.52 1686.79,1201.48 1687.37,1203.25 1687.96,1203.41 1688.55,1202.56 1689.13,1205.37 1689.72,1205.53 1690.31,1206.19 1690.89,1204.61 1691.48,1204.93 1692.07,1206.62 1692.65,1205.6 1693.24,1207.02 1693.83,1207.35 1694.41,1206.52 1695,1206.75 1695.58,1209.41 1696.17,1212.15 1696.76,1211.86 1697.34,1213 1697.93,1215.06 1698.52,1213.4 1699.1,1216.81 1699.69,1216.39 1700.28,1213.78 1700.86,1212.38 1701.45,1212.29 1702.04,1214.61 1702.62,1215.65 1703.21,1216.99 1703.79,1214.13 1704.38,1211.49 1704.97,1211.43 1705.55,1212.71 1706.14,1212.67 1706.73,1212.73 1707.31,1209.21 1707.9,1209.42 1708.49,1210.7 1709.07,1211.03 1709.66,1209.68 1710.24,1210.95 1710.83,1212.29 1711.42,1212.3 1712,1211.13 1712.59,1211.12 1713.18,1210.98 1713.76,1207.52 1714.35,1208.98 1714.94,1210.3 1715.52,1208.87 1716.11,1207.68 1716.7,1209.26 1717.28,1210.78 1717.87,1209.58 1718.45,1207.22 1719.04,1208.72 1719.63,1210.02 1720.21,1211.57 1720.8,1212.78 1721.39,1215.27 1721.97,1216.2 1722.56,1217.07 1723.15,1218.11 1723.73,1219.05 1724.32,1216.03 1724.91,1215.6 1725.49,1217.54 1726.08,1217.47 1726.66,1216.12 1727.25,1216.75 1727.84,1215.26 1728.42,1214.93 1729.01,1214.91 1729.6,1215.85 1730.18,1213.33 1730.77,1214.38 1731.36,1214.01 1731.94,1212.75 1732.53,1213.78 1733.11,1212.6 1733.7,1213.71 1734.29,1213.51 1734.87,1213.31 1735.46,1213.33 1736.05,1212.93 1736.63,1210.41 1737.22,1210.46 1737.81,1210.6 1738.39,1213.85 1738.98,1213.46 1739.57,1213.4 1740.15,1216.92 1740.74,1215.29 1741.32,1215.37 1741.91,1216.57 1742.5,1215.37 1743.08,1216.23 1743.67,1217.01 1744.26,1216.66 1744.84,1216.44 1745.43,1213.73 1746.02,1211.26 1746.6,1214.81 1747.19,1216.63 1747.78,1212.89 1748.36,1211.26 1748.95,1213.62 1749.53,1218.22 1750.12,1213.13 1750.71,1214.1 1751.29,1215.19 1751.88,1215.15 1752.47,1214.95 1753.05,1214.79 1753.64,1213.41 1754.23,1213.39 1754.81,1213.4 1755.4,1210.84 1755.99,1211.19 1756.57,1211.28 1757.16,1210.19 1757.74,1211.35 1758.33,1211.27 1758.92,1211.16 1759.5,1212.15 1760.09,1211.95 1760.68,1211.92 1761.26,1212.96 1761.85,1213.96 1762.44,1216.22 1763.02,1216.27 1763.61,1215.08 1764.19,1214.71 1764.78,1214.58 1765.37,1215.52 1765.95,1215.46 1766.54,1218.56 1767.13,1217.03 1767.71,1215.45 1768.3,1215.28 1768.89,1216.38 1769.47,1217.15 1770.06,1216.68 1770.65,1217.54 1771.23,1214.77 1771.82,1213.26 1772.4,1212.2 1772.99,1213.13 1773.58,1214.17 1774.16,1213.97 1774.75,1211.52 1775.34,1210.5 1775.92,1211.62 1776.51,1210.34 1777.1,1211.61 1777.68,1210.62 1778.27,1212.01 1778.86,1210.93 1779.44,1209.57 1780.03,1208.63 1780.61,1207.55 1781.2,1210.05 1781.79,1208.89 1782.37,1207.71 1782.96,1206.78 1783.55,1206.74 1784.13,1205.59 1784.72,1205.91 1785.31,1206.06 1785.89,1206.22 1786.48,1206.35 1787.06,1204.21 1787.65,1204.41 1788.24,1207.29 1788.82,1206.24 1789.41,1205.51 1790,1206.92 1790.58,1207.02 1791.17,1207.36 1791.76,1207.38 1792.34,1210.26 1792.93,1210.53 1793.52,1210.85 1794.1,1210.95 1794.69,1211.25 1795.27,1212.14 1795.86,1210.95 1796.45,1212.13 1797.03,1211.95 1797.62,1209.58 1798.21,1208.32 1798.79,1207.23 1799.38,1206.33 1799.97,1208.96 1800.55,1208.01 1801.14,1209.55 1801.73,1212.14 1802.31,1214.77 1802.9,1213.55 1803.48,1214.81 1804.07,1212.25 1804.66,1213.38 1805.24,1210.93 1805.83,1208.54 1806.42,1206.4 1807,1206.73 1807.59,1204.78 1808.18,1203.9 1808.76,1205.5 1809.35,1202.21 1809.94,1204.07 1810.52,1204.69 1811.11,1206.19 1811.69,1206.35 1812.28,1207.87 1812.87,1208.37 1813.45,1212.34 1814.04,1212.36 1814.63,1213.39 1815.21,1211.04 1815.8,1210.37 1816.39,1209.21 1816.97,1209.48 1817.56,1210.9 1818.14,1210.88 1818.73,1211.05 1819.32,1210.49 1819.9,1213.15 1820.49,1209.58 1821.08,1208.5 1821.66,1208.94 1822.25,1209.06 1822.84,1208.2 1823.42,1208.22 1824.01,1209.83 1824.6,1210.2 1825.18,1209.18 1825.77,1209.34 1826.35,1208.37 1826.94,1208.6 1827.53,1205.25 1828.11,1206.63 1828.7,1208.18 1829.29,1207.47 1829.87,1207.8 1830.46,1207.93 1831.05,1206.77 1831.63,1209.51 1832.22,1209.48 1832.81,1210.8 1833.39,1214.06 1833.98,1213.69 1834.56,1214.71 1835.15,1214.47 1835.74,1211.86 1836.32,1213 1836.91,1214.15 1837.5,1213.97 1838.08,1212.56 1838.67,1212.58 1839.26,1212.63 1839.84,1214.61 1840.43,1214.7 1841.01,1213.24 1841.6,1212.07 1842.19,1214.2 1842.77,1216.63 1843.36,1219.91 1843.95,1218.26 1844.53,1216.79 1845.12,1216.45 1845.71,1216.27 1846.29,1213.36 1846.88,1212.06 1847.47,1213.14 1848.05,1213.12 1848.64,1213.26 1849.22,1211.77 1849.81,1210.52 1850.4,1211.65 1850.98,1210.31 1851.57,1211.68 1852.16,1213.09 1852.74,1214.1 1853.33,1215.18 1853.92,1214.91 1854.5,1215.58 1855.09,1216.39 1855.68,1214.85 1856.26,1215.55 1856.85,1214.16 1857.43,1212.72 1858.02,1212.6 1858.61,1213.63 1859.19,1215.85 1859.78,1215.52 1860.37,1216.52 1860.95,1216.12 1861.54,1215.71 1862.13,1215.68 1862.71,1215.54 1863.3,1215.36 1863.88,1217.38 1864.47,1213.53 1865.06,1212.2 1865.64,1213.53 1866.23,1215.97 1866.82,1217.05 1867.4,1216.78 1867.99,1215.38 1868.58,1213.74 1869.16,1214.76 1869.75,1213.33 1870.34,1213.22 1870.92,1211.85 1871.51,1211.92 1872.09,1211.87 1872.68,1213.07 1873.27,1214.37 1873.85,1215.37 1874.44,1212.8 1875.03,1212.63 1875.61,1212.31 1876.2,1210.89 1876.79,1210.86 1877.37,1210.94 1877.96,1211.97 1878.55,1213.1 1879.13,1213.05 1879.72,1213.11 1880.3,1211.88 1880.89,1213.01 1881.48,1214 1882.06,1214.94 1882.65,1214.7 1883.24,1214.37 1883.82,1212.81 1884.41,1213.96 1885,1213.54 1885.58,1213.28 1886.17,1214.32 1886.76,1211.79 1887.34,1212.94 1887.93,1214.23 1888.51,1213.01 1889.1,1213.17 1889.69,1216.48 1890.27,1212.65 1890.86,1214.12 1891.45,1210.32 1892.03,1212.9 1892.62,1211.56 1893.21,1213.01 1893.79,1211.95 1894.38,1215.86 1894.96,1216.84 1895.55,1216.48 1896.14,1214.75 1896.72,1215.68 1897.31,1213.07 1897.9,1210.47 1898.48,1211.85 1899.07,1210.55 1899.66,1210.54 1900.24,1212.98 1900.83,1212.76 1901.42,1214.83 1902,1214.47 1902.59,1212.08 1903.17,1209.4 1903.76,1211.57 1904.35,1214.08 1904.93,1212.8 1905.52,1210.27 1906.11,1208.02 1906.69,1206.88 1907.28,1206.04 1907.87,1206.3 1908.45,1208.03 1909.04,1209.26 1909.63,1209.38 1910.21,1211.67 1910.8,1210.18 1911.38,1211.61 1911.97,1212.85 1912.56,1212.78 1913.14,1211.65 1913.73,1210.52 1914.32,1211.73 1914.9,1212.74 1915.49,1212.73 1916.08,1211.31 1916.66,1212.67 1917.25,1215.23 1917.83,1214.85 1918.42,1215.93 1919.01,1218.08 1919.59,1216.39 1920.18,1215.16 1920.77,1217.11 1921.35,1215.71 1921.94,1215.51 1922.53,1216.62 1923.11,1218.66 1923.7,1218.15 1924.29,1219.1 1924.87,1217.66 1925.46,1216.04 1926.04,1214.72 1926.63,1216.8 1927.22,1216.45 1927.8,1216.03 1928.39,1215.85 1928.98,1211.91 1929.56,1210.4 1930.15,1208.08 1930.74,1210.73 1931.32,1211.98 1931.91,1214.26 1932.5,1215.46 1933.08,1213.04 1933.67,1211.81 1934.25,1215.38 1934.84,1217.54 1935.43,1216.31 1936.01,1216.16 1936.6,1213.95 1937.19,1212.75 1937.77,1214.92 1938.36,1211.08 1938.95,1208.65 1939.53,1206.43 1940.12,1205.3 1940.71,1207.09 1941.29,1211.13 1941.88,1210.08 1942.46,1213.88 1943.05,1212.71 1943.64,1212.68 1944.22,1213.64 1944.81,1213.83 1945.4,1212.7 1945.98,1211.1 1946.57,1209.76 1947.16,1212.35 1947.74,1211.13 1948.33,1211.16 1948.91,1212.42 1949.5,1213.52 1950.09,1215.56 1950.67,1214.11 1951.26,1213.18 1951.85,1216.62 1952.43,1215.23 1953.02,1215.1 1953.61,1215.13 1954.19,1215.07 1954.78,1213.67 1955.37,1214.77 1955.95,1214.65 1956.54,1211.98 1957.12,1210.58 1957.71,1210.56 1958.3,1210.83 1958.88,1208.43 1959.47,1208.79 1960.06,1210.16 1960.64,1211.43 1961.23,1211.4 1961.82,1212.69 1962.4,1212.89 1962.99,1214 1963.58,1212.66 1964.16,1211.56 1964.75,1212.76 1965.33,1212.45 1965.92,1214.85 1966.51,1215.88 1967.09,1214.59 1967.68,1215.63 1968.27,1216.59 1968.85,1217.26 1969.44,1216.92 1970.03,1215.27 1970.61,1214.81 1971.2,1214.73 1971.78,1213.16 1972.37,1211.69 1972.96,1214.1 1973.54,1213.08 1974.13,1210.63 1974.72,1206.93 1975.3,1209.81 1975.89,1208.75 1976.48,1209.01 1977.06,1207.89 1977.65,1208.04 1978.24,1207.07 1978.82,1207.39 1979.41,1206.58 1979.99,1207.97 1980.58,1207.09 1981.17,1203.77 1981.75,1203.16 1982.34,1206.2 1982.93,1206.71 1983.51,1207.16 1984.1,1203.56 1984.69,1202.99 1985.27,1203.37 1985.86,1202.58 1986.45,1203.33 1987.03,1206.37 1987.62,1206.77 1988.2,1206.96 1988.79,1205.79 1989.38,1205.07 1989.96,1205.48 1990.55,1203.44 1991.14,1204.98 1991.72,1205.2 1992.31,1205.54 1992.9,1206.94 1993.48,1206.2 1994.07,1206.65 1994.65,1208.07 1995.24,1205.99 1995.83,1204.95 1996.41,1205.1 1997,1207.84 1997.59,1208.13 1998.17,1208.12 1998.76,1210.57 1999.35,1209.63 1999.93,1212.34 2000.52,1211.16 2001.11,1209.71 2001.69,1206.21 2002.28,1207.68 2002.86,1208.95 2003.45,1209.14 2004.04,1208.03 2004.62,1209.28 2005.21,1209.49 2005.8,1211.87 2006.38,1213.49 2006.97,1210.88 2007.56,1213.48 2008.14,1214.65 2008.73,1213.09 2009.32,1211.99 2009.9,1214.4 2010.49,1214.18 2011.07,1213.98 2011.66,1215.15 2012.25,1218.71 2012.83,1218.48 2013.42,1218.1 2014.01,1217.79 2014.59,1219.8 2015.18,1220.46 2015.77,1222.51 2016.35,1220.94 2016.94,1220.42 2017.53,1218.74 2018.11,1217.22 2018.7,1215.93 2019.28,1217.87 2019.87,1219.91 2020.46,1218.26 2021.04,1217.92 2021.63,1217.79 2022.22,1218.53 2022.8,1219.13 2023.39,1218.61 2023.98,1215.91 2024.56,1213.26 2025.15,1213.27 2025.73,1208.28 2026.32,1206.24 2026.91,1206.45 2027.49,1206.83 2028.08,1207.26 2028.67,1208.74 2029.25,1210.99 2029.84,1211.02 2030.43,1212.53 2031.01,1213.9 2031.6,1210.13 2032.19,1212.43 2032.77,1211.29 2033.36,1211.37 2033.94,1212.53 2034.53,1212.36 2035.12,1213.57 2035.7,1213.37 2036.29,1213.21 2036.88,1210.57 2037.46,1209.39 2038.05,1210.79 2038.64,1209.78 2039.22,1209.8 2039.81,1210.08 2040.4,1210.12 2040.98,1212.52 2041.57,1212.47 2042.15,1212.8 2042.74,1215.12 2043.33,1216.1 2043.91,1217.17 2044.5,1216.65 2045.09,1216.43 2045.67,1218.56 2046.26,1218.24 2046.85,1216.85 2047.43,1215.32 2048.02,1216.5 2048.6,1219.99 2049.19,1215.92 2049.78,1215.73 2050.36,1215.22 2050.95,1216.3 2051.54,1213.41 2052.12,1213 2052.71,1212.74 2053.3,1211.42 2053.88,1212.71 2054.47,1213.93 2055.06,1214.92 2055.64,1213.41 2056.23,1214.55 2056.81,1211.97 2057.4,1213.1 2057.99,1211.87 2058.57,1211.79 2059.16,1212.93 2059.75,1211.44 2060.33,1212.72 2060.92,1214.09 2061.51,1213.96 2062.09,1212.41 2062.68,1215.68 2063.27,1214.16 2063.85,1212.97 2064.44,1212.91 2065.02,1212.84 2065.61,1212.64 2066.2,1212.64 2066.78,1212.63 2067.37,1211.37 2067.96,1210.08 2068.54,1210.14 2069.13,1211.3 2069.72,1212.33 2070.3,1211.1 2070.89,1214.76 2071.48,1213.46 2072.06,1214.56 2072.65,1213.33 2073.23,1215.45 2073.82,1216.44 2074.41,1218.62 2074.99,1218.35 2075.58,1217.77 2076.17,1217.09 2076.75,1214.52 2077.34,1217.72 2077.93,1217.37 2078.51,1214.72 2079.1,1215.81 2079.68,1215.86 2080.27,1215.4 2080.86,1212.75 2081.44,1211.4 2082.03,1207.7 2082.62,1205.82 2083.2,1208.43 2083.79,1207.5 2084.38,1207.72 2084.96,1207.77 2085.55,1205.64 2086.14,1205.66 2086.72,1205.78 2087.31,1202.48 2087.89,1204.21 2088.48,1204.6 2089.07,1204.99 2089.65,1202.88 2090.24,1204.6 2090.83,1203.88 2091.41,1205.53 2092,1204.52 2092.59,1203.84 2093.17,1205.35 2093.76,1205.72 2094.35,1206.23 2094.93,1207.59 2095.52,1204.33 2096.1,1207.39 2096.69,1209.06 2097.28,1210.51 2097.86,1210.65 2098.45,1210.84 2099.04,1214.6 2099.62,1215.8 2100.21,1216.73 2100.8,1215.49 2101.38,1217.63 2101.97,1215.86 2102.55,1215.72 2103.14,1215.73 2103.73,1215.48 2104.31,1217.67 2104.9,1217.55 2105.49,1217.29 2106.07,1216.91 2106.66,1214.33 2107.25,1215.21 2107.83,1216.57 2108.42,1216.39 2109.01,1217.29 2109.59,1222.69 2110.18,1220.91 2110.76,1220.47 2111.35,1220.09 2111.94,1218.26 2112.52,1219.17 2113.11,1217.72 2113.7,1213.91 2114.28,1216.02 2114.87,1216.52 2115.46,1212.52 2116.04,1213.39 2116.63,1206.29 2117.22,1202.99 2117.8,1203.29 2118.39,1203.97 2118.97,1203.23 2119.56,1204.78 2120.15,1205.1 2120.73,1204.29 2121.32,1205.4 2121.91,1205.73 2122.49,1208.3 2123.08,1208.26 2123.67,1204.86 2124.25,1206.52 2124.84,1205.65 2125.42,1201.17 2126.01,1200.38 2126.6,1198.85 2127.18,1198.29 2127.77,1199.06 2128.36,1198.39 2128.94,1200.33 2129.53,1199.52 2130.12,1197.7 2130.7,1198.55 2131.29,1200.51 2131.88,1201.12 2132.46,1201.56 2133.05,1202.19 2133.63,1200.17 2134.22,1202.08 2134.81,1205.02 2135.39,1203.34 2135.98,1203.94 2136.57,1204.28 2137.15,1205.74 2137.74,1205.05 2138.33,1204.28 2138.91,1203.63 2139.5,1201.35 2140.09,1200.53 2140.67,1203.56 2141.26,1203.99 2141.84,1203.29 2142.43,1202.66 2143.02,1204.54 2143.6,1206.13 2144.19,1206.6 2144.78,1206.88 2145.36,1209.49 2145.95,1209.92 2146.54,1210.19 2147.12,1210.35 2147.71,1211.69 2148.3,1211.52 2148.88,1215.14 2149.47,1216.38 2150.05,1213.92 2150.64,1212.48 2151.23,1213.79 2151.81,1214.67 2152.4,1215.79 2152.99,1214.59 2153.57,1214.56 2154.16,1216.65 2154.75,1215.55 2155.33,1212.64 2155.92,1211.31 2156.5,1212.67 2157.09,1212.68 2157.68,1212.41 2158.26,1212.44 \"/>\n<path clip-path=\"url(#clip592)\" d=\"M986.025 1212.06 L986.612 1212.06 L987.198 1212.06 L987.785 1212.06 L988.371 1212.06 L988.957 1212.06 L989.544 1212.06 L990.13 1212.06 L990.717 1212.06 L991.303 1212.06 L991.889 1212.06 L992.476 1212.06 L993.062 1212.06 L993.649 1212.06 L994.235 1212.06 L994.822 1212.06 L995.408 1212.06 L995.994 1212.06 L996.581 1212.06 L997.167 1212.06 L997.754 1212.06 L998.34 1212.06 L998.926 1212.06 L999.513 1212.06 L1000.1 1212.06 L1000.69 1212.06 L1001.27 1212.06 L1001.86 1212.06 L1002.44 1212.06 L1003.03 1212.06 L1003.62 1212.06 L1004.2 1212.06 L1004.79 1212.06 L1005.38 1212.06 L1005.96 1212.06 L1006.55 1212.06 L1007.14 1212.06 L1007.72 1212.06 L1008.31 1212.06 L1008.9 1212.06 L1009.48 1212.06 L1010.07 1212.06 L1010.65 1212.06 L1011.24 1212.06 L1011.83 1212.06 L1012.41 1212.06 L1013 1212.06 L1013.59 1212.06 L1014.17 1212.06 L1014.76 1212.06 L1015.35 1212.06 L1015.93 1212.06 L1016.52 1212.06 L1017.11 1212.06 L1017.69 1212.06 L1018.28 1212.06 L1018.86 1212.06 L1019.45 1212.06 L1020.04 1212.06 L1020.62 1212.06 L1021.21 1212.06 L1021.8 1212.06 L1022.38 1212.06 L1022.97 1212.06 L1023.56 1212.06 L1024.14 1212.06 L1024.73 1212.06 L1025.32 1212.06 L1025.9 1212.06 L1026.49 1212.06 L1027.07 1212.06 L1027.66 1212.06 L1028.25 1212.06 L1028.83 1212.06 L1029.42 1212.06 L1030.01 1212.06 L1030.59 1212.06 L1031.18 1212.06 L1031.77 1212.06 L1032.35 1212.06 L1032.94 1212.06 L1033.52 1212.06 L1034.11 1212.06 L1034.7 1212.06 L1035.28 1212.06 L1035.87 1212.06 L1036.46 1212.06 L1037.04 1212.06 L1037.63 1212.06 L1038.22 1212.06 L1038.8 1212.06 L1039.39 1212.06 L1039.98 1212.06 L1040.56 1212.06 L1041.15 1212.06 L1041.73 1212.06 L1042.32 1212.06 L1042.91 1212.06 L1043.49 1212.06 L1044.08 1212.06 L1044.67 1212.06 L1045.25 1212.06 L1045.84 1212.06 L1046.43 1212.06 L1047.01 1212.06 L1047.6 1212.06 L1048.19 1212.06 L1048.77 1212.06 L1049.36 1212.06 L1049.94 1212.06 L1050.53 1212.06 L1051.12 1212.06 L1051.7 1212.06 L1052.29 1212.06 L1052.88 1212.06 L1053.46 1212.06 L1054.05 1212.06 L1054.64 1212.06 L1055.22 1212.06 L1055.81 1212.06 L1056.39 1212.06 L1056.98 1212.06 L1057.57 1212.06 L1058.15 1212.06 L1058.74 1212.06 L1059.33 1212.06 L1059.91 1212.06 L1060.5 1212.06 L1061.09 1212.06 L1061.67 1212.06 L1062.26 1212.06 L1062.85 1212.06 L1063.43 1212.06 L1064.02 1212.06 L1064.6 1212.06 L1065.19 1212.06 L1065.78 1212.06 L1066.36 1212.06 L1066.95 1212.06 L1067.54 1212.06 L1068.12 1212.06 L1068.71 1212.06 L1069.3 1212.06 L1069.88 1212.06 L1070.47 1212.06 L1071.06 1212.06 L1071.64 1212.06 L1072.23 1212.06 L1072.81 1212.06 L1073.4 1212.06 L1073.99 1212.06 L1074.57 1212.06 L1075.16 1212.06 L1075.75 1212.06 L1076.33 1212.06 L1076.92 1212.06 L1077.51 1212.06 L1078.09 1212.06 L1078.68 1212.06 L1079.26 1212.06 L1079.85 1212.06 L1080.44 1212.06 L1081.02 1212.06 L1081.61 1212.06 L1082.2 1212.06 L1082.78 1212.06 L1083.37 1212.06 L1083.96 1212.06 L1084.54 1212.06 L1085.13 1212.06 L1085.72 1212.06 L1086.3 1212.06 L1086.89 1212.06 L1087.47 1212.06 L1088.06 1212.06 L1088.65 1212.06 L1089.23 1212.06 L1089.82 1212.06 L1090.41 1212.06 L1090.99 1212.06 L1091.58 1212.06 L1092.17 1212.06 L1092.75 1212.06 L1093.34 1212.06 L1093.93 1212.06 L1094.51 1212.06 L1095.1 1212.06 L1095.68 1212.06 L1096.27 1212.06 L1096.86 1212.06 L1097.44 1212.06 L1098.03 1212.06 L1098.62 1212.06 L1099.2 1212.06 L1099.79 1212.06 L1100.38 1212.06 L1100.96 1212.06 L1101.55 1212.06 L1102.14 1212.06 L1102.72 1212.06 L1103.31 1212.06 L1103.89 1212.06 L1104.48 1212.06 L1105.07 1212.06 L1105.65 1212.06 L1106.24 1212.06 L1106.83 1212.06 L1107.41 1212.06 L1108 1212.06 L1108.59 1212.06 L1109.17 1212.06 L1109.76 1212.06 L1110.34 1212.06 L1110.93 1212.06 L1111.52 1212.06 L1112.1 1212.06 L1112.69 1212.06 L1113.28 1212.06 L1113.86 1212.06 L1114.45 1212.06 L1115.04 1212.06 L1115.62 1212.06 L1116.21 1212.06 L1116.8 1212.06 L1117.38 1212.06 L1117.97 1212.06 L1118.55 1212.06 L1119.14 1212.06 L1119.73 1212.06 L1120.31 1212.06 L1120.9 1212.06 L1121.49 1212.06 L1122.07 1212.06 L1122.66 1212.06 L1123.25 1212.06 L1123.83 1212.06 L1124.42 1212.06 L1125.01 1212.06 L1125.59 1212.06 L1126.18 1212.06 L1126.76 1212.06 L1127.35 1212.06 L1127.94 1212.06 L1128.52 1212.06 L1129.11 1212.06 L1129.7 1212.06 L1130.28 1212.06 L1130.87 1212.06 L1131.46 1212.06 L1132.04 1212.06 L1132.63 1212.06 L1133.21 1212.06 L1133.8 1212.06 L1134.39 1212.06 L1134.97 1212.06 L1135.56 1212.06 L1136.15 1212.06 L1136.73 1212.06 L1137.32 1212.06 L1137.91 1212.06 L1138.49 1212.06 L1139.08 1212.06 L1139.67 1212.06 L1140.25 1212.06 L1140.84 1212.06 L1141.42 1212.06 L1142.01 1212.06 L1142.6 1212.06 L1143.18 1212.06 L1143.77 1212.06 L1144.36 1212.06 L1144.94 1212.06 L1145.53 1212.06 L1146.12 1212.06 L1146.7 1212.06 L1147.29 1212.06 L1147.88 1212.06 L1148.46 1212.06 L1149.05 1212.06 L1149.63 1212.06 L1150.22 1212.06 L1150.81 1212.06 L1151.39 1212.06 L1151.98 1212.06 L1152.57 1212.06 L1153.15 1212.06 L1153.74 1212.06 L1154.33 1212.06 L1154.91 1212.06 L1155.5 1212.06 L1156.09 1212.06 L1156.67 1212.06 L1157.26 1212.06 L1157.84 1212.06 L1158.43 1212.06 L1159.02 1212.06 L1159.6 1212.06 L1160.19 1212.06 L1160.78 1212.06 L1161.36 1212.06 L1161.95 1212.06 L1162.54 1212.06 L1163.12 1212.06 L1163.71 1212.06 L1164.29 1212.06 L1164.88 1212.06 L1165.47 1212.06 L1166.05 1212.06 L1166.64 1212.06 L1167.23 1212.06 L1167.81 1212.06 L1168.4 1212.06 L1168.99 1212.06 L1169.57 1212.06 L1170.16 1212.06 L1170.75 1212.06 L1171.33 1212.06 L1171.92 1212.06 L1172.5 1212.06 L1173.09 1212.06 L1173.68 1212.06 L1174.26 1212.06 L1174.85 1212.06 L1175.44 1212.06 L1176.02 1212.06 L1176.61 1212.06 L1177.2 1212.06 L1177.78 1212.06 L1178.37 1212.06 L1178.96 1212.06 L1179.54 1212.06 L1180.13 1212.06 L1180.71 1212.06 L1181.3 1212.06 L1181.89 1212.06 L1182.47 1212.06 L1183.06 1212.06 L1183.65 1212.06 L1184.23 1212.06 L1184.82 1212.06 L1185.41 1212.06 L1185.99 1212.06 L1186.58 1212.06 L1187.16 1212.06 L1187.75 1212.06 L1188.34 1212.06 L1188.92 1212.06 L1189.51 1212.06 L1190.1 1212.06 L1190.68 1212.06 L1191.27 1212.06 L1191.86 1212.06 L1192.44 1212.06 L1193.03 1212.06 L1193.62 1212.06 L1194.2 1212.06 L1194.79 1212.06 L1195.37 1212.06 L1195.96 1212.06 L1196.55 1212.06 L1197.13 1212.06 L1197.72 1212.06 L1198.31 1212.06 L1198.89 1212.06 L1199.48 1212.06 L1200.07 1212.06 L1200.65 1212.06 L1201.24 1212.06 L1201.83 1212.06 L1202.41 1212.06 L1203 1212.06 L1203.58 1212.06 L1204.17 1212.06 L1204.76 1212.06 L1205.34 1212.06 L1205.93 1212.06 L1206.52 1212.06 L1207.1 1212.06 L1207.69 1212.06 L1208.28 1212.06 L1208.86 1212.06 L1209.45 1212.06 L1210.03 1212.06 L1210.62 1212.06 L1211.21 1212.06 L1211.79 1212.06 L1212.38 1212.06 L1212.97 1212.06 L1213.55 1212.06 L1214.14 1212.06 L1214.73 1212.06 L1215.31 1212.06 L1215.9 1212.06 L1216.49 1212.06 L1217.07 1212.06 L1217.66 1212.06 L1218.24 1212.06 L1218.83 1212.06 L1219.42 1212.06 L1220 1212.06 L1220.59 1212.06 L1221.18 1212.06 L1221.76 1212.06 L1222.35 1212.06 L1222.94 1212.06 L1223.52 1212.06 L1224.11 1212.06 L1224.7 1212.06 L1225.28 1212.06 L1225.87 1212.06 L1226.45 1212.06 L1227.04 1212.06 L1227.63 1212.06 L1228.21 1212.06 L1228.8 1212.06 L1229.39 1212.06 L1229.97 1212.06 L1230.56 1212.06 L1231.15 1212.06 L1231.73 1212.06 L1232.32 1212.06 L1232.91 1212.06 L1233.49 1212.06 L1234.08 1212.06 L1234.66 1212.06 L1235.25 1212.06 L1235.84 1212.06 L1236.42 1212.06 L1237.01 1212.06 L1237.6 1212.06 L1238.18 1212.06 L1238.77 1212.06 L1239.36 1212.06 L1239.94 1212.06 L1240.53 1212.06 L1241.11 1212.06 L1241.7 1212.06 L1242.29 1212.06 L1242.87 1212.06 L1243.46 1212.06 L1244.05 1212.06 L1244.63 1212.06 L1245.22 1212.06 L1245.81 1212.06 L1246.39 1212.06 L1246.98 1212.06 L1247.57 1212.06 L1248.15 1212.06 L1248.74 1212.06 L1249.32 1212.06 L1249.91 1212.06 L1250.5 1212.06 L1251.08 1212.06 L1251.67 1212.06 L1252.26 1212.06 L1252.84 1212.06 L1253.43 1212.06 L1254.02 1212.06 L1254.6 1212.06 L1255.19 1212.06 L1255.78 1212.06 L1256.36 1212.06 L1256.95 1212.06 L1257.53 1212.06 L1258.12 1212.06 L1258.71 1212.06 L1259.29 1212.06 L1259.88 1212.06 L1260.47 1212.06 L1261.05 1212.06 L1261.64 1212.06 L1262.23 1212.06 L1262.81 1212.06 L1263.4 1212.06 L1263.98 1212.06 L1264.57 1212.06 L1265.16 1212.06 L1265.74 1212.06 L1266.33 1212.06 L1266.92 1212.06 L1267.5 1212.06 L1268.09 1212.06 L1268.68 1212.06 L1269.26 1212.06 L1269.85 1212.06 L1270.44 1212.06 L1271.02 1212.06 L1271.61 1212.06 L1272.19 1212.06 L1272.78 1212.06 L1273.37 1212.06 L1273.95 1212.06 L1274.54 1212.06 L1275.13 1212.06 L1275.71 1212.06 L1276.3 1212.06 L1276.89 1212.06 L1277.47 1212.06 L1278.06 1212.06 L1278.65 1212.06 L1279.23 1212.06 L1279.82 1212.06 L1280.4 1212.06 L1280.99 1212.06 L1281.58 1212.06 L1282.16 1212.06 L1282.75 1212.06 L1283.34 1212.06 L1283.92 1212.06 L1284.51 1212.06 L1285.1 1212.06 L1285.68 1212.06 L1286.27 1212.06 L1286.86 1212.06 L1287.44 1212.06 L1288.03 1212.06 L1288.61 1212.06 L1289.2 1212.06 L1289.79 1212.06 L1290.37 1212.06 L1290.96 1212.06 L1291.55 1212.06 L1292.13 1212.06 L1292.72 1212.06 L1293.31 1212.06 L1293.89 1212.06 L1294.48 1212.06 L1295.06 1212.06 L1295.65 1212.06 L1296.24 1212.06 L1296.82 1212.06 L1297.41 1212.06 L1298 1212.06 L1298.58 1212.06 L1299.17 1212.06 L1299.76 1212.06 L1300.34 1212.06 L1300.93 1212.06 L1301.52 1212.06 L1302.1 1212.06 L1302.69 1212.06 L1303.27 1212.06 L1303.86 1212.06 L1304.45 1212.06 L1305.03 1212.06 L1305.62 1212.06 L1306.21 1212.06 L1306.79 1212.06 L1307.38 1212.06 L1307.97 1212.06 L1308.55 1212.06 L1309.14 1212.06 L1309.73 1212.06 L1310.31 1212.06 L1310.9 1212.06 L1311.48 1212.06 L1312.07 1212.06 L1312.66 1212.06 L1313.24 1212.06 L1313.83 1212.06 L1314.42 1212.06 L1315 1212.06 L1315.59 1212.06 L1316.18 1212.06 L1316.76 1212.06 L1317.35 1212.06 L1317.93 1212.06 L1318.52 1212.06 L1319.11 1212.06 L1319.69 1212.06 L1320.28 1212.06 L1320.87 1212.06 L1321.45 1212.06 L1322.04 1212.06 L1322.63 1212.06 L1323.21 1212.06 L1323.8 1212.06 L1324.39 1212.06 L1324.97 1212.06 L1325.56 1212.06 L1326.14 1212.06 L1326.73 1212.06 L1327.32 1212.06 L1327.9 1212.06 L1328.49 1212.06 L1329.08 1212.06 L1329.66 1212.06 L1330.25 1212.06 L1330.84 1212.06 L1331.42 1212.06 L1332.01 1212.06 L1332.6 1212.06 L1333.18 1212.06 L1333.77 1212.06 L1334.35 1212.06 L1334.94 1212.06 L1335.53 1212.06 L1336.11 1212.06 L1336.7 1212.06 L1337.29 1212.06 L1337.87 1212.06 L1338.46 1212.06 L1339.05 1212.06 L1339.63 1212.06 L1340.22 1212.06 L1340.8 1212.06 L1341.39 1212.06 L1341.98 1212.06 L1342.56 1212.06 L1343.15 1212.06 L1343.74 1212.06 L1344.32 1212.06 L1344.91 1212.06 L1345.5 1212.06 L1346.08 1212.06 L1346.67 1212.06 L1347.26 1212.06 L1347.84 1212.06 L1348.43 1212.06 L1349.01 1212.06 L1349.6 1212.06 L1350.19 1212.06 L1350.77 1212.06 L1351.36 1212.06 L1351.95 1212.06 L1352.53 1212.06 L1353.12 1212.06 L1353.71 1212.06 L1354.29 1212.06 L1354.88 1212.06 L1355.47 1212.06 L1356.05 1212.06 L1356.64 1212.06 L1357.22 1212.06 L1357.81 1212.06 L1358.4 1212.06 L1358.98 1212.06 L1359.57 1212.06 L1360.16 1212.06 L1360.74 1212.06 L1361.33 1212.06 L1361.92 1212.06 L1362.5 1212.06 L1363.09 1212.06 L1363.68 1212.06 L1364.26 1212.06 L1364.85 1212.06 L1365.43 1212.06 L1366.02 1212.06 L1366.61 1212.06 L1367.19 1212.06 L1367.78 1212.06 L1368.37 1212.06 L1368.95 1212.06 L1369.54 1212.06 L1370.13 1212.06 L1370.71 1212.06 L1371.3 1212.06 L1371.88 1212.06 L1372.47 1212.06 L1373.06 1212.06 L1373.64 1212.06 L1374.23 1212.06 L1374.82 1212.06 L1375.4 1212.06 L1375.99 1212.06 L1376.58 1212.06 L1377.16 1212.06 L1377.75 1212.06 L1378.34 1212.06 L1378.92 1212.06 L1379.51 1212.06 L1380.09 1212.06 L1380.68 1212.06 L1381.27 1212.06 L1381.85 1212.06 L1382.44 1212.06 L1383.03 1212.06 L1383.61 1212.06 L1384.2 1212.06 L1384.79 1212.06 L1385.37 1212.06 L1385.96 1212.06 L1386.55 1212.06 L1387.13 1212.06 L1387.72 1212.06 L1388.3 1212.06 L1388.89 1212.06 L1389.48 1212.06 L1390.06 1212.06 L1390.65 1212.06 L1391.24 1212.06 L1391.82 1212.06 L1392.41 1212.06 L1393 1212.06 L1393.58 1212.06 L1394.17 1212.06 L1394.75 1212.06 L1395.34 1212.06 L1395.93 1212.06 L1396.51 1212.06 L1397.1 1212.06 L1397.69 1212.06 L1398.27 1212.06 L1398.86 1212.06 L1399.45 1212.06 L1400.03 1212.06 L1400.62 1212.06 L1401.21 1212.06 L1401.79 1212.06 L1402.38 1212.06 L1402.96 1212.06 L1403.55 1212.06 L1404.14 1212.06 L1404.72 1212.06 L1405.31 1212.06 L1405.9 1212.06 L1406.48 1212.06 L1407.07 1212.06 L1407.66 1212.06 L1408.24 1212.06 L1408.83 1212.06 L1409.42 1212.06 L1410 1212.06 L1410.59 1212.06 L1411.17 1212.06 L1411.76 1212.06 L1412.35 1212.06 L1412.93 1212.06 L1413.52 1212.06 L1414.11 1212.06 L1414.69 1212.06 L1415.28 1212.06 L1415.87 1212.06 L1416.45 1212.06 L1417.04 1212.06 L1417.63 1212.06 L1418.21 1212.06 L1418.8 1212.06 L1419.38 1212.06 L1419.97 1212.06 L1420.56 1212.06 L1421.14 1212.06 L1421.73 1212.06 L1422.32 1212.06 L1422.9 1212.06 L1423.49 1212.06 L1424.08 1212.06 L1424.66 1212.06 L1425.25 1212.06 L1425.83 1212.06 L1426.42 1212.06 L1427.01 1212.06 L1427.59 1212.06 L1428.18 1212.06 L1428.77 1212.06 L1429.35 1212.06 L1429.94 1212.06 L1430.53 1212.06 L1431.11 1212.06 L1431.7 1212.06 L1432.29 1212.06 L1432.87 1212.06 L1433.46 1212.06 L1434.04 1212.06 L1434.63 1212.06 L1435.22 1212.06 L1435.8 1212.06 L1436.39 1212.06 L1436.98 1212.06 L1437.56 1212.06 L1438.15 1212.06 L1438.74 1212.06 L1439.32 1212.06 L1439.91 1212.06 L1440.5 1212.06 L1441.08 1212.06 L1441.67 1212.06 L1442.25 1212.06 L1442.84 1212.06 L1443.43 1212.06 L1444.01 1212.06 L1444.6 1212.06 L1445.19 1212.06 L1445.77 1212.06 L1446.36 1212.06 L1446.95 1212.06 L1447.53 1212.06 L1448.12 1212.06 L1448.7 1212.06 L1449.29 1212.06 L1449.88 1212.06 L1450.46 1212.06 L1451.05 1212.06 L1451.64 1212.06 L1452.22 1212.06 L1452.81 1212.06 L1453.4 1212.06 L1453.98 1212.06 L1454.57 1212.06 L1455.16 1212.06 L1455.74 1212.06 L1456.33 1212.06 L1456.91 1212.06 L1457.5 1212.06 L1458.09 1212.06 L1458.67 1212.06 L1459.26 1212.06 L1459.85 1212.06 L1460.43 1212.06 L1461.02 1212.06 L1461.61 1212.06 L1462.19 1212.06 L1462.78 1212.06 L1463.37 1212.06 L1463.95 1212.06 L1464.54 1212.06 L1465.12 1212.06 L1465.71 1212.06 L1466.3 1212.06 L1466.88 1212.06 L1467.47 1212.06 L1468.06 1212.06 L1468.64 1212.06 L1469.23 1212.06 L1469.82 1212.06 L1470.4 1212.06 L1470.99 1212.06 L1471.57 1212.06 L1472.16 1212.06 L1472.75 1212.06 L1473.33 1212.06 L1473.92 1212.06 L1474.51 1212.06 L1475.09 1212.06 L1475.68 1212.06 L1476.27 1212.06 L1476.85 1212.06 L1477.44 1212.06 L1478.03 1212.06 L1478.61 1212.06 L1479.2 1212.06 L1479.78 1212.06 L1480.37 1212.06 L1480.96 1212.06 L1481.54 1212.06 L1482.13 1212.06 L1482.72 1212.06 L1483.3 1212.06 L1483.89 1212.06 L1484.48 1212.06 L1485.06 1212.06 L1485.65 1212.06 L1486.24 1212.06 L1486.82 1212.06 L1487.41 1212.06 L1487.99 1212.06 L1488.58 1212.06 L1489.17 1212.06 L1489.75 1212.06 L1490.34 1212.06 L1490.93 1212.06 L1491.51 1212.06 L1492.1 1212.06 L1492.69 1212.06 L1493.27 1212.06 L1493.86 1212.06 L1494.45 1212.06 L1495.03 1212.06 L1495.62 1212.06 L1496.2 1212.06 L1496.79 1212.06 L1497.38 1212.06 L1497.96 1212.06 L1498.55 1212.06 L1499.14 1212.06 L1499.72 1212.06 L1500.31 1212.06 L1500.9 1212.06 L1501.48 1212.06 L1502.07 1212.06 L1502.65 1212.06 L1503.24 1212.06 L1503.83 1212.06 L1504.41 1212.06 L1505 1212.06 L1505.59 1212.06 L1506.17 1212.06 L1506.76 1212.06 L1507.35 1212.06 L1507.93 1212.06 L1508.52 1212.06 L1509.11 1212.06 L1509.69 1212.06 L1510.28 1212.06 L1510.86 1212.06 L1511.45 1212.06 L1512.04 1212.06 L1512.62 1212.06 L1513.21 1212.06 L1513.8 1212.06 L1514.38 1212.06 L1514.97 1212.06 L1515.56 1212.06 L1516.14 1212.06 L1516.73 1212.06 L1517.32 1212.06 L1517.9 1212.06 L1518.49 1212.06 L1519.07 1212.06 L1519.66 1212.06 L1520.25 1212.06 L1520.83 1212.06 L1521.42 1212.06 L1522.01 1212.06 L1522.59 1212.06 L1523.18 1212.06 L1523.77 1212.06 L1524.35 1212.06 L1524.94 1212.06 L1525.52 1212.06 L1526.11 1212.06 L1526.7 1212.06 L1527.28 1212.06 L1527.87 1212.06 L1528.46 1212.06 L1529.04 1212.06 L1529.63 1212.06 L1530.22 1212.06 L1530.8 1212.06 L1531.39 1212.06 L1531.98 1212.06 L1532.56 1212.06 L1533.15 1212.06 L1533.73 1212.06 L1534.32 1212.06 L1534.91 1212.06 L1535.49 1212.06 L1536.08 1212.06 L1536.67 1212.06 L1537.25 1212.06 L1537.84 1212.06 L1538.43 1212.06 L1539.01 1212.06 L1539.6 1212.06 L1540.19 1212.06 L1540.77 1212.06 L1541.36 1212.06 L1541.94 1212.06 L1542.53 1212.06 L1543.12 1212.06 L1543.7 1212.06 L1544.29 1212.06 L1544.88 1212.06 L1545.46 1212.06 L1546.05 1212.06 L1546.64 1212.06 L1547.22 1212.06 L1547.81 1212.06 L1548.4 1212.06 L1548.98 1212.06 L1549.57 1212.06 L1550.15 1212.06 L1550.74 1212.06 L1551.33 1212.06 L1551.91 1212.06 L1552.5 1212.06 L1553.09 1212.06 L1553.67 1212.06 L1554.26 1212.06 L1554.85 1212.06 L1555.43 1212.06 L1556.02 1212.06 L1556.6 1212.06 L1557.19 1212.06 L1557.78 1212.06 L1558.36 1212.06 L1558.95 1212.06 L1559.54 1212.06 L1560.12 1212.06 L1560.71 1212.06 L1561.3 1212.06 L1561.88 1212.06 L1562.47 1212.06 L1563.06 1212.06 L1563.64 1212.06 L1564.23 1212.06 L1564.81 1212.06 L1565.4 1212.06 L1565.99 1212.06 L1566.57 1212.06 L1567.16 1212.06 L1567.75 1212.06 L1568.33 1212.06 L1568.92 1212.06 L1569.51 1212.06 L1570.09 1212.06 L1570.68 1212.06 L1571.27 1212.06 L1571.85 1212.06 L1572.44 1212.06 L1573.02 1212.06 L1573.61 1212.06 L1574.2 1212.06 L1574.78 1212.06 L1575.37 1212.06 L1575.96 1212.06 L1576.54 1212.06 L1577.13 1212.06 L1577.72 1212.06 L1578.3 1212.06 L1578.89 1212.06 L1579.47 1212.06 L1580.06 1212.06 L1580.65 1212.06 L1581.23 1212.06 L1581.82 1212.06 L1582.41 1212.06 L1582.99 1212.06 L1583.58 1212.06 L1584.17 1212.06 L1584.75 1212.06 L1585.34 1212.06 L1585.93 1212.06 L1586.51 1212.06 L1587.1 1212.06 L1587.68 1212.06 L1588.27 1212.06 L1588.86 1212.06 L1589.44 1212.06 L1590.03 1212.06 L1590.62 1212.06 L1591.2 1212.06 L1591.79 1212.06 L1592.38 1212.06 L1592.96 1212.06 L1593.55 1212.06 L1594.14 1212.06 L1594.72 1212.06 L1595.31 1212.06 L1595.89 1212.06 L1596.48 1212.06 L1597.07 1212.06 L1597.65 1212.06 L1598.24 1212.06 L1598.83 1212.06 L1599.41 1212.06 L1600 1212.06 L1600.59 1212.06 L1601.17 1212.06 L1601.76 1212.06 L1602.34 1212.06 L1602.93 1212.06 L1603.52 1212.06 L1604.1 1212.06 L1604.69 1212.06 L1605.28 1212.06 L1605.86 1212.06 L1606.45 1212.06 L1607.04 1212.06 L1607.62 1212.06 L1608.21 1212.06 L1608.8 1212.06 L1609.38 1212.06 L1609.97 1212.06 L1610.55 1212.06 L1611.14 1212.06 L1611.73 1212.06 L1612.31 1212.06 L1612.9 1212.06 L1613.49 1212.06 L1614.07 1212.06 L1614.66 1212.06 L1615.25 1212.06 L1615.83 1212.06 L1616.42 1212.06 L1617.01 1212.06 L1617.59 1212.06 L1618.18 1212.06 L1618.76 1212.06 L1619.35 1212.06 L1619.94 1212.06 L1620.52 1212.06 L1621.11 1212.06 L1621.7 1212.06 L1622.28 1212.06 L1622.87 1212.06 L1623.46 1212.06 L1624.04 1212.06 L1624.63 1212.06 L1625.22 1212.06 L1625.8 1212.06 L1626.39 1212.06 L1626.97 1212.06 L1627.56 1212.06 L1628.15 1212.06 L1628.73 1212.06 L1629.32 1212.06 L1629.91 1212.06 L1630.49 1212.06 L1631.08 1212.06 L1631.67 1212.06 L1632.25 1212.06 L1632.84 1212.06 L1633.42 1212.06 L1634.01 1212.06 L1634.6 1212.06 L1635.18 1212.06 L1635.77 1212.06 L1636.36 1212.06 L1636.94 1212.06 L1637.53 1212.06 L1638.12 1212.06 L1638.7 1212.06 L1639.29 1212.06 L1639.88 1212.06 L1640.46 1212.06 L1641.05 1212.06 L1641.63 1212.06 L1642.22 1212.06 L1642.81 1212.06 L1643.39 1212.06 L1643.98 1212.06 L1644.57 1212.06 L1645.15 1212.06 L1645.74 1212.06 L1646.33 1212.06 L1646.91 1212.06 L1647.5 1212.06 L1648.09 1212.06 L1648.67 1212.06 L1649.26 1212.06 L1649.84 1212.06 L1650.43 1212.06 L1651.02 1212.06 L1651.6 1212.06 L1652.19 1212.06 L1652.78 1212.06 L1653.36 1212.06 L1653.95 1212.06 L1654.54 1212.06 L1655.12 1212.06 L1655.71 1212.06 L1656.29 1212.06 L1656.88 1212.06 L1657.47 1212.06 L1658.05 1212.06 L1658.64 1212.06 L1659.23 1212.06 L1659.81 1212.06 L1660.4 1212.06 L1660.99 1212.06 L1661.57 1212.06 L1662.16 1212.06 L1662.75 1212.06 L1663.33 1212.06 L1663.92 1212.06 L1664.5 1212.06 L1665.09 1212.06 L1665.68 1212.06 L1666.26 1212.06 L1666.85 1212.06 L1667.44 1212.06 L1668.02 1212.06 L1668.61 1212.06 L1669.2 1212.06 L1669.78 1212.06 L1670.37 1212.06 L1670.96 1212.06 L1671.54 1212.06 L1672.13 1212.06 L1672.71 1212.06 L1673.3 1212.06 L1673.89 1212.06 L1674.47 1212.06 L1675.06 1212.06 L1675.65 1212.06 L1676.23 1212.06 L1676.82 1212.06 L1677.41 1212.06 L1677.99 1212.06 L1678.58 1212.06 L1679.17 1212.06 L1679.75 1212.06 L1680.34 1212.06 L1680.92 1212.06 L1681.51 1212.06 L1682.1 1212.06 L1682.68 1212.06 L1683.27 1212.06 L1683.86 1212.06 L1684.44 1212.06 L1685.03 1212.06 L1685.62 1212.06 L1686.2 1212.06 L1686.79 1212.06 L1687.37 1212.06 L1687.96 1212.06 L1688.55 1212.06 L1689.13 1212.06 L1689.72 1212.06 L1690.31 1212.06 L1690.89 1212.06 L1691.48 1212.06 L1692.07 1212.06 L1692.65 1212.06 L1693.24 1212.06 L1693.83 1212.06 L1694.41 1212.06 L1695 1212.06 L1695.58 1212.06 L1696.17 1212.06 L1696.76 1212.06 L1697.34 1212.06 L1697.93 1212.06 L1698.52 1212.06 L1699.1 1212.06 L1699.69 1212.06 L1700.28 1212.06 L1700.86 1212.06 L1701.45 1212.06 L1702.04 1212.06 L1702.62 1212.06 L1703.21 1212.06 L1703.79 1212.06 L1704.38 1212.06 L1704.97 1212.06 L1705.55 1212.06 L1706.14 1212.06 L1706.73 1212.06 L1707.31 1212.06 L1707.9 1212.06 L1708.49 1212.06 L1709.07 1212.06 L1709.66 1212.06 L1710.24 1212.06 L1710.83 1212.06 L1711.42 1212.06 L1712 1212.06 L1712.59 1212.06 L1713.18 1212.06 L1713.76 1212.06 L1714.35 1212.06 L1714.94 1212.06 L1715.52 1212.06 L1716.11 1212.06 L1716.7 1212.06 L1717.28 1212.06 L1717.87 1212.06 L1718.45 1212.06 L1719.04 1212.06 L1719.63 1212.06 L1720.21 1212.06 L1720.8 1212.06 L1721.39 1212.06 L1721.97 1212.06 L1722.56 1212.06 L1723.15 1212.06 L1723.73 1212.06 L1724.32 1212.06 L1724.91 1212.06 L1725.49 1212.06 L1726.08 1212.06 L1726.66 1212.06 L1727.25 1212.06 L1727.84 1212.06 L1728.42 1212.06 L1729.01 1212.06 L1729.6 1212.06 L1730.18 1212.06 L1730.77 1212.06 L1731.36 1212.06 L1731.94 1212.06 L1732.53 1212.06 L1733.11 1212.06 L1733.7 1212.06 L1734.29 1212.06 L1734.87 1212.06 L1735.46 1212.06 L1736.05 1212.06 L1736.63 1212.06 L1737.22 1212.06 L1737.81 1212.06 L1738.39 1212.06 L1738.98 1212.06 L1739.57 1212.06 L1740.15 1212.06 L1740.74 1212.06 L1741.32 1212.06 L1741.91 1212.06 L1742.5 1212.06 L1743.08 1212.06 L1743.67 1212.06 L1744.26 1212.06 L1744.84 1212.06 L1745.43 1212.06 L1746.02 1212.06 L1746.6 1212.06 L1747.19 1212.06 L1747.78 1212.06 L1748.36 1212.06 L1748.95 1212.06 L1749.53 1212.06 L1750.12 1212.06 L1750.71 1212.06 L1751.29 1212.06 L1751.88 1212.06 L1752.47 1212.06 L1753.05 1212.06 L1753.64 1212.06 L1754.23 1212.06 L1754.81 1212.06 L1755.4 1212.06 L1755.99 1212.06 L1756.57 1212.06 L1757.16 1212.06 L1757.74 1212.06 L1758.33 1212.06 L1758.92 1212.06 L1759.5 1212.06 L1760.09 1212.06 L1760.68 1212.06 L1761.26 1212.06 L1761.85 1212.06 L1762.44 1212.06 L1763.02 1212.06 L1763.61 1212.06 L1764.19 1212.06 L1764.78 1212.06 L1765.37 1212.06 L1765.95 1212.06 L1766.54 1212.06 L1767.13 1212.06 L1767.71 1212.06 L1768.3 1212.06 L1768.89 1212.06 L1769.47 1212.06 L1770.06 1212.06 L1770.65 1212.06 L1771.23 1212.06 L1771.82 1212.06 L1772.4 1212.06 L1772.99 1212.06 L1773.58 1212.06 L1774.16 1212.06 L1774.75 1212.06 L1775.34 1212.06 L1775.92 1212.06 L1776.51 1212.06 L1777.1 1212.06 L1777.68 1212.06 L1778.27 1212.06 L1778.86 1212.06 L1779.44 1212.06 L1780.03 1212.06 L1780.61 1212.06 L1781.2 1212.06 L1781.79 1212.06 L1782.37 1212.06 L1782.96 1212.06 L1783.55 1212.06 L1784.13 1212.06 L1784.72 1212.06 L1785.31 1212.06 L1785.89 1212.06 L1786.48 1212.06 L1787.06 1212.06 L1787.65 1212.06 L1788.24 1212.06 L1788.82 1212.06 L1789.41 1212.06 L1790 1212.06 L1790.58 1212.06 L1791.17 1212.06 L1791.76 1212.06 L1792.34 1212.06 L1792.93 1212.06 L1793.52 1212.06 L1794.1 1212.06 L1794.69 1212.06 L1795.27 1212.06 L1795.86 1212.06 L1796.45 1212.06 L1797.03 1212.06 L1797.62 1212.06 L1798.21 1212.06 L1798.79 1212.06 L1799.38 1212.06 L1799.97 1212.06 L1800.55 1212.06 L1801.14 1212.06 L1801.73 1212.06 L1802.31 1212.06 L1802.9 1212.06 L1803.48 1212.06 L1804.07 1212.06 L1804.66 1212.06 L1805.24 1212.06 L1805.83 1212.06 L1806.42 1212.06 L1807 1212.06 L1807.59 1212.06 L1808.18 1212.06 L1808.76 1212.06 L1809.35 1212.06 L1809.94 1212.06 L1810.52 1212.06 L1811.11 1212.06 L1811.69 1212.06 L1812.28 1212.06 L1812.87 1212.06 L1813.45 1212.06 L1814.04 1212.06 L1814.63 1212.06 L1815.21 1212.06 L1815.8 1212.06 L1816.39 1212.06 L1816.97 1212.06 L1817.56 1212.06 L1818.14 1212.06 L1818.73 1212.06 L1819.32 1212.06 L1819.9 1212.06 L1820.49 1212.06 L1821.08 1212.06 L1821.66 1212.06 L1822.25 1212.06 L1822.84 1212.06 L1823.42 1212.06 L1824.01 1212.06 L1824.6 1212.06 L1825.18 1212.06 L1825.77 1212.06 L1826.35 1212.06 L1826.94 1212.06 L1827.53 1212.06 L1828.11 1212.06 L1828.7 1212.06 L1829.29 1212.06 L1829.87 1212.06 L1830.46 1212.06 L1831.05 1212.06 L1831.63 1212.06 L1832.22 1212.06 L1832.81 1212.06 L1833.39 1212.06 L1833.98 1212.06 L1834.56 1212.06 L1835.15 1212.06 L1835.74 1212.06 L1836.32 1212.06 L1836.91 1212.06 L1837.5 1212.06 L1838.08 1212.06 L1838.67 1212.06 L1839.26 1212.06 L1839.84 1212.06 L1840.43 1212.06 L1841.01 1212.06 L1841.6 1212.06 L1842.19 1212.06 L1842.77 1212.06 L1843.36 1212.06 L1843.95 1212.06 L1844.53 1212.06 L1845.12 1212.06 L1845.71 1212.06 L1846.29 1212.06 L1846.88 1212.06 L1847.47 1212.06 L1848.05 1212.06 L1848.64 1212.06 L1849.22 1212.06 L1849.81 1212.06 L1850.4 1212.06 L1850.98 1212.06 L1851.57 1212.06 L1852.16 1212.06 L1852.74 1212.06 L1853.33 1212.06 L1853.92 1212.06 L1854.5 1212.06 L1855.09 1212.06 L1855.68 1212.06 L1856.26 1212.06 L1856.85 1212.06 L1857.43 1212.06 L1858.02 1212.06 L1858.61 1212.06 L1859.19 1212.06 L1859.78 1212.06 L1860.37 1212.06 L1860.95 1212.06 L1861.54 1212.06 L1862.13 1212.06 L1862.71 1212.06 L1863.3 1212.06 L1863.88 1212.06 L1864.47 1212.06 L1865.06 1212.06 L1865.64 1212.06 L1866.23 1212.06 L1866.82 1212.06 L1867.4 1212.06 L1867.99 1212.06 L1868.58 1212.06 L1869.16 1212.06 L1869.75 1212.06 L1870.34 1212.06 L1870.92 1212.06 L1871.51 1212.06 L1872.09 1212.06 L1872.68 1212.06 L1873.27 1212.06 L1873.85 1212.06 L1874.44 1212.06 L1875.03 1212.06 L1875.61 1212.06 L1876.2 1212.06 L1876.79 1212.06 L1877.37 1212.06 L1877.96 1212.06 L1878.55 1212.06 L1879.13 1212.06 L1879.72 1212.06 L1880.3 1212.06 L1880.89 1212.06 L1881.48 1212.06 L1882.06 1212.06 L1882.65 1212.06 L1883.24 1212.06 L1883.82 1212.06 L1884.41 1212.06 L1885 1212.06 L1885.58 1212.06 L1886.17 1212.06 L1886.76 1212.06 L1887.34 1212.06 L1887.93 1212.06 L1888.51 1212.06 L1889.1 1212.06 L1889.69 1212.06 L1890.27 1212.06 L1890.86 1212.06 L1891.45 1212.06 L1892.03 1212.06 L1892.62 1212.06 L1893.21 1212.06 L1893.79 1212.06 L1894.38 1212.06 L1894.96 1212.06 L1895.55 1212.06 L1896.14 1212.06 L1896.72 1212.06 L1897.31 1212.06 L1897.9 1212.06 L1898.48 1212.06 L1899.07 1212.06 L1899.66 1212.06 L1900.24 1212.06 L1900.83 1212.06 L1901.42 1212.06 L1902 1212.06 L1902.59 1212.06 L1903.17 1212.06 L1903.76 1212.06 L1904.35 1212.06 L1904.93 1212.06 L1905.52 1212.06 L1906.11 1212.06 L1906.69 1212.06 L1907.28 1212.06 L1907.87 1212.06 L1908.45 1212.06 L1909.04 1212.06 L1909.63 1212.06 L1910.21 1212.06 L1910.8 1212.06 L1911.38 1212.06 L1911.97 1212.06 L1912.56 1212.06 L1913.14 1212.06 L1913.73 1212.06 L1914.32 1212.06 L1914.9 1212.06 L1915.49 1212.06 L1916.08 1212.06 L1916.66 1212.06 L1917.25 1212.06 L1917.83 1212.06 L1918.42 1212.06 L1919.01 1212.06 L1919.59 1212.06 L1920.18 1212.06 L1920.77 1212.06 L1921.35 1212.06 L1921.94 1212.06 L1922.53 1212.06 L1923.11 1212.06 L1923.7 1212.06 L1924.29 1212.06 L1924.87 1212.06 L1925.46 1212.06 L1926.04 1212.06 L1926.63 1212.06 L1927.22 1212.06 L1927.8 1212.06 L1928.39 1212.06 L1928.98 1212.06 L1929.56 1212.06 L1930.15 1212.06 L1930.74 1212.06 L1931.32 1212.06 L1931.91 1212.06 L1932.5 1212.06 L1933.08 1212.06 L1933.67 1212.06 L1934.25 1212.06 L1934.84 1212.06 L1935.43 1212.06 L1936.01 1212.06 L1936.6 1212.06 L1937.19 1212.06 L1937.77 1212.06 L1938.36 1212.06 L1938.95 1212.06 L1939.53 1212.06 L1940.12 1212.06 L1940.71 1212.06 L1941.29 1212.06 L1941.88 1212.06 L1942.46 1212.06 L1943.05 1212.06 L1943.64 1212.06 L1944.22 1212.06 L1944.81 1212.06 L1945.4 1212.06 L1945.98 1212.06 L1946.57 1212.06 L1947.16 1212.06 L1947.74 1212.06 L1948.33 1212.06 L1948.91 1212.06 L1949.5 1212.06 L1950.09 1212.06 L1950.67 1212.06 L1951.26 1212.06 L1951.85 1212.06 L1952.43 1212.06 L1953.02 1212.06 L1953.61 1212.06 L1954.19 1212.06 L1954.78 1212.06 L1955.37 1212.06 L1955.95 1212.06 L1956.54 1212.06 L1957.12 1212.06 L1957.71 1212.06 L1958.3 1212.06 L1958.88 1212.06 L1959.47 1212.06 L1960.06 1212.06 L1960.64 1212.06 L1961.23 1212.06 L1961.82 1212.06 L1962.4 1212.06 L1962.99 1212.06 L1963.58 1212.06 L1964.16 1212.06 L1964.75 1212.06 L1965.33 1212.06 L1965.92 1212.06 L1966.51 1212.06 L1967.09 1212.06 L1967.68 1212.06 L1968.27 1212.06 L1968.85 1212.06 L1969.44 1212.06 L1970.03 1212.06 L1970.61 1212.06 L1971.2 1212.06 L1971.78 1212.06 L1972.37 1212.06 L1972.96 1212.06 L1973.54 1212.06 L1974.13 1212.06 L1974.72 1212.06 L1975.3 1212.06 L1975.89 1212.06 L1976.48 1212.06 L1977.06 1212.06 L1977.65 1212.06 L1978.24 1212.06 L1978.82 1212.06 L1979.41 1212.06 L1979.99 1212.06 L1980.58 1212.06 L1981.17 1212.06 L1981.75 1212.06 L1982.34 1212.06 L1982.93 1212.06 L1983.51 1212.06 L1984.1 1212.06 L1984.69 1212.06 L1985.27 1212.06 L1985.86 1212.06 L1986.45 1212.06 L1987.03 1212.06 L1987.62 1212.06 L1988.2 1212.06 L1988.79 1212.06 L1989.38 1212.06 L1989.96 1212.06 L1990.55 1212.06 L1991.14 1212.06 L1991.72 1212.06 L1992.31 1212.06 L1992.9 1212.06 L1993.48 1212.06 L1994.07 1212.06 L1994.65 1212.06 L1995.24 1212.06 L1995.83 1212.06 L1996.41 1212.06 L1997 1212.06 L1997.59 1212.06 L1998.17 1212.06 L1998.76 1212.06 L1999.35 1212.06 L1999.93 1212.06 L2000.52 1212.06 L2001.11 1212.06 L2001.69 1212.06 L2002.28 1212.06 L2002.86 1212.06 L2003.45 1212.06 L2004.04 1212.06 L2004.62 1212.06 L2005.21 1212.06 L2005.8 1212.06 L2006.38 1212.06 L2006.97 1212.06 L2007.56 1212.06 L2008.14 1212.06 L2008.73 1212.06 L2009.32 1212.06 L2009.9 1212.06 L2010.49 1212.06 L2011.07 1212.06 L2011.66 1212.06 L2012.25 1212.06 L2012.83 1212.06 L2013.42 1212.06 L2014.01 1212.06 L2014.59 1212.06 L2015.18 1212.06 L2015.77 1212.06 L2016.35 1212.06 L2016.94 1212.06 L2017.53 1212.06 L2018.11 1212.06 L2018.7 1212.06 L2019.28 1212.06 L2019.87 1212.06 L2020.46 1212.06 L2021.04 1212.06 L2021.63 1212.06 L2022.22 1212.06 L2022.8 1212.06 L2023.39 1212.06 L2023.98 1212.06 L2024.56 1212.06 L2025.15 1212.06 L2025.73 1212.06 L2026.32 1212.06 L2026.91 1212.06 L2027.49 1212.06 L2028.08 1212.06 L2028.67 1212.06 L2029.25 1212.06 L2029.84 1212.06 L2030.43 1212.06 L2031.01 1212.06 L2031.6 1212.06 L2032.19 1212.06 L2032.77 1212.06 L2033.36 1212.06 L2033.94 1212.06 L2034.53 1212.06 L2035.12 1212.06 L2035.7 1212.06 L2036.29 1212.06 L2036.88 1212.06 L2037.46 1212.06 L2038.05 1212.06 L2038.64 1212.06 L2039.22 1212.06 L2039.81 1212.06 L2040.4 1212.06 L2040.98 1212.06 L2041.57 1212.06 L2042.15 1212.06 L2042.74 1212.06 L2043.33 1212.06 L2043.91 1212.06 L2044.5 1212.06 L2045.09 1212.06 L2045.67 1212.06 L2046.26 1212.06 L2046.85 1212.06 L2047.43 1212.06 L2048.02 1212.06 L2048.6 1212.06 L2049.19 1212.06 L2049.78 1212.06 L2050.36 1212.06 L2050.95 1212.06 L2051.54 1212.06 L2052.12 1212.06 L2052.71 1212.06 L2053.3 1212.06 L2053.88 1212.06 L2054.47 1212.06 L2055.06 1212.06 L2055.64 1212.06 L2056.23 1212.06 L2056.81 1212.06 L2057.4 1212.06 L2057.99 1212.06 L2058.57 1212.06 L2059.16 1212.06 L2059.75 1212.06 L2060.33 1212.06 L2060.92 1212.06 L2061.51 1212.06 L2062.09 1212.06 L2062.68 1212.06 L2063.27 1212.06 L2063.85 1212.06 L2064.44 1212.06 L2065.02 1212.06 L2065.61 1212.06 L2066.2 1212.06 L2066.78 1212.06 L2067.37 1212.06 L2067.96 1212.06 L2068.54 1212.06 L2069.13 1212.06 L2069.72 1212.06 L2070.3 1212.06 L2070.89 1212.06 L2071.48 1212.06 L2072.06 1212.06 L2072.65 1212.06 L2073.23 1212.06 L2073.82 1212.06 L2074.41 1212.06 L2074.99 1212.06 L2075.58 1212.06 L2076.17 1212.06 L2076.75 1212.06 L2077.34 1212.06 L2077.93 1212.06 L2078.51 1212.06 L2079.1 1212.06 L2079.68 1212.06 L2080.27 1212.06 L2080.86 1212.06 L2081.44 1212.06 L2082.03 1212.06 L2082.62 1212.06 L2083.2 1212.06 L2083.79 1212.06 L2084.38 1212.06 L2084.96 1212.06 L2085.55 1212.06 L2086.14 1212.06 L2086.72 1212.06 L2087.31 1212.06 L2087.89 1212.06 L2088.48 1212.06 L2089.07 1212.06 L2089.65 1212.06 L2090.24 1212.06 L2090.83 1212.06 L2091.41 1212.06 L2092 1212.06 L2092.59 1212.06 L2093.17 1212.06 L2093.76 1212.06 L2094.35 1212.06 L2094.93 1212.06 L2095.52 1212.06 L2096.1 1212.06 L2096.69 1212.06 L2097.28 1212.06 L2097.86 1212.06 L2098.45 1212.06 L2099.04 1212.06 L2099.62 1212.06 L2100.21 1212.06 L2100.8 1212.06 L2101.38 1212.06 L2101.97 1212.06 L2102.55 1212.06 L2103.14 1212.06 L2103.73 1212.06 L2104.31 1212.06 L2104.9 1212.06 L2105.49 1212.06 L2106.07 1212.06 L2106.66 1212.06 L2107.25 1212.06 L2107.83 1212.06 L2108.42 1212.06 L2109.01 1212.06 L2109.59 1212.06 L2110.18 1212.06 L2110.76 1212.06 L2111.35 1212.06 L2111.94 1212.06 L2112.52 1212.06 L2113.11 1212.06 L2113.7 1212.06 L2114.28 1212.06 L2114.87 1212.06 L2115.46 1212.06 L2116.04 1212.06 L2116.63 1212.06 L2117.22 1212.06 L2117.8 1212.06 L2118.39 1212.06 L2118.97 1212.06 L2119.56 1212.06 L2120.15 1212.06 L2120.73 1212.06 L2121.32 1212.06 L2121.91 1212.06 L2122.49 1212.06 L2123.08 1212.06 L2123.67 1212.06 L2124.25 1212.06 L2124.84 1212.06 L2125.42 1212.06 L2126.01 1212.06 L2126.6 1212.06 L2127.18 1212.06 L2127.77 1212.06 L2128.36 1212.06 L2128.94 1212.06 L2129.53 1212.06 L2130.12 1212.06 L2130.7 1212.06 L2131.29 1212.06 L2131.88 1212.06 L2132.46 1212.06 L2133.05 1212.06 L2133.63 1212.06 L2134.22 1212.06 L2134.81 1212.06 L2135.39 1212.06 L2135.98 1212.06 L2136.57 1212.06 L2137.15 1212.06 L2137.74 1212.06 L2138.33 1212.06 L2138.91 1212.06 L2139.5 1212.06 L2140.09 1212.06 L2140.67 1212.06 L2141.26 1212.06 L2141.84 1212.06 L2142.43 1212.06 L2143.02 1212.06 L2143.6 1212.06 L2144.19 1212.06 L2144.78 1212.06 L2145.36 1212.06 L2145.95 1212.06 L2146.54 1212.06 L2147.12 1212.06 L2147.71 1212.06 L2148.3 1212.06 L2148.88 1212.06 L2149.47 1212.06 L2150.05 1212.06 L2150.64 1212.06 L2151.23 1212.06 L2151.81 1212.06 L2152.4 1212.06 L2152.99 1212.06 L2153.57 1212.06 L2154.16 1212.06 L2154.75 1212.06 L2155.33 1212.06 L2155.92 1212.06 L2156.5 1212.06 L2157.09 1212.06 L2157.68 1212.06 L2158.26 1212.06 L2158.26 1211.33 L2157.68 1211.33 L2157.09 1211.33 L2156.5 1211.33 L2155.92 1211.33 L2155.33 1211.33 L2154.75 1211.33 L2154.16 1211.33 L2153.57 1211.33 L2152.99 1211.33 L2152.4 1211.33 L2151.81 1211.33 L2151.23 1211.33 L2150.64 1211.33 L2150.05 1211.33 L2149.47 1211.33 L2148.88 1211.33 L2148.3 1211.33 L2147.71 1211.33 L2147.12 1211.33 L2146.54 1211.33 L2145.95 1211.33 L2145.36 1211.33 L2144.78 1211.33 L2144.19 1211.33 L2143.6 1211.33 L2143.02 1211.33 L2142.43 1211.33 L2141.84 1211.33 L2141.26 1211.33 L2140.67 1211.33 L2140.09 1211.33 L2139.5 1211.33 L2138.91 1211.33 L2138.33 1211.33 L2137.74 1211.33 L2137.15 1211.33 L2136.57 1211.33 L2135.98 1211.33 L2135.39 1211.33 L2134.81 1211.33 L2134.22 1211.33 L2133.63 1211.33 L2133.05 1211.33 L2132.46 1211.33 L2131.88 1211.33 L2131.29 1211.33 L2130.7 1211.33 L2130.12 1211.33 L2129.53 1211.33 L2128.94 1211.33 L2128.36 1211.33 L2127.77 1211.33 L2127.18 1211.33 L2126.6 1211.33 L2126.01 1211.33 L2125.42 1211.33 L2124.84 1211.33 L2124.25 1211.33 L2123.67 1211.33 L2123.08 1211.33 L2122.49 1211.33 L2121.91 1211.33 L2121.32 1211.33 L2120.73 1211.33 L2120.15 1211.33 L2119.56 1211.33 L2118.97 1211.33 L2118.39 1211.33 L2117.8 1211.33 L2117.22 1211.33 L2116.63 1211.33 L2116.04 1211.33 L2115.46 1211.33 L2114.87 1211.33 L2114.28 1211.33 L2113.7 1211.33 L2113.11 1211.33 L2112.52 1211.33 L2111.94 1211.33 L2111.35 1211.33 L2110.76 1211.33 L2110.18 1211.33 L2109.59 1211.33 L2109.01 1211.33 L2108.42 1211.33 L2107.83 1211.33 L2107.25 1211.33 L2106.66 1211.33 L2106.07 1211.33 L2105.49 1211.33 L2104.9 1211.33 L2104.31 1211.33 L2103.73 1211.33 L2103.14 1211.33 L2102.55 1211.33 L2101.97 1211.33 L2101.38 1211.33 L2100.8 1211.33 L2100.21 1211.33 L2099.62 1211.33 L2099.04 1211.33 L2098.45 1211.33 L2097.86 1211.33 L2097.28 1211.33 L2096.69 1211.33 L2096.1 1211.33 L2095.52 1211.33 L2094.93 1211.33 L2094.35 1211.33 L2093.76 1211.33 L2093.17 1211.33 L2092.59 1211.33 L2092 1211.33 L2091.41 1211.33 L2090.83 1211.33 L2090.24 1211.33 L2089.65 1211.33 L2089.07 1211.33 L2088.48 1211.33 L2087.89 1211.33 L2087.31 1211.33 L2086.72 1211.33 L2086.14 1211.33 L2085.55 1211.33 L2084.96 1211.33 L2084.38 1211.33 L2083.79 1211.33 L2083.2 1211.33 L2082.62 1211.33 L2082.03 1211.33 L2081.44 1211.33 L2080.86 1211.33 L2080.27 1211.33 L2079.68 1211.33 L2079.1 1211.33 L2078.51 1211.33 L2077.93 1211.33 L2077.34 1211.33 L2076.75 1211.33 L2076.17 1211.33 L2075.58 1211.33 L2074.99 1211.33 L2074.41 1211.33 L2073.82 1211.33 L2073.23 1211.33 L2072.65 1211.33 L2072.06 1211.33 L2071.48 1211.33 L2070.89 1211.33 L2070.3 1211.33 L2069.72 1211.33 L2069.13 1211.33 L2068.54 1211.33 L2067.96 1211.33 L2067.37 1211.33 L2066.78 1211.33 L2066.2 1211.33 L2065.61 1211.33 L2065.02 1211.33 L2064.44 1211.33 L2063.85 1211.33 L2063.27 1211.33 L2062.68 1211.33 L2062.09 1211.33 L2061.51 1211.33 L2060.92 1211.33 L2060.33 1211.33 L2059.75 1211.33 L2059.16 1211.33 L2058.57 1211.33 L2057.99 1211.33 L2057.4 1211.33 L2056.81 1211.33 L2056.23 1211.33 L2055.64 1211.33 L2055.06 1211.33 L2054.47 1211.33 L2053.88 1211.33 L2053.3 1211.33 L2052.71 1211.33 L2052.12 1211.33 L2051.54 1211.33 L2050.95 1211.33 L2050.36 1211.33 L2049.78 1211.33 L2049.19 1211.33 L2048.6 1211.33 L2048.02 1211.33 L2047.43 1211.33 L2046.85 1211.33 L2046.26 1211.33 L2045.67 1211.33 L2045.09 1211.33 L2044.5 1211.33 L2043.91 1211.33 L2043.33 1211.33 L2042.74 1211.33 L2042.15 1211.33 L2041.57 1211.33 L2040.98 1211.33 L2040.4 1211.33 L2039.81 1211.33 L2039.22 1211.33 L2038.64 1211.33 L2038.05 1211.33 L2037.46 1211.33 L2036.88 1211.33 L2036.29 1211.33 L2035.7 1211.33 L2035.12 1211.33 L2034.53 1211.33 L2033.94 1211.33 L2033.36 1211.33 L2032.77 1211.33 L2032.19 1211.33 L2031.6 1211.33 L2031.01 1211.33 L2030.43 1211.33 L2029.84 1211.33 L2029.25 1211.33 L2028.67 1211.33 L2028.08 1211.33 L2027.49 1211.33 L2026.91 1211.33 L2026.32 1211.33 L2025.73 1211.33 L2025.15 1211.33 L2024.56 1211.33 L2023.98 1211.33 L2023.39 1211.33 L2022.8 1211.33 L2022.22 1211.33 L2021.63 1211.33 L2021.04 1211.33 L2020.46 1211.33 L2019.87 1211.33 L2019.28 1211.33 L2018.7 1211.33 L2018.11 1211.33 L2017.53 1211.33 L2016.94 1211.33 L2016.35 1211.33 L2015.77 1211.33 L2015.18 1211.33 L2014.59 1211.33 L2014.01 1211.33 L2013.42 1211.33 L2012.83 1211.33 L2012.25 1211.33 L2011.66 1211.33 L2011.07 1211.33 L2010.49 1211.33 L2009.9 1211.33 L2009.32 1211.33 L2008.73 1211.33 L2008.14 1211.33 L2007.56 1211.33 L2006.97 1211.33 L2006.38 1211.33 L2005.8 1211.33 L2005.21 1211.33 L2004.62 1211.33 L2004.04 1211.33 L2003.45 1211.33 L2002.86 1211.33 L2002.28 1211.33 L2001.69 1211.33 L2001.11 1211.33 L2000.52 1211.33 L1999.93 1211.33 L1999.35 1211.33 L1998.76 1211.33 L1998.17 1211.33 L1997.59 1211.33 L1997 1211.33 L1996.41 1211.33 L1995.83 1211.33 L1995.24 1211.33 L1994.65 1211.33 L1994.07 1211.33 L1993.48 1211.33 L1992.9 1211.33 L1992.31 1211.33 L1991.72 1211.33 L1991.14 1211.33 L1990.55 1211.33 L1989.96 1211.33 L1989.38 1211.33 L1988.79 1211.33 L1988.2 1211.33 L1987.62 1211.33 L1987.03 1211.33 L1986.45 1211.33 L1985.86 1211.33 L1985.27 1211.33 L1984.69 1211.33 L1984.1 1211.33 L1983.51 1211.33 L1982.93 1211.33 L1982.34 1211.33 L1981.75 1211.33 L1981.17 1211.33 L1980.58 1211.33 L1979.99 1211.33 L1979.41 1211.33 L1978.82 1211.33 L1978.24 1211.33 L1977.65 1211.33 L1977.06 1211.33 L1976.48 1211.33 L1975.89 1211.33 L1975.3 1211.33 L1974.72 1211.33 L1974.13 1211.33 L1973.54 1211.33 L1972.96 1211.33 L1972.37 1211.33 L1971.78 1211.33 L1971.2 1211.33 L1970.61 1211.33 L1970.03 1211.33 L1969.44 1211.33 L1968.85 1211.33 L1968.27 1211.33 L1967.68 1211.33 L1967.09 1211.33 L1966.51 1211.33 L1965.92 1211.33 L1965.33 1211.33 L1964.75 1211.33 L1964.16 1211.33 L1963.58 1211.33 L1962.99 1211.33 L1962.4 1211.33 L1961.82 1211.33 L1961.23 1211.33 L1960.64 1211.33 L1960.06 1211.33 L1959.47 1211.33 L1958.88 1211.33 L1958.3 1211.33 L1957.71 1211.33 L1957.12 1211.33 L1956.54 1211.33 L1955.95 1211.33 L1955.37 1211.33 L1954.78 1211.33 L1954.19 1211.33 L1953.61 1211.33 L1953.02 1211.33 L1952.43 1211.33 L1951.85 1211.33 L1951.26 1211.33 L1950.67 1211.33 L1950.09 1211.33 L1949.5 1211.33 L1948.91 1211.33 L1948.33 1211.33 L1947.74 1211.33 L1947.16 1211.33 L1946.57 1211.33 L1945.98 1211.33 L1945.4 1211.33 L1944.81 1211.33 L1944.22 1211.33 L1943.64 1211.33 L1943.05 1211.33 L1942.46 1211.33 L1941.88 1211.33 L1941.29 1211.33 L1940.71 1211.33 L1940.12 1211.33 L1939.53 1211.33 L1938.95 1211.33 L1938.36 1211.33 L1937.77 1211.33 L1937.19 1211.33 L1936.6 1211.33 L1936.01 1211.33 L1935.43 1211.33 L1934.84 1211.33 L1934.25 1211.33 L1933.67 1211.33 L1933.08 1211.33 L1932.5 1211.33 L1931.91 1211.33 L1931.32 1211.33 L1930.74 1211.33 L1930.15 1211.33 L1929.56 1211.33 L1928.98 1211.33 L1928.39 1211.33 L1927.8 1211.33 L1927.22 1211.33 L1926.63 1211.33 L1926.04 1211.33 L1925.46 1211.33 L1924.87 1211.33 L1924.29 1211.33 L1923.7 1211.33 L1923.11 1211.33 L1922.53 1211.33 L1921.94 1211.33 L1921.35 1211.33 L1920.77 1211.33 L1920.18 1211.33 L1919.59 1211.33 L1919.01 1211.33 L1918.42 1211.33 L1917.83 1211.33 L1917.25 1211.33 L1916.66 1211.33 L1916.08 1211.33 L1915.49 1211.33 L1914.9 1211.33 L1914.32 1211.33 L1913.73 1211.33 L1913.14 1211.33 L1912.56 1211.33 L1911.97 1211.33 L1911.38 1211.33 L1910.8 1211.33 L1910.21 1211.33 L1909.63 1211.33 L1909.04 1211.33 L1908.45 1211.33 L1907.87 1211.33 L1907.28 1211.33 L1906.69 1211.33 L1906.11 1211.33 L1905.52 1211.33 L1904.93 1211.33 L1904.35 1211.33 L1903.76 1211.33 L1903.17 1211.33 L1902.59 1211.33 L1902 1211.33 L1901.42 1211.33 L1900.83 1211.33 L1900.24 1211.33 L1899.66 1211.33 L1899.07 1211.33 L1898.48 1211.33 L1897.9 1211.33 L1897.31 1211.33 L1896.72 1211.33 L1896.14 1211.33 L1895.55 1211.33 L1894.96 1211.33 L1894.38 1211.33 L1893.79 1211.33 L1893.21 1211.33 L1892.62 1211.33 L1892.03 1211.33 L1891.45 1211.33 L1890.86 1211.33 L1890.27 1211.33 L1889.69 1211.33 L1889.1 1211.33 L1888.51 1211.33 L1887.93 1211.33 L1887.34 1211.33 L1886.76 1211.33 L1886.17 1211.33 L1885.58 1211.33 L1885 1211.33 L1884.41 1211.33 L1883.82 1211.33 L1883.24 1211.33 L1882.65 1211.33 L1882.06 1211.33 L1881.48 1211.33 L1880.89 1211.33 L1880.3 1211.33 L1879.72 1211.33 L1879.13 1211.33 L1878.55 1211.33 L1877.96 1211.33 L1877.37 1211.33 L1876.79 1211.33 L1876.2 1211.33 L1875.61 1211.33 L1875.03 1211.33 L1874.44 1211.33 L1873.85 1211.33 L1873.27 1211.33 L1872.68 1211.33 L1872.09 1211.33 L1871.51 1211.33 L1870.92 1211.33 L1870.34 1211.33 L1869.75 1211.33 L1869.16 1211.33 L1868.58 1211.33 L1867.99 1211.33 L1867.4 1211.33 L1866.82 1211.33 L1866.23 1211.33 L1865.64 1211.33 L1865.06 1211.33 L1864.47 1211.33 L1863.88 1211.33 L1863.3 1211.33 L1862.71 1211.33 L1862.13 1211.33 L1861.54 1211.33 L1860.95 1211.33 L1860.37 1211.33 L1859.78 1211.33 L1859.19 1211.33 L1858.61 1211.33 L1858.02 1211.33 L1857.43 1211.33 L1856.85 1211.33 L1856.26 1211.33 L1855.68 1211.33 L1855.09 1211.33 L1854.5 1211.33 L1853.92 1211.33 L1853.33 1211.33 L1852.74 1211.33 L1852.16 1211.33 L1851.57 1211.33 L1850.98 1211.33 L1850.4 1211.33 L1849.81 1211.33 L1849.22 1211.33 L1848.64 1211.33 L1848.05 1211.33 L1847.47 1211.33 L1846.88 1211.33 L1846.29 1211.33 L1845.71 1211.33 L1845.12 1211.33 L1844.53 1211.33 L1843.95 1211.33 L1843.36 1211.33 L1842.77 1211.33 L1842.19 1211.33 L1841.6 1211.33 L1841.01 1211.33 L1840.43 1211.33 L1839.84 1211.33 L1839.26 1211.33 L1838.67 1211.33 L1838.08 1211.33 L1837.5 1211.33 L1836.91 1211.33 L1836.32 1211.33 L1835.74 1211.33 L1835.15 1211.33 L1834.56 1211.33 L1833.98 1211.33 L1833.39 1211.33 L1832.81 1211.33 L1832.22 1211.33 L1831.63 1211.33 L1831.05 1211.33 L1830.46 1211.33 L1829.87 1211.33 L1829.29 1211.33 L1828.7 1211.33 L1828.11 1211.33 L1827.53 1211.33 L1826.94 1211.33 L1826.35 1211.33 L1825.77 1211.33 L1825.18 1211.33 L1824.6 1211.33 L1824.01 1211.33 L1823.42 1211.33 L1822.84 1211.33 L1822.25 1211.33 L1821.66 1211.33 L1821.08 1211.33 L1820.49 1211.33 L1819.9 1211.33 L1819.32 1211.33 L1818.73 1211.33 L1818.14 1211.33 L1817.56 1211.33 L1816.97 1211.33 L1816.39 1211.33 L1815.8 1211.33 L1815.21 1211.33 L1814.63 1211.33 L1814.04 1211.33 L1813.45 1211.33 L1812.87 1211.33 L1812.28 1211.33 L1811.69 1211.33 L1811.11 1211.33 L1810.52 1211.33 L1809.94 1211.33 L1809.35 1211.33 L1808.76 1211.33 L1808.18 1211.33 L1807.59 1211.33 L1807 1211.33 L1806.42 1211.33 L1805.83 1211.33 L1805.24 1211.33 L1804.66 1211.33 L1804.07 1211.33 L1803.48 1211.33 L1802.9 1211.33 L1802.31 1211.33 L1801.73 1211.33 L1801.14 1211.33 L1800.55 1211.33 L1799.97 1211.33 L1799.38 1211.33 L1798.79 1211.33 L1798.21 1211.33 L1797.62 1211.33 L1797.03 1211.33 L1796.45 1211.33 L1795.86 1211.33 L1795.27 1211.33 L1794.69 1211.33 L1794.1 1211.33 L1793.52 1211.33 L1792.93 1211.33 L1792.34 1211.33 L1791.76 1211.33 L1791.17 1211.33 L1790.58 1211.33 L1790 1211.33 L1789.41 1211.33 L1788.82 1211.33 L1788.24 1211.33 L1787.65 1211.33 L1787.06 1211.33 L1786.48 1211.33 L1785.89 1211.33 L1785.31 1211.33 L1784.72 1211.33 L1784.13 1211.33 L1783.55 1211.33 L1782.96 1211.33 L1782.37 1211.33 L1781.79 1211.33 L1781.2 1211.33 L1780.61 1211.33 L1780.03 1211.33 L1779.44 1211.33 L1778.86 1211.33 L1778.27 1211.33 L1777.68 1211.33 L1777.1 1211.33 L1776.51 1211.33 L1775.92 1211.33 L1775.34 1211.33 L1774.75 1211.33 L1774.16 1211.33 L1773.58 1211.33 L1772.99 1211.33 L1772.4 1211.33 L1771.82 1211.33 L1771.23 1211.33 L1770.65 1211.33 L1770.06 1211.33 L1769.47 1211.33 L1768.89 1211.33 L1768.3 1211.33 L1767.71 1211.33 L1767.13 1211.33 L1766.54 1211.33 L1765.95 1211.33 L1765.37 1211.33 L1764.78 1211.33 L1764.19 1211.33 L1763.61 1211.33 L1763.02 1211.33 L1762.44 1211.33 L1761.85 1211.33 L1761.26 1211.33 L1760.68 1211.33 L1760.09 1211.33 L1759.5 1211.33 L1758.92 1211.33 L1758.33 1211.33 L1757.74 1211.33 L1757.16 1211.33 L1756.57 1211.33 L1755.99 1211.33 L1755.4 1211.33 L1754.81 1211.33 L1754.23 1211.33 L1753.64 1211.33 L1753.05 1211.33 L1752.47 1211.33 L1751.88 1211.33 L1751.29 1211.33 L1750.71 1211.33 L1750.12 1211.33 L1749.53 1211.33 L1748.95 1211.33 L1748.36 1211.33 L1747.78 1211.33 L1747.19 1211.33 L1746.6 1211.33 L1746.02 1211.33 L1745.43 1211.33 L1744.84 1211.33 L1744.26 1211.33 L1743.67 1211.33 L1743.08 1211.33 L1742.5 1211.33 L1741.91 1211.33 L1741.32 1211.33 L1740.74 1211.33 L1740.15 1211.33 L1739.57 1211.33 L1738.98 1211.33 L1738.39 1211.33 L1737.81 1211.33 L1737.22 1211.33 L1736.63 1211.33 L1736.05 1211.33 L1735.46 1211.33 L1734.87 1211.33 L1734.29 1211.33 L1733.7 1211.33 L1733.11 1211.33 L1732.53 1211.33 L1731.94 1211.33 L1731.36 1211.33 L1730.77 1211.33 L1730.18 1211.33 L1729.6 1211.33 L1729.01 1211.33 L1728.42 1211.33 L1727.84 1211.33 L1727.25 1211.33 L1726.66 1211.33 L1726.08 1211.33 L1725.49 1211.33 L1724.91 1211.33 L1724.32 1211.33 L1723.73 1211.33 L1723.15 1211.33 L1722.56 1211.33 L1721.97 1211.33 L1721.39 1211.33 L1720.8 1211.33 L1720.21 1211.33 L1719.63 1211.33 L1719.04 1211.33 L1718.45 1211.33 L1717.87 1211.33 L1717.28 1211.33 L1716.7 1211.33 L1716.11 1211.33 L1715.52 1211.33 L1714.94 1211.33 L1714.35 1211.33 L1713.76 1211.33 L1713.18 1211.33 L1712.59 1211.33 L1712 1211.33 L1711.42 1211.33 L1710.83 1211.33 L1710.24 1211.33 L1709.66 1211.33 L1709.07 1211.33 L1708.49 1211.33 L1707.9 1211.33 L1707.31 1211.33 L1706.73 1211.33 L1706.14 1211.33 L1705.55 1211.33 L1704.97 1211.33 L1704.38 1211.33 L1703.79 1211.33 L1703.21 1211.33 L1702.62 1211.33 L1702.04 1211.33 L1701.45 1211.33 L1700.86 1211.33 L1700.28 1211.33 L1699.69 1211.33 L1699.1 1211.33 L1698.52 1211.33 L1697.93 1211.33 L1697.34 1211.33 L1696.76 1211.33 L1696.17 1211.33 L1695.58 1211.33 L1695 1211.33 L1694.41 1211.33 L1693.83 1211.33 L1693.24 1211.33 L1692.65 1211.33 L1692.07 1211.33 L1691.48 1211.33 L1690.89 1211.33 L1690.31 1211.33 L1689.72 1211.33 L1689.13 1211.33 L1688.55 1211.33 L1687.96 1211.33 L1687.37 1211.33 L1686.79 1211.33 L1686.2 1211.33 L1685.62 1211.33 L1685.03 1211.33 L1684.44 1211.33 L1683.86 1211.33 L1683.27 1211.33 L1682.68 1211.33 L1682.1 1211.33 L1681.51 1211.33 L1680.92 1211.33 L1680.34 1211.33 L1679.75 1211.33 L1679.17 1211.33 L1678.58 1211.33 L1677.99 1211.33 L1677.41 1211.33 L1676.82 1211.33 L1676.23 1211.33 L1675.65 1211.33 L1675.06 1211.33 L1674.47 1211.33 L1673.89 1211.33 L1673.3 1211.33 L1672.71 1211.33 L1672.13 1211.33 L1671.54 1211.33 L1670.96 1211.33 L1670.37 1211.33 L1669.78 1211.33 L1669.2 1211.33 L1668.61 1211.33 L1668.02 1211.33 L1667.44 1211.33 L1666.85 1211.33 L1666.26 1211.33 L1665.68 1211.33 L1665.09 1211.33 L1664.5 1211.33 L1663.92 1211.33 L1663.33 1211.33 L1662.75 1211.33 L1662.16 1211.33 L1661.57 1211.33 L1660.99 1211.33 L1660.4 1211.33 L1659.81 1211.33 L1659.23 1211.33 L1658.64 1211.33 L1658.05 1211.33 L1657.47 1211.33 L1656.88 1211.33 L1656.29 1211.33 L1655.71 1211.33 L1655.12 1211.33 L1654.54 1211.33 L1653.95 1211.33 L1653.36 1211.33 L1652.78 1211.33 L1652.19 1211.33 L1651.6 1211.33 L1651.02 1211.33 L1650.43 1211.33 L1649.84 1211.33 L1649.26 1211.33 L1648.67 1211.33 L1648.09 1211.33 L1647.5 1211.33 L1646.91 1211.33 L1646.33 1211.33 L1645.74 1211.33 L1645.15 1211.33 L1644.57 1211.33 L1643.98 1211.33 L1643.39 1211.33 L1642.81 1211.33 L1642.22 1211.33 L1641.63 1211.33 L1641.05 1211.33 L1640.46 1211.33 L1639.88 1211.33 L1639.29 1211.33 L1638.7 1211.33 L1638.12 1211.33 L1637.53 1211.33 L1636.94 1211.33 L1636.36 1211.33 L1635.77 1211.33 L1635.18 1211.33 L1634.6 1211.33 L1634.01 1211.33 L1633.42 1211.33 L1632.84 1211.33 L1632.25 1211.33 L1631.67 1211.33 L1631.08 1211.33 L1630.49 1211.33 L1629.91 1211.33 L1629.32 1211.33 L1628.73 1211.33 L1628.15 1211.33 L1627.56 1211.33 L1626.97 1211.33 L1626.39 1211.33 L1625.8 1211.33 L1625.22 1211.33 L1624.63 1211.33 L1624.04 1211.33 L1623.46 1211.33 L1622.87 1211.33 L1622.28 1211.33 L1621.7 1211.33 L1621.11 1211.33 L1620.52 1211.33 L1619.94 1211.33 L1619.35 1211.33 L1618.76 1211.33 L1618.18 1211.33 L1617.59 1211.33 L1617.01 1211.33 L1616.42 1211.33 L1615.83 1211.33 L1615.25 1211.33 L1614.66 1211.33 L1614.07 1211.33 L1613.49 1211.33 L1612.9 1211.33 L1612.31 1211.33 L1611.73 1211.33 L1611.14 1211.33 L1610.55 1211.33 L1609.97 1211.33 L1609.38 1211.33 L1608.8 1211.33 L1608.21 1211.33 L1607.62 1211.33 L1607.04 1211.33 L1606.45 1211.33 L1605.86 1211.33 L1605.28 1211.33 L1604.69 1211.33 L1604.1 1211.33 L1603.52 1211.33 L1602.93 1211.33 L1602.34 1211.33 L1601.76 1211.33 L1601.17 1211.33 L1600.59 1211.33 L1600 1211.33 L1599.41 1211.33 L1598.83 1211.33 L1598.24 1211.33 L1597.65 1211.33 L1597.07 1211.33 L1596.48 1211.33 L1595.89 1211.33 L1595.31 1211.33 L1594.72 1211.33 L1594.14 1211.33 L1593.55 1211.33 L1592.96 1211.33 L1592.38 1211.33 L1591.79 1211.33 L1591.2 1211.33 L1590.62 1211.33 L1590.03 1211.33 L1589.44 1211.33 L1588.86 1211.33 L1588.27 1211.33 L1587.68 1211.33 L1587.1 1211.33 L1586.51 1211.33 L1585.93 1211.33 L1585.34 1211.33 L1584.75 1211.33 L1584.17 1211.33 L1583.58 1211.33 L1582.99 1211.33 L1582.41 1211.33 L1581.82 1211.33 L1581.23 1211.33 L1580.65 1211.33 L1580.06 1211.33 L1579.47 1211.33 L1578.89 1211.33 L1578.3 1211.33 L1577.72 1211.33 L1577.13 1211.33 L1576.54 1211.33 L1575.96 1211.33 L1575.37 1211.33 L1574.78 1211.33 L1574.2 1211.33 L1573.61 1211.33 L1573.02 1211.33 L1572.44 1211.33 L1571.85 1211.33 L1571.27 1211.33 L1570.68 1211.33 L1570.09 1211.33 L1569.51 1211.33 L1568.92 1211.33 L1568.33 1211.33 L1567.75 1211.33 L1567.16 1211.33 L1566.57 1211.33 L1565.99 1211.33 L1565.4 1211.33 L1564.81 1211.33 L1564.23 1211.33 L1563.64 1211.33 L1563.06 1211.33 L1562.47 1211.33 L1561.88 1211.33 L1561.3 1211.33 L1560.71 1211.33 L1560.12 1211.33 L1559.54 1211.33 L1558.95 1211.33 L1558.36 1211.33 L1557.78 1211.33 L1557.19 1211.33 L1556.6 1211.33 L1556.02 1211.33 L1555.43 1211.33 L1554.85 1211.33 L1554.26 1211.33 L1553.67 1211.33 L1553.09 1211.33 L1552.5 1211.33 L1551.91 1211.33 L1551.33 1211.33 L1550.74 1211.33 L1550.15 1211.33 L1549.57 1211.33 L1548.98 1211.33 L1548.4 1211.33 L1547.81 1211.33 L1547.22 1211.33 L1546.64 1211.33 L1546.05 1211.33 L1545.46 1211.33 L1544.88 1211.33 L1544.29 1211.33 L1543.7 1211.33 L1543.12 1211.33 L1542.53 1211.33 L1541.94 1211.33 L1541.36 1211.33 L1540.77 1211.33 L1540.19 1211.33 L1539.6 1211.33 L1539.01 1211.33 L1538.43 1211.33 L1537.84 1211.33 L1537.25 1211.33 L1536.67 1211.33 L1536.08 1211.33 L1535.49 1211.33 L1534.91 1211.33 L1534.32 1211.33 L1533.73 1211.33 L1533.15 1211.33 L1532.56 1211.33 L1531.98 1211.33 L1531.39 1211.33 L1530.8 1211.33 L1530.22 1211.33 L1529.63 1211.33 L1529.04 1211.33 L1528.46 1211.33 L1527.87 1211.33 L1527.28 1211.33 L1526.7 1211.33 L1526.11 1211.33 L1525.52 1211.33 L1524.94 1211.33 L1524.35 1211.33 L1523.77 1211.33 L1523.18 1211.33 L1522.59 1211.33 L1522.01 1211.33 L1521.42 1211.33 L1520.83 1211.33 L1520.25 1211.33 L1519.66 1211.33 L1519.07 1211.33 L1518.49 1211.33 L1517.9 1211.33 L1517.32 1211.33 L1516.73 1211.33 L1516.14 1211.33 L1515.56 1211.33 L1514.97 1211.33 L1514.38 1211.33 L1513.8 1211.33 L1513.21 1211.33 L1512.62 1211.33 L1512.04 1211.33 L1511.45 1211.33 L1510.86 1211.33 L1510.28 1211.33 L1509.69 1211.33 L1509.11 1211.33 L1508.52 1211.33 L1507.93 1211.33 L1507.35 1211.33 L1506.76 1211.33 L1506.17 1211.33 L1505.59 1211.33 L1505 1211.33 L1504.41 1211.33 L1503.83 1211.33 L1503.24 1211.33 L1502.65 1211.33 L1502.07 1211.33 L1501.48 1211.33 L1500.9 1211.33 L1500.31 1211.33 L1499.72 1211.33 L1499.14 1211.33 L1498.55 1211.33 L1497.96 1211.33 L1497.38 1211.33 L1496.79 1211.33 L1496.2 1211.33 L1495.62 1211.33 L1495.03 1211.33 L1494.45 1211.33 L1493.86 1211.33 L1493.27 1211.33 L1492.69 1211.33 L1492.1 1211.33 L1491.51 1211.33 L1490.93 1211.33 L1490.34 1211.33 L1489.75 1211.33 L1489.17 1211.33 L1488.58 1211.33 L1487.99 1211.33 L1487.41 1211.33 L1486.82 1211.33 L1486.24 1211.33 L1485.65 1211.33 L1485.06 1211.33 L1484.48 1211.33 L1483.89 1211.33 L1483.3 1211.33 L1482.72 1211.33 L1482.13 1211.33 L1481.54 1211.33 L1480.96 1211.33 L1480.37 1211.33 L1479.78 1211.33 L1479.2 1211.33 L1478.61 1211.33 L1478.03 1211.33 L1477.44 1211.33 L1476.85 1211.33 L1476.27 1211.33 L1475.68 1211.33 L1475.09 1211.33 L1474.51 1211.33 L1473.92 1211.33 L1473.33 1211.33 L1472.75 1211.33 L1472.16 1211.33 L1471.57 1211.33 L1470.99 1211.33 L1470.4 1211.33 L1469.82 1211.33 L1469.23 1211.33 L1468.64 1211.33 L1468.06 1211.33 L1467.47 1211.33 L1466.88 1211.33 L1466.3 1211.33 L1465.71 1211.33 L1465.12 1211.33 L1464.54 1211.33 L1463.95 1211.33 L1463.37 1211.33 L1462.78 1211.33 L1462.19 1211.33 L1461.61 1211.33 L1461.02 1211.33 L1460.43 1211.33 L1459.85 1211.33 L1459.26 1211.33 L1458.67 1211.33 L1458.09 1211.33 L1457.5 1211.33 L1456.91 1211.33 L1456.33 1211.33 L1455.74 1211.33 L1455.16 1211.33 L1454.57 1211.33 L1453.98 1211.33 L1453.4 1211.33 L1452.81 1211.33 L1452.22 1211.33 L1451.64 1211.33 L1451.05 1211.33 L1450.46 1211.33 L1449.88 1211.33 L1449.29 1211.33 L1448.7 1211.33 L1448.12 1211.33 L1447.53 1211.33 L1446.95 1211.33 L1446.36 1211.33 L1445.77 1211.33 L1445.19 1211.33 L1444.6 1211.33 L1444.01 1211.33 L1443.43 1211.33 L1442.84 1211.33 L1442.25 1211.33 L1441.67 1211.33 L1441.08 1211.33 L1440.5 1211.33 L1439.91 1211.33 L1439.32 1211.33 L1438.74 1211.33 L1438.15 1211.33 L1437.56 1211.33 L1436.98 1211.33 L1436.39 1211.33 L1435.8 1211.33 L1435.22 1211.33 L1434.63 1211.33 L1434.04 1211.33 L1433.46 1211.33 L1432.87 1211.33 L1432.29 1211.33 L1431.7 1211.33 L1431.11 1211.33 L1430.53 1211.33 L1429.94 1211.33 L1429.35 1211.33 L1428.77 1211.33 L1428.18 1211.33 L1427.59 1211.33 L1427.01 1211.33 L1426.42 1211.33 L1425.83 1211.33 L1425.25 1211.33 L1424.66 1211.33 L1424.08 1211.33 L1423.49 1211.33 L1422.9 1211.33 L1422.32 1211.33 L1421.73 1211.33 L1421.14 1211.33 L1420.56 1211.33 L1419.97 1211.33 L1419.38 1211.33 L1418.8 1211.33 L1418.21 1211.33 L1417.63 1211.33 L1417.04 1211.33 L1416.45 1211.33 L1415.87 1211.33 L1415.28 1211.33 L1414.69 1211.33 L1414.11 1211.33 L1413.52 1211.33 L1412.93 1211.33 L1412.35 1211.33 L1411.76 1211.33 L1411.17 1211.33 L1410.59 1211.33 L1410 1211.33 L1409.42 1211.33 L1408.83 1211.33 L1408.24 1211.33 L1407.66 1211.33 L1407.07 1211.33 L1406.48 1211.33 L1405.9 1211.33 L1405.31 1211.33 L1404.72 1211.33 L1404.14 1211.33 L1403.55 1211.33 L1402.96 1211.33 L1402.38 1211.33 L1401.79 1211.33 L1401.21 1211.33 L1400.62 1211.33 L1400.03 1211.33 L1399.45 1211.33 L1398.86 1211.33 L1398.27 1211.33 L1397.69 1211.33 L1397.1 1211.33 L1396.51 1211.33 L1395.93 1211.33 L1395.34 1211.33 L1394.75 1211.33 L1394.17 1211.33 L1393.58 1211.33 L1393 1211.33 L1392.41 1211.33 L1391.82 1211.33 L1391.24 1211.33 L1390.65 1211.33 L1390.06 1211.33 L1389.48 1211.33 L1388.89 1211.33 L1388.3 1211.33 L1387.72 1211.33 L1387.13 1211.33 L1386.55 1211.33 L1385.96 1211.33 L1385.37 1211.33 L1384.79 1211.33 L1384.2 1211.33 L1383.61 1211.33 L1383.03 1211.33 L1382.44 1211.33 L1381.85 1211.33 L1381.27 1211.33 L1380.68 1211.33 L1380.09 1211.33 L1379.51 1211.33 L1378.92 1211.33 L1378.34 1211.33 L1377.75 1211.33 L1377.16 1211.33 L1376.58 1211.33 L1375.99 1211.33 L1375.4 1211.33 L1374.82 1211.33 L1374.23 1211.33 L1373.64 1211.33 L1373.06 1211.33 L1372.47 1211.33 L1371.88 1211.33 L1371.3 1211.33 L1370.71 1211.33 L1370.13 1211.33 L1369.54 1211.33 L1368.95 1211.33 L1368.37 1211.33 L1367.78 1211.33 L1367.19 1211.33 L1366.61 1211.33 L1366.02 1211.33 L1365.43 1211.33 L1364.85 1211.33 L1364.26 1211.33 L1363.68 1211.33 L1363.09 1211.33 L1362.5 1211.33 L1361.92 1211.33 L1361.33 1211.33 L1360.74 1211.33 L1360.16 1211.33 L1359.57 1211.33 L1358.98 1211.33 L1358.4 1211.33 L1357.81 1211.33 L1357.22 1211.33 L1356.64 1211.33 L1356.05 1211.33 L1355.47 1211.33 L1354.88 1211.33 L1354.29 1211.33 L1353.71 1211.33 L1353.12 1211.33 L1352.53 1211.33 L1351.95 1211.33 L1351.36 1211.33 L1350.77 1211.33 L1350.19 1211.33 L1349.6 1211.33 L1349.01 1211.33 L1348.43 1211.33 L1347.84 1211.33 L1347.26 1211.33 L1346.67 1211.33 L1346.08 1211.33 L1345.5 1211.33 L1344.91 1211.33 L1344.32 1211.33 L1343.74 1211.33 L1343.15 1211.33 L1342.56 1211.33 L1341.98 1211.33 L1341.39 1211.33 L1340.8 1211.33 L1340.22 1211.33 L1339.63 1211.33 L1339.05 1211.33 L1338.46 1211.33 L1337.87 1211.33 L1337.29 1211.33 L1336.7 1211.33 L1336.11 1211.33 L1335.53 1211.33 L1334.94 1211.33 L1334.35 1211.33 L1333.77 1211.33 L1333.18 1211.33 L1332.6 1211.33 L1332.01 1211.33 L1331.42 1211.33 L1330.84 1211.33 L1330.25 1211.33 L1329.66 1211.33 L1329.08 1211.33 L1328.49 1211.33 L1327.9 1211.33 L1327.32 1211.33 L1326.73 1211.33 L1326.14 1211.33 L1325.56 1211.33 L1324.97 1211.33 L1324.39 1211.33 L1323.8 1211.33 L1323.21 1211.33 L1322.63 1211.33 L1322.04 1211.33 L1321.45 1211.33 L1320.87 1211.33 L1320.28 1211.33 L1319.69 1211.33 L1319.11 1211.33 L1318.52 1211.33 L1317.93 1211.33 L1317.35 1211.33 L1316.76 1211.33 L1316.18 1211.33 L1315.59 1211.33 L1315 1211.33 L1314.42 1211.33 L1313.83 1211.33 L1313.24 1211.33 L1312.66 1211.33 L1312.07 1211.33 L1311.48 1211.33 L1310.9 1211.33 L1310.31 1211.33 L1309.73 1211.33 L1309.14 1211.33 L1308.55 1211.33 L1307.97 1211.33 L1307.38 1211.33 L1306.79 1211.33 L1306.21 1211.33 L1305.62 1211.33 L1305.03 1211.33 L1304.45 1211.33 L1303.86 1211.33 L1303.27 1211.33 L1302.69 1211.33 L1302.1 1211.33 L1301.52 1211.33 L1300.93 1211.33 L1300.34 1211.33 L1299.76 1211.33 L1299.17 1211.33 L1298.58 1211.33 L1298 1211.33 L1297.41 1211.33 L1296.82 1211.33 L1296.24 1211.33 L1295.65 1211.33 L1295.06 1211.33 L1294.48 1211.33 L1293.89 1211.33 L1293.31 1211.33 L1292.72 1211.33 L1292.13 1211.33 L1291.55 1211.33 L1290.96 1211.33 L1290.37 1211.33 L1289.79 1211.33 L1289.2 1211.33 L1288.61 1211.33 L1288.03 1211.33 L1287.44 1211.33 L1286.86 1211.33 L1286.27 1211.33 L1285.68 1211.33 L1285.1 1211.33 L1284.51 1211.33 L1283.92 1211.33 L1283.34 1211.33 L1282.75 1211.33 L1282.16 1211.33 L1281.58 1211.33 L1280.99 1211.33 L1280.4 1211.33 L1279.82 1211.33 L1279.23 1211.33 L1278.65 1211.33 L1278.06 1211.33 L1277.47 1211.33 L1276.89 1211.33 L1276.3 1211.33 L1275.71 1211.33 L1275.13 1211.33 L1274.54 1211.33 L1273.95 1211.33 L1273.37 1211.33 L1272.78 1211.33 L1272.19 1211.33 L1271.61 1211.33 L1271.02 1211.33 L1270.44 1211.33 L1269.85 1211.33 L1269.26 1211.33 L1268.68 1211.33 L1268.09 1211.33 L1267.5 1211.33 L1266.92 1211.33 L1266.33 1211.33 L1265.74 1211.33 L1265.16 1211.33 L1264.57 1211.33 L1263.98 1211.33 L1263.4 1211.33 L1262.81 1211.33 L1262.23 1211.33 L1261.64 1211.33 L1261.05 1211.33 L1260.47 1211.33 L1259.88 1211.33 L1259.29 1211.33 L1258.71 1211.33 L1258.12 1211.33 L1257.53 1211.33 L1256.95 1211.33 L1256.36 1211.33 L1255.78 1211.33 L1255.19 1211.33 L1254.6 1211.33 L1254.02 1211.33 L1253.43 1211.33 L1252.84 1211.33 L1252.26 1211.33 L1251.67 1211.33 L1251.08 1211.33 L1250.5 1211.33 L1249.91 1211.33 L1249.32 1211.33 L1248.74 1211.33 L1248.15 1211.33 L1247.57 1211.33 L1246.98 1211.33 L1246.39 1211.33 L1245.81 1211.33 L1245.22 1211.33 L1244.63 1211.33 L1244.05 1211.33 L1243.46 1211.33 L1242.87 1211.33 L1242.29 1211.33 L1241.7 1211.33 L1241.11 1211.33 L1240.53 1211.33 L1239.94 1211.33 L1239.36 1211.33 L1238.77 1211.33 L1238.18 1211.33 L1237.6 1211.33 L1237.01 1211.33 L1236.42 1211.33 L1235.84 1211.33 L1235.25 1211.33 L1234.66 1211.33 L1234.08 1211.33 L1233.49 1211.33 L1232.91 1211.33 L1232.32 1211.33 L1231.73 1211.33 L1231.15 1211.33 L1230.56 1211.33 L1229.97 1211.33 L1229.39 1211.33 L1228.8 1211.33 L1228.21 1211.33 L1227.63 1211.33 L1227.04 1211.33 L1226.45 1211.33 L1225.87 1211.33 L1225.28 1211.33 L1224.7 1211.33 L1224.11 1211.33 L1223.52 1211.33 L1222.94 1211.33 L1222.35 1211.33 L1221.76 1211.33 L1221.18 1211.33 L1220.59 1211.33 L1220 1211.33 L1219.42 1211.33 L1218.83 1211.33 L1218.24 1211.33 L1217.66 1211.33 L1217.07 1211.33 L1216.49 1211.33 L1215.9 1211.33 L1215.31 1211.33 L1214.73 1211.33 L1214.14 1211.33 L1213.55 1211.33 L1212.97 1211.33 L1212.38 1211.33 L1211.79 1211.33 L1211.21 1211.33 L1210.62 1211.33 L1210.03 1211.33 L1209.45 1211.33 L1208.86 1211.33 L1208.28 1211.33 L1207.69 1211.33 L1207.1 1211.33 L1206.52 1211.33 L1205.93 1211.33 L1205.34 1211.33 L1204.76 1211.33 L1204.17 1211.33 L1203.58 1211.33 L1203 1211.33 L1202.41 1211.33 L1201.83 1211.33 L1201.24 1211.33 L1200.65 1211.33 L1200.07 1211.33 L1199.48 1211.33 L1198.89 1211.33 L1198.31 1211.33 L1197.72 1211.33 L1197.13 1211.33 L1196.55 1211.33 L1195.96 1211.33 L1195.37 1211.33 L1194.79 1211.33 L1194.2 1211.33 L1193.62 1211.33 L1193.03 1211.33 L1192.44 1211.33 L1191.86 1211.33 L1191.27 1211.33 L1190.68 1211.33 L1190.1 1211.33 L1189.51 1211.33 L1188.92 1211.33 L1188.34 1211.33 L1187.75 1211.33 L1187.16 1211.33 L1186.58 1211.33 L1185.99 1211.33 L1185.41 1211.33 L1184.82 1211.33 L1184.23 1211.33 L1183.65 1211.33 L1183.06 1211.33 L1182.47 1211.33 L1181.89 1211.33 L1181.3 1211.33 L1180.71 1211.33 L1180.13 1211.33 L1179.54 1211.33 L1178.96 1211.33 L1178.37 1211.33 L1177.78 1211.33 L1177.2 1211.33 L1176.61 1211.33 L1176.02 1211.33 L1175.44 1211.33 L1174.85 1211.33 L1174.26 1211.33 L1173.68 1211.33 L1173.09 1211.33 L1172.5 1211.33 L1171.92 1211.33 L1171.33 1211.33 L1170.75 1211.33 L1170.16 1211.33 L1169.57 1211.33 L1168.99 1211.33 L1168.4 1211.33 L1167.81 1211.33 L1167.23 1211.33 L1166.64 1211.33 L1166.05 1211.33 L1165.47 1211.33 L1164.88 1211.33 L1164.29 1211.33 L1163.71 1211.33 L1163.12 1211.33 L1162.54 1211.33 L1161.95 1211.33 L1161.36 1211.33 L1160.78 1211.33 L1160.19 1211.33 L1159.6 1211.33 L1159.02 1211.33 L1158.43 1211.33 L1157.84 1211.33 L1157.26 1211.33 L1156.67 1211.33 L1156.09 1211.33 L1155.5 1211.33 L1154.91 1211.33 L1154.33 1211.33 L1153.74 1211.33 L1153.15 1211.33 L1152.57 1211.33 L1151.98 1211.33 L1151.39 1211.33 L1150.81 1211.33 L1150.22 1211.33 L1149.63 1211.33 L1149.05 1211.33 L1148.46 1211.33 L1147.88 1211.33 L1147.29 1211.33 L1146.7 1211.33 L1146.12 1211.33 L1145.53 1211.33 L1144.94 1211.33 L1144.36 1211.33 L1143.77 1211.33 L1143.18 1211.33 L1142.6 1211.33 L1142.01 1211.33 L1141.42 1211.33 L1140.84 1211.33 L1140.25 1211.33 L1139.67 1211.33 L1139.08 1211.33 L1138.49 1211.33 L1137.91 1211.33 L1137.32 1211.33 L1136.73 1211.33 L1136.15 1211.33 L1135.56 1211.33 L1134.97 1211.33 L1134.39 1211.33 L1133.8 1211.33 L1133.21 1211.33 L1132.63 1211.33 L1132.04 1211.33 L1131.46 1211.33 L1130.87 1211.33 L1130.28 1211.33 L1129.7 1211.33 L1129.11 1211.33 L1128.52 1211.33 L1127.94 1211.33 L1127.35 1211.33 L1126.76 1211.33 L1126.18 1211.33 L1125.59 1211.33 L1125.01 1211.33 L1124.42 1211.33 L1123.83 1211.33 L1123.25 1211.33 L1122.66 1211.33 L1122.07 1211.33 L1121.49 1211.33 L1120.9 1211.33 L1120.31 1211.33 L1119.73 1211.33 L1119.14 1211.33 L1118.55 1211.33 L1117.97 1211.33 L1117.38 1211.33 L1116.8 1211.33 L1116.21 1211.33 L1115.62 1211.33 L1115.04 1211.33 L1114.45 1211.33 L1113.86 1211.33 L1113.28 1211.33 L1112.69 1211.33 L1112.1 1211.33 L1111.52 1211.33 L1110.93 1211.33 L1110.34 1211.33 L1109.76 1211.33 L1109.17 1211.33 L1108.59 1211.33 L1108 1211.33 L1107.41 1211.33 L1106.83 1211.33 L1106.24 1211.33 L1105.65 1211.33 L1105.07 1211.33 L1104.48 1211.33 L1103.89 1211.33 L1103.31 1211.33 L1102.72 1211.33 L1102.14 1211.33 L1101.55 1211.33 L1100.96 1211.33 L1100.38 1211.33 L1099.79 1211.33 L1099.2 1211.33 L1098.62 1211.33 L1098.03 1211.33 L1097.44 1211.33 L1096.86 1211.33 L1096.27 1211.33 L1095.68 1211.33 L1095.1 1211.33 L1094.51 1211.33 L1093.93 1211.33 L1093.34 1211.33 L1092.75 1211.33 L1092.17 1211.33 L1091.58 1211.33 L1090.99 1211.33 L1090.41 1211.33 L1089.82 1211.33 L1089.23 1211.33 L1088.65 1211.33 L1088.06 1211.33 L1087.47 1211.33 L1086.89 1211.33 L1086.3 1211.33 L1085.72 1211.33 L1085.13 1211.33 L1084.54 1211.33 L1083.96 1211.33 L1083.37 1211.33 L1082.78 1211.33 L1082.2 1211.33 L1081.61 1211.33 L1081.02 1211.33 L1080.44 1211.33 L1079.85 1211.33 L1079.26 1211.33 L1078.68 1211.33 L1078.09 1211.33 L1077.51 1211.33 L1076.92 1211.33 L1076.33 1211.33 L1075.75 1211.33 L1075.16 1211.33 L1074.57 1211.33 L1073.99 1211.33 L1073.4 1211.33 L1072.81 1211.33 L1072.23 1211.33 L1071.64 1211.33 L1071.06 1211.33 L1070.47 1211.33 L1069.88 1211.33 L1069.3 1211.33 L1068.71 1211.33 L1068.12 1211.33 L1067.54 1211.33 L1066.95 1211.33 L1066.36 1211.33 L1065.78 1211.33 L1065.19 1211.33 L1064.6 1211.33 L1064.02 1211.33 L1063.43 1211.33 L1062.85 1211.33 L1062.26 1211.33 L1061.67 1211.33 L1061.09 1211.33 L1060.5 1211.33 L1059.91 1211.33 L1059.33 1211.33 L1058.74 1211.33 L1058.15 1211.33 L1057.57 1211.33 L1056.98 1211.33 L1056.39 1211.33 L1055.81 1211.33 L1055.22 1211.33 L1054.64 1211.33 L1054.05 1211.33 L1053.46 1211.33 L1052.88 1211.33 L1052.29 1211.33 L1051.7 1211.33 L1051.12 1211.33 L1050.53 1211.33 L1049.94 1211.33 L1049.36 1211.33 L1048.77 1211.33 L1048.19 1211.33 L1047.6 1211.33 L1047.01 1211.33 L1046.43 1211.33 L1045.84 1211.33 L1045.25 1211.33 L1044.67 1211.33 L1044.08 1211.33 L1043.49 1211.33 L1042.91 1211.33 L1042.32 1211.33 L1041.73 1211.33 L1041.15 1211.33 L1040.56 1211.33 L1039.98 1211.33 L1039.39 1211.33 L1038.8 1211.33 L1038.22 1211.33 L1037.63 1211.33 L1037.04 1211.33 L1036.46 1211.33 L1035.87 1211.33 L1035.28 1211.33 L1034.7 1211.33 L1034.11 1211.33 L1033.52 1211.33 L1032.94 1211.33 L1032.35 1211.33 L1031.77 1211.33 L1031.18 1211.33 L1030.59 1211.33 L1030.01 1211.33 L1029.42 1211.33 L1028.83 1211.33 L1028.25 1211.33 L1027.66 1211.33 L1027.07 1211.33 L1026.49 1211.33 L1025.9 1211.33 L1025.32 1211.33 L1024.73 1211.33 L1024.14 1211.33 L1023.56 1211.33 L1022.97 1211.33 L1022.38 1211.33 L1021.8 1211.33 L1021.21 1211.33 L1020.62 1211.33 L1020.04 1211.33 L1019.45 1211.33 L1018.86 1211.33 L1018.28 1211.33 L1017.69 1211.33 L1017.11 1211.33 L1016.52 1211.33 L1015.93 1211.33 L1015.35 1211.33 L1014.76 1211.33 L1014.17 1211.33 L1013.59 1211.33 L1013 1211.33 L1012.41 1211.33 L1011.83 1211.33 L1011.24 1211.33 L1010.65 1211.33 L1010.07 1211.33 L1009.48 1211.33 L1008.9 1211.33 L1008.31 1211.33 L1007.72 1211.33 L1007.14 1211.33 L1006.55 1211.33 L1005.96 1211.33 L1005.38 1211.33 L1004.79 1211.33 L1004.2 1211.33 L1003.62 1211.33 L1003.03 1211.33 L1002.44 1211.33 L1001.86 1211.33 L1001.27 1211.33 L1000.69 1211.33 L1000.1 1211.33 L999.513 1211.33 L998.926 1211.33 L998.34 1211.33 L997.754 1211.33 L997.167 1211.33 L996.581 1211.33 L995.994 1211.33 L995.408 1211.33 L994.822 1211.33 L994.235 1211.33 L993.649 1211.33 L993.062 1211.33 L992.476 1211.33 L991.889 1211.33 L991.303 1211.33 L990.717 1211.33 L990.13 1211.33 L989.544 1211.33 L988.957 1211.33 L988.371 1211.33 L987.785 1211.33 L987.198 1211.33 L986.612 1211.33 L986.025 1211.33  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.69 986.612,1211.69 987.198,1211.69 987.785,1211.69 988.371,1211.69 988.957,1211.69 989.544,1211.69 990.13,1211.69 990.717,1211.69 991.303,1211.69 991.889,1211.69 992.476,1211.69 993.062,1211.69 993.649,1211.69 994.235,1211.69 994.822,1211.69 995.408,1211.69 995.994,1211.69 996.581,1211.69 997.167,1211.69 997.754,1211.69 998.34,1211.69 998.926,1211.69 999.513,1211.69 1000.1,1211.69 1000.69,1211.69 1001.27,1211.69 1001.86,1211.69 1002.44,1211.69 1003.03,1211.69 1003.62,1211.69 1004.2,1211.69 1004.79,1211.69 1005.38,1211.69 1005.96,1211.69 1006.55,1211.69 1007.14,1211.69 1007.72,1211.69 1008.31,1211.69 1008.9,1211.69 1009.48,1211.69 1010.07,1211.69 1010.65,1211.69 1011.24,1211.69 1011.83,1211.69 1012.41,1211.69 1013,1211.69 1013.59,1211.69 1014.17,1211.69 1014.76,1211.69 1015.35,1211.69 1015.93,1211.69 1016.52,1211.69 1017.11,1211.69 1017.69,1211.69 1018.28,1211.69 1018.86,1211.69 1019.45,1211.69 1020.04,1211.69 1020.62,1211.69 1021.21,1211.69 1021.8,1211.69 1022.38,1211.69 1022.97,1211.69 1023.56,1211.69 1024.14,1211.69 1024.73,1211.69 1025.32,1211.69 1025.9,1211.69 1026.49,1211.69 1027.07,1211.69 1027.66,1211.69 1028.25,1211.69 1028.83,1211.69 1029.42,1211.69 1030.01,1211.69 1030.59,1211.69 1031.18,1211.69 1031.77,1211.69 1032.35,1211.69 1032.94,1211.69 1033.52,1211.69 1034.11,1211.69 1034.7,1211.69 1035.28,1211.69 1035.87,1211.69 1036.46,1211.69 1037.04,1211.69 1037.63,1211.69 1038.22,1211.69 1038.8,1211.69 1039.39,1211.69 1039.98,1211.69 1040.56,1211.69 1041.15,1211.69 1041.73,1211.69 1042.32,1211.69 1042.91,1211.69 1043.49,1211.69 1044.08,1211.69 1044.67,1211.69 1045.25,1211.69 1045.84,1211.69 1046.43,1211.69 1047.01,1211.69 1047.6,1211.69 1048.19,1211.69 1048.77,1211.69 1049.36,1211.69 1049.94,1211.69 1050.53,1211.69 1051.12,1211.69 1051.7,1211.69 1052.29,1211.69 1052.88,1211.69 1053.46,1211.69 1054.05,1211.69 1054.64,1211.69 1055.22,1211.69 1055.81,1211.69 1056.39,1211.69 1056.98,1211.69 1057.57,1211.69 1058.15,1211.69 1058.74,1211.69 1059.33,1211.69 1059.91,1211.69 1060.5,1211.69 1061.09,1211.69 1061.67,1211.69 1062.26,1211.69 1062.85,1211.69 1063.43,1211.69 1064.02,1211.69 1064.6,1211.69 1065.19,1211.69 1065.78,1211.69 1066.36,1211.69 1066.95,1211.69 1067.54,1211.69 1068.12,1211.69 1068.71,1211.69 1069.3,1211.69 1069.88,1211.69 1070.47,1211.69 1071.06,1211.69 1071.64,1211.69 1072.23,1211.69 1072.81,1211.69 1073.4,1211.69 1073.99,1211.69 1074.57,1211.69 1075.16,1211.69 1075.75,1211.69 1076.33,1211.69 1076.92,1211.69 1077.51,1211.69 1078.09,1211.69 1078.68,1211.69 1079.26,1211.69 1079.85,1211.69 1080.44,1211.69 1081.02,1211.69 1081.61,1211.69 1082.2,1211.69 1082.78,1211.69 1083.37,1211.69 1083.96,1211.69 1084.54,1211.69 1085.13,1211.69 1085.72,1211.69 1086.3,1211.69 1086.89,1211.69 1087.47,1211.69 1088.06,1211.69 1088.65,1211.69 1089.23,1211.69 1089.82,1211.69 1090.41,1211.69 1090.99,1211.69 1091.58,1211.69 1092.17,1211.69 1092.75,1211.69 1093.34,1211.69 1093.93,1211.69 1094.51,1211.69 1095.1,1211.69 1095.68,1211.69 1096.27,1211.69 1096.86,1211.69 1097.44,1211.69 1098.03,1211.69 1098.62,1211.69 1099.2,1211.69 1099.79,1211.69 1100.38,1211.69 1100.96,1211.69 1101.55,1211.69 1102.14,1211.69 1102.72,1211.69 1103.31,1211.69 1103.89,1211.69 1104.48,1211.69 1105.07,1211.69 1105.65,1211.69 1106.24,1211.69 1106.83,1211.69 1107.41,1211.69 1108,1211.69 1108.59,1211.69 1109.17,1211.69 1109.76,1211.69 1110.34,1211.69 1110.93,1211.69 1111.52,1211.69 1112.1,1211.69 1112.69,1211.69 1113.28,1211.69 1113.86,1211.69 1114.45,1211.69 1115.04,1211.69 1115.62,1211.69 1116.21,1211.69 1116.8,1211.69 1117.38,1211.69 1117.97,1211.69 1118.55,1211.69 1119.14,1211.69 1119.73,1211.69 1120.31,1211.69 1120.9,1211.69 1121.49,1211.69 1122.07,1211.69 1122.66,1211.69 1123.25,1211.69 1123.83,1211.69 1124.42,1211.69 1125.01,1211.69 1125.59,1211.69 1126.18,1211.69 1126.76,1211.69 1127.35,1211.69 1127.94,1211.69 1128.52,1211.69 1129.11,1211.69 1129.7,1211.69 1130.28,1211.69 1130.87,1211.69 1131.46,1211.69 1132.04,1211.69 1132.63,1211.69 1133.21,1211.69 1133.8,1211.69 1134.39,1211.69 1134.97,1211.69 1135.56,1211.69 1136.15,1211.69 1136.73,1211.69 1137.32,1211.69 1137.91,1211.69 1138.49,1211.69 1139.08,1211.69 1139.67,1211.69 1140.25,1211.69 1140.84,1211.69 1141.42,1211.69 1142.01,1211.69 1142.6,1211.69 1143.18,1211.69 1143.77,1211.69 1144.36,1211.69 1144.94,1211.69 1145.53,1211.69 1146.12,1211.69 1146.7,1211.69 1147.29,1211.69 1147.88,1211.69 1148.46,1211.69 1149.05,1211.69 1149.63,1211.69 1150.22,1211.69 1150.81,1211.69 1151.39,1211.69 1151.98,1211.69 1152.57,1211.69 1153.15,1211.69 1153.74,1211.69 1154.33,1211.69 1154.91,1211.69 1155.5,1211.69 1156.09,1211.69 1156.67,1211.69 1157.26,1211.69 1157.84,1211.69 1158.43,1211.69 1159.02,1211.69 1159.6,1211.69 1160.19,1211.69 1160.78,1211.69 1161.36,1211.69 1161.95,1211.69 1162.54,1211.69 1163.12,1211.69 1163.71,1211.69 1164.29,1211.69 1164.88,1211.69 1165.47,1211.69 1166.05,1211.69 1166.64,1211.69 1167.23,1211.69 1167.81,1211.69 1168.4,1211.69 1168.99,1211.69 1169.57,1211.69 1170.16,1211.69 1170.75,1211.69 1171.33,1211.69 1171.92,1211.69 1172.5,1211.69 1173.09,1211.69 1173.68,1211.69 1174.26,1211.69 1174.85,1211.69 1175.44,1211.69 1176.02,1211.69 1176.61,1211.69 1177.2,1211.69 1177.78,1211.69 1178.37,1211.69 1178.96,1211.69 1179.54,1211.69 1180.13,1211.69 1180.71,1211.69 1181.3,1211.69 1181.89,1211.69 1182.47,1211.69 1183.06,1211.69 1183.65,1211.69 1184.23,1211.69 1184.82,1211.69 1185.41,1211.69 1185.99,1211.69 1186.58,1211.69 1187.16,1211.69 1187.75,1211.69 1188.34,1211.69 1188.92,1211.69 1189.51,1211.69 1190.1,1211.69 1190.68,1211.69 1191.27,1211.69 1191.86,1211.69 1192.44,1211.69 1193.03,1211.69 1193.62,1211.69 1194.2,1211.69 1194.79,1211.69 1195.37,1211.69 1195.96,1211.69 1196.55,1211.69 1197.13,1211.69 1197.72,1211.69 1198.31,1211.69 1198.89,1211.69 1199.48,1211.69 1200.07,1211.69 1200.65,1211.69 1201.24,1211.69 1201.83,1211.69 1202.41,1211.69 1203,1211.69 1203.58,1211.69 1204.17,1211.69 1204.76,1211.69 1205.34,1211.69 1205.93,1211.69 1206.52,1211.69 1207.1,1211.69 1207.69,1211.69 1208.28,1211.69 1208.86,1211.69 1209.45,1211.69 1210.03,1211.69 1210.62,1211.69 1211.21,1211.69 1211.79,1211.69 1212.38,1211.69 1212.97,1211.69 1213.55,1211.69 1214.14,1211.69 1214.73,1211.69 1215.31,1211.69 1215.9,1211.69 1216.49,1211.69 1217.07,1211.69 1217.66,1211.69 1218.24,1211.69 1218.83,1211.69 1219.42,1211.69 1220,1211.69 1220.59,1211.69 1221.18,1211.69 1221.76,1211.69 1222.35,1211.69 1222.94,1211.69 1223.52,1211.69 1224.11,1211.69 1224.7,1211.69 1225.28,1211.69 1225.87,1211.69 1226.45,1211.69 1227.04,1211.69 1227.63,1211.69 1228.21,1211.69 1228.8,1211.69 1229.39,1211.69 1229.97,1211.69 1230.56,1211.69 1231.15,1211.69 1231.73,1211.69 1232.32,1211.69 1232.91,1211.69 1233.49,1211.69 1234.08,1211.69 1234.66,1211.69 1235.25,1211.69 1235.84,1211.69 1236.42,1211.69 1237.01,1211.69 1237.6,1211.69 1238.18,1211.69 1238.77,1211.69 1239.36,1211.69 1239.94,1211.69 1240.53,1211.69 1241.11,1211.69 1241.7,1211.69 1242.29,1211.69 1242.87,1211.69 1243.46,1211.69 1244.05,1211.69 1244.63,1211.69 1245.22,1211.69 1245.81,1211.69 1246.39,1211.69 1246.98,1211.69 1247.57,1211.69 1248.15,1211.69 1248.74,1211.69 1249.32,1211.69 1249.91,1211.69 1250.5,1211.69 1251.08,1211.69 1251.67,1211.69 1252.26,1211.69 1252.84,1211.69 1253.43,1211.69 1254.02,1211.69 1254.6,1211.69 1255.19,1211.69 1255.78,1211.69 1256.36,1211.69 1256.95,1211.69 1257.53,1211.69 1258.12,1211.69 1258.71,1211.69 1259.29,1211.69 1259.88,1211.69 1260.47,1211.69 1261.05,1211.69 1261.64,1211.69 1262.23,1211.69 1262.81,1211.69 1263.4,1211.69 1263.98,1211.69 1264.57,1211.69 1265.16,1211.69 1265.74,1211.69 1266.33,1211.69 1266.92,1211.69 1267.5,1211.69 1268.09,1211.69 1268.68,1211.69 1269.26,1211.69 1269.85,1211.69 1270.44,1211.69 1271.02,1211.69 1271.61,1211.69 1272.19,1211.69 1272.78,1211.69 1273.37,1211.69 1273.95,1211.69 1274.54,1211.69 1275.13,1211.69 1275.71,1211.69 1276.3,1211.69 1276.89,1211.69 1277.47,1211.69 1278.06,1211.69 1278.65,1211.69 1279.23,1211.69 1279.82,1211.69 1280.4,1211.69 1280.99,1211.69 1281.58,1211.69 1282.16,1211.69 1282.75,1211.69 1283.34,1211.69 1283.92,1211.69 1284.51,1211.69 1285.1,1211.69 1285.68,1211.69 1286.27,1211.69 1286.86,1211.69 1287.44,1211.69 1288.03,1211.69 1288.61,1211.69 1289.2,1211.69 1289.79,1211.69 1290.37,1211.69 1290.96,1211.69 1291.55,1211.69 1292.13,1211.69 1292.72,1211.69 1293.31,1211.69 1293.89,1211.69 1294.48,1211.69 1295.06,1211.69 1295.65,1211.69 1296.24,1211.69 1296.82,1211.69 1297.41,1211.69 1298,1211.69 1298.58,1211.69 1299.17,1211.69 1299.76,1211.69 1300.34,1211.69 1300.93,1211.69 1301.52,1211.69 1302.1,1211.69 1302.69,1211.69 1303.27,1211.69 1303.86,1211.69 1304.45,1211.69 1305.03,1211.69 1305.62,1211.69 1306.21,1211.69 1306.79,1211.69 1307.38,1211.69 1307.97,1211.69 1308.55,1211.69 1309.14,1211.69 1309.73,1211.69 1310.31,1211.69 1310.9,1211.69 1311.48,1211.69 1312.07,1211.69 1312.66,1211.69 1313.24,1211.69 1313.83,1211.69 1314.42,1211.69 1315,1211.69 1315.59,1211.69 1316.18,1211.69 1316.76,1211.69 1317.35,1211.69 1317.93,1211.69 1318.52,1211.69 1319.11,1211.69 1319.69,1211.69 1320.28,1211.69 1320.87,1211.69 1321.45,1211.69 1322.04,1211.69 1322.63,1211.69 1323.21,1211.69 1323.8,1211.69 1324.39,1211.69 1324.97,1211.69 1325.56,1211.69 1326.14,1211.69 1326.73,1211.69 1327.32,1211.69 1327.9,1211.69 1328.49,1211.69 1329.08,1211.69 1329.66,1211.69 1330.25,1211.69 1330.84,1211.69 1331.42,1211.69 1332.01,1211.69 1332.6,1211.69 1333.18,1211.69 1333.77,1211.69 1334.35,1211.69 1334.94,1211.69 1335.53,1211.69 1336.11,1211.69 1336.7,1211.69 1337.29,1211.69 1337.87,1211.69 1338.46,1211.69 1339.05,1211.69 1339.63,1211.69 1340.22,1211.69 1340.8,1211.69 1341.39,1211.69 1341.98,1211.69 1342.56,1211.69 1343.15,1211.69 1343.74,1211.69 1344.32,1211.69 1344.91,1211.69 1345.5,1211.69 1346.08,1211.69 1346.67,1211.69 1347.26,1211.69 1347.84,1211.69 1348.43,1211.69 1349.01,1211.69 1349.6,1211.69 1350.19,1211.69 1350.77,1211.69 1351.36,1211.69 1351.95,1211.69 1352.53,1211.69 1353.12,1211.69 1353.71,1211.69 1354.29,1211.69 1354.88,1211.69 1355.47,1211.69 1356.05,1211.69 1356.64,1211.69 1357.22,1211.69 1357.81,1211.69 1358.4,1211.69 1358.98,1211.69 1359.57,1211.69 1360.16,1211.69 1360.74,1211.69 1361.33,1211.69 1361.92,1211.69 1362.5,1211.69 1363.09,1211.69 1363.68,1211.69 1364.26,1211.69 1364.85,1211.69 1365.43,1211.69 1366.02,1211.69 1366.61,1211.69 1367.19,1211.69 1367.78,1211.69 1368.37,1211.69 1368.95,1211.69 1369.54,1211.69 1370.13,1211.69 1370.71,1211.69 1371.3,1211.69 1371.88,1211.69 1372.47,1211.69 1373.06,1211.69 1373.64,1211.69 1374.23,1211.69 1374.82,1211.69 1375.4,1211.69 1375.99,1211.69 1376.58,1211.69 1377.16,1211.69 1377.75,1211.69 1378.34,1211.69 1378.92,1211.69 1379.51,1211.69 1380.09,1211.69 1380.68,1211.69 1381.27,1211.69 1381.85,1211.69 1382.44,1211.69 1383.03,1211.69 1383.61,1211.69 1384.2,1211.69 1384.79,1211.69 1385.37,1211.69 1385.96,1211.69 1386.55,1211.69 1387.13,1211.69 1387.72,1211.69 1388.3,1211.69 1388.89,1211.69 1389.48,1211.69 1390.06,1211.69 1390.65,1211.69 1391.24,1211.69 1391.82,1211.69 1392.41,1211.69 1393,1211.69 1393.58,1211.69 1394.17,1211.69 1394.75,1211.69 1395.34,1211.69 1395.93,1211.69 1396.51,1211.69 1397.1,1211.69 1397.69,1211.69 1398.27,1211.69 1398.86,1211.69 1399.45,1211.69 1400.03,1211.69 1400.62,1211.69 1401.21,1211.69 1401.79,1211.69 1402.38,1211.69 1402.96,1211.69 1403.55,1211.69 1404.14,1211.69 1404.72,1211.69 1405.31,1211.69 1405.9,1211.69 1406.48,1211.69 1407.07,1211.69 1407.66,1211.69 1408.24,1211.69 1408.83,1211.69 1409.42,1211.69 1410,1211.69 1410.59,1211.69 1411.17,1211.69 1411.76,1211.69 1412.35,1211.69 1412.93,1211.69 1413.52,1211.69 1414.11,1211.69 1414.69,1211.69 1415.28,1211.69 1415.87,1211.69 1416.45,1211.69 1417.04,1211.69 1417.63,1211.69 1418.21,1211.69 1418.8,1211.69 1419.38,1211.69 1419.97,1211.69 1420.56,1211.69 1421.14,1211.69 1421.73,1211.69 1422.32,1211.69 1422.9,1211.69 1423.49,1211.69 1424.08,1211.69 1424.66,1211.69 1425.25,1211.69 1425.83,1211.69 1426.42,1211.69 1427.01,1211.69 1427.59,1211.69 1428.18,1211.69 1428.77,1211.69 1429.35,1211.69 1429.94,1211.69 1430.53,1211.69 1431.11,1211.69 1431.7,1211.69 1432.29,1211.69 1432.87,1211.69 1433.46,1211.69 1434.04,1211.69 1434.63,1211.69 1435.22,1211.69 1435.8,1211.69 1436.39,1211.69 1436.98,1211.69 1437.56,1211.69 1438.15,1211.69 1438.74,1211.69 1439.32,1211.69 1439.91,1211.69 1440.5,1211.69 1441.08,1211.69 1441.67,1211.69 1442.25,1211.69 1442.84,1211.69 1443.43,1211.69 1444.01,1211.69 1444.6,1211.69 1445.19,1211.69 1445.77,1211.69 1446.36,1211.69 1446.95,1211.69 1447.53,1211.69 1448.12,1211.69 1448.7,1211.69 1449.29,1211.69 1449.88,1211.69 1450.46,1211.69 1451.05,1211.69 1451.64,1211.69 1452.22,1211.69 1452.81,1211.69 1453.4,1211.69 1453.98,1211.69 1454.57,1211.69 1455.16,1211.69 1455.74,1211.69 1456.33,1211.69 1456.91,1211.69 1457.5,1211.69 1458.09,1211.69 1458.67,1211.69 1459.26,1211.69 1459.85,1211.69 1460.43,1211.69 1461.02,1211.69 1461.61,1211.69 1462.19,1211.69 1462.78,1211.69 1463.37,1211.69 1463.95,1211.69 1464.54,1211.69 1465.12,1211.69 1465.71,1211.69 1466.3,1211.69 1466.88,1211.69 1467.47,1211.69 1468.06,1211.69 1468.64,1211.69 1469.23,1211.69 1469.82,1211.69 1470.4,1211.69 1470.99,1211.69 1471.57,1211.69 1472.16,1211.69 1472.75,1211.69 1473.33,1211.69 1473.92,1211.69 1474.51,1211.69 1475.09,1211.69 1475.68,1211.69 1476.27,1211.69 1476.85,1211.69 1477.44,1211.69 1478.03,1211.69 1478.61,1211.69 1479.2,1211.69 1479.78,1211.69 1480.37,1211.69 1480.96,1211.69 1481.54,1211.69 1482.13,1211.69 1482.72,1211.69 1483.3,1211.69 1483.89,1211.69 1484.48,1211.69 1485.06,1211.69 1485.65,1211.69 1486.24,1211.69 1486.82,1211.69 1487.41,1211.69 1487.99,1211.69 1488.58,1211.69 1489.17,1211.69 1489.75,1211.69 1490.34,1211.69 1490.93,1211.69 1491.51,1211.69 1492.1,1211.69 1492.69,1211.69 1493.27,1211.69 1493.86,1211.69 1494.45,1211.69 1495.03,1211.69 1495.62,1211.69 1496.2,1211.69 1496.79,1211.69 1497.38,1211.69 1497.96,1211.69 1498.55,1211.69 1499.14,1211.69 1499.72,1211.69 1500.31,1211.69 1500.9,1211.69 1501.48,1211.69 1502.07,1211.69 1502.65,1211.69 1503.24,1211.69 1503.83,1211.69 1504.41,1211.69 1505,1211.69 1505.59,1211.69 1506.17,1211.69 1506.76,1211.69 1507.35,1211.69 1507.93,1211.69 1508.52,1211.69 1509.11,1211.69 1509.69,1211.69 1510.28,1211.69 1510.86,1211.69 1511.45,1211.69 1512.04,1211.69 1512.62,1211.69 1513.21,1211.69 1513.8,1211.69 1514.38,1211.69 1514.97,1211.69 1515.56,1211.69 1516.14,1211.69 1516.73,1211.69 1517.32,1211.69 1517.9,1211.69 1518.49,1211.69 1519.07,1211.69 1519.66,1211.69 1520.25,1211.69 1520.83,1211.69 1521.42,1211.69 1522.01,1211.69 1522.59,1211.69 1523.18,1211.69 1523.77,1211.69 1524.35,1211.69 1524.94,1211.69 1525.52,1211.69 1526.11,1211.69 1526.7,1211.69 1527.28,1211.69 1527.87,1211.69 1528.46,1211.69 1529.04,1211.69 1529.63,1211.69 1530.22,1211.69 1530.8,1211.69 1531.39,1211.69 1531.98,1211.69 1532.56,1211.69 1533.15,1211.69 1533.73,1211.69 1534.32,1211.69 1534.91,1211.69 1535.49,1211.69 1536.08,1211.69 1536.67,1211.69 1537.25,1211.69 1537.84,1211.69 1538.43,1211.69 1539.01,1211.69 1539.6,1211.69 1540.19,1211.69 1540.77,1211.69 1541.36,1211.69 1541.94,1211.69 1542.53,1211.69 1543.12,1211.69 1543.7,1211.69 1544.29,1211.69 1544.88,1211.69 1545.46,1211.69 1546.05,1211.69 1546.64,1211.69 1547.22,1211.69 1547.81,1211.69 1548.4,1211.69 1548.98,1211.69 1549.57,1211.69 1550.15,1211.69 1550.74,1211.69 1551.33,1211.69 1551.91,1211.69 1552.5,1211.69 1553.09,1211.69 1553.67,1211.69 1554.26,1211.69 1554.85,1211.69 1555.43,1211.69 1556.02,1211.69 1556.6,1211.69 1557.19,1211.69 1557.78,1211.69 1558.36,1211.69 1558.95,1211.69 1559.54,1211.69 1560.12,1211.69 1560.71,1211.69 1561.3,1211.69 1561.88,1211.69 1562.47,1211.69 1563.06,1211.69 1563.64,1211.69 1564.23,1211.69 1564.81,1211.69 1565.4,1211.69 1565.99,1211.69 1566.57,1211.69 1567.16,1211.69 1567.75,1211.69 1568.33,1211.69 1568.92,1211.69 1569.51,1211.69 1570.09,1211.69 1570.68,1211.69 1571.27,1211.69 1571.85,1211.69 1572.44,1211.69 1573.02,1211.69 1573.61,1211.69 1574.2,1211.69 1574.78,1211.69 1575.37,1211.69 1575.96,1211.69 1576.54,1211.69 1577.13,1211.69 1577.72,1211.69 1578.3,1211.69 1578.89,1211.69 1579.47,1211.69 1580.06,1211.69 1580.65,1211.69 1581.23,1211.69 1581.82,1211.69 1582.41,1211.69 1582.99,1211.69 1583.58,1211.69 1584.17,1211.69 1584.75,1211.69 1585.34,1211.69 1585.93,1211.69 1586.51,1211.69 1587.1,1211.69 1587.68,1211.69 1588.27,1211.69 1588.86,1211.69 1589.44,1211.69 1590.03,1211.69 1590.62,1211.69 1591.2,1211.69 1591.79,1211.69 1592.38,1211.69 1592.96,1211.69 1593.55,1211.69 1594.14,1211.69 1594.72,1211.69 1595.31,1211.69 1595.89,1211.69 1596.48,1211.69 1597.07,1211.69 1597.65,1211.69 1598.24,1211.69 1598.83,1211.69 1599.41,1211.69 1600,1211.69 1600.59,1211.69 1601.17,1211.69 1601.76,1211.69 1602.34,1211.69 1602.93,1211.69 1603.52,1211.69 1604.1,1211.69 1604.69,1211.69 1605.28,1211.69 1605.86,1211.69 1606.45,1211.69 1607.04,1211.69 1607.62,1211.69 1608.21,1211.69 1608.8,1211.69 1609.38,1211.69 1609.97,1211.69 1610.55,1211.69 1611.14,1211.69 1611.73,1211.69 1612.31,1211.69 1612.9,1211.69 1613.49,1211.69 1614.07,1211.69 1614.66,1211.69 1615.25,1211.69 1615.83,1211.69 1616.42,1211.69 1617.01,1211.69 1617.59,1211.69 1618.18,1211.69 1618.76,1211.69 1619.35,1211.69 1619.94,1211.69 1620.52,1211.69 1621.11,1211.69 1621.7,1211.69 1622.28,1211.69 1622.87,1211.69 1623.46,1211.69 1624.04,1211.69 1624.63,1211.69 1625.22,1211.69 1625.8,1211.69 1626.39,1211.69 1626.97,1211.69 1627.56,1211.69 1628.15,1211.69 1628.73,1211.69 1629.32,1211.69 1629.91,1211.69 1630.49,1211.69 1631.08,1211.69 1631.67,1211.69 1632.25,1211.69 1632.84,1211.69 1633.42,1211.69 1634.01,1211.69 1634.6,1211.69 1635.18,1211.69 1635.77,1211.69 1636.36,1211.69 1636.94,1211.69 1637.53,1211.69 1638.12,1211.69 1638.7,1211.69 1639.29,1211.69 1639.88,1211.69 1640.46,1211.69 1641.05,1211.69 1641.63,1211.69 1642.22,1211.69 1642.81,1211.69 1643.39,1211.69 1643.98,1211.69 1644.57,1211.69 1645.15,1211.69 1645.74,1211.69 1646.33,1211.69 1646.91,1211.69 1647.5,1211.69 1648.09,1211.69 1648.67,1211.69 1649.26,1211.69 1649.84,1211.69 1650.43,1211.69 1651.02,1211.69 1651.6,1211.69 1652.19,1211.69 1652.78,1211.69 1653.36,1211.69 1653.95,1211.69 1654.54,1211.69 1655.12,1211.69 1655.71,1211.69 1656.29,1211.69 1656.88,1211.69 1657.47,1211.69 1658.05,1211.69 1658.64,1211.69 1659.23,1211.69 1659.81,1211.69 1660.4,1211.69 1660.99,1211.69 1661.57,1211.69 1662.16,1211.69 1662.75,1211.69 1663.33,1211.69 1663.92,1211.69 1664.5,1211.69 1665.09,1211.69 1665.68,1211.69 1666.26,1211.69 1666.85,1211.69 1667.44,1211.69 1668.02,1211.69 1668.61,1211.69 1669.2,1211.69 1669.78,1211.69 1670.37,1211.69 1670.96,1211.69 1671.54,1211.69 1672.13,1211.69 1672.71,1211.69 1673.3,1211.69 1673.89,1211.69 1674.47,1211.69 1675.06,1211.69 1675.65,1211.69 1676.23,1211.69 1676.82,1211.69 1677.41,1211.69 1677.99,1211.69 1678.58,1211.69 1679.17,1211.69 1679.75,1211.69 1680.34,1211.69 1680.92,1211.69 1681.51,1211.69 1682.1,1211.69 1682.68,1211.69 1683.27,1211.69 1683.86,1211.69 1684.44,1211.69 1685.03,1211.69 1685.62,1211.69 1686.2,1211.69 1686.79,1211.69 1687.37,1211.69 1687.96,1211.69 1688.55,1211.69 1689.13,1211.69 1689.72,1211.69 1690.31,1211.69 1690.89,1211.69 1691.48,1211.69 1692.07,1211.69 1692.65,1211.69 1693.24,1211.69 1693.83,1211.69 1694.41,1211.69 1695,1211.69 1695.58,1211.69 1696.17,1211.69 1696.76,1211.69 1697.34,1211.69 1697.93,1211.69 1698.52,1211.69 1699.1,1211.69 1699.69,1211.69 1700.28,1211.69 1700.86,1211.69 1701.45,1211.69 1702.04,1211.69 1702.62,1211.69 1703.21,1211.69 1703.79,1211.69 1704.38,1211.69 1704.97,1211.69 1705.55,1211.69 1706.14,1211.69 1706.73,1211.69 1707.31,1211.69 1707.9,1211.69 1708.49,1211.69 1709.07,1211.69 1709.66,1211.69 1710.24,1211.69 1710.83,1211.69 1711.42,1211.69 1712,1211.69 1712.59,1211.69 1713.18,1211.69 1713.76,1211.69 1714.35,1211.69 1714.94,1211.69 1715.52,1211.69 1716.11,1211.69 1716.7,1211.69 1717.28,1211.69 1717.87,1211.69 1718.45,1211.69 1719.04,1211.69 1719.63,1211.69 1720.21,1211.69 1720.8,1211.69 1721.39,1211.69 1721.97,1211.69 1722.56,1211.69 1723.15,1211.69 1723.73,1211.69 1724.32,1211.69 1724.91,1211.69 1725.49,1211.69 1726.08,1211.69 1726.66,1211.69 1727.25,1211.69 1727.84,1211.69 1728.42,1211.69 1729.01,1211.69 1729.6,1211.69 1730.18,1211.69 1730.77,1211.69 1731.36,1211.69 1731.94,1211.69 1732.53,1211.69 1733.11,1211.69 1733.7,1211.69 1734.29,1211.69 1734.87,1211.69 1735.46,1211.69 1736.05,1211.69 1736.63,1211.69 1737.22,1211.69 1737.81,1211.69 1738.39,1211.69 1738.98,1211.69 1739.57,1211.69 1740.15,1211.69 1740.74,1211.69 1741.32,1211.69 1741.91,1211.69 1742.5,1211.69 1743.08,1211.69 1743.67,1211.69 1744.26,1211.69 1744.84,1211.69 1745.43,1211.69 1746.02,1211.69 1746.6,1211.69 1747.19,1211.69 1747.78,1211.69 1748.36,1211.69 1748.95,1211.69 1749.53,1211.69 1750.12,1211.69 1750.71,1211.69 1751.29,1211.69 1751.88,1211.69 1752.47,1211.69 1753.05,1211.69 1753.64,1211.69 1754.23,1211.69 1754.81,1211.69 1755.4,1211.69 1755.99,1211.69 1756.57,1211.69 1757.16,1211.69 1757.74,1211.69 1758.33,1211.69 1758.92,1211.69 1759.5,1211.69 1760.09,1211.69 1760.68,1211.69 1761.26,1211.69 1761.85,1211.69 1762.44,1211.69 1763.02,1211.69 1763.61,1211.69 1764.19,1211.69 1764.78,1211.69 1765.37,1211.69 1765.95,1211.69 1766.54,1211.69 1767.13,1211.69 1767.71,1211.69 1768.3,1211.69 1768.89,1211.69 1769.47,1211.69 1770.06,1211.69 1770.65,1211.69 1771.23,1211.69 1771.82,1211.69 1772.4,1211.69 1772.99,1211.69 1773.58,1211.69 1774.16,1211.69 1774.75,1211.69 1775.34,1211.69 1775.92,1211.69 1776.51,1211.69 1777.1,1211.69 1777.68,1211.69 1778.27,1211.69 1778.86,1211.69 1779.44,1211.69 1780.03,1211.69 1780.61,1211.69 1781.2,1211.69 1781.79,1211.69 1782.37,1211.69 1782.96,1211.69 1783.55,1211.69 1784.13,1211.69 1784.72,1211.69 1785.31,1211.69 1785.89,1211.69 1786.48,1211.69 1787.06,1211.69 1787.65,1211.69 1788.24,1211.69 1788.82,1211.69 1789.41,1211.69 1790,1211.69 1790.58,1211.69 1791.17,1211.69 1791.76,1211.69 1792.34,1211.69 1792.93,1211.69 1793.52,1211.69 1794.1,1211.69 1794.69,1211.69 1795.27,1211.69 1795.86,1211.69 1796.45,1211.69 1797.03,1211.69 1797.62,1211.69 1798.21,1211.69 1798.79,1211.69 1799.38,1211.69 1799.97,1211.69 1800.55,1211.69 1801.14,1211.69 1801.73,1211.69 1802.31,1211.69 1802.9,1211.69 1803.48,1211.69 1804.07,1211.69 1804.66,1211.69 1805.24,1211.69 1805.83,1211.69 1806.42,1211.69 1807,1211.69 1807.59,1211.69 1808.18,1211.69 1808.76,1211.69 1809.35,1211.69 1809.94,1211.69 1810.52,1211.69 1811.11,1211.69 1811.69,1211.69 1812.28,1211.69 1812.87,1211.69 1813.45,1211.69 1814.04,1211.69 1814.63,1211.69 1815.21,1211.69 1815.8,1211.69 1816.39,1211.69 1816.97,1211.69 1817.56,1211.69 1818.14,1211.69 1818.73,1211.69 1819.32,1211.69 1819.9,1211.69 1820.49,1211.69 1821.08,1211.69 1821.66,1211.69 1822.25,1211.69 1822.84,1211.69 1823.42,1211.69 1824.01,1211.69 1824.6,1211.69 1825.18,1211.69 1825.77,1211.69 1826.35,1211.69 1826.94,1211.69 1827.53,1211.69 1828.11,1211.69 1828.7,1211.69 1829.29,1211.69 1829.87,1211.69 1830.46,1211.69 1831.05,1211.69 1831.63,1211.69 1832.22,1211.69 1832.81,1211.69 1833.39,1211.69 1833.98,1211.69 1834.56,1211.69 1835.15,1211.69 1835.74,1211.69 1836.32,1211.69 1836.91,1211.69 1837.5,1211.69 1838.08,1211.69 1838.67,1211.69 1839.26,1211.69 1839.84,1211.69 1840.43,1211.69 1841.01,1211.69 1841.6,1211.69 1842.19,1211.69 1842.77,1211.69 1843.36,1211.69 1843.95,1211.69 1844.53,1211.69 1845.12,1211.69 1845.71,1211.69 1846.29,1211.69 1846.88,1211.69 1847.47,1211.69 1848.05,1211.69 1848.64,1211.69 1849.22,1211.69 1849.81,1211.69 1850.4,1211.69 1850.98,1211.69 1851.57,1211.69 1852.16,1211.69 1852.74,1211.69 1853.33,1211.69 1853.92,1211.69 1854.5,1211.69 1855.09,1211.69 1855.68,1211.69 1856.26,1211.69 1856.85,1211.69 1857.43,1211.69 1858.02,1211.69 1858.61,1211.69 1859.19,1211.69 1859.78,1211.69 1860.37,1211.69 1860.95,1211.69 1861.54,1211.69 1862.13,1211.69 1862.71,1211.69 1863.3,1211.69 1863.88,1211.69 1864.47,1211.69 1865.06,1211.69 1865.64,1211.69 1866.23,1211.69 1866.82,1211.69 1867.4,1211.69 1867.99,1211.69 1868.58,1211.69 1869.16,1211.69 1869.75,1211.69 1870.34,1211.69 1870.92,1211.69 1871.51,1211.69 1872.09,1211.69 1872.68,1211.69 1873.27,1211.69 1873.85,1211.69 1874.44,1211.69 1875.03,1211.69 1875.61,1211.69 1876.2,1211.69 1876.79,1211.69 1877.37,1211.69 1877.96,1211.69 1878.55,1211.69 1879.13,1211.69 1879.72,1211.69 1880.3,1211.69 1880.89,1211.69 1881.48,1211.69 1882.06,1211.69 1882.65,1211.69 1883.24,1211.69 1883.82,1211.69 1884.41,1211.69 1885,1211.69 1885.58,1211.69 1886.17,1211.69 1886.76,1211.69 1887.34,1211.69 1887.93,1211.69 1888.51,1211.69 1889.1,1211.69 1889.69,1211.69 1890.27,1211.69 1890.86,1211.69 1891.45,1211.69 1892.03,1211.69 1892.62,1211.69 1893.21,1211.69 1893.79,1211.69 1894.38,1211.69 1894.96,1211.69 1895.55,1211.69 1896.14,1211.69 1896.72,1211.69 1897.31,1211.69 1897.9,1211.69 1898.48,1211.69 1899.07,1211.69 1899.66,1211.69 1900.24,1211.69 1900.83,1211.69 1901.42,1211.69 1902,1211.69 1902.59,1211.69 1903.17,1211.69 1903.76,1211.69 1904.35,1211.69 1904.93,1211.69 1905.52,1211.69 1906.11,1211.69 1906.69,1211.69 1907.28,1211.69 1907.87,1211.69 1908.45,1211.69 1909.04,1211.69 1909.63,1211.69 1910.21,1211.69 1910.8,1211.69 1911.38,1211.69 1911.97,1211.69 1912.56,1211.69 1913.14,1211.69 1913.73,1211.69 1914.32,1211.69 1914.9,1211.69 1915.49,1211.69 1916.08,1211.69 1916.66,1211.69 1917.25,1211.69 1917.83,1211.69 1918.42,1211.69 1919.01,1211.69 1919.59,1211.69 1920.18,1211.69 1920.77,1211.69 1921.35,1211.69 1921.94,1211.69 1922.53,1211.69 1923.11,1211.69 1923.7,1211.69 1924.29,1211.69 1924.87,1211.69 1925.46,1211.69 1926.04,1211.69 1926.63,1211.69 1927.22,1211.69 1927.8,1211.69 1928.39,1211.69 1928.98,1211.69 1929.56,1211.69 1930.15,1211.69 1930.74,1211.69 1931.32,1211.69 1931.91,1211.69 1932.5,1211.69 1933.08,1211.69 1933.67,1211.69 1934.25,1211.69 1934.84,1211.69 1935.43,1211.69 1936.01,1211.69 1936.6,1211.69 1937.19,1211.69 1937.77,1211.69 1938.36,1211.69 1938.95,1211.69 1939.53,1211.69 1940.12,1211.69 1940.71,1211.69 1941.29,1211.69 1941.88,1211.69 1942.46,1211.69 1943.05,1211.69 1943.64,1211.69 1944.22,1211.69 1944.81,1211.69 1945.4,1211.69 1945.98,1211.69 1946.57,1211.69 1947.16,1211.69 1947.74,1211.69 1948.33,1211.69 1948.91,1211.69 1949.5,1211.69 1950.09,1211.69 1950.67,1211.69 1951.26,1211.69 1951.85,1211.69 1952.43,1211.69 1953.02,1211.69 1953.61,1211.69 1954.19,1211.69 1954.78,1211.69 1955.37,1211.69 1955.95,1211.69 1956.54,1211.69 1957.12,1211.69 1957.71,1211.69 1958.3,1211.69 1958.88,1211.69 1959.47,1211.69 1960.06,1211.69 1960.64,1211.69 1961.23,1211.69 1961.82,1211.69 1962.4,1211.69 1962.99,1211.69 1963.58,1211.69 1964.16,1211.69 1964.75,1211.69 1965.33,1211.69 1965.92,1211.69 1966.51,1211.69 1967.09,1211.69 1967.68,1211.69 1968.27,1211.69 1968.85,1211.69 1969.44,1211.69 1970.03,1211.69 1970.61,1211.69 1971.2,1211.69 1971.78,1211.69 1972.37,1211.69 1972.96,1211.69 1973.54,1211.69 1974.13,1211.69 1974.72,1211.69 1975.3,1211.69 1975.89,1211.69 1976.48,1211.69 1977.06,1211.69 1977.65,1211.69 1978.24,1211.69 1978.82,1211.69 1979.41,1211.69 1979.99,1211.69 1980.58,1211.69 1981.17,1211.69 1981.75,1211.69 1982.34,1211.69 1982.93,1211.69 1983.51,1211.69 1984.1,1211.69 1984.69,1211.69 1985.27,1211.69 1985.86,1211.69 1986.45,1211.69 1987.03,1211.69 1987.62,1211.69 1988.2,1211.69 1988.79,1211.69 1989.38,1211.69 1989.96,1211.69 1990.55,1211.69 1991.14,1211.69 1991.72,1211.69 1992.31,1211.69 1992.9,1211.69 1993.48,1211.69 1994.07,1211.69 1994.65,1211.69 1995.24,1211.69 1995.83,1211.69 1996.41,1211.69 1997,1211.69 1997.59,1211.69 1998.17,1211.69 1998.76,1211.69 1999.35,1211.69 1999.93,1211.69 2000.52,1211.69 2001.11,1211.69 2001.69,1211.69 2002.28,1211.69 2002.86,1211.69 2003.45,1211.69 2004.04,1211.69 2004.62,1211.69 2005.21,1211.69 2005.8,1211.69 2006.38,1211.69 2006.97,1211.69 2007.56,1211.69 2008.14,1211.69 2008.73,1211.69 2009.32,1211.69 2009.9,1211.69 2010.49,1211.69 2011.07,1211.69 2011.66,1211.69 2012.25,1211.69 2012.83,1211.69 2013.42,1211.69 2014.01,1211.69 2014.59,1211.69 2015.18,1211.69 2015.77,1211.69 2016.35,1211.69 2016.94,1211.69 2017.53,1211.69 2018.11,1211.69 2018.7,1211.69 2019.28,1211.69 2019.87,1211.69 2020.46,1211.69 2021.04,1211.69 2021.63,1211.69 2022.22,1211.69 2022.8,1211.69 2023.39,1211.69 2023.98,1211.69 2024.56,1211.69 2025.15,1211.69 2025.73,1211.69 2026.32,1211.69 2026.91,1211.69 2027.49,1211.69 2028.08,1211.69 2028.67,1211.69 2029.25,1211.69 2029.84,1211.69 2030.43,1211.69 2031.01,1211.69 2031.6,1211.69 2032.19,1211.69 2032.77,1211.69 2033.36,1211.69 2033.94,1211.69 2034.53,1211.69 2035.12,1211.69 2035.7,1211.69 2036.29,1211.69 2036.88,1211.69 2037.46,1211.69 2038.05,1211.69 2038.64,1211.69 2039.22,1211.69 2039.81,1211.69 2040.4,1211.69 2040.98,1211.69 2041.57,1211.69 2042.15,1211.69 2042.74,1211.69 2043.33,1211.69 2043.91,1211.69 2044.5,1211.69 2045.09,1211.69 2045.67,1211.69 2046.26,1211.69 2046.85,1211.69 2047.43,1211.69 2048.02,1211.69 2048.6,1211.69 2049.19,1211.69 2049.78,1211.69 2050.36,1211.69 2050.95,1211.69 2051.54,1211.69 2052.12,1211.69 2052.71,1211.69 2053.3,1211.69 2053.88,1211.69 2054.47,1211.69 2055.06,1211.69 2055.64,1211.69 2056.23,1211.69 2056.81,1211.69 2057.4,1211.69 2057.99,1211.69 2058.57,1211.69 2059.16,1211.69 2059.75,1211.69 2060.33,1211.69 2060.92,1211.69 2061.51,1211.69 2062.09,1211.69 2062.68,1211.69 2063.27,1211.69 2063.85,1211.69 2064.44,1211.69 2065.02,1211.69 2065.61,1211.69 2066.2,1211.69 2066.78,1211.69 2067.37,1211.69 2067.96,1211.69 2068.54,1211.69 2069.13,1211.69 2069.72,1211.69 2070.3,1211.69 2070.89,1211.69 2071.48,1211.69 2072.06,1211.69 2072.65,1211.69 2073.23,1211.69 2073.82,1211.69 2074.41,1211.69 2074.99,1211.69 2075.58,1211.69 2076.17,1211.69 2076.75,1211.69 2077.34,1211.69 2077.93,1211.69 2078.51,1211.69 2079.1,1211.69 2079.68,1211.69 2080.27,1211.69 2080.86,1211.69 2081.44,1211.69 2082.03,1211.69 2082.62,1211.69 2083.2,1211.69 2083.79,1211.69 2084.38,1211.69 2084.96,1211.69 2085.55,1211.69 2086.14,1211.69 2086.72,1211.69 2087.31,1211.69 2087.89,1211.69 2088.48,1211.69 2089.07,1211.69 2089.65,1211.69 2090.24,1211.69 2090.83,1211.69 2091.41,1211.69 2092,1211.69 2092.59,1211.69 2093.17,1211.69 2093.76,1211.69 2094.35,1211.69 2094.93,1211.69 2095.52,1211.69 2096.1,1211.69 2096.69,1211.69 2097.28,1211.69 2097.86,1211.69 2098.45,1211.69 2099.04,1211.69 2099.62,1211.69 2100.21,1211.69 2100.8,1211.69 2101.38,1211.69 2101.97,1211.69 2102.55,1211.69 2103.14,1211.69 2103.73,1211.69 2104.31,1211.69 2104.9,1211.69 2105.49,1211.69 2106.07,1211.69 2106.66,1211.69 2107.25,1211.69 2107.83,1211.69 2108.42,1211.69 2109.01,1211.69 2109.59,1211.69 2110.18,1211.69 2110.76,1211.69 2111.35,1211.69 2111.94,1211.69 2112.52,1211.69 2113.11,1211.69 2113.7,1211.69 2114.28,1211.69 2114.87,1211.69 2115.46,1211.69 2116.04,1211.69 2116.63,1211.69 2117.22,1211.69 2117.8,1211.69 2118.39,1211.69 2118.97,1211.69 2119.56,1211.69 2120.15,1211.69 2120.73,1211.69 2121.32,1211.69 2121.91,1211.69 2122.49,1211.69 2123.08,1211.69 2123.67,1211.69 2124.25,1211.69 2124.84,1211.69 2125.42,1211.69 2126.01,1211.69 2126.6,1211.69 2127.18,1211.69 2127.77,1211.69 2128.36,1211.69 2128.94,1211.69 2129.53,1211.69 2130.12,1211.69 2130.7,1211.69 2131.29,1211.69 2131.88,1211.69 2132.46,1211.69 2133.05,1211.69 2133.63,1211.69 2134.22,1211.69 2134.81,1211.69 2135.39,1211.69 2135.98,1211.69 2136.57,1211.69 2137.15,1211.69 2137.74,1211.69 2138.33,1211.69 2138.91,1211.69 2139.5,1211.69 2140.09,1211.69 2140.67,1211.69 2141.26,1211.69 2141.84,1211.69 2142.43,1211.69 2143.02,1211.69 2143.6,1211.69 2144.19,1211.69 2144.78,1211.69 2145.36,1211.69 2145.95,1211.69 2146.54,1211.69 2147.12,1211.69 2147.71,1211.69 2148.3,1211.69 2148.88,1211.69 2149.47,1211.69 2150.05,1211.69 2150.64,1211.69 2151.23,1211.69 2151.81,1211.69 2152.4,1211.69 2152.99,1211.69 2153.57,1211.69 2154.16,1211.69 2154.75,1211.69 2155.33,1211.69 2155.92,1211.69 2156.5,1211.69 2157.09,1211.69 2157.68,1211.69 2158.26,1211.69 \"/>\n<path clip-path=\"url(#clip592)\" d=\"M986.025 1211.66 L986.612 1211.66 L987.198 1211.66 L987.785 1211.66 L988.371 1211.66 L988.957 1211.66 L989.544 1211.66 L990.13 1211.66 L990.717 1211.66 L991.303 1211.66 L991.889 1211.66 L992.476 1211.66 L993.062 1211.66 L993.649 1211.66 L994.235 1211.66 L994.822 1211.66 L995.408 1211.66 L995.994 1211.66 L996.581 1211.66 L997.167 1211.66 L997.754 1211.66 L998.34 1211.66 L998.926 1211.66 L999.513 1211.66 L1000.1 1211.66 L1000.69 1211.66 L1001.27 1211.66 L1001.86 1211.66 L1002.44 1211.66 L1003.03 1211.66 L1003.62 1211.66 L1004.2 1211.66 L1004.79 1211.66 L1005.38 1211.66 L1005.96 1211.66 L1006.55 1211.66 L1007.14 1211.66 L1007.72 1211.66 L1008.31 1211.66 L1008.9 1211.66 L1009.48 1211.66 L1010.07 1211.66 L1010.65 1211.66 L1011.24 1211.66 L1011.83 1211.66 L1012.41 1211.66 L1013 1211.66 L1013.59 1211.66 L1014.17 1211.66 L1014.76 1211.66 L1015.35 1211.66 L1015.93 1211.66 L1016.52 1211.66 L1017.11 1211.66 L1017.69 1211.66 L1018.28 1211.66 L1018.86 1211.66 L1019.45 1211.66 L1020.04 1211.66 L1020.62 1211.66 L1021.21 1211.66 L1021.8 1211.66 L1022.38 1211.66 L1022.97 1211.66 L1023.56 1211.66 L1024.14 1211.66 L1024.73 1211.66 L1025.32 1211.66 L1025.9 1211.66 L1026.49 1211.66 L1027.07 1211.66 L1027.66 1211.66 L1028.25 1211.66 L1028.83 1211.66 L1029.42 1211.66 L1030.01 1211.66 L1030.59 1211.66 L1031.18 1211.66 L1031.77 1211.66 L1032.35 1211.66 L1032.94 1211.66 L1033.52 1211.66 L1034.11 1211.66 L1034.7 1211.66 L1035.28 1211.66 L1035.87 1211.66 L1036.46 1211.66 L1037.04 1211.66 L1037.63 1211.66 L1038.22 1211.66 L1038.8 1211.66 L1039.39 1211.66 L1039.98 1211.66 L1040.56 1211.66 L1041.15 1211.66 L1041.73 1211.66 L1042.32 1211.66 L1042.91 1211.66 L1043.49 1211.66 L1044.08 1211.66 L1044.67 1211.66 L1045.25 1211.66 L1045.84 1211.66 L1046.43 1211.66 L1047.01 1211.66 L1047.6 1211.66 L1048.19 1211.66 L1048.77 1211.66 L1049.36 1211.66 L1049.94 1211.66 L1050.53 1211.66 L1051.12 1211.66 L1051.7 1211.66 L1052.29 1211.66 L1052.88 1211.66 L1053.46 1211.66 L1054.05 1211.66 L1054.64 1211.66 L1055.22 1211.66 L1055.81 1211.66 L1056.39 1211.66 L1056.98 1211.66 L1057.57 1211.66 L1058.15 1211.66 L1058.74 1211.66 L1059.33 1211.66 L1059.91 1211.66 L1060.5 1211.66 L1061.09 1211.66 L1061.67 1211.66 L1062.26 1211.66 L1062.85 1211.66 L1063.43 1211.66 L1064.02 1211.66 L1064.6 1211.66 L1065.19 1211.66 L1065.78 1211.66 L1066.36 1211.66 L1066.95 1211.66 L1067.54 1211.66 L1068.12 1211.66 L1068.71 1211.66 L1069.3 1211.66 L1069.88 1211.66 L1070.47 1211.66 L1071.06 1211.66 L1071.64 1211.66 L1072.23 1211.66 L1072.81 1211.66 L1073.4 1211.66 L1073.99 1211.66 L1074.57 1211.66 L1075.16 1211.66 L1075.75 1211.66 L1076.33 1211.66 L1076.92 1211.66 L1077.51 1211.66 L1078.09 1211.66 L1078.68 1211.66 L1079.26 1211.66 L1079.85 1211.66 L1080.44 1211.66 L1081.02 1211.66 L1081.61 1211.66 L1082.2 1211.66 L1082.78 1211.66 L1083.37 1211.66 L1083.96 1211.66 L1084.54 1211.66 L1085.13 1211.66 L1085.72 1211.66 L1086.3 1211.66 L1086.89 1211.66 L1087.47 1211.66 L1088.06 1211.66 L1088.65 1211.66 L1089.23 1211.66 L1089.82 1211.66 L1090.41 1211.66 L1090.99 1211.66 L1091.58 1211.66 L1092.17 1211.66 L1092.75 1211.66 L1093.34 1211.66 L1093.93 1211.66 L1094.51 1211.66 L1095.1 1211.66 L1095.68 1211.66 L1096.27 1211.66 L1096.86 1211.66 L1097.44 1211.66 L1098.03 1211.66 L1098.62 1211.66 L1099.2 1211.66 L1099.79 1211.66 L1100.38 1211.66 L1100.96 1211.66 L1101.55 1211.66 L1102.14 1211.66 L1102.72 1211.66 L1103.31 1211.66 L1103.89 1211.66 L1104.48 1211.66 L1105.07 1211.66 L1105.65 1211.66 L1106.24 1211.66 L1106.83 1211.66 L1107.41 1211.66 L1108 1211.66 L1108.59 1211.66 L1109.17 1211.66 L1109.76 1211.66 L1110.34 1211.66 L1110.93 1211.66 L1111.52 1211.66 L1112.1 1211.66 L1112.69 1211.66 L1113.28 1211.66 L1113.86 1211.66 L1114.45 1211.66 L1115.04 1211.66 L1115.62 1211.66 L1116.21 1211.66 L1116.8 1211.66 L1117.38 1211.66 L1117.97 1211.66 L1118.55 1211.66 L1119.14 1211.66 L1119.73 1211.66 L1120.31 1211.66 L1120.9 1211.66 L1121.49 1211.66 L1122.07 1211.66 L1122.66 1211.66 L1123.25 1211.66 L1123.83 1211.66 L1124.42 1211.66 L1125.01 1211.66 L1125.59 1211.66 L1126.18 1211.66 L1126.76 1211.66 L1127.35 1211.66 L1127.94 1211.66 L1128.52 1211.66 L1129.11 1211.66 L1129.7 1211.66 L1130.28 1211.66 L1130.87 1211.66 L1131.46 1211.66 L1132.04 1211.66 L1132.63 1211.66 L1133.21 1211.66 L1133.8 1211.66 L1134.39 1211.66 L1134.97 1211.66 L1135.56 1211.66 L1136.15 1211.66 L1136.73 1211.66 L1137.32 1211.66 L1137.91 1211.66 L1138.49 1211.66 L1139.08 1211.66 L1139.67 1211.66 L1140.25 1211.66 L1140.84 1211.66 L1141.42 1211.66 L1142.01 1211.66 L1142.6 1211.66 L1143.18 1211.66 L1143.77 1211.66 L1144.36 1211.66 L1144.94 1211.66 L1145.53 1211.66 L1146.12 1211.66 L1146.7 1211.66 L1147.29 1211.66 L1147.88 1211.66 L1148.46 1211.66 L1149.05 1211.66 L1149.63 1211.66 L1150.22 1211.66 L1150.81 1211.66 L1151.39 1211.66 L1151.98 1211.66 L1152.57 1211.66 L1153.15 1211.66 L1153.74 1211.66 L1154.33 1211.66 L1154.91 1211.66 L1155.5 1211.66 L1156.09 1211.66 L1156.67 1211.66 L1157.26 1211.66 L1157.84 1211.66 L1158.43 1211.66 L1159.02 1211.66 L1159.6 1211.66 L1160.19 1211.66 L1160.78 1211.66 L1161.36 1211.66 L1161.95 1211.66 L1162.54 1211.66 L1163.12 1211.66 L1163.71 1211.66 L1164.29 1211.66 L1164.88 1211.66 L1165.47 1211.66 L1166.05 1211.66 L1166.64 1211.66 L1167.23 1211.66 L1167.81 1211.66 L1168.4 1211.66 L1168.99 1211.66 L1169.57 1211.66 L1170.16 1211.66 L1170.75 1211.66 L1171.33 1211.66 L1171.92 1211.66 L1172.5 1211.66 L1173.09 1211.66 L1173.68 1211.66 L1174.26 1211.66 L1174.85 1211.66 L1175.44 1211.66 L1176.02 1211.66 L1176.61 1211.66 L1177.2 1211.66 L1177.78 1211.66 L1178.37 1211.66 L1178.96 1211.66 L1179.54 1211.66 L1180.13 1211.66 L1180.71 1211.66 L1181.3 1211.66 L1181.89 1211.66 L1182.47 1211.66 L1183.06 1211.66 L1183.65 1211.66 L1184.23 1211.66 L1184.82 1211.66 L1185.41 1211.66 L1185.99 1211.66 L1186.58 1211.66 L1187.16 1211.66 L1187.75 1211.66 L1188.34 1211.66 L1188.92 1211.66 L1189.51 1211.66 L1190.1 1211.66 L1190.68 1211.66 L1191.27 1211.66 L1191.86 1211.66 L1192.44 1211.66 L1193.03 1211.66 L1193.62 1211.66 L1194.2 1211.66 L1194.79 1211.66 L1195.37 1211.66 L1195.96 1211.66 L1196.55 1211.66 L1197.13 1211.66 L1197.72 1211.66 L1198.31 1211.66 L1198.89 1211.66 L1199.48 1211.66 L1200.07 1211.66 L1200.65 1211.66 L1201.24 1211.66 L1201.83 1211.66 L1202.41 1211.66 L1203 1211.66 L1203.58 1211.66 L1204.17 1211.66 L1204.76 1211.66 L1205.34 1211.66 L1205.93 1211.66 L1206.52 1211.66 L1207.1 1211.66 L1207.69 1211.66 L1208.28 1211.66 L1208.86 1211.66 L1209.45 1211.66 L1210.03 1211.66 L1210.62 1211.66 L1211.21 1211.66 L1211.79 1211.66 L1212.38 1211.66 L1212.97 1211.66 L1213.55 1211.66 L1214.14 1211.66 L1214.73 1211.66 L1215.31 1211.66 L1215.9 1211.66 L1216.49 1211.66 L1217.07 1211.66 L1217.66 1211.66 L1218.24 1211.66 L1218.83 1211.66 L1219.42 1211.66 L1220 1211.66 L1220.59 1211.66 L1221.18 1211.66 L1221.76 1211.66 L1222.35 1211.66 L1222.94 1211.66 L1223.52 1211.66 L1224.11 1211.66 L1224.7 1211.66 L1225.28 1211.66 L1225.87 1211.66 L1226.45 1211.66 L1227.04 1211.66 L1227.63 1211.66 L1228.21 1211.66 L1228.8 1211.66 L1229.39 1211.66 L1229.97 1211.66 L1230.56 1211.66 L1231.15 1211.66 L1231.73 1211.66 L1232.32 1211.66 L1232.91 1211.66 L1233.49 1211.66 L1234.08 1211.66 L1234.66 1211.66 L1235.25 1211.66 L1235.84 1211.66 L1236.42 1211.66 L1237.01 1211.66 L1237.6 1211.66 L1238.18 1211.66 L1238.77 1211.66 L1239.36 1211.66 L1239.94 1211.66 L1240.53 1211.66 L1241.11 1211.66 L1241.7 1211.66 L1242.29 1211.66 L1242.87 1211.66 L1243.46 1211.66 L1244.05 1211.66 L1244.63 1211.66 L1245.22 1211.66 L1245.81 1211.66 L1246.39 1211.66 L1246.98 1211.66 L1247.57 1211.66 L1248.15 1211.66 L1248.74 1211.66 L1249.32 1211.66 L1249.91 1211.66 L1250.5 1211.66 L1251.08 1211.66 L1251.67 1211.66 L1252.26 1211.66 L1252.84 1211.66 L1253.43 1211.66 L1254.02 1211.66 L1254.6 1211.66 L1255.19 1211.66 L1255.78 1211.66 L1256.36 1211.66 L1256.95 1211.66 L1257.53 1211.66 L1258.12 1211.66 L1258.71 1211.66 L1259.29 1211.66 L1259.88 1211.66 L1260.47 1211.66 L1261.05 1211.66 L1261.64 1211.66 L1262.23 1211.66 L1262.81 1211.66 L1263.4 1211.66 L1263.98 1211.66 L1264.57 1211.66 L1265.16 1211.66 L1265.74 1211.66 L1266.33 1211.66 L1266.92 1211.66 L1267.5 1211.66 L1268.09 1211.66 L1268.68 1211.66 L1269.26 1211.66 L1269.85 1211.66 L1270.44 1211.66 L1271.02 1211.66 L1271.61 1211.66 L1272.19 1211.66 L1272.78 1211.66 L1273.37 1211.66 L1273.95 1211.66 L1274.54 1211.66 L1275.13 1211.66 L1275.71 1211.66 L1276.3 1211.66 L1276.89 1211.66 L1277.47 1211.66 L1278.06 1211.66 L1278.65 1211.66 L1279.23 1211.66 L1279.82 1211.66 L1280.4 1211.66 L1280.99 1211.66 L1281.58 1211.66 L1282.16 1211.66 L1282.75 1211.66 L1283.34 1211.66 L1283.92 1211.66 L1284.51 1211.66 L1285.1 1211.66 L1285.68 1211.66 L1286.27 1211.66 L1286.86 1211.66 L1287.44 1211.66 L1288.03 1211.66 L1288.61 1211.66 L1289.2 1211.66 L1289.79 1211.66 L1290.37 1211.66 L1290.96 1211.66 L1291.55 1211.66 L1292.13 1211.66 L1292.72 1211.66 L1293.31 1211.66 L1293.89 1211.66 L1294.48 1211.66 L1295.06 1211.66 L1295.65 1211.66 L1296.24 1211.66 L1296.82 1211.66 L1297.41 1211.66 L1298 1211.66 L1298.58 1211.66 L1299.17 1211.66 L1299.76 1211.66 L1300.34 1211.66 L1300.93 1211.66 L1301.52 1211.66 L1302.1 1211.66 L1302.69 1211.66 L1303.27 1211.66 L1303.86 1211.66 L1304.45 1211.66 L1305.03 1211.66 L1305.62 1211.66 L1306.21 1211.66 L1306.79 1211.66 L1307.38 1211.66 L1307.97 1211.66 L1308.55 1211.66 L1309.14 1211.66 L1309.73 1211.66 L1310.31 1211.66 L1310.9 1211.66 L1311.48 1211.66 L1312.07 1211.66 L1312.66 1211.66 L1313.24 1211.66 L1313.83 1211.66 L1314.42 1211.66 L1315 1211.66 L1315.59 1211.66 L1316.18 1211.66 L1316.76 1211.66 L1317.35 1211.66 L1317.93 1211.66 L1318.52 1211.66 L1319.11 1211.66 L1319.69 1211.66 L1320.28 1211.66 L1320.87 1211.66 L1321.45 1211.66 L1322.04 1211.66 L1322.63 1211.66 L1323.21 1211.66 L1323.8 1211.66 L1324.39 1211.66 L1324.97 1211.66 L1325.56 1211.66 L1326.14 1211.66 L1326.73 1211.66 L1327.32 1211.66 L1327.9 1211.66 L1328.49 1211.66 L1329.08 1211.66 L1329.66 1211.66 L1330.25 1211.66 L1330.84 1211.66 L1331.42 1211.66 L1332.01 1211.66 L1332.6 1211.66 L1333.18 1211.66 L1333.77 1211.66 L1334.35 1211.66 L1334.94 1211.66 L1335.53 1211.66 L1336.11 1211.66 L1336.7 1211.66 L1337.29 1211.66 L1337.87 1211.66 L1338.46 1211.66 L1339.05 1211.66 L1339.63 1211.66 L1340.22 1211.66 L1340.8 1211.66 L1341.39 1211.66 L1341.98 1211.66 L1342.56 1211.66 L1343.15 1211.66 L1343.74 1211.66 L1344.32 1211.66 L1344.91 1211.66 L1345.5 1211.66 L1346.08 1211.66 L1346.67 1211.66 L1347.26 1211.66 L1347.84 1211.66 L1348.43 1211.66 L1349.01 1211.66 L1349.6 1211.66 L1350.19 1211.66 L1350.77 1211.66 L1351.36 1211.66 L1351.95 1211.66 L1352.53 1211.66 L1353.12 1211.66 L1353.71 1211.66 L1354.29 1211.66 L1354.88 1211.66 L1355.47 1211.66 L1356.05 1211.66 L1356.64 1211.66 L1357.22 1211.66 L1357.81 1211.66 L1358.4 1211.66 L1358.98 1211.66 L1359.57 1211.66 L1360.16 1211.66 L1360.74 1211.66 L1361.33 1211.66 L1361.92 1211.66 L1362.5 1211.66 L1363.09 1211.66 L1363.68 1211.66 L1364.26 1211.66 L1364.85 1211.66 L1365.43 1211.66 L1366.02 1211.66 L1366.61 1211.66 L1367.19 1211.66 L1367.78 1211.66 L1368.37 1211.66 L1368.95 1211.66 L1369.54 1211.66 L1370.13 1211.66 L1370.71 1211.66 L1371.3 1211.66 L1371.88 1211.66 L1372.47 1211.66 L1373.06 1211.66 L1373.64 1211.66 L1374.23 1211.66 L1374.82 1211.66 L1375.4 1211.66 L1375.99 1211.66 L1376.58 1211.66 L1377.16 1211.66 L1377.75 1211.66 L1378.34 1211.66 L1378.92 1211.66 L1379.51 1211.66 L1380.09 1211.66 L1380.68 1211.66 L1381.27 1211.66 L1381.85 1211.66 L1382.44 1211.66 L1383.03 1211.66 L1383.61 1211.66 L1384.2 1211.66 L1384.79 1211.66 L1385.37 1211.66 L1385.96 1211.66 L1386.55 1211.66 L1387.13 1211.66 L1387.72 1211.66 L1388.3 1211.66 L1388.89 1211.66 L1389.48 1211.66 L1390.06 1211.66 L1390.65 1211.66 L1391.24 1211.66 L1391.82 1211.66 L1392.41 1211.66 L1393 1211.66 L1393.58 1211.66 L1394.17 1211.66 L1394.75 1211.66 L1395.34 1211.66 L1395.93 1211.66 L1396.51 1211.66 L1397.1 1211.66 L1397.69 1211.66 L1398.27 1211.66 L1398.86 1211.66 L1399.45 1211.66 L1400.03 1211.66 L1400.62 1211.66 L1401.21 1211.66 L1401.79 1211.66 L1402.38 1211.66 L1402.96 1211.66 L1403.55 1211.66 L1404.14 1211.66 L1404.72 1211.66 L1405.31 1211.66 L1405.9 1211.66 L1406.48 1211.66 L1407.07 1211.66 L1407.66 1211.66 L1408.24 1211.66 L1408.83 1211.66 L1409.42 1211.66 L1410 1211.66 L1410.59 1211.66 L1411.17 1211.66 L1411.76 1211.66 L1412.35 1211.66 L1412.93 1211.66 L1413.52 1211.66 L1414.11 1211.66 L1414.69 1211.66 L1415.28 1211.66 L1415.87 1211.66 L1416.45 1211.66 L1417.04 1211.66 L1417.63 1211.66 L1418.21 1211.66 L1418.8 1211.66 L1419.38 1211.66 L1419.97 1211.66 L1420.56 1211.66 L1421.14 1211.66 L1421.73 1211.66 L1422.32 1211.66 L1422.9 1211.66 L1423.49 1211.66 L1424.08 1211.66 L1424.66 1211.66 L1425.25 1211.66 L1425.83 1211.66 L1426.42 1211.66 L1427.01 1211.66 L1427.59 1211.66 L1428.18 1211.66 L1428.77 1211.66 L1429.35 1211.66 L1429.94 1211.66 L1430.53 1211.66 L1431.11 1211.66 L1431.7 1211.66 L1432.29 1211.66 L1432.87 1211.66 L1433.46 1211.66 L1434.04 1211.66 L1434.63 1211.66 L1435.22 1211.66 L1435.8 1211.66 L1436.39 1211.66 L1436.98 1211.66 L1437.56 1211.66 L1438.15 1211.66 L1438.74 1211.66 L1439.32 1211.66 L1439.91 1211.66 L1440.5 1211.66 L1441.08 1211.66 L1441.67 1211.66 L1442.25 1211.66 L1442.84 1211.66 L1443.43 1211.66 L1444.01 1211.66 L1444.6 1211.66 L1445.19 1211.66 L1445.77 1211.66 L1446.36 1211.66 L1446.95 1211.66 L1447.53 1211.66 L1448.12 1211.66 L1448.7 1211.66 L1449.29 1211.66 L1449.88 1211.66 L1450.46 1211.66 L1451.05 1211.66 L1451.64 1211.66 L1452.22 1211.66 L1452.81 1211.66 L1453.4 1211.66 L1453.98 1211.66 L1454.57 1211.66 L1455.16 1211.66 L1455.74 1211.66 L1456.33 1211.66 L1456.91 1211.66 L1457.5 1211.66 L1458.09 1211.66 L1458.67 1211.66 L1459.26 1211.66 L1459.85 1211.66 L1460.43 1211.66 L1461.02 1211.66 L1461.61 1211.66 L1462.19 1211.66 L1462.78 1211.66 L1463.37 1211.66 L1463.95 1211.66 L1464.54 1211.66 L1465.12 1211.66 L1465.71 1211.66 L1466.3 1211.66 L1466.88 1211.66 L1467.47 1211.66 L1468.06 1211.66 L1468.64 1211.66 L1469.23 1211.66 L1469.82 1211.66 L1470.4 1211.66 L1470.99 1211.66 L1471.57 1211.66 L1472.16 1211.66 L1472.75 1211.66 L1473.33 1211.66 L1473.92 1211.66 L1474.51 1211.66 L1475.09 1211.66 L1475.68 1211.66 L1476.27 1211.66 L1476.85 1211.66 L1477.44 1211.66 L1478.03 1211.66 L1478.61 1211.66 L1479.2 1211.66 L1479.78 1211.66 L1480.37 1211.66 L1480.96 1211.66 L1481.54 1211.66 L1482.13 1211.66 L1482.72 1211.66 L1483.3 1211.66 L1483.89 1211.66 L1484.48 1211.66 L1485.06 1211.66 L1485.65 1211.66 L1486.24 1211.66 L1486.82 1211.66 L1487.41 1211.66 L1487.99 1211.66 L1488.58 1211.66 L1489.17 1211.66 L1489.75 1211.66 L1490.34 1211.66 L1490.93 1211.66 L1491.51 1211.66 L1492.1 1211.66 L1492.69 1211.66 L1493.27 1211.66 L1493.86 1211.66 L1494.45 1211.66 L1495.03 1211.66 L1495.62 1211.66 L1496.2 1211.66 L1496.79 1211.66 L1497.38 1211.66 L1497.96 1211.66 L1498.55 1211.66 L1499.14 1211.66 L1499.72 1211.66 L1500.31 1211.66 L1500.9 1211.66 L1501.48 1211.66 L1502.07 1211.66 L1502.65 1211.66 L1503.24 1211.66 L1503.83 1211.66 L1504.41 1211.66 L1505 1211.66 L1505.59 1211.66 L1506.17 1211.66 L1506.76 1211.66 L1507.35 1211.66 L1507.93 1211.66 L1508.52 1211.66 L1509.11 1211.66 L1509.69 1211.66 L1510.28 1211.66 L1510.86 1211.66 L1511.45 1211.66 L1512.04 1211.66 L1512.62 1211.66 L1513.21 1211.66 L1513.8 1211.66 L1514.38 1211.66 L1514.97 1211.66 L1515.56 1211.66 L1516.14 1211.66 L1516.73 1211.66 L1517.32 1211.66 L1517.9 1211.66 L1518.49 1211.66 L1519.07 1211.66 L1519.66 1211.66 L1520.25 1211.66 L1520.83 1211.66 L1521.42 1211.66 L1522.01 1211.66 L1522.59 1211.66 L1523.18 1211.66 L1523.77 1211.66 L1524.35 1211.66 L1524.94 1211.66 L1525.52 1211.66 L1526.11 1211.66 L1526.7 1211.66 L1527.28 1211.66 L1527.87 1211.66 L1528.46 1211.66 L1529.04 1211.66 L1529.63 1211.66 L1530.22 1211.66 L1530.8 1211.66 L1531.39 1211.66 L1531.98 1211.66 L1532.56 1211.66 L1533.15 1211.66 L1533.73 1211.66 L1534.32 1211.66 L1534.91 1211.66 L1535.49 1211.66 L1536.08 1211.66 L1536.67 1211.66 L1537.25 1211.66 L1537.84 1211.66 L1538.43 1211.66 L1539.01 1211.66 L1539.6 1211.66 L1540.19 1211.66 L1540.77 1211.66 L1541.36 1211.66 L1541.94 1211.66 L1542.53 1211.66 L1543.12 1211.66 L1543.7 1211.66 L1544.29 1211.66 L1544.88 1211.66 L1545.46 1211.66 L1546.05 1211.66 L1546.64 1211.66 L1547.22 1211.66 L1547.81 1211.66 L1548.4 1211.66 L1548.98 1211.66 L1549.57 1211.66 L1550.15 1211.66 L1550.74 1211.66 L1551.33 1211.66 L1551.91 1211.66 L1552.5 1211.66 L1553.09 1211.66 L1553.67 1211.66 L1554.26 1211.66 L1554.85 1211.66 L1555.43 1211.66 L1556.02 1211.66 L1556.6 1211.66 L1557.19 1211.66 L1557.78 1211.66 L1558.36 1211.66 L1558.95 1211.66 L1559.54 1211.66 L1560.12 1211.66 L1560.71 1211.66 L1561.3 1211.66 L1561.88 1211.66 L1562.47 1211.66 L1563.06 1211.66 L1563.64 1211.66 L1564.23 1211.66 L1564.81 1211.66 L1565.4 1211.66 L1565.99 1211.66 L1566.57 1211.66 L1567.16 1211.66 L1567.75 1211.66 L1568.33 1211.66 L1568.92 1211.66 L1569.51 1211.66 L1570.09 1211.66 L1570.68 1211.66 L1571.27 1211.66 L1571.85 1211.66 L1572.44 1211.66 L1573.02 1211.66 L1573.61 1211.66 L1574.2 1211.66 L1574.78 1211.66 L1575.37 1211.66 L1575.96 1211.66 L1576.54 1211.66 L1577.13 1211.66 L1577.72 1211.66 L1578.3 1211.66 L1578.89 1211.66 L1579.47 1211.66 L1580.06 1211.66 L1580.65 1211.66 L1581.23 1211.66 L1581.82 1211.66 L1582.41 1211.66 L1582.99 1211.66 L1583.58 1211.66 L1584.17 1211.66 L1584.75 1211.66 L1585.34 1211.66 L1585.93 1211.66 L1586.51 1211.66 L1587.1 1211.66 L1587.68 1211.66 L1588.27 1211.66 L1588.86 1211.66 L1589.44 1211.66 L1590.03 1211.66 L1590.62 1211.66 L1591.2 1211.66 L1591.79 1211.66 L1592.38 1211.66 L1592.96 1211.66 L1593.55 1211.66 L1594.14 1211.66 L1594.72 1211.66 L1595.31 1211.66 L1595.89 1211.66 L1596.48 1211.66 L1597.07 1211.66 L1597.65 1211.66 L1598.24 1211.66 L1598.83 1211.66 L1599.41 1211.66 L1600 1211.66 L1600.59 1211.66 L1601.17 1211.66 L1601.76 1211.66 L1602.34 1211.66 L1602.93 1211.66 L1603.52 1211.66 L1604.1 1211.66 L1604.69 1211.66 L1605.28 1211.66 L1605.86 1211.66 L1606.45 1211.66 L1607.04 1211.66 L1607.62 1211.66 L1608.21 1211.66 L1608.8 1211.66 L1609.38 1211.66 L1609.97 1211.66 L1610.55 1211.66 L1611.14 1211.66 L1611.73 1211.66 L1612.31 1211.66 L1612.9 1211.66 L1613.49 1211.66 L1614.07 1211.66 L1614.66 1211.66 L1615.25 1211.66 L1615.83 1211.66 L1616.42 1211.66 L1617.01 1211.66 L1617.59 1211.66 L1618.18 1211.66 L1618.76 1211.66 L1619.35 1211.66 L1619.94 1211.66 L1620.52 1211.66 L1621.11 1211.66 L1621.7 1211.66 L1622.28 1211.66 L1622.87 1211.66 L1623.46 1211.66 L1624.04 1211.66 L1624.63 1211.66 L1625.22 1211.66 L1625.8 1211.66 L1626.39 1211.66 L1626.97 1211.66 L1627.56 1211.66 L1628.15 1211.66 L1628.73 1211.66 L1629.32 1211.66 L1629.91 1211.66 L1630.49 1211.66 L1631.08 1211.66 L1631.67 1211.66 L1632.25 1211.66 L1632.84 1211.66 L1633.42 1211.66 L1634.01 1211.66 L1634.6 1211.66 L1635.18 1211.66 L1635.77 1211.66 L1636.36 1211.66 L1636.94 1211.66 L1637.53 1211.66 L1638.12 1211.66 L1638.7 1211.66 L1639.29 1211.66 L1639.88 1211.66 L1640.46 1211.66 L1641.05 1211.66 L1641.63 1211.66 L1642.22 1211.66 L1642.81 1211.66 L1643.39 1211.66 L1643.98 1211.66 L1644.57 1211.66 L1645.15 1211.66 L1645.74 1211.66 L1646.33 1211.66 L1646.91 1211.66 L1647.5 1211.66 L1648.09 1211.66 L1648.67 1211.66 L1649.26 1211.66 L1649.84 1211.66 L1650.43 1211.66 L1651.02 1211.66 L1651.6 1211.66 L1652.19 1211.66 L1652.78 1211.66 L1653.36 1211.66 L1653.95 1211.66 L1654.54 1211.66 L1655.12 1211.66 L1655.71 1211.66 L1656.29 1211.66 L1656.88 1211.66 L1657.47 1211.66 L1658.05 1211.66 L1658.64 1211.66 L1659.23 1211.66 L1659.81 1211.66 L1660.4 1211.66 L1660.99 1211.66 L1661.57 1211.66 L1662.16 1211.66 L1662.75 1211.66 L1663.33 1211.66 L1663.92 1211.66 L1664.5 1211.66 L1665.09 1211.66 L1665.68 1211.66 L1666.26 1211.66 L1666.85 1211.66 L1667.44 1211.66 L1668.02 1211.66 L1668.61 1211.66 L1669.2 1211.66 L1669.78 1211.66 L1670.37 1211.66 L1670.96 1211.66 L1671.54 1211.66 L1672.13 1211.66 L1672.71 1211.66 L1673.3 1211.66 L1673.89 1211.66 L1674.47 1211.66 L1675.06 1211.66 L1675.65 1211.66 L1676.23 1211.66 L1676.82 1211.66 L1677.41 1211.66 L1677.99 1211.66 L1678.58 1211.66 L1679.17 1211.66 L1679.75 1211.66 L1680.34 1211.66 L1680.92 1211.66 L1681.51 1211.66 L1682.1 1211.66 L1682.68 1211.66 L1683.27 1211.66 L1683.86 1211.66 L1684.44 1211.66 L1685.03 1211.66 L1685.62 1211.66 L1686.2 1211.66 L1686.79 1211.66 L1687.37 1211.66 L1687.96 1211.66 L1688.55 1211.66 L1689.13 1211.66 L1689.72 1211.66 L1690.31 1211.66 L1690.89 1211.66 L1691.48 1211.66 L1692.07 1211.66 L1692.65 1211.66 L1693.24 1211.66 L1693.83 1211.66 L1694.41 1211.66 L1695 1211.66 L1695.58 1211.66 L1696.17 1211.66 L1696.76 1211.66 L1697.34 1211.66 L1697.93 1211.66 L1698.52 1211.66 L1699.1 1211.66 L1699.69 1211.66 L1700.28 1211.66 L1700.86 1211.66 L1701.45 1211.66 L1702.04 1211.66 L1702.62 1211.66 L1703.21 1211.66 L1703.79 1211.66 L1704.38 1211.66 L1704.97 1211.66 L1705.55 1211.66 L1706.14 1211.66 L1706.73 1211.66 L1707.31 1211.66 L1707.9 1211.66 L1708.49 1211.66 L1709.07 1211.66 L1709.66 1211.66 L1710.24 1211.66 L1710.83 1211.66 L1711.42 1211.66 L1712 1211.66 L1712.59 1211.66 L1713.18 1211.66 L1713.76 1211.66 L1714.35 1211.66 L1714.94 1211.66 L1715.52 1211.66 L1716.11 1211.66 L1716.7 1211.66 L1717.28 1211.66 L1717.87 1211.66 L1718.45 1211.66 L1719.04 1211.66 L1719.63 1211.66 L1720.21 1211.66 L1720.8 1211.66 L1721.39 1211.66 L1721.97 1211.66 L1722.56 1211.66 L1723.15 1211.66 L1723.73 1211.66 L1724.32 1211.66 L1724.91 1211.66 L1725.49 1211.66 L1726.08 1211.66 L1726.66 1211.66 L1727.25 1211.66 L1727.84 1211.66 L1728.42 1211.66 L1729.01 1211.66 L1729.6 1211.66 L1730.18 1211.66 L1730.77 1211.66 L1731.36 1211.66 L1731.94 1211.66 L1732.53 1211.66 L1733.11 1211.66 L1733.7 1211.66 L1734.29 1211.66 L1734.87 1211.66 L1735.46 1211.66 L1736.05 1211.66 L1736.63 1211.66 L1737.22 1211.66 L1737.81 1211.66 L1738.39 1211.66 L1738.98 1211.66 L1739.57 1211.66 L1740.15 1211.66 L1740.74 1211.66 L1741.32 1211.66 L1741.91 1211.66 L1742.5 1211.66 L1743.08 1211.66 L1743.67 1211.66 L1744.26 1211.66 L1744.84 1211.66 L1745.43 1211.66 L1746.02 1211.66 L1746.6 1211.66 L1747.19 1211.66 L1747.78 1211.66 L1748.36 1211.66 L1748.95 1211.66 L1749.53 1211.66 L1750.12 1211.66 L1750.71 1211.66 L1751.29 1211.66 L1751.88 1211.66 L1752.47 1211.66 L1753.05 1211.66 L1753.64 1211.66 L1754.23 1211.66 L1754.81 1211.66 L1755.4 1211.66 L1755.99 1211.66 L1756.57 1211.66 L1757.16 1211.66 L1757.74 1211.66 L1758.33 1211.66 L1758.92 1211.66 L1759.5 1211.66 L1760.09 1211.66 L1760.68 1211.66 L1761.26 1211.66 L1761.85 1211.66 L1762.44 1211.66 L1763.02 1211.66 L1763.61 1211.66 L1764.19 1211.66 L1764.78 1211.66 L1765.37 1211.66 L1765.95 1211.66 L1766.54 1211.66 L1767.13 1211.66 L1767.71 1211.66 L1768.3 1211.66 L1768.89 1211.66 L1769.47 1211.66 L1770.06 1211.66 L1770.65 1211.66 L1771.23 1211.66 L1771.82 1211.66 L1772.4 1211.66 L1772.99 1211.66 L1773.58 1211.66 L1774.16 1211.66 L1774.75 1211.66 L1775.34 1211.66 L1775.92 1211.66 L1776.51 1211.66 L1777.1 1211.66 L1777.68 1211.66 L1778.27 1211.66 L1778.86 1211.66 L1779.44 1211.66 L1780.03 1211.66 L1780.61 1211.66 L1781.2 1211.66 L1781.79 1211.66 L1782.37 1211.66 L1782.96 1211.66 L1783.55 1211.66 L1784.13 1211.66 L1784.72 1211.66 L1785.31 1211.66 L1785.89 1211.66 L1786.48 1211.66 L1787.06 1211.66 L1787.65 1211.66 L1788.24 1211.66 L1788.82 1211.66 L1789.41 1211.66 L1790 1211.66 L1790.58 1211.66 L1791.17 1211.66 L1791.76 1211.66 L1792.34 1211.66 L1792.93 1211.66 L1793.52 1211.66 L1794.1 1211.66 L1794.69 1211.66 L1795.27 1211.66 L1795.86 1211.66 L1796.45 1211.66 L1797.03 1211.66 L1797.62 1211.66 L1798.21 1211.66 L1798.79 1211.66 L1799.38 1211.66 L1799.97 1211.66 L1800.55 1211.66 L1801.14 1211.66 L1801.73 1211.66 L1802.31 1211.66 L1802.9 1211.66 L1803.48 1211.66 L1804.07 1211.66 L1804.66 1211.66 L1805.24 1211.66 L1805.83 1211.66 L1806.42 1211.66 L1807 1211.66 L1807.59 1211.66 L1808.18 1211.66 L1808.76 1211.66 L1809.35 1211.66 L1809.94 1211.66 L1810.52 1211.66 L1811.11 1211.66 L1811.69 1211.66 L1812.28 1211.66 L1812.87 1211.66 L1813.45 1211.66 L1814.04 1211.66 L1814.63 1211.66 L1815.21 1211.66 L1815.8 1211.66 L1816.39 1211.66 L1816.97 1211.66 L1817.56 1211.66 L1818.14 1211.66 L1818.73 1211.66 L1819.32 1211.66 L1819.9 1211.66 L1820.49 1211.66 L1821.08 1211.66 L1821.66 1211.66 L1822.25 1211.66 L1822.84 1211.66 L1823.42 1211.66 L1824.01 1211.66 L1824.6 1211.66 L1825.18 1211.66 L1825.77 1211.66 L1826.35 1211.66 L1826.94 1211.66 L1827.53 1211.66 L1828.11 1211.66 L1828.7 1211.66 L1829.29 1211.66 L1829.87 1211.66 L1830.46 1211.66 L1831.05 1211.66 L1831.63 1211.66 L1832.22 1211.66 L1832.81 1211.66 L1833.39 1211.66 L1833.98 1211.66 L1834.56 1211.66 L1835.15 1211.66 L1835.74 1211.66 L1836.32 1211.66 L1836.91 1211.66 L1837.5 1211.66 L1838.08 1211.66 L1838.67 1211.66 L1839.26 1211.66 L1839.84 1211.66 L1840.43 1211.66 L1841.01 1211.66 L1841.6 1211.66 L1842.19 1211.66 L1842.77 1211.66 L1843.36 1211.66 L1843.95 1211.66 L1844.53 1211.66 L1845.12 1211.66 L1845.71 1211.66 L1846.29 1211.66 L1846.88 1211.66 L1847.47 1211.66 L1848.05 1211.66 L1848.64 1211.66 L1849.22 1211.66 L1849.81 1211.66 L1850.4 1211.66 L1850.98 1211.66 L1851.57 1211.66 L1852.16 1211.66 L1852.74 1211.66 L1853.33 1211.66 L1853.92 1211.66 L1854.5 1211.66 L1855.09 1211.66 L1855.68 1211.66 L1856.26 1211.66 L1856.85 1211.66 L1857.43 1211.66 L1858.02 1211.66 L1858.61 1211.66 L1859.19 1211.66 L1859.78 1211.66 L1860.37 1211.66 L1860.95 1211.66 L1861.54 1211.66 L1862.13 1211.66 L1862.71 1211.66 L1863.3 1211.66 L1863.88 1211.66 L1864.47 1211.66 L1865.06 1211.66 L1865.64 1211.66 L1866.23 1211.66 L1866.82 1211.66 L1867.4 1211.66 L1867.99 1211.66 L1868.58 1211.66 L1869.16 1211.66 L1869.75 1211.66 L1870.34 1211.66 L1870.92 1211.66 L1871.51 1211.66 L1872.09 1211.66 L1872.68 1211.66 L1873.27 1211.66 L1873.85 1211.66 L1874.44 1211.66 L1875.03 1211.66 L1875.61 1211.66 L1876.2 1211.66 L1876.79 1211.66 L1877.37 1211.66 L1877.96 1211.66 L1878.55 1211.66 L1879.13 1211.66 L1879.72 1211.66 L1880.3 1211.66 L1880.89 1211.66 L1881.48 1211.66 L1882.06 1211.66 L1882.65 1211.66 L1883.24 1211.66 L1883.82 1211.66 L1884.41 1211.66 L1885 1211.66 L1885.58 1211.66 L1886.17 1211.66 L1886.76 1211.66 L1887.34 1211.66 L1887.93 1211.66 L1888.51 1211.66 L1889.1 1211.66 L1889.69 1211.66 L1890.27 1211.66 L1890.86 1211.66 L1891.45 1211.66 L1892.03 1211.66 L1892.62 1211.66 L1893.21 1211.66 L1893.79 1211.66 L1894.38 1211.66 L1894.96 1211.66 L1895.55 1211.66 L1896.14 1211.66 L1896.72 1211.66 L1897.31 1211.66 L1897.9 1211.66 L1898.48 1211.66 L1899.07 1211.66 L1899.66 1211.66 L1900.24 1211.66 L1900.83 1211.66 L1901.42 1211.66 L1902 1211.66 L1902.59 1211.66 L1903.17 1211.66 L1903.76 1211.66 L1904.35 1211.66 L1904.93 1211.66 L1905.52 1211.66 L1906.11 1211.66 L1906.69 1211.66 L1907.28 1211.66 L1907.87 1211.66 L1908.45 1211.66 L1909.04 1211.66 L1909.63 1211.66 L1910.21 1211.66 L1910.8 1211.66 L1911.38 1211.66 L1911.97 1211.66 L1912.56 1211.66 L1913.14 1211.66 L1913.73 1211.66 L1914.32 1211.66 L1914.9 1211.66 L1915.49 1211.66 L1916.08 1211.66 L1916.66 1211.66 L1917.25 1211.66 L1917.83 1211.66 L1918.42 1211.66 L1919.01 1211.66 L1919.59 1211.66 L1920.18 1211.66 L1920.77 1211.66 L1921.35 1211.66 L1921.94 1211.66 L1922.53 1211.66 L1923.11 1211.66 L1923.7 1211.66 L1924.29 1211.66 L1924.87 1211.66 L1925.46 1211.66 L1926.04 1211.66 L1926.63 1211.66 L1927.22 1211.66 L1927.8 1211.66 L1928.39 1211.66 L1928.98 1211.66 L1929.56 1211.66 L1930.15 1211.66 L1930.74 1211.66 L1931.32 1211.66 L1931.91 1211.66 L1932.5 1211.66 L1933.08 1211.66 L1933.67 1211.66 L1934.25 1211.66 L1934.84 1211.66 L1935.43 1211.66 L1936.01 1211.66 L1936.6 1211.66 L1937.19 1211.66 L1937.77 1211.66 L1938.36 1211.66 L1938.95 1211.66 L1939.53 1211.66 L1940.12 1211.66 L1940.71 1211.66 L1941.29 1211.66 L1941.88 1211.66 L1942.46 1211.66 L1943.05 1211.66 L1943.64 1211.66 L1944.22 1211.66 L1944.81 1211.66 L1945.4 1211.66 L1945.98 1211.66 L1946.57 1211.66 L1947.16 1211.66 L1947.74 1211.66 L1948.33 1211.66 L1948.91 1211.66 L1949.5 1211.66 L1950.09 1211.66 L1950.67 1211.66 L1951.26 1211.66 L1951.85 1211.66 L1952.43 1211.66 L1953.02 1211.66 L1953.61 1211.66 L1954.19 1211.66 L1954.78 1211.66 L1955.37 1211.66 L1955.95 1211.66 L1956.54 1211.66 L1957.12 1211.66 L1957.71 1211.66 L1958.3 1211.66 L1958.88 1211.66 L1959.47 1211.66 L1960.06 1211.66 L1960.64 1211.66 L1961.23 1211.66 L1961.82 1211.66 L1962.4 1211.66 L1962.99 1211.66 L1963.58 1211.66 L1964.16 1211.66 L1964.75 1211.66 L1965.33 1211.66 L1965.92 1211.66 L1966.51 1211.66 L1967.09 1211.66 L1967.68 1211.66 L1968.27 1211.66 L1968.85 1211.66 L1969.44 1211.66 L1970.03 1211.66 L1970.61 1211.66 L1971.2 1211.66 L1971.78 1211.66 L1972.37 1211.66 L1972.96 1211.66 L1973.54 1211.66 L1974.13 1211.66 L1974.72 1211.66 L1975.3 1211.66 L1975.89 1211.66 L1976.48 1211.66 L1977.06 1211.66 L1977.65 1211.66 L1978.24 1211.66 L1978.82 1211.66 L1979.41 1211.66 L1979.99 1211.66 L1980.58 1211.66 L1981.17 1211.66 L1981.75 1211.66 L1982.34 1211.66 L1982.93 1211.66 L1983.51 1211.66 L1984.1 1211.66 L1984.69 1211.66 L1985.27 1211.66 L1985.86 1211.66 L1986.45 1211.66 L1987.03 1211.66 L1987.62 1211.66 L1988.2 1211.66 L1988.79 1211.66 L1989.38 1211.66 L1989.96 1211.66 L1990.55 1211.66 L1991.14 1211.66 L1991.72 1211.66 L1992.31 1211.66 L1992.9 1211.66 L1993.48 1211.66 L1994.07 1211.66 L1994.65 1211.66 L1995.24 1211.66 L1995.83 1211.66 L1996.41 1211.66 L1997 1211.66 L1997.59 1211.66 L1998.17 1211.66 L1998.76 1211.66 L1999.35 1211.66 L1999.93 1211.66 L2000.52 1211.66 L2001.11 1211.66 L2001.69 1211.66 L2002.28 1211.66 L2002.86 1211.66 L2003.45 1211.66 L2004.04 1211.66 L2004.62 1211.66 L2005.21 1211.66 L2005.8 1211.66 L2006.38 1211.66 L2006.97 1211.66 L2007.56 1211.66 L2008.14 1211.66 L2008.73 1211.66 L2009.32 1211.66 L2009.9 1211.66 L2010.49 1211.66 L2011.07 1211.66 L2011.66 1211.66 L2012.25 1211.66 L2012.83 1211.66 L2013.42 1211.66 L2014.01 1211.66 L2014.59 1211.66 L2015.18 1211.66 L2015.77 1211.66 L2016.35 1211.66 L2016.94 1211.66 L2017.53 1211.66 L2018.11 1211.66 L2018.7 1211.66 L2019.28 1211.66 L2019.87 1211.66 L2020.46 1211.66 L2021.04 1211.66 L2021.63 1211.66 L2022.22 1211.66 L2022.8 1211.66 L2023.39 1211.66 L2023.98 1211.66 L2024.56 1211.66 L2025.15 1211.66 L2025.73 1211.66 L2026.32 1211.66 L2026.91 1211.66 L2027.49 1211.66 L2028.08 1211.66 L2028.67 1211.66 L2029.25 1211.66 L2029.84 1211.66 L2030.43 1211.66 L2031.01 1211.66 L2031.6 1211.66 L2032.19 1211.66 L2032.77 1211.66 L2033.36 1211.66 L2033.94 1211.66 L2034.53 1211.66 L2035.12 1211.66 L2035.7 1211.66 L2036.29 1211.66 L2036.88 1211.66 L2037.46 1211.66 L2038.05 1211.66 L2038.64 1211.66 L2039.22 1211.66 L2039.81 1211.66 L2040.4 1211.66 L2040.98 1211.66 L2041.57 1211.66 L2042.15 1211.66 L2042.74 1211.66 L2043.33 1211.66 L2043.91 1211.66 L2044.5 1211.66 L2045.09 1211.66 L2045.67 1211.66 L2046.26 1211.66 L2046.85 1211.66 L2047.43 1211.66 L2048.02 1211.66 L2048.6 1211.66 L2049.19 1211.66 L2049.78 1211.66 L2050.36 1211.66 L2050.95 1211.66 L2051.54 1211.66 L2052.12 1211.66 L2052.71 1211.66 L2053.3 1211.66 L2053.88 1211.66 L2054.47 1211.66 L2055.06 1211.66 L2055.64 1211.66 L2056.23 1211.66 L2056.81 1211.66 L2057.4 1211.66 L2057.99 1211.66 L2058.57 1211.66 L2059.16 1211.66 L2059.75 1211.66 L2060.33 1211.66 L2060.92 1211.66 L2061.51 1211.66 L2062.09 1211.66 L2062.68 1211.66 L2063.27 1211.66 L2063.85 1211.66 L2064.44 1211.66 L2065.02 1211.66 L2065.61 1211.66 L2066.2 1211.66 L2066.78 1211.66 L2067.37 1211.66 L2067.96 1211.66 L2068.54 1211.66 L2069.13 1211.66 L2069.72 1211.66 L2070.3 1211.66 L2070.89 1211.66 L2071.48 1211.66 L2072.06 1211.66 L2072.65 1211.66 L2073.23 1211.66 L2073.82 1211.66 L2074.41 1211.66 L2074.99 1211.66 L2075.58 1211.66 L2076.17 1211.66 L2076.75 1211.66 L2077.34 1211.66 L2077.93 1211.66 L2078.51 1211.66 L2079.1 1211.66 L2079.68 1211.66 L2080.27 1211.66 L2080.86 1211.66 L2081.44 1211.66 L2082.03 1211.66 L2082.62 1211.66 L2083.2 1211.66 L2083.79 1211.66 L2084.38 1211.66 L2084.96 1211.66 L2085.55 1211.66 L2086.14 1211.66 L2086.72 1211.66 L2087.31 1211.66 L2087.89 1211.66 L2088.48 1211.66 L2089.07 1211.66 L2089.65 1211.66 L2090.24 1211.66 L2090.83 1211.66 L2091.41 1211.66 L2092 1211.66 L2092.59 1211.66 L2093.17 1211.66 L2093.76 1211.66 L2094.35 1211.66 L2094.93 1211.66 L2095.52 1211.66 L2096.1 1211.66 L2096.69 1211.66 L2097.28 1211.66 L2097.86 1211.66 L2098.45 1211.66 L2099.04 1211.66 L2099.62 1211.66 L2100.21 1211.66 L2100.8 1211.66 L2101.38 1211.66 L2101.97 1211.66 L2102.55 1211.66 L2103.14 1211.66 L2103.73 1211.66 L2104.31 1211.66 L2104.9 1211.66 L2105.49 1211.66 L2106.07 1211.66 L2106.66 1211.66 L2107.25 1211.66 L2107.83 1211.66 L2108.42 1211.66 L2109.01 1211.66 L2109.59 1211.66 L2110.18 1211.66 L2110.76 1211.66 L2111.35 1211.66 L2111.94 1211.66 L2112.52 1211.66 L2113.11 1211.66 L2113.7 1211.66 L2114.28 1211.66 L2114.87 1211.66 L2115.46 1211.66 L2116.04 1211.66 L2116.63 1211.66 L2117.22 1211.66 L2117.8 1211.66 L2118.39 1211.66 L2118.97 1211.66 L2119.56 1211.66 L2120.15 1211.66 L2120.73 1211.66 L2121.32 1211.66 L2121.91 1211.66 L2122.49 1211.66 L2123.08 1211.66 L2123.67 1211.66 L2124.25 1211.66 L2124.84 1211.66 L2125.42 1211.66 L2126.01 1211.66 L2126.6 1211.66 L2127.18 1211.66 L2127.77 1211.66 L2128.36 1211.66 L2128.94 1211.66 L2129.53 1211.66 L2130.12 1211.66 L2130.7 1211.66 L2131.29 1211.66 L2131.88 1211.66 L2132.46 1211.66 L2133.05 1211.66 L2133.63 1211.66 L2134.22 1211.66 L2134.81 1211.66 L2135.39 1211.66 L2135.98 1211.66 L2136.57 1211.66 L2137.15 1211.66 L2137.74 1211.66 L2138.33 1211.66 L2138.91 1211.66 L2139.5 1211.66 L2140.09 1211.66 L2140.67 1211.66 L2141.26 1211.66 L2141.84 1211.66 L2142.43 1211.66 L2143.02 1211.66 L2143.6 1211.66 L2144.19 1211.66 L2144.78 1211.66 L2145.36 1211.66 L2145.95 1211.66 L2146.54 1211.66 L2147.12 1211.66 L2147.71 1211.66 L2148.3 1211.66 L2148.88 1211.66 L2149.47 1211.66 L2150.05 1211.66 L2150.64 1211.66 L2151.23 1211.66 L2151.81 1211.66 L2152.4 1211.66 L2152.99 1211.66 L2153.57 1211.66 L2154.16 1211.66 L2154.75 1211.66 L2155.33 1211.66 L2155.92 1211.66 L2156.5 1211.66 L2157.09 1211.66 L2157.68 1211.66 L2158.26 1211.66 L2158.26 1211.44 L2157.68 1211.44 L2157.09 1211.44 L2156.5 1211.44 L2155.92 1211.44 L2155.33 1211.44 L2154.75 1211.44 L2154.16 1211.44 L2153.57 1211.44 L2152.99 1211.44 L2152.4 1211.44 L2151.81 1211.44 L2151.23 1211.44 L2150.64 1211.44 L2150.05 1211.44 L2149.47 1211.44 L2148.88 1211.44 L2148.3 1211.44 L2147.71 1211.44 L2147.12 1211.44 L2146.54 1211.44 L2145.95 1211.44 L2145.36 1211.44 L2144.78 1211.44 L2144.19 1211.44 L2143.6 1211.44 L2143.02 1211.44 L2142.43 1211.44 L2141.84 1211.44 L2141.26 1211.44 L2140.67 1211.44 L2140.09 1211.44 L2139.5 1211.44 L2138.91 1211.44 L2138.33 1211.44 L2137.74 1211.44 L2137.15 1211.44 L2136.57 1211.44 L2135.98 1211.44 L2135.39 1211.44 L2134.81 1211.44 L2134.22 1211.44 L2133.63 1211.44 L2133.05 1211.44 L2132.46 1211.44 L2131.88 1211.44 L2131.29 1211.44 L2130.7 1211.44 L2130.12 1211.44 L2129.53 1211.44 L2128.94 1211.44 L2128.36 1211.44 L2127.77 1211.44 L2127.18 1211.44 L2126.6 1211.44 L2126.01 1211.44 L2125.42 1211.44 L2124.84 1211.44 L2124.25 1211.44 L2123.67 1211.44 L2123.08 1211.44 L2122.49 1211.44 L2121.91 1211.44 L2121.32 1211.44 L2120.73 1211.44 L2120.15 1211.44 L2119.56 1211.44 L2118.97 1211.44 L2118.39 1211.44 L2117.8 1211.44 L2117.22 1211.44 L2116.63 1211.44 L2116.04 1211.44 L2115.46 1211.44 L2114.87 1211.44 L2114.28 1211.44 L2113.7 1211.44 L2113.11 1211.44 L2112.52 1211.44 L2111.94 1211.44 L2111.35 1211.44 L2110.76 1211.44 L2110.18 1211.44 L2109.59 1211.44 L2109.01 1211.44 L2108.42 1211.44 L2107.83 1211.44 L2107.25 1211.44 L2106.66 1211.44 L2106.07 1211.44 L2105.49 1211.44 L2104.9 1211.44 L2104.31 1211.44 L2103.73 1211.44 L2103.14 1211.44 L2102.55 1211.44 L2101.97 1211.44 L2101.38 1211.44 L2100.8 1211.44 L2100.21 1211.44 L2099.62 1211.44 L2099.04 1211.44 L2098.45 1211.44 L2097.86 1211.44 L2097.28 1211.44 L2096.69 1211.44 L2096.1 1211.44 L2095.52 1211.44 L2094.93 1211.44 L2094.35 1211.44 L2093.76 1211.44 L2093.17 1211.44 L2092.59 1211.44 L2092 1211.44 L2091.41 1211.44 L2090.83 1211.44 L2090.24 1211.44 L2089.65 1211.44 L2089.07 1211.44 L2088.48 1211.44 L2087.89 1211.44 L2087.31 1211.44 L2086.72 1211.44 L2086.14 1211.44 L2085.55 1211.44 L2084.96 1211.44 L2084.38 1211.44 L2083.79 1211.44 L2083.2 1211.44 L2082.62 1211.44 L2082.03 1211.44 L2081.44 1211.44 L2080.86 1211.44 L2080.27 1211.44 L2079.68 1211.44 L2079.1 1211.44 L2078.51 1211.44 L2077.93 1211.44 L2077.34 1211.44 L2076.75 1211.44 L2076.17 1211.44 L2075.58 1211.44 L2074.99 1211.44 L2074.41 1211.44 L2073.82 1211.44 L2073.23 1211.44 L2072.65 1211.44 L2072.06 1211.44 L2071.48 1211.44 L2070.89 1211.44 L2070.3 1211.44 L2069.72 1211.44 L2069.13 1211.44 L2068.54 1211.44 L2067.96 1211.44 L2067.37 1211.44 L2066.78 1211.44 L2066.2 1211.44 L2065.61 1211.44 L2065.02 1211.44 L2064.44 1211.44 L2063.85 1211.44 L2063.27 1211.44 L2062.68 1211.44 L2062.09 1211.44 L2061.51 1211.44 L2060.92 1211.44 L2060.33 1211.44 L2059.75 1211.44 L2059.16 1211.44 L2058.57 1211.44 L2057.99 1211.44 L2057.4 1211.44 L2056.81 1211.44 L2056.23 1211.44 L2055.64 1211.44 L2055.06 1211.44 L2054.47 1211.44 L2053.88 1211.44 L2053.3 1211.44 L2052.71 1211.44 L2052.12 1211.44 L2051.54 1211.44 L2050.95 1211.44 L2050.36 1211.44 L2049.78 1211.44 L2049.19 1211.44 L2048.6 1211.44 L2048.02 1211.44 L2047.43 1211.44 L2046.85 1211.44 L2046.26 1211.44 L2045.67 1211.44 L2045.09 1211.44 L2044.5 1211.44 L2043.91 1211.44 L2043.33 1211.44 L2042.74 1211.44 L2042.15 1211.44 L2041.57 1211.44 L2040.98 1211.44 L2040.4 1211.44 L2039.81 1211.44 L2039.22 1211.44 L2038.64 1211.44 L2038.05 1211.44 L2037.46 1211.44 L2036.88 1211.44 L2036.29 1211.44 L2035.7 1211.44 L2035.12 1211.44 L2034.53 1211.44 L2033.94 1211.44 L2033.36 1211.44 L2032.77 1211.44 L2032.19 1211.44 L2031.6 1211.44 L2031.01 1211.44 L2030.43 1211.44 L2029.84 1211.44 L2029.25 1211.44 L2028.67 1211.44 L2028.08 1211.44 L2027.49 1211.44 L2026.91 1211.44 L2026.32 1211.44 L2025.73 1211.44 L2025.15 1211.44 L2024.56 1211.44 L2023.98 1211.44 L2023.39 1211.44 L2022.8 1211.44 L2022.22 1211.44 L2021.63 1211.44 L2021.04 1211.44 L2020.46 1211.44 L2019.87 1211.44 L2019.28 1211.44 L2018.7 1211.44 L2018.11 1211.44 L2017.53 1211.44 L2016.94 1211.44 L2016.35 1211.44 L2015.77 1211.44 L2015.18 1211.44 L2014.59 1211.44 L2014.01 1211.44 L2013.42 1211.44 L2012.83 1211.44 L2012.25 1211.44 L2011.66 1211.44 L2011.07 1211.44 L2010.49 1211.44 L2009.9 1211.44 L2009.32 1211.44 L2008.73 1211.44 L2008.14 1211.44 L2007.56 1211.44 L2006.97 1211.44 L2006.38 1211.44 L2005.8 1211.44 L2005.21 1211.44 L2004.62 1211.44 L2004.04 1211.44 L2003.45 1211.44 L2002.86 1211.44 L2002.28 1211.44 L2001.69 1211.44 L2001.11 1211.44 L2000.52 1211.44 L1999.93 1211.44 L1999.35 1211.44 L1998.76 1211.44 L1998.17 1211.44 L1997.59 1211.44 L1997 1211.44 L1996.41 1211.44 L1995.83 1211.44 L1995.24 1211.44 L1994.65 1211.44 L1994.07 1211.44 L1993.48 1211.44 L1992.9 1211.44 L1992.31 1211.44 L1991.72 1211.44 L1991.14 1211.44 L1990.55 1211.44 L1989.96 1211.44 L1989.38 1211.44 L1988.79 1211.44 L1988.2 1211.44 L1987.62 1211.44 L1987.03 1211.44 L1986.45 1211.44 L1985.86 1211.44 L1985.27 1211.44 L1984.69 1211.44 L1984.1 1211.44 L1983.51 1211.44 L1982.93 1211.44 L1982.34 1211.44 L1981.75 1211.44 L1981.17 1211.44 L1980.58 1211.44 L1979.99 1211.44 L1979.41 1211.44 L1978.82 1211.44 L1978.24 1211.44 L1977.65 1211.44 L1977.06 1211.44 L1976.48 1211.44 L1975.89 1211.44 L1975.3 1211.44 L1974.72 1211.44 L1974.13 1211.44 L1973.54 1211.44 L1972.96 1211.44 L1972.37 1211.44 L1971.78 1211.44 L1971.2 1211.44 L1970.61 1211.44 L1970.03 1211.44 L1969.44 1211.44 L1968.85 1211.44 L1968.27 1211.44 L1967.68 1211.44 L1967.09 1211.44 L1966.51 1211.44 L1965.92 1211.44 L1965.33 1211.44 L1964.75 1211.44 L1964.16 1211.44 L1963.58 1211.44 L1962.99 1211.44 L1962.4 1211.44 L1961.82 1211.44 L1961.23 1211.44 L1960.64 1211.44 L1960.06 1211.44 L1959.47 1211.44 L1958.88 1211.44 L1958.3 1211.44 L1957.71 1211.44 L1957.12 1211.44 L1956.54 1211.44 L1955.95 1211.44 L1955.37 1211.44 L1954.78 1211.44 L1954.19 1211.44 L1953.61 1211.44 L1953.02 1211.44 L1952.43 1211.44 L1951.85 1211.44 L1951.26 1211.44 L1950.67 1211.44 L1950.09 1211.44 L1949.5 1211.44 L1948.91 1211.44 L1948.33 1211.44 L1947.74 1211.44 L1947.16 1211.44 L1946.57 1211.44 L1945.98 1211.44 L1945.4 1211.44 L1944.81 1211.44 L1944.22 1211.44 L1943.64 1211.44 L1943.05 1211.44 L1942.46 1211.44 L1941.88 1211.44 L1941.29 1211.44 L1940.71 1211.44 L1940.12 1211.44 L1939.53 1211.44 L1938.95 1211.44 L1938.36 1211.44 L1937.77 1211.44 L1937.19 1211.44 L1936.6 1211.44 L1936.01 1211.44 L1935.43 1211.44 L1934.84 1211.44 L1934.25 1211.44 L1933.67 1211.44 L1933.08 1211.44 L1932.5 1211.44 L1931.91 1211.44 L1931.32 1211.44 L1930.74 1211.44 L1930.15 1211.44 L1929.56 1211.44 L1928.98 1211.44 L1928.39 1211.44 L1927.8 1211.44 L1927.22 1211.44 L1926.63 1211.44 L1926.04 1211.44 L1925.46 1211.44 L1924.87 1211.44 L1924.29 1211.44 L1923.7 1211.44 L1923.11 1211.44 L1922.53 1211.44 L1921.94 1211.44 L1921.35 1211.44 L1920.77 1211.44 L1920.18 1211.44 L1919.59 1211.44 L1919.01 1211.44 L1918.42 1211.44 L1917.83 1211.44 L1917.25 1211.44 L1916.66 1211.44 L1916.08 1211.44 L1915.49 1211.44 L1914.9 1211.44 L1914.32 1211.44 L1913.73 1211.44 L1913.14 1211.44 L1912.56 1211.44 L1911.97 1211.44 L1911.38 1211.44 L1910.8 1211.44 L1910.21 1211.44 L1909.63 1211.44 L1909.04 1211.44 L1908.45 1211.44 L1907.87 1211.44 L1907.28 1211.44 L1906.69 1211.44 L1906.11 1211.44 L1905.52 1211.44 L1904.93 1211.44 L1904.35 1211.44 L1903.76 1211.44 L1903.17 1211.44 L1902.59 1211.44 L1902 1211.44 L1901.42 1211.44 L1900.83 1211.44 L1900.24 1211.44 L1899.66 1211.44 L1899.07 1211.44 L1898.48 1211.44 L1897.9 1211.44 L1897.31 1211.44 L1896.72 1211.44 L1896.14 1211.44 L1895.55 1211.44 L1894.96 1211.44 L1894.38 1211.44 L1893.79 1211.44 L1893.21 1211.44 L1892.62 1211.44 L1892.03 1211.44 L1891.45 1211.44 L1890.86 1211.44 L1890.27 1211.44 L1889.69 1211.44 L1889.1 1211.44 L1888.51 1211.44 L1887.93 1211.44 L1887.34 1211.44 L1886.76 1211.44 L1886.17 1211.44 L1885.58 1211.44 L1885 1211.44 L1884.41 1211.44 L1883.82 1211.44 L1883.24 1211.44 L1882.65 1211.44 L1882.06 1211.44 L1881.48 1211.44 L1880.89 1211.44 L1880.3 1211.44 L1879.72 1211.44 L1879.13 1211.44 L1878.55 1211.44 L1877.96 1211.44 L1877.37 1211.44 L1876.79 1211.44 L1876.2 1211.44 L1875.61 1211.44 L1875.03 1211.44 L1874.44 1211.44 L1873.85 1211.44 L1873.27 1211.44 L1872.68 1211.44 L1872.09 1211.44 L1871.51 1211.44 L1870.92 1211.44 L1870.34 1211.44 L1869.75 1211.44 L1869.16 1211.44 L1868.58 1211.44 L1867.99 1211.44 L1867.4 1211.44 L1866.82 1211.44 L1866.23 1211.44 L1865.64 1211.44 L1865.06 1211.44 L1864.47 1211.44 L1863.88 1211.44 L1863.3 1211.44 L1862.71 1211.44 L1862.13 1211.44 L1861.54 1211.44 L1860.95 1211.44 L1860.37 1211.44 L1859.78 1211.44 L1859.19 1211.44 L1858.61 1211.44 L1858.02 1211.44 L1857.43 1211.44 L1856.85 1211.44 L1856.26 1211.44 L1855.68 1211.44 L1855.09 1211.44 L1854.5 1211.44 L1853.92 1211.44 L1853.33 1211.44 L1852.74 1211.44 L1852.16 1211.44 L1851.57 1211.44 L1850.98 1211.44 L1850.4 1211.44 L1849.81 1211.44 L1849.22 1211.44 L1848.64 1211.44 L1848.05 1211.44 L1847.47 1211.44 L1846.88 1211.44 L1846.29 1211.44 L1845.71 1211.44 L1845.12 1211.44 L1844.53 1211.44 L1843.95 1211.44 L1843.36 1211.44 L1842.77 1211.44 L1842.19 1211.44 L1841.6 1211.44 L1841.01 1211.44 L1840.43 1211.44 L1839.84 1211.44 L1839.26 1211.44 L1838.67 1211.44 L1838.08 1211.44 L1837.5 1211.44 L1836.91 1211.44 L1836.32 1211.44 L1835.74 1211.44 L1835.15 1211.44 L1834.56 1211.44 L1833.98 1211.44 L1833.39 1211.44 L1832.81 1211.44 L1832.22 1211.44 L1831.63 1211.44 L1831.05 1211.44 L1830.46 1211.44 L1829.87 1211.44 L1829.29 1211.44 L1828.7 1211.44 L1828.11 1211.44 L1827.53 1211.44 L1826.94 1211.44 L1826.35 1211.44 L1825.77 1211.44 L1825.18 1211.44 L1824.6 1211.44 L1824.01 1211.44 L1823.42 1211.44 L1822.84 1211.44 L1822.25 1211.44 L1821.66 1211.44 L1821.08 1211.44 L1820.49 1211.44 L1819.9 1211.44 L1819.32 1211.44 L1818.73 1211.44 L1818.14 1211.44 L1817.56 1211.44 L1816.97 1211.44 L1816.39 1211.44 L1815.8 1211.44 L1815.21 1211.44 L1814.63 1211.44 L1814.04 1211.44 L1813.45 1211.44 L1812.87 1211.44 L1812.28 1211.44 L1811.69 1211.44 L1811.11 1211.44 L1810.52 1211.44 L1809.94 1211.44 L1809.35 1211.44 L1808.76 1211.44 L1808.18 1211.44 L1807.59 1211.44 L1807 1211.44 L1806.42 1211.44 L1805.83 1211.44 L1805.24 1211.44 L1804.66 1211.44 L1804.07 1211.44 L1803.48 1211.44 L1802.9 1211.44 L1802.31 1211.44 L1801.73 1211.44 L1801.14 1211.44 L1800.55 1211.44 L1799.97 1211.44 L1799.38 1211.44 L1798.79 1211.44 L1798.21 1211.44 L1797.62 1211.44 L1797.03 1211.44 L1796.45 1211.44 L1795.86 1211.44 L1795.27 1211.44 L1794.69 1211.44 L1794.1 1211.44 L1793.52 1211.44 L1792.93 1211.44 L1792.34 1211.44 L1791.76 1211.44 L1791.17 1211.44 L1790.58 1211.44 L1790 1211.44 L1789.41 1211.44 L1788.82 1211.44 L1788.24 1211.44 L1787.65 1211.44 L1787.06 1211.44 L1786.48 1211.44 L1785.89 1211.44 L1785.31 1211.44 L1784.72 1211.44 L1784.13 1211.44 L1783.55 1211.44 L1782.96 1211.44 L1782.37 1211.44 L1781.79 1211.44 L1781.2 1211.44 L1780.61 1211.44 L1780.03 1211.44 L1779.44 1211.44 L1778.86 1211.44 L1778.27 1211.44 L1777.68 1211.44 L1777.1 1211.44 L1776.51 1211.44 L1775.92 1211.44 L1775.34 1211.44 L1774.75 1211.44 L1774.16 1211.44 L1773.58 1211.44 L1772.99 1211.44 L1772.4 1211.44 L1771.82 1211.44 L1771.23 1211.44 L1770.65 1211.44 L1770.06 1211.44 L1769.47 1211.44 L1768.89 1211.44 L1768.3 1211.44 L1767.71 1211.44 L1767.13 1211.44 L1766.54 1211.44 L1765.95 1211.44 L1765.37 1211.44 L1764.78 1211.44 L1764.19 1211.44 L1763.61 1211.44 L1763.02 1211.44 L1762.44 1211.44 L1761.85 1211.44 L1761.26 1211.44 L1760.68 1211.44 L1760.09 1211.44 L1759.5 1211.44 L1758.92 1211.44 L1758.33 1211.44 L1757.74 1211.44 L1757.16 1211.44 L1756.57 1211.44 L1755.99 1211.44 L1755.4 1211.44 L1754.81 1211.44 L1754.23 1211.44 L1753.64 1211.44 L1753.05 1211.44 L1752.47 1211.44 L1751.88 1211.44 L1751.29 1211.44 L1750.71 1211.44 L1750.12 1211.44 L1749.53 1211.44 L1748.95 1211.44 L1748.36 1211.44 L1747.78 1211.44 L1747.19 1211.44 L1746.6 1211.44 L1746.02 1211.44 L1745.43 1211.44 L1744.84 1211.44 L1744.26 1211.44 L1743.67 1211.44 L1743.08 1211.44 L1742.5 1211.44 L1741.91 1211.44 L1741.32 1211.44 L1740.74 1211.44 L1740.15 1211.44 L1739.57 1211.44 L1738.98 1211.44 L1738.39 1211.44 L1737.81 1211.44 L1737.22 1211.44 L1736.63 1211.44 L1736.05 1211.44 L1735.46 1211.44 L1734.87 1211.44 L1734.29 1211.44 L1733.7 1211.44 L1733.11 1211.44 L1732.53 1211.44 L1731.94 1211.44 L1731.36 1211.44 L1730.77 1211.44 L1730.18 1211.44 L1729.6 1211.44 L1729.01 1211.44 L1728.42 1211.44 L1727.84 1211.44 L1727.25 1211.44 L1726.66 1211.44 L1726.08 1211.44 L1725.49 1211.44 L1724.91 1211.44 L1724.32 1211.44 L1723.73 1211.44 L1723.15 1211.44 L1722.56 1211.44 L1721.97 1211.44 L1721.39 1211.44 L1720.8 1211.44 L1720.21 1211.44 L1719.63 1211.44 L1719.04 1211.44 L1718.45 1211.44 L1717.87 1211.44 L1717.28 1211.44 L1716.7 1211.44 L1716.11 1211.44 L1715.52 1211.44 L1714.94 1211.44 L1714.35 1211.44 L1713.76 1211.44 L1713.18 1211.44 L1712.59 1211.44 L1712 1211.44 L1711.42 1211.44 L1710.83 1211.44 L1710.24 1211.44 L1709.66 1211.44 L1709.07 1211.44 L1708.49 1211.44 L1707.9 1211.44 L1707.31 1211.44 L1706.73 1211.44 L1706.14 1211.44 L1705.55 1211.44 L1704.97 1211.44 L1704.38 1211.44 L1703.79 1211.44 L1703.21 1211.44 L1702.62 1211.44 L1702.04 1211.44 L1701.45 1211.44 L1700.86 1211.44 L1700.28 1211.44 L1699.69 1211.44 L1699.1 1211.44 L1698.52 1211.44 L1697.93 1211.44 L1697.34 1211.44 L1696.76 1211.44 L1696.17 1211.44 L1695.58 1211.44 L1695 1211.44 L1694.41 1211.44 L1693.83 1211.44 L1693.24 1211.44 L1692.65 1211.44 L1692.07 1211.44 L1691.48 1211.44 L1690.89 1211.44 L1690.31 1211.44 L1689.72 1211.44 L1689.13 1211.44 L1688.55 1211.44 L1687.96 1211.44 L1687.37 1211.44 L1686.79 1211.44 L1686.2 1211.44 L1685.62 1211.44 L1685.03 1211.44 L1684.44 1211.44 L1683.86 1211.44 L1683.27 1211.44 L1682.68 1211.44 L1682.1 1211.44 L1681.51 1211.44 L1680.92 1211.44 L1680.34 1211.44 L1679.75 1211.44 L1679.17 1211.44 L1678.58 1211.44 L1677.99 1211.44 L1677.41 1211.44 L1676.82 1211.44 L1676.23 1211.44 L1675.65 1211.44 L1675.06 1211.44 L1674.47 1211.44 L1673.89 1211.44 L1673.3 1211.44 L1672.71 1211.44 L1672.13 1211.44 L1671.54 1211.44 L1670.96 1211.44 L1670.37 1211.44 L1669.78 1211.44 L1669.2 1211.44 L1668.61 1211.44 L1668.02 1211.44 L1667.44 1211.44 L1666.85 1211.44 L1666.26 1211.44 L1665.68 1211.44 L1665.09 1211.44 L1664.5 1211.44 L1663.92 1211.44 L1663.33 1211.44 L1662.75 1211.44 L1662.16 1211.44 L1661.57 1211.44 L1660.99 1211.44 L1660.4 1211.44 L1659.81 1211.44 L1659.23 1211.44 L1658.64 1211.44 L1658.05 1211.44 L1657.47 1211.44 L1656.88 1211.44 L1656.29 1211.44 L1655.71 1211.44 L1655.12 1211.44 L1654.54 1211.44 L1653.95 1211.44 L1653.36 1211.44 L1652.78 1211.44 L1652.19 1211.44 L1651.6 1211.44 L1651.02 1211.44 L1650.43 1211.44 L1649.84 1211.44 L1649.26 1211.44 L1648.67 1211.44 L1648.09 1211.44 L1647.5 1211.44 L1646.91 1211.44 L1646.33 1211.44 L1645.74 1211.44 L1645.15 1211.44 L1644.57 1211.44 L1643.98 1211.44 L1643.39 1211.44 L1642.81 1211.44 L1642.22 1211.44 L1641.63 1211.44 L1641.05 1211.44 L1640.46 1211.44 L1639.88 1211.44 L1639.29 1211.44 L1638.7 1211.44 L1638.12 1211.44 L1637.53 1211.44 L1636.94 1211.44 L1636.36 1211.44 L1635.77 1211.44 L1635.18 1211.44 L1634.6 1211.44 L1634.01 1211.44 L1633.42 1211.44 L1632.84 1211.44 L1632.25 1211.44 L1631.67 1211.44 L1631.08 1211.44 L1630.49 1211.44 L1629.91 1211.44 L1629.32 1211.44 L1628.73 1211.44 L1628.15 1211.44 L1627.56 1211.44 L1626.97 1211.44 L1626.39 1211.44 L1625.8 1211.44 L1625.22 1211.44 L1624.63 1211.44 L1624.04 1211.44 L1623.46 1211.44 L1622.87 1211.44 L1622.28 1211.44 L1621.7 1211.44 L1621.11 1211.44 L1620.52 1211.44 L1619.94 1211.44 L1619.35 1211.44 L1618.76 1211.44 L1618.18 1211.44 L1617.59 1211.44 L1617.01 1211.44 L1616.42 1211.44 L1615.83 1211.44 L1615.25 1211.44 L1614.66 1211.44 L1614.07 1211.44 L1613.49 1211.44 L1612.9 1211.44 L1612.31 1211.44 L1611.73 1211.44 L1611.14 1211.44 L1610.55 1211.44 L1609.97 1211.44 L1609.38 1211.44 L1608.8 1211.44 L1608.21 1211.44 L1607.62 1211.44 L1607.04 1211.44 L1606.45 1211.44 L1605.86 1211.44 L1605.28 1211.44 L1604.69 1211.44 L1604.1 1211.44 L1603.52 1211.44 L1602.93 1211.44 L1602.34 1211.44 L1601.76 1211.44 L1601.17 1211.44 L1600.59 1211.44 L1600 1211.44 L1599.41 1211.44 L1598.83 1211.44 L1598.24 1211.44 L1597.65 1211.44 L1597.07 1211.44 L1596.48 1211.44 L1595.89 1211.44 L1595.31 1211.44 L1594.72 1211.44 L1594.14 1211.44 L1593.55 1211.44 L1592.96 1211.44 L1592.38 1211.44 L1591.79 1211.44 L1591.2 1211.44 L1590.62 1211.44 L1590.03 1211.44 L1589.44 1211.44 L1588.86 1211.44 L1588.27 1211.44 L1587.68 1211.44 L1587.1 1211.44 L1586.51 1211.44 L1585.93 1211.44 L1585.34 1211.44 L1584.75 1211.44 L1584.17 1211.44 L1583.58 1211.44 L1582.99 1211.44 L1582.41 1211.44 L1581.82 1211.44 L1581.23 1211.44 L1580.65 1211.44 L1580.06 1211.44 L1579.47 1211.44 L1578.89 1211.44 L1578.3 1211.44 L1577.72 1211.44 L1577.13 1211.44 L1576.54 1211.44 L1575.96 1211.44 L1575.37 1211.44 L1574.78 1211.44 L1574.2 1211.44 L1573.61 1211.44 L1573.02 1211.44 L1572.44 1211.44 L1571.85 1211.44 L1571.27 1211.44 L1570.68 1211.44 L1570.09 1211.44 L1569.51 1211.44 L1568.92 1211.44 L1568.33 1211.44 L1567.75 1211.44 L1567.16 1211.44 L1566.57 1211.44 L1565.99 1211.44 L1565.4 1211.44 L1564.81 1211.44 L1564.23 1211.44 L1563.64 1211.44 L1563.06 1211.44 L1562.47 1211.44 L1561.88 1211.44 L1561.3 1211.44 L1560.71 1211.44 L1560.12 1211.44 L1559.54 1211.44 L1558.95 1211.44 L1558.36 1211.44 L1557.78 1211.44 L1557.19 1211.44 L1556.6 1211.44 L1556.02 1211.44 L1555.43 1211.44 L1554.85 1211.44 L1554.26 1211.44 L1553.67 1211.44 L1553.09 1211.44 L1552.5 1211.44 L1551.91 1211.44 L1551.33 1211.44 L1550.74 1211.44 L1550.15 1211.44 L1549.57 1211.44 L1548.98 1211.44 L1548.4 1211.44 L1547.81 1211.44 L1547.22 1211.44 L1546.64 1211.44 L1546.05 1211.44 L1545.46 1211.44 L1544.88 1211.44 L1544.29 1211.44 L1543.7 1211.44 L1543.12 1211.44 L1542.53 1211.44 L1541.94 1211.44 L1541.36 1211.44 L1540.77 1211.44 L1540.19 1211.44 L1539.6 1211.44 L1539.01 1211.44 L1538.43 1211.44 L1537.84 1211.44 L1537.25 1211.44 L1536.67 1211.44 L1536.08 1211.44 L1535.49 1211.44 L1534.91 1211.44 L1534.32 1211.44 L1533.73 1211.44 L1533.15 1211.44 L1532.56 1211.44 L1531.98 1211.44 L1531.39 1211.44 L1530.8 1211.44 L1530.22 1211.44 L1529.63 1211.44 L1529.04 1211.44 L1528.46 1211.44 L1527.87 1211.44 L1527.28 1211.44 L1526.7 1211.44 L1526.11 1211.44 L1525.52 1211.44 L1524.94 1211.44 L1524.35 1211.44 L1523.77 1211.44 L1523.18 1211.44 L1522.59 1211.44 L1522.01 1211.44 L1521.42 1211.44 L1520.83 1211.44 L1520.25 1211.44 L1519.66 1211.44 L1519.07 1211.44 L1518.49 1211.44 L1517.9 1211.44 L1517.32 1211.44 L1516.73 1211.44 L1516.14 1211.44 L1515.56 1211.44 L1514.97 1211.44 L1514.38 1211.44 L1513.8 1211.44 L1513.21 1211.44 L1512.62 1211.44 L1512.04 1211.44 L1511.45 1211.44 L1510.86 1211.44 L1510.28 1211.44 L1509.69 1211.44 L1509.11 1211.44 L1508.52 1211.44 L1507.93 1211.44 L1507.35 1211.44 L1506.76 1211.44 L1506.17 1211.44 L1505.59 1211.44 L1505 1211.44 L1504.41 1211.44 L1503.83 1211.44 L1503.24 1211.44 L1502.65 1211.44 L1502.07 1211.44 L1501.48 1211.44 L1500.9 1211.44 L1500.31 1211.44 L1499.72 1211.44 L1499.14 1211.44 L1498.55 1211.44 L1497.96 1211.44 L1497.38 1211.44 L1496.79 1211.44 L1496.2 1211.44 L1495.62 1211.44 L1495.03 1211.44 L1494.45 1211.44 L1493.86 1211.44 L1493.27 1211.44 L1492.69 1211.44 L1492.1 1211.44 L1491.51 1211.44 L1490.93 1211.44 L1490.34 1211.44 L1489.75 1211.44 L1489.17 1211.44 L1488.58 1211.44 L1487.99 1211.44 L1487.41 1211.44 L1486.82 1211.44 L1486.24 1211.44 L1485.65 1211.44 L1485.06 1211.44 L1484.48 1211.44 L1483.89 1211.44 L1483.3 1211.44 L1482.72 1211.44 L1482.13 1211.44 L1481.54 1211.44 L1480.96 1211.44 L1480.37 1211.44 L1479.78 1211.44 L1479.2 1211.44 L1478.61 1211.44 L1478.03 1211.44 L1477.44 1211.44 L1476.85 1211.44 L1476.27 1211.44 L1475.68 1211.44 L1475.09 1211.44 L1474.51 1211.44 L1473.92 1211.44 L1473.33 1211.44 L1472.75 1211.44 L1472.16 1211.44 L1471.57 1211.44 L1470.99 1211.44 L1470.4 1211.44 L1469.82 1211.44 L1469.23 1211.44 L1468.64 1211.44 L1468.06 1211.44 L1467.47 1211.44 L1466.88 1211.44 L1466.3 1211.44 L1465.71 1211.44 L1465.12 1211.44 L1464.54 1211.44 L1463.95 1211.44 L1463.37 1211.44 L1462.78 1211.44 L1462.19 1211.44 L1461.61 1211.44 L1461.02 1211.44 L1460.43 1211.44 L1459.85 1211.44 L1459.26 1211.44 L1458.67 1211.44 L1458.09 1211.44 L1457.5 1211.44 L1456.91 1211.44 L1456.33 1211.44 L1455.74 1211.44 L1455.16 1211.44 L1454.57 1211.44 L1453.98 1211.44 L1453.4 1211.44 L1452.81 1211.44 L1452.22 1211.44 L1451.64 1211.44 L1451.05 1211.44 L1450.46 1211.44 L1449.88 1211.44 L1449.29 1211.44 L1448.7 1211.44 L1448.12 1211.44 L1447.53 1211.44 L1446.95 1211.44 L1446.36 1211.44 L1445.77 1211.44 L1445.19 1211.44 L1444.6 1211.44 L1444.01 1211.44 L1443.43 1211.44 L1442.84 1211.44 L1442.25 1211.44 L1441.67 1211.44 L1441.08 1211.44 L1440.5 1211.44 L1439.91 1211.44 L1439.32 1211.44 L1438.74 1211.44 L1438.15 1211.44 L1437.56 1211.44 L1436.98 1211.44 L1436.39 1211.44 L1435.8 1211.44 L1435.22 1211.44 L1434.63 1211.44 L1434.04 1211.44 L1433.46 1211.44 L1432.87 1211.44 L1432.29 1211.44 L1431.7 1211.44 L1431.11 1211.44 L1430.53 1211.44 L1429.94 1211.44 L1429.35 1211.44 L1428.77 1211.44 L1428.18 1211.44 L1427.59 1211.44 L1427.01 1211.44 L1426.42 1211.44 L1425.83 1211.44 L1425.25 1211.44 L1424.66 1211.44 L1424.08 1211.44 L1423.49 1211.44 L1422.9 1211.44 L1422.32 1211.44 L1421.73 1211.44 L1421.14 1211.44 L1420.56 1211.44 L1419.97 1211.44 L1419.38 1211.44 L1418.8 1211.44 L1418.21 1211.44 L1417.63 1211.44 L1417.04 1211.44 L1416.45 1211.44 L1415.87 1211.44 L1415.28 1211.44 L1414.69 1211.44 L1414.11 1211.44 L1413.52 1211.44 L1412.93 1211.44 L1412.35 1211.44 L1411.76 1211.44 L1411.17 1211.44 L1410.59 1211.44 L1410 1211.44 L1409.42 1211.44 L1408.83 1211.44 L1408.24 1211.44 L1407.66 1211.44 L1407.07 1211.44 L1406.48 1211.44 L1405.9 1211.44 L1405.31 1211.44 L1404.72 1211.44 L1404.14 1211.44 L1403.55 1211.44 L1402.96 1211.44 L1402.38 1211.44 L1401.79 1211.44 L1401.21 1211.44 L1400.62 1211.44 L1400.03 1211.44 L1399.45 1211.44 L1398.86 1211.44 L1398.27 1211.44 L1397.69 1211.44 L1397.1 1211.44 L1396.51 1211.44 L1395.93 1211.44 L1395.34 1211.44 L1394.75 1211.44 L1394.17 1211.44 L1393.58 1211.44 L1393 1211.44 L1392.41 1211.44 L1391.82 1211.44 L1391.24 1211.44 L1390.65 1211.44 L1390.06 1211.44 L1389.48 1211.44 L1388.89 1211.44 L1388.3 1211.44 L1387.72 1211.44 L1387.13 1211.44 L1386.55 1211.44 L1385.96 1211.44 L1385.37 1211.44 L1384.79 1211.44 L1384.2 1211.44 L1383.61 1211.44 L1383.03 1211.44 L1382.44 1211.44 L1381.85 1211.44 L1381.27 1211.44 L1380.68 1211.44 L1380.09 1211.44 L1379.51 1211.44 L1378.92 1211.44 L1378.34 1211.44 L1377.75 1211.44 L1377.16 1211.44 L1376.58 1211.44 L1375.99 1211.44 L1375.4 1211.44 L1374.82 1211.44 L1374.23 1211.44 L1373.64 1211.44 L1373.06 1211.44 L1372.47 1211.44 L1371.88 1211.44 L1371.3 1211.44 L1370.71 1211.44 L1370.13 1211.44 L1369.54 1211.44 L1368.95 1211.44 L1368.37 1211.44 L1367.78 1211.44 L1367.19 1211.44 L1366.61 1211.44 L1366.02 1211.44 L1365.43 1211.44 L1364.85 1211.44 L1364.26 1211.44 L1363.68 1211.44 L1363.09 1211.44 L1362.5 1211.44 L1361.92 1211.44 L1361.33 1211.44 L1360.74 1211.44 L1360.16 1211.44 L1359.57 1211.44 L1358.98 1211.44 L1358.4 1211.44 L1357.81 1211.44 L1357.22 1211.44 L1356.64 1211.44 L1356.05 1211.44 L1355.47 1211.44 L1354.88 1211.44 L1354.29 1211.44 L1353.71 1211.44 L1353.12 1211.44 L1352.53 1211.44 L1351.95 1211.44 L1351.36 1211.44 L1350.77 1211.44 L1350.19 1211.44 L1349.6 1211.44 L1349.01 1211.44 L1348.43 1211.44 L1347.84 1211.44 L1347.26 1211.44 L1346.67 1211.44 L1346.08 1211.44 L1345.5 1211.44 L1344.91 1211.44 L1344.32 1211.44 L1343.74 1211.44 L1343.15 1211.44 L1342.56 1211.44 L1341.98 1211.44 L1341.39 1211.44 L1340.8 1211.44 L1340.22 1211.44 L1339.63 1211.44 L1339.05 1211.44 L1338.46 1211.44 L1337.87 1211.44 L1337.29 1211.44 L1336.7 1211.44 L1336.11 1211.44 L1335.53 1211.44 L1334.94 1211.44 L1334.35 1211.44 L1333.77 1211.44 L1333.18 1211.44 L1332.6 1211.44 L1332.01 1211.44 L1331.42 1211.44 L1330.84 1211.44 L1330.25 1211.44 L1329.66 1211.44 L1329.08 1211.44 L1328.49 1211.44 L1327.9 1211.44 L1327.32 1211.44 L1326.73 1211.44 L1326.14 1211.44 L1325.56 1211.44 L1324.97 1211.44 L1324.39 1211.44 L1323.8 1211.44 L1323.21 1211.44 L1322.63 1211.44 L1322.04 1211.44 L1321.45 1211.44 L1320.87 1211.44 L1320.28 1211.44 L1319.69 1211.44 L1319.11 1211.44 L1318.52 1211.44 L1317.93 1211.44 L1317.35 1211.44 L1316.76 1211.44 L1316.18 1211.44 L1315.59 1211.44 L1315 1211.44 L1314.42 1211.44 L1313.83 1211.44 L1313.24 1211.44 L1312.66 1211.44 L1312.07 1211.44 L1311.48 1211.44 L1310.9 1211.44 L1310.31 1211.44 L1309.73 1211.44 L1309.14 1211.44 L1308.55 1211.44 L1307.97 1211.44 L1307.38 1211.44 L1306.79 1211.44 L1306.21 1211.44 L1305.62 1211.44 L1305.03 1211.44 L1304.45 1211.44 L1303.86 1211.44 L1303.27 1211.44 L1302.69 1211.44 L1302.1 1211.44 L1301.52 1211.44 L1300.93 1211.44 L1300.34 1211.44 L1299.76 1211.44 L1299.17 1211.44 L1298.58 1211.44 L1298 1211.44 L1297.41 1211.44 L1296.82 1211.44 L1296.24 1211.44 L1295.65 1211.44 L1295.06 1211.44 L1294.48 1211.44 L1293.89 1211.44 L1293.31 1211.44 L1292.72 1211.44 L1292.13 1211.44 L1291.55 1211.44 L1290.96 1211.44 L1290.37 1211.44 L1289.79 1211.44 L1289.2 1211.44 L1288.61 1211.44 L1288.03 1211.44 L1287.44 1211.44 L1286.86 1211.44 L1286.27 1211.44 L1285.68 1211.44 L1285.1 1211.44 L1284.51 1211.44 L1283.92 1211.44 L1283.34 1211.44 L1282.75 1211.44 L1282.16 1211.44 L1281.58 1211.44 L1280.99 1211.44 L1280.4 1211.44 L1279.82 1211.44 L1279.23 1211.44 L1278.65 1211.44 L1278.06 1211.44 L1277.47 1211.44 L1276.89 1211.44 L1276.3 1211.44 L1275.71 1211.44 L1275.13 1211.44 L1274.54 1211.44 L1273.95 1211.44 L1273.37 1211.44 L1272.78 1211.44 L1272.19 1211.44 L1271.61 1211.44 L1271.02 1211.44 L1270.44 1211.44 L1269.85 1211.44 L1269.26 1211.44 L1268.68 1211.44 L1268.09 1211.44 L1267.5 1211.44 L1266.92 1211.44 L1266.33 1211.44 L1265.74 1211.44 L1265.16 1211.44 L1264.57 1211.44 L1263.98 1211.44 L1263.4 1211.44 L1262.81 1211.44 L1262.23 1211.44 L1261.64 1211.44 L1261.05 1211.44 L1260.47 1211.44 L1259.88 1211.44 L1259.29 1211.44 L1258.71 1211.44 L1258.12 1211.44 L1257.53 1211.44 L1256.95 1211.44 L1256.36 1211.44 L1255.78 1211.44 L1255.19 1211.44 L1254.6 1211.44 L1254.02 1211.44 L1253.43 1211.44 L1252.84 1211.44 L1252.26 1211.44 L1251.67 1211.44 L1251.08 1211.44 L1250.5 1211.44 L1249.91 1211.44 L1249.32 1211.44 L1248.74 1211.44 L1248.15 1211.44 L1247.57 1211.44 L1246.98 1211.44 L1246.39 1211.44 L1245.81 1211.44 L1245.22 1211.44 L1244.63 1211.44 L1244.05 1211.44 L1243.46 1211.44 L1242.87 1211.44 L1242.29 1211.44 L1241.7 1211.44 L1241.11 1211.44 L1240.53 1211.44 L1239.94 1211.44 L1239.36 1211.44 L1238.77 1211.44 L1238.18 1211.44 L1237.6 1211.44 L1237.01 1211.44 L1236.42 1211.44 L1235.84 1211.44 L1235.25 1211.44 L1234.66 1211.44 L1234.08 1211.44 L1233.49 1211.44 L1232.91 1211.44 L1232.32 1211.44 L1231.73 1211.44 L1231.15 1211.44 L1230.56 1211.44 L1229.97 1211.44 L1229.39 1211.44 L1228.8 1211.44 L1228.21 1211.44 L1227.63 1211.44 L1227.04 1211.44 L1226.45 1211.44 L1225.87 1211.44 L1225.28 1211.44 L1224.7 1211.44 L1224.11 1211.44 L1223.52 1211.44 L1222.94 1211.44 L1222.35 1211.44 L1221.76 1211.44 L1221.18 1211.44 L1220.59 1211.44 L1220 1211.44 L1219.42 1211.44 L1218.83 1211.44 L1218.24 1211.44 L1217.66 1211.44 L1217.07 1211.44 L1216.49 1211.44 L1215.9 1211.44 L1215.31 1211.44 L1214.73 1211.44 L1214.14 1211.44 L1213.55 1211.44 L1212.97 1211.44 L1212.38 1211.44 L1211.79 1211.44 L1211.21 1211.44 L1210.62 1211.44 L1210.03 1211.44 L1209.45 1211.44 L1208.86 1211.44 L1208.28 1211.44 L1207.69 1211.44 L1207.1 1211.44 L1206.52 1211.44 L1205.93 1211.44 L1205.34 1211.44 L1204.76 1211.44 L1204.17 1211.44 L1203.58 1211.44 L1203 1211.44 L1202.41 1211.44 L1201.83 1211.44 L1201.24 1211.44 L1200.65 1211.44 L1200.07 1211.44 L1199.48 1211.44 L1198.89 1211.44 L1198.31 1211.44 L1197.72 1211.44 L1197.13 1211.44 L1196.55 1211.44 L1195.96 1211.44 L1195.37 1211.44 L1194.79 1211.44 L1194.2 1211.44 L1193.62 1211.44 L1193.03 1211.44 L1192.44 1211.44 L1191.86 1211.44 L1191.27 1211.44 L1190.68 1211.44 L1190.1 1211.44 L1189.51 1211.44 L1188.92 1211.44 L1188.34 1211.44 L1187.75 1211.44 L1187.16 1211.44 L1186.58 1211.44 L1185.99 1211.44 L1185.41 1211.44 L1184.82 1211.44 L1184.23 1211.44 L1183.65 1211.44 L1183.06 1211.44 L1182.47 1211.44 L1181.89 1211.44 L1181.3 1211.44 L1180.71 1211.44 L1180.13 1211.44 L1179.54 1211.44 L1178.96 1211.44 L1178.37 1211.44 L1177.78 1211.44 L1177.2 1211.44 L1176.61 1211.44 L1176.02 1211.44 L1175.44 1211.44 L1174.85 1211.44 L1174.26 1211.44 L1173.68 1211.44 L1173.09 1211.44 L1172.5 1211.44 L1171.92 1211.44 L1171.33 1211.44 L1170.75 1211.44 L1170.16 1211.44 L1169.57 1211.44 L1168.99 1211.44 L1168.4 1211.44 L1167.81 1211.44 L1167.23 1211.44 L1166.64 1211.44 L1166.05 1211.44 L1165.47 1211.44 L1164.88 1211.44 L1164.29 1211.44 L1163.71 1211.44 L1163.12 1211.44 L1162.54 1211.44 L1161.95 1211.44 L1161.36 1211.44 L1160.78 1211.44 L1160.19 1211.44 L1159.6 1211.44 L1159.02 1211.44 L1158.43 1211.44 L1157.84 1211.44 L1157.26 1211.44 L1156.67 1211.44 L1156.09 1211.44 L1155.5 1211.44 L1154.91 1211.44 L1154.33 1211.44 L1153.74 1211.44 L1153.15 1211.44 L1152.57 1211.44 L1151.98 1211.44 L1151.39 1211.44 L1150.81 1211.44 L1150.22 1211.44 L1149.63 1211.44 L1149.05 1211.44 L1148.46 1211.44 L1147.88 1211.44 L1147.29 1211.44 L1146.7 1211.44 L1146.12 1211.44 L1145.53 1211.44 L1144.94 1211.44 L1144.36 1211.44 L1143.77 1211.44 L1143.18 1211.44 L1142.6 1211.44 L1142.01 1211.44 L1141.42 1211.44 L1140.84 1211.44 L1140.25 1211.44 L1139.67 1211.44 L1139.08 1211.44 L1138.49 1211.44 L1137.91 1211.44 L1137.32 1211.44 L1136.73 1211.44 L1136.15 1211.44 L1135.56 1211.44 L1134.97 1211.44 L1134.39 1211.44 L1133.8 1211.44 L1133.21 1211.44 L1132.63 1211.44 L1132.04 1211.44 L1131.46 1211.44 L1130.87 1211.44 L1130.28 1211.44 L1129.7 1211.44 L1129.11 1211.44 L1128.52 1211.44 L1127.94 1211.44 L1127.35 1211.44 L1126.76 1211.44 L1126.18 1211.44 L1125.59 1211.44 L1125.01 1211.44 L1124.42 1211.44 L1123.83 1211.44 L1123.25 1211.44 L1122.66 1211.44 L1122.07 1211.44 L1121.49 1211.44 L1120.9 1211.44 L1120.31 1211.44 L1119.73 1211.44 L1119.14 1211.44 L1118.55 1211.44 L1117.97 1211.44 L1117.38 1211.44 L1116.8 1211.44 L1116.21 1211.44 L1115.62 1211.44 L1115.04 1211.44 L1114.45 1211.44 L1113.86 1211.44 L1113.28 1211.44 L1112.69 1211.44 L1112.1 1211.44 L1111.52 1211.44 L1110.93 1211.44 L1110.34 1211.44 L1109.76 1211.44 L1109.17 1211.44 L1108.59 1211.44 L1108 1211.44 L1107.41 1211.44 L1106.83 1211.44 L1106.24 1211.44 L1105.65 1211.44 L1105.07 1211.44 L1104.48 1211.44 L1103.89 1211.44 L1103.31 1211.44 L1102.72 1211.44 L1102.14 1211.44 L1101.55 1211.44 L1100.96 1211.44 L1100.38 1211.44 L1099.79 1211.44 L1099.2 1211.44 L1098.62 1211.44 L1098.03 1211.44 L1097.44 1211.44 L1096.86 1211.44 L1096.27 1211.44 L1095.68 1211.44 L1095.1 1211.44 L1094.51 1211.44 L1093.93 1211.44 L1093.34 1211.44 L1092.75 1211.44 L1092.17 1211.44 L1091.58 1211.44 L1090.99 1211.44 L1090.41 1211.44 L1089.82 1211.44 L1089.23 1211.44 L1088.65 1211.44 L1088.06 1211.44 L1087.47 1211.44 L1086.89 1211.44 L1086.3 1211.44 L1085.72 1211.44 L1085.13 1211.44 L1084.54 1211.44 L1083.96 1211.44 L1083.37 1211.44 L1082.78 1211.44 L1082.2 1211.44 L1081.61 1211.44 L1081.02 1211.44 L1080.44 1211.44 L1079.85 1211.44 L1079.26 1211.44 L1078.68 1211.44 L1078.09 1211.44 L1077.51 1211.44 L1076.92 1211.44 L1076.33 1211.44 L1075.75 1211.44 L1075.16 1211.44 L1074.57 1211.44 L1073.99 1211.44 L1073.4 1211.44 L1072.81 1211.44 L1072.23 1211.44 L1071.64 1211.44 L1071.06 1211.44 L1070.47 1211.44 L1069.88 1211.44 L1069.3 1211.44 L1068.71 1211.44 L1068.12 1211.44 L1067.54 1211.44 L1066.95 1211.44 L1066.36 1211.44 L1065.78 1211.44 L1065.19 1211.44 L1064.6 1211.44 L1064.02 1211.44 L1063.43 1211.44 L1062.85 1211.44 L1062.26 1211.44 L1061.67 1211.44 L1061.09 1211.44 L1060.5 1211.44 L1059.91 1211.44 L1059.33 1211.44 L1058.74 1211.44 L1058.15 1211.44 L1057.57 1211.44 L1056.98 1211.44 L1056.39 1211.44 L1055.81 1211.44 L1055.22 1211.44 L1054.64 1211.44 L1054.05 1211.44 L1053.46 1211.44 L1052.88 1211.44 L1052.29 1211.44 L1051.7 1211.44 L1051.12 1211.44 L1050.53 1211.44 L1049.94 1211.44 L1049.36 1211.44 L1048.77 1211.44 L1048.19 1211.44 L1047.6 1211.44 L1047.01 1211.44 L1046.43 1211.44 L1045.84 1211.44 L1045.25 1211.44 L1044.67 1211.44 L1044.08 1211.44 L1043.49 1211.44 L1042.91 1211.44 L1042.32 1211.44 L1041.73 1211.44 L1041.15 1211.44 L1040.56 1211.44 L1039.98 1211.44 L1039.39 1211.44 L1038.8 1211.44 L1038.22 1211.44 L1037.63 1211.44 L1037.04 1211.44 L1036.46 1211.44 L1035.87 1211.44 L1035.28 1211.44 L1034.7 1211.44 L1034.11 1211.44 L1033.52 1211.44 L1032.94 1211.44 L1032.35 1211.44 L1031.77 1211.44 L1031.18 1211.44 L1030.59 1211.44 L1030.01 1211.44 L1029.42 1211.44 L1028.83 1211.44 L1028.25 1211.44 L1027.66 1211.44 L1027.07 1211.44 L1026.49 1211.44 L1025.9 1211.44 L1025.32 1211.44 L1024.73 1211.44 L1024.14 1211.44 L1023.56 1211.44 L1022.97 1211.44 L1022.38 1211.44 L1021.8 1211.44 L1021.21 1211.44 L1020.62 1211.44 L1020.04 1211.44 L1019.45 1211.44 L1018.86 1211.44 L1018.28 1211.44 L1017.69 1211.44 L1017.11 1211.44 L1016.52 1211.44 L1015.93 1211.44 L1015.35 1211.44 L1014.76 1211.44 L1014.17 1211.44 L1013.59 1211.44 L1013 1211.44 L1012.41 1211.44 L1011.83 1211.44 L1011.24 1211.44 L1010.65 1211.44 L1010.07 1211.44 L1009.48 1211.44 L1008.9 1211.44 L1008.31 1211.44 L1007.72 1211.44 L1007.14 1211.44 L1006.55 1211.44 L1005.96 1211.44 L1005.38 1211.44 L1004.79 1211.44 L1004.2 1211.44 L1003.62 1211.44 L1003.03 1211.44 L1002.44 1211.44 L1001.86 1211.44 L1001.27 1211.44 L1000.69 1211.44 L1000.1 1211.44 L999.513 1211.44 L998.926 1211.44 L998.34 1211.44 L997.754 1211.44 L997.167 1211.44 L996.581 1211.44 L995.994 1211.44 L995.408 1211.44 L994.822 1211.44 L994.235 1211.44 L993.649 1211.44 L993.062 1211.44 L992.476 1211.44 L991.889 1211.44 L991.303 1211.44 L990.717 1211.44 L990.13 1211.44 L989.544 1211.44 L988.957 1211.44 L988.371 1211.44 L987.785 1211.44 L987.198 1211.44 L986.612 1211.44 L986.025 1211.44  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.55 986.612,1211.55 987.198,1211.55 987.785,1211.55 988.371,1211.55 988.957,1211.55 989.544,1211.55 990.13,1211.55 990.717,1211.55 991.303,1211.55 991.889,1211.55 992.476,1211.55 993.062,1211.55 993.649,1211.55 994.235,1211.55 994.822,1211.55 995.408,1211.55 995.994,1211.55 996.581,1211.55 997.167,1211.55 997.754,1211.55 998.34,1211.55 998.926,1211.55 999.513,1211.55 1000.1,1211.55 1000.69,1211.55 1001.27,1211.55 1001.86,1211.55 1002.44,1211.55 1003.03,1211.55 1003.62,1211.55 1004.2,1211.55 1004.79,1211.55 1005.38,1211.55 1005.96,1211.55 1006.55,1211.55 1007.14,1211.55 1007.72,1211.55 1008.31,1211.55 1008.9,1211.55 1009.48,1211.55 1010.07,1211.55 1010.65,1211.55 1011.24,1211.55 1011.83,1211.55 1012.41,1211.55 1013,1211.55 1013.59,1211.55 1014.17,1211.55 1014.76,1211.55 1015.35,1211.55 1015.93,1211.55 1016.52,1211.55 1017.11,1211.55 1017.69,1211.55 1018.28,1211.55 1018.86,1211.55 1019.45,1211.55 1020.04,1211.55 1020.62,1211.55 1021.21,1211.55 1021.8,1211.55 1022.38,1211.55 1022.97,1211.55 1023.56,1211.55 1024.14,1211.55 1024.73,1211.55 1025.32,1211.55 1025.9,1211.55 1026.49,1211.55 1027.07,1211.55 1027.66,1211.55 1028.25,1211.55 1028.83,1211.55 1029.42,1211.55 1030.01,1211.55 1030.59,1211.55 1031.18,1211.55 1031.77,1211.55 1032.35,1211.55 1032.94,1211.55 1033.52,1211.55 1034.11,1211.55 1034.7,1211.55 1035.28,1211.55 1035.87,1211.55 1036.46,1211.55 1037.04,1211.55 1037.63,1211.55 1038.22,1211.55 1038.8,1211.55 1039.39,1211.55 1039.98,1211.55 1040.56,1211.55 1041.15,1211.55 1041.73,1211.55 1042.32,1211.55 1042.91,1211.55 1043.49,1211.55 1044.08,1211.55 1044.67,1211.55 1045.25,1211.55 1045.84,1211.55 1046.43,1211.55 1047.01,1211.55 1047.6,1211.55 1048.19,1211.55 1048.77,1211.55 1049.36,1211.55 1049.94,1211.55 1050.53,1211.55 1051.12,1211.55 1051.7,1211.55 1052.29,1211.55 1052.88,1211.55 1053.46,1211.55 1054.05,1211.55 1054.64,1211.55 1055.22,1211.55 1055.81,1211.55 1056.39,1211.55 1056.98,1211.55 1057.57,1211.55 1058.15,1211.55 1058.74,1211.55 1059.33,1211.55 1059.91,1211.55 1060.5,1211.55 1061.09,1211.55 1061.67,1211.55 1062.26,1211.55 1062.85,1211.55 1063.43,1211.55 1064.02,1211.55 1064.6,1211.55 1065.19,1211.55 1065.78,1211.55 1066.36,1211.55 1066.95,1211.55 1067.54,1211.55 1068.12,1211.55 1068.71,1211.55 1069.3,1211.55 1069.88,1211.55 1070.47,1211.55 1071.06,1211.55 1071.64,1211.55 1072.23,1211.55 1072.81,1211.55 1073.4,1211.55 1073.99,1211.55 1074.57,1211.55 1075.16,1211.55 1075.75,1211.55 1076.33,1211.55 1076.92,1211.55 1077.51,1211.55 1078.09,1211.55 1078.68,1211.55 1079.26,1211.55 1079.85,1211.55 1080.44,1211.55 1081.02,1211.55 1081.61,1211.55 1082.2,1211.55 1082.78,1211.55 1083.37,1211.55 1083.96,1211.55 1084.54,1211.55 1085.13,1211.55 1085.72,1211.55 1086.3,1211.55 1086.89,1211.55 1087.47,1211.55 1088.06,1211.55 1088.65,1211.55 1089.23,1211.55 1089.82,1211.55 1090.41,1211.55 1090.99,1211.55 1091.58,1211.55 1092.17,1211.55 1092.75,1211.55 1093.34,1211.55 1093.93,1211.55 1094.51,1211.55 1095.1,1211.55 1095.68,1211.55 1096.27,1211.55 1096.86,1211.55 1097.44,1211.55 1098.03,1211.55 1098.62,1211.55 1099.2,1211.55 1099.79,1211.55 1100.38,1211.55 1100.96,1211.55 1101.55,1211.55 1102.14,1211.55 1102.72,1211.55 1103.31,1211.55 1103.89,1211.55 1104.48,1211.55 1105.07,1211.55 1105.65,1211.55 1106.24,1211.55 1106.83,1211.55 1107.41,1211.55 1108,1211.55 1108.59,1211.55 1109.17,1211.55 1109.76,1211.55 1110.34,1211.55 1110.93,1211.55 1111.52,1211.55 1112.1,1211.55 1112.69,1211.55 1113.28,1211.55 1113.86,1211.55 1114.45,1211.55 1115.04,1211.55 1115.62,1211.55 1116.21,1211.55 1116.8,1211.55 1117.38,1211.55 1117.97,1211.55 1118.55,1211.55 1119.14,1211.55 1119.73,1211.55 1120.31,1211.55 1120.9,1211.55 1121.49,1211.55 1122.07,1211.55 1122.66,1211.55 1123.25,1211.55 1123.83,1211.55 1124.42,1211.55 1125.01,1211.55 1125.59,1211.55 1126.18,1211.55 1126.76,1211.55 1127.35,1211.55 1127.94,1211.55 1128.52,1211.55 1129.11,1211.55 1129.7,1211.55 1130.28,1211.55 1130.87,1211.55 1131.46,1211.55 1132.04,1211.55 1132.63,1211.55 1133.21,1211.55 1133.8,1211.55 1134.39,1211.55 1134.97,1211.55 1135.56,1211.55 1136.15,1211.55 1136.73,1211.55 1137.32,1211.55 1137.91,1211.55 1138.49,1211.55 1139.08,1211.55 1139.67,1211.55 1140.25,1211.55 1140.84,1211.55 1141.42,1211.55 1142.01,1211.55 1142.6,1211.55 1143.18,1211.55 1143.77,1211.55 1144.36,1211.55 1144.94,1211.55 1145.53,1211.55 1146.12,1211.55 1146.7,1211.55 1147.29,1211.55 1147.88,1211.55 1148.46,1211.55 1149.05,1211.55 1149.63,1211.55 1150.22,1211.55 1150.81,1211.55 1151.39,1211.55 1151.98,1211.55 1152.57,1211.55 1153.15,1211.55 1153.74,1211.55 1154.33,1211.55 1154.91,1211.55 1155.5,1211.55 1156.09,1211.55 1156.67,1211.55 1157.26,1211.55 1157.84,1211.55 1158.43,1211.55 1159.02,1211.55 1159.6,1211.55 1160.19,1211.55 1160.78,1211.55 1161.36,1211.55 1161.95,1211.55 1162.54,1211.55 1163.12,1211.55 1163.71,1211.55 1164.29,1211.55 1164.88,1211.55 1165.47,1211.55 1166.05,1211.55 1166.64,1211.55 1167.23,1211.55 1167.81,1211.55 1168.4,1211.55 1168.99,1211.55 1169.57,1211.55 1170.16,1211.55 1170.75,1211.55 1171.33,1211.55 1171.92,1211.55 1172.5,1211.55 1173.09,1211.55 1173.68,1211.55 1174.26,1211.55 1174.85,1211.55 1175.44,1211.55 1176.02,1211.55 1176.61,1211.55 1177.2,1211.55 1177.78,1211.55 1178.37,1211.55 1178.96,1211.55 1179.54,1211.55 1180.13,1211.55 1180.71,1211.55 1181.3,1211.55 1181.89,1211.55 1182.47,1211.55 1183.06,1211.55 1183.65,1211.55 1184.23,1211.55 1184.82,1211.55 1185.41,1211.55 1185.99,1211.55 1186.58,1211.55 1187.16,1211.55 1187.75,1211.55 1188.34,1211.55 1188.92,1211.55 1189.51,1211.55 1190.1,1211.55 1190.68,1211.55 1191.27,1211.55 1191.86,1211.55 1192.44,1211.55 1193.03,1211.55 1193.62,1211.55 1194.2,1211.55 1194.79,1211.55 1195.37,1211.55 1195.96,1211.55 1196.55,1211.55 1197.13,1211.55 1197.72,1211.55 1198.31,1211.55 1198.89,1211.55 1199.48,1211.55 1200.07,1211.55 1200.65,1211.55 1201.24,1211.55 1201.83,1211.55 1202.41,1211.55 1203,1211.55 1203.58,1211.55 1204.17,1211.55 1204.76,1211.55 1205.34,1211.55 1205.93,1211.55 1206.52,1211.55 1207.1,1211.55 1207.69,1211.55 1208.28,1211.55 1208.86,1211.55 1209.45,1211.55 1210.03,1211.55 1210.62,1211.55 1211.21,1211.55 1211.79,1211.55 1212.38,1211.55 1212.97,1211.55 1213.55,1211.55 1214.14,1211.55 1214.73,1211.55 1215.31,1211.55 1215.9,1211.55 1216.49,1211.55 1217.07,1211.55 1217.66,1211.55 1218.24,1211.55 1218.83,1211.55 1219.42,1211.55 1220,1211.55 1220.59,1211.55 1221.18,1211.55 1221.76,1211.55 1222.35,1211.55 1222.94,1211.55 1223.52,1211.55 1224.11,1211.55 1224.7,1211.55 1225.28,1211.55 1225.87,1211.55 1226.45,1211.55 1227.04,1211.55 1227.63,1211.55 1228.21,1211.55 1228.8,1211.55 1229.39,1211.55 1229.97,1211.55 1230.56,1211.55 1231.15,1211.55 1231.73,1211.55 1232.32,1211.55 1232.91,1211.55 1233.49,1211.55 1234.08,1211.55 1234.66,1211.55 1235.25,1211.55 1235.84,1211.55 1236.42,1211.55 1237.01,1211.55 1237.6,1211.55 1238.18,1211.55 1238.77,1211.55 1239.36,1211.55 1239.94,1211.55 1240.53,1211.55 1241.11,1211.55 1241.7,1211.55 1242.29,1211.55 1242.87,1211.55 1243.46,1211.55 1244.05,1211.55 1244.63,1211.55 1245.22,1211.55 1245.81,1211.55 1246.39,1211.55 1246.98,1211.55 1247.57,1211.55 1248.15,1211.55 1248.74,1211.55 1249.32,1211.55 1249.91,1211.55 1250.5,1211.55 1251.08,1211.55 1251.67,1211.55 1252.26,1211.55 1252.84,1211.55 1253.43,1211.55 1254.02,1211.55 1254.6,1211.55 1255.19,1211.55 1255.78,1211.55 1256.36,1211.55 1256.95,1211.55 1257.53,1211.55 1258.12,1211.55 1258.71,1211.55 1259.29,1211.55 1259.88,1211.55 1260.47,1211.55 1261.05,1211.55 1261.64,1211.55 1262.23,1211.55 1262.81,1211.55 1263.4,1211.55 1263.98,1211.55 1264.57,1211.55 1265.16,1211.55 1265.74,1211.55 1266.33,1211.55 1266.92,1211.55 1267.5,1211.55 1268.09,1211.55 1268.68,1211.55 1269.26,1211.55 1269.85,1211.55 1270.44,1211.55 1271.02,1211.55 1271.61,1211.55 1272.19,1211.55 1272.78,1211.55 1273.37,1211.55 1273.95,1211.55 1274.54,1211.55 1275.13,1211.55 1275.71,1211.55 1276.3,1211.55 1276.89,1211.55 1277.47,1211.55 1278.06,1211.55 1278.65,1211.55 1279.23,1211.55 1279.82,1211.55 1280.4,1211.55 1280.99,1211.55 1281.58,1211.55 1282.16,1211.55 1282.75,1211.55 1283.34,1211.55 1283.92,1211.55 1284.51,1211.55 1285.1,1211.55 1285.68,1211.55 1286.27,1211.55 1286.86,1211.55 1287.44,1211.55 1288.03,1211.55 1288.61,1211.55 1289.2,1211.55 1289.79,1211.55 1290.37,1211.55 1290.96,1211.55 1291.55,1211.55 1292.13,1211.55 1292.72,1211.55 1293.31,1211.55 1293.89,1211.55 1294.48,1211.55 1295.06,1211.55 1295.65,1211.55 1296.24,1211.55 1296.82,1211.55 1297.41,1211.55 1298,1211.55 1298.58,1211.55 1299.17,1211.55 1299.76,1211.55 1300.34,1211.55 1300.93,1211.55 1301.52,1211.55 1302.1,1211.55 1302.69,1211.55 1303.27,1211.55 1303.86,1211.55 1304.45,1211.55 1305.03,1211.55 1305.62,1211.55 1306.21,1211.55 1306.79,1211.55 1307.38,1211.55 1307.97,1211.55 1308.55,1211.55 1309.14,1211.55 1309.73,1211.55 1310.31,1211.55 1310.9,1211.55 1311.48,1211.55 1312.07,1211.55 1312.66,1211.55 1313.24,1211.55 1313.83,1211.55 1314.42,1211.55 1315,1211.55 1315.59,1211.55 1316.18,1211.55 1316.76,1211.55 1317.35,1211.55 1317.93,1211.55 1318.52,1211.55 1319.11,1211.55 1319.69,1211.55 1320.28,1211.55 1320.87,1211.55 1321.45,1211.55 1322.04,1211.55 1322.63,1211.55 1323.21,1211.55 1323.8,1211.55 1324.39,1211.55 1324.97,1211.55 1325.56,1211.55 1326.14,1211.55 1326.73,1211.55 1327.32,1211.55 1327.9,1211.55 1328.49,1211.55 1329.08,1211.55 1329.66,1211.55 1330.25,1211.55 1330.84,1211.55 1331.42,1211.55 1332.01,1211.55 1332.6,1211.55 1333.18,1211.55 1333.77,1211.55 1334.35,1211.55 1334.94,1211.55 1335.53,1211.55 1336.11,1211.55 1336.7,1211.55 1337.29,1211.55 1337.87,1211.55 1338.46,1211.55 1339.05,1211.55 1339.63,1211.55 1340.22,1211.55 1340.8,1211.55 1341.39,1211.55 1341.98,1211.55 1342.56,1211.55 1343.15,1211.55 1343.74,1211.55 1344.32,1211.55 1344.91,1211.55 1345.5,1211.55 1346.08,1211.55 1346.67,1211.55 1347.26,1211.55 1347.84,1211.55 1348.43,1211.55 1349.01,1211.55 1349.6,1211.55 1350.19,1211.55 1350.77,1211.55 1351.36,1211.55 1351.95,1211.55 1352.53,1211.55 1353.12,1211.55 1353.71,1211.55 1354.29,1211.55 1354.88,1211.55 1355.47,1211.55 1356.05,1211.55 1356.64,1211.55 1357.22,1211.55 1357.81,1211.55 1358.4,1211.55 1358.98,1211.55 1359.57,1211.55 1360.16,1211.55 1360.74,1211.55 1361.33,1211.55 1361.92,1211.55 1362.5,1211.55 1363.09,1211.55 1363.68,1211.55 1364.26,1211.55 1364.85,1211.55 1365.43,1211.55 1366.02,1211.55 1366.61,1211.55 1367.19,1211.55 1367.78,1211.55 1368.37,1211.55 1368.95,1211.55 1369.54,1211.55 1370.13,1211.55 1370.71,1211.55 1371.3,1211.55 1371.88,1211.55 1372.47,1211.55 1373.06,1211.55 1373.64,1211.55 1374.23,1211.55 1374.82,1211.55 1375.4,1211.55 1375.99,1211.55 1376.58,1211.55 1377.16,1211.55 1377.75,1211.55 1378.34,1211.55 1378.92,1211.55 1379.51,1211.55 1380.09,1211.55 1380.68,1211.55 1381.27,1211.55 1381.85,1211.55 1382.44,1211.55 1383.03,1211.55 1383.61,1211.55 1384.2,1211.55 1384.79,1211.55 1385.37,1211.55 1385.96,1211.55 1386.55,1211.55 1387.13,1211.55 1387.72,1211.55 1388.3,1211.55 1388.89,1211.55 1389.48,1211.55 1390.06,1211.55 1390.65,1211.55 1391.24,1211.55 1391.82,1211.55 1392.41,1211.55 1393,1211.55 1393.58,1211.55 1394.17,1211.55 1394.75,1211.55 1395.34,1211.55 1395.93,1211.55 1396.51,1211.55 1397.1,1211.55 1397.69,1211.55 1398.27,1211.55 1398.86,1211.55 1399.45,1211.55 1400.03,1211.55 1400.62,1211.55 1401.21,1211.55 1401.79,1211.55 1402.38,1211.55 1402.96,1211.55 1403.55,1211.55 1404.14,1211.55 1404.72,1211.55 1405.31,1211.55 1405.9,1211.55 1406.48,1211.55 1407.07,1211.55 1407.66,1211.55 1408.24,1211.55 1408.83,1211.55 1409.42,1211.55 1410,1211.55 1410.59,1211.55 1411.17,1211.55 1411.76,1211.55 1412.35,1211.55 1412.93,1211.55 1413.52,1211.55 1414.11,1211.55 1414.69,1211.55 1415.28,1211.55 1415.87,1211.55 1416.45,1211.55 1417.04,1211.55 1417.63,1211.55 1418.21,1211.55 1418.8,1211.55 1419.38,1211.55 1419.97,1211.55 1420.56,1211.55 1421.14,1211.55 1421.73,1211.55 1422.32,1211.55 1422.9,1211.55 1423.49,1211.55 1424.08,1211.55 1424.66,1211.55 1425.25,1211.55 1425.83,1211.55 1426.42,1211.55 1427.01,1211.55 1427.59,1211.55 1428.18,1211.55 1428.77,1211.55 1429.35,1211.55 1429.94,1211.55 1430.53,1211.55 1431.11,1211.55 1431.7,1211.55 1432.29,1211.55 1432.87,1211.55 1433.46,1211.55 1434.04,1211.55 1434.63,1211.55 1435.22,1211.55 1435.8,1211.55 1436.39,1211.55 1436.98,1211.55 1437.56,1211.55 1438.15,1211.55 1438.74,1211.55 1439.32,1211.55 1439.91,1211.55 1440.5,1211.55 1441.08,1211.55 1441.67,1211.55 1442.25,1211.55 1442.84,1211.55 1443.43,1211.55 1444.01,1211.55 1444.6,1211.55 1445.19,1211.55 1445.77,1211.55 1446.36,1211.55 1446.95,1211.55 1447.53,1211.55 1448.12,1211.55 1448.7,1211.55 1449.29,1211.55 1449.88,1211.55 1450.46,1211.55 1451.05,1211.55 1451.64,1211.55 1452.22,1211.55 1452.81,1211.55 1453.4,1211.55 1453.98,1211.55 1454.57,1211.55 1455.16,1211.55 1455.74,1211.55 1456.33,1211.55 1456.91,1211.55 1457.5,1211.55 1458.09,1211.55 1458.67,1211.55 1459.26,1211.55 1459.85,1211.55 1460.43,1211.55 1461.02,1211.55 1461.61,1211.55 1462.19,1211.55 1462.78,1211.55 1463.37,1211.55 1463.95,1211.55 1464.54,1211.55 1465.12,1211.55 1465.71,1211.55 1466.3,1211.55 1466.88,1211.55 1467.47,1211.55 1468.06,1211.55 1468.64,1211.55 1469.23,1211.55 1469.82,1211.55 1470.4,1211.55 1470.99,1211.55 1471.57,1211.55 1472.16,1211.55 1472.75,1211.55 1473.33,1211.55 1473.92,1211.55 1474.51,1211.55 1475.09,1211.55 1475.68,1211.55 1476.27,1211.55 1476.85,1211.55 1477.44,1211.55 1478.03,1211.55 1478.61,1211.55 1479.2,1211.55 1479.78,1211.55 1480.37,1211.55 1480.96,1211.55 1481.54,1211.55 1482.13,1211.55 1482.72,1211.55 1483.3,1211.55 1483.89,1211.55 1484.48,1211.55 1485.06,1211.55 1485.65,1211.55 1486.24,1211.55 1486.82,1211.55 1487.41,1211.55 1487.99,1211.55 1488.58,1211.55 1489.17,1211.55 1489.75,1211.55 1490.34,1211.55 1490.93,1211.55 1491.51,1211.55 1492.1,1211.55 1492.69,1211.55 1493.27,1211.55 1493.86,1211.55 1494.45,1211.55 1495.03,1211.55 1495.62,1211.55 1496.2,1211.55 1496.79,1211.55 1497.38,1211.55 1497.96,1211.55 1498.55,1211.55 1499.14,1211.55 1499.72,1211.55 1500.31,1211.55 1500.9,1211.55 1501.48,1211.55 1502.07,1211.55 1502.65,1211.55 1503.24,1211.55 1503.83,1211.55 1504.41,1211.55 1505,1211.55 1505.59,1211.55 1506.17,1211.55 1506.76,1211.55 1507.35,1211.55 1507.93,1211.55 1508.52,1211.55 1509.11,1211.55 1509.69,1211.55 1510.28,1211.55 1510.86,1211.55 1511.45,1211.55 1512.04,1211.55 1512.62,1211.55 1513.21,1211.55 1513.8,1211.55 1514.38,1211.55 1514.97,1211.55 1515.56,1211.55 1516.14,1211.55 1516.73,1211.55 1517.32,1211.55 1517.9,1211.55 1518.49,1211.55 1519.07,1211.55 1519.66,1211.55 1520.25,1211.55 1520.83,1211.55 1521.42,1211.55 1522.01,1211.55 1522.59,1211.55 1523.18,1211.55 1523.77,1211.55 1524.35,1211.55 1524.94,1211.55 1525.52,1211.55 1526.11,1211.55 1526.7,1211.55 1527.28,1211.55 1527.87,1211.55 1528.46,1211.55 1529.04,1211.55 1529.63,1211.55 1530.22,1211.55 1530.8,1211.55 1531.39,1211.55 1531.98,1211.55 1532.56,1211.55 1533.15,1211.55 1533.73,1211.55 1534.32,1211.55 1534.91,1211.55 1535.49,1211.55 1536.08,1211.55 1536.67,1211.55 1537.25,1211.55 1537.84,1211.55 1538.43,1211.55 1539.01,1211.55 1539.6,1211.55 1540.19,1211.55 1540.77,1211.55 1541.36,1211.55 1541.94,1211.55 1542.53,1211.55 1543.12,1211.55 1543.7,1211.55 1544.29,1211.55 1544.88,1211.55 1545.46,1211.55 1546.05,1211.55 1546.64,1211.55 1547.22,1211.55 1547.81,1211.55 1548.4,1211.55 1548.98,1211.55 1549.57,1211.55 1550.15,1211.55 1550.74,1211.55 1551.33,1211.55 1551.91,1211.55 1552.5,1211.55 1553.09,1211.55 1553.67,1211.55 1554.26,1211.55 1554.85,1211.55 1555.43,1211.55 1556.02,1211.55 1556.6,1211.55 1557.19,1211.55 1557.78,1211.55 1558.36,1211.55 1558.95,1211.55 1559.54,1211.55 1560.12,1211.55 1560.71,1211.55 1561.3,1211.55 1561.88,1211.55 1562.47,1211.55 1563.06,1211.55 1563.64,1211.55 1564.23,1211.55 1564.81,1211.55 1565.4,1211.55 1565.99,1211.55 1566.57,1211.55 1567.16,1211.55 1567.75,1211.55 1568.33,1211.55 1568.92,1211.55 1569.51,1211.55 1570.09,1211.55 1570.68,1211.55 1571.27,1211.55 1571.85,1211.55 1572.44,1211.55 1573.02,1211.55 1573.61,1211.55 1574.2,1211.55 1574.78,1211.55 1575.37,1211.55 1575.96,1211.55 1576.54,1211.55 1577.13,1211.55 1577.72,1211.55 1578.3,1211.55 1578.89,1211.55 1579.47,1211.55 1580.06,1211.55 1580.65,1211.55 1581.23,1211.55 1581.82,1211.55 1582.41,1211.55 1582.99,1211.55 1583.58,1211.55 1584.17,1211.55 1584.75,1211.55 1585.34,1211.55 1585.93,1211.55 1586.51,1211.55 1587.1,1211.55 1587.68,1211.55 1588.27,1211.55 1588.86,1211.55 1589.44,1211.55 1590.03,1211.55 1590.62,1211.55 1591.2,1211.55 1591.79,1211.55 1592.38,1211.55 1592.96,1211.55 1593.55,1211.55 1594.14,1211.55 1594.72,1211.55 1595.31,1211.55 1595.89,1211.55 1596.48,1211.55 1597.07,1211.55 1597.65,1211.55 1598.24,1211.55 1598.83,1211.55 1599.41,1211.55 1600,1211.55 1600.59,1211.55 1601.17,1211.55 1601.76,1211.55 1602.34,1211.55 1602.93,1211.55 1603.52,1211.55 1604.1,1211.55 1604.69,1211.55 1605.28,1211.55 1605.86,1211.55 1606.45,1211.55 1607.04,1211.55 1607.62,1211.55 1608.21,1211.55 1608.8,1211.55 1609.38,1211.55 1609.97,1211.55 1610.55,1211.55 1611.14,1211.55 1611.73,1211.55 1612.31,1211.55 1612.9,1211.55 1613.49,1211.55 1614.07,1211.55 1614.66,1211.55 1615.25,1211.55 1615.83,1211.55 1616.42,1211.55 1617.01,1211.55 1617.59,1211.55 1618.18,1211.55 1618.76,1211.55 1619.35,1211.55 1619.94,1211.55 1620.52,1211.55 1621.11,1211.55 1621.7,1211.55 1622.28,1211.55 1622.87,1211.55 1623.46,1211.55 1624.04,1211.55 1624.63,1211.55 1625.22,1211.55 1625.8,1211.55 1626.39,1211.55 1626.97,1211.55 1627.56,1211.55 1628.15,1211.55 1628.73,1211.55 1629.32,1211.55 1629.91,1211.55 1630.49,1211.55 1631.08,1211.55 1631.67,1211.55 1632.25,1211.55 1632.84,1211.55 1633.42,1211.55 1634.01,1211.55 1634.6,1211.55 1635.18,1211.55 1635.77,1211.55 1636.36,1211.55 1636.94,1211.55 1637.53,1211.55 1638.12,1211.55 1638.7,1211.55 1639.29,1211.55 1639.88,1211.55 1640.46,1211.55 1641.05,1211.55 1641.63,1211.55 1642.22,1211.55 1642.81,1211.55 1643.39,1211.55 1643.98,1211.55 1644.57,1211.55 1645.15,1211.55 1645.74,1211.55 1646.33,1211.55 1646.91,1211.55 1647.5,1211.55 1648.09,1211.55 1648.67,1211.55 1649.26,1211.55 1649.84,1211.55 1650.43,1211.55 1651.02,1211.55 1651.6,1211.55 1652.19,1211.55 1652.78,1211.55 1653.36,1211.55 1653.95,1211.55 1654.54,1211.55 1655.12,1211.55 1655.71,1211.55 1656.29,1211.55 1656.88,1211.55 1657.47,1211.55 1658.05,1211.55 1658.64,1211.55 1659.23,1211.55 1659.81,1211.55 1660.4,1211.55 1660.99,1211.55 1661.57,1211.55 1662.16,1211.55 1662.75,1211.55 1663.33,1211.55 1663.92,1211.55 1664.5,1211.55 1665.09,1211.55 1665.68,1211.55 1666.26,1211.55 1666.85,1211.55 1667.44,1211.55 1668.02,1211.55 1668.61,1211.55 1669.2,1211.55 1669.78,1211.55 1670.37,1211.55 1670.96,1211.55 1671.54,1211.55 1672.13,1211.55 1672.71,1211.55 1673.3,1211.55 1673.89,1211.55 1674.47,1211.55 1675.06,1211.55 1675.65,1211.55 1676.23,1211.55 1676.82,1211.55 1677.41,1211.55 1677.99,1211.55 1678.58,1211.55 1679.17,1211.55 1679.75,1211.55 1680.34,1211.55 1680.92,1211.55 1681.51,1211.55 1682.1,1211.55 1682.68,1211.55 1683.27,1211.55 1683.86,1211.55 1684.44,1211.55 1685.03,1211.55 1685.62,1211.55 1686.2,1211.55 1686.79,1211.55 1687.37,1211.55 1687.96,1211.55 1688.55,1211.55 1689.13,1211.55 1689.72,1211.55 1690.31,1211.55 1690.89,1211.55 1691.48,1211.55 1692.07,1211.55 1692.65,1211.55 1693.24,1211.55 1693.83,1211.55 1694.41,1211.55 1695,1211.55 1695.58,1211.55 1696.17,1211.55 1696.76,1211.55 1697.34,1211.55 1697.93,1211.55 1698.52,1211.55 1699.1,1211.55 1699.69,1211.55 1700.28,1211.55 1700.86,1211.55 1701.45,1211.55 1702.04,1211.55 1702.62,1211.55 1703.21,1211.55 1703.79,1211.55 1704.38,1211.55 1704.97,1211.55 1705.55,1211.55 1706.14,1211.55 1706.73,1211.55 1707.31,1211.55 1707.9,1211.55 1708.49,1211.55 1709.07,1211.55 1709.66,1211.55 1710.24,1211.55 1710.83,1211.55 1711.42,1211.55 1712,1211.55 1712.59,1211.55 1713.18,1211.55 1713.76,1211.55 1714.35,1211.55 1714.94,1211.55 1715.52,1211.55 1716.11,1211.55 1716.7,1211.55 1717.28,1211.55 1717.87,1211.55 1718.45,1211.55 1719.04,1211.55 1719.63,1211.55 1720.21,1211.55 1720.8,1211.55 1721.39,1211.55 1721.97,1211.55 1722.56,1211.55 1723.15,1211.55 1723.73,1211.55 1724.32,1211.55 1724.91,1211.55 1725.49,1211.55 1726.08,1211.55 1726.66,1211.55 1727.25,1211.55 1727.84,1211.55 1728.42,1211.55 1729.01,1211.55 1729.6,1211.55 1730.18,1211.55 1730.77,1211.55 1731.36,1211.55 1731.94,1211.55 1732.53,1211.55 1733.11,1211.55 1733.7,1211.55 1734.29,1211.55 1734.87,1211.55 1735.46,1211.55 1736.05,1211.55 1736.63,1211.55 1737.22,1211.55 1737.81,1211.55 1738.39,1211.55 1738.98,1211.55 1739.57,1211.55 1740.15,1211.55 1740.74,1211.55 1741.32,1211.55 1741.91,1211.55 1742.5,1211.55 1743.08,1211.55 1743.67,1211.55 1744.26,1211.55 1744.84,1211.55 1745.43,1211.55 1746.02,1211.55 1746.6,1211.55 1747.19,1211.55 1747.78,1211.55 1748.36,1211.55 1748.95,1211.55 1749.53,1211.55 1750.12,1211.55 1750.71,1211.55 1751.29,1211.55 1751.88,1211.55 1752.47,1211.55 1753.05,1211.55 1753.64,1211.55 1754.23,1211.55 1754.81,1211.55 1755.4,1211.55 1755.99,1211.55 1756.57,1211.55 1757.16,1211.55 1757.74,1211.55 1758.33,1211.55 1758.92,1211.55 1759.5,1211.55 1760.09,1211.55 1760.68,1211.55 1761.26,1211.55 1761.85,1211.55 1762.44,1211.55 1763.02,1211.55 1763.61,1211.55 1764.19,1211.55 1764.78,1211.55 1765.37,1211.55 1765.95,1211.55 1766.54,1211.55 1767.13,1211.55 1767.71,1211.55 1768.3,1211.55 1768.89,1211.55 1769.47,1211.55 1770.06,1211.55 1770.65,1211.55 1771.23,1211.55 1771.82,1211.55 1772.4,1211.55 1772.99,1211.55 1773.58,1211.55 1774.16,1211.55 1774.75,1211.55 1775.34,1211.55 1775.92,1211.55 1776.51,1211.55 1777.1,1211.55 1777.68,1211.55 1778.27,1211.55 1778.86,1211.55 1779.44,1211.55 1780.03,1211.55 1780.61,1211.55 1781.2,1211.55 1781.79,1211.55 1782.37,1211.55 1782.96,1211.55 1783.55,1211.55 1784.13,1211.55 1784.72,1211.55 1785.31,1211.55 1785.89,1211.55 1786.48,1211.55 1787.06,1211.55 1787.65,1211.55 1788.24,1211.55 1788.82,1211.55 1789.41,1211.55 1790,1211.55 1790.58,1211.55 1791.17,1211.55 1791.76,1211.55 1792.34,1211.55 1792.93,1211.55 1793.52,1211.55 1794.1,1211.55 1794.69,1211.55 1795.27,1211.55 1795.86,1211.55 1796.45,1211.55 1797.03,1211.55 1797.62,1211.55 1798.21,1211.55 1798.79,1211.55 1799.38,1211.55 1799.97,1211.55 1800.55,1211.55 1801.14,1211.55 1801.73,1211.55 1802.31,1211.55 1802.9,1211.55 1803.48,1211.55 1804.07,1211.55 1804.66,1211.55 1805.24,1211.55 1805.83,1211.55 1806.42,1211.55 1807,1211.55 1807.59,1211.55 1808.18,1211.55 1808.76,1211.55 1809.35,1211.55 1809.94,1211.55 1810.52,1211.55 1811.11,1211.55 1811.69,1211.55 1812.28,1211.55 1812.87,1211.55 1813.45,1211.55 1814.04,1211.55 1814.63,1211.55 1815.21,1211.55 1815.8,1211.55 1816.39,1211.55 1816.97,1211.55 1817.56,1211.55 1818.14,1211.55 1818.73,1211.55 1819.32,1211.55 1819.9,1211.55 1820.49,1211.55 1821.08,1211.55 1821.66,1211.55 1822.25,1211.55 1822.84,1211.55 1823.42,1211.55 1824.01,1211.55 1824.6,1211.55 1825.18,1211.55 1825.77,1211.55 1826.35,1211.55 1826.94,1211.55 1827.53,1211.55 1828.11,1211.55 1828.7,1211.55 1829.29,1211.55 1829.87,1211.55 1830.46,1211.55 1831.05,1211.55 1831.63,1211.55 1832.22,1211.55 1832.81,1211.55 1833.39,1211.55 1833.98,1211.55 1834.56,1211.55 1835.15,1211.55 1835.74,1211.55 1836.32,1211.55 1836.91,1211.55 1837.5,1211.55 1838.08,1211.55 1838.67,1211.55 1839.26,1211.55 1839.84,1211.55 1840.43,1211.55 1841.01,1211.55 1841.6,1211.55 1842.19,1211.55 1842.77,1211.55 1843.36,1211.55 1843.95,1211.55 1844.53,1211.55 1845.12,1211.55 1845.71,1211.55 1846.29,1211.55 1846.88,1211.55 1847.47,1211.55 1848.05,1211.55 1848.64,1211.55 1849.22,1211.55 1849.81,1211.55 1850.4,1211.55 1850.98,1211.55 1851.57,1211.55 1852.16,1211.55 1852.74,1211.55 1853.33,1211.55 1853.92,1211.55 1854.5,1211.55 1855.09,1211.55 1855.68,1211.55 1856.26,1211.55 1856.85,1211.55 1857.43,1211.55 1858.02,1211.55 1858.61,1211.55 1859.19,1211.55 1859.78,1211.55 1860.37,1211.55 1860.95,1211.55 1861.54,1211.55 1862.13,1211.55 1862.71,1211.55 1863.3,1211.55 1863.88,1211.55 1864.47,1211.55 1865.06,1211.55 1865.64,1211.55 1866.23,1211.55 1866.82,1211.55 1867.4,1211.55 1867.99,1211.55 1868.58,1211.55 1869.16,1211.55 1869.75,1211.55 1870.34,1211.55 1870.92,1211.55 1871.51,1211.55 1872.09,1211.55 1872.68,1211.55 1873.27,1211.55 1873.85,1211.55 1874.44,1211.55 1875.03,1211.55 1875.61,1211.55 1876.2,1211.55 1876.79,1211.55 1877.37,1211.55 1877.96,1211.55 1878.55,1211.55 1879.13,1211.55 1879.72,1211.55 1880.3,1211.55 1880.89,1211.55 1881.48,1211.55 1882.06,1211.55 1882.65,1211.55 1883.24,1211.55 1883.82,1211.55 1884.41,1211.55 1885,1211.55 1885.58,1211.55 1886.17,1211.55 1886.76,1211.55 1887.34,1211.55 1887.93,1211.55 1888.51,1211.55 1889.1,1211.55 1889.69,1211.55 1890.27,1211.55 1890.86,1211.55 1891.45,1211.55 1892.03,1211.55 1892.62,1211.55 1893.21,1211.55 1893.79,1211.55 1894.38,1211.55 1894.96,1211.55 1895.55,1211.55 1896.14,1211.55 1896.72,1211.55 1897.31,1211.55 1897.9,1211.55 1898.48,1211.55 1899.07,1211.55 1899.66,1211.55 1900.24,1211.55 1900.83,1211.55 1901.42,1211.55 1902,1211.55 1902.59,1211.55 1903.17,1211.55 1903.76,1211.55 1904.35,1211.55 1904.93,1211.55 1905.52,1211.55 1906.11,1211.55 1906.69,1211.55 1907.28,1211.55 1907.87,1211.55 1908.45,1211.55 1909.04,1211.55 1909.63,1211.55 1910.21,1211.55 1910.8,1211.55 1911.38,1211.55 1911.97,1211.55 1912.56,1211.55 1913.14,1211.55 1913.73,1211.55 1914.32,1211.55 1914.9,1211.55 1915.49,1211.55 1916.08,1211.55 1916.66,1211.55 1917.25,1211.55 1917.83,1211.55 1918.42,1211.55 1919.01,1211.55 1919.59,1211.55 1920.18,1211.55 1920.77,1211.55 1921.35,1211.55 1921.94,1211.55 1922.53,1211.55 1923.11,1211.55 1923.7,1211.55 1924.29,1211.55 1924.87,1211.55 1925.46,1211.55 1926.04,1211.55 1926.63,1211.55 1927.22,1211.55 1927.8,1211.55 1928.39,1211.55 1928.98,1211.55 1929.56,1211.55 1930.15,1211.55 1930.74,1211.55 1931.32,1211.55 1931.91,1211.55 1932.5,1211.55 1933.08,1211.55 1933.67,1211.55 1934.25,1211.55 1934.84,1211.55 1935.43,1211.55 1936.01,1211.55 1936.6,1211.55 1937.19,1211.55 1937.77,1211.55 1938.36,1211.55 1938.95,1211.55 1939.53,1211.55 1940.12,1211.55 1940.71,1211.55 1941.29,1211.55 1941.88,1211.55 1942.46,1211.55 1943.05,1211.55 1943.64,1211.55 1944.22,1211.55 1944.81,1211.55 1945.4,1211.55 1945.98,1211.55 1946.57,1211.55 1947.16,1211.55 1947.74,1211.55 1948.33,1211.55 1948.91,1211.55 1949.5,1211.55 1950.09,1211.55 1950.67,1211.55 1951.26,1211.55 1951.85,1211.55 1952.43,1211.55 1953.02,1211.55 1953.61,1211.55 1954.19,1211.55 1954.78,1211.55 1955.37,1211.55 1955.95,1211.55 1956.54,1211.55 1957.12,1211.55 1957.71,1211.55 1958.3,1211.55 1958.88,1211.55 1959.47,1211.55 1960.06,1211.55 1960.64,1211.55 1961.23,1211.55 1961.82,1211.55 1962.4,1211.55 1962.99,1211.55 1963.58,1211.55 1964.16,1211.55 1964.75,1211.55 1965.33,1211.55 1965.92,1211.55 1966.51,1211.55 1967.09,1211.55 1967.68,1211.55 1968.27,1211.55 1968.85,1211.55 1969.44,1211.55 1970.03,1211.55 1970.61,1211.55 1971.2,1211.55 1971.78,1211.55 1972.37,1211.55 1972.96,1211.55 1973.54,1211.55 1974.13,1211.55 1974.72,1211.55 1975.3,1211.55 1975.89,1211.55 1976.48,1211.55 1977.06,1211.55 1977.65,1211.55 1978.24,1211.55 1978.82,1211.55 1979.41,1211.55 1979.99,1211.55 1980.58,1211.55 1981.17,1211.55 1981.75,1211.55 1982.34,1211.55 1982.93,1211.55 1983.51,1211.55 1984.1,1211.55 1984.69,1211.55 1985.27,1211.55 1985.86,1211.55 1986.45,1211.55 1987.03,1211.55 1987.62,1211.55 1988.2,1211.55 1988.79,1211.55 1989.38,1211.55 1989.96,1211.55 1990.55,1211.55 1991.14,1211.55 1991.72,1211.55 1992.31,1211.55 1992.9,1211.55 1993.48,1211.55 1994.07,1211.55 1994.65,1211.55 1995.24,1211.55 1995.83,1211.55 1996.41,1211.55 1997,1211.55 1997.59,1211.55 1998.17,1211.55 1998.76,1211.55 1999.35,1211.55 1999.93,1211.55 2000.52,1211.55 2001.11,1211.55 2001.69,1211.55 2002.28,1211.55 2002.86,1211.55 2003.45,1211.55 2004.04,1211.55 2004.62,1211.55 2005.21,1211.55 2005.8,1211.55 2006.38,1211.55 2006.97,1211.55 2007.56,1211.55 2008.14,1211.55 2008.73,1211.55 2009.32,1211.55 2009.9,1211.55 2010.49,1211.55 2011.07,1211.55 2011.66,1211.55 2012.25,1211.55 2012.83,1211.55 2013.42,1211.55 2014.01,1211.55 2014.59,1211.55 2015.18,1211.55 2015.77,1211.55 2016.35,1211.55 2016.94,1211.55 2017.53,1211.55 2018.11,1211.55 2018.7,1211.55 2019.28,1211.55 2019.87,1211.55 2020.46,1211.55 2021.04,1211.55 2021.63,1211.55 2022.22,1211.55 2022.8,1211.55 2023.39,1211.55 2023.98,1211.55 2024.56,1211.55 2025.15,1211.55 2025.73,1211.55 2026.32,1211.55 2026.91,1211.55 2027.49,1211.55 2028.08,1211.55 2028.67,1211.55 2029.25,1211.55 2029.84,1211.55 2030.43,1211.55 2031.01,1211.55 2031.6,1211.55 2032.19,1211.55 2032.77,1211.55 2033.36,1211.55 2033.94,1211.55 2034.53,1211.55 2035.12,1211.55 2035.7,1211.55 2036.29,1211.55 2036.88,1211.55 2037.46,1211.55 2038.05,1211.55 2038.64,1211.55 2039.22,1211.55 2039.81,1211.55 2040.4,1211.55 2040.98,1211.55 2041.57,1211.55 2042.15,1211.55 2042.74,1211.55 2043.33,1211.55 2043.91,1211.55 2044.5,1211.55 2045.09,1211.55 2045.67,1211.55 2046.26,1211.55 2046.85,1211.55 2047.43,1211.55 2048.02,1211.55 2048.6,1211.55 2049.19,1211.55 2049.78,1211.55 2050.36,1211.55 2050.95,1211.55 2051.54,1211.55 2052.12,1211.55 2052.71,1211.55 2053.3,1211.55 2053.88,1211.55 2054.47,1211.55 2055.06,1211.55 2055.64,1211.55 2056.23,1211.55 2056.81,1211.55 2057.4,1211.55 2057.99,1211.55 2058.57,1211.55 2059.16,1211.55 2059.75,1211.55 2060.33,1211.55 2060.92,1211.55 2061.51,1211.55 2062.09,1211.55 2062.68,1211.55 2063.27,1211.55 2063.85,1211.55 2064.44,1211.55 2065.02,1211.55 2065.61,1211.55 2066.2,1211.55 2066.78,1211.55 2067.37,1211.55 2067.96,1211.55 2068.54,1211.55 2069.13,1211.55 2069.72,1211.55 2070.3,1211.55 2070.89,1211.55 2071.48,1211.55 2072.06,1211.55 2072.65,1211.55 2073.23,1211.55 2073.82,1211.55 2074.41,1211.55 2074.99,1211.55 2075.58,1211.55 2076.17,1211.55 2076.75,1211.55 2077.34,1211.55 2077.93,1211.55 2078.51,1211.55 2079.1,1211.55 2079.68,1211.55 2080.27,1211.55 2080.86,1211.55 2081.44,1211.55 2082.03,1211.55 2082.62,1211.55 2083.2,1211.55 2083.79,1211.55 2084.38,1211.55 2084.96,1211.55 2085.55,1211.55 2086.14,1211.55 2086.72,1211.55 2087.31,1211.55 2087.89,1211.55 2088.48,1211.55 2089.07,1211.55 2089.65,1211.55 2090.24,1211.55 2090.83,1211.55 2091.41,1211.55 2092,1211.55 2092.59,1211.55 2093.17,1211.55 2093.76,1211.55 2094.35,1211.55 2094.93,1211.55 2095.52,1211.55 2096.1,1211.55 2096.69,1211.55 2097.28,1211.55 2097.86,1211.55 2098.45,1211.55 2099.04,1211.55 2099.62,1211.55 2100.21,1211.55 2100.8,1211.55 2101.38,1211.55 2101.97,1211.55 2102.55,1211.55 2103.14,1211.55 2103.73,1211.55 2104.31,1211.55 2104.9,1211.55 2105.49,1211.55 2106.07,1211.55 2106.66,1211.55 2107.25,1211.55 2107.83,1211.55 2108.42,1211.55 2109.01,1211.55 2109.59,1211.55 2110.18,1211.55 2110.76,1211.55 2111.35,1211.55 2111.94,1211.55 2112.52,1211.55 2113.11,1211.55 2113.7,1211.55 2114.28,1211.55 2114.87,1211.55 2115.46,1211.55 2116.04,1211.55 2116.63,1211.55 2117.22,1211.55 2117.8,1211.55 2118.39,1211.55 2118.97,1211.55 2119.56,1211.55 2120.15,1211.55 2120.73,1211.55 2121.32,1211.55 2121.91,1211.55 2122.49,1211.55 2123.08,1211.55 2123.67,1211.55 2124.25,1211.55 2124.84,1211.55 2125.42,1211.55 2126.01,1211.55 2126.6,1211.55 2127.18,1211.55 2127.77,1211.55 2128.36,1211.55 2128.94,1211.55 2129.53,1211.55 2130.12,1211.55 2130.7,1211.55 2131.29,1211.55 2131.88,1211.55 2132.46,1211.55 2133.05,1211.55 2133.63,1211.55 2134.22,1211.55 2134.81,1211.55 2135.39,1211.55 2135.98,1211.55 2136.57,1211.55 2137.15,1211.55 2137.74,1211.55 2138.33,1211.55 2138.91,1211.55 2139.5,1211.55 2140.09,1211.55 2140.67,1211.55 2141.26,1211.55 2141.84,1211.55 2142.43,1211.55 2143.02,1211.55 2143.6,1211.55 2144.19,1211.55 2144.78,1211.55 2145.36,1211.55 2145.95,1211.55 2146.54,1211.55 2147.12,1211.55 2147.71,1211.55 2148.3,1211.55 2148.88,1211.55 2149.47,1211.55 2150.05,1211.55 2150.64,1211.55 2151.23,1211.55 2151.81,1211.55 2152.4,1211.55 2152.99,1211.55 2153.57,1211.55 2154.16,1211.55 2154.75,1211.55 2155.33,1211.55 2155.92,1211.55 2156.5,1211.55 2157.09,1211.55 2157.68,1211.55 2158.26,1211.55 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.93,1195.21 1399.51,899.083 \"/>\n<polyline clip-path=\"url(#clip592)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1227.54 985.439,1195.21 2158.26,1195.21 2158.26,1227.54 985.439,1227.54 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip590)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip590)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip593\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip590)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip590)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip590)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip593)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-10246.9 167.706,-10738.2 168.266,-11189.2 168.825,-11588.6 169.384,-11939.7 169.943,-12231.1 170.503,-12495.9 171.062,-12721.4 171.621,-12259.4 172.18,-12436 172.74,-12579.9 173.299,-12684.4 173.858,-12280.2 174.417,-12352.2 174.977,-12399.4 175.536,-12028.2 176.095,-11320.7 176.655,-11336.2 177.214,-10421.6 177.773,-10417.4 178.332,-10387 178.892,-9854.9 179.451,-9366.75 180.01,-9339.07 180.569,-9087.85 181.129,-8853.43 181.688,-8805.36 182.247,-8749.68 182.806,-8371.61 183.366,-8304.82 183.925,-8240.9 184.484,-8165.53 185.043,-7949.82 185.603,-7841.12 186.162,-7752.13 186.721,-7417.33 187.28,-7325.94 187.84,-7123.87 188.399,-6836.95 188.958,-6562.93 189.517,-6214.21 190.077,-6143.17 190.636,-5987.54 191.195,-5763.32 191.754,-5599.17 192.314,-5515.33 192.873,-5357.7 193.432,-5076.19 193.991,-4874.21 194.551,-4744.14 195.11,-4665.61 195.669,-4592.27 196.228,-4511.42 196.788,-4434.57 197.347,-4295.94 197.906,-4168.12 198.465,-4090.49 199.025,-3818.73 199.584,-3702.02 200.143,-3540.28 200.702,-3422.58 201.262,-3349.58 201.821,-3161.16 202.38,-3091.02 202.939,-2978.86 203.499,-2836.58 204.058,-2729.56 204.617,-2663.17 205.176,-2525.28 205.736,-2398.32 206.295,-2236.93 206.854,-2149.61 207.413,-2098.53 207.973,-2041.98 208.532,-1988.35 209.091,-1869.85 209.65,-1818.26 210.21,-1706.2 210.769,-1656.33 211.328,-1575.71 211.887,-1555.26 212.447,-1388.08 213.006,-1308.9 213.565,-1260 214.124,-1156.6 214.684,-1024.87 215.243,-950.781 215.802,-856.7 216.361,-793.494 216.921,-756.348 217.48,-665.141 218.039,-576.402 218.598,-493.811 219.158,-438.426 219.717,-360.444 220.276,-330.659 220.835,-279.58 221.395,-226.472 221.954,-153.234 222.513,-127.295 223.072,-102.777 223.632,-55.357 224.191,-6.26763 224.75,59.1329 225.309,122.556 225.869,162.686 226.428,202.768 226.987,241.503 227.546,316.423 228.106,350.131 228.665,385.313 229.224,375.968 229.783,407.675 230.343,457.859 230.902,506.492 231.461,490.029 232.02,555 232.58,619.187 233.139,661.256 233.698,684.442 234.257,783.518 234.817,783.624 235.376,785.427 235.935,801.122 236.494,815.691 237.054,793.661 237.613,752.979 238.172,848.122 238.731,844.901 239.291,861.506 239.85,843.276 240.409,858.13 240.968,893.52 241.528,888.079 242.087,867.684 242.646,882.75 243.205,901.813 243.765,912.374 244.324,888.826 244.883,940.489 245.442,936.881 246.002,986.87 246.561,1017.65 247.12,1026.6 247.679,1056.4 248.239,1045.62 248.798,1054.07 249.357,1044.18 249.916,1037.22 250.476,1030.22 251.035,1040.25 251.594,1048.02 252.153,1040.25 252.713,1048.27 253.272,1039.21 253.831,1013.71 254.39,1040.22 254.95,1032.51 255.509,1025.41 256.068,1020.87 256.627,1047.1 257.187,1041.41 257.746,1017.57 258.305,1064.84 258.864,1092.74 259.424,1081.09 259.983,1074.71 260.542,1066.82 261.101,1076.15 261.661,1046.69 262.22,1055.15 262.779,1047.35 263.338,1074.67 263.898,1033.31 264.457,1010.23 265.016,1039.65 265.575,1034.01 266.135,1031.82 266.694,1008.33 267.253,1032.29 267.812,1027.73 268.372,1110.56 268.931,1102.54 269.49,1127.55 270.049,1171.31 270.609,1189.69 271.168,1209.8 271.727,1196.02 272.286,1150.37 272.846,1157.83 273.405,1130.26 273.964,1121.37 274.523,1116.38 275.083,1107.37 275.642,1113.68 276.201,1106.91 276.76,1078.53 277.32,1024.19 277.879,1017.37 278.438,1046.73 278.997,1043.99 279.557,1074.22 280.116,1087.46 280.675,1062.75 281.234,1106.59 281.794,1099.51 282.353,1157 282.912,1129.14 283.471,1122.45 284.031,1113.38 284.59,1137.63 285.149,1110.11 285.708,1119.62 286.268,1110.06 286.827,1150.43 287.386,1137.86 287.945,1112.91 288.505,1105.27 289.064,1097.23 289.623,1071.01 290.182,1078.78 290.742,1049.66 291.301,1058.29 291.86,1036.85 292.419,1047.03 292.979,1040.38 293.538,1032.33 294.097,1026.79 294.656,1055.1 295.216,1018.14 295.775,1029.8 296.334,1041.84 296.893,1050.16 297.453,1077.02 298.012,1101.48 298.571,1106.31 299.13,1097.79 299.69,1103.53 300.249,1078.4 300.808,1088.52 301.368,1078.29 301.927,1050.91 302.486,1046.77 303.045,1071.67 303.605,1044.04 304.164,1038.27 304.723,1027.58 305.282,1021.43 305.842,1083.51 306.401,1076.35 306.96,1064.66 307.519,1069.35 308.079,1049.66 308.638,1055.76 309.197,1044.87 309.756,1023.59 310.316,999.973 310.875,1029.04 311.434,1069.12 311.993,1058.97 312.553,1067.73 313.112,1074.38 313.671,1082.96 314.23,1072.84 314.79,1060.01 315.349,1064.06 315.908,1052.7 316.467,1056.45 317.027,1066.08 317.586,1059.5 318.145,1050.4 318.704,1025.86 319.264,1019.55 319.823,1043.98 320.382,1034.05 320.941,1105.79 321.501,1093.97 322.06,1081.26 322.619,1071.68 323.178,1042.57 323.738,1051.22 324.297,1025.39 324.856,1001.11 325.415,994.328 325.975,999.33 326.534,976.673 327.093,972.336 327.652,981.583 328.212,959.452 328.771,983.709 329.33,944.195 329.889,972.486 330.449,984.222 331.008,962.783 331.567,957.259 332.126,948.949 332.686,964.8 333.245,989.243 333.804,993.743 334.363,970.567 334.923,965.356 335.482,874.196 336.041,855.406 336.6,837.051 337.16,842.194 337.719,849.106 338.278,866.68 338.837,897.407 339.397,909.983 339.956,887.771 340.515,906.146 341.074,936.599 341.634,916.309 342.193,913.173 342.752,924.72 343.311,920.114 343.871,949.062 344.43,941.619 344.989,937.91 345.548,900.243 346.108,879.523 346.667,894.415 347.226,891.263 347.785,933.828 348.345,898.205 348.904,882.656 349.463,864.172 350.022,865.319 350.582,866.045 351.141,863.948 351.7,877.203 352.259,827.37 352.819,858.123 353.378,887.429 353.937,880.541 354.496,842.566 355.056,840.547 355.615,842.641 356.174,845.973 356.733,829.535 357.293,842.885 357.852,841.75 358.411,872.557 358.97,901.328 359.53,879.941 360.089,942.193 360.648,937.791 361.207,914.139 361.767,893.831 362.326,872.292 362.885,873.907 363.444,887.882 364.004,833.719 364.563,816.166 365.122,812.703 365.681,796.786 366.241,783.782 366.8,801.709 367.359,806.936 367.918,805.467 368.478,789.263 369.037,786.282 369.596,801.783 370.155,788.184 370.715,791.113 371.274,811.191 371.833,795.301 372.392,816.524 372.952,816.378 373.511,801.728 374.07,803.225 374.629,802.951 375.189,820.732 375.748,835.386 376.307,819.778 376.866,806.673 377.426,792.453 377.985,810.602 378.544,826.423 379.103,825.438 379.663,823.714 380.222,821.534 380.781,854.242 381.34,838.695 381.9,834.151 382.459,797.615 383.018,796.318 383.577,778.907 384.137,793.193 384.696,794.899 385.255,799.23 385.814,831.72 386.374,845.575 386.933,842.558 387.492,857.619 388.051,869.787 388.611,883.361 389.17,880.957 389.729,874.938 390.288,872.64 390.848,868.343 391.407,883.016 391.966,880.913 392.525,907.962 393.085,856.529 393.644,872.624 394.203,852.168 394.762,847.09 395.322,862.903 395.881,859.102 396.44,850.922 396.999,862.117 397.559,840.82 398.118,854.742 398.677,881.133 399.236,843.177 399.796,857.755 400.355,855.491 400.914,835.122 401.473,850.595 402.033,846.684 402.592,843.69 403.151,842.631 403.71,839.21 404.27,887.185 404.829,862.472 405.388,855.425 405.947,848.936 406.507,879.39 407.066,940.436 407.625,917.372 408.184,908.212 408.744,903.324 409.303,865.092 409.862,861.916 410.421,860.636 410.981,855.544 411.54,850.999 412.099,860.582 412.658,858.776 413.218,866.336 413.777,892.822 414.336,887.417 414.895,847.45 415.455,843.192 416.014,855.268 416.573,836.317 417.132,816.605 417.692,816.113 418.251,832.012 418.81,816.189 419.369,801.137 419.929,813.12 420.488,812.914 421.047,824.31 421.606,841.217 422.166,856.216 422.725,837.102 423.284,847.884 423.843,847.71 424.403,827.782 424.962,823.762 425.521,823.981 426.08,834.598 426.64,816.792 427.199,799.111 427.758,814.515 428.318,813.746 428.877,764.733 429.436,781.595 429.995,779.928 430.555,795.289 431.114,776.321 431.673,805.565 432.232,799.346 432.792,832.475 433.351,829.598 433.91,806.991 434.469,770.35 435.029,770.215 435.588,767.795 436.147,799.367 436.706,798.597 437.266,815.374 437.825,778.293 438.384,791.523 438.943,805.751 439.503,803.427 440.062,783.481 440.621,765.063 441.18,763.903 441.74,777.945 442.299,758.335 442.858,791.229 443.417,788.505 443.977,804.568 444.536,784.938 445.095,767.375 445.654,783.969 446.214,784.619 446.773,800.499 447.332,844.342 447.891,821.498 448.451,819.533 449.01,816.789 449.569,795.978 450.128,777.531 450.688,763.711 451.247,744.783 451.806,743.495 452.365,741.081 452.925,756.686 453.484,772.361 454.043,786.646 454.602,766.797 455.162,779.325 455.721,810.516 456.28,838.447 456.839,817.318 457.399,828.981 457.958,811.226 458.517,807.316 459.076,806.126 459.636,786.6 460.195,768.444 460.754,783.577 461.313,797.15 461.873,776.878 462.432,790.582 462.991,771.058 463.55,749.461 464.11,717.221 464.669,719.032 465.228,721.176 465.787,704.827 466.347,741.568 466.906,742.794 467.465,745.04 468.024,791.075 468.584,802.907 469.143,799.868 469.702,798.008 470.261,811.426 470.821,822.371 471.38,803.754 471.939,814.518 472.498,808.787 473.058,850.906 473.617,858.477 474.176,885.468 474.735,843.71 475.295,837.536 475.854,846.368 476.413,824.323 476.972,821.397 477.532,819.249 478.091,815.962 478.65,813.552 479.209,776.561 479.769,808.252 480.328,789.218 480.887,771.241 481.446,749.476 482.006,766.942 482.565,762.689 483.124,759.012 483.683,741.663 484.243,773.283 484.802,790.241 485.361,784.725 485.92,766.978 486.48,783.718 487.039,798.251 487.598,763.168 488.157,823.032 488.717,836.937 489.276,852.153 489.835,881.068 490.394,876.671 490.954,870.123 491.513,832.387 492.072,844.582 492.631,806.116 493.191,767.151 493.75,784.337 494.309,750.547 494.868,764.929 495.428,763.16 495.987,760.034 496.546,773.739 497.105,771.581 497.665,783.493 498.224,778.785 498.783,760.947 499.342,758.558 499.902,737.598 500.461,720.389 501.02,704.081 501.579,753.266 502.139,752.206 502.698,732.744 503.257,718.08 503.816,683.424 504.376,655.15 504.935,668.965 505.494,671.68 506.053,687.911 506.613,659.508 507.172,631.786 507.731,654.881 508.29,676.115 508.85,661.705 509.409,679.929 509.968,684.67 510.527,687.796 511.087,703.694 511.646,704.616 512.205,687.711 512.764,703.713 513.324,722.71 513.883,712.855 514.442,732.133 515.001,684.099 515.561,684.698 516.12,700.57 516.679,704.173 517.238,687 517.798,691.831 518.357,674.296 518.916,678.572 519.475,682.56 520.035,668.423 520.594,672.186 521.153,680.546 521.712,684.753 522.272,719.573 522.831,687.404 523.39,702.17 523.949,684.98 524.509,684.961 525.068,690.735 525.627,672.626 526.186,690.866 526.746,740.014 527.305,773.609 527.864,755.64 528.423,783.153 528.983,765.127 529.542,762.94 530.101,747.004 530.66,746.894 531.22,792.766 531.779,790.164 532.338,786.6 532.897,796.64 533.457,760.412 534.016,743.064 534.575,724.51 535.134,723.35 535.694,692.146 536.253,694.745 536.812,696.064 537.371,649.099 537.931,668.546 538.49,683.555 539.049,652.887 539.608,657.311 540.168,675.149 540.727,677.763 541.286,713.27 541.845,734.159 542.405,731.642 542.964,729.231 543.523,746.164 544.082,680.063 544.642,663.407 545.201,681.071 545.76,683.437 546.319,699.411 546.879,683.582 547.438,654.547 547.997,640.567 548.556,646.976 549.116,667.007 549.675,686.284 550.234,701.377 550.793,685.746 551.353,702.432 551.912,685.349 552.471,702.172 553.031,687.782 553.59,675.494 554.149,664.527 554.708,655.004 555.268,692.011 555.827,676.155 556.386,677.922 556.945,662.336 557.505,649.731 558.064,684.353 558.623,686.017 559.182,700.816 559.742,683.174 560.301,668.302 560.86,671.235 561.419,642.393 561.979,662.89 562.538,665.609 563.097,602.58 563.656,627.524 564.216,617.799 564.775,634.694 565.334,655.857 565.893,644.52 566.453,646.326 567.012,631.23 567.571,668.985 568.13,690.088 568.69,694.415 569.249,716.28 569.808,717.265 570.367,701.417 570.927,747.651 571.486,731.295 572.045,744.418 572.604,741.983 573.164,727.508 573.723,729.011 574.282,712.445 574.841,714.281 575.401,697.211 575.96,697.869 576.519,696.776 577.078,729.937 577.638,725.145 578.197,706.246 578.756,724.166 579.315,740.671 579.875,726.935 580.434,742.385 580.993,741.511 581.552,754.457 582.112,721.77 582.671,738.539 583.23,704.453 583.789,703.093 584.349,673.643 584.908,707.781 585.467,711.496 586.026,729.883 586.586,746.261 587.145,778.076 587.704,758.714 588.263,738.178 588.823,754.648 589.382,735.857 589.941,734.767 590.5,747.41 591.06,764.472 591.619,746.84 592.178,727.393 592.737,711.959 593.297,681.562 593.856,715.916 594.415,715.699 594.974,703.466 595.534,703.991 596.093,687.243 596.652,702.252 597.211,700.923 597.771,718.965 598.33,718.435 598.889,686.905 599.448,706.045 600.008,673.279 600.567,674.243 601.126,725.145 601.685,737.712 602.245,800.794 602.804,796.885 603.363,775.728 603.922,770.735 604.482,766.274 605.041,759.928 605.6,755.278 606.159,769.26 606.719,764.338 607.278,755.984 607.837,748.344 608.396,767.325 608.956,746.201 609.515,728.125 610.074,725.197 610.633,741.687 611.193,758.474 611.752,753.338 612.311,765.783 612.87,748.194 613.43,811.315 613.989,791.432 614.548,771.879 615.107,769.317 615.667,781.26 616.226,795.097 616.785,806.25 617.344,818.125 617.904,779.991 618.463,759.386 619.022,743.836 619.581,773.404 620.141,754.776 620.7,782.635 621.259,764.568 621.818,746.402 622.378,728.32 622.937,710.595 623.496,708.048 624.055,695.445 624.615,678.303 625.174,665.602 625.733,668.343 626.292,640.569 626.852,646.857 627.411,651.399 627.97,670.93 628.529,673.667 629.089,687.769 629.648,689.512 630.207,673.822 630.766,706.645 631.326,654.145 631.885,670.248 632.444,669.7 633.003,685.801 633.563,686.166 634.122,706.276 634.681,642.284 635.24,630.758 635.8,633.879 636.359,620.435 636.918,640.161 637.477,660.415 638.037,630.69 638.596,681.737 639.155,665.079 639.714,649.821 640.274,685.292 640.833,690.537 641.392,708.124 641.951,725.411 642.511,707.237 643.07,725.746 643.629,723.654 644.188,706.717 644.748,705.911 645.307,688.446 645.866,687.518 646.425,669.941 646.985,672.915 647.544,658.181 648.103,658.569 648.662,677.642 649.222,662.872 649.781,634.522 650.34,636.796 650.899,608.281 651.459,612.613 652.018,635.845 652.577,653.19 653.136,655.664 653.696,656.623 654.255,643.626 654.814,644.761 655.373,627.95 655.933,615.632 656.492,604.322 657.051,574.266 657.61,580.183 658.17,586.742 658.729,612.48 659.288,565.706 659.847,589.363 660.407,581.993 660.966,586.387 661.525,590.231 662.084,614.015 662.644,636.452 663.203,656.567 663.762,676.356 664.321,647.196 664.881,647.781 665.44,663.002 665.999,697.677 666.558,698.976 667.118,702.045 667.677,719.33 668.236,702.38 668.795,702.733 669.355,671.636 669.914,654.347 670.473,656.397 671.032,674.229 671.592,660.944 672.151,663.587 672.71,650.244 673.269,666.197 673.829,665.379 674.388,684.97 674.947,682.733 675.506,683.084 676.066,697.294 676.625,709.082 677.184,723.542 677.743,700.93 678.303,711.293 678.862,712.533 679.421,762.97 679.981,744.472 680.54,726.47 681.099,723.742 681.658,739.584 682.218,720.633 682.777,719.649 683.336,721.243 683.895,690.989 684.455,656.453 685.014,673.083 685.573,658.964 686.132,671.949 686.692,703.732 687.251,704.415 687.81,703.596 688.369,700.832 688.929,703.753 689.488,722.577 690.047,738.563 690.606,738.95 691.166,767.092 691.725,782.205 692.284,776.65 692.843,804.561 693.403,801.327 693.962,779.371 694.521,776.871 695.08,801.168 695.64,797.702 696.199,825.398 696.758,836.445 697.317,861.285 697.877,885.236 698.436,873.44 698.995,899.495 699.554,900.42 700.114,888.125 700.673,848.912 701.232,838.652 701.791,814.772 702.351,789.917 702.91,769.914 703.469,769.878 704.028,761.076 704.588,792.852 705.147,772.167 705.706,768.477 706.265,731.135 706.825,731.994 707.384,732.593 707.943,697.715 708.502,683.434 709.062,681.158 709.621,712.21 710.18,709.045 710.739,691.396 711.299,689.478 711.858,690.189 712.417,688.688 712.976,687.881 713.536,718.151 714.095,714.846 714.654,660.027 715.213,644.762 715.773,649.617 716.332,667.3 716.891,649.34 717.45,667.224 718.01,673.151 718.569,641.7 719.128,645.722 719.687,615.26 720.247,617.46 720.806,619.613 721.365,605.803 721.924,580.233 722.484,588.009 723.043,611.241 723.602,602.942 724.161,555.122 724.721,563.825 725.28,539.361 725.839,532.615 726.398,527.098 726.958,553.06 727.517,574.494 728.076,586.542 728.635,593.317 729.195,597.77 729.754,618.881 730.313,623.742 730.872,639.044 731.432,645.659 731.991,696.442 732.55,678.364 733.109,694.771 733.669,675.196 734.228,673.691 734.787,677.876 735.346,679.374 735.906,709.578 736.465,694.699 737.024,711.184 737.583,744.8 738.143,739.898 738.702,769.825 739.261,748.307 739.82,747.212 740.38,743.477 740.939,724.419 741.498,692.028 742.057,691.653 742.617,706.617 743.176,720.664 743.735,719.941 744.294,784.191 744.854,811.63 745.413,804.662 745.972,796.843 746.531,806.465 747.091,784.241 747.65,776.405 748.209,721.52 748.768,724.756 749.328,706.812 749.887,720.119 750.446,672.315 751.005,655.756 751.565,652.366 752.124,652.245 752.683,654.993 753.242,672.273 753.802,673.232 754.361,622.688 754.92,609.946 755.479,614.444 756.039,604.055 756.598,609.028 757.157,627.748 757.716,665.483 758.276,666.985 758.835,648.877 759.394,650.679 759.953,623.96 760.513,608.655 761.072,611.036 761.631,601.258 762.19,603.123 762.75,640.2 763.309,689.617 763.868,706.258 764.427,705.005 764.987,723.019 765.546,705.499 766.105,721.502 766.664,737.626 767.224,749.265 767.783,744.597 768.342,740.232 768.901,753.885 769.461,801.42 770.02,779.539 770.579,790.478 771.138,788.188 771.698,798.943 772.257,794.192 772.816,791.482 773.375,800.597 773.935,797.657 774.494,776.193 775.053,737.147 775.612,719.162 776.172,734.29 776.731,764.742 777.29,725.463 777.849,735.824 778.409,732.676 778.968,698.936 779.527,716.587 780.086,719.631 780.646,720.149 781.205,733.215 781.764,748.432 782.323,762.2 782.883,740.873 783.442,706.984 784.001,722.803 784.56,735.113 785.12,795.471 785.679,790.151 786.238,780.474 786.797,786.43 787.357,761.671 787.916,741.573 788.475,739.809 789.034,749.688 789.594,748.52 790.153,746.545 790.712,742.072 791.271,724.988 791.831,708.554 792.39,706.106 792.949,705.155 793.508,701.691 794.068,699.722 794.627,700.313 795.186,695.927 795.745,728.403 796.305,711.299 796.864,725.892 797.423,724.185 797.982,724.727 798.542,736.661 799.101,718.112 799.66,667.412 800.219,686.597 800.779,720.282 801.338,703.895 801.897,704.468 802.456,702.997 803.016,682.973 803.575,684.523 804.134,669.059 804.693,684.165 805.253,652.881 805.812,652.683 806.371,654.047 806.931,635.344 807.49,620.831 808.049,606.743 808.608,615.416 809.168,618.046 809.727,618.514 810.286,590.448 810.845,596.948 811.405,652.755 811.964,638.955 812.523,625.543 813.082,598.142 813.642,601.972 814.201,606.69 814.76,597.243 815.319,633.155 815.879,655.387 816.438,645.543 816.997,666.398 817.556,684.558 818.116,684.706 818.675,715.89 819.234,713.757 819.793,728.74 820.353,731.525 820.912,761.691 821.471,740.476 822.03,738.1 822.59,691.316 823.149,708.968 823.708,705.396 824.267,720.186 824.827,762.889 825.386,740.177 825.945,754.06 826.504,767.738 827.064,748.12 827.623,746.583 828.182,711.563 828.741,723.71 829.301,737.285 829.86,656.938 830.419,692.239 830.978,708.047 831.538,689.35 832.097,670.55 832.656,670.749 833.215,669.66 833.775,669.512 834.334,666.629 834.893,665.851 835.452,683.811 836.012,667.085 836.571,670.59 837.13,684.737 837.689,667.356 838.249,685.743 838.808,619.085 839.367,624.432 839.926,548.955 840.486,588.419 841.045,594.615 841.604,599.743 842.163,602.797 842.723,593.929 843.282,596.966 843.841,553.454 844.4,529.195 844.96,552.623 845.519,543.731 846.078,537.282 846.637,547.798 847.197,573.883 847.756,598.795 848.315,619.789 848.874,607.927 849.434,596.785 849.993,591.528 850.552,578.624 851.111,602.345 851.671,622.872 852.23,622.412 852.789,626.985 853.348,614.262 853.908,618.242 854.467,623.785 855.026,625.222 855.585,645.652 856.145,643.447 856.704,660.033 857.263,643.982 857.822,661.292 858.382,664.92 858.941,666.622 859.5,681.623 860.059,685.595 860.619,684.242 861.178,686.526 861.737,733.894 862.296,699.579 862.856,698.331 863.415,729.741 863.974,713.504 864.533,697.39 865.093,681.16 865.652,728.483 866.211,727.856 866.77,690.112 867.33,694.438 867.889,709.482 868.448,741.306 869.007,755.999 869.567,719.225 870.126,686.685 870.685,701.475 871.244,716.996 871.804,697.975 872.363,697.633 872.922,710.26 873.481,709.402 874.041,727.747 874.6,757.497 875.159,756.48 875.718,749.768 876.278,745.045 876.837,709.914 877.396,691.844 877.955,691.681 878.515,724.636 879.074,756.932 879.633,772.205 880.192,768.636 880.752,751.033 881.311,760.147 881.87,725.176 882.429,727.291 882.989,738.332 883.548,733.986 884.107,681.988 884.666,678.249 885.226,692.852 885.785,679.607 886.344,695.172 886.903,693.283 887.463,740.265 888.022,700.601 888.581,697.817 889.14,681.022 889.7,663.915 890.259,694.808 890.818,693.836 891.377,709.091 891.937,722.413 892.496,737.066 893.055,719.736 893.614,747.632 894.174,727.088 894.733,756.306 895.292,753.554 895.851,783.702 896.411,758.036 896.97,724.295 897.529,720.575 898.088,698.332 898.648,665.547 899.207,729.06 899.766,757.526 900.325,735.927 900.885,716.373 901.444,682.203 902.003,684.694 902.562,685.867 903.122,704.236 903.681,707.579 904.24,706.658 904.799,724.376 905.359,739.084 905.918,737.034 906.477,717.239 907.036,717.594 907.596,731.032 908.155,728.48 908.714,709.308 909.273,691.467 909.833,669.3 910.392,673.933 910.951,673.984 911.51,673.968 912.07,692.338 912.629,677.433 913.188,675.913 913.747,628.126 914.307,662.063 914.866,679.551 915.425,678.604 915.984,680.558 916.544,713.695 917.103,710.445 917.662,724.042 918.221,685.567 918.781,687.285 919.34,690.763 919.899,706.287 920.458,702.373 921.018,700.365 921.577,666.603 922.136,680.987 922.695,663.754 923.255,649.525 923.814,654.56 924.373,655.74 924.932,658.247 925.492,669.848 926.051,669.637 926.61,637.639 927.169,657.787 927.729,674.085 928.288,689.391 928.847,689.378 929.406,688.66 929.966,719.033 930.525,685.321 931.084,652.382 931.644,689.786 932.203,687.072 932.762,686.868 933.321,688.327 933.881,686.71 934.44,702.109 934.999,717.839 935.558,735.797 936.118,734.438 936.677,712.549 937.236,695.368 937.795,726.896 938.355,728.034 938.914,709.988 939.473,693.706 940.032,692.909 940.592,706.586 941.151,707.057 941.71,688.013 942.269,672.63 942.829,704.269 943.388,721.608 943.947,754.656 944.506,704.212 945.066,721.486 945.625,718.82 946.184,701.363 946.743,733.042 947.303,730.974 947.862,731.95 948.421,743.562 948.98,740.111 949.54,737.37 950.099,765.695 950.658,759.311 951.217,720.549 951.777,729.295 952.336,741.582 952.895,719.317 953.454,729.854 954.014,726.933 954.573,710.153 955.132,679.045 955.691,676.892 956.251,663.132 956.81,650.357 957.369,653.945 957.928,639.103 958.488,655.36 959.047,698.982 959.606,697.562 960.165,713.052 960.725,742.163 961.284,735.156 961.843,730.147 962.402,663.156 962.962,663.229 963.521,648.862 964.08,667.538 964.639,668.447 965.199,684.598 965.758,683.985 966.317,663.572 966.876,646.434 967.436,669.196 967.995,684.691 968.554,713.852 969.113,712.835 969.673,725.605 970.232,738.032 970.791,736.523 971.35,702.2 971.91,700.843 972.469,715.345 973.028,744.337 973.587,725.118 974.147,708.671 974.706,726.52 975.265,723.486 975.824,689.64 976.384,702.002 976.943,686.862 977.502,688.088 978.061,721.145 978.621,768.14 979.18,750.261 979.739,746.621 980.298,743.336 980.858,757.01 981.417,735.999 981.976,733.329 982.535,683.975 983.095,702.62 983.654,685.99 984.213,685.721 984.772,639.295 985.332,673.861 985.891,609.733 986.45,628.82 987.009,567.019 987.569,557.486 988.128,564.686 988.687,587.258 989.246,594.875 989.806,648.891 990.365,666.008 990.924,649.92 991.483,607.506 992.043,610.154 992.602,614.102 993.161,665.313 993.72,664.207 994.28,696.874 994.839,696.724 995.398,711.504 995.957,694.588 996.517,678.254 997.076,695.54 997.635,694.427 998.194,693.372 998.754,678.587 999.313,667.263 999.872,636.677 1000.43,638.133 1000.99,673.168 1001.55,676.52 1002.11,659.673 1002.67,695.114 1003.23,712.476 1003.79,710.932 1004.35,709.487 1004.91,707.526 1005.46,721.389 1006.02,704.232 1006.58,705.046 1007.14,735.696 1007.7,716.395 1008.26,765.349 1008.82,774.059 1009.38,750.772 1009.94,763.054 1010.5,776.329 1011.06,772.993 1011.62,771.168 1012.18,800.123 1012.73,776.668 1013.29,817.412 1013.85,827.799 1014.41,870.969 1014.97,878.555 1015.53,867.842 1016.09,874.374 1016.65,834.923 1017.21,829.069 1017.77,836.735 1018.33,816.111 1018.89,793.818 1019.45,755.701 1020.01,763.728 1020.56,776.319 1021.12,774.517 1021.68,784.842 1022.24,764.646 1022.8,764.013 1023.36,762.706 1023.92,725.789 1024.48,724.245 1025.04,737.161 1025.6,717.701 1026.16,698.856 1026.72,681.418 1027.28,680.071 1027.83,710.22 1028.39,692.521 1028.95,690.579 1029.51,692.549 1030.07,677.691 1030.63,663.135 1031.19,693.581 1031.75,711.01 1032.31,710.927 1032.87,679.473 1033.43,696.755 1033.99,651.912 1034.55,622.978 1035.1,590.074 1035.66,581.071 1036.22,603.086 1036.78,623.358 1037.34,576.02 1037.9,551.755 1038.46,578.099 1039.02,535.205 1039.58,510.663 1040.14,505.229 1040.7,500.406 1041.26,513.138 1041.82,573.52 1042.38,528.512 1042.93,550.62 1043.49,576.55 1044.05,577.41 1044.61,617.52 1045.17,622.849 1045.73,639.591 1046.29,658.228 1046.85,644.296 1047.41,677.244 1047.97,709.58 1048.53,706.428 1049.09,737.136 1049.65,766.724 1050.2,762.843 1050.76,727.871 1051.32,730.879 1051.88,716.424 1052.44,698.617 1053,669.092 1053.56,635.63 1054.12,619.732 1054.68,639.073 1055.24,619.656 1055.8,656.807 1056.36,674.1 1056.92,676.32 1057.48,673.361 1058.03,661.975 1058.59,664.101 1059.15,630.506 1059.71,649.762 1060.27,634.467 1060.83,681.017 1061.39,662.998 1061.95,724.302 1062.51,718.219 1063.07,746.193 1063.63,778.268 1064.19,742.082 1064.75,724.15 1065.3,723.221 1065.86,688.024 1066.42,722.124 1066.98,738.672 1067.54,719.31 1068.1,687.043 1068.66,681.101 1069.22,649.471 1069.78,665.064 1070.34,683.064 1070.9,682.054 1071.46,680.755 1072.02,685.671 1072.57,685.049 1073.13,636.747 1073.69,639.161 1074.25,679.189 1074.81,700.336 1075.37,698.474 1075.93,682.441 1076.49,685.844 1077.05,669.418 1077.61,651.033 1078.17,656.886 1078.73,655.838 1079.29,706.802 1079.85,722.611 1080.4,737.919 1080.96,718.656 1081.52,752.867 1082.08,781.393 1082.64,757.53 1083.2,758.192 1083.76,755.973 1084.32,768.71 1084.88,747.016 1085.44,759.993 1086,754.809 1086.56,751.524 1087.12,731.609 1087.67,729.974 1088.23,742.423 1088.79,755.839 1089.35,798.314 1089.91,779.979 1090.47,756.72 1091.03,754.116 1091.59,753.144 1092.15,764.828 1092.71,729.481 1093.27,695.719 1093.83,678.044 1094.39,693.744 1094.94,627.814 1095.5,616.797 1096.06,574.536 1096.62,581.192 1097.18,585.175 1097.74,590.399 1098.3,583.035 1098.86,586.851 1099.42,575.527 1099.98,581.435 1100.54,603.775 1101.1,607.992 1101.66,577.683 1102.22,582.982 1102.77,567.812 1103.33,574.725 1103.89,647.58 1104.45,636.167 1105.01,623.319 1105.57,624.199 1106.13,641.01 1106.69,657.004 1107.25,658.586 1107.81,660.546 1108.37,644.425 1108.93,617.083 1109.49,605.186 1110.04,625.784 1110.6,629.374 1111.16,646.809 1111.72,665.554 1112.28,634.794 1112.84,648.335 1113.4,669.449 1113.96,657.668 1114.52,661.964 1115.08,664.449 1115.64,632.676 1116.2,637.433 1116.76,642.162 1117.31,661.565 1117.87,649.577 1118.43,670.495 1118.99,675.415 1119.55,660.776 1120.11,659.69 1120.67,660.237 1121.23,675.403 1121.79,664.71 1122.35,649.378 1122.91,665.332 1123.47,650.812 1124.03,652.325 1124.59,638.834 1125.14,627.826 1125.7,615.4 1126.26,637.133 1126.82,639.286 1127.38,614.626 1127.94,621.126 1128.5,627.274 1129.06,632.346 1129.62,652.109 1130.18,671.567 1130.74,657.521 1131.3,641.016 1131.86,655.247 1132.41,658.143 1132.97,659.211 1133.53,611.808 1134.09,637.649 1134.65,642.318 1135.21,649.725 1135.77,697.503 1136.33,695.457 1136.89,714.074 1137.45,711.551 1138.01,758.624 1138.57,754.424 1139.13,738.712 1139.68,718.883 1140.24,699.365 1140.8,702.993 1141.36,688.329 1141.92,724.333 1142.48,705.625 1143.04,721.112 1143.6,685.524 1144.16,671.338 1144.72,640.414 1145.28,629.382 1145.84,648.894 1146.4,636.496 1146.96,609.729 1147.51,601.651 1148.07,620.791 1148.63,608.477 1149.19,627.975 1149.75,662.539 1150.31,664.212 1150.87,653.125 1151.43,636.99 1151.99,652.697 1152.55,655.902 1153.11,674.089 1153.67,679.219 1154.23,647.754 1154.78,631.779 1155.34,668.998 1155.9,637.411 1156.46,669.755 1157.02,686.756 1157.58,702.469 1158.14,686.5 1158.7,718.263 1159.26,732.229 1159.82,699.073 1160.38,685.994 1160.94,668.735 1161.5,665.651 1162.05,686.009 1162.61,671.665 1163.17,689.376 1163.73,689.849 1164.29,688.582 1164.85,704.468 1165.41,734.75 1165.97,716.316 1166.53,746.559 1167.09,713.865 1167.65,709.298 1168.21,688.871 1168.77,672.998 1169.33,672.883 1169.88,657.223 1170.44,707.676 1171,721.733 1171.56,704.47 1172.12,702.615 1172.68,699.437 1173.24,713.374 1173.8,678.42 1174.36,698.019 1174.92,699.571 1175.48,696.845 1176.04,695.026 1176.6,709.332 1177.15,708.107 1177.71,705.434 1178.27,670.707 1178.83,643.799 1179.39,651.812 1179.95,657.476 1180.51,644.015 1181.07,646.586 1181.63,618.938 1182.19,622.072 1182.75,640.717 1183.31,661.152 1183.87,694.799 1184.43,731.129 1184.98,742.543 1185.54,739.274 1186.1,753.158 1186.66,799.979 1187.22,824.38 1187.78,804.856 1188.34,891.828 1188.9,881.489 1189.46,840.378 1190.02,829.109 1190.58,820.153 1191.14,827.272 1191.7,801.51 1192.25,810.728 1192.81,804.528 1193.37,780.897 1193.93,777.948 1194.49,723.13 1195.05,723.521 1195.61,688.517 1196.17,703.185 1196.73,720.262 1197.29,766.781 1197.85,778.118 1198.41,789.029 1198.97,764.577 1199.52,696.792 1200.08,710.788 1200.64,690.349 1201.2,690.31 1201.76,655.098 1202.32,657.837 1202.88,628.032 1203.44,598.032 1204,617.551 1204.56,652.681 1205.12,652.64 1205.68,652.792 1206.24,669.78 1206.8,688.35 1207.35,673.13 1207.91,624.296 1208.47,611.027 1209.03,630.642 1209.59,619.727 1210.15,640.589 1210.71,705.883 1211.27,718.586 1211.83,717.163 1212.39,699.427 1212.95,681.274 1213.51,713.187 1214.07,728.584 1214.62,693.653 1215.18,710.376 1215.74,720.302 1216.3,731.965 1216.86,743.529 1217.42,692.697 1217.98,659.511 1218.54,676.628 1219.1,675.99 1219.66,658.707 1220.22,659.495 1220.78,679.207 1221.34,664.585 1221.89,668.971 1222.45,699.933 1223.01,698.238 1223.57,697.37 1224.13,679.739 1224.69,694.264 1225.25,674.276 1225.81,675.849 1226.37,662.824 1226.93,660.904 1227.49,676.743 1228.05,659.31 1228.61,672.221 1229.17,673.756 1229.72,669.944 1230.28,689.092 1230.84,687.924 1231.4,688.369 1231.96,703.414 1232.52,700.743 1233.08,731.982 1233.64,757.589 1234.2,738.297 1234.76,782.161 1235.32,776.055 1235.88,789.201 1236.44,799.981 1236.99,795.741 1237.55,788.366 1238.11,814.988 1238.67,833.625 1239.23,845.378 1239.79,788.18 1240.35,765.454 1240.91,775.412 1241.47,738.588 1242.03,751.758 1242.59,731.181 1243.15,746.085 1243.71,744.268 1244.26,758.712 1244.82,753.938 1245.38,734.528 1245.94,732.376 1246.5,728.649 1247.06,690.659 1247.62,653.458 1248.18,639.635 1248.74,626.074 1249.3,658.877 1249.86,693.709 1250.42,675.043 1250.98,692.803 1251.54,694.41 1252.09,693.682 1252.65,679.462 1253.21,681.38 1253.77,633.532 1254.33,652.386 1254.89,623.21 1255.45,625.066 1256.01,643.127 1256.57,695.874 1257.13,695.087 1257.69,663.996 1258.25,663.025 1258.81,647.907 1259.36,644.75 1259.92,660.324 1260.48,694.453 1261.04,647.24 1261.6,667.408 1262.16,670.038 1262.72,672.055 1263.28,685.114 1263.84,687.827 1264.4,673.107 1264.96,690.534 1265.52,693.072 1266.08,739.978 1266.63,737.961 1267.19,736.321 1267.75,717.955 1268.31,717.828 1268.87,713.62 1269.43,711.232 1269.99,725.688 1270.55,689.723 1271.11,687.934 1271.67,667.683 1272.23,636.799 1272.79,643.035 1273.35,643.064 1273.91,629.676 1274.46,615.565 1275.02,603.833 1275.58,644.402 1276.14,662.995 1276.7,676.918 1277.26,677.202 1277.82,644.549 1278.38,645.384 1278.94,683.509 1279.5,711.775 1280.06,714.085 1280.62,711.846 1281.18,757.849 1281.73,739.55 1282.29,734.128 1282.85,730.961 1283.41,713.298 1283.97,646.599 1284.53,648.779 1285.09,618.251 1285.65,619.268 1286.21,621.287 1286.77,576.411 1287.33,600.93 1287.89,588.817 1288.45,604.716 1289,576.073 1289.56,563.627 1290.12,603.798 1290.68,641.179 1291.24,674.995 1291.8,691.411 1292.36,691.132 1292.92,662.073 1293.48,647.179 1294.04,633.638 1294.6,657.205 1295.16,645.986 1295.72,615.929 1296.28,622.124 1296.83,628.994 1297.39,648.78 1297.95,668.281 1298.51,668.784 1299.07,620.768 1299.63,571.368 1300.19,561.925 1300.75,586.374 1301.31,637.352 1301.87,622.894 1302.43,638.849 1302.99,657.362 1303.55,624.786 1304.1,630.186 1304.66,651.453 1305.22,651.458 1305.78,620.263 1306.34,573.653 1306.9,612.601 1307.46,651.81 1308.02,651.282 1308.58,651.627 1309.14,655.292 1309.7,691.853 1310.26,689.336 1310.82,610.569 1311.38,596.577 1311.93,601.948 1312.49,606.239 1313.05,626.761 1313.61,629.812 1314.17,632.67 1314.73,652.6 1315.29,656.664 1315.85,674.353 1316.41,676.588 1316.97,676.049 1317.53,658.303 1318.09,658.352 1318.65,657.787 1319.2,677.257 1319.76,679.503 1320.32,662.8 1320.88,651.25 1321.44,655.118 1322,657.82 1322.56,677.726 1323.12,676.998 1323.68,662.296 1324.24,660.862 1324.8,678.348 1325.36,644.991 1325.92,646.215 1326.47,616.034 1327.03,638.898 1327.59,628.311 1328.15,630.727 1328.71,650.737 1329.27,638.192 1329.83,624.036 1330.39,626.545 1330.95,613.72 1331.51,649.211 1332.07,647.849 1332.63,616.1 1333.19,636.767 1333.75,673.248 1334.3,674.107 1334.86,659.564 1335.42,691.908 1335.98,690.005 1336.54,687.209 1337.1,703.38 1337.66,714.234 1338.22,714.166 1338.78,681.293 1339.34,697.544 1339.9,696.206 1340.46,692.703 1341.02,710.287 1341.57,675.541 1342.13,642.816 1342.69,641.893 1343.25,644.19 1343.81,646.755 1344.37,683.87 1344.93,653.87 1345.49,657.439 1346.05,642.479 1346.61,643.63 1347.17,679.732 1347.73,664.913 1348.29,648.854 1348.84,635.745 1349.4,621.555 1349.96,641.461 1350.52,626.893 1351.08,628.919 1351.64,632.515 1352.2,654.063 1352.76,659.854 1353.32,659.951 1353.88,665.188 1354.44,680.002 1355,728.918 1355.56,730.074 1356.12,711.7 1356.67,742.102 1357.23,772.263 1357.79,783.62 1358.35,776.425 1358.91,773.408 1359.47,750.654 1360.03,765.007 1360.59,762.975 1361.15,778.106 1361.71,804.428 1362.27,784.319 1362.83,795.105 1363.39,808.108 1363.94,816.661 1364.5,793.695 1365.06,804.065 1365.62,782.469 1366.18,793.28 1366.74,790.718 1367.3,785.322 1367.86,732.822 1368.42,717.901 1368.98,698.78 1369.54,712.454 1370.1,694.289 1370.66,677.703 1371.21,676.004 1371.77,665.747 1372.33,683.822 1372.89,667.928 1373.45,667.886 1374.01,686.035 1374.57,666.005 1375.13,664.367 1375.69,651.861 1376.25,657.054 1376.81,643.839 1377.37,649.566 1377.93,652.942 1378.49,635.364 1379.04,656.54 1379.6,607.243 1380.16,610.534 1380.72,599.76 1381.28,604.043 1381.84,623.879 1382.4,613.431 1382.96,601.549 1383.52,601.562 1384.08,653.911 1384.64,654.946 1385.2,622.732 1385.76,628.814 1386.31,630.981 1386.87,598.83 1387.43,586.105 1387.99,560.896 1388.55,546.796 1389.11,570.748 1389.67,572.898 1390.23,561.414 1390.79,599.424 1391.35,601.535 1391.91,610.42 1392.47,589.16 1393.03,593.464 1393.58,616.282 1394.14,602.469 1394.7,621.668 1395.26,626.218 1395.82,614.941 1396.38,618.02 1396.94,654.017 1397.5,691.022 1398.06,687.177 1398.62,702.582 1399.18,730.39 1399.74,707.927 1400.3,753.971 1400.86,748.293 1401.41,713.075 1401.97,694.091 1402.53,692.872 1403.09,724.34 1403.65,738.33 1404.21,756.472 1404.77,717.765 1405.33,682.096 1405.89,681.257 1406.45,698.554 1407.01,698.06 1407.57,698.91 1408.13,651.253 1408.68,654.088 1409.24,671.478 1409.8,675.957 1410.36,657.695 1410.92,674.854 1411.48,692.969 1412.04,693.112 1412.6,677.283 1413.16,677.048 1413.72,675.252 1414.28,628.395 1414.84,648.164 1415.4,666.005 1415.95,646.675 1416.51,630.659 1417.07,652.002 1417.63,672.496 1418.19,656.258 1418.75,624.396 1419.31,644.663 1419.87,662.268 1420.43,683.16 1420.99,699.552 1421.55,733.231 1422.11,745.814 1422.67,757.567 1423.23,771.593 1423.78,784.268 1424.34,743.437 1424.9,737.604 1425.46,763.947 1426.02,762.893 1426.58,744.667 1427.14,753.208 1427.7,733.06 1428.26,728.573 1428.82,728.333 1429.38,741.093 1429.94,706.94 1430.5,721.233 1431.05,716.216 1431.61,699.105 1432.17,713.117 1432.73,697.144 1433.29,712.131 1433.85,709.437 1434.41,706.759 1434.97,706.937 1435.53,701.555 1436.09,667.576 1436.65,668.183 1437.21,670.062 1437.77,713.966 1438.33,708.74 1438.88,707.911 1439.44,755.483 1440,733.475 1440.56,734.593 1441.12,750.735 1441.68,734.602 1442.24,746.121 1442.8,756.781 1443.36,752.047 1443.92,748.996 1444.48,712.427 1445.04,679.051 1445.6,726.988 1446.15,751.526 1446.71,701.048 1447.27,678.945 1447.83,710.967 1448.39,773.15 1448.95,704.328 1449.51,717.386 1450.07,732.064 1450.63,731.604 1451.19,728.906 1451.75,726.676 1452.31,708.104 1452.87,707.784 1453.42,707.952 1453.98,673.357 1454.54,678.071 1455.1,679.323 1455.66,664.591 1456.22,680.17 1456.78,679.124 1457.34,677.708 1457.9,690.978 1458.46,688.389 1459.02,687.911 1459.58,702.049 1460.14,715.491 1460.7,745.981 1461.25,746.669 1461.81,730.586 1462.37,725.671 1462.93,723.819 1463.49,736.652 1464.05,735.825 1464.61,777.717 1465.17,756.999 1465.73,735.592 1466.29,733.339 1466.85,748.259 1467.41,758.591 1467.97,752.294 1468.52,763.844 1469.08,726.517 1469.64,706.03 1470.2,691.654 1470.76,704.225 1471.32,718.405 1471.88,715.607 1472.44,682.553 1473,668.699 1473.56,683.891 1474.12,666.543 1474.68,683.767 1475.24,670.303 1475.79,689.141 1476.35,674.49 1476.91,656.213 1477.47,643.388 1478.03,628.908 1478.59,662.657 1479.15,646.99 1479.71,631.003 1480.27,618.504 1480.83,617.865 1481.39,602.425 1481.95,606.688 1482.51,608.66 1483.07,610.848 1483.62,612.623 1484.18,583.715 1484.74,586.364 1485.3,625.318 1485.86,611.173 1486.42,601.339 1486.98,620.377 1487.54,621.637 1488.1,626.224 1488.66,626.501 1489.22,665.425 1489.78,669.084 1490.34,673.517 1490.89,674.87 1491.45,678.868 1492.01,690.95 1492.57,674.86 1493.13,690.702 1493.69,688.306 1494.25,656.241 1494.81,639.228 1495.37,624.502 1495.93,612.321 1496.49,647.911 1497.05,635.018 1497.61,655.925 1498.16,690.915 1498.72,726.441 1499.28,709.911 1499.84,726.942 1500.4,692.398 1500.96,707.688 1501.52,674.503 1502.08,642.194 1502.64,613.259 1503.2,617.757 1503.76,591.474 1504.32,579.504 1504.88,601.132 1505.44,556.723 1505.99,581.865 1506.55,590.198 1507.11,610.428 1507.67,612.647 1508.23,633.175 1508.79,639.952 1509.35,693.622 1509.91,693.882 1510.47,707.809 1511.03,676.036 1511.59,666.98 1512.15,651.247 1512.71,654.957 1513.26,674.083 1513.82,673.817 1514.38,676.153 1514.94,668.598 1515.5,704.521 1516.06,656.257 1516.62,641.749 1517.18,647.646 1517.74,649.292 1518.3,637.621 1518.86,637.907 1519.42,659.692 1519.98,664.671 1520.53,650.827 1521.09,653.014 1521.65,639.987 1522.21,643.023 1522.77,597.767 1523.33,616.376 1523.89,637.41 1524.45,627.711 1525.01,632.28 1525.57,634.026 1526.13,618.269 1526.69,655.411 1527.25,654.982 1527.81,672.839 1528.36,716.804 1528.92,711.912 1529.48,725.643 1530.04,722.378 1530.6,687.097 1531.16,702.49 1531.72,718.084 1532.28,715.684 1532.84,696.52 1533.4,696.826 1533.96,697.457 1534.52,724.277 1535.08,725.436 1535.63,705.723 1536.19,689.957 1536.75,718.792 1537.31,751.604 1537.87,795.866 1538.43,773.689 1538.99,753.693 1539.55,749.222 1540.11,746.681 1540.67,707.376 1541.23,689.771 1541.79,704.417 1542.35,704.094 1542.9,706.064 1543.46,685.87 1544.02,668.987 1544.58,684.261 1545.14,666.207 1545.7,684.685 1546.26,703.78 1546.82,717.378 1547.38,731.94 1547.94,728.362 1548.5,737.444 1549.06,748.368 1549.62,727.537 1550.18,737.045 1550.73,718.224 1551.29,698.753 1551.85,697.142 1552.41,711.069 1552.97,741.056 1553.53,736.591 1554.09,750.106 1554.65,744.724 1555.21,739.186 1555.77,738.707 1556.33,736.885 1556.89,734.398 1557.45,761.795 1558,709.636 1558.56,691.734 1559.12,709.67 1559.68,742.651 1560.24,757.312 1560.8,753.594 1561.36,734.743 1561.92,712.532 1562.48,726.357 1563.04,707.003 1563.6,705.506 1564.16,687.035 1564.72,687.946 1565.28,687.227 1565.83,703.403 1566.39,721.056 1566.95,734.553 1567.51,699.84 1568.07,697.505 1568.63,693.218 1569.19,674.063 1569.75,673.569 1570.31,674.638 1570.87,688.539 1571.43,703.861 1571.99,703.178 1572.55,704.051 1573.1,687.446 1573.66,702.683 1574.22,716.035 1574.78,728.701 1575.34,725.49 1575.9,721.009 1576.46,699.915 1577.02,715.443 1577.58,709.86 1578.14,706.296 1578.7,720.303 1579.26,686.14 1579.82,701.674 1580.37,719.156 1580.93,702.61 1581.49,704.764 1582.05,749.496 1582.61,697.747 1583.17,717.617 1583.73,666.333 1584.29,701.122 1584.85,683.005 1585.41,702.63 1585.97,688.371 1586.53,741.172 1587.09,754.453 1587.65,749.542 1588.2,726.121 1588.76,738.789 1589.32,703.449 1589.88,668.27 1590.44,686.997 1591,669.357 1591.56,669.316 1592.12,702.222 1592.68,699.249 1593.24,727.302 1593.8,722.34 1594.36,690.043 1594.92,653.899 1595.47,683.173 1596.03,717.152 1596.59,699.753 1597.15,665.639 1597.71,635.27 1598.27,619.735 1598.83,608.453 1599.39,611.931 1599.95,635.403 1600.51,652.011 1601.07,653.633 1601.63,684.492 1602.19,664.342 1602.74,683.762 1603.3,700.466 1603.86,699.579 1604.42,684.329 1604.98,668.947 1605.54,685.355 1606.1,699.014 1606.66,698.875 1607.22,679.736 1607.78,698.049 1608.34,732.702 1608.9,727.582 1609.46,742.108 1610.02,771.209 1610.57,748.302 1611.13,731.707 1611.69,758.068 1612.25,739.149 1612.81,736.443 1613.37,751.433 1613.93,779.002 1614.49,772.082 1615.05,785.044 1615.61,765.53 1616.17,743.551 1616.73,725.824 1617.29,753.84 1617.84,749.224 1618.4,743.47 1618.96,741.051 1619.52,687.821 1620.08,667.379 1620.64,636.014 1621.2,671.832 1621.76,688.725 1622.32,719.579 1622.88,735.8 1623.44,703.013 1624,686.478 1624.56,734.74 1625.11,763.857 1625.67,747.271 1626.23,745.305 1626.79,715.383 1627.35,699.203 1627.91,728.412 1628.47,676.59 1629.03,643.728 1629.59,613.78 1630.15,598.46 1630.71,622.578 1631.27,677.264 1631.83,662.992 1632.39,714.44 1632.94,698.636 1633.5,698.186 1634.06,711.22 1634.62,713.676 1635.18,698.44 1635.74,676.872 1636.3,658.772 1636.86,693.798 1637.42,677.197 1637.98,677.681 1638.54,694.707 1639.1,709.586 1639.66,737.16 1640.21,717.574 1640.77,705.002 1641.33,751.39 1641.89,732.685 1642.45,730.966 1643.01,731.251 1643.57,730.469 1644.13,711.564 1644.69,726.382 1645.25,724.814 1645.81,688.75 1646.37,669.818 1646.93,669.577 1647.48,673.218 1648.04,640.7 1648.6,645.552 1649.16,664.133 1649.72,681.285 1650.28,680.835 1650.84,698.4 1651.4,700.994 1651.96,716.107 1652.52,697.942 1653.08,683.046 1653.64,699.223 1654.2,695.139 1654.76,727.499 1655.31,741.448 1655.87,723.988 1656.43,738.024 1656.99,751.096 1657.55,760.085 1658.11,755.495 1658.67,733.255 1659.23,727.048 1659.79,725.877 1660.35,704.665 1660.91,684.844 1661.47,717.411 1662.03,703.577 1662.58,670.495 1663.14,620.533 1663.7,659.37 1664.26,645.035 1664.82,648.542 1665.38,633.459 1665.94,635.494 1666.5,622.362 1667.06,626.65 1667.62,615.69 1668.18,634.575 1668.74,622.648 1669.3,577.772 1669.85,569.454 1670.41,610.668 1670.97,617.475 1671.53,623.59 1672.09,574.974 1672.65,567.19 1673.21,572.319 1673.77,561.74 1674.33,571.752 1674.89,612.903 1675.45,618.323 1676.01,620.929 1676.57,605.048 1677.13,595.316 1677.68,600.898 1678.24,573.277 1678.8,594.166 1679.36,597.146 1679.92,601.709 1680.48,620.557 1681.04,610.623 1681.6,616.743 1682.16,635.879 1682.72,607.723 1683.28,593.758 1683.84,595.72 1684.4,632.758 1684.95,636.71 1685.51,636.591 1686.07,669.665 1686.63,656.916 1687.19,693.64 1687.75,677.624 1688.31,658.068 1688.87,610.8 1689.43,630.574 1689.99,647.773 1690.55,650.304 1691.11,635.3 1691.67,652.246 1692.23,655.029 1692.78,687.227 1693.34,709.133 1693.9,673.855 1694.46,708.955 1695.02,724.827 1695.58,703.77 1696.14,688.936 1696.7,721.507 1697.26,718.468 1697.82,715.836 1698.38,731.621 1698.94,779.734 1699.5,776.586 1700.05,771.445 1700.61,767.248 1701.17,794.383 1701.73,803.411 1702.29,831.127 1702.85,809.903 1703.41,802.85 1703.97,780.092 1704.53,759.609 1705.09,742.12 1705.65,768.346 1706.21,795.959 1706.77,773.648 1707.32,769.09 1707.88,767.329 1708.44,777.245 1709,785.38 1709.56,778.414 1710.12,741.816 1710.68,706.041 1711.24,706.193 1711.8,638.764 1712.36,611.211 1712.92,613.957 1713.48,619.149 1714.04,624.92 1714.6,644.918 1715.15,675.338 1715.71,675.739 1716.27,696.191 1716.83,714.724 1717.39,663.78 1717.95,694.866 1718.51,679.406 1719.07,680.464 1719.63,696.229 1720.19,693.847 1720.75,710.194 1721.31,707.554 1721.87,705.367 1722.42,669.624 1722.98,653.794 1723.54,672.716 1724.1,658.976 1724.66,659.268 1725.22,662.99 1725.78,663.598 1726.34,696.077 1726.9,695.357 1727.46,699.802 1728.02,731.187 1728.58,744.426 1729.14,758.905 1729.69,751.829 1730.25,748.935 1730.81,777.639 1731.37,773.366 1731.93,754.505 1732.49,733.898 1733.05,749.841 1733.61,797.069 1734.17,741.959 1734.73,739.417 1735.29,732.57 1735.85,747.159 1736.41,708.017 1736.97,702.522 1737.52,699.073 1738.08,681.123 1738.64,698.624 1739.2,715.11 1739.76,728.467 1740.32,708.059 1740.88,723.469 1741.44,688.543 1742,703.877 1742.56,687.216 1743.12,686.172 1743.68,701.601 1744.24,681.406 1744.79,698.738 1745.35,717.257 1745.91,715.437 1746.47,694.554 1747.03,738.74 1747.59,718.139 1748.15,702.16 1748.71,701.251 1749.27,700.381 1749.83,697.592 1750.39,697.625 1750.95,697.529 1751.51,680.538 1752.06,663.003 1752.62,663.82 1753.18,679.563 1753.74,693.51 1754.3,676.86 1754.86,726.302 1755.42,708.806 1755.98,723.677 1756.54,707.05 1757.1,735.601 1757.66,749.083 1758.22,778.43 1758.78,774.895 1759.34,766.935 1759.89,757.776 1760.45,723.121 1761.01,766.298 1761.57,761.6 1762.13,725.716 1762.69,740.524 1763.25,741.168 1763.81,734.965 1764.37,699.149 1764.93,680.847 1765.49,630.879 1766.05,605.482 1766.61,640.788 1767.16,628.175 1767.72,631.118 1768.28,631.788 1768.84,603.048 1769.4,603.243 1769.96,604.903 1770.52,560.312 1771.08,583.752 1771.64,588.926 1772.2,594.189 1772.76,565.753 1773.32,589.025 1773.88,579.277 1774.43,601.599 1774.99,587.852 1775.55,578.738 1776.11,599.175 1776.67,604.163 1777.23,610.951 1777.79,629.393 1778.35,585.263 1778.91,626.702 1779.47,649.232 1780.03,668.873 1780.59,670.75 1781.15,673.35 1781.71,724.091 1782.26,740.418 1782.82,752.912 1783.38,736.164 1783.94,765.052 1784.5,741.212 1785.06,739.331 1785.62,739.398 1786.18,736.066 1786.74,765.615 1787.3,764.069 1787.86,760.489 1788.42,755.321 1788.98,720.539 1789.53,732.415 1790.09,750.789 1790.65,748.305 1791.21,760.555 1791.77,833.56 1792.33,809.464 1792.89,803.52 1793.45,798.389 1794.01,773.651 1794.57,785.91 1795.13,766.38 1795.69,714.788 1796.25,743.287 1796.8,750.074 1797.36,696.089 1797.92,707.73 1798.48,611.793 1799.04,567.261 1799.6,571.336 1800.16,580.429 1800.72,570.509 1801.28,591.377 1801.84,595.708 1802.4,584.853 1802.96,599.805 1803.52,604.267 1804.08,639.002 1804.63,638.457 1805.19,592.457 1805.75,614.957 1806.31,603.229 1806.87,542.568 1807.43,531.892 1807.99,511.322 1808.55,503.674 1809.11,514.083 1809.67,505.059 1810.23,531.222 1810.79,520.362 1811.35,495.676 1811.9,507.202 1812.46,533.696 1813.02,542.007 1813.58,547.916 1814.14,556.466 1814.7,529.078 1815.26,554.962 1815.82,594.722 1816.38,571.965 1816.94,580.083 1817.5,584.613 1818.06,604.362 1818.62,595.104 1819.18,584.694 1819.73,575.84 1820.29,545.039 1820.85,533.983 1821.41,574.962 1821.97,580.712 1822.53,571.314 1823.09,562.73 1823.65,588.153 1824.21,609.602 1824.77,616.019 1825.33,619.848 1825.89,655.067 1826.45,660.958 1827,664.603 1827.56,666.657 1828.12,684.79 1828.68,682.458 1829.24,731.446 1829.8,748.181 1830.36,715.018 1830.92,695.504 1831.48,713.14 1832.04,725.069 1832.6,740.224 1833.16,724.027 1833.72,723.656 1834.27,751.813 1834.83,736.932 1835.39,697.685 1835.95,679.65 1836.51,698.058 1837.07,698.183 1837.63,694.526 1838.19,695.008 \"/>\n<path clip-path=\"url(#clip593)\" d=\"M720.247 689.802 L720.806 689.802 L721.365 689.802 L721.924 689.802 L722.484 689.802 L723.043 689.802 L723.602 689.802 L724.161 689.802 L724.721 689.802 L725.28 689.802 L725.839 689.802 L726.398 689.802 L726.958 689.802 L727.517 689.802 L728.076 689.802 L728.635 689.802 L729.195 689.802 L729.754 689.802 L730.313 689.802 L730.872 689.802 L731.432 689.802 L731.991 689.802 L732.55 689.802 L733.109 689.802 L733.669 689.802 L734.228 689.802 L734.787 689.802 L735.346 689.802 L735.906 689.802 L736.465 689.802 L737.024 689.802 L737.583 689.802 L738.143 689.802 L738.702 689.802 L739.261 689.802 L739.82 689.802 L740.38 689.802 L740.939 689.802 L741.498 689.802 L742.057 689.802 L742.617 689.802 L743.176 689.802 L743.735 689.802 L744.294 689.802 L744.854 689.802 L745.413 689.802 L745.972 689.802 L746.531 689.802 L747.091 689.802 L747.65 689.802 L748.209 689.802 L748.768 689.802 L749.328 689.802 L749.887 689.802 L750.446 689.802 L751.005 689.802 L751.565 689.802 L752.124 689.802 L752.683 689.802 L753.242 689.802 L753.802 689.802 L754.361 689.802 L754.92 689.802 L755.479 689.802 L756.039 689.802 L756.598 689.802 L757.157 689.802 L757.716 689.802 L758.276 689.802 L758.835 689.802 L759.394 689.802 L759.953 689.802 L760.513 689.802 L761.072 689.802 L761.631 689.802 L762.19 689.802 L762.75 689.802 L763.309 689.802 L763.868 689.802 L764.427 689.802 L764.987 689.802 L765.546 689.802 L766.105 689.802 L766.664 689.802 L767.224 689.802 L767.783 689.802 L768.342 689.802 L768.901 689.802 L769.461 689.802 L770.02 689.802 L770.579 689.802 L771.138 689.802 L771.698 689.802 L772.257 689.802 L772.816 689.802 L773.375 689.802 L773.935 689.802 L774.494 689.802 L775.053 689.802 L775.612 689.802 L776.172 689.802 L776.731 689.802 L777.29 689.802 L777.849 689.802 L778.409 689.802 L778.968 689.802 L779.527 689.802 L780.086 689.802 L780.646 689.802 L781.205 689.802 L781.764 689.802 L782.323 689.802 L782.883 689.802 L783.442 689.802 L784.001 689.802 L784.56 689.802 L785.12 689.802 L785.679 689.802 L786.238 689.802 L786.797 689.802 L787.357 689.802 L787.916 689.802 L788.475 689.802 L789.034 689.802 L789.594 689.802 L790.153 689.802 L790.712 689.802 L791.271 689.802 L791.831 689.802 L792.39 689.802 L792.949 689.802 L793.508 689.802 L794.068 689.802 L794.627 689.802 L795.186 689.802 L795.745 689.802 L796.305 689.802 L796.864 689.802 L797.423 689.802 L797.982 689.802 L798.542 689.802 L799.101 689.802 L799.66 689.802 L800.219 689.802 L800.779 689.802 L801.338 689.802 L801.897 689.802 L802.456 689.802 L803.016 689.802 L803.575 689.802 L804.134 689.802 L804.693 689.802 L805.253 689.802 L805.812 689.802 L806.371 689.802 L806.931 689.802 L807.49 689.802 L808.049 689.802 L808.608 689.802 L809.168 689.802 L809.727 689.802 L810.286 689.802 L810.845 689.802 L811.405 689.802 L811.964 689.802 L812.523 689.802 L813.082 689.802 L813.642 689.802 L814.201 689.802 L814.76 689.802 L815.319 689.802 L815.879 689.802 L816.438 689.802 L816.997 689.802 L817.556 689.802 L818.116 689.802 L818.675 689.802 L819.234 689.802 L819.793 689.802 L820.353 689.802 L820.912 689.802 L821.471 689.802 L822.03 689.802 L822.59 689.802 L823.149 689.802 L823.708 689.802 L824.267 689.802 L824.827 689.802 L825.386 689.802 L825.945 689.802 L826.504 689.802 L827.064 689.802 L827.623 689.802 L828.182 689.802 L828.741 689.802 L829.301 689.802 L829.86 689.802 L830.419 689.802 L830.978 689.802 L831.538 689.802 L832.097 689.802 L832.656 689.802 L833.215 689.802 L833.775 689.802 L834.334 689.802 L834.893 689.802 L835.452 689.802 L836.012 689.802 L836.571 689.802 L837.13 689.802 L837.689 689.802 L838.249 689.802 L838.808 689.802 L839.367 689.802 L839.926 689.802 L840.486 689.802 L841.045 689.802 L841.604 689.802 L842.163 689.802 L842.723 689.802 L843.282 689.802 L843.841 689.802 L844.4 689.802 L844.96 689.802 L845.519 689.802 L846.078 689.802 L846.637 689.802 L847.197 689.802 L847.756 689.802 L848.315 689.802 L848.874 689.802 L849.434 689.802 L849.993 689.802 L850.552 689.802 L851.111 689.802 L851.671 689.802 L852.23 689.802 L852.789 689.802 L853.348 689.802 L853.908 689.802 L854.467 689.802 L855.026 689.802 L855.585 689.802 L856.145 689.802 L856.704 689.802 L857.263 689.802 L857.822 689.802 L858.382 689.802 L858.941 689.802 L859.5 689.802 L860.059 689.802 L860.619 689.802 L861.178 689.802 L861.737 689.802 L862.296 689.802 L862.856 689.802 L863.415 689.802 L863.974 689.802 L864.533 689.802 L865.093 689.802 L865.652 689.802 L866.211 689.802 L866.77 689.802 L867.33 689.802 L867.889 689.802 L868.448 689.802 L869.007 689.802 L869.567 689.802 L870.126 689.802 L870.685 689.802 L871.244 689.802 L871.804 689.802 L872.363 689.802 L872.922 689.802 L873.481 689.802 L874.041 689.802 L874.6 689.802 L875.159 689.802 L875.718 689.802 L876.278 689.802 L876.837 689.802 L877.396 689.802 L877.955 689.802 L878.515 689.802 L879.074 689.802 L879.633 689.802 L880.192 689.802 L880.752 689.802 L881.311 689.802 L881.87 689.802 L882.429 689.802 L882.989 689.802 L883.548 689.802 L884.107 689.802 L884.666 689.802 L885.226 689.802 L885.785 689.802 L886.344 689.802 L886.903 689.802 L887.463 689.802 L888.022 689.802 L888.581 689.802 L889.14 689.802 L889.7 689.802 L890.259 689.802 L890.818 689.802 L891.377 689.802 L891.937 689.802 L892.496 689.802 L893.055 689.802 L893.614 689.802 L894.174 689.802 L894.733 689.802 L895.292 689.802 L895.851 689.802 L896.411 689.802 L896.97 689.802 L897.529 689.802 L898.088 689.802 L898.648 689.802 L899.207 689.802 L899.766 689.802 L900.325 689.802 L900.885 689.802 L901.444 689.802 L902.003 689.802 L902.562 689.802 L903.122 689.802 L903.681 689.802 L904.24 689.802 L904.799 689.802 L905.359 689.802 L905.918 689.802 L906.477 689.802 L907.036 689.802 L907.596 689.802 L908.155 689.802 L908.714 689.802 L909.273 689.802 L909.833 689.802 L910.392 689.802 L910.951 689.802 L911.51 689.802 L912.07 689.802 L912.629 689.802 L913.188 689.802 L913.747 689.802 L914.307 689.802 L914.866 689.802 L915.425 689.802 L915.984 689.802 L916.544 689.802 L917.103 689.802 L917.662 689.802 L918.221 689.802 L918.781 689.802 L919.34 689.802 L919.899 689.802 L920.458 689.802 L921.018 689.802 L921.577 689.802 L922.136 689.802 L922.695 689.802 L923.255 689.802 L923.814 689.802 L924.373 689.802 L924.932 689.802 L925.492 689.802 L926.051 689.802 L926.61 689.802 L927.169 689.802 L927.729 689.802 L928.288 689.802 L928.847 689.802 L929.406 689.802 L929.966 689.802 L930.525 689.802 L931.084 689.802 L931.644 689.802 L932.203 689.802 L932.762 689.802 L933.321 689.802 L933.881 689.802 L934.44 689.802 L934.999 689.802 L935.558 689.802 L936.118 689.802 L936.677 689.802 L937.236 689.802 L937.795 689.802 L938.355 689.802 L938.914 689.802 L939.473 689.802 L940.032 689.802 L940.592 689.802 L941.151 689.802 L941.71 689.802 L942.269 689.802 L942.829 689.802 L943.388 689.802 L943.947 689.802 L944.506 689.802 L945.066 689.802 L945.625 689.802 L946.184 689.802 L946.743 689.802 L947.303 689.802 L947.862 689.802 L948.421 689.802 L948.98 689.802 L949.54 689.802 L950.099 689.802 L950.658 689.802 L951.217 689.802 L951.777 689.802 L952.336 689.802 L952.895 689.802 L953.454 689.802 L954.014 689.802 L954.573 689.802 L955.132 689.802 L955.691 689.802 L956.251 689.802 L956.81 689.802 L957.369 689.802 L957.928 689.802 L958.488 689.802 L959.047 689.802 L959.606 689.802 L960.165 689.802 L960.725 689.802 L961.284 689.802 L961.843 689.802 L962.402 689.802 L962.962 689.802 L963.521 689.802 L964.08 689.802 L964.639 689.802 L965.199 689.802 L965.758 689.802 L966.317 689.802 L966.876 689.802 L967.436 689.802 L967.995 689.802 L968.554 689.802 L969.113 689.802 L969.673 689.802 L970.232 689.802 L970.791 689.802 L971.35 689.802 L971.91 689.802 L972.469 689.802 L973.028 689.802 L973.587 689.802 L974.147 689.802 L974.706 689.802 L975.265 689.802 L975.824 689.802 L976.384 689.802 L976.943 689.802 L977.502 689.802 L978.061 689.802 L978.621 689.802 L979.18 689.802 L979.739 689.802 L980.298 689.802 L980.858 689.802 L981.417 689.802 L981.976 689.802 L982.535 689.802 L983.095 689.802 L983.654 689.802 L984.213 689.802 L984.772 689.802 L985.332 689.802 L985.891 689.802 L986.45 689.802 L987.009 689.802 L987.569 689.802 L988.128 689.802 L988.687 689.802 L989.246 689.802 L989.806 689.802 L990.365 689.802 L990.924 689.802 L991.483 689.802 L992.043 689.802 L992.602 689.802 L993.161 689.802 L993.72 689.802 L994.28 689.802 L994.839 689.802 L995.398 689.802 L995.957 689.802 L996.517 689.802 L997.076 689.802 L997.635 689.802 L998.194 689.802 L998.754 689.802 L999.313 689.802 L999.872 689.802 L1000.43 689.802 L1000.99 689.802 L1001.55 689.802 L1002.11 689.802 L1002.67 689.802 L1003.23 689.802 L1003.79 689.802 L1004.35 689.802 L1004.91 689.802 L1005.46 689.802 L1006.02 689.802 L1006.58 689.802 L1007.14 689.802 L1007.7 689.802 L1008.26 689.802 L1008.82 689.802 L1009.38 689.802 L1009.94 689.802 L1010.5 689.802 L1011.06 689.802 L1011.62 689.802 L1012.18 689.802 L1012.73 689.802 L1013.29 689.802 L1013.85 689.802 L1014.41 689.802 L1014.97 689.802 L1015.53 689.802 L1016.09 689.802 L1016.65 689.802 L1017.21 689.802 L1017.77 689.802 L1018.33 689.802 L1018.89 689.802 L1019.45 689.802 L1020.01 689.802 L1020.56 689.802 L1021.12 689.802 L1021.68 689.802 L1022.24 689.802 L1022.8 689.802 L1023.36 689.802 L1023.92 689.802 L1024.48 689.802 L1025.04 689.802 L1025.6 689.802 L1026.16 689.802 L1026.72 689.802 L1027.28 689.802 L1027.83 689.802 L1028.39 689.802 L1028.95 689.802 L1029.51 689.802 L1030.07 689.802 L1030.63 689.802 L1031.19 689.802 L1031.75 689.802 L1032.31 689.802 L1032.87 689.802 L1033.43 689.802 L1033.99 689.802 L1034.55 689.802 L1035.1 689.802 L1035.66 689.802 L1036.22 689.802 L1036.78 689.802 L1037.34 689.802 L1037.9 689.802 L1038.46 689.802 L1039.02 689.802 L1039.58 689.802 L1040.14 689.802 L1040.7 689.802 L1041.26 689.802 L1041.82 689.802 L1042.38 689.802 L1042.93 689.802 L1043.49 689.802 L1044.05 689.802 L1044.61 689.802 L1045.17 689.802 L1045.73 689.802 L1046.29 689.802 L1046.85 689.802 L1047.41 689.802 L1047.97 689.802 L1048.53 689.802 L1049.09 689.802 L1049.65 689.802 L1050.2 689.802 L1050.76 689.802 L1051.32 689.802 L1051.88 689.802 L1052.44 689.802 L1053 689.802 L1053.56 689.802 L1054.12 689.802 L1054.68 689.802 L1055.24 689.802 L1055.8 689.802 L1056.36 689.802 L1056.92 689.802 L1057.48 689.802 L1058.03 689.802 L1058.59 689.802 L1059.15 689.802 L1059.71 689.802 L1060.27 689.802 L1060.83 689.802 L1061.39 689.802 L1061.95 689.802 L1062.51 689.802 L1063.07 689.802 L1063.63 689.802 L1064.19 689.802 L1064.75 689.802 L1065.3 689.802 L1065.86 689.802 L1066.42 689.802 L1066.98 689.802 L1067.54 689.802 L1068.1 689.802 L1068.66 689.802 L1069.22 689.802 L1069.78 689.802 L1070.34 689.802 L1070.9 689.802 L1071.46 689.802 L1072.02 689.802 L1072.57 689.802 L1073.13 689.802 L1073.69 689.802 L1074.25 689.802 L1074.81 689.802 L1075.37 689.802 L1075.93 689.802 L1076.49 689.802 L1077.05 689.802 L1077.61 689.802 L1078.17 689.802 L1078.73 689.802 L1079.29 689.802 L1079.85 689.802 L1080.4 689.802 L1080.96 689.802 L1081.52 689.802 L1082.08 689.802 L1082.64 689.802 L1083.2 689.802 L1083.76 689.802 L1084.32 689.802 L1084.88 689.802 L1085.44 689.802 L1086 689.802 L1086.56 689.802 L1087.12 689.802 L1087.67 689.802 L1088.23 689.802 L1088.79 689.802 L1089.35 689.802 L1089.91 689.802 L1090.47 689.802 L1091.03 689.802 L1091.59 689.802 L1092.15 689.802 L1092.71 689.802 L1093.27 689.802 L1093.83 689.802 L1094.39 689.802 L1094.94 689.802 L1095.5 689.802 L1096.06 689.802 L1096.62 689.802 L1097.18 689.802 L1097.74 689.802 L1098.3 689.802 L1098.86 689.802 L1099.42 689.802 L1099.98 689.802 L1100.54 689.802 L1101.1 689.802 L1101.66 689.802 L1102.22 689.802 L1102.77 689.802 L1103.33 689.802 L1103.89 689.802 L1104.45 689.802 L1105.01 689.802 L1105.57 689.802 L1106.13 689.802 L1106.69 689.802 L1107.25 689.802 L1107.81 689.802 L1108.37 689.802 L1108.93 689.802 L1109.49 689.802 L1110.04 689.802 L1110.6 689.802 L1111.16 689.802 L1111.72 689.802 L1112.28 689.802 L1112.84 689.802 L1113.4 689.802 L1113.96 689.802 L1114.52 689.802 L1115.08 689.802 L1115.64 689.802 L1116.2 689.802 L1116.76 689.802 L1117.31 689.802 L1117.87 689.802 L1118.43 689.802 L1118.99 689.802 L1119.55 689.802 L1120.11 689.802 L1120.67 689.802 L1121.23 689.802 L1121.79 689.802 L1122.35 689.802 L1122.91 689.802 L1123.47 689.802 L1124.03 689.802 L1124.59 689.802 L1125.14 689.802 L1125.7 689.802 L1126.26 689.802 L1126.82 689.802 L1127.38 689.802 L1127.94 689.802 L1128.5 689.802 L1129.06 689.802 L1129.62 689.802 L1130.18 689.802 L1130.74 689.802 L1131.3 689.802 L1131.86 689.802 L1132.41 689.802 L1132.97 689.802 L1133.53 689.802 L1134.09 689.802 L1134.65 689.802 L1135.21 689.802 L1135.77 689.802 L1136.33 689.802 L1136.89 689.802 L1137.45 689.802 L1138.01 689.802 L1138.57 689.802 L1139.13 689.802 L1139.68 689.802 L1140.24 689.802 L1140.8 689.802 L1141.36 689.802 L1141.92 689.802 L1142.48 689.802 L1143.04 689.802 L1143.6 689.802 L1144.16 689.802 L1144.72 689.802 L1145.28 689.802 L1145.84 689.802 L1146.4 689.802 L1146.96 689.802 L1147.51 689.802 L1148.07 689.802 L1148.63 689.802 L1149.19 689.802 L1149.75 689.802 L1150.31 689.802 L1150.87 689.802 L1151.43 689.802 L1151.99 689.802 L1152.55 689.802 L1153.11 689.802 L1153.67 689.802 L1154.23 689.802 L1154.78 689.802 L1155.34 689.802 L1155.9 689.802 L1156.46 689.802 L1157.02 689.802 L1157.58 689.802 L1158.14 689.802 L1158.7 689.802 L1159.26 689.802 L1159.82 689.802 L1160.38 689.802 L1160.94 689.802 L1161.5 689.802 L1162.05 689.802 L1162.61 689.802 L1163.17 689.802 L1163.73 689.802 L1164.29 689.802 L1164.85 689.802 L1165.41 689.802 L1165.97 689.802 L1166.53 689.802 L1167.09 689.802 L1167.65 689.802 L1168.21 689.802 L1168.77 689.802 L1169.33 689.802 L1169.88 689.802 L1170.44 689.802 L1171 689.802 L1171.56 689.802 L1172.12 689.802 L1172.68 689.802 L1173.24 689.802 L1173.8 689.802 L1174.36 689.802 L1174.92 689.802 L1175.48 689.802 L1176.04 689.802 L1176.6 689.802 L1177.15 689.802 L1177.71 689.802 L1178.27 689.802 L1178.83 689.802 L1179.39 689.802 L1179.95 689.802 L1180.51 689.802 L1181.07 689.802 L1181.63 689.802 L1182.19 689.802 L1182.75 689.802 L1183.31 689.802 L1183.87 689.802 L1184.43 689.802 L1184.98 689.802 L1185.54 689.802 L1186.1 689.802 L1186.66 689.802 L1187.22 689.802 L1187.78 689.802 L1188.34 689.802 L1188.9 689.802 L1189.46 689.802 L1190.02 689.802 L1190.58 689.802 L1191.14 689.802 L1191.7 689.802 L1192.25 689.802 L1192.81 689.802 L1193.37 689.802 L1193.93 689.802 L1194.49 689.802 L1195.05 689.802 L1195.61 689.802 L1196.17 689.802 L1196.73 689.802 L1197.29 689.802 L1197.85 689.802 L1198.41 689.802 L1198.97 689.802 L1199.52 689.802 L1200.08 689.802 L1200.64 689.802 L1201.2 689.802 L1201.76 689.802 L1202.32 689.802 L1202.88 689.802 L1203.44 689.802 L1204 689.802 L1204.56 689.802 L1205.12 689.802 L1205.68 689.802 L1206.24 689.802 L1206.8 689.802 L1207.35 689.802 L1207.91 689.802 L1208.47 689.802 L1209.03 689.802 L1209.59 689.802 L1210.15 689.802 L1210.71 689.802 L1211.27 689.802 L1211.83 689.802 L1212.39 689.802 L1212.95 689.802 L1213.51 689.802 L1214.07 689.802 L1214.62 689.802 L1215.18 689.802 L1215.74 689.802 L1216.3 689.802 L1216.86 689.802 L1217.42 689.802 L1217.98 689.802 L1218.54 689.802 L1219.1 689.802 L1219.66 689.802 L1220.22 689.802 L1220.78 689.802 L1221.34 689.802 L1221.89 689.802 L1222.45 689.802 L1223.01 689.802 L1223.57 689.802 L1224.13 689.802 L1224.69 689.802 L1225.25 689.802 L1225.81 689.802 L1226.37 689.802 L1226.93 689.802 L1227.49 689.802 L1228.05 689.802 L1228.61 689.802 L1229.17 689.802 L1229.72 689.802 L1230.28 689.802 L1230.84 689.802 L1231.4 689.802 L1231.96 689.802 L1232.52 689.802 L1233.08 689.802 L1233.64 689.802 L1234.2 689.802 L1234.76 689.802 L1235.32 689.802 L1235.88 689.802 L1236.44 689.802 L1236.99 689.802 L1237.55 689.802 L1238.11 689.802 L1238.67 689.802 L1239.23 689.802 L1239.79 689.802 L1240.35 689.802 L1240.91 689.802 L1241.47 689.802 L1242.03 689.802 L1242.59 689.802 L1243.15 689.802 L1243.71 689.802 L1244.26 689.802 L1244.82 689.802 L1245.38 689.802 L1245.94 689.802 L1246.5 689.802 L1247.06 689.802 L1247.62 689.802 L1248.18 689.802 L1248.74 689.802 L1249.3 689.802 L1249.86 689.802 L1250.42 689.802 L1250.98 689.802 L1251.54 689.802 L1252.09 689.802 L1252.65 689.802 L1253.21 689.802 L1253.77 689.802 L1254.33 689.802 L1254.89 689.802 L1255.45 689.802 L1256.01 689.802 L1256.57 689.802 L1257.13 689.802 L1257.69 689.802 L1258.25 689.802 L1258.81 689.802 L1259.36 689.802 L1259.92 689.802 L1260.48 689.802 L1261.04 689.802 L1261.6 689.802 L1262.16 689.802 L1262.72 689.802 L1263.28 689.802 L1263.84 689.802 L1264.4 689.802 L1264.96 689.802 L1265.52 689.802 L1266.08 689.802 L1266.63 689.802 L1267.19 689.802 L1267.75 689.802 L1268.31 689.802 L1268.87 689.802 L1269.43 689.802 L1269.99 689.802 L1270.55 689.802 L1271.11 689.802 L1271.67 689.802 L1272.23 689.802 L1272.79 689.802 L1273.35 689.802 L1273.91 689.802 L1274.46 689.802 L1275.02 689.802 L1275.58 689.802 L1276.14 689.802 L1276.7 689.802 L1277.26 689.802 L1277.82 689.802 L1278.38 689.802 L1278.94 689.802 L1279.5 689.802 L1280.06 689.802 L1280.62 689.802 L1281.18 689.802 L1281.73 689.802 L1282.29 689.802 L1282.85 689.802 L1283.41 689.802 L1283.97 689.802 L1284.53 689.802 L1285.09 689.802 L1285.65 689.802 L1286.21 689.802 L1286.77 689.802 L1287.33 689.802 L1287.89 689.802 L1288.45 689.802 L1289 689.802 L1289.56 689.802 L1290.12 689.802 L1290.68 689.802 L1291.24 689.802 L1291.8 689.802 L1292.36 689.802 L1292.92 689.802 L1293.48 689.802 L1294.04 689.802 L1294.6 689.802 L1295.16 689.802 L1295.72 689.802 L1296.28 689.802 L1296.83 689.802 L1297.39 689.802 L1297.95 689.802 L1298.51 689.802 L1299.07 689.802 L1299.63 689.802 L1300.19 689.802 L1300.75 689.802 L1301.31 689.802 L1301.87 689.802 L1302.43 689.802 L1302.99 689.802 L1303.55 689.802 L1304.1 689.802 L1304.66 689.802 L1305.22 689.802 L1305.78 689.802 L1306.34 689.802 L1306.9 689.802 L1307.46 689.802 L1308.02 689.802 L1308.58 689.802 L1309.14 689.802 L1309.7 689.802 L1310.26 689.802 L1310.82 689.802 L1311.38 689.802 L1311.93 689.802 L1312.49 689.802 L1313.05 689.802 L1313.61 689.802 L1314.17 689.802 L1314.73 689.802 L1315.29 689.802 L1315.85 689.802 L1316.41 689.802 L1316.97 689.802 L1317.53 689.802 L1318.09 689.802 L1318.65 689.802 L1319.2 689.802 L1319.76 689.802 L1320.32 689.802 L1320.88 689.802 L1321.44 689.802 L1322 689.802 L1322.56 689.802 L1323.12 689.802 L1323.68 689.802 L1324.24 689.802 L1324.8 689.802 L1325.36 689.802 L1325.92 689.802 L1326.47 689.802 L1327.03 689.802 L1327.59 689.802 L1328.15 689.802 L1328.71 689.802 L1329.27 689.802 L1329.83 689.802 L1330.39 689.802 L1330.95 689.802 L1331.51 689.802 L1332.07 689.802 L1332.63 689.802 L1333.19 689.802 L1333.75 689.802 L1334.3 689.802 L1334.86 689.802 L1335.42 689.802 L1335.98 689.802 L1336.54 689.802 L1337.1 689.802 L1337.66 689.802 L1338.22 689.802 L1338.78 689.802 L1339.34 689.802 L1339.9 689.802 L1340.46 689.802 L1341.02 689.802 L1341.57 689.802 L1342.13 689.802 L1342.69 689.802 L1343.25 689.802 L1343.81 689.802 L1344.37 689.802 L1344.93 689.802 L1345.49 689.802 L1346.05 689.802 L1346.61 689.802 L1347.17 689.802 L1347.73 689.802 L1348.29 689.802 L1348.84 689.802 L1349.4 689.802 L1349.96 689.802 L1350.52 689.802 L1351.08 689.802 L1351.64 689.802 L1352.2 689.802 L1352.76 689.802 L1353.32 689.802 L1353.88 689.802 L1354.44 689.802 L1355 689.802 L1355.56 689.802 L1356.12 689.802 L1356.67 689.802 L1357.23 689.802 L1357.79 689.802 L1358.35 689.802 L1358.91 689.802 L1359.47 689.802 L1360.03 689.802 L1360.59 689.802 L1361.15 689.802 L1361.71 689.802 L1362.27 689.802 L1362.83 689.802 L1363.39 689.802 L1363.94 689.802 L1364.5 689.802 L1365.06 689.802 L1365.62 689.802 L1366.18 689.802 L1366.74 689.802 L1367.3 689.802 L1367.86 689.802 L1368.42 689.802 L1368.98 689.802 L1369.54 689.802 L1370.1 689.802 L1370.66 689.802 L1371.21 689.802 L1371.77 689.802 L1372.33 689.802 L1372.89 689.802 L1373.45 689.802 L1374.01 689.802 L1374.57 689.802 L1375.13 689.802 L1375.69 689.802 L1376.25 689.802 L1376.81 689.802 L1377.37 689.802 L1377.93 689.802 L1378.49 689.802 L1379.04 689.802 L1379.6 689.802 L1380.16 689.802 L1380.72 689.802 L1381.28 689.802 L1381.84 689.802 L1382.4 689.802 L1382.96 689.802 L1383.52 689.802 L1384.08 689.802 L1384.64 689.802 L1385.2 689.802 L1385.76 689.802 L1386.31 689.802 L1386.87 689.802 L1387.43 689.802 L1387.99 689.802 L1388.55 689.802 L1389.11 689.802 L1389.67 689.802 L1390.23 689.802 L1390.79 689.802 L1391.35 689.802 L1391.91 689.802 L1392.47 689.802 L1393.03 689.802 L1393.58 689.802 L1394.14 689.802 L1394.7 689.802 L1395.26 689.802 L1395.82 689.802 L1396.38 689.802 L1396.94 689.802 L1397.5 689.802 L1398.06 689.802 L1398.62 689.802 L1399.18 689.802 L1399.74 689.802 L1400.3 689.802 L1400.86 689.802 L1401.41 689.802 L1401.97 689.802 L1402.53 689.802 L1403.09 689.802 L1403.65 689.802 L1404.21 689.802 L1404.77 689.802 L1405.33 689.802 L1405.89 689.802 L1406.45 689.802 L1407.01 689.802 L1407.57 689.802 L1408.13 689.802 L1408.68 689.802 L1409.24 689.802 L1409.8 689.802 L1410.36 689.802 L1410.92 689.802 L1411.48 689.802 L1412.04 689.802 L1412.6 689.802 L1413.16 689.802 L1413.72 689.802 L1414.28 689.802 L1414.84 689.802 L1415.4 689.802 L1415.95 689.802 L1416.51 689.802 L1417.07 689.802 L1417.63 689.802 L1418.19 689.802 L1418.75 689.802 L1419.31 689.802 L1419.87 689.802 L1420.43 689.802 L1420.99 689.802 L1421.55 689.802 L1422.11 689.802 L1422.67 689.802 L1423.23 689.802 L1423.78 689.802 L1424.34 689.802 L1424.9 689.802 L1425.46 689.802 L1426.02 689.802 L1426.58 689.802 L1427.14 689.802 L1427.7 689.802 L1428.26 689.802 L1428.82 689.802 L1429.38 689.802 L1429.94 689.802 L1430.5 689.802 L1431.05 689.802 L1431.61 689.802 L1432.17 689.802 L1432.73 689.802 L1433.29 689.802 L1433.85 689.802 L1434.41 689.802 L1434.97 689.802 L1435.53 689.802 L1436.09 689.802 L1436.65 689.802 L1437.21 689.802 L1437.77 689.802 L1438.33 689.802 L1438.88 689.802 L1439.44 689.802 L1440 689.802 L1440.56 689.802 L1441.12 689.802 L1441.68 689.802 L1442.24 689.802 L1442.8 689.802 L1443.36 689.802 L1443.92 689.802 L1444.48 689.802 L1445.04 689.802 L1445.6 689.802 L1446.15 689.802 L1446.71 689.802 L1447.27 689.802 L1447.83 689.802 L1448.39 689.802 L1448.95 689.802 L1449.51 689.802 L1450.07 689.802 L1450.63 689.802 L1451.19 689.802 L1451.75 689.802 L1452.31 689.802 L1452.87 689.802 L1453.42 689.802 L1453.98 689.802 L1454.54 689.802 L1455.1 689.802 L1455.66 689.802 L1456.22 689.802 L1456.78 689.802 L1457.34 689.802 L1457.9 689.802 L1458.46 689.802 L1459.02 689.802 L1459.58 689.802 L1460.14 689.802 L1460.7 689.802 L1461.25 689.802 L1461.81 689.802 L1462.37 689.802 L1462.93 689.802 L1463.49 689.802 L1464.05 689.802 L1464.61 689.802 L1465.17 689.802 L1465.73 689.802 L1466.29 689.802 L1466.85 689.802 L1467.41 689.802 L1467.97 689.802 L1468.52 689.802 L1469.08 689.802 L1469.64 689.802 L1470.2 689.802 L1470.76 689.802 L1471.32 689.802 L1471.88 689.802 L1472.44 689.802 L1473 689.802 L1473.56 689.802 L1474.12 689.802 L1474.68 689.802 L1475.24 689.802 L1475.79 689.802 L1476.35 689.802 L1476.91 689.802 L1477.47 689.802 L1478.03 689.802 L1478.59 689.802 L1479.15 689.802 L1479.71 689.802 L1480.27 689.802 L1480.83 689.802 L1481.39 689.802 L1481.95 689.802 L1482.51 689.802 L1483.07 689.802 L1483.62 689.802 L1484.18 689.802 L1484.74 689.802 L1485.3 689.802 L1485.86 689.802 L1486.42 689.802 L1486.98 689.802 L1487.54 689.802 L1488.1 689.802 L1488.66 689.802 L1489.22 689.802 L1489.78 689.802 L1490.34 689.802 L1490.89 689.802 L1491.45 689.802 L1492.01 689.802 L1492.57 689.802 L1493.13 689.802 L1493.69 689.802 L1494.25 689.802 L1494.81 689.802 L1495.37 689.802 L1495.93 689.802 L1496.49 689.802 L1497.05 689.802 L1497.61 689.802 L1498.16 689.802 L1498.72 689.802 L1499.28 689.802 L1499.84 689.802 L1500.4 689.802 L1500.96 689.802 L1501.52 689.802 L1502.08 689.802 L1502.64 689.802 L1503.2 689.802 L1503.76 689.802 L1504.32 689.802 L1504.88 689.802 L1505.44 689.802 L1505.99 689.802 L1506.55 689.802 L1507.11 689.802 L1507.67 689.802 L1508.23 689.802 L1508.79 689.802 L1509.35 689.802 L1509.91 689.802 L1510.47 689.802 L1511.03 689.802 L1511.59 689.802 L1512.15 689.802 L1512.71 689.802 L1513.26 689.802 L1513.82 689.802 L1514.38 689.802 L1514.94 689.802 L1515.5 689.802 L1516.06 689.802 L1516.62 689.802 L1517.18 689.802 L1517.74 689.802 L1518.3 689.802 L1518.86 689.802 L1519.42 689.802 L1519.98 689.802 L1520.53 689.802 L1521.09 689.802 L1521.65 689.802 L1522.21 689.802 L1522.77 689.802 L1523.33 689.802 L1523.89 689.802 L1524.45 689.802 L1525.01 689.802 L1525.57 689.802 L1526.13 689.802 L1526.69 689.802 L1527.25 689.802 L1527.81 689.802 L1528.36 689.802 L1528.92 689.802 L1529.48 689.802 L1530.04 689.802 L1530.6 689.802 L1531.16 689.802 L1531.72 689.802 L1532.28 689.802 L1532.84 689.802 L1533.4 689.802 L1533.96 689.802 L1534.52 689.802 L1535.08 689.802 L1535.63 689.802 L1536.19 689.802 L1536.75 689.802 L1537.31 689.802 L1537.87 689.802 L1538.43 689.802 L1538.99 689.802 L1539.55 689.802 L1540.11 689.802 L1540.67 689.802 L1541.23 689.802 L1541.79 689.802 L1542.35 689.802 L1542.9 689.802 L1543.46 689.802 L1544.02 689.802 L1544.58 689.802 L1545.14 689.802 L1545.7 689.802 L1546.26 689.802 L1546.82 689.802 L1547.38 689.802 L1547.94 689.802 L1548.5 689.802 L1549.06 689.802 L1549.62 689.802 L1550.18 689.802 L1550.73 689.802 L1551.29 689.802 L1551.85 689.802 L1552.41 689.802 L1552.97 689.802 L1553.53 689.802 L1554.09 689.802 L1554.65 689.802 L1555.21 689.802 L1555.77 689.802 L1556.33 689.802 L1556.89 689.802 L1557.45 689.802 L1558 689.802 L1558.56 689.802 L1559.12 689.802 L1559.68 689.802 L1560.24 689.802 L1560.8 689.802 L1561.36 689.802 L1561.92 689.802 L1562.48 689.802 L1563.04 689.802 L1563.6 689.802 L1564.16 689.802 L1564.72 689.802 L1565.28 689.802 L1565.83 689.802 L1566.39 689.802 L1566.95 689.802 L1567.51 689.802 L1568.07 689.802 L1568.63 689.802 L1569.19 689.802 L1569.75 689.802 L1570.31 689.802 L1570.87 689.802 L1571.43 689.802 L1571.99 689.802 L1572.55 689.802 L1573.1 689.802 L1573.66 689.802 L1574.22 689.802 L1574.78 689.802 L1575.34 689.802 L1575.9 689.802 L1576.46 689.802 L1577.02 689.802 L1577.58 689.802 L1578.14 689.802 L1578.7 689.802 L1579.26 689.802 L1579.82 689.802 L1580.37 689.802 L1580.93 689.802 L1581.49 689.802 L1582.05 689.802 L1582.61 689.802 L1583.17 689.802 L1583.73 689.802 L1584.29 689.802 L1584.85 689.802 L1585.41 689.802 L1585.97 689.802 L1586.53 689.802 L1587.09 689.802 L1587.65 689.802 L1588.2 689.802 L1588.76 689.802 L1589.32 689.802 L1589.88 689.802 L1590.44 689.802 L1591 689.802 L1591.56 689.802 L1592.12 689.802 L1592.68 689.802 L1593.24 689.802 L1593.8 689.802 L1594.36 689.802 L1594.92 689.802 L1595.47 689.802 L1596.03 689.802 L1596.59 689.802 L1597.15 689.802 L1597.71 689.802 L1598.27 689.802 L1598.83 689.802 L1599.39 689.802 L1599.95 689.802 L1600.51 689.802 L1601.07 689.802 L1601.63 689.802 L1602.19 689.802 L1602.74 689.802 L1603.3 689.802 L1603.86 689.802 L1604.42 689.802 L1604.98 689.802 L1605.54 689.802 L1606.1 689.802 L1606.66 689.802 L1607.22 689.802 L1607.78 689.802 L1608.34 689.802 L1608.9 689.802 L1609.46 689.802 L1610.02 689.802 L1610.57 689.802 L1611.13 689.802 L1611.69 689.802 L1612.25 689.802 L1612.81 689.802 L1613.37 689.802 L1613.93 689.802 L1614.49 689.802 L1615.05 689.802 L1615.61 689.802 L1616.17 689.802 L1616.73 689.802 L1617.29 689.802 L1617.84 689.802 L1618.4 689.802 L1618.96 689.802 L1619.52 689.802 L1620.08 689.802 L1620.64 689.802 L1621.2 689.802 L1621.76 689.802 L1622.32 689.802 L1622.88 689.802 L1623.44 689.802 L1624 689.802 L1624.56 689.802 L1625.11 689.802 L1625.67 689.802 L1626.23 689.802 L1626.79 689.802 L1627.35 689.802 L1627.91 689.802 L1628.47 689.802 L1629.03 689.802 L1629.59 689.802 L1630.15 689.802 L1630.71 689.802 L1631.27 689.802 L1631.83 689.802 L1632.39 689.802 L1632.94 689.802 L1633.5 689.802 L1634.06 689.802 L1634.62 689.802 L1635.18 689.802 L1635.74 689.802 L1636.3 689.802 L1636.86 689.802 L1637.42 689.802 L1637.98 689.802 L1638.54 689.802 L1639.1 689.802 L1639.66 689.802 L1640.21 689.802 L1640.77 689.802 L1641.33 689.802 L1641.89 689.802 L1642.45 689.802 L1643.01 689.802 L1643.57 689.802 L1644.13 689.802 L1644.69 689.802 L1645.25 689.802 L1645.81 689.802 L1646.37 689.802 L1646.93 689.802 L1647.48 689.802 L1648.04 689.802 L1648.6 689.802 L1649.16 689.802 L1649.72 689.802 L1650.28 689.802 L1650.84 689.802 L1651.4 689.802 L1651.96 689.802 L1652.52 689.802 L1653.08 689.802 L1653.64 689.802 L1654.2 689.802 L1654.76 689.802 L1655.31 689.802 L1655.87 689.802 L1656.43 689.802 L1656.99 689.802 L1657.55 689.802 L1658.11 689.802 L1658.67 689.802 L1659.23 689.802 L1659.79 689.802 L1660.35 689.802 L1660.91 689.802 L1661.47 689.802 L1662.03 689.802 L1662.58 689.802 L1663.14 689.802 L1663.7 689.802 L1664.26 689.802 L1664.82 689.802 L1665.38 689.802 L1665.94 689.802 L1666.5 689.802 L1667.06 689.802 L1667.62 689.802 L1668.18 689.802 L1668.74 689.802 L1669.3 689.802 L1669.85 689.802 L1670.41 689.802 L1670.97 689.802 L1671.53 689.802 L1672.09 689.802 L1672.65 689.802 L1673.21 689.802 L1673.77 689.802 L1674.33 689.802 L1674.89 689.802 L1675.45 689.802 L1676.01 689.802 L1676.57 689.802 L1677.13 689.802 L1677.68 689.802 L1678.24 689.802 L1678.8 689.802 L1679.36 689.802 L1679.92 689.802 L1680.48 689.802 L1681.04 689.802 L1681.6 689.802 L1682.16 689.802 L1682.72 689.802 L1683.28 689.802 L1683.84 689.802 L1684.4 689.802 L1684.95 689.802 L1685.51 689.802 L1686.07 689.802 L1686.63 689.802 L1687.19 689.802 L1687.75 689.802 L1688.31 689.802 L1688.87 689.802 L1689.43 689.802 L1689.99 689.802 L1690.55 689.802 L1691.11 689.802 L1691.67 689.802 L1692.23 689.802 L1692.78 689.802 L1693.34 689.802 L1693.9 689.802 L1694.46 689.802 L1695.02 689.802 L1695.58 689.802 L1696.14 689.802 L1696.7 689.802 L1697.26 689.802 L1697.82 689.802 L1698.38 689.802 L1698.94 689.802 L1699.5 689.802 L1700.05 689.802 L1700.61 689.802 L1701.17 689.802 L1701.73 689.802 L1702.29 689.802 L1702.85 689.802 L1703.41 689.802 L1703.97 689.802 L1704.53 689.802 L1705.09 689.802 L1705.65 689.802 L1706.21 689.802 L1706.77 689.802 L1707.32 689.802 L1707.88 689.802 L1708.44 689.802 L1709 689.802 L1709.56 689.802 L1710.12 689.802 L1710.68 689.802 L1711.24 689.802 L1711.8 689.802 L1712.36 689.802 L1712.92 689.802 L1713.48 689.802 L1714.04 689.802 L1714.6 689.802 L1715.15 689.802 L1715.71 689.802 L1716.27 689.802 L1716.83 689.802 L1717.39 689.802 L1717.95 689.802 L1718.51 689.802 L1719.07 689.802 L1719.63 689.802 L1720.19 689.802 L1720.75 689.802 L1721.31 689.802 L1721.87 689.802 L1722.42 689.802 L1722.98 689.802 L1723.54 689.802 L1724.1 689.802 L1724.66 689.802 L1725.22 689.802 L1725.78 689.802 L1726.34 689.802 L1726.9 689.802 L1727.46 689.802 L1728.02 689.802 L1728.58 689.802 L1729.14 689.802 L1729.69 689.802 L1730.25 689.802 L1730.81 689.802 L1731.37 689.802 L1731.93 689.802 L1732.49 689.802 L1733.05 689.802 L1733.61 689.802 L1734.17 689.802 L1734.73 689.802 L1735.29 689.802 L1735.85 689.802 L1736.41 689.802 L1736.97 689.802 L1737.52 689.802 L1738.08 689.802 L1738.64 689.802 L1739.2 689.802 L1739.76 689.802 L1740.32 689.802 L1740.88 689.802 L1741.44 689.802 L1742 689.802 L1742.56 689.802 L1743.12 689.802 L1743.68 689.802 L1744.24 689.802 L1744.79 689.802 L1745.35 689.802 L1745.91 689.802 L1746.47 689.802 L1747.03 689.802 L1747.59 689.802 L1748.15 689.802 L1748.71 689.802 L1749.27 689.802 L1749.83 689.802 L1750.39 689.802 L1750.95 689.802 L1751.51 689.802 L1752.06 689.802 L1752.62 689.802 L1753.18 689.802 L1753.74 689.802 L1754.3 689.802 L1754.86 689.802 L1755.42 689.802 L1755.98 689.802 L1756.54 689.802 L1757.1 689.802 L1757.66 689.802 L1758.22 689.802 L1758.78 689.802 L1759.34 689.802 L1759.89 689.802 L1760.45 689.802 L1761.01 689.802 L1761.57 689.802 L1762.13 689.802 L1762.69 689.802 L1763.25 689.802 L1763.81 689.802 L1764.37 689.802 L1764.93 689.802 L1765.49 689.802 L1766.05 689.802 L1766.61 689.802 L1767.16 689.802 L1767.72 689.802 L1768.28 689.802 L1768.84 689.802 L1769.4 689.802 L1769.96 689.802 L1770.52 689.802 L1771.08 689.802 L1771.64 689.802 L1772.2 689.802 L1772.76 689.802 L1773.32 689.802 L1773.88 689.802 L1774.43 689.802 L1774.99 689.802 L1775.55 689.802 L1776.11 689.802 L1776.67 689.802 L1777.23 689.802 L1777.79 689.802 L1778.35 689.802 L1778.91 689.802 L1779.47 689.802 L1780.03 689.802 L1780.59 689.802 L1781.15 689.802 L1781.71 689.802 L1782.26 689.802 L1782.82 689.802 L1783.38 689.802 L1783.94 689.802 L1784.5 689.802 L1785.06 689.802 L1785.62 689.802 L1786.18 689.802 L1786.74 689.802 L1787.3 689.802 L1787.86 689.802 L1788.42 689.802 L1788.98 689.802 L1789.53 689.802 L1790.09 689.802 L1790.65 689.802 L1791.21 689.802 L1791.77 689.802 L1792.33 689.802 L1792.89 689.802 L1793.45 689.802 L1794.01 689.802 L1794.57 689.802 L1795.13 689.802 L1795.69 689.802 L1796.25 689.802 L1796.8 689.802 L1797.36 689.802 L1797.92 689.802 L1798.48 689.802 L1799.04 689.802 L1799.6 689.802 L1800.16 689.802 L1800.72 689.802 L1801.28 689.802 L1801.84 689.802 L1802.4 689.802 L1802.96 689.802 L1803.52 689.802 L1804.08 689.802 L1804.63 689.802 L1805.19 689.802 L1805.75 689.802 L1806.31 689.802 L1806.87 689.802 L1807.43 689.802 L1807.99 689.802 L1808.55 689.802 L1809.11 689.802 L1809.67 689.802 L1810.23 689.802 L1810.79 689.802 L1811.35 689.802 L1811.9 689.802 L1812.46 689.802 L1813.02 689.802 L1813.58 689.802 L1814.14 689.802 L1814.7 689.802 L1815.26 689.802 L1815.82 689.802 L1816.38 689.802 L1816.94 689.802 L1817.5 689.802 L1818.06 689.802 L1818.62 689.802 L1819.18 689.802 L1819.73 689.802 L1820.29 689.802 L1820.85 689.802 L1821.41 689.802 L1821.97 689.802 L1822.53 689.802 L1823.09 689.802 L1823.65 689.802 L1824.21 689.802 L1824.77 689.802 L1825.33 689.802 L1825.89 689.802 L1826.45 689.802 L1827 689.802 L1827.56 689.802 L1828.12 689.802 L1828.68 689.802 L1829.24 689.802 L1829.8 689.802 L1830.36 689.802 L1830.92 689.802 L1831.48 689.802 L1832.04 689.802 L1832.6 689.802 L1833.16 689.802 L1833.72 689.802 L1834.27 689.802 L1834.83 689.802 L1835.39 689.802 L1835.95 689.802 L1836.51 689.802 L1837.07 689.802 L1837.63 689.802 L1838.19 689.802 L1838.19 679.952 L1837.63 679.952 L1837.07 679.952 L1836.51 679.952 L1835.95 679.952 L1835.39 679.952 L1834.83 679.952 L1834.27 679.952 L1833.72 679.952 L1833.16 679.952 L1832.6 679.952 L1832.04 679.952 L1831.48 679.952 L1830.92 679.952 L1830.36 679.952 L1829.8 679.952 L1829.24 679.952 L1828.68 679.952 L1828.12 679.952 L1827.56 679.952 L1827 679.952 L1826.45 679.952 L1825.89 679.952 L1825.33 679.952 L1824.77 679.952 L1824.21 679.952 L1823.65 679.952 L1823.09 679.952 L1822.53 679.952 L1821.97 679.952 L1821.41 679.952 L1820.85 679.952 L1820.29 679.952 L1819.73 679.952 L1819.18 679.952 L1818.62 679.952 L1818.06 679.952 L1817.5 679.952 L1816.94 679.952 L1816.38 679.952 L1815.82 679.952 L1815.26 679.952 L1814.7 679.952 L1814.14 679.952 L1813.58 679.952 L1813.02 679.952 L1812.46 679.952 L1811.9 679.952 L1811.35 679.952 L1810.79 679.952 L1810.23 679.952 L1809.67 679.952 L1809.11 679.952 L1808.55 679.952 L1807.99 679.952 L1807.43 679.952 L1806.87 679.952 L1806.31 679.952 L1805.75 679.952 L1805.19 679.952 L1804.63 679.952 L1804.08 679.952 L1803.52 679.952 L1802.96 679.952 L1802.4 679.952 L1801.84 679.952 L1801.28 679.952 L1800.72 679.952 L1800.16 679.952 L1799.6 679.952 L1799.04 679.952 L1798.48 679.952 L1797.92 679.952 L1797.36 679.952 L1796.8 679.952 L1796.25 679.952 L1795.69 679.952 L1795.13 679.952 L1794.57 679.952 L1794.01 679.952 L1793.45 679.952 L1792.89 679.952 L1792.33 679.952 L1791.77 679.952 L1791.21 679.952 L1790.65 679.952 L1790.09 679.952 L1789.53 679.952 L1788.98 679.952 L1788.42 679.952 L1787.86 679.952 L1787.3 679.952 L1786.74 679.952 L1786.18 679.952 L1785.62 679.952 L1785.06 679.952 L1784.5 679.952 L1783.94 679.952 L1783.38 679.952 L1782.82 679.952 L1782.26 679.952 L1781.71 679.952 L1781.15 679.952 L1780.59 679.952 L1780.03 679.952 L1779.47 679.952 L1778.91 679.952 L1778.35 679.952 L1777.79 679.952 L1777.23 679.952 L1776.67 679.952 L1776.11 679.952 L1775.55 679.952 L1774.99 679.952 L1774.43 679.952 L1773.88 679.952 L1773.32 679.952 L1772.76 679.952 L1772.2 679.952 L1771.64 679.952 L1771.08 679.952 L1770.52 679.952 L1769.96 679.952 L1769.4 679.952 L1768.84 679.952 L1768.28 679.952 L1767.72 679.952 L1767.16 679.952 L1766.61 679.952 L1766.05 679.952 L1765.49 679.952 L1764.93 679.952 L1764.37 679.952 L1763.81 679.952 L1763.25 679.952 L1762.69 679.952 L1762.13 679.952 L1761.57 679.952 L1761.01 679.952 L1760.45 679.952 L1759.89 679.952 L1759.34 679.952 L1758.78 679.952 L1758.22 679.952 L1757.66 679.952 L1757.1 679.952 L1756.54 679.952 L1755.98 679.952 L1755.42 679.952 L1754.86 679.952 L1754.3 679.952 L1753.74 679.952 L1753.18 679.952 L1752.62 679.952 L1752.06 679.952 L1751.51 679.952 L1750.95 679.952 L1750.39 679.952 L1749.83 679.952 L1749.27 679.952 L1748.71 679.952 L1748.15 679.952 L1747.59 679.952 L1747.03 679.952 L1746.47 679.952 L1745.91 679.952 L1745.35 679.952 L1744.79 679.952 L1744.24 679.952 L1743.68 679.952 L1743.12 679.952 L1742.56 679.952 L1742 679.952 L1741.44 679.952 L1740.88 679.952 L1740.32 679.952 L1739.76 679.952 L1739.2 679.952 L1738.64 679.952 L1738.08 679.952 L1737.52 679.952 L1736.97 679.952 L1736.41 679.952 L1735.85 679.952 L1735.29 679.952 L1734.73 679.952 L1734.17 679.952 L1733.61 679.952 L1733.05 679.952 L1732.49 679.952 L1731.93 679.952 L1731.37 679.952 L1730.81 679.952 L1730.25 679.952 L1729.69 679.952 L1729.14 679.952 L1728.58 679.952 L1728.02 679.952 L1727.46 679.952 L1726.9 679.952 L1726.34 679.952 L1725.78 679.952 L1725.22 679.952 L1724.66 679.952 L1724.1 679.952 L1723.54 679.952 L1722.98 679.952 L1722.42 679.952 L1721.87 679.952 L1721.31 679.952 L1720.75 679.952 L1720.19 679.952 L1719.63 679.952 L1719.07 679.952 L1718.51 679.952 L1717.95 679.952 L1717.39 679.952 L1716.83 679.952 L1716.27 679.952 L1715.71 679.952 L1715.15 679.952 L1714.6 679.952 L1714.04 679.952 L1713.48 679.952 L1712.92 679.952 L1712.36 679.952 L1711.8 679.952 L1711.24 679.952 L1710.68 679.952 L1710.12 679.952 L1709.56 679.952 L1709 679.952 L1708.44 679.952 L1707.88 679.952 L1707.32 679.952 L1706.77 679.952 L1706.21 679.952 L1705.65 679.952 L1705.09 679.952 L1704.53 679.952 L1703.97 679.952 L1703.41 679.952 L1702.85 679.952 L1702.29 679.952 L1701.73 679.952 L1701.17 679.952 L1700.61 679.952 L1700.05 679.952 L1699.5 679.952 L1698.94 679.952 L1698.38 679.952 L1697.82 679.952 L1697.26 679.952 L1696.7 679.952 L1696.14 679.952 L1695.58 679.952 L1695.02 679.952 L1694.46 679.952 L1693.9 679.952 L1693.34 679.952 L1692.78 679.952 L1692.23 679.952 L1691.67 679.952 L1691.11 679.952 L1690.55 679.952 L1689.99 679.952 L1689.43 679.952 L1688.87 679.952 L1688.31 679.952 L1687.75 679.952 L1687.19 679.952 L1686.63 679.952 L1686.07 679.952 L1685.51 679.952 L1684.95 679.952 L1684.4 679.952 L1683.84 679.952 L1683.28 679.952 L1682.72 679.952 L1682.16 679.952 L1681.6 679.952 L1681.04 679.952 L1680.48 679.952 L1679.92 679.952 L1679.36 679.952 L1678.8 679.952 L1678.24 679.952 L1677.68 679.952 L1677.13 679.952 L1676.57 679.952 L1676.01 679.952 L1675.45 679.952 L1674.89 679.952 L1674.33 679.952 L1673.77 679.952 L1673.21 679.952 L1672.65 679.952 L1672.09 679.952 L1671.53 679.952 L1670.97 679.952 L1670.41 679.952 L1669.85 679.952 L1669.3 679.952 L1668.74 679.952 L1668.18 679.952 L1667.62 679.952 L1667.06 679.952 L1666.5 679.952 L1665.94 679.952 L1665.38 679.952 L1664.82 679.952 L1664.26 679.952 L1663.7 679.952 L1663.14 679.952 L1662.58 679.952 L1662.03 679.952 L1661.47 679.952 L1660.91 679.952 L1660.35 679.952 L1659.79 679.952 L1659.23 679.952 L1658.67 679.952 L1658.11 679.952 L1657.55 679.952 L1656.99 679.952 L1656.43 679.952 L1655.87 679.952 L1655.31 679.952 L1654.76 679.952 L1654.2 679.952 L1653.64 679.952 L1653.08 679.952 L1652.52 679.952 L1651.96 679.952 L1651.4 679.952 L1650.84 679.952 L1650.28 679.952 L1649.72 679.952 L1649.16 679.952 L1648.6 679.952 L1648.04 679.952 L1647.48 679.952 L1646.93 679.952 L1646.37 679.952 L1645.81 679.952 L1645.25 679.952 L1644.69 679.952 L1644.13 679.952 L1643.57 679.952 L1643.01 679.952 L1642.45 679.952 L1641.89 679.952 L1641.33 679.952 L1640.77 679.952 L1640.21 679.952 L1639.66 679.952 L1639.1 679.952 L1638.54 679.952 L1637.98 679.952 L1637.42 679.952 L1636.86 679.952 L1636.3 679.952 L1635.74 679.952 L1635.18 679.952 L1634.62 679.952 L1634.06 679.952 L1633.5 679.952 L1632.94 679.952 L1632.39 679.952 L1631.83 679.952 L1631.27 679.952 L1630.71 679.952 L1630.15 679.952 L1629.59 679.952 L1629.03 679.952 L1628.47 679.952 L1627.91 679.952 L1627.35 679.952 L1626.79 679.952 L1626.23 679.952 L1625.67 679.952 L1625.11 679.952 L1624.56 679.952 L1624 679.952 L1623.44 679.952 L1622.88 679.952 L1622.32 679.952 L1621.76 679.952 L1621.2 679.952 L1620.64 679.952 L1620.08 679.952 L1619.52 679.952 L1618.96 679.952 L1618.4 679.952 L1617.84 679.952 L1617.29 679.952 L1616.73 679.952 L1616.17 679.952 L1615.61 679.952 L1615.05 679.952 L1614.49 679.952 L1613.93 679.952 L1613.37 679.952 L1612.81 679.952 L1612.25 679.952 L1611.69 679.952 L1611.13 679.952 L1610.57 679.952 L1610.02 679.952 L1609.46 679.952 L1608.9 679.952 L1608.34 679.952 L1607.78 679.952 L1607.22 679.952 L1606.66 679.952 L1606.1 679.952 L1605.54 679.952 L1604.98 679.952 L1604.42 679.952 L1603.86 679.952 L1603.3 679.952 L1602.74 679.952 L1602.19 679.952 L1601.63 679.952 L1601.07 679.952 L1600.51 679.952 L1599.95 679.952 L1599.39 679.952 L1598.83 679.952 L1598.27 679.952 L1597.71 679.952 L1597.15 679.952 L1596.59 679.952 L1596.03 679.952 L1595.47 679.952 L1594.92 679.952 L1594.36 679.952 L1593.8 679.952 L1593.24 679.952 L1592.68 679.952 L1592.12 679.952 L1591.56 679.952 L1591 679.952 L1590.44 679.952 L1589.88 679.952 L1589.32 679.952 L1588.76 679.952 L1588.2 679.952 L1587.65 679.952 L1587.09 679.952 L1586.53 679.952 L1585.97 679.952 L1585.41 679.952 L1584.85 679.952 L1584.29 679.952 L1583.73 679.952 L1583.17 679.952 L1582.61 679.952 L1582.05 679.952 L1581.49 679.952 L1580.93 679.952 L1580.37 679.952 L1579.82 679.952 L1579.26 679.952 L1578.7 679.952 L1578.14 679.952 L1577.58 679.952 L1577.02 679.952 L1576.46 679.952 L1575.9 679.952 L1575.34 679.952 L1574.78 679.952 L1574.22 679.952 L1573.66 679.952 L1573.1 679.952 L1572.55 679.952 L1571.99 679.952 L1571.43 679.952 L1570.87 679.952 L1570.31 679.952 L1569.75 679.952 L1569.19 679.952 L1568.63 679.952 L1568.07 679.952 L1567.51 679.952 L1566.95 679.952 L1566.39 679.952 L1565.83 679.952 L1565.28 679.952 L1564.72 679.952 L1564.16 679.952 L1563.6 679.952 L1563.04 679.952 L1562.48 679.952 L1561.92 679.952 L1561.36 679.952 L1560.8 679.952 L1560.24 679.952 L1559.68 679.952 L1559.12 679.952 L1558.56 679.952 L1558 679.952 L1557.45 679.952 L1556.89 679.952 L1556.33 679.952 L1555.77 679.952 L1555.21 679.952 L1554.65 679.952 L1554.09 679.952 L1553.53 679.952 L1552.97 679.952 L1552.41 679.952 L1551.85 679.952 L1551.29 679.952 L1550.73 679.952 L1550.18 679.952 L1549.62 679.952 L1549.06 679.952 L1548.5 679.952 L1547.94 679.952 L1547.38 679.952 L1546.82 679.952 L1546.26 679.952 L1545.7 679.952 L1545.14 679.952 L1544.58 679.952 L1544.02 679.952 L1543.46 679.952 L1542.9 679.952 L1542.35 679.952 L1541.79 679.952 L1541.23 679.952 L1540.67 679.952 L1540.11 679.952 L1539.55 679.952 L1538.99 679.952 L1538.43 679.952 L1537.87 679.952 L1537.31 679.952 L1536.75 679.952 L1536.19 679.952 L1535.63 679.952 L1535.08 679.952 L1534.52 679.952 L1533.96 679.952 L1533.4 679.952 L1532.84 679.952 L1532.28 679.952 L1531.72 679.952 L1531.16 679.952 L1530.6 679.952 L1530.04 679.952 L1529.48 679.952 L1528.92 679.952 L1528.36 679.952 L1527.81 679.952 L1527.25 679.952 L1526.69 679.952 L1526.13 679.952 L1525.57 679.952 L1525.01 679.952 L1524.45 679.952 L1523.89 679.952 L1523.33 679.952 L1522.77 679.952 L1522.21 679.952 L1521.65 679.952 L1521.09 679.952 L1520.53 679.952 L1519.98 679.952 L1519.42 679.952 L1518.86 679.952 L1518.3 679.952 L1517.74 679.952 L1517.18 679.952 L1516.62 679.952 L1516.06 679.952 L1515.5 679.952 L1514.94 679.952 L1514.38 679.952 L1513.82 679.952 L1513.26 679.952 L1512.71 679.952 L1512.15 679.952 L1511.59 679.952 L1511.03 679.952 L1510.47 679.952 L1509.91 679.952 L1509.35 679.952 L1508.79 679.952 L1508.23 679.952 L1507.67 679.952 L1507.11 679.952 L1506.55 679.952 L1505.99 679.952 L1505.44 679.952 L1504.88 679.952 L1504.32 679.952 L1503.76 679.952 L1503.2 679.952 L1502.64 679.952 L1502.08 679.952 L1501.52 679.952 L1500.96 679.952 L1500.4 679.952 L1499.84 679.952 L1499.28 679.952 L1498.72 679.952 L1498.16 679.952 L1497.61 679.952 L1497.05 679.952 L1496.49 679.952 L1495.93 679.952 L1495.37 679.952 L1494.81 679.952 L1494.25 679.952 L1493.69 679.952 L1493.13 679.952 L1492.57 679.952 L1492.01 679.952 L1491.45 679.952 L1490.89 679.952 L1490.34 679.952 L1489.78 679.952 L1489.22 679.952 L1488.66 679.952 L1488.1 679.952 L1487.54 679.952 L1486.98 679.952 L1486.42 679.952 L1485.86 679.952 L1485.3 679.952 L1484.74 679.952 L1484.18 679.952 L1483.62 679.952 L1483.07 679.952 L1482.51 679.952 L1481.95 679.952 L1481.39 679.952 L1480.83 679.952 L1480.27 679.952 L1479.71 679.952 L1479.15 679.952 L1478.59 679.952 L1478.03 679.952 L1477.47 679.952 L1476.91 679.952 L1476.35 679.952 L1475.79 679.952 L1475.24 679.952 L1474.68 679.952 L1474.12 679.952 L1473.56 679.952 L1473 679.952 L1472.44 679.952 L1471.88 679.952 L1471.32 679.952 L1470.76 679.952 L1470.2 679.952 L1469.64 679.952 L1469.08 679.952 L1468.52 679.952 L1467.97 679.952 L1467.41 679.952 L1466.85 679.952 L1466.29 679.952 L1465.73 679.952 L1465.17 679.952 L1464.61 679.952 L1464.05 679.952 L1463.49 679.952 L1462.93 679.952 L1462.37 679.952 L1461.81 679.952 L1461.25 679.952 L1460.7 679.952 L1460.14 679.952 L1459.58 679.952 L1459.02 679.952 L1458.46 679.952 L1457.9 679.952 L1457.34 679.952 L1456.78 679.952 L1456.22 679.952 L1455.66 679.952 L1455.1 679.952 L1454.54 679.952 L1453.98 679.952 L1453.42 679.952 L1452.87 679.952 L1452.31 679.952 L1451.75 679.952 L1451.19 679.952 L1450.63 679.952 L1450.07 679.952 L1449.51 679.952 L1448.95 679.952 L1448.39 679.952 L1447.83 679.952 L1447.27 679.952 L1446.71 679.952 L1446.15 679.952 L1445.6 679.952 L1445.04 679.952 L1444.48 679.952 L1443.92 679.952 L1443.36 679.952 L1442.8 679.952 L1442.24 679.952 L1441.68 679.952 L1441.12 679.952 L1440.56 679.952 L1440 679.952 L1439.44 679.952 L1438.88 679.952 L1438.33 679.952 L1437.77 679.952 L1437.21 679.952 L1436.65 679.952 L1436.09 679.952 L1435.53 679.952 L1434.97 679.952 L1434.41 679.952 L1433.85 679.952 L1433.29 679.952 L1432.73 679.952 L1432.17 679.952 L1431.61 679.952 L1431.05 679.952 L1430.5 679.952 L1429.94 679.952 L1429.38 679.952 L1428.82 679.952 L1428.26 679.952 L1427.7 679.952 L1427.14 679.952 L1426.58 679.952 L1426.02 679.952 L1425.46 679.952 L1424.9 679.952 L1424.34 679.952 L1423.78 679.952 L1423.23 679.952 L1422.67 679.952 L1422.11 679.952 L1421.55 679.952 L1420.99 679.952 L1420.43 679.952 L1419.87 679.952 L1419.31 679.952 L1418.75 679.952 L1418.19 679.952 L1417.63 679.952 L1417.07 679.952 L1416.51 679.952 L1415.95 679.952 L1415.4 679.952 L1414.84 679.952 L1414.28 679.952 L1413.72 679.952 L1413.16 679.952 L1412.6 679.952 L1412.04 679.952 L1411.48 679.952 L1410.92 679.952 L1410.36 679.952 L1409.8 679.952 L1409.24 679.952 L1408.68 679.952 L1408.13 679.952 L1407.57 679.952 L1407.01 679.952 L1406.45 679.952 L1405.89 679.952 L1405.33 679.952 L1404.77 679.952 L1404.21 679.952 L1403.65 679.952 L1403.09 679.952 L1402.53 679.952 L1401.97 679.952 L1401.41 679.952 L1400.86 679.952 L1400.3 679.952 L1399.74 679.952 L1399.18 679.952 L1398.62 679.952 L1398.06 679.952 L1397.5 679.952 L1396.94 679.952 L1396.38 679.952 L1395.82 679.952 L1395.26 679.952 L1394.7 679.952 L1394.14 679.952 L1393.58 679.952 L1393.03 679.952 L1392.47 679.952 L1391.91 679.952 L1391.35 679.952 L1390.79 679.952 L1390.23 679.952 L1389.67 679.952 L1389.11 679.952 L1388.55 679.952 L1387.99 679.952 L1387.43 679.952 L1386.87 679.952 L1386.31 679.952 L1385.76 679.952 L1385.2 679.952 L1384.64 679.952 L1384.08 679.952 L1383.52 679.952 L1382.96 679.952 L1382.4 679.952 L1381.84 679.952 L1381.28 679.952 L1380.72 679.952 L1380.16 679.952 L1379.6 679.952 L1379.04 679.952 L1378.49 679.952 L1377.93 679.952 L1377.37 679.952 L1376.81 679.952 L1376.25 679.952 L1375.69 679.952 L1375.13 679.952 L1374.57 679.952 L1374.01 679.952 L1373.45 679.952 L1372.89 679.952 L1372.33 679.952 L1371.77 679.952 L1371.21 679.952 L1370.66 679.952 L1370.1 679.952 L1369.54 679.952 L1368.98 679.952 L1368.42 679.952 L1367.86 679.952 L1367.3 679.952 L1366.74 679.952 L1366.18 679.952 L1365.62 679.952 L1365.06 679.952 L1364.5 679.952 L1363.94 679.952 L1363.39 679.952 L1362.83 679.952 L1362.27 679.952 L1361.71 679.952 L1361.15 679.952 L1360.59 679.952 L1360.03 679.952 L1359.47 679.952 L1358.91 679.952 L1358.35 679.952 L1357.79 679.952 L1357.23 679.952 L1356.67 679.952 L1356.12 679.952 L1355.56 679.952 L1355 679.952 L1354.44 679.952 L1353.88 679.952 L1353.32 679.952 L1352.76 679.952 L1352.2 679.952 L1351.64 679.952 L1351.08 679.952 L1350.52 679.952 L1349.96 679.952 L1349.4 679.952 L1348.84 679.952 L1348.29 679.952 L1347.73 679.952 L1347.17 679.952 L1346.61 679.952 L1346.05 679.952 L1345.49 679.952 L1344.93 679.952 L1344.37 679.952 L1343.81 679.952 L1343.25 679.952 L1342.69 679.952 L1342.13 679.952 L1341.57 679.952 L1341.02 679.952 L1340.46 679.952 L1339.9 679.952 L1339.34 679.952 L1338.78 679.952 L1338.22 679.952 L1337.66 679.952 L1337.1 679.952 L1336.54 679.952 L1335.98 679.952 L1335.42 679.952 L1334.86 679.952 L1334.3 679.952 L1333.75 679.952 L1333.19 679.952 L1332.63 679.952 L1332.07 679.952 L1331.51 679.952 L1330.95 679.952 L1330.39 679.952 L1329.83 679.952 L1329.27 679.952 L1328.71 679.952 L1328.15 679.952 L1327.59 679.952 L1327.03 679.952 L1326.47 679.952 L1325.92 679.952 L1325.36 679.952 L1324.8 679.952 L1324.24 679.952 L1323.68 679.952 L1323.12 679.952 L1322.56 679.952 L1322 679.952 L1321.44 679.952 L1320.88 679.952 L1320.32 679.952 L1319.76 679.952 L1319.2 679.952 L1318.65 679.952 L1318.09 679.952 L1317.53 679.952 L1316.97 679.952 L1316.41 679.952 L1315.85 679.952 L1315.29 679.952 L1314.73 679.952 L1314.17 679.952 L1313.61 679.952 L1313.05 679.952 L1312.49 679.952 L1311.93 679.952 L1311.38 679.952 L1310.82 679.952 L1310.26 679.952 L1309.7 679.952 L1309.14 679.952 L1308.58 679.952 L1308.02 679.952 L1307.46 679.952 L1306.9 679.952 L1306.34 679.952 L1305.78 679.952 L1305.22 679.952 L1304.66 679.952 L1304.1 679.952 L1303.55 679.952 L1302.99 679.952 L1302.43 679.952 L1301.87 679.952 L1301.31 679.952 L1300.75 679.952 L1300.19 679.952 L1299.63 679.952 L1299.07 679.952 L1298.51 679.952 L1297.95 679.952 L1297.39 679.952 L1296.83 679.952 L1296.28 679.952 L1295.72 679.952 L1295.16 679.952 L1294.6 679.952 L1294.04 679.952 L1293.48 679.952 L1292.92 679.952 L1292.36 679.952 L1291.8 679.952 L1291.24 679.952 L1290.68 679.952 L1290.12 679.952 L1289.56 679.952 L1289 679.952 L1288.45 679.952 L1287.89 679.952 L1287.33 679.952 L1286.77 679.952 L1286.21 679.952 L1285.65 679.952 L1285.09 679.952 L1284.53 679.952 L1283.97 679.952 L1283.41 679.952 L1282.85 679.952 L1282.29 679.952 L1281.73 679.952 L1281.18 679.952 L1280.62 679.952 L1280.06 679.952 L1279.5 679.952 L1278.94 679.952 L1278.38 679.952 L1277.82 679.952 L1277.26 679.952 L1276.7 679.952 L1276.14 679.952 L1275.58 679.952 L1275.02 679.952 L1274.46 679.952 L1273.91 679.952 L1273.35 679.952 L1272.79 679.952 L1272.23 679.952 L1271.67 679.952 L1271.11 679.952 L1270.55 679.952 L1269.99 679.952 L1269.43 679.952 L1268.87 679.952 L1268.31 679.952 L1267.75 679.952 L1267.19 679.952 L1266.63 679.952 L1266.08 679.952 L1265.52 679.952 L1264.96 679.952 L1264.4 679.952 L1263.84 679.952 L1263.28 679.952 L1262.72 679.952 L1262.16 679.952 L1261.6 679.952 L1261.04 679.952 L1260.48 679.952 L1259.92 679.952 L1259.36 679.952 L1258.81 679.952 L1258.25 679.952 L1257.69 679.952 L1257.13 679.952 L1256.57 679.952 L1256.01 679.952 L1255.45 679.952 L1254.89 679.952 L1254.33 679.952 L1253.77 679.952 L1253.21 679.952 L1252.65 679.952 L1252.09 679.952 L1251.54 679.952 L1250.98 679.952 L1250.42 679.952 L1249.86 679.952 L1249.3 679.952 L1248.74 679.952 L1248.18 679.952 L1247.62 679.952 L1247.06 679.952 L1246.5 679.952 L1245.94 679.952 L1245.38 679.952 L1244.82 679.952 L1244.26 679.952 L1243.71 679.952 L1243.15 679.952 L1242.59 679.952 L1242.03 679.952 L1241.47 679.952 L1240.91 679.952 L1240.35 679.952 L1239.79 679.952 L1239.23 679.952 L1238.67 679.952 L1238.11 679.952 L1237.55 679.952 L1236.99 679.952 L1236.44 679.952 L1235.88 679.952 L1235.32 679.952 L1234.76 679.952 L1234.2 679.952 L1233.64 679.952 L1233.08 679.952 L1232.52 679.952 L1231.96 679.952 L1231.4 679.952 L1230.84 679.952 L1230.28 679.952 L1229.72 679.952 L1229.17 679.952 L1228.61 679.952 L1228.05 679.952 L1227.49 679.952 L1226.93 679.952 L1226.37 679.952 L1225.81 679.952 L1225.25 679.952 L1224.69 679.952 L1224.13 679.952 L1223.57 679.952 L1223.01 679.952 L1222.45 679.952 L1221.89 679.952 L1221.34 679.952 L1220.78 679.952 L1220.22 679.952 L1219.66 679.952 L1219.1 679.952 L1218.54 679.952 L1217.98 679.952 L1217.42 679.952 L1216.86 679.952 L1216.3 679.952 L1215.74 679.952 L1215.18 679.952 L1214.62 679.952 L1214.07 679.952 L1213.51 679.952 L1212.95 679.952 L1212.39 679.952 L1211.83 679.952 L1211.27 679.952 L1210.71 679.952 L1210.15 679.952 L1209.59 679.952 L1209.03 679.952 L1208.47 679.952 L1207.91 679.952 L1207.35 679.952 L1206.8 679.952 L1206.24 679.952 L1205.68 679.952 L1205.12 679.952 L1204.56 679.952 L1204 679.952 L1203.44 679.952 L1202.88 679.952 L1202.32 679.952 L1201.76 679.952 L1201.2 679.952 L1200.64 679.952 L1200.08 679.952 L1199.52 679.952 L1198.97 679.952 L1198.41 679.952 L1197.85 679.952 L1197.29 679.952 L1196.73 679.952 L1196.17 679.952 L1195.61 679.952 L1195.05 679.952 L1194.49 679.952 L1193.93 679.952 L1193.37 679.952 L1192.81 679.952 L1192.25 679.952 L1191.7 679.952 L1191.14 679.952 L1190.58 679.952 L1190.02 679.952 L1189.46 679.952 L1188.9 679.952 L1188.34 679.952 L1187.78 679.952 L1187.22 679.952 L1186.66 679.952 L1186.1 679.952 L1185.54 679.952 L1184.98 679.952 L1184.43 679.952 L1183.87 679.952 L1183.31 679.952 L1182.75 679.952 L1182.19 679.952 L1181.63 679.952 L1181.07 679.952 L1180.51 679.952 L1179.95 679.952 L1179.39 679.952 L1178.83 679.952 L1178.27 679.952 L1177.71 679.952 L1177.15 679.952 L1176.6 679.952 L1176.04 679.952 L1175.48 679.952 L1174.92 679.952 L1174.36 679.952 L1173.8 679.952 L1173.24 679.952 L1172.68 679.952 L1172.12 679.952 L1171.56 679.952 L1171 679.952 L1170.44 679.952 L1169.88 679.952 L1169.33 679.952 L1168.77 679.952 L1168.21 679.952 L1167.65 679.952 L1167.09 679.952 L1166.53 679.952 L1165.97 679.952 L1165.41 679.952 L1164.85 679.952 L1164.29 679.952 L1163.73 679.952 L1163.17 679.952 L1162.61 679.952 L1162.05 679.952 L1161.5 679.952 L1160.94 679.952 L1160.38 679.952 L1159.82 679.952 L1159.26 679.952 L1158.7 679.952 L1158.14 679.952 L1157.58 679.952 L1157.02 679.952 L1156.46 679.952 L1155.9 679.952 L1155.34 679.952 L1154.78 679.952 L1154.23 679.952 L1153.67 679.952 L1153.11 679.952 L1152.55 679.952 L1151.99 679.952 L1151.43 679.952 L1150.87 679.952 L1150.31 679.952 L1149.75 679.952 L1149.19 679.952 L1148.63 679.952 L1148.07 679.952 L1147.51 679.952 L1146.96 679.952 L1146.4 679.952 L1145.84 679.952 L1145.28 679.952 L1144.72 679.952 L1144.16 679.952 L1143.6 679.952 L1143.04 679.952 L1142.48 679.952 L1141.92 679.952 L1141.36 679.952 L1140.8 679.952 L1140.24 679.952 L1139.68 679.952 L1139.13 679.952 L1138.57 679.952 L1138.01 679.952 L1137.45 679.952 L1136.89 679.952 L1136.33 679.952 L1135.77 679.952 L1135.21 679.952 L1134.65 679.952 L1134.09 679.952 L1133.53 679.952 L1132.97 679.952 L1132.41 679.952 L1131.86 679.952 L1131.3 679.952 L1130.74 679.952 L1130.18 679.952 L1129.62 679.952 L1129.06 679.952 L1128.5 679.952 L1127.94 679.952 L1127.38 679.952 L1126.82 679.952 L1126.26 679.952 L1125.7 679.952 L1125.14 679.952 L1124.59 679.952 L1124.03 679.952 L1123.47 679.952 L1122.91 679.952 L1122.35 679.952 L1121.79 679.952 L1121.23 679.952 L1120.67 679.952 L1120.11 679.952 L1119.55 679.952 L1118.99 679.952 L1118.43 679.952 L1117.87 679.952 L1117.31 679.952 L1116.76 679.952 L1116.2 679.952 L1115.64 679.952 L1115.08 679.952 L1114.52 679.952 L1113.96 679.952 L1113.4 679.952 L1112.84 679.952 L1112.28 679.952 L1111.72 679.952 L1111.16 679.952 L1110.6 679.952 L1110.04 679.952 L1109.49 679.952 L1108.93 679.952 L1108.37 679.952 L1107.81 679.952 L1107.25 679.952 L1106.69 679.952 L1106.13 679.952 L1105.57 679.952 L1105.01 679.952 L1104.45 679.952 L1103.89 679.952 L1103.33 679.952 L1102.77 679.952 L1102.22 679.952 L1101.66 679.952 L1101.1 679.952 L1100.54 679.952 L1099.98 679.952 L1099.42 679.952 L1098.86 679.952 L1098.3 679.952 L1097.74 679.952 L1097.18 679.952 L1096.62 679.952 L1096.06 679.952 L1095.5 679.952 L1094.94 679.952 L1094.39 679.952 L1093.83 679.952 L1093.27 679.952 L1092.71 679.952 L1092.15 679.952 L1091.59 679.952 L1091.03 679.952 L1090.47 679.952 L1089.91 679.952 L1089.35 679.952 L1088.79 679.952 L1088.23 679.952 L1087.67 679.952 L1087.12 679.952 L1086.56 679.952 L1086 679.952 L1085.44 679.952 L1084.88 679.952 L1084.32 679.952 L1083.76 679.952 L1083.2 679.952 L1082.64 679.952 L1082.08 679.952 L1081.52 679.952 L1080.96 679.952 L1080.4 679.952 L1079.85 679.952 L1079.29 679.952 L1078.73 679.952 L1078.17 679.952 L1077.61 679.952 L1077.05 679.952 L1076.49 679.952 L1075.93 679.952 L1075.37 679.952 L1074.81 679.952 L1074.25 679.952 L1073.69 679.952 L1073.13 679.952 L1072.57 679.952 L1072.02 679.952 L1071.46 679.952 L1070.9 679.952 L1070.34 679.952 L1069.78 679.952 L1069.22 679.952 L1068.66 679.952 L1068.1 679.952 L1067.54 679.952 L1066.98 679.952 L1066.42 679.952 L1065.86 679.952 L1065.3 679.952 L1064.75 679.952 L1064.19 679.952 L1063.63 679.952 L1063.07 679.952 L1062.51 679.952 L1061.95 679.952 L1061.39 679.952 L1060.83 679.952 L1060.27 679.952 L1059.71 679.952 L1059.15 679.952 L1058.59 679.952 L1058.03 679.952 L1057.48 679.952 L1056.92 679.952 L1056.36 679.952 L1055.8 679.952 L1055.24 679.952 L1054.68 679.952 L1054.12 679.952 L1053.56 679.952 L1053 679.952 L1052.44 679.952 L1051.88 679.952 L1051.32 679.952 L1050.76 679.952 L1050.2 679.952 L1049.65 679.952 L1049.09 679.952 L1048.53 679.952 L1047.97 679.952 L1047.41 679.952 L1046.85 679.952 L1046.29 679.952 L1045.73 679.952 L1045.17 679.952 L1044.61 679.952 L1044.05 679.952 L1043.49 679.952 L1042.93 679.952 L1042.38 679.952 L1041.82 679.952 L1041.26 679.952 L1040.7 679.952 L1040.14 679.952 L1039.58 679.952 L1039.02 679.952 L1038.46 679.952 L1037.9 679.952 L1037.34 679.952 L1036.78 679.952 L1036.22 679.952 L1035.66 679.952 L1035.1 679.952 L1034.55 679.952 L1033.99 679.952 L1033.43 679.952 L1032.87 679.952 L1032.31 679.952 L1031.75 679.952 L1031.19 679.952 L1030.63 679.952 L1030.07 679.952 L1029.51 679.952 L1028.95 679.952 L1028.39 679.952 L1027.83 679.952 L1027.28 679.952 L1026.72 679.952 L1026.16 679.952 L1025.6 679.952 L1025.04 679.952 L1024.48 679.952 L1023.92 679.952 L1023.36 679.952 L1022.8 679.952 L1022.24 679.952 L1021.68 679.952 L1021.12 679.952 L1020.56 679.952 L1020.01 679.952 L1019.45 679.952 L1018.89 679.952 L1018.33 679.952 L1017.77 679.952 L1017.21 679.952 L1016.65 679.952 L1016.09 679.952 L1015.53 679.952 L1014.97 679.952 L1014.41 679.952 L1013.85 679.952 L1013.29 679.952 L1012.73 679.952 L1012.18 679.952 L1011.62 679.952 L1011.06 679.952 L1010.5 679.952 L1009.94 679.952 L1009.38 679.952 L1008.82 679.952 L1008.26 679.952 L1007.7 679.952 L1007.14 679.952 L1006.58 679.952 L1006.02 679.952 L1005.46 679.952 L1004.91 679.952 L1004.35 679.952 L1003.79 679.952 L1003.23 679.952 L1002.67 679.952 L1002.11 679.952 L1001.55 679.952 L1000.99 679.952 L1000.43 679.952 L999.872 679.952 L999.313 679.952 L998.754 679.952 L998.194 679.952 L997.635 679.952 L997.076 679.952 L996.517 679.952 L995.957 679.952 L995.398 679.952 L994.839 679.952 L994.28 679.952 L993.72 679.952 L993.161 679.952 L992.602 679.952 L992.043 679.952 L991.483 679.952 L990.924 679.952 L990.365 679.952 L989.806 679.952 L989.246 679.952 L988.687 679.952 L988.128 679.952 L987.569 679.952 L987.009 679.952 L986.45 679.952 L985.891 679.952 L985.332 679.952 L984.772 679.952 L984.213 679.952 L983.654 679.952 L983.095 679.952 L982.535 679.952 L981.976 679.952 L981.417 679.952 L980.858 679.952 L980.298 679.952 L979.739 679.952 L979.18 679.952 L978.621 679.952 L978.061 679.952 L977.502 679.952 L976.943 679.952 L976.384 679.952 L975.824 679.952 L975.265 679.952 L974.706 679.952 L974.147 679.952 L973.587 679.952 L973.028 679.952 L972.469 679.952 L971.91 679.952 L971.35 679.952 L970.791 679.952 L970.232 679.952 L969.673 679.952 L969.113 679.952 L968.554 679.952 L967.995 679.952 L967.436 679.952 L966.876 679.952 L966.317 679.952 L965.758 679.952 L965.199 679.952 L964.639 679.952 L964.08 679.952 L963.521 679.952 L962.962 679.952 L962.402 679.952 L961.843 679.952 L961.284 679.952 L960.725 679.952 L960.165 679.952 L959.606 679.952 L959.047 679.952 L958.488 679.952 L957.928 679.952 L957.369 679.952 L956.81 679.952 L956.251 679.952 L955.691 679.952 L955.132 679.952 L954.573 679.952 L954.014 679.952 L953.454 679.952 L952.895 679.952 L952.336 679.952 L951.777 679.952 L951.217 679.952 L950.658 679.952 L950.099 679.952 L949.54 679.952 L948.98 679.952 L948.421 679.952 L947.862 679.952 L947.303 679.952 L946.743 679.952 L946.184 679.952 L945.625 679.952 L945.066 679.952 L944.506 679.952 L943.947 679.952 L943.388 679.952 L942.829 679.952 L942.269 679.952 L941.71 679.952 L941.151 679.952 L940.592 679.952 L940.032 679.952 L939.473 679.952 L938.914 679.952 L938.355 679.952 L937.795 679.952 L937.236 679.952 L936.677 679.952 L936.118 679.952 L935.558 679.952 L934.999 679.952 L934.44 679.952 L933.881 679.952 L933.321 679.952 L932.762 679.952 L932.203 679.952 L931.644 679.952 L931.084 679.952 L930.525 679.952 L929.966 679.952 L929.406 679.952 L928.847 679.952 L928.288 679.952 L927.729 679.952 L927.169 679.952 L926.61 679.952 L926.051 679.952 L925.492 679.952 L924.932 679.952 L924.373 679.952 L923.814 679.952 L923.255 679.952 L922.695 679.952 L922.136 679.952 L921.577 679.952 L921.018 679.952 L920.458 679.952 L919.899 679.952 L919.34 679.952 L918.781 679.952 L918.221 679.952 L917.662 679.952 L917.103 679.952 L916.544 679.952 L915.984 679.952 L915.425 679.952 L914.866 679.952 L914.307 679.952 L913.747 679.952 L913.188 679.952 L912.629 679.952 L912.07 679.952 L911.51 679.952 L910.951 679.952 L910.392 679.952 L909.833 679.952 L909.273 679.952 L908.714 679.952 L908.155 679.952 L907.596 679.952 L907.036 679.952 L906.477 679.952 L905.918 679.952 L905.359 679.952 L904.799 679.952 L904.24 679.952 L903.681 679.952 L903.122 679.952 L902.562 679.952 L902.003 679.952 L901.444 679.952 L900.885 679.952 L900.325 679.952 L899.766 679.952 L899.207 679.952 L898.648 679.952 L898.088 679.952 L897.529 679.952 L896.97 679.952 L896.411 679.952 L895.851 679.952 L895.292 679.952 L894.733 679.952 L894.174 679.952 L893.614 679.952 L893.055 679.952 L892.496 679.952 L891.937 679.952 L891.377 679.952 L890.818 679.952 L890.259 679.952 L889.7 679.952 L889.14 679.952 L888.581 679.952 L888.022 679.952 L887.463 679.952 L886.903 679.952 L886.344 679.952 L885.785 679.952 L885.226 679.952 L884.666 679.952 L884.107 679.952 L883.548 679.952 L882.989 679.952 L882.429 679.952 L881.87 679.952 L881.311 679.952 L880.752 679.952 L880.192 679.952 L879.633 679.952 L879.074 679.952 L878.515 679.952 L877.955 679.952 L877.396 679.952 L876.837 679.952 L876.278 679.952 L875.718 679.952 L875.159 679.952 L874.6 679.952 L874.041 679.952 L873.481 679.952 L872.922 679.952 L872.363 679.952 L871.804 679.952 L871.244 679.952 L870.685 679.952 L870.126 679.952 L869.567 679.952 L869.007 679.952 L868.448 679.952 L867.889 679.952 L867.33 679.952 L866.77 679.952 L866.211 679.952 L865.652 679.952 L865.093 679.952 L864.533 679.952 L863.974 679.952 L863.415 679.952 L862.856 679.952 L862.296 679.952 L861.737 679.952 L861.178 679.952 L860.619 679.952 L860.059 679.952 L859.5 679.952 L858.941 679.952 L858.382 679.952 L857.822 679.952 L857.263 679.952 L856.704 679.952 L856.145 679.952 L855.585 679.952 L855.026 679.952 L854.467 679.952 L853.908 679.952 L853.348 679.952 L852.789 679.952 L852.23 679.952 L851.671 679.952 L851.111 679.952 L850.552 679.952 L849.993 679.952 L849.434 679.952 L848.874 679.952 L848.315 679.952 L847.756 679.952 L847.197 679.952 L846.637 679.952 L846.078 679.952 L845.519 679.952 L844.96 679.952 L844.4 679.952 L843.841 679.952 L843.282 679.952 L842.723 679.952 L842.163 679.952 L841.604 679.952 L841.045 679.952 L840.486 679.952 L839.926 679.952 L839.367 679.952 L838.808 679.952 L838.249 679.952 L837.689 679.952 L837.13 679.952 L836.571 679.952 L836.012 679.952 L835.452 679.952 L834.893 679.952 L834.334 679.952 L833.775 679.952 L833.215 679.952 L832.656 679.952 L832.097 679.952 L831.538 679.952 L830.978 679.952 L830.419 679.952 L829.86 679.952 L829.301 679.952 L828.741 679.952 L828.182 679.952 L827.623 679.952 L827.064 679.952 L826.504 679.952 L825.945 679.952 L825.386 679.952 L824.827 679.952 L824.267 679.952 L823.708 679.952 L823.149 679.952 L822.59 679.952 L822.03 679.952 L821.471 679.952 L820.912 679.952 L820.353 679.952 L819.793 679.952 L819.234 679.952 L818.675 679.952 L818.116 679.952 L817.556 679.952 L816.997 679.952 L816.438 679.952 L815.879 679.952 L815.319 679.952 L814.76 679.952 L814.201 679.952 L813.642 679.952 L813.082 679.952 L812.523 679.952 L811.964 679.952 L811.405 679.952 L810.845 679.952 L810.286 679.952 L809.727 679.952 L809.168 679.952 L808.608 679.952 L808.049 679.952 L807.49 679.952 L806.931 679.952 L806.371 679.952 L805.812 679.952 L805.253 679.952 L804.693 679.952 L804.134 679.952 L803.575 679.952 L803.016 679.952 L802.456 679.952 L801.897 679.952 L801.338 679.952 L800.779 679.952 L800.219 679.952 L799.66 679.952 L799.101 679.952 L798.542 679.952 L797.982 679.952 L797.423 679.952 L796.864 679.952 L796.305 679.952 L795.745 679.952 L795.186 679.952 L794.627 679.952 L794.068 679.952 L793.508 679.952 L792.949 679.952 L792.39 679.952 L791.831 679.952 L791.271 679.952 L790.712 679.952 L790.153 679.952 L789.594 679.952 L789.034 679.952 L788.475 679.952 L787.916 679.952 L787.357 679.952 L786.797 679.952 L786.238 679.952 L785.679 679.952 L785.12 679.952 L784.56 679.952 L784.001 679.952 L783.442 679.952 L782.883 679.952 L782.323 679.952 L781.764 679.952 L781.205 679.952 L780.646 679.952 L780.086 679.952 L779.527 679.952 L778.968 679.952 L778.409 679.952 L777.849 679.952 L777.29 679.952 L776.731 679.952 L776.172 679.952 L775.612 679.952 L775.053 679.952 L774.494 679.952 L773.935 679.952 L773.375 679.952 L772.816 679.952 L772.257 679.952 L771.698 679.952 L771.138 679.952 L770.579 679.952 L770.02 679.952 L769.461 679.952 L768.901 679.952 L768.342 679.952 L767.783 679.952 L767.224 679.952 L766.664 679.952 L766.105 679.952 L765.546 679.952 L764.987 679.952 L764.427 679.952 L763.868 679.952 L763.309 679.952 L762.75 679.952 L762.19 679.952 L761.631 679.952 L761.072 679.952 L760.513 679.952 L759.953 679.952 L759.394 679.952 L758.835 679.952 L758.276 679.952 L757.716 679.952 L757.157 679.952 L756.598 679.952 L756.039 679.952 L755.479 679.952 L754.92 679.952 L754.361 679.952 L753.802 679.952 L753.242 679.952 L752.683 679.952 L752.124 679.952 L751.565 679.952 L751.005 679.952 L750.446 679.952 L749.887 679.952 L749.328 679.952 L748.768 679.952 L748.209 679.952 L747.65 679.952 L747.091 679.952 L746.531 679.952 L745.972 679.952 L745.413 679.952 L744.854 679.952 L744.294 679.952 L743.735 679.952 L743.176 679.952 L742.617 679.952 L742.057 679.952 L741.498 679.952 L740.939 679.952 L740.38 679.952 L739.82 679.952 L739.261 679.952 L738.702 679.952 L738.143 679.952 L737.583 679.952 L737.024 679.952 L736.465 679.952 L735.906 679.952 L735.346 679.952 L734.787 679.952 L734.228 679.952 L733.669 679.952 L733.109 679.952 L732.55 679.952 L731.991 679.952 L731.432 679.952 L730.872 679.952 L730.313 679.952 L729.754 679.952 L729.195 679.952 L728.635 679.952 L728.076 679.952 L727.517 679.952 L726.958 679.952 L726.398 679.952 L725.839 679.952 L725.28 679.952 L724.721 679.952 L724.161 679.952 L723.602 679.952 L723.043 679.952 L722.484 679.952 L721.924 679.952 L721.365 679.952 L720.806 679.952 L720.247 679.952  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.877 720.806,684.877 721.365,684.877 721.924,684.877 722.484,684.877 723.043,684.877 723.602,684.877 724.161,684.877 724.721,684.877 725.28,684.877 725.839,684.877 726.398,684.877 726.958,684.877 727.517,684.877 728.076,684.877 728.635,684.877 729.195,684.877 729.754,684.877 730.313,684.877 730.872,684.877 731.432,684.877 731.991,684.877 732.55,684.877 733.109,684.877 733.669,684.877 734.228,684.877 734.787,684.877 735.346,684.877 735.906,684.877 736.465,684.877 737.024,684.877 737.583,684.877 738.143,684.877 738.702,684.877 739.261,684.877 739.82,684.877 740.38,684.877 740.939,684.877 741.498,684.877 742.057,684.877 742.617,684.877 743.176,684.877 743.735,684.877 744.294,684.877 744.854,684.877 745.413,684.877 745.972,684.877 746.531,684.877 747.091,684.877 747.65,684.877 748.209,684.877 748.768,684.877 749.328,684.877 749.887,684.877 750.446,684.877 751.005,684.877 751.565,684.877 752.124,684.877 752.683,684.877 753.242,684.877 753.802,684.877 754.361,684.877 754.92,684.877 755.479,684.877 756.039,684.877 756.598,684.877 757.157,684.877 757.716,684.877 758.276,684.877 758.835,684.877 759.394,684.877 759.953,684.877 760.513,684.877 761.072,684.877 761.631,684.877 762.19,684.877 762.75,684.877 763.309,684.877 763.868,684.877 764.427,684.877 764.987,684.877 765.546,684.877 766.105,684.877 766.664,684.877 767.224,684.877 767.783,684.877 768.342,684.877 768.901,684.877 769.461,684.877 770.02,684.877 770.579,684.877 771.138,684.877 771.698,684.877 772.257,684.877 772.816,684.877 773.375,684.877 773.935,684.877 774.494,684.877 775.053,684.877 775.612,684.877 776.172,684.877 776.731,684.877 777.29,684.877 777.849,684.877 778.409,684.877 778.968,684.877 779.527,684.877 780.086,684.877 780.646,684.877 781.205,684.877 781.764,684.877 782.323,684.877 782.883,684.877 783.442,684.877 784.001,684.877 784.56,684.877 785.12,684.877 785.679,684.877 786.238,684.877 786.797,684.877 787.357,684.877 787.916,684.877 788.475,684.877 789.034,684.877 789.594,684.877 790.153,684.877 790.712,684.877 791.271,684.877 791.831,684.877 792.39,684.877 792.949,684.877 793.508,684.877 794.068,684.877 794.627,684.877 795.186,684.877 795.745,684.877 796.305,684.877 796.864,684.877 797.423,684.877 797.982,684.877 798.542,684.877 799.101,684.877 799.66,684.877 800.219,684.877 800.779,684.877 801.338,684.877 801.897,684.877 802.456,684.877 803.016,684.877 803.575,684.877 804.134,684.877 804.693,684.877 805.253,684.877 805.812,684.877 806.371,684.877 806.931,684.877 807.49,684.877 808.049,684.877 808.608,684.877 809.168,684.877 809.727,684.877 810.286,684.877 810.845,684.877 811.405,684.877 811.964,684.877 812.523,684.877 813.082,684.877 813.642,684.877 814.201,684.877 814.76,684.877 815.319,684.877 815.879,684.877 816.438,684.877 816.997,684.877 817.556,684.877 818.116,684.877 818.675,684.877 819.234,684.877 819.793,684.877 820.353,684.877 820.912,684.877 821.471,684.877 822.03,684.877 822.59,684.877 823.149,684.877 823.708,684.877 824.267,684.877 824.827,684.877 825.386,684.877 825.945,684.877 826.504,684.877 827.064,684.877 827.623,684.877 828.182,684.877 828.741,684.877 829.301,684.877 829.86,684.877 830.419,684.877 830.978,684.877 831.538,684.877 832.097,684.877 832.656,684.877 833.215,684.877 833.775,684.877 834.334,684.877 834.893,684.877 835.452,684.877 836.012,684.877 836.571,684.877 837.13,684.877 837.689,684.877 838.249,684.877 838.808,684.877 839.367,684.877 839.926,684.877 840.486,684.877 841.045,684.877 841.604,684.877 842.163,684.877 842.723,684.877 843.282,684.877 843.841,684.877 844.4,684.877 844.96,684.877 845.519,684.877 846.078,684.877 846.637,684.877 847.197,684.877 847.756,684.877 848.315,684.877 848.874,684.877 849.434,684.877 849.993,684.877 850.552,684.877 851.111,684.877 851.671,684.877 852.23,684.877 852.789,684.877 853.348,684.877 853.908,684.877 854.467,684.877 855.026,684.877 855.585,684.877 856.145,684.877 856.704,684.877 857.263,684.877 857.822,684.877 858.382,684.877 858.941,684.877 859.5,684.877 860.059,684.877 860.619,684.877 861.178,684.877 861.737,684.877 862.296,684.877 862.856,684.877 863.415,684.877 863.974,684.877 864.533,684.877 865.093,684.877 865.652,684.877 866.211,684.877 866.77,684.877 867.33,684.877 867.889,684.877 868.448,684.877 869.007,684.877 869.567,684.877 870.126,684.877 870.685,684.877 871.244,684.877 871.804,684.877 872.363,684.877 872.922,684.877 873.481,684.877 874.041,684.877 874.6,684.877 875.159,684.877 875.718,684.877 876.278,684.877 876.837,684.877 877.396,684.877 877.955,684.877 878.515,684.877 879.074,684.877 879.633,684.877 880.192,684.877 880.752,684.877 881.311,684.877 881.87,684.877 882.429,684.877 882.989,684.877 883.548,684.877 884.107,684.877 884.666,684.877 885.226,684.877 885.785,684.877 886.344,684.877 886.903,684.877 887.463,684.877 888.022,684.877 888.581,684.877 889.14,684.877 889.7,684.877 890.259,684.877 890.818,684.877 891.377,684.877 891.937,684.877 892.496,684.877 893.055,684.877 893.614,684.877 894.174,684.877 894.733,684.877 895.292,684.877 895.851,684.877 896.411,684.877 896.97,684.877 897.529,684.877 898.088,684.877 898.648,684.877 899.207,684.877 899.766,684.877 900.325,684.877 900.885,684.877 901.444,684.877 902.003,684.877 902.562,684.877 903.122,684.877 903.681,684.877 904.24,684.877 904.799,684.877 905.359,684.877 905.918,684.877 906.477,684.877 907.036,684.877 907.596,684.877 908.155,684.877 908.714,684.877 909.273,684.877 909.833,684.877 910.392,684.877 910.951,684.877 911.51,684.877 912.07,684.877 912.629,684.877 913.188,684.877 913.747,684.877 914.307,684.877 914.866,684.877 915.425,684.877 915.984,684.877 916.544,684.877 917.103,684.877 917.662,684.877 918.221,684.877 918.781,684.877 919.34,684.877 919.899,684.877 920.458,684.877 921.018,684.877 921.577,684.877 922.136,684.877 922.695,684.877 923.255,684.877 923.814,684.877 924.373,684.877 924.932,684.877 925.492,684.877 926.051,684.877 926.61,684.877 927.169,684.877 927.729,684.877 928.288,684.877 928.847,684.877 929.406,684.877 929.966,684.877 930.525,684.877 931.084,684.877 931.644,684.877 932.203,684.877 932.762,684.877 933.321,684.877 933.881,684.877 934.44,684.877 934.999,684.877 935.558,684.877 936.118,684.877 936.677,684.877 937.236,684.877 937.795,684.877 938.355,684.877 938.914,684.877 939.473,684.877 940.032,684.877 940.592,684.877 941.151,684.877 941.71,684.877 942.269,684.877 942.829,684.877 943.388,684.877 943.947,684.877 944.506,684.877 945.066,684.877 945.625,684.877 946.184,684.877 946.743,684.877 947.303,684.877 947.862,684.877 948.421,684.877 948.98,684.877 949.54,684.877 950.099,684.877 950.658,684.877 951.217,684.877 951.777,684.877 952.336,684.877 952.895,684.877 953.454,684.877 954.014,684.877 954.573,684.877 955.132,684.877 955.691,684.877 956.251,684.877 956.81,684.877 957.369,684.877 957.928,684.877 958.488,684.877 959.047,684.877 959.606,684.877 960.165,684.877 960.725,684.877 961.284,684.877 961.843,684.877 962.402,684.877 962.962,684.877 963.521,684.877 964.08,684.877 964.639,684.877 965.199,684.877 965.758,684.877 966.317,684.877 966.876,684.877 967.436,684.877 967.995,684.877 968.554,684.877 969.113,684.877 969.673,684.877 970.232,684.877 970.791,684.877 971.35,684.877 971.91,684.877 972.469,684.877 973.028,684.877 973.587,684.877 974.147,684.877 974.706,684.877 975.265,684.877 975.824,684.877 976.384,684.877 976.943,684.877 977.502,684.877 978.061,684.877 978.621,684.877 979.18,684.877 979.739,684.877 980.298,684.877 980.858,684.877 981.417,684.877 981.976,684.877 982.535,684.877 983.095,684.877 983.654,684.877 984.213,684.877 984.772,684.877 985.332,684.877 985.891,684.877 986.45,684.877 987.009,684.877 987.569,684.877 988.128,684.877 988.687,684.877 989.246,684.877 989.806,684.877 990.365,684.877 990.924,684.877 991.483,684.877 992.043,684.877 992.602,684.877 993.161,684.877 993.72,684.877 994.28,684.877 994.839,684.877 995.398,684.877 995.957,684.877 996.517,684.877 997.076,684.877 997.635,684.877 998.194,684.877 998.754,684.877 999.313,684.877 999.872,684.877 1000.43,684.877 1000.99,684.877 1001.55,684.877 1002.11,684.877 1002.67,684.877 1003.23,684.877 1003.79,684.877 1004.35,684.877 1004.91,684.877 1005.46,684.877 1006.02,684.877 1006.58,684.877 1007.14,684.877 1007.7,684.877 1008.26,684.877 1008.82,684.877 1009.38,684.877 1009.94,684.877 1010.5,684.877 1011.06,684.877 1011.62,684.877 1012.18,684.877 1012.73,684.877 1013.29,684.877 1013.85,684.877 1014.41,684.877 1014.97,684.877 1015.53,684.877 1016.09,684.877 1016.65,684.877 1017.21,684.877 1017.77,684.877 1018.33,684.877 1018.89,684.877 1019.45,684.877 1020.01,684.877 1020.56,684.877 1021.12,684.877 1021.68,684.877 1022.24,684.877 1022.8,684.877 1023.36,684.877 1023.92,684.877 1024.48,684.877 1025.04,684.877 1025.6,684.877 1026.16,684.877 1026.72,684.877 1027.28,684.877 1027.83,684.877 1028.39,684.877 1028.95,684.877 1029.51,684.877 1030.07,684.877 1030.63,684.877 1031.19,684.877 1031.75,684.877 1032.31,684.877 1032.87,684.877 1033.43,684.877 1033.99,684.877 1034.55,684.877 1035.1,684.877 1035.66,684.877 1036.22,684.877 1036.78,684.877 1037.34,684.877 1037.9,684.877 1038.46,684.877 1039.02,684.877 1039.58,684.877 1040.14,684.877 1040.7,684.877 1041.26,684.877 1041.82,684.877 1042.38,684.877 1042.93,684.877 1043.49,684.877 1044.05,684.877 1044.61,684.877 1045.17,684.877 1045.73,684.877 1046.29,684.877 1046.85,684.877 1047.41,684.877 1047.97,684.877 1048.53,684.877 1049.09,684.877 1049.65,684.877 1050.2,684.877 1050.76,684.877 1051.32,684.877 1051.88,684.877 1052.44,684.877 1053,684.877 1053.56,684.877 1054.12,684.877 1054.68,684.877 1055.24,684.877 1055.8,684.877 1056.36,684.877 1056.92,684.877 1057.48,684.877 1058.03,684.877 1058.59,684.877 1059.15,684.877 1059.71,684.877 1060.27,684.877 1060.83,684.877 1061.39,684.877 1061.95,684.877 1062.51,684.877 1063.07,684.877 1063.63,684.877 1064.19,684.877 1064.75,684.877 1065.3,684.877 1065.86,684.877 1066.42,684.877 1066.98,684.877 1067.54,684.877 1068.1,684.877 1068.66,684.877 1069.22,684.877 1069.78,684.877 1070.34,684.877 1070.9,684.877 1071.46,684.877 1072.02,684.877 1072.57,684.877 1073.13,684.877 1073.69,684.877 1074.25,684.877 1074.81,684.877 1075.37,684.877 1075.93,684.877 1076.49,684.877 1077.05,684.877 1077.61,684.877 1078.17,684.877 1078.73,684.877 1079.29,684.877 1079.85,684.877 1080.4,684.877 1080.96,684.877 1081.52,684.877 1082.08,684.877 1082.64,684.877 1083.2,684.877 1083.76,684.877 1084.32,684.877 1084.88,684.877 1085.44,684.877 1086,684.877 1086.56,684.877 1087.12,684.877 1087.67,684.877 1088.23,684.877 1088.79,684.877 1089.35,684.877 1089.91,684.877 1090.47,684.877 1091.03,684.877 1091.59,684.877 1092.15,684.877 1092.71,684.877 1093.27,684.877 1093.83,684.877 1094.39,684.877 1094.94,684.877 1095.5,684.877 1096.06,684.877 1096.62,684.877 1097.18,684.877 1097.74,684.877 1098.3,684.877 1098.86,684.877 1099.42,684.877 1099.98,684.877 1100.54,684.877 1101.1,684.877 1101.66,684.877 1102.22,684.877 1102.77,684.877 1103.33,684.877 1103.89,684.877 1104.45,684.877 1105.01,684.877 1105.57,684.877 1106.13,684.877 1106.69,684.877 1107.25,684.877 1107.81,684.877 1108.37,684.877 1108.93,684.877 1109.49,684.877 1110.04,684.877 1110.6,684.877 1111.16,684.877 1111.72,684.877 1112.28,684.877 1112.84,684.877 1113.4,684.877 1113.96,684.877 1114.52,684.877 1115.08,684.877 1115.64,684.877 1116.2,684.877 1116.76,684.877 1117.31,684.877 1117.87,684.877 1118.43,684.877 1118.99,684.877 1119.55,684.877 1120.11,684.877 1120.67,684.877 1121.23,684.877 1121.79,684.877 1122.35,684.877 1122.91,684.877 1123.47,684.877 1124.03,684.877 1124.59,684.877 1125.14,684.877 1125.7,684.877 1126.26,684.877 1126.82,684.877 1127.38,684.877 1127.94,684.877 1128.5,684.877 1129.06,684.877 1129.62,684.877 1130.18,684.877 1130.74,684.877 1131.3,684.877 1131.86,684.877 1132.41,684.877 1132.97,684.877 1133.53,684.877 1134.09,684.877 1134.65,684.877 1135.21,684.877 1135.77,684.877 1136.33,684.877 1136.89,684.877 1137.45,684.877 1138.01,684.877 1138.57,684.877 1139.13,684.877 1139.68,684.877 1140.24,684.877 1140.8,684.877 1141.36,684.877 1141.92,684.877 1142.48,684.877 1143.04,684.877 1143.6,684.877 1144.16,684.877 1144.72,684.877 1145.28,684.877 1145.84,684.877 1146.4,684.877 1146.96,684.877 1147.51,684.877 1148.07,684.877 1148.63,684.877 1149.19,684.877 1149.75,684.877 1150.31,684.877 1150.87,684.877 1151.43,684.877 1151.99,684.877 1152.55,684.877 1153.11,684.877 1153.67,684.877 1154.23,684.877 1154.78,684.877 1155.34,684.877 1155.9,684.877 1156.46,684.877 1157.02,684.877 1157.58,684.877 1158.14,684.877 1158.7,684.877 1159.26,684.877 1159.82,684.877 1160.38,684.877 1160.94,684.877 1161.5,684.877 1162.05,684.877 1162.61,684.877 1163.17,684.877 1163.73,684.877 1164.29,684.877 1164.85,684.877 1165.41,684.877 1165.97,684.877 1166.53,684.877 1167.09,684.877 1167.65,684.877 1168.21,684.877 1168.77,684.877 1169.33,684.877 1169.88,684.877 1170.44,684.877 1171,684.877 1171.56,684.877 1172.12,684.877 1172.68,684.877 1173.24,684.877 1173.8,684.877 1174.36,684.877 1174.92,684.877 1175.48,684.877 1176.04,684.877 1176.6,684.877 1177.15,684.877 1177.71,684.877 1178.27,684.877 1178.83,684.877 1179.39,684.877 1179.95,684.877 1180.51,684.877 1181.07,684.877 1181.63,684.877 1182.19,684.877 1182.75,684.877 1183.31,684.877 1183.87,684.877 1184.43,684.877 1184.98,684.877 1185.54,684.877 1186.1,684.877 1186.66,684.877 1187.22,684.877 1187.78,684.877 1188.34,684.877 1188.9,684.877 1189.46,684.877 1190.02,684.877 1190.58,684.877 1191.14,684.877 1191.7,684.877 1192.25,684.877 1192.81,684.877 1193.37,684.877 1193.93,684.877 1194.49,684.877 1195.05,684.877 1195.61,684.877 1196.17,684.877 1196.73,684.877 1197.29,684.877 1197.85,684.877 1198.41,684.877 1198.97,684.877 1199.52,684.877 1200.08,684.877 1200.64,684.877 1201.2,684.877 1201.76,684.877 1202.32,684.877 1202.88,684.877 1203.44,684.877 1204,684.877 1204.56,684.877 1205.12,684.877 1205.68,684.877 1206.24,684.877 1206.8,684.877 1207.35,684.877 1207.91,684.877 1208.47,684.877 1209.03,684.877 1209.59,684.877 1210.15,684.877 1210.71,684.877 1211.27,684.877 1211.83,684.877 1212.39,684.877 1212.95,684.877 1213.51,684.877 1214.07,684.877 1214.62,684.877 1215.18,684.877 1215.74,684.877 1216.3,684.877 1216.86,684.877 1217.42,684.877 1217.98,684.877 1218.54,684.877 1219.1,684.877 1219.66,684.877 1220.22,684.877 1220.78,684.877 1221.34,684.877 1221.89,684.877 1222.45,684.877 1223.01,684.877 1223.57,684.877 1224.13,684.877 1224.69,684.877 1225.25,684.877 1225.81,684.877 1226.37,684.877 1226.93,684.877 1227.49,684.877 1228.05,684.877 1228.61,684.877 1229.17,684.877 1229.72,684.877 1230.28,684.877 1230.84,684.877 1231.4,684.877 1231.96,684.877 1232.52,684.877 1233.08,684.877 1233.64,684.877 1234.2,684.877 1234.76,684.877 1235.32,684.877 1235.88,684.877 1236.44,684.877 1236.99,684.877 1237.55,684.877 1238.11,684.877 1238.67,684.877 1239.23,684.877 1239.79,684.877 1240.35,684.877 1240.91,684.877 1241.47,684.877 1242.03,684.877 1242.59,684.877 1243.15,684.877 1243.71,684.877 1244.26,684.877 1244.82,684.877 1245.38,684.877 1245.94,684.877 1246.5,684.877 1247.06,684.877 1247.62,684.877 1248.18,684.877 1248.74,684.877 1249.3,684.877 1249.86,684.877 1250.42,684.877 1250.98,684.877 1251.54,684.877 1252.09,684.877 1252.65,684.877 1253.21,684.877 1253.77,684.877 1254.33,684.877 1254.89,684.877 1255.45,684.877 1256.01,684.877 1256.57,684.877 1257.13,684.877 1257.69,684.877 1258.25,684.877 1258.81,684.877 1259.36,684.877 1259.92,684.877 1260.48,684.877 1261.04,684.877 1261.6,684.877 1262.16,684.877 1262.72,684.877 1263.28,684.877 1263.84,684.877 1264.4,684.877 1264.96,684.877 1265.52,684.877 1266.08,684.877 1266.63,684.877 1267.19,684.877 1267.75,684.877 1268.31,684.877 1268.87,684.877 1269.43,684.877 1269.99,684.877 1270.55,684.877 1271.11,684.877 1271.67,684.877 1272.23,684.877 1272.79,684.877 1273.35,684.877 1273.91,684.877 1274.46,684.877 1275.02,684.877 1275.58,684.877 1276.14,684.877 1276.7,684.877 1277.26,684.877 1277.82,684.877 1278.38,684.877 1278.94,684.877 1279.5,684.877 1280.06,684.877 1280.62,684.877 1281.18,684.877 1281.73,684.877 1282.29,684.877 1282.85,684.877 1283.41,684.877 1283.97,684.877 1284.53,684.877 1285.09,684.877 1285.65,684.877 1286.21,684.877 1286.77,684.877 1287.33,684.877 1287.89,684.877 1288.45,684.877 1289,684.877 1289.56,684.877 1290.12,684.877 1290.68,684.877 1291.24,684.877 1291.8,684.877 1292.36,684.877 1292.92,684.877 1293.48,684.877 1294.04,684.877 1294.6,684.877 1295.16,684.877 1295.72,684.877 1296.28,684.877 1296.83,684.877 1297.39,684.877 1297.95,684.877 1298.51,684.877 1299.07,684.877 1299.63,684.877 1300.19,684.877 1300.75,684.877 1301.31,684.877 1301.87,684.877 1302.43,684.877 1302.99,684.877 1303.55,684.877 1304.1,684.877 1304.66,684.877 1305.22,684.877 1305.78,684.877 1306.34,684.877 1306.9,684.877 1307.46,684.877 1308.02,684.877 1308.58,684.877 1309.14,684.877 1309.7,684.877 1310.26,684.877 1310.82,684.877 1311.38,684.877 1311.93,684.877 1312.49,684.877 1313.05,684.877 1313.61,684.877 1314.17,684.877 1314.73,684.877 1315.29,684.877 1315.85,684.877 1316.41,684.877 1316.97,684.877 1317.53,684.877 1318.09,684.877 1318.65,684.877 1319.2,684.877 1319.76,684.877 1320.32,684.877 1320.88,684.877 1321.44,684.877 1322,684.877 1322.56,684.877 1323.12,684.877 1323.68,684.877 1324.24,684.877 1324.8,684.877 1325.36,684.877 1325.92,684.877 1326.47,684.877 1327.03,684.877 1327.59,684.877 1328.15,684.877 1328.71,684.877 1329.27,684.877 1329.83,684.877 1330.39,684.877 1330.95,684.877 1331.51,684.877 1332.07,684.877 1332.63,684.877 1333.19,684.877 1333.75,684.877 1334.3,684.877 1334.86,684.877 1335.42,684.877 1335.98,684.877 1336.54,684.877 1337.1,684.877 1337.66,684.877 1338.22,684.877 1338.78,684.877 1339.34,684.877 1339.9,684.877 1340.46,684.877 1341.02,684.877 1341.57,684.877 1342.13,684.877 1342.69,684.877 1343.25,684.877 1343.81,684.877 1344.37,684.877 1344.93,684.877 1345.49,684.877 1346.05,684.877 1346.61,684.877 1347.17,684.877 1347.73,684.877 1348.29,684.877 1348.84,684.877 1349.4,684.877 1349.96,684.877 1350.52,684.877 1351.08,684.877 1351.64,684.877 1352.2,684.877 1352.76,684.877 1353.32,684.877 1353.88,684.877 1354.44,684.877 1355,684.877 1355.56,684.877 1356.12,684.877 1356.67,684.877 1357.23,684.877 1357.79,684.877 1358.35,684.877 1358.91,684.877 1359.47,684.877 1360.03,684.877 1360.59,684.877 1361.15,684.877 1361.71,684.877 1362.27,684.877 1362.83,684.877 1363.39,684.877 1363.94,684.877 1364.5,684.877 1365.06,684.877 1365.62,684.877 1366.18,684.877 1366.74,684.877 1367.3,684.877 1367.86,684.877 1368.42,684.877 1368.98,684.877 1369.54,684.877 1370.1,684.877 1370.66,684.877 1371.21,684.877 1371.77,684.877 1372.33,684.877 1372.89,684.877 1373.45,684.877 1374.01,684.877 1374.57,684.877 1375.13,684.877 1375.69,684.877 1376.25,684.877 1376.81,684.877 1377.37,684.877 1377.93,684.877 1378.49,684.877 1379.04,684.877 1379.6,684.877 1380.16,684.877 1380.72,684.877 1381.28,684.877 1381.84,684.877 1382.4,684.877 1382.96,684.877 1383.52,684.877 1384.08,684.877 1384.64,684.877 1385.2,684.877 1385.76,684.877 1386.31,684.877 1386.87,684.877 1387.43,684.877 1387.99,684.877 1388.55,684.877 1389.11,684.877 1389.67,684.877 1390.23,684.877 1390.79,684.877 1391.35,684.877 1391.91,684.877 1392.47,684.877 1393.03,684.877 1393.58,684.877 1394.14,684.877 1394.7,684.877 1395.26,684.877 1395.82,684.877 1396.38,684.877 1396.94,684.877 1397.5,684.877 1398.06,684.877 1398.62,684.877 1399.18,684.877 1399.74,684.877 1400.3,684.877 1400.86,684.877 1401.41,684.877 1401.97,684.877 1402.53,684.877 1403.09,684.877 1403.65,684.877 1404.21,684.877 1404.77,684.877 1405.33,684.877 1405.89,684.877 1406.45,684.877 1407.01,684.877 1407.57,684.877 1408.13,684.877 1408.68,684.877 1409.24,684.877 1409.8,684.877 1410.36,684.877 1410.92,684.877 1411.48,684.877 1412.04,684.877 1412.6,684.877 1413.16,684.877 1413.72,684.877 1414.28,684.877 1414.84,684.877 1415.4,684.877 1415.95,684.877 1416.51,684.877 1417.07,684.877 1417.63,684.877 1418.19,684.877 1418.75,684.877 1419.31,684.877 1419.87,684.877 1420.43,684.877 1420.99,684.877 1421.55,684.877 1422.11,684.877 1422.67,684.877 1423.23,684.877 1423.78,684.877 1424.34,684.877 1424.9,684.877 1425.46,684.877 1426.02,684.877 1426.58,684.877 1427.14,684.877 1427.7,684.877 1428.26,684.877 1428.82,684.877 1429.38,684.877 1429.94,684.877 1430.5,684.877 1431.05,684.877 1431.61,684.877 1432.17,684.877 1432.73,684.877 1433.29,684.877 1433.85,684.877 1434.41,684.877 1434.97,684.877 1435.53,684.877 1436.09,684.877 1436.65,684.877 1437.21,684.877 1437.77,684.877 1438.33,684.877 1438.88,684.877 1439.44,684.877 1440,684.877 1440.56,684.877 1441.12,684.877 1441.68,684.877 1442.24,684.877 1442.8,684.877 1443.36,684.877 1443.92,684.877 1444.48,684.877 1445.04,684.877 1445.6,684.877 1446.15,684.877 1446.71,684.877 1447.27,684.877 1447.83,684.877 1448.39,684.877 1448.95,684.877 1449.51,684.877 1450.07,684.877 1450.63,684.877 1451.19,684.877 1451.75,684.877 1452.31,684.877 1452.87,684.877 1453.42,684.877 1453.98,684.877 1454.54,684.877 1455.1,684.877 1455.66,684.877 1456.22,684.877 1456.78,684.877 1457.34,684.877 1457.9,684.877 1458.46,684.877 1459.02,684.877 1459.58,684.877 1460.14,684.877 1460.7,684.877 1461.25,684.877 1461.81,684.877 1462.37,684.877 1462.93,684.877 1463.49,684.877 1464.05,684.877 1464.61,684.877 1465.17,684.877 1465.73,684.877 1466.29,684.877 1466.85,684.877 1467.41,684.877 1467.97,684.877 1468.52,684.877 1469.08,684.877 1469.64,684.877 1470.2,684.877 1470.76,684.877 1471.32,684.877 1471.88,684.877 1472.44,684.877 1473,684.877 1473.56,684.877 1474.12,684.877 1474.68,684.877 1475.24,684.877 1475.79,684.877 1476.35,684.877 1476.91,684.877 1477.47,684.877 1478.03,684.877 1478.59,684.877 1479.15,684.877 1479.71,684.877 1480.27,684.877 1480.83,684.877 1481.39,684.877 1481.95,684.877 1482.51,684.877 1483.07,684.877 1483.62,684.877 1484.18,684.877 1484.74,684.877 1485.3,684.877 1485.86,684.877 1486.42,684.877 1486.98,684.877 1487.54,684.877 1488.1,684.877 1488.66,684.877 1489.22,684.877 1489.78,684.877 1490.34,684.877 1490.89,684.877 1491.45,684.877 1492.01,684.877 1492.57,684.877 1493.13,684.877 1493.69,684.877 1494.25,684.877 1494.81,684.877 1495.37,684.877 1495.93,684.877 1496.49,684.877 1497.05,684.877 1497.61,684.877 1498.16,684.877 1498.72,684.877 1499.28,684.877 1499.84,684.877 1500.4,684.877 1500.96,684.877 1501.52,684.877 1502.08,684.877 1502.64,684.877 1503.2,684.877 1503.76,684.877 1504.32,684.877 1504.88,684.877 1505.44,684.877 1505.99,684.877 1506.55,684.877 1507.11,684.877 1507.67,684.877 1508.23,684.877 1508.79,684.877 1509.35,684.877 1509.91,684.877 1510.47,684.877 1511.03,684.877 1511.59,684.877 1512.15,684.877 1512.71,684.877 1513.26,684.877 1513.82,684.877 1514.38,684.877 1514.94,684.877 1515.5,684.877 1516.06,684.877 1516.62,684.877 1517.18,684.877 1517.74,684.877 1518.3,684.877 1518.86,684.877 1519.42,684.877 1519.98,684.877 1520.53,684.877 1521.09,684.877 1521.65,684.877 1522.21,684.877 1522.77,684.877 1523.33,684.877 1523.89,684.877 1524.45,684.877 1525.01,684.877 1525.57,684.877 1526.13,684.877 1526.69,684.877 1527.25,684.877 1527.81,684.877 1528.36,684.877 1528.92,684.877 1529.48,684.877 1530.04,684.877 1530.6,684.877 1531.16,684.877 1531.72,684.877 1532.28,684.877 1532.84,684.877 1533.4,684.877 1533.96,684.877 1534.52,684.877 1535.08,684.877 1535.63,684.877 1536.19,684.877 1536.75,684.877 1537.31,684.877 1537.87,684.877 1538.43,684.877 1538.99,684.877 1539.55,684.877 1540.11,684.877 1540.67,684.877 1541.23,684.877 1541.79,684.877 1542.35,684.877 1542.9,684.877 1543.46,684.877 1544.02,684.877 1544.58,684.877 1545.14,684.877 1545.7,684.877 1546.26,684.877 1546.82,684.877 1547.38,684.877 1547.94,684.877 1548.5,684.877 1549.06,684.877 1549.62,684.877 1550.18,684.877 1550.73,684.877 1551.29,684.877 1551.85,684.877 1552.41,684.877 1552.97,684.877 1553.53,684.877 1554.09,684.877 1554.65,684.877 1555.21,684.877 1555.77,684.877 1556.33,684.877 1556.89,684.877 1557.45,684.877 1558,684.877 1558.56,684.877 1559.12,684.877 1559.68,684.877 1560.24,684.877 1560.8,684.877 1561.36,684.877 1561.92,684.877 1562.48,684.877 1563.04,684.877 1563.6,684.877 1564.16,684.877 1564.72,684.877 1565.28,684.877 1565.83,684.877 1566.39,684.877 1566.95,684.877 1567.51,684.877 1568.07,684.877 1568.63,684.877 1569.19,684.877 1569.75,684.877 1570.31,684.877 1570.87,684.877 1571.43,684.877 1571.99,684.877 1572.55,684.877 1573.1,684.877 1573.66,684.877 1574.22,684.877 1574.78,684.877 1575.34,684.877 1575.9,684.877 1576.46,684.877 1577.02,684.877 1577.58,684.877 1578.14,684.877 1578.7,684.877 1579.26,684.877 1579.82,684.877 1580.37,684.877 1580.93,684.877 1581.49,684.877 1582.05,684.877 1582.61,684.877 1583.17,684.877 1583.73,684.877 1584.29,684.877 1584.85,684.877 1585.41,684.877 1585.97,684.877 1586.53,684.877 1587.09,684.877 1587.65,684.877 1588.2,684.877 1588.76,684.877 1589.32,684.877 1589.88,684.877 1590.44,684.877 1591,684.877 1591.56,684.877 1592.12,684.877 1592.68,684.877 1593.24,684.877 1593.8,684.877 1594.36,684.877 1594.92,684.877 1595.47,684.877 1596.03,684.877 1596.59,684.877 1597.15,684.877 1597.71,684.877 1598.27,684.877 1598.83,684.877 1599.39,684.877 1599.95,684.877 1600.51,684.877 1601.07,684.877 1601.63,684.877 1602.19,684.877 1602.74,684.877 1603.3,684.877 1603.86,684.877 1604.42,684.877 1604.98,684.877 1605.54,684.877 1606.1,684.877 1606.66,684.877 1607.22,684.877 1607.78,684.877 1608.34,684.877 1608.9,684.877 1609.46,684.877 1610.02,684.877 1610.57,684.877 1611.13,684.877 1611.69,684.877 1612.25,684.877 1612.81,684.877 1613.37,684.877 1613.93,684.877 1614.49,684.877 1615.05,684.877 1615.61,684.877 1616.17,684.877 1616.73,684.877 1617.29,684.877 1617.84,684.877 1618.4,684.877 1618.96,684.877 1619.52,684.877 1620.08,684.877 1620.64,684.877 1621.2,684.877 1621.76,684.877 1622.32,684.877 1622.88,684.877 1623.44,684.877 1624,684.877 1624.56,684.877 1625.11,684.877 1625.67,684.877 1626.23,684.877 1626.79,684.877 1627.35,684.877 1627.91,684.877 1628.47,684.877 1629.03,684.877 1629.59,684.877 1630.15,684.877 1630.71,684.877 1631.27,684.877 1631.83,684.877 1632.39,684.877 1632.94,684.877 1633.5,684.877 1634.06,684.877 1634.62,684.877 1635.18,684.877 1635.74,684.877 1636.3,684.877 1636.86,684.877 1637.42,684.877 1637.98,684.877 1638.54,684.877 1639.1,684.877 1639.66,684.877 1640.21,684.877 1640.77,684.877 1641.33,684.877 1641.89,684.877 1642.45,684.877 1643.01,684.877 1643.57,684.877 1644.13,684.877 1644.69,684.877 1645.25,684.877 1645.81,684.877 1646.37,684.877 1646.93,684.877 1647.48,684.877 1648.04,684.877 1648.6,684.877 1649.16,684.877 1649.72,684.877 1650.28,684.877 1650.84,684.877 1651.4,684.877 1651.96,684.877 1652.52,684.877 1653.08,684.877 1653.64,684.877 1654.2,684.877 1654.76,684.877 1655.31,684.877 1655.87,684.877 1656.43,684.877 1656.99,684.877 1657.55,684.877 1658.11,684.877 1658.67,684.877 1659.23,684.877 1659.79,684.877 1660.35,684.877 1660.91,684.877 1661.47,684.877 1662.03,684.877 1662.58,684.877 1663.14,684.877 1663.7,684.877 1664.26,684.877 1664.82,684.877 1665.38,684.877 1665.94,684.877 1666.5,684.877 1667.06,684.877 1667.62,684.877 1668.18,684.877 1668.74,684.877 1669.3,684.877 1669.85,684.877 1670.41,684.877 1670.97,684.877 1671.53,684.877 1672.09,684.877 1672.65,684.877 1673.21,684.877 1673.77,684.877 1674.33,684.877 1674.89,684.877 1675.45,684.877 1676.01,684.877 1676.57,684.877 1677.13,684.877 1677.68,684.877 1678.24,684.877 1678.8,684.877 1679.36,684.877 1679.92,684.877 1680.48,684.877 1681.04,684.877 1681.6,684.877 1682.16,684.877 1682.72,684.877 1683.28,684.877 1683.84,684.877 1684.4,684.877 1684.95,684.877 1685.51,684.877 1686.07,684.877 1686.63,684.877 1687.19,684.877 1687.75,684.877 1688.31,684.877 1688.87,684.877 1689.43,684.877 1689.99,684.877 1690.55,684.877 1691.11,684.877 1691.67,684.877 1692.23,684.877 1692.78,684.877 1693.34,684.877 1693.9,684.877 1694.46,684.877 1695.02,684.877 1695.58,684.877 1696.14,684.877 1696.7,684.877 1697.26,684.877 1697.82,684.877 1698.38,684.877 1698.94,684.877 1699.5,684.877 1700.05,684.877 1700.61,684.877 1701.17,684.877 1701.73,684.877 1702.29,684.877 1702.85,684.877 1703.41,684.877 1703.97,684.877 1704.53,684.877 1705.09,684.877 1705.65,684.877 1706.21,684.877 1706.77,684.877 1707.32,684.877 1707.88,684.877 1708.44,684.877 1709,684.877 1709.56,684.877 1710.12,684.877 1710.68,684.877 1711.24,684.877 1711.8,684.877 1712.36,684.877 1712.92,684.877 1713.48,684.877 1714.04,684.877 1714.6,684.877 1715.15,684.877 1715.71,684.877 1716.27,684.877 1716.83,684.877 1717.39,684.877 1717.95,684.877 1718.51,684.877 1719.07,684.877 1719.63,684.877 1720.19,684.877 1720.75,684.877 1721.31,684.877 1721.87,684.877 1722.42,684.877 1722.98,684.877 1723.54,684.877 1724.1,684.877 1724.66,684.877 1725.22,684.877 1725.78,684.877 1726.34,684.877 1726.9,684.877 1727.46,684.877 1728.02,684.877 1728.58,684.877 1729.14,684.877 1729.69,684.877 1730.25,684.877 1730.81,684.877 1731.37,684.877 1731.93,684.877 1732.49,684.877 1733.05,684.877 1733.61,684.877 1734.17,684.877 1734.73,684.877 1735.29,684.877 1735.85,684.877 1736.41,684.877 1736.97,684.877 1737.52,684.877 1738.08,684.877 1738.64,684.877 1739.2,684.877 1739.76,684.877 1740.32,684.877 1740.88,684.877 1741.44,684.877 1742,684.877 1742.56,684.877 1743.12,684.877 1743.68,684.877 1744.24,684.877 1744.79,684.877 1745.35,684.877 1745.91,684.877 1746.47,684.877 1747.03,684.877 1747.59,684.877 1748.15,684.877 1748.71,684.877 1749.27,684.877 1749.83,684.877 1750.39,684.877 1750.95,684.877 1751.51,684.877 1752.06,684.877 1752.62,684.877 1753.18,684.877 1753.74,684.877 1754.3,684.877 1754.86,684.877 1755.42,684.877 1755.98,684.877 1756.54,684.877 1757.1,684.877 1757.66,684.877 1758.22,684.877 1758.78,684.877 1759.34,684.877 1759.89,684.877 1760.45,684.877 1761.01,684.877 1761.57,684.877 1762.13,684.877 1762.69,684.877 1763.25,684.877 1763.81,684.877 1764.37,684.877 1764.93,684.877 1765.49,684.877 1766.05,684.877 1766.61,684.877 1767.16,684.877 1767.72,684.877 1768.28,684.877 1768.84,684.877 1769.4,684.877 1769.96,684.877 1770.52,684.877 1771.08,684.877 1771.64,684.877 1772.2,684.877 1772.76,684.877 1773.32,684.877 1773.88,684.877 1774.43,684.877 1774.99,684.877 1775.55,684.877 1776.11,684.877 1776.67,684.877 1777.23,684.877 1777.79,684.877 1778.35,684.877 1778.91,684.877 1779.47,684.877 1780.03,684.877 1780.59,684.877 1781.15,684.877 1781.71,684.877 1782.26,684.877 1782.82,684.877 1783.38,684.877 1783.94,684.877 1784.5,684.877 1785.06,684.877 1785.62,684.877 1786.18,684.877 1786.74,684.877 1787.3,684.877 1787.86,684.877 1788.42,684.877 1788.98,684.877 1789.53,684.877 1790.09,684.877 1790.65,684.877 1791.21,684.877 1791.77,684.877 1792.33,684.877 1792.89,684.877 1793.45,684.877 1794.01,684.877 1794.57,684.877 1795.13,684.877 1795.69,684.877 1796.25,684.877 1796.8,684.877 1797.36,684.877 1797.92,684.877 1798.48,684.877 1799.04,684.877 1799.6,684.877 1800.16,684.877 1800.72,684.877 1801.28,684.877 1801.84,684.877 1802.4,684.877 1802.96,684.877 1803.52,684.877 1804.08,684.877 1804.63,684.877 1805.19,684.877 1805.75,684.877 1806.31,684.877 1806.87,684.877 1807.43,684.877 1807.99,684.877 1808.55,684.877 1809.11,684.877 1809.67,684.877 1810.23,684.877 1810.79,684.877 1811.35,684.877 1811.9,684.877 1812.46,684.877 1813.02,684.877 1813.58,684.877 1814.14,684.877 1814.7,684.877 1815.26,684.877 1815.82,684.877 1816.38,684.877 1816.94,684.877 1817.5,684.877 1818.06,684.877 1818.62,684.877 1819.18,684.877 1819.73,684.877 1820.29,684.877 1820.85,684.877 1821.41,684.877 1821.97,684.877 1822.53,684.877 1823.09,684.877 1823.65,684.877 1824.21,684.877 1824.77,684.877 1825.33,684.877 1825.89,684.877 1826.45,684.877 1827,684.877 1827.56,684.877 1828.12,684.877 1828.68,684.877 1829.24,684.877 1829.8,684.877 1830.36,684.877 1830.92,684.877 1831.48,684.877 1832.04,684.877 1832.6,684.877 1833.16,684.877 1833.72,684.877 1834.27,684.877 1834.83,684.877 1835.39,684.877 1835.95,684.877 1836.51,684.877 1837.07,684.877 1837.63,684.877 1838.19,684.877 \"/>\n<path clip-path=\"url(#clip593)\" d=\"M720.247 684.36 L720.806 684.36 L721.365 684.36 L721.924 684.36 L722.484 684.36 L723.043 684.36 L723.602 684.36 L724.161 684.36 L724.721 684.36 L725.28 684.36 L725.839 684.36 L726.398 684.36 L726.958 684.36 L727.517 684.36 L728.076 684.36 L728.635 684.36 L729.195 684.36 L729.754 684.36 L730.313 684.36 L730.872 684.36 L731.432 684.36 L731.991 684.36 L732.55 684.36 L733.109 684.36 L733.669 684.36 L734.228 684.36 L734.787 684.36 L735.346 684.36 L735.906 684.36 L736.465 684.36 L737.024 684.36 L737.583 684.36 L738.143 684.36 L738.702 684.36 L739.261 684.36 L739.82 684.36 L740.38 684.36 L740.939 684.36 L741.498 684.36 L742.057 684.36 L742.617 684.36 L743.176 684.36 L743.735 684.36 L744.294 684.36 L744.854 684.36 L745.413 684.36 L745.972 684.36 L746.531 684.36 L747.091 684.36 L747.65 684.36 L748.209 684.36 L748.768 684.36 L749.328 684.36 L749.887 684.36 L750.446 684.36 L751.005 684.36 L751.565 684.36 L752.124 684.36 L752.683 684.36 L753.242 684.36 L753.802 684.36 L754.361 684.36 L754.92 684.36 L755.479 684.36 L756.039 684.36 L756.598 684.36 L757.157 684.36 L757.716 684.36 L758.276 684.36 L758.835 684.36 L759.394 684.36 L759.953 684.36 L760.513 684.36 L761.072 684.36 L761.631 684.36 L762.19 684.36 L762.75 684.36 L763.309 684.36 L763.868 684.36 L764.427 684.36 L764.987 684.36 L765.546 684.36 L766.105 684.36 L766.664 684.36 L767.224 684.36 L767.783 684.36 L768.342 684.36 L768.901 684.36 L769.461 684.36 L770.02 684.36 L770.579 684.36 L771.138 684.36 L771.698 684.36 L772.257 684.36 L772.816 684.36 L773.375 684.36 L773.935 684.36 L774.494 684.36 L775.053 684.36 L775.612 684.36 L776.172 684.36 L776.731 684.36 L777.29 684.36 L777.849 684.36 L778.409 684.36 L778.968 684.36 L779.527 684.36 L780.086 684.36 L780.646 684.36 L781.205 684.36 L781.764 684.36 L782.323 684.36 L782.883 684.36 L783.442 684.36 L784.001 684.36 L784.56 684.36 L785.12 684.36 L785.679 684.36 L786.238 684.36 L786.797 684.36 L787.357 684.36 L787.916 684.36 L788.475 684.36 L789.034 684.36 L789.594 684.36 L790.153 684.36 L790.712 684.36 L791.271 684.36 L791.831 684.36 L792.39 684.36 L792.949 684.36 L793.508 684.36 L794.068 684.36 L794.627 684.36 L795.186 684.36 L795.745 684.36 L796.305 684.36 L796.864 684.36 L797.423 684.36 L797.982 684.36 L798.542 684.36 L799.101 684.36 L799.66 684.36 L800.219 684.36 L800.779 684.36 L801.338 684.36 L801.897 684.36 L802.456 684.36 L803.016 684.36 L803.575 684.36 L804.134 684.36 L804.693 684.36 L805.253 684.36 L805.812 684.36 L806.371 684.36 L806.931 684.36 L807.49 684.36 L808.049 684.36 L808.608 684.36 L809.168 684.36 L809.727 684.36 L810.286 684.36 L810.845 684.36 L811.405 684.36 L811.964 684.36 L812.523 684.36 L813.082 684.36 L813.642 684.36 L814.201 684.36 L814.76 684.36 L815.319 684.36 L815.879 684.36 L816.438 684.36 L816.997 684.36 L817.556 684.36 L818.116 684.36 L818.675 684.36 L819.234 684.36 L819.793 684.36 L820.353 684.36 L820.912 684.36 L821.471 684.36 L822.03 684.36 L822.59 684.36 L823.149 684.36 L823.708 684.36 L824.267 684.36 L824.827 684.36 L825.386 684.36 L825.945 684.36 L826.504 684.36 L827.064 684.36 L827.623 684.36 L828.182 684.36 L828.741 684.36 L829.301 684.36 L829.86 684.36 L830.419 684.36 L830.978 684.36 L831.538 684.36 L832.097 684.36 L832.656 684.36 L833.215 684.36 L833.775 684.36 L834.334 684.36 L834.893 684.36 L835.452 684.36 L836.012 684.36 L836.571 684.36 L837.13 684.36 L837.689 684.36 L838.249 684.36 L838.808 684.36 L839.367 684.36 L839.926 684.36 L840.486 684.36 L841.045 684.36 L841.604 684.36 L842.163 684.36 L842.723 684.36 L843.282 684.36 L843.841 684.36 L844.4 684.36 L844.96 684.36 L845.519 684.36 L846.078 684.36 L846.637 684.36 L847.197 684.36 L847.756 684.36 L848.315 684.36 L848.874 684.36 L849.434 684.36 L849.993 684.36 L850.552 684.36 L851.111 684.36 L851.671 684.36 L852.23 684.36 L852.789 684.36 L853.348 684.36 L853.908 684.36 L854.467 684.36 L855.026 684.36 L855.585 684.36 L856.145 684.36 L856.704 684.36 L857.263 684.36 L857.822 684.36 L858.382 684.36 L858.941 684.36 L859.5 684.36 L860.059 684.36 L860.619 684.36 L861.178 684.36 L861.737 684.36 L862.296 684.36 L862.856 684.36 L863.415 684.36 L863.974 684.36 L864.533 684.36 L865.093 684.36 L865.652 684.36 L866.211 684.36 L866.77 684.36 L867.33 684.36 L867.889 684.36 L868.448 684.36 L869.007 684.36 L869.567 684.36 L870.126 684.36 L870.685 684.36 L871.244 684.36 L871.804 684.36 L872.363 684.36 L872.922 684.36 L873.481 684.36 L874.041 684.36 L874.6 684.36 L875.159 684.36 L875.718 684.36 L876.278 684.36 L876.837 684.36 L877.396 684.36 L877.955 684.36 L878.515 684.36 L879.074 684.36 L879.633 684.36 L880.192 684.36 L880.752 684.36 L881.311 684.36 L881.87 684.36 L882.429 684.36 L882.989 684.36 L883.548 684.36 L884.107 684.36 L884.666 684.36 L885.226 684.36 L885.785 684.36 L886.344 684.36 L886.903 684.36 L887.463 684.36 L888.022 684.36 L888.581 684.36 L889.14 684.36 L889.7 684.36 L890.259 684.36 L890.818 684.36 L891.377 684.36 L891.937 684.36 L892.496 684.36 L893.055 684.36 L893.614 684.36 L894.174 684.36 L894.733 684.36 L895.292 684.36 L895.851 684.36 L896.411 684.36 L896.97 684.36 L897.529 684.36 L898.088 684.36 L898.648 684.36 L899.207 684.36 L899.766 684.36 L900.325 684.36 L900.885 684.36 L901.444 684.36 L902.003 684.36 L902.562 684.36 L903.122 684.36 L903.681 684.36 L904.24 684.36 L904.799 684.36 L905.359 684.36 L905.918 684.36 L906.477 684.36 L907.036 684.36 L907.596 684.36 L908.155 684.36 L908.714 684.36 L909.273 684.36 L909.833 684.36 L910.392 684.36 L910.951 684.36 L911.51 684.36 L912.07 684.36 L912.629 684.36 L913.188 684.36 L913.747 684.36 L914.307 684.36 L914.866 684.36 L915.425 684.36 L915.984 684.36 L916.544 684.36 L917.103 684.36 L917.662 684.36 L918.221 684.36 L918.781 684.36 L919.34 684.36 L919.899 684.36 L920.458 684.36 L921.018 684.36 L921.577 684.36 L922.136 684.36 L922.695 684.36 L923.255 684.36 L923.814 684.36 L924.373 684.36 L924.932 684.36 L925.492 684.36 L926.051 684.36 L926.61 684.36 L927.169 684.36 L927.729 684.36 L928.288 684.36 L928.847 684.36 L929.406 684.36 L929.966 684.36 L930.525 684.36 L931.084 684.36 L931.644 684.36 L932.203 684.36 L932.762 684.36 L933.321 684.36 L933.881 684.36 L934.44 684.36 L934.999 684.36 L935.558 684.36 L936.118 684.36 L936.677 684.36 L937.236 684.36 L937.795 684.36 L938.355 684.36 L938.914 684.36 L939.473 684.36 L940.032 684.36 L940.592 684.36 L941.151 684.36 L941.71 684.36 L942.269 684.36 L942.829 684.36 L943.388 684.36 L943.947 684.36 L944.506 684.36 L945.066 684.36 L945.625 684.36 L946.184 684.36 L946.743 684.36 L947.303 684.36 L947.862 684.36 L948.421 684.36 L948.98 684.36 L949.54 684.36 L950.099 684.36 L950.658 684.36 L951.217 684.36 L951.777 684.36 L952.336 684.36 L952.895 684.36 L953.454 684.36 L954.014 684.36 L954.573 684.36 L955.132 684.36 L955.691 684.36 L956.251 684.36 L956.81 684.36 L957.369 684.36 L957.928 684.36 L958.488 684.36 L959.047 684.36 L959.606 684.36 L960.165 684.36 L960.725 684.36 L961.284 684.36 L961.843 684.36 L962.402 684.36 L962.962 684.36 L963.521 684.36 L964.08 684.36 L964.639 684.36 L965.199 684.36 L965.758 684.36 L966.317 684.36 L966.876 684.36 L967.436 684.36 L967.995 684.36 L968.554 684.36 L969.113 684.36 L969.673 684.36 L970.232 684.36 L970.791 684.36 L971.35 684.36 L971.91 684.36 L972.469 684.36 L973.028 684.36 L973.587 684.36 L974.147 684.36 L974.706 684.36 L975.265 684.36 L975.824 684.36 L976.384 684.36 L976.943 684.36 L977.502 684.36 L978.061 684.36 L978.621 684.36 L979.18 684.36 L979.739 684.36 L980.298 684.36 L980.858 684.36 L981.417 684.36 L981.976 684.36 L982.535 684.36 L983.095 684.36 L983.654 684.36 L984.213 684.36 L984.772 684.36 L985.332 684.36 L985.891 684.36 L986.45 684.36 L987.009 684.36 L987.569 684.36 L988.128 684.36 L988.687 684.36 L989.246 684.36 L989.806 684.36 L990.365 684.36 L990.924 684.36 L991.483 684.36 L992.043 684.36 L992.602 684.36 L993.161 684.36 L993.72 684.36 L994.28 684.36 L994.839 684.36 L995.398 684.36 L995.957 684.36 L996.517 684.36 L997.076 684.36 L997.635 684.36 L998.194 684.36 L998.754 684.36 L999.313 684.36 L999.872 684.36 L1000.43 684.36 L1000.99 684.36 L1001.55 684.36 L1002.11 684.36 L1002.67 684.36 L1003.23 684.36 L1003.79 684.36 L1004.35 684.36 L1004.91 684.36 L1005.46 684.36 L1006.02 684.36 L1006.58 684.36 L1007.14 684.36 L1007.7 684.36 L1008.26 684.36 L1008.82 684.36 L1009.38 684.36 L1009.94 684.36 L1010.5 684.36 L1011.06 684.36 L1011.62 684.36 L1012.18 684.36 L1012.73 684.36 L1013.29 684.36 L1013.85 684.36 L1014.41 684.36 L1014.97 684.36 L1015.53 684.36 L1016.09 684.36 L1016.65 684.36 L1017.21 684.36 L1017.77 684.36 L1018.33 684.36 L1018.89 684.36 L1019.45 684.36 L1020.01 684.36 L1020.56 684.36 L1021.12 684.36 L1021.68 684.36 L1022.24 684.36 L1022.8 684.36 L1023.36 684.36 L1023.92 684.36 L1024.48 684.36 L1025.04 684.36 L1025.6 684.36 L1026.16 684.36 L1026.72 684.36 L1027.28 684.36 L1027.83 684.36 L1028.39 684.36 L1028.95 684.36 L1029.51 684.36 L1030.07 684.36 L1030.63 684.36 L1031.19 684.36 L1031.75 684.36 L1032.31 684.36 L1032.87 684.36 L1033.43 684.36 L1033.99 684.36 L1034.55 684.36 L1035.1 684.36 L1035.66 684.36 L1036.22 684.36 L1036.78 684.36 L1037.34 684.36 L1037.9 684.36 L1038.46 684.36 L1039.02 684.36 L1039.58 684.36 L1040.14 684.36 L1040.7 684.36 L1041.26 684.36 L1041.82 684.36 L1042.38 684.36 L1042.93 684.36 L1043.49 684.36 L1044.05 684.36 L1044.61 684.36 L1045.17 684.36 L1045.73 684.36 L1046.29 684.36 L1046.85 684.36 L1047.41 684.36 L1047.97 684.36 L1048.53 684.36 L1049.09 684.36 L1049.65 684.36 L1050.2 684.36 L1050.76 684.36 L1051.32 684.36 L1051.88 684.36 L1052.44 684.36 L1053 684.36 L1053.56 684.36 L1054.12 684.36 L1054.68 684.36 L1055.24 684.36 L1055.8 684.36 L1056.36 684.36 L1056.92 684.36 L1057.48 684.36 L1058.03 684.36 L1058.59 684.36 L1059.15 684.36 L1059.71 684.36 L1060.27 684.36 L1060.83 684.36 L1061.39 684.36 L1061.95 684.36 L1062.51 684.36 L1063.07 684.36 L1063.63 684.36 L1064.19 684.36 L1064.75 684.36 L1065.3 684.36 L1065.86 684.36 L1066.42 684.36 L1066.98 684.36 L1067.54 684.36 L1068.1 684.36 L1068.66 684.36 L1069.22 684.36 L1069.78 684.36 L1070.34 684.36 L1070.9 684.36 L1071.46 684.36 L1072.02 684.36 L1072.57 684.36 L1073.13 684.36 L1073.69 684.36 L1074.25 684.36 L1074.81 684.36 L1075.37 684.36 L1075.93 684.36 L1076.49 684.36 L1077.05 684.36 L1077.61 684.36 L1078.17 684.36 L1078.73 684.36 L1079.29 684.36 L1079.85 684.36 L1080.4 684.36 L1080.96 684.36 L1081.52 684.36 L1082.08 684.36 L1082.64 684.36 L1083.2 684.36 L1083.76 684.36 L1084.32 684.36 L1084.88 684.36 L1085.44 684.36 L1086 684.36 L1086.56 684.36 L1087.12 684.36 L1087.67 684.36 L1088.23 684.36 L1088.79 684.36 L1089.35 684.36 L1089.91 684.36 L1090.47 684.36 L1091.03 684.36 L1091.59 684.36 L1092.15 684.36 L1092.71 684.36 L1093.27 684.36 L1093.83 684.36 L1094.39 684.36 L1094.94 684.36 L1095.5 684.36 L1096.06 684.36 L1096.62 684.36 L1097.18 684.36 L1097.74 684.36 L1098.3 684.36 L1098.86 684.36 L1099.42 684.36 L1099.98 684.36 L1100.54 684.36 L1101.1 684.36 L1101.66 684.36 L1102.22 684.36 L1102.77 684.36 L1103.33 684.36 L1103.89 684.36 L1104.45 684.36 L1105.01 684.36 L1105.57 684.36 L1106.13 684.36 L1106.69 684.36 L1107.25 684.36 L1107.81 684.36 L1108.37 684.36 L1108.93 684.36 L1109.49 684.36 L1110.04 684.36 L1110.6 684.36 L1111.16 684.36 L1111.72 684.36 L1112.28 684.36 L1112.84 684.36 L1113.4 684.36 L1113.96 684.36 L1114.52 684.36 L1115.08 684.36 L1115.64 684.36 L1116.2 684.36 L1116.76 684.36 L1117.31 684.36 L1117.87 684.36 L1118.43 684.36 L1118.99 684.36 L1119.55 684.36 L1120.11 684.36 L1120.67 684.36 L1121.23 684.36 L1121.79 684.36 L1122.35 684.36 L1122.91 684.36 L1123.47 684.36 L1124.03 684.36 L1124.59 684.36 L1125.14 684.36 L1125.7 684.36 L1126.26 684.36 L1126.82 684.36 L1127.38 684.36 L1127.94 684.36 L1128.5 684.36 L1129.06 684.36 L1129.62 684.36 L1130.18 684.36 L1130.74 684.36 L1131.3 684.36 L1131.86 684.36 L1132.41 684.36 L1132.97 684.36 L1133.53 684.36 L1134.09 684.36 L1134.65 684.36 L1135.21 684.36 L1135.77 684.36 L1136.33 684.36 L1136.89 684.36 L1137.45 684.36 L1138.01 684.36 L1138.57 684.36 L1139.13 684.36 L1139.68 684.36 L1140.24 684.36 L1140.8 684.36 L1141.36 684.36 L1141.92 684.36 L1142.48 684.36 L1143.04 684.36 L1143.6 684.36 L1144.16 684.36 L1144.72 684.36 L1145.28 684.36 L1145.84 684.36 L1146.4 684.36 L1146.96 684.36 L1147.51 684.36 L1148.07 684.36 L1148.63 684.36 L1149.19 684.36 L1149.75 684.36 L1150.31 684.36 L1150.87 684.36 L1151.43 684.36 L1151.99 684.36 L1152.55 684.36 L1153.11 684.36 L1153.67 684.36 L1154.23 684.36 L1154.78 684.36 L1155.34 684.36 L1155.9 684.36 L1156.46 684.36 L1157.02 684.36 L1157.58 684.36 L1158.14 684.36 L1158.7 684.36 L1159.26 684.36 L1159.82 684.36 L1160.38 684.36 L1160.94 684.36 L1161.5 684.36 L1162.05 684.36 L1162.61 684.36 L1163.17 684.36 L1163.73 684.36 L1164.29 684.36 L1164.85 684.36 L1165.41 684.36 L1165.97 684.36 L1166.53 684.36 L1167.09 684.36 L1167.65 684.36 L1168.21 684.36 L1168.77 684.36 L1169.33 684.36 L1169.88 684.36 L1170.44 684.36 L1171 684.36 L1171.56 684.36 L1172.12 684.36 L1172.68 684.36 L1173.24 684.36 L1173.8 684.36 L1174.36 684.36 L1174.92 684.36 L1175.48 684.36 L1176.04 684.36 L1176.6 684.36 L1177.15 684.36 L1177.71 684.36 L1178.27 684.36 L1178.83 684.36 L1179.39 684.36 L1179.95 684.36 L1180.51 684.36 L1181.07 684.36 L1181.63 684.36 L1182.19 684.36 L1182.75 684.36 L1183.31 684.36 L1183.87 684.36 L1184.43 684.36 L1184.98 684.36 L1185.54 684.36 L1186.1 684.36 L1186.66 684.36 L1187.22 684.36 L1187.78 684.36 L1188.34 684.36 L1188.9 684.36 L1189.46 684.36 L1190.02 684.36 L1190.58 684.36 L1191.14 684.36 L1191.7 684.36 L1192.25 684.36 L1192.81 684.36 L1193.37 684.36 L1193.93 684.36 L1194.49 684.36 L1195.05 684.36 L1195.61 684.36 L1196.17 684.36 L1196.73 684.36 L1197.29 684.36 L1197.85 684.36 L1198.41 684.36 L1198.97 684.36 L1199.52 684.36 L1200.08 684.36 L1200.64 684.36 L1201.2 684.36 L1201.76 684.36 L1202.32 684.36 L1202.88 684.36 L1203.44 684.36 L1204 684.36 L1204.56 684.36 L1205.12 684.36 L1205.68 684.36 L1206.24 684.36 L1206.8 684.36 L1207.35 684.36 L1207.91 684.36 L1208.47 684.36 L1209.03 684.36 L1209.59 684.36 L1210.15 684.36 L1210.71 684.36 L1211.27 684.36 L1211.83 684.36 L1212.39 684.36 L1212.95 684.36 L1213.51 684.36 L1214.07 684.36 L1214.62 684.36 L1215.18 684.36 L1215.74 684.36 L1216.3 684.36 L1216.86 684.36 L1217.42 684.36 L1217.98 684.36 L1218.54 684.36 L1219.1 684.36 L1219.66 684.36 L1220.22 684.36 L1220.78 684.36 L1221.34 684.36 L1221.89 684.36 L1222.45 684.36 L1223.01 684.36 L1223.57 684.36 L1224.13 684.36 L1224.69 684.36 L1225.25 684.36 L1225.81 684.36 L1226.37 684.36 L1226.93 684.36 L1227.49 684.36 L1228.05 684.36 L1228.61 684.36 L1229.17 684.36 L1229.72 684.36 L1230.28 684.36 L1230.84 684.36 L1231.4 684.36 L1231.96 684.36 L1232.52 684.36 L1233.08 684.36 L1233.64 684.36 L1234.2 684.36 L1234.76 684.36 L1235.32 684.36 L1235.88 684.36 L1236.44 684.36 L1236.99 684.36 L1237.55 684.36 L1238.11 684.36 L1238.67 684.36 L1239.23 684.36 L1239.79 684.36 L1240.35 684.36 L1240.91 684.36 L1241.47 684.36 L1242.03 684.36 L1242.59 684.36 L1243.15 684.36 L1243.71 684.36 L1244.26 684.36 L1244.82 684.36 L1245.38 684.36 L1245.94 684.36 L1246.5 684.36 L1247.06 684.36 L1247.62 684.36 L1248.18 684.36 L1248.74 684.36 L1249.3 684.36 L1249.86 684.36 L1250.42 684.36 L1250.98 684.36 L1251.54 684.36 L1252.09 684.36 L1252.65 684.36 L1253.21 684.36 L1253.77 684.36 L1254.33 684.36 L1254.89 684.36 L1255.45 684.36 L1256.01 684.36 L1256.57 684.36 L1257.13 684.36 L1257.69 684.36 L1258.25 684.36 L1258.81 684.36 L1259.36 684.36 L1259.92 684.36 L1260.48 684.36 L1261.04 684.36 L1261.6 684.36 L1262.16 684.36 L1262.72 684.36 L1263.28 684.36 L1263.84 684.36 L1264.4 684.36 L1264.96 684.36 L1265.52 684.36 L1266.08 684.36 L1266.63 684.36 L1267.19 684.36 L1267.75 684.36 L1268.31 684.36 L1268.87 684.36 L1269.43 684.36 L1269.99 684.36 L1270.55 684.36 L1271.11 684.36 L1271.67 684.36 L1272.23 684.36 L1272.79 684.36 L1273.35 684.36 L1273.91 684.36 L1274.46 684.36 L1275.02 684.36 L1275.58 684.36 L1276.14 684.36 L1276.7 684.36 L1277.26 684.36 L1277.82 684.36 L1278.38 684.36 L1278.94 684.36 L1279.5 684.36 L1280.06 684.36 L1280.62 684.36 L1281.18 684.36 L1281.73 684.36 L1282.29 684.36 L1282.85 684.36 L1283.41 684.36 L1283.97 684.36 L1284.53 684.36 L1285.09 684.36 L1285.65 684.36 L1286.21 684.36 L1286.77 684.36 L1287.33 684.36 L1287.89 684.36 L1288.45 684.36 L1289 684.36 L1289.56 684.36 L1290.12 684.36 L1290.68 684.36 L1291.24 684.36 L1291.8 684.36 L1292.36 684.36 L1292.92 684.36 L1293.48 684.36 L1294.04 684.36 L1294.6 684.36 L1295.16 684.36 L1295.72 684.36 L1296.28 684.36 L1296.83 684.36 L1297.39 684.36 L1297.95 684.36 L1298.51 684.36 L1299.07 684.36 L1299.63 684.36 L1300.19 684.36 L1300.75 684.36 L1301.31 684.36 L1301.87 684.36 L1302.43 684.36 L1302.99 684.36 L1303.55 684.36 L1304.1 684.36 L1304.66 684.36 L1305.22 684.36 L1305.78 684.36 L1306.34 684.36 L1306.9 684.36 L1307.46 684.36 L1308.02 684.36 L1308.58 684.36 L1309.14 684.36 L1309.7 684.36 L1310.26 684.36 L1310.82 684.36 L1311.38 684.36 L1311.93 684.36 L1312.49 684.36 L1313.05 684.36 L1313.61 684.36 L1314.17 684.36 L1314.73 684.36 L1315.29 684.36 L1315.85 684.36 L1316.41 684.36 L1316.97 684.36 L1317.53 684.36 L1318.09 684.36 L1318.65 684.36 L1319.2 684.36 L1319.76 684.36 L1320.32 684.36 L1320.88 684.36 L1321.44 684.36 L1322 684.36 L1322.56 684.36 L1323.12 684.36 L1323.68 684.36 L1324.24 684.36 L1324.8 684.36 L1325.36 684.36 L1325.92 684.36 L1326.47 684.36 L1327.03 684.36 L1327.59 684.36 L1328.15 684.36 L1328.71 684.36 L1329.27 684.36 L1329.83 684.36 L1330.39 684.36 L1330.95 684.36 L1331.51 684.36 L1332.07 684.36 L1332.63 684.36 L1333.19 684.36 L1333.75 684.36 L1334.3 684.36 L1334.86 684.36 L1335.42 684.36 L1335.98 684.36 L1336.54 684.36 L1337.1 684.36 L1337.66 684.36 L1338.22 684.36 L1338.78 684.36 L1339.34 684.36 L1339.9 684.36 L1340.46 684.36 L1341.02 684.36 L1341.57 684.36 L1342.13 684.36 L1342.69 684.36 L1343.25 684.36 L1343.81 684.36 L1344.37 684.36 L1344.93 684.36 L1345.49 684.36 L1346.05 684.36 L1346.61 684.36 L1347.17 684.36 L1347.73 684.36 L1348.29 684.36 L1348.84 684.36 L1349.4 684.36 L1349.96 684.36 L1350.52 684.36 L1351.08 684.36 L1351.64 684.36 L1352.2 684.36 L1352.76 684.36 L1353.32 684.36 L1353.88 684.36 L1354.44 684.36 L1355 684.36 L1355.56 684.36 L1356.12 684.36 L1356.67 684.36 L1357.23 684.36 L1357.79 684.36 L1358.35 684.36 L1358.91 684.36 L1359.47 684.36 L1360.03 684.36 L1360.59 684.36 L1361.15 684.36 L1361.71 684.36 L1362.27 684.36 L1362.83 684.36 L1363.39 684.36 L1363.94 684.36 L1364.5 684.36 L1365.06 684.36 L1365.62 684.36 L1366.18 684.36 L1366.74 684.36 L1367.3 684.36 L1367.86 684.36 L1368.42 684.36 L1368.98 684.36 L1369.54 684.36 L1370.1 684.36 L1370.66 684.36 L1371.21 684.36 L1371.77 684.36 L1372.33 684.36 L1372.89 684.36 L1373.45 684.36 L1374.01 684.36 L1374.57 684.36 L1375.13 684.36 L1375.69 684.36 L1376.25 684.36 L1376.81 684.36 L1377.37 684.36 L1377.93 684.36 L1378.49 684.36 L1379.04 684.36 L1379.6 684.36 L1380.16 684.36 L1380.72 684.36 L1381.28 684.36 L1381.84 684.36 L1382.4 684.36 L1382.96 684.36 L1383.52 684.36 L1384.08 684.36 L1384.64 684.36 L1385.2 684.36 L1385.76 684.36 L1386.31 684.36 L1386.87 684.36 L1387.43 684.36 L1387.99 684.36 L1388.55 684.36 L1389.11 684.36 L1389.67 684.36 L1390.23 684.36 L1390.79 684.36 L1391.35 684.36 L1391.91 684.36 L1392.47 684.36 L1393.03 684.36 L1393.58 684.36 L1394.14 684.36 L1394.7 684.36 L1395.26 684.36 L1395.82 684.36 L1396.38 684.36 L1396.94 684.36 L1397.5 684.36 L1398.06 684.36 L1398.62 684.36 L1399.18 684.36 L1399.74 684.36 L1400.3 684.36 L1400.86 684.36 L1401.41 684.36 L1401.97 684.36 L1402.53 684.36 L1403.09 684.36 L1403.65 684.36 L1404.21 684.36 L1404.77 684.36 L1405.33 684.36 L1405.89 684.36 L1406.45 684.36 L1407.01 684.36 L1407.57 684.36 L1408.13 684.36 L1408.68 684.36 L1409.24 684.36 L1409.8 684.36 L1410.36 684.36 L1410.92 684.36 L1411.48 684.36 L1412.04 684.36 L1412.6 684.36 L1413.16 684.36 L1413.72 684.36 L1414.28 684.36 L1414.84 684.36 L1415.4 684.36 L1415.95 684.36 L1416.51 684.36 L1417.07 684.36 L1417.63 684.36 L1418.19 684.36 L1418.75 684.36 L1419.31 684.36 L1419.87 684.36 L1420.43 684.36 L1420.99 684.36 L1421.55 684.36 L1422.11 684.36 L1422.67 684.36 L1423.23 684.36 L1423.78 684.36 L1424.34 684.36 L1424.9 684.36 L1425.46 684.36 L1426.02 684.36 L1426.58 684.36 L1427.14 684.36 L1427.7 684.36 L1428.26 684.36 L1428.82 684.36 L1429.38 684.36 L1429.94 684.36 L1430.5 684.36 L1431.05 684.36 L1431.61 684.36 L1432.17 684.36 L1432.73 684.36 L1433.29 684.36 L1433.85 684.36 L1434.41 684.36 L1434.97 684.36 L1435.53 684.36 L1436.09 684.36 L1436.65 684.36 L1437.21 684.36 L1437.77 684.36 L1438.33 684.36 L1438.88 684.36 L1439.44 684.36 L1440 684.36 L1440.56 684.36 L1441.12 684.36 L1441.68 684.36 L1442.24 684.36 L1442.8 684.36 L1443.36 684.36 L1443.92 684.36 L1444.48 684.36 L1445.04 684.36 L1445.6 684.36 L1446.15 684.36 L1446.71 684.36 L1447.27 684.36 L1447.83 684.36 L1448.39 684.36 L1448.95 684.36 L1449.51 684.36 L1450.07 684.36 L1450.63 684.36 L1451.19 684.36 L1451.75 684.36 L1452.31 684.36 L1452.87 684.36 L1453.42 684.36 L1453.98 684.36 L1454.54 684.36 L1455.1 684.36 L1455.66 684.36 L1456.22 684.36 L1456.78 684.36 L1457.34 684.36 L1457.9 684.36 L1458.46 684.36 L1459.02 684.36 L1459.58 684.36 L1460.14 684.36 L1460.7 684.36 L1461.25 684.36 L1461.81 684.36 L1462.37 684.36 L1462.93 684.36 L1463.49 684.36 L1464.05 684.36 L1464.61 684.36 L1465.17 684.36 L1465.73 684.36 L1466.29 684.36 L1466.85 684.36 L1467.41 684.36 L1467.97 684.36 L1468.52 684.36 L1469.08 684.36 L1469.64 684.36 L1470.2 684.36 L1470.76 684.36 L1471.32 684.36 L1471.88 684.36 L1472.44 684.36 L1473 684.36 L1473.56 684.36 L1474.12 684.36 L1474.68 684.36 L1475.24 684.36 L1475.79 684.36 L1476.35 684.36 L1476.91 684.36 L1477.47 684.36 L1478.03 684.36 L1478.59 684.36 L1479.15 684.36 L1479.71 684.36 L1480.27 684.36 L1480.83 684.36 L1481.39 684.36 L1481.95 684.36 L1482.51 684.36 L1483.07 684.36 L1483.62 684.36 L1484.18 684.36 L1484.74 684.36 L1485.3 684.36 L1485.86 684.36 L1486.42 684.36 L1486.98 684.36 L1487.54 684.36 L1488.1 684.36 L1488.66 684.36 L1489.22 684.36 L1489.78 684.36 L1490.34 684.36 L1490.89 684.36 L1491.45 684.36 L1492.01 684.36 L1492.57 684.36 L1493.13 684.36 L1493.69 684.36 L1494.25 684.36 L1494.81 684.36 L1495.37 684.36 L1495.93 684.36 L1496.49 684.36 L1497.05 684.36 L1497.61 684.36 L1498.16 684.36 L1498.72 684.36 L1499.28 684.36 L1499.84 684.36 L1500.4 684.36 L1500.96 684.36 L1501.52 684.36 L1502.08 684.36 L1502.64 684.36 L1503.2 684.36 L1503.76 684.36 L1504.32 684.36 L1504.88 684.36 L1505.44 684.36 L1505.99 684.36 L1506.55 684.36 L1507.11 684.36 L1507.67 684.36 L1508.23 684.36 L1508.79 684.36 L1509.35 684.36 L1509.91 684.36 L1510.47 684.36 L1511.03 684.36 L1511.59 684.36 L1512.15 684.36 L1512.71 684.36 L1513.26 684.36 L1513.82 684.36 L1514.38 684.36 L1514.94 684.36 L1515.5 684.36 L1516.06 684.36 L1516.62 684.36 L1517.18 684.36 L1517.74 684.36 L1518.3 684.36 L1518.86 684.36 L1519.42 684.36 L1519.98 684.36 L1520.53 684.36 L1521.09 684.36 L1521.65 684.36 L1522.21 684.36 L1522.77 684.36 L1523.33 684.36 L1523.89 684.36 L1524.45 684.36 L1525.01 684.36 L1525.57 684.36 L1526.13 684.36 L1526.69 684.36 L1527.25 684.36 L1527.81 684.36 L1528.36 684.36 L1528.92 684.36 L1529.48 684.36 L1530.04 684.36 L1530.6 684.36 L1531.16 684.36 L1531.72 684.36 L1532.28 684.36 L1532.84 684.36 L1533.4 684.36 L1533.96 684.36 L1534.52 684.36 L1535.08 684.36 L1535.63 684.36 L1536.19 684.36 L1536.75 684.36 L1537.31 684.36 L1537.87 684.36 L1538.43 684.36 L1538.99 684.36 L1539.55 684.36 L1540.11 684.36 L1540.67 684.36 L1541.23 684.36 L1541.79 684.36 L1542.35 684.36 L1542.9 684.36 L1543.46 684.36 L1544.02 684.36 L1544.58 684.36 L1545.14 684.36 L1545.7 684.36 L1546.26 684.36 L1546.82 684.36 L1547.38 684.36 L1547.94 684.36 L1548.5 684.36 L1549.06 684.36 L1549.62 684.36 L1550.18 684.36 L1550.73 684.36 L1551.29 684.36 L1551.85 684.36 L1552.41 684.36 L1552.97 684.36 L1553.53 684.36 L1554.09 684.36 L1554.65 684.36 L1555.21 684.36 L1555.77 684.36 L1556.33 684.36 L1556.89 684.36 L1557.45 684.36 L1558 684.36 L1558.56 684.36 L1559.12 684.36 L1559.68 684.36 L1560.24 684.36 L1560.8 684.36 L1561.36 684.36 L1561.92 684.36 L1562.48 684.36 L1563.04 684.36 L1563.6 684.36 L1564.16 684.36 L1564.72 684.36 L1565.28 684.36 L1565.83 684.36 L1566.39 684.36 L1566.95 684.36 L1567.51 684.36 L1568.07 684.36 L1568.63 684.36 L1569.19 684.36 L1569.75 684.36 L1570.31 684.36 L1570.87 684.36 L1571.43 684.36 L1571.99 684.36 L1572.55 684.36 L1573.1 684.36 L1573.66 684.36 L1574.22 684.36 L1574.78 684.36 L1575.34 684.36 L1575.9 684.36 L1576.46 684.36 L1577.02 684.36 L1577.58 684.36 L1578.14 684.36 L1578.7 684.36 L1579.26 684.36 L1579.82 684.36 L1580.37 684.36 L1580.93 684.36 L1581.49 684.36 L1582.05 684.36 L1582.61 684.36 L1583.17 684.36 L1583.73 684.36 L1584.29 684.36 L1584.85 684.36 L1585.41 684.36 L1585.97 684.36 L1586.53 684.36 L1587.09 684.36 L1587.65 684.36 L1588.2 684.36 L1588.76 684.36 L1589.32 684.36 L1589.88 684.36 L1590.44 684.36 L1591 684.36 L1591.56 684.36 L1592.12 684.36 L1592.68 684.36 L1593.24 684.36 L1593.8 684.36 L1594.36 684.36 L1594.92 684.36 L1595.47 684.36 L1596.03 684.36 L1596.59 684.36 L1597.15 684.36 L1597.71 684.36 L1598.27 684.36 L1598.83 684.36 L1599.39 684.36 L1599.95 684.36 L1600.51 684.36 L1601.07 684.36 L1601.63 684.36 L1602.19 684.36 L1602.74 684.36 L1603.3 684.36 L1603.86 684.36 L1604.42 684.36 L1604.98 684.36 L1605.54 684.36 L1606.1 684.36 L1606.66 684.36 L1607.22 684.36 L1607.78 684.36 L1608.34 684.36 L1608.9 684.36 L1609.46 684.36 L1610.02 684.36 L1610.57 684.36 L1611.13 684.36 L1611.69 684.36 L1612.25 684.36 L1612.81 684.36 L1613.37 684.36 L1613.93 684.36 L1614.49 684.36 L1615.05 684.36 L1615.61 684.36 L1616.17 684.36 L1616.73 684.36 L1617.29 684.36 L1617.84 684.36 L1618.4 684.36 L1618.96 684.36 L1619.52 684.36 L1620.08 684.36 L1620.64 684.36 L1621.2 684.36 L1621.76 684.36 L1622.32 684.36 L1622.88 684.36 L1623.44 684.36 L1624 684.36 L1624.56 684.36 L1625.11 684.36 L1625.67 684.36 L1626.23 684.36 L1626.79 684.36 L1627.35 684.36 L1627.91 684.36 L1628.47 684.36 L1629.03 684.36 L1629.59 684.36 L1630.15 684.36 L1630.71 684.36 L1631.27 684.36 L1631.83 684.36 L1632.39 684.36 L1632.94 684.36 L1633.5 684.36 L1634.06 684.36 L1634.62 684.36 L1635.18 684.36 L1635.74 684.36 L1636.3 684.36 L1636.86 684.36 L1637.42 684.36 L1637.98 684.36 L1638.54 684.36 L1639.1 684.36 L1639.66 684.36 L1640.21 684.36 L1640.77 684.36 L1641.33 684.36 L1641.89 684.36 L1642.45 684.36 L1643.01 684.36 L1643.57 684.36 L1644.13 684.36 L1644.69 684.36 L1645.25 684.36 L1645.81 684.36 L1646.37 684.36 L1646.93 684.36 L1647.48 684.36 L1648.04 684.36 L1648.6 684.36 L1649.16 684.36 L1649.72 684.36 L1650.28 684.36 L1650.84 684.36 L1651.4 684.36 L1651.96 684.36 L1652.52 684.36 L1653.08 684.36 L1653.64 684.36 L1654.2 684.36 L1654.76 684.36 L1655.31 684.36 L1655.87 684.36 L1656.43 684.36 L1656.99 684.36 L1657.55 684.36 L1658.11 684.36 L1658.67 684.36 L1659.23 684.36 L1659.79 684.36 L1660.35 684.36 L1660.91 684.36 L1661.47 684.36 L1662.03 684.36 L1662.58 684.36 L1663.14 684.36 L1663.7 684.36 L1664.26 684.36 L1664.82 684.36 L1665.38 684.36 L1665.94 684.36 L1666.5 684.36 L1667.06 684.36 L1667.62 684.36 L1668.18 684.36 L1668.74 684.36 L1669.3 684.36 L1669.85 684.36 L1670.41 684.36 L1670.97 684.36 L1671.53 684.36 L1672.09 684.36 L1672.65 684.36 L1673.21 684.36 L1673.77 684.36 L1674.33 684.36 L1674.89 684.36 L1675.45 684.36 L1676.01 684.36 L1676.57 684.36 L1677.13 684.36 L1677.68 684.36 L1678.24 684.36 L1678.8 684.36 L1679.36 684.36 L1679.92 684.36 L1680.48 684.36 L1681.04 684.36 L1681.6 684.36 L1682.16 684.36 L1682.72 684.36 L1683.28 684.36 L1683.84 684.36 L1684.4 684.36 L1684.95 684.36 L1685.51 684.36 L1686.07 684.36 L1686.63 684.36 L1687.19 684.36 L1687.75 684.36 L1688.31 684.36 L1688.87 684.36 L1689.43 684.36 L1689.99 684.36 L1690.55 684.36 L1691.11 684.36 L1691.67 684.36 L1692.23 684.36 L1692.78 684.36 L1693.34 684.36 L1693.9 684.36 L1694.46 684.36 L1695.02 684.36 L1695.58 684.36 L1696.14 684.36 L1696.7 684.36 L1697.26 684.36 L1697.82 684.36 L1698.38 684.36 L1698.94 684.36 L1699.5 684.36 L1700.05 684.36 L1700.61 684.36 L1701.17 684.36 L1701.73 684.36 L1702.29 684.36 L1702.85 684.36 L1703.41 684.36 L1703.97 684.36 L1704.53 684.36 L1705.09 684.36 L1705.65 684.36 L1706.21 684.36 L1706.77 684.36 L1707.32 684.36 L1707.88 684.36 L1708.44 684.36 L1709 684.36 L1709.56 684.36 L1710.12 684.36 L1710.68 684.36 L1711.24 684.36 L1711.8 684.36 L1712.36 684.36 L1712.92 684.36 L1713.48 684.36 L1714.04 684.36 L1714.6 684.36 L1715.15 684.36 L1715.71 684.36 L1716.27 684.36 L1716.83 684.36 L1717.39 684.36 L1717.95 684.36 L1718.51 684.36 L1719.07 684.36 L1719.63 684.36 L1720.19 684.36 L1720.75 684.36 L1721.31 684.36 L1721.87 684.36 L1722.42 684.36 L1722.98 684.36 L1723.54 684.36 L1724.1 684.36 L1724.66 684.36 L1725.22 684.36 L1725.78 684.36 L1726.34 684.36 L1726.9 684.36 L1727.46 684.36 L1728.02 684.36 L1728.58 684.36 L1729.14 684.36 L1729.69 684.36 L1730.25 684.36 L1730.81 684.36 L1731.37 684.36 L1731.93 684.36 L1732.49 684.36 L1733.05 684.36 L1733.61 684.36 L1734.17 684.36 L1734.73 684.36 L1735.29 684.36 L1735.85 684.36 L1736.41 684.36 L1736.97 684.36 L1737.52 684.36 L1738.08 684.36 L1738.64 684.36 L1739.2 684.36 L1739.76 684.36 L1740.32 684.36 L1740.88 684.36 L1741.44 684.36 L1742 684.36 L1742.56 684.36 L1743.12 684.36 L1743.68 684.36 L1744.24 684.36 L1744.79 684.36 L1745.35 684.36 L1745.91 684.36 L1746.47 684.36 L1747.03 684.36 L1747.59 684.36 L1748.15 684.36 L1748.71 684.36 L1749.27 684.36 L1749.83 684.36 L1750.39 684.36 L1750.95 684.36 L1751.51 684.36 L1752.06 684.36 L1752.62 684.36 L1753.18 684.36 L1753.74 684.36 L1754.3 684.36 L1754.86 684.36 L1755.42 684.36 L1755.98 684.36 L1756.54 684.36 L1757.1 684.36 L1757.66 684.36 L1758.22 684.36 L1758.78 684.36 L1759.34 684.36 L1759.89 684.36 L1760.45 684.36 L1761.01 684.36 L1761.57 684.36 L1762.13 684.36 L1762.69 684.36 L1763.25 684.36 L1763.81 684.36 L1764.37 684.36 L1764.93 684.36 L1765.49 684.36 L1766.05 684.36 L1766.61 684.36 L1767.16 684.36 L1767.72 684.36 L1768.28 684.36 L1768.84 684.36 L1769.4 684.36 L1769.96 684.36 L1770.52 684.36 L1771.08 684.36 L1771.64 684.36 L1772.2 684.36 L1772.76 684.36 L1773.32 684.36 L1773.88 684.36 L1774.43 684.36 L1774.99 684.36 L1775.55 684.36 L1776.11 684.36 L1776.67 684.36 L1777.23 684.36 L1777.79 684.36 L1778.35 684.36 L1778.91 684.36 L1779.47 684.36 L1780.03 684.36 L1780.59 684.36 L1781.15 684.36 L1781.71 684.36 L1782.26 684.36 L1782.82 684.36 L1783.38 684.36 L1783.94 684.36 L1784.5 684.36 L1785.06 684.36 L1785.62 684.36 L1786.18 684.36 L1786.74 684.36 L1787.3 684.36 L1787.86 684.36 L1788.42 684.36 L1788.98 684.36 L1789.53 684.36 L1790.09 684.36 L1790.65 684.36 L1791.21 684.36 L1791.77 684.36 L1792.33 684.36 L1792.89 684.36 L1793.45 684.36 L1794.01 684.36 L1794.57 684.36 L1795.13 684.36 L1795.69 684.36 L1796.25 684.36 L1796.8 684.36 L1797.36 684.36 L1797.92 684.36 L1798.48 684.36 L1799.04 684.36 L1799.6 684.36 L1800.16 684.36 L1800.72 684.36 L1801.28 684.36 L1801.84 684.36 L1802.4 684.36 L1802.96 684.36 L1803.52 684.36 L1804.08 684.36 L1804.63 684.36 L1805.19 684.36 L1805.75 684.36 L1806.31 684.36 L1806.87 684.36 L1807.43 684.36 L1807.99 684.36 L1808.55 684.36 L1809.11 684.36 L1809.67 684.36 L1810.23 684.36 L1810.79 684.36 L1811.35 684.36 L1811.9 684.36 L1812.46 684.36 L1813.02 684.36 L1813.58 684.36 L1814.14 684.36 L1814.7 684.36 L1815.26 684.36 L1815.82 684.36 L1816.38 684.36 L1816.94 684.36 L1817.5 684.36 L1818.06 684.36 L1818.62 684.36 L1819.18 684.36 L1819.73 684.36 L1820.29 684.36 L1820.85 684.36 L1821.41 684.36 L1821.97 684.36 L1822.53 684.36 L1823.09 684.36 L1823.65 684.36 L1824.21 684.36 L1824.77 684.36 L1825.33 684.36 L1825.89 684.36 L1826.45 684.36 L1827 684.36 L1827.56 684.36 L1828.12 684.36 L1828.68 684.36 L1829.24 684.36 L1829.8 684.36 L1830.36 684.36 L1830.92 684.36 L1831.48 684.36 L1832.04 684.36 L1832.6 684.36 L1833.16 684.36 L1833.72 684.36 L1834.27 684.36 L1834.83 684.36 L1835.39 684.36 L1835.95 684.36 L1836.51 684.36 L1837.07 684.36 L1837.63 684.36 L1838.19 684.36 L1838.19 681.454 L1837.63 681.454 L1837.07 681.454 L1836.51 681.454 L1835.95 681.454 L1835.39 681.454 L1834.83 681.454 L1834.27 681.454 L1833.72 681.454 L1833.16 681.454 L1832.6 681.454 L1832.04 681.454 L1831.48 681.454 L1830.92 681.454 L1830.36 681.454 L1829.8 681.454 L1829.24 681.454 L1828.68 681.454 L1828.12 681.454 L1827.56 681.454 L1827 681.454 L1826.45 681.454 L1825.89 681.454 L1825.33 681.454 L1824.77 681.454 L1824.21 681.454 L1823.65 681.454 L1823.09 681.454 L1822.53 681.454 L1821.97 681.454 L1821.41 681.454 L1820.85 681.454 L1820.29 681.454 L1819.73 681.454 L1819.18 681.454 L1818.62 681.454 L1818.06 681.454 L1817.5 681.454 L1816.94 681.454 L1816.38 681.454 L1815.82 681.454 L1815.26 681.454 L1814.7 681.454 L1814.14 681.454 L1813.58 681.454 L1813.02 681.454 L1812.46 681.454 L1811.9 681.454 L1811.35 681.454 L1810.79 681.454 L1810.23 681.454 L1809.67 681.454 L1809.11 681.454 L1808.55 681.454 L1807.99 681.454 L1807.43 681.454 L1806.87 681.454 L1806.31 681.454 L1805.75 681.454 L1805.19 681.454 L1804.63 681.454 L1804.08 681.454 L1803.52 681.454 L1802.96 681.454 L1802.4 681.454 L1801.84 681.454 L1801.28 681.454 L1800.72 681.454 L1800.16 681.454 L1799.6 681.454 L1799.04 681.454 L1798.48 681.454 L1797.92 681.454 L1797.36 681.454 L1796.8 681.454 L1796.25 681.454 L1795.69 681.454 L1795.13 681.454 L1794.57 681.454 L1794.01 681.454 L1793.45 681.454 L1792.89 681.454 L1792.33 681.454 L1791.77 681.454 L1791.21 681.454 L1790.65 681.454 L1790.09 681.454 L1789.53 681.454 L1788.98 681.454 L1788.42 681.454 L1787.86 681.454 L1787.3 681.454 L1786.74 681.454 L1786.18 681.454 L1785.62 681.454 L1785.06 681.454 L1784.5 681.454 L1783.94 681.454 L1783.38 681.454 L1782.82 681.454 L1782.26 681.454 L1781.71 681.454 L1781.15 681.454 L1780.59 681.454 L1780.03 681.454 L1779.47 681.454 L1778.91 681.454 L1778.35 681.454 L1777.79 681.454 L1777.23 681.454 L1776.67 681.454 L1776.11 681.454 L1775.55 681.454 L1774.99 681.454 L1774.43 681.454 L1773.88 681.454 L1773.32 681.454 L1772.76 681.454 L1772.2 681.454 L1771.64 681.454 L1771.08 681.454 L1770.52 681.454 L1769.96 681.454 L1769.4 681.454 L1768.84 681.454 L1768.28 681.454 L1767.72 681.454 L1767.16 681.454 L1766.61 681.454 L1766.05 681.454 L1765.49 681.454 L1764.93 681.454 L1764.37 681.454 L1763.81 681.454 L1763.25 681.454 L1762.69 681.454 L1762.13 681.454 L1761.57 681.454 L1761.01 681.454 L1760.45 681.454 L1759.89 681.454 L1759.34 681.454 L1758.78 681.454 L1758.22 681.454 L1757.66 681.454 L1757.1 681.454 L1756.54 681.454 L1755.98 681.454 L1755.42 681.454 L1754.86 681.454 L1754.3 681.454 L1753.74 681.454 L1753.18 681.454 L1752.62 681.454 L1752.06 681.454 L1751.51 681.454 L1750.95 681.454 L1750.39 681.454 L1749.83 681.454 L1749.27 681.454 L1748.71 681.454 L1748.15 681.454 L1747.59 681.454 L1747.03 681.454 L1746.47 681.454 L1745.91 681.454 L1745.35 681.454 L1744.79 681.454 L1744.24 681.454 L1743.68 681.454 L1743.12 681.454 L1742.56 681.454 L1742 681.454 L1741.44 681.454 L1740.88 681.454 L1740.32 681.454 L1739.76 681.454 L1739.2 681.454 L1738.64 681.454 L1738.08 681.454 L1737.52 681.454 L1736.97 681.454 L1736.41 681.454 L1735.85 681.454 L1735.29 681.454 L1734.73 681.454 L1734.17 681.454 L1733.61 681.454 L1733.05 681.454 L1732.49 681.454 L1731.93 681.454 L1731.37 681.454 L1730.81 681.454 L1730.25 681.454 L1729.69 681.454 L1729.14 681.454 L1728.58 681.454 L1728.02 681.454 L1727.46 681.454 L1726.9 681.454 L1726.34 681.454 L1725.78 681.454 L1725.22 681.454 L1724.66 681.454 L1724.1 681.454 L1723.54 681.454 L1722.98 681.454 L1722.42 681.454 L1721.87 681.454 L1721.31 681.454 L1720.75 681.454 L1720.19 681.454 L1719.63 681.454 L1719.07 681.454 L1718.51 681.454 L1717.95 681.454 L1717.39 681.454 L1716.83 681.454 L1716.27 681.454 L1715.71 681.454 L1715.15 681.454 L1714.6 681.454 L1714.04 681.454 L1713.48 681.454 L1712.92 681.454 L1712.36 681.454 L1711.8 681.454 L1711.24 681.454 L1710.68 681.454 L1710.12 681.454 L1709.56 681.454 L1709 681.454 L1708.44 681.454 L1707.88 681.454 L1707.32 681.454 L1706.77 681.454 L1706.21 681.454 L1705.65 681.454 L1705.09 681.454 L1704.53 681.454 L1703.97 681.454 L1703.41 681.454 L1702.85 681.454 L1702.29 681.454 L1701.73 681.454 L1701.17 681.454 L1700.61 681.454 L1700.05 681.454 L1699.5 681.454 L1698.94 681.454 L1698.38 681.454 L1697.82 681.454 L1697.26 681.454 L1696.7 681.454 L1696.14 681.454 L1695.58 681.454 L1695.02 681.454 L1694.46 681.454 L1693.9 681.454 L1693.34 681.454 L1692.78 681.454 L1692.23 681.454 L1691.67 681.454 L1691.11 681.454 L1690.55 681.454 L1689.99 681.454 L1689.43 681.454 L1688.87 681.454 L1688.31 681.454 L1687.75 681.454 L1687.19 681.454 L1686.63 681.454 L1686.07 681.454 L1685.51 681.454 L1684.95 681.454 L1684.4 681.454 L1683.84 681.454 L1683.28 681.454 L1682.72 681.454 L1682.16 681.454 L1681.6 681.454 L1681.04 681.454 L1680.48 681.454 L1679.92 681.454 L1679.36 681.454 L1678.8 681.454 L1678.24 681.454 L1677.68 681.454 L1677.13 681.454 L1676.57 681.454 L1676.01 681.454 L1675.45 681.454 L1674.89 681.454 L1674.33 681.454 L1673.77 681.454 L1673.21 681.454 L1672.65 681.454 L1672.09 681.454 L1671.53 681.454 L1670.97 681.454 L1670.41 681.454 L1669.85 681.454 L1669.3 681.454 L1668.74 681.454 L1668.18 681.454 L1667.62 681.454 L1667.06 681.454 L1666.5 681.454 L1665.94 681.454 L1665.38 681.454 L1664.82 681.454 L1664.26 681.454 L1663.7 681.454 L1663.14 681.454 L1662.58 681.454 L1662.03 681.454 L1661.47 681.454 L1660.91 681.454 L1660.35 681.454 L1659.79 681.454 L1659.23 681.454 L1658.67 681.454 L1658.11 681.454 L1657.55 681.454 L1656.99 681.454 L1656.43 681.454 L1655.87 681.454 L1655.31 681.454 L1654.76 681.454 L1654.2 681.454 L1653.64 681.454 L1653.08 681.454 L1652.52 681.454 L1651.96 681.454 L1651.4 681.454 L1650.84 681.454 L1650.28 681.454 L1649.72 681.454 L1649.16 681.454 L1648.6 681.454 L1648.04 681.454 L1647.48 681.454 L1646.93 681.454 L1646.37 681.454 L1645.81 681.454 L1645.25 681.454 L1644.69 681.454 L1644.13 681.454 L1643.57 681.454 L1643.01 681.454 L1642.45 681.454 L1641.89 681.454 L1641.33 681.454 L1640.77 681.454 L1640.21 681.454 L1639.66 681.454 L1639.1 681.454 L1638.54 681.454 L1637.98 681.454 L1637.42 681.454 L1636.86 681.454 L1636.3 681.454 L1635.74 681.454 L1635.18 681.454 L1634.62 681.454 L1634.06 681.454 L1633.5 681.454 L1632.94 681.454 L1632.39 681.454 L1631.83 681.454 L1631.27 681.454 L1630.71 681.454 L1630.15 681.454 L1629.59 681.454 L1629.03 681.454 L1628.47 681.454 L1627.91 681.454 L1627.35 681.454 L1626.79 681.454 L1626.23 681.454 L1625.67 681.454 L1625.11 681.454 L1624.56 681.454 L1624 681.454 L1623.44 681.454 L1622.88 681.454 L1622.32 681.454 L1621.76 681.454 L1621.2 681.454 L1620.64 681.454 L1620.08 681.454 L1619.52 681.454 L1618.96 681.454 L1618.4 681.454 L1617.84 681.454 L1617.29 681.454 L1616.73 681.454 L1616.17 681.454 L1615.61 681.454 L1615.05 681.454 L1614.49 681.454 L1613.93 681.454 L1613.37 681.454 L1612.81 681.454 L1612.25 681.454 L1611.69 681.454 L1611.13 681.454 L1610.57 681.454 L1610.02 681.454 L1609.46 681.454 L1608.9 681.454 L1608.34 681.454 L1607.78 681.454 L1607.22 681.454 L1606.66 681.454 L1606.1 681.454 L1605.54 681.454 L1604.98 681.454 L1604.42 681.454 L1603.86 681.454 L1603.3 681.454 L1602.74 681.454 L1602.19 681.454 L1601.63 681.454 L1601.07 681.454 L1600.51 681.454 L1599.95 681.454 L1599.39 681.454 L1598.83 681.454 L1598.27 681.454 L1597.71 681.454 L1597.15 681.454 L1596.59 681.454 L1596.03 681.454 L1595.47 681.454 L1594.92 681.454 L1594.36 681.454 L1593.8 681.454 L1593.24 681.454 L1592.68 681.454 L1592.12 681.454 L1591.56 681.454 L1591 681.454 L1590.44 681.454 L1589.88 681.454 L1589.32 681.454 L1588.76 681.454 L1588.2 681.454 L1587.65 681.454 L1587.09 681.454 L1586.53 681.454 L1585.97 681.454 L1585.41 681.454 L1584.85 681.454 L1584.29 681.454 L1583.73 681.454 L1583.17 681.454 L1582.61 681.454 L1582.05 681.454 L1581.49 681.454 L1580.93 681.454 L1580.37 681.454 L1579.82 681.454 L1579.26 681.454 L1578.7 681.454 L1578.14 681.454 L1577.58 681.454 L1577.02 681.454 L1576.46 681.454 L1575.9 681.454 L1575.34 681.454 L1574.78 681.454 L1574.22 681.454 L1573.66 681.454 L1573.1 681.454 L1572.55 681.454 L1571.99 681.454 L1571.43 681.454 L1570.87 681.454 L1570.31 681.454 L1569.75 681.454 L1569.19 681.454 L1568.63 681.454 L1568.07 681.454 L1567.51 681.454 L1566.95 681.454 L1566.39 681.454 L1565.83 681.454 L1565.28 681.454 L1564.72 681.454 L1564.16 681.454 L1563.6 681.454 L1563.04 681.454 L1562.48 681.454 L1561.92 681.454 L1561.36 681.454 L1560.8 681.454 L1560.24 681.454 L1559.68 681.454 L1559.12 681.454 L1558.56 681.454 L1558 681.454 L1557.45 681.454 L1556.89 681.454 L1556.33 681.454 L1555.77 681.454 L1555.21 681.454 L1554.65 681.454 L1554.09 681.454 L1553.53 681.454 L1552.97 681.454 L1552.41 681.454 L1551.85 681.454 L1551.29 681.454 L1550.73 681.454 L1550.18 681.454 L1549.62 681.454 L1549.06 681.454 L1548.5 681.454 L1547.94 681.454 L1547.38 681.454 L1546.82 681.454 L1546.26 681.454 L1545.7 681.454 L1545.14 681.454 L1544.58 681.454 L1544.02 681.454 L1543.46 681.454 L1542.9 681.454 L1542.35 681.454 L1541.79 681.454 L1541.23 681.454 L1540.67 681.454 L1540.11 681.454 L1539.55 681.454 L1538.99 681.454 L1538.43 681.454 L1537.87 681.454 L1537.31 681.454 L1536.75 681.454 L1536.19 681.454 L1535.63 681.454 L1535.08 681.454 L1534.52 681.454 L1533.96 681.454 L1533.4 681.454 L1532.84 681.454 L1532.28 681.454 L1531.72 681.454 L1531.16 681.454 L1530.6 681.454 L1530.04 681.454 L1529.48 681.454 L1528.92 681.454 L1528.36 681.454 L1527.81 681.454 L1527.25 681.454 L1526.69 681.454 L1526.13 681.454 L1525.57 681.454 L1525.01 681.454 L1524.45 681.454 L1523.89 681.454 L1523.33 681.454 L1522.77 681.454 L1522.21 681.454 L1521.65 681.454 L1521.09 681.454 L1520.53 681.454 L1519.98 681.454 L1519.42 681.454 L1518.86 681.454 L1518.3 681.454 L1517.74 681.454 L1517.18 681.454 L1516.62 681.454 L1516.06 681.454 L1515.5 681.454 L1514.94 681.454 L1514.38 681.454 L1513.82 681.454 L1513.26 681.454 L1512.71 681.454 L1512.15 681.454 L1511.59 681.454 L1511.03 681.454 L1510.47 681.454 L1509.91 681.454 L1509.35 681.454 L1508.79 681.454 L1508.23 681.454 L1507.67 681.454 L1507.11 681.454 L1506.55 681.454 L1505.99 681.454 L1505.44 681.454 L1504.88 681.454 L1504.32 681.454 L1503.76 681.454 L1503.2 681.454 L1502.64 681.454 L1502.08 681.454 L1501.52 681.454 L1500.96 681.454 L1500.4 681.454 L1499.84 681.454 L1499.28 681.454 L1498.72 681.454 L1498.16 681.454 L1497.61 681.454 L1497.05 681.454 L1496.49 681.454 L1495.93 681.454 L1495.37 681.454 L1494.81 681.454 L1494.25 681.454 L1493.69 681.454 L1493.13 681.454 L1492.57 681.454 L1492.01 681.454 L1491.45 681.454 L1490.89 681.454 L1490.34 681.454 L1489.78 681.454 L1489.22 681.454 L1488.66 681.454 L1488.1 681.454 L1487.54 681.454 L1486.98 681.454 L1486.42 681.454 L1485.86 681.454 L1485.3 681.454 L1484.74 681.454 L1484.18 681.454 L1483.62 681.454 L1483.07 681.454 L1482.51 681.454 L1481.95 681.454 L1481.39 681.454 L1480.83 681.454 L1480.27 681.454 L1479.71 681.454 L1479.15 681.454 L1478.59 681.454 L1478.03 681.454 L1477.47 681.454 L1476.91 681.454 L1476.35 681.454 L1475.79 681.454 L1475.24 681.454 L1474.68 681.454 L1474.12 681.454 L1473.56 681.454 L1473 681.454 L1472.44 681.454 L1471.88 681.454 L1471.32 681.454 L1470.76 681.454 L1470.2 681.454 L1469.64 681.454 L1469.08 681.454 L1468.52 681.454 L1467.97 681.454 L1467.41 681.454 L1466.85 681.454 L1466.29 681.454 L1465.73 681.454 L1465.17 681.454 L1464.61 681.454 L1464.05 681.454 L1463.49 681.454 L1462.93 681.454 L1462.37 681.454 L1461.81 681.454 L1461.25 681.454 L1460.7 681.454 L1460.14 681.454 L1459.58 681.454 L1459.02 681.454 L1458.46 681.454 L1457.9 681.454 L1457.34 681.454 L1456.78 681.454 L1456.22 681.454 L1455.66 681.454 L1455.1 681.454 L1454.54 681.454 L1453.98 681.454 L1453.42 681.454 L1452.87 681.454 L1452.31 681.454 L1451.75 681.454 L1451.19 681.454 L1450.63 681.454 L1450.07 681.454 L1449.51 681.454 L1448.95 681.454 L1448.39 681.454 L1447.83 681.454 L1447.27 681.454 L1446.71 681.454 L1446.15 681.454 L1445.6 681.454 L1445.04 681.454 L1444.48 681.454 L1443.92 681.454 L1443.36 681.454 L1442.8 681.454 L1442.24 681.454 L1441.68 681.454 L1441.12 681.454 L1440.56 681.454 L1440 681.454 L1439.44 681.454 L1438.88 681.454 L1438.33 681.454 L1437.77 681.454 L1437.21 681.454 L1436.65 681.454 L1436.09 681.454 L1435.53 681.454 L1434.97 681.454 L1434.41 681.454 L1433.85 681.454 L1433.29 681.454 L1432.73 681.454 L1432.17 681.454 L1431.61 681.454 L1431.05 681.454 L1430.5 681.454 L1429.94 681.454 L1429.38 681.454 L1428.82 681.454 L1428.26 681.454 L1427.7 681.454 L1427.14 681.454 L1426.58 681.454 L1426.02 681.454 L1425.46 681.454 L1424.9 681.454 L1424.34 681.454 L1423.78 681.454 L1423.23 681.454 L1422.67 681.454 L1422.11 681.454 L1421.55 681.454 L1420.99 681.454 L1420.43 681.454 L1419.87 681.454 L1419.31 681.454 L1418.75 681.454 L1418.19 681.454 L1417.63 681.454 L1417.07 681.454 L1416.51 681.454 L1415.95 681.454 L1415.4 681.454 L1414.84 681.454 L1414.28 681.454 L1413.72 681.454 L1413.16 681.454 L1412.6 681.454 L1412.04 681.454 L1411.48 681.454 L1410.92 681.454 L1410.36 681.454 L1409.8 681.454 L1409.24 681.454 L1408.68 681.454 L1408.13 681.454 L1407.57 681.454 L1407.01 681.454 L1406.45 681.454 L1405.89 681.454 L1405.33 681.454 L1404.77 681.454 L1404.21 681.454 L1403.65 681.454 L1403.09 681.454 L1402.53 681.454 L1401.97 681.454 L1401.41 681.454 L1400.86 681.454 L1400.3 681.454 L1399.74 681.454 L1399.18 681.454 L1398.62 681.454 L1398.06 681.454 L1397.5 681.454 L1396.94 681.454 L1396.38 681.454 L1395.82 681.454 L1395.26 681.454 L1394.7 681.454 L1394.14 681.454 L1393.58 681.454 L1393.03 681.454 L1392.47 681.454 L1391.91 681.454 L1391.35 681.454 L1390.79 681.454 L1390.23 681.454 L1389.67 681.454 L1389.11 681.454 L1388.55 681.454 L1387.99 681.454 L1387.43 681.454 L1386.87 681.454 L1386.31 681.454 L1385.76 681.454 L1385.2 681.454 L1384.64 681.454 L1384.08 681.454 L1383.52 681.454 L1382.96 681.454 L1382.4 681.454 L1381.84 681.454 L1381.28 681.454 L1380.72 681.454 L1380.16 681.454 L1379.6 681.454 L1379.04 681.454 L1378.49 681.454 L1377.93 681.454 L1377.37 681.454 L1376.81 681.454 L1376.25 681.454 L1375.69 681.454 L1375.13 681.454 L1374.57 681.454 L1374.01 681.454 L1373.45 681.454 L1372.89 681.454 L1372.33 681.454 L1371.77 681.454 L1371.21 681.454 L1370.66 681.454 L1370.1 681.454 L1369.54 681.454 L1368.98 681.454 L1368.42 681.454 L1367.86 681.454 L1367.3 681.454 L1366.74 681.454 L1366.18 681.454 L1365.62 681.454 L1365.06 681.454 L1364.5 681.454 L1363.94 681.454 L1363.39 681.454 L1362.83 681.454 L1362.27 681.454 L1361.71 681.454 L1361.15 681.454 L1360.59 681.454 L1360.03 681.454 L1359.47 681.454 L1358.91 681.454 L1358.35 681.454 L1357.79 681.454 L1357.23 681.454 L1356.67 681.454 L1356.12 681.454 L1355.56 681.454 L1355 681.454 L1354.44 681.454 L1353.88 681.454 L1353.32 681.454 L1352.76 681.454 L1352.2 681.454 L1351.64 681.454 L1351.08 681.454 L1350.52 681.454 L1349.96 681.454 L1349.4 681.454 L1348.84 681.454 L1348.29 681.454 L1347.73 681.454 L1347.17 681.454 L1346.61 681.454 L1346.05 681.454 L1345.49 681.454 L1344.93 681.454 L1344.37 681.454 L1343.81 681.454 L1343.25 681.454 L1342.69 681.454 L1342.13 681.454 L1341.57 681.454 L1341.02 681.454 L1340.46 681.454 L1339.9 681.454 L1339.34 681.454 L1338.78 681.454 L1338.22 681.454 L1337.66 681.454 L1337.1 681.454 L1336.54 681.454 L1335.98 681.454 L1335.42 681.454 L1334.86 681.454 L1334.3 681.454 L1333.75 681.454 L1333.19 681.454 L1332.63 681.454 L1332.07 681.454 L1331.51 681.454 L1330.95 681.454 L1330.39 681.454 L1329.83 681.454 L1329.27 681.454 L1328.71 681.454 L1328.15 681.454 L1327.59 681.454 L1327.03 681.454 L1326.47 681.454 L1325.92 681.454 L1325.36 681.454 L1324.8 681.454 L1324.24 681.454 L1323.68 681.454 L1323.12 681.454 L1322.56 681.454 L1322 681.454 L1321.44 681.454 L1320.88 681.454 L1320.32 681.454 L1319.76 681.454 L1319.2 681.454 L1318.65 681.454 L1318.09 681.454 L1317.53 681.454 L1316.97 681.454 L1316.41 681.454 L1315.85 681.454 L1315.29 681.454 L1314.73 681.454 L1314.17 681.454 L1313.61 681.454 L1313.05 681.454 L1312.49 681.454 L1311.93 681.454 L1311.38 681.454 L1310.82 681.454 L1310.26 681.454 L1309.7 681.454 L1309.14 681.454 L1308.58 681.454 L1308.02 681.454 L1307.46 681.454 L1306.9 681.454 L1306.34 681.454 L1305.78 681.454 L1305.22 681.454 L1304.66 681.454 L1304.1 681.454 L1303.55 681.454 L1302.99 681.454 L1302.43 681.454 L1301.87 681.454 L1301.31 681.454 L1300.75 681.454 L1300.19 681.454 L1299.63 681.454 L1299.07 681.454 L1298.51 681.454 L1297.95 681.454 L1297.39 681.454 L1296.83 681.454 L1296.28 681.454 L1295.72 681.454 L1295.16 681.454 L1294.6 681.454 L1294.04 681.454 L1293.48 681.454 L1292.92 681.454 L1292.36 681.454 L1291.8 681.454 L1291.24 681.454 L1290.68 681.454 L1290.12 681.454 L1289.56 681.454 L1289 681.454 L1288.45 681.454 L1287.89 681.454 L1287.33 681.454 L1286.77 681.454 L1286.21 681.454 L1285.65 681.454 L1285.09 681.454 L1284.53 681.454 L1283.97 681.454 L1283.41 681.454 L1282.85 681.454 L1282.29 681.454 L1281.73 681.454 L1281.18 681.454 L1280.62 681.454 L1280.06 681.454 L1279.5 681.454 L1278.94 681.454 L1278.38 681.454 L1277.82 681.454 L1277.26 681.454 L1276.7 681.454 L1276.14 681.454 L1275.58 681.454 L1275.02 681.454 L1274.46 681.454 L1273.91 681.454 L1273.35 681.454 L1272.79 681.454 L1272.23 681.454 L1271.67 681.454 L1271.11 681.454 L1270.55 681.454 L1269.99 681.454 L1269.43 681.454 L1268.87 681.454 L1268.31 681.454 L1267.75 681.454 L1267.19 681.454 L1266.63 681.454 L1266.08 681.454 L1265.52 681.454 L1264.96 681.454 L1264.4 681.454 L1263.84 681.454 L1263.28 681.454 L1262.72 681.454 L1262.16 681.454 L1261.6 681.454 L1261.04 681.454 L1260.48 681.454 L1259.92 681.454 L1259.36 681.454 L1258.81 681.454 L1258.25 681.454 L1257.69 681.454 L1257.13 681.454 L1256.57 681.454 L1256.01 681.454 L1255.45 681.454 L1254.89 681.454 L1254.33 681.454 L1253.77 681.454 L1253.21 681.454 L1252.65 681.454 L1252.09 681.454 L1251.54 681.454 L1250.98 681.454 L1250.42 681.454 L1249.86 681.454 L1249.3 681.454 L1248.74 681.454 L1248.18 681.454 L1247.62 681.454 L1247.06 681.454 L1246.5 681.454 L1245.94 681.454 L1245.38 681.454 L1244.82 681.454 L1244.26 681.454 L1243.71 681.454 L1243.15 681.454 L1242.59 681.454 L1242.03 681.454 L1241.47 681.454 L1240.91 681.454 L1240.35 681.454 L1239.79 681.454 L1239.23 681.454 L1238.67 681.454 L1238.11 681.454 L1237.55 681.454 L1236.99 681.454 L1236.44 681.454 L1235.88 681.454 L1235.32 681.454 L1234.76 681.454 L1234.2 681.454 L1233.64 681.454 L1233.08 681.454 L1232.52 681.454 L1231.96 681.454 L1231.4 681.454 L1230.84 681.454 L1230.28 681.454 L1229.72 681.454 L1229.17 681.454 L1228.61 681.454 L1228.05 681.454 L1227.49 681.454 L1226.93 681.454 L1226.37 681.454 L1225.81 681.454 L1225.25 681.454 L1224.69 681.454 L1224.13 681.454 L1223.57 681.454 L1223.01 681.454 L1222.45 681.454 L1221.89 681.454 L1221.34 681.454 L1220.78 681.454 L1220.22 681.454 L1219.66 681.454 L1219.1 681.454 L1218.54 681.454 L1217.98 681.454 L1217.42 681.454 L1216.86 681.454 L1216.3 681.454 L1215.74 681.454 L1215.18 681.454 L1214.62 681.454 L1214.07 681.454 L1213.51 681.454 L1212.95 681.454 L1212.39 681.454 L1211.83 681.454 L1211.27 681.454 L1210.71 681.454 L1210.15 681.454 L1209.59 681.454 L1209.03 681.454 L1208.47 681.454 L1207.91 681.454 L1207.35 681.454 L1206.8 681.454 L1206.24 681.454 L1205.68 681.454 L1205.12 681.454 L1204.56 681.454 L1204 681.454 L1203.44 681.454 L1202.88 681.454 L1202.32 681.454 L1201.76 681.454 L1201.2 681.454 L1200.64 681.454 L1200.08 681.454 L1199.52 681.454 L1198.97 681.454 L1198.41 681.454 L1197.85 681.454 L1197.29 681.454 L1196.73 681.454 L1196.17 681.454 L1195.61 681.454 L1195.05 681.454 L1194.49 681.454 L1193.93 681.454 L1193.37 681.454 L1192.81 681.454 L1192.25 681.454 L1191.7 681.454 L1191.14 681.454 L1190.58 681.454 L1190.02 681.454 L1189.46 681.454 L1188.9 681.454 L1188.34 681.454 L1187.78 681.454 L1187.22 681.454 L1186.66 681.454 L1186.1 681.454 L1185.54 681.454 L1184.98 681.454 L1184.43 681.454 L1183.87 681.454 L1183.31 681.454 L1182.75 681.454 L1182.19 681.454 L1181.63 681.454 L1181.07 681.454 L1180.51 681.454 L1179.95 681.454 L1179.39 681.454 L1178.83 681.454 L1178.27 681.454 L1177.71 681.454 L1177.15 681.454 L1176.6 681.454 L1176.04 681.454 L1175.48 681.454 L1174.92 681.454 L1174.36 681.454 L1173.8 681.454 L1173.24 681.454 L1172.68 681.454 L1172.12 681.454 L1171.56 681.454 L1171 681.454 L1170.44 681.454 L1169.88 681.454 L1169.33 681.454 L1168.77 681.454 L1168.21 681.454 L1167.65 681.454 L1167.09 681.454 L1166.53 681.454 L1165.97 681.454 L1165.41 681.454 L1164.85 681.454 L1164.29 681.454 L1163.73 681.454 L1163.17 681.454 L1162.61 681.454 L1162.05 681.454 L1161.5 681.454 L1160.94 681.454 L1160.38 681.454 L1159.82 681.454 L1159.26 681.454 L1158.7 681.454 L1158.14 681.454 L1157.58 681.454 L1157.02 681.454 L1156.46 681.454 L1155.9 681.454 L1155.34 681.454 L1154.78 681.454 L1154.23 681.454 L1153.67 681.454 L1153.11 681.454 L1152.55 681.454 L1151.99 681.454 L1151.43 681.454 L1150.87 681.454 L1150.31 681.454 L1149.75 681.454 L1149.19 681.454 L1148.63 681.454 L1148.07 681.454 L1147.51 681.454 L1146.96 681.454 L1146.4 681.454 L1145.84 681.454 L1145.28 681.454 L1144.72 681.454 L1144.16 681.454 L1143.6 681.454 L1143.04 681.454 L1142.48 681.454 L1141.92 681.454 L1141.36 681.454 L1140.8 681.454 L1140.24 681.454 L1139.68 681.454 L1139.13 681.454 L1138.57 681.454 L1138.01 681.454 L1137.45 681.454 L1136.89 681.454 L1136.33 681.454 L1135.77 681.454 L1135.21 681.454 L1134.65 681.454 L1134.09 681.454 L1133.53 681.454 L1132.97 681.454 L1132.41 681.454 L1131.86 681.454 L1131.3 681.454 L1130.74 681.454 L1130.18 681.454 L1129.62 681.454 L1129.06 681.454 L1128.5 681.454 L1127.94 681.454 L1127.38 681.454 L1126.82 681.454 L1126.26 681.454 L1125.7 681.454 L1125.14 681.454 L1124.59 681.454 L1124.03 681.454 L1123.47 681.454 L1122.91 681.454 L1122.35 681.454 L1121.79 681.454 L1121.23 681.454 L1120.67 681.454 L1120.11 681.454 L1119.55 681.454 L1118.99 681.454 L1118.43 681.454 L1117.87 681.454 L1117.31 681.454 L1116.76 681.454 L1116.2 681.454 L1115.64 681.454 L1115.08 681.454 L1114.52 681.454 L1113.96 681.454 L1113.4 681.454 L1112.84 681.454 L1112.28 681.454 L1111.72 681.454 L1111.16 681.454 L1110.6 681.454 L1110.04 681.454 L1109.49 681.454 L1108.93 681.454 L1108.37 681.454 L1107.81 681.454 L1107.25 681.454 L1106.69 681.454 L1106.13 681.454 L1105.57 681.454 L1105.01 681.454 L1104.45 681.454 L1103.89 681.454 L1103.33 681.454 L1102.77 681.454 L1102.22 681.454 L1101.66 681.454 L1101.1 681.454 L1100.54 681.454 L1099.98 681.454 L1099.42 681.454 L1098.86 681.454 L1098.3 681.454 L1097.74 681.454 L1097.18 681.454 L1096.62 681.454 L1096.06 681.454 L1095.5 681.454 L1094.94 681.454 L1094.39 681.454 L1093.83 681.454 L1093.27 681.454 L1092.71 681.454 L1092.15 681.454 L1091.59 681.454 L1091.03 681.454 L1090.47 681.454 L1089.91 681.454 L1089.35 681.454 L1088.79 681.454 L1088.23 681.454 L1087.67 681.454 L1087.12 681.454 L1086.56 681.454 L1086 681.454 L1085.44 681.454 L1084.88 681.454 L1084.32 681.454 L1083.76 681.454 L1083.2 681.454 L1082.64 681.454 L1082.08 681.454 L1081.52 681.454 L1080.96 681.454 L1080.4 681.454 L1079.85 681.454 L1079.29 681.454 L1078.73 681.454 L1078.17 681.454 L1077.61 681.454 L1077.05 681.454 L1076.49 681.454 L1075.93 681.454 L1075.37 681.454 L1074.81 681.454 L1074.25 681.454 L1073.69 681.454 L1073.13 681.454 L1072.57 681.454 L1072.02 681.454 L1071.46 681.454 L1070.9 681.454 L1070.34 681.454 L1069.78 681.454 L1069.22 681.454 L1068.66 681.454 L1068.1 681.454 L1067.54 681.454 L1066.98 681.454 L1066.42 681.454 L1065.86 681.454 L1065.3 681.454 L1064.75 681.454 L1064.19 681.454 L1063.63 681.454 L1063.07 681.454 L1062.51 681.454 L1061.95 681.454 L1061.39 681.454 L1060.83 681.454 L1060.27 681.454 L1059.71 681.454 L1059.15 681.454 L1058.59 681.454 L1058.03 681.454 L1057.48 681.454 L1056.92 681.454 L1056.36 681.454 L1055.8 681.454 L1055.24 681.454 L1054.68 681.454 L1054.12 681.454 L1053.56 681.454 L1053 681.454 L1052.44 681.454 L1051.88 681.454 L1051.32 681.454 L1050.76 681.454 L1050.2 681.454 L1049.65 681.454 L1049.09 681.454 L1048.53 681.454 L1047.97 681.454 L1047.41 681.454 L1046.85 681.454 L1046.29 681.454 L1045.73 681.454 L1045.17 681.454 L1044.61 681.454 L1044.05 681.454 L1043.49 681.454 L1042.93 681.454 L1042.38 681.454 L1041.82 681.454 L1041.26 681.454 L1040.7 681.454 L1040.14 681.454 L1039.58 681.454 L1039.02 681.454 L1038.46 681.454 L1037.9 681.454 L1037.34 681.454 L1036.78 681.454 L1036.22 681.454 L1035.66 681.454 L1035.1 681.454 L1034.55 681.454 L1033.99 681.454 L1033.43 681.454 L1032.87 681.454 L1032.31 681.454 L1031.75 681.454 L1031.19 681.454 L1030.63 681.454 L1030.07 681.454 L1029.51 681.454 L1028.95 681.454 L1028.39 681.454 L1027.83 681.454 L1027.28 681.454 L1026.72 681.454 L1026.16 681.454 L1025.6 681.454 L1025.04 681.454 L1024.48 681.454 L1023.92 681.454 L1023.36 681.454 L1022.8 681.454 L1022.24 681.454 L1021.68 681.454 L1021.12 681.454 L1020.56 681.454 L1020.01 681.454 L1019.45 681.454 L1018.89 681.454 L1018.33 681.454 L1017.77 681.454 L1017.21 681.454 L1016.65 681.454 L1016.09 681.454 L1015.53 681.454 L1014.97 681.454 L1014.41 681.454 L1013.85 681.454 L1013.29 681.454 L1012.73 681.454 L1012.18 681.454 L1011.62 681.454 L1011.06 681.454 L1010.5 681.454 L1009.94 681.454 L1009.38 681.454 L1008.82 681.454 L1008.26 681.454 L1007.7 681.454 L1007.14 681.454 L1006.58 681.454 L1006.02 681.454 L1005.46 681.454 L1004.91 681.454 L1004.35 681.454 L1003.79 681.454 L1003.23 681.454 L1002.67 681.454 L1002.11 681.454 L1001.55 681.454 L1000.99 681.454 L1000.43 681.454 L999.872 681.454 L999.313 681.454 L998.754 681.454 L998.194 681.454 L997.635 681.454 L997.076 681.454 L996.517 681.454 L995.957 681.454 L995.398 681.454 L994.839 681.454 L994.28 681.454 L993.72 681.454 L993.161 681.454 L992.602 681.454 L992.043 681.454 L991.483 681.454 L990.924 681.454 L990.365 681.454 L989.806 681.454 L989.246 681.454 L988.687 681.454 L988.128 681.454 L987.569 681.454 L987.009 681.454 L986.45 681.454 L985.891 681.454 L985.332 681.454 L984.772 681.454 L984.213 681.454 L983.654 681.454 L983.095 681.454 L982.535 681.454 L981.976 681.454 L981.417 681.454 L980.858 681.454 L980.298 681.454 L979.739 681.454 L979.18 681.454 L978.621 681.454 L978.061 681.454 L977.502 681.454 L976.943 681.454 L976.384 681.454 L975.824 681.454 L975.265 681.454 L974.706 681.454 L974.147 681.454 L973.587 681.454 L973.028 681.454 L972.469 681.454 L971.91 681.454 L971.35 681.454 L970.791 681.454 L970.232 681.454 L969.673 681.454 L969.113 681.454 L968.554 681.454 L967.995 681.454 L967.436 681.454 L966.876 681.454 L966.317 681.454 L965.758 681.454 L965.199 681.454 L964.639 681.454 L964.08 681.454 L963.521 681.454 L962.962 681.454 L962.402 681.454 L961.843 681.454 L961.284 681.454 L960.725 681.454 L960.165 681.454 L959.606 681.454 L959.047 681.454 L958.488 681.454 L957.928 681.454 L957.369 681.454 L956.81 681.454 L956.251 681.454 L955.691 681.454 L955.132 681.454 L954.573 681.454 L954.014 681.454 L953.454 681.454 L952.895 681.454 L952.336 681.454 L951.777 681.454 L951.217 681.454 L950.658 681.454 L950.099 681.454 L949.54 681.454 L948.98 681.454 L948.421 681.454 L947.862 681.454 L947.303 681.454 L946.743 681.454 L946.184 681.454 L945.625 681.454 L945.066 681.454 L944.506 681.454 L943.947 681.454 L943.388 681.454 L942.829 681.454 L942.269 681.454 L941.71 681.454 L941.151 681.454 L940.592 681.454 L940.032 681.454 L939.473 681.454 L938.914 681.454 L938.355 681.454 L937.795 681.454 L937.236 681.454 L936.677 681.454 L936.118 681.454 L935.558 681.454 L934.999 681.454 L934.44 681.454 L933.881 681.454 L933.321 681.454 L932.762 681.454 L932.203 681.454 L931.644 681.454 L931.084 681.454 L930.525 681.454 L929.966 681.454 L929.406 681.454 L928.847 681.454 L928.288 681.454 L927.729 681.454 L927.169 681.454 L926.61 681.454 L926.051 681.454 L925.492 681.454 L924.932 681.454 L924.373 681.454 L923.814 681.454 L923.255 681.454 L922.695 681.454 L922.136 681.454 L921.577 681.454 L921.018 681.454 L920.458 681.454 L919.899 681.454 L919.34 681.454 L918.781 681.454 L918.221 681.454 L917.662 681.454 L917.103 681.454 L916.544 681.454 L915.984 681.454 L915.425 681.454 L914.866 681.454 L914.307 681.454 L913.747 681.454 L913.188 681.454 L912.629 681.454 L912.07 681.454 L911.51 681.454 L910.951 681.454 L910.392 681.454 L909.833 681.454 L909.273 681.454 L908.714 681.454 L908.155 681.454 L907.596 681.454 L907.036 681.454 L906.477 681.454 L905.918 681.454 L905.359 681.454 L904.799 681.454 L904.24 681.454 L903.681 681.454 L903.122 681.454 L902.562 681.454 L902.003 681.454 L901.444 681.454 L900.885 681.454 L900.325 681.454 L899.766 681.454 L899.207 681.454 L898.648 681.454 L898.088 681.454 L897.529 681.454 L896.97 681.454 L896.411 681.454 L895.851 681.454 L895.292 681.454 L894.733 681.454 L894.174 681.454 L893.614 681.454 L893.055 681.454 L892.496 681.454 L891.937 681.454 L891.377 681.454 L890.818 681.454 L890.259 681.454 L889.7 681.454 L889.14 681.454 L888.581 681.454 L888.022 681.454 L887.463 681.454 L886.903 681.454 L886.344 681.454 L885.785 681.454 L885.226 681.454 L884.666 681.454 L884.107 681.454 L883.548 681.454 L882.989 681.454 L882.429 681.454 L881.87 681.454 L881.311 681.454 L880.752 681.454 L880.192 681.454 L879.633 681.454 L879.074 681.454 L878.515 681.454 L877.955 681.454 L877.396 681.454 L876.837 681.454 L876.278 681.454 L875.718 681.454 L875.159 681.454 L874.6 681.454 L874.041 681.454 L873.481 681.454 L872.922 681.454 L872.363 681.454 L871.804 681.454 L871.244 681.454 L870.685 681.454 L870.126 681.454 L869.567 681.454 L869.007 681.454 L868.448 681.454 L867.889 681.454 L867.33 681.454 L866.77 681.454 L866.211 681.454 L865.652 681.454 L865.093 681.454 L864.533 681.454 L863.974 681.454 L863.415 681.454 L862.856 681.454 L862.296 681.454 L861.737 681.454 L861.178 681.454 L860.619 681.454 L860.059 681.454 L859.5 681.454 L858.941 681.454 L858.382 681.454 L857.822 681.454 L857.263 681.454 L856.704 681.454 L856.145 681.454 L855.585 681.454 L855.026 681.454 L854.467 681.454 L853.908 681.454 L853.348 681.454 L852.789 681.454 L852.23 681.454 L851.671 681.454 L851.111 681.454 L850.552 681.454 L849.993 681.454 L849.434 681.454 L848.874 681.454 L848.315 681.454 L847.756 681.454 L847.197 681.454 L846.637 681.454 L846.078 681.454 L845.519 681.454 L844.96 681.454 L844.4 681.454 L843.841 681.454 L843.282 681.454 L842.723 681.454 L842.163 681.454 L841.604 681.454 L841.045 681.454 L840.486 681.454 L839.926 681.454 L839.367 681.454 L838.808 681.454 L838.249 681.454 L837.689 681.454 L837.13 681.454 L836.571 681.454 L836.012 681.454 L835.452 681.454 L834.893 681.454 L834.334 681.454 L833.775 681.454 L833.215 681.454 L832.656 681.454 L832.097 681.454 L831.538 681.454 L830.978 681.454 L830.419 681.454 L829.86 681.454 L829.301 681.454 L828.741 681.454 L828.182 681.454 L827.623 681.454 L827.064 681.454 L826.504 681.454 L825.945 681.454 L825.386 681.454 L824.827 681.454 L824.267 681.454 L823.708 681.454 L823.149 681.454 L822.59 681.454 L822.03 681.454 L821.471 681.454 L820.912 681.454 L820.353 681.454 L819.793 681.454 L819.234 681.454 L818.675 681.454 L818.116 681.454 L817.556 681.454 L816.997 681.454 L816.438 681.454 L815.879 681.454 L815.319 681.454 L814.76 681.454 L814.201 681.454 L813.642 681.454 L813.082 681.454 L812.523 681.454 L811.964 681.454 L811.405 681.454 L810.845 681.454 L810.286 681.454 L809.727 681.454 L809.168 681.454 L808.608 681.454 L808.049 681.454 L807.49 681.454 L806.931 681.454 L806.371 681.454 L805.812 681.454 L805.253 681.454 L804.693 681.454 L804.134 681.454 L803.575 681.454 L803.016 681.454 L802.456 681.454 L801.897 681.454 L801.338 681.454 L800.779 681.454 L800.219 681.454 L799.66 681.454 L799.101 681.454 L798.542 681.454 L797.982 681.454 L797.423 681.454 L796.864 681.454 L796.305 681.454 L795.745 681.454 L795.186 681.454 L794.627 681.454 L794.068 681.454 L793.508 681.454 L792.949 681.454 L792.39 681.454 L791.831 681.454 L791.271 681.454 L790.712 681.454 L790.153 681.454 L789.594 681.454 L789.034 681.454 L788.475 681.454 L787.916 681.454 L787.357 681.454 L786.797 681.454 L786.238 681.454 L785.679 681.454 L785.12 681.454 L784.56 681.454 L784.001 681.454 L783.442 681.454 L782.883 681.454 L782.323 681.454 L781.764 681.454 L781.205 681.454 L780.646 681.454 L780.086 681.454 L779.527 681.454 L778.968 681.454 L778.409 681.454 L777.849 681.454 L777.29 681.454 L776.731 681.454 L776.172 681.454 L775.612 681.454 L775.053 681.454 L774.494 681.454 L773.935 681.454 L773.375 681.454 L772.816 681.454 L772.257 681.454 L771.698 681.454 L771.138 681.454 L770.579 681.454 L770.02 681.454 L769.461 681.454 L768.901 681.454 L768.342 681.454 L767.783 681.454 L767.224 681.454 L766.664 681.454 L766.105 681.454 L765.546 681.454 L764.987 681.454 L764.427 681.454 L763.868 681.454 L763.309 681.454 L762.75 681.454 L762.19 681.454 L761.631 681.454 L761.072 681.454 L760.513 681.454 L759.953 681.454 L759.394 681.454 L758.835 681.454 L758.276 681.454 L757.716 681.454 L757.157 681.454 L756.598 681.454 L756.039 681.454 L755.479 681.454 L754.92 681.454 L754.361 681.454 L753.802 681.454 L753.242 681.454 L752.683 681.454 L752.124 681.454 L751.565 681.454 L751.005 681.454 L750.446 681.454 L749.887 681.454 L749.328 681.454 L748.768 681.454 L748.209 681.454 L747.65 681.454 L747.091 681.454 L746.531 681.454 L745.972 681.454 L745.413 681.454 L744.854 681.454 L744.294 681.454 L743.735 681.454 L743.176 681.454 L742.617 681.454 L742.057 681.454 L741.498 681.454 L740.939 681.454 L740.38 681.454 L739.82 681.454 L739.261 681.454 L738.702 681.454 L738.143 681.454 L737.583 681.454 L737.024 681.454 L736.465 681.454 L735.906 681.454 L735.346 681.454 L734.787 681.454 L734.228 681.454 L733.669 681.454 L733.109 681.454 L732.55 681.454 L731.991 681.454 L731.432 681.454 L730.872 681.454 L730.313 681.454 L729.754 681.454 L729.195 681.454 L728.635 681.454 L728.076 681.454 L727.517 681.454 L726.958 681.454 L726.398 681.454 L725.839 681.454 L725.28 681.454 L724.721 681.454 L724.161 681.454 L723.602 681.454 L723.043 681.454 L722.484 681.454 L721.924 681.454 L721.365 681.454 L720.806 681.454 L720.247 681.454  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip593)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,682.9 720.806,682.9 721.365,682.9 721.924,682.9 722.484,682.9 723.043,682.9 723.602,682.9 724.161,682.9 724.721,682.9 725.28,682.9 725.839,682.9 726.398,682.9 726.958,682.9 727.517,682.9 728.076,682.9 728.635,682.9 729.195,682.9 729.754,682.9 730.313,682.9 730.872,682.9 731.432,682.9 731.991,682.9 732.55,682.9 733.109,682.9 733.669,682.9 734.228,682.9 734.787,682.9 735.346,682.9 735.906,682.9 736.465,682.9 737.024,682.9 737.583,682.9 738.143,682.9 738.702,682.9 739.261,682.9 739.82,682.9 740.38,682.9 740.939,682.9 741.498,682.9 742.057,682.9 742.617,682.9 743.176,682.9 743.735,682.9 744.294,682.9 744.854,682.9 745.413,682.9 745.972,682.9 746.531,682.9 747.091,682.9 747.65,682.9 748.209,682.9 748.768,682.9 749.328,682.9 749.887,682.9 750.446,682.9 751.005,682.9 751.565,682.9 752.124,682.9 752.683,682.9 753.242,682.9 753.802,682.9 754.361,682.9 754.92,682.9 755.479,682.9 756.039,682.9 756.598,682.9 757.157,682.9 757.716,682.9 758.276,682.9 758.835,682.9 759.394,682.9 759.953,682.9 760.513,682.9 761.072,682.9 761.631,682.9 762.19,682.9 762.75,682.9 763.309,682.9 763.868,682.9 764.427,682.9 764.987,682.9 765.546,682.9 766.105,682.9 766.664,682.9 767.224,682.9 767.783,682.9 768.342,682.9 768.901,682.9 769.461,682.9 770.02,682.9 770.579,682.9 771.138,682.9 771.698,682.9 772.257,682.9 772.816,682.9 773.375,682.9 773.935,682.9 774.494,682.9 775.053,682.9 775.612,682.9 776.172,682.9 776.731,682.9 777.29,682.9 777.849,682.9 778.409,682.9 778.968,682.9 779.527,682.9 780.086,682.9 780.646,682.9 781.205,682.9 781.764,682.9 782.323,682.9 782.883,682.9 783.442,682.9 784.001,682.9 784.56,682.9 785.12,682.9 785.679,682.9 786.238,682.9 786.797,682.9 787.357,682.9 787.916,682.9 788.475,682.9 789.034,682.9 789.594,682.9 790.153,682.9 790.712,682.9 791.271,682.9 791.831,682.9 792.39,682.9 792.949,682.9 793.508,682.9 794.068,682.9 794.627,682.9 795.186,682.9 795.745,682.9 796.305,682.9 796.864,682.9 797.423,682.9 797.982,682.9 798.542,682.9 799.101,682.9 799.66,682.9 800.219,682.9 800.779,682.9 801.338,682.9 801.897,682.9 802.456,682.9 803.016,682.9 803.575,682.9 804.134,682.9 804.693,682.9 805.253,682.9 805.812,682.9 806.371,682.9 806.931,682.9 807.49,682.9 808.049,682.9 808.608,682.9 809.168,682.9 809.727,682.9 810.286,682.9 810.845,682.9 811.405,682.9 811.964,682.9 812.523,682.9 813.082,682.9 813.642,682.9 814.201,682.9 814.76,682.9 815.319,682.9 815.879,682.9 816.438,682.9 816.997,682.9 817.556,682.9 818.116,682.9 818.675,682.9 819.234,682.9 819.793,682.9 820.353,682.9 820.912,682.9 821.471,682.9 822.03,682.9 822.59,682.9 823.149,682.9 823.708,682.9 824.267,682.9 824.827,682.9 825.386,682.9 825.945,682.9 826.504,682.9 827.064,682.9 827.623,682.9 828.182,682.9 828.741,682.9 829.301,682.9 829.86,682.9 830.419,682.9 830.978,682.9 831.538,682.9 832.097,682.9 832.656,682.9 833.215,682.9 833.775,682.9 834.334,682.9 834.893,682.9 835.452,682.9 836.012,682.9 836.571,682.9 837.13,682.9 837.689,682.9 838.249,682.9 838.808,682.9 839.367,682.9 839.926,682.9 840.486,682.9 841.045,682.9 841.604,682.9 842.163,682.9 842.723,682.9 843.282,682.9 843.841,682.9 844.4,682.9 844.96,682.9 845.519,682.9 846.078,682.9 846.637,682.9 847.197,682.9 847.756,682.9 848.315,682.9 848.874,682.9 849.434,682.9 849.993,682.9 850.552,682.9 851.111,682.9 851.671,682.9 852.23,682.9 852.789,682.9 853.348,682.9 853.908,682.9 854.467,682.9 855.026,682.9 855.585,682.9 856.145,682.9 856.704,682.9 857.263,682.9 857.822,682.9 858.382,682.9 858.941,682.9 859.5,682.9 860.059,682.9 860.619,682.9 861.178,682.9 861.737,682.9 862.296,682.9 862.856,682.9 863.415,682.9 863.974,682.9 864.533,682.9 865.093,682.9 865.652,682.9 866.211,682.9 866.77,682.9 867.33,682.9 867.889,682.9 868.448,682.9 869.007,682.9 869.567,682.9 870.126,682.9 870.685,682.9 871.244,682.9 871.804,682.9 872.363,682.9 872.922,682.9 873.481,682.9 874.041,682.9 874.6,682.9 875.159,682.9 875.718,682.9 876.278,682.9 876.837,682.9 877.396,682.9 877.955,682.9 878.515,682.9 879.074,682.9 879.633,682.9 880.192,682.9 880.752,682.9 881.311,682.9 881.87,682.9 882.429,682.9 882.989,682.9 883.548,682.9 884.107,682.9 884.666,682.9 885.226,682.9 885.785,682.9 886.344,682.9 886.903,682.9 887.463,682.9 888.022,682.9 888.581,682.9 889.14,682.9 889.7,682.9 890.259,682.9 890.818,682.9 891.377,682.9 891.937,682.9 892.496,682.9 893.055,682.9 893.614,682.9 894.174,682.9 894.733,682.9 895.292,682.9 895.851,682.9 896.411,682.9 896.97,682.9 897.529,682.9 898.088,682.9 898.648,682.9 899.207,682.9 899.766,682.9 900.325,682.9 900.885,682.9 901.444,682.9 902.003,682.9 902.562,682.9 903.122,682.9 903.681,682.9 904.24,682.9 904.799,682.9 905.359,682.9 905.918,682.9 906.477,682.9 907.036,682.9 907.596,682.9 908.155,682.9 908.714,682.9 909.273,682.9 909.833,682.9 910.392,682.9 910.951,682.9 911.51,682.9 912.07,682.9 912.629,682.9 913.188,682.9 913.747,682.9 914.307,682.9 914.866,682.9 915.425,682.9 915.984,682.9 916.544,682.9 917.103,682.9 917.662,682.9 918.221,682.9 918.781,682.9 919.34,682.9 919.899,682.9 920.458,682.9 921.018,682.9 921.577,682.9 922.136,682.9 922.695,682.9 923.255,682.9 923.814,682.9 924.373,682.9 924.932,682.9 925.492,682.9 926.051,682.9 926.61,682.9 927.169,682.9 927.729,682.9 928.288,682.9 928.847,682.9 929.406,682.9 929.966,682.9 930.525,682.9 931.084,682.9 931.644,682.9 932.203,682.9 932.762,682.9 933.321,682.9 933.881,682.9 934.44,682.9 934.999,682.9 935.558,682.9 936.118,682.9 936.677,682.9 937.236,682.9 937.795,682.9 938.355,682.9 938.914,682.9 939.473,682.9 940.032,682.9 940.592,682.9 941.151,682.9 941.71,682.9 942.269,682.9 942.829,682.9 943.388,682.9 943.947,682.9 944.506,682.9 945.066,682.9 945.625,682.9 946.184,682.9 946.743,682.9 947.303,682.9 947.862,682.9 948.421,682.9 948.98,682.9 949.54,682.9 950.099,682.9 950.658,682.9 951.217,682.9 951.777,682.9 952.336,682.9 952.895,682.9 953.454,682.9 954.014,682.9 954.573,682.9 955.132,682.9 955.691,682.9 956.251,682.9 956.81,682.9 957.369,682.9 957.928,682.9 958.488,682.9 959.047,682.9 959.606,682.9 960.165,682.9 960.725,682.9 961.284,682.9 961.843,682.9 962.402,682.9 962.962,682.9 963.521,682.9 964.08,682.9 964.639,682.9 965.199,682.9 965.758,682.9 966.317,682.9 966.876,682.9 967.436,682.9 967.995,682.9 968.554,682.9 969.113,682.9 969.673,682.9 970.232,682.9 970.791,682.9 971.35,682.9 971.91,682.9 972.469,682.9 973.028,682.9 973.587,682.9 974.147,682.9 974.706,682.9 975.265,682.9 975.824,682.9 976.384,682.9 976.943,682.9 977.502,682.9 978.061,682.9 978.621,682.9 979.18,682.9 979.739,682.9 980.298,682.9 980.858,682.9 981.417,682.9 981.976,682.9 982.535,682.9 983.095,682.9 983.654,682.9 984.213,682.9 984.772,682.9 985.332,682.9 985.891,682.9 986.45,682.9 987.009,682.9 987.569,682.9 988.128,682.9 988.687,682.9 989.246,682.9 989.806,682.9 990.365,682.9 990.924,682.9 991.483,682.9 992.043,682.9 992.602,682.9 993.161,682.9 993.72,682.9 994.28,682.9 994.839,682.9 995.398,682.9 995.957,682.9 996.517,682.9 997.076,682.9 997.635,682.9 998.194,682.9 998.754,682.9 999.313,682.9 999.872,682.9 1000.43,682.9 1000.99,682.9 1001.55,682.9 1002.11,682.9 1002.67,682.9 1003.23,682.9 1003.79,682.9 1004.35,682.9 1004.91,682.9 1005.46,682.9 1006.02,682.9 1006.58,682.9 1007.14,682.9 1007.7,682.9 1008.26,682.9 1008.82,682.9 1009.38,682.9 1009.94,682.9 1010.5,682.9 1011.06,682.9 1011.62,682.9 1012.18,682.9 1012.73,682.9 1013.29,682.9 1013.85,682.9 1014.41,682.9 1014.97,682.9 1015.53,682.9 1016.09,682.9 1016.65,682.9 1017.21,682.9 1017.77,682.9 1018.33,682.9 1018.89,682.9 1019.45,682.9 1020.01,682.9 1020.56,682.9 1021.12,682.9 1021.68,682.9 1022.24,682.9 1022.8,682.9 1023.36,682.9 1023.92,682.9 1024.48,682.9 1025.04,682.9 1025.6,682.9 1026.16,682.9 1026.72,682.9 1027.28,682.9 1027.83,682.9 1028.39,682.9 1028.95,682.9 1029.51,682.9 1030.07,682.9 1030.63,682.9 1031.19,682.9 1031.75,682.9 1032.31,682.9 1032.87,682.9 1033.43,682.9 1033.99,682.9 1034.55,682.9 1035.1,682.9 1035.66,682.9 1036.22,682.9 1036.78,682.9 1037.34,682.9 1037.9,682.9 1038.46,682.9 1039.02,682.9 1039.58,682.9 1040.14,682.9 1040.7,682.9 1041.26,682.9 1041.82,682.9 1042.38,682.9 1042.93,682.9 1043.49,682.9 1044.05,682.9 1044.61,682.9 1045.17,682.9 1045.73,682.9 1046.29,682.9 1046.85,682.9 1047.41,682.9 1047.97,682.9 1048.53,682.9 1049.09,682.9 1049.65,682.9 1050.2,682.9 1050.76,682.9 1051.32,682.9 1051.88,682.9 1052.44,682.9 1053,682.9 1053.56,682.9 1054.12,682.9 1054.68,682.9 1055.24,682.9 1055.8,682.9 1056.36,682.9 1056.92,682.9 1057.48,682.9 1058.03,682.9 1058.59,682.9 1059.15,682.9 1059.71,682.9 1060.27,682.9 1060.83,682.9 1061.39,682.9 1061.95,682.9 1062.51,682.9 1063.07,682.9 1063.63,682.9 1064.19,682.9 1064.75,682.9 1065.3,682.9 1065.86,682.9 1066.42,682.9 1066.98,682.9 1067.54,682.9 1068.1,682.9 1068.66,682.9 1069.22,682.9 1069.78,682.9 1070.34,682.9 1070.9,682.9 1071.46,682.9 1072.02,682.9 1072.57,682.9 1073.13,682.9 1073.69,682.9 1074.25,682.9 1074.81,682.9 1075.37,682.9 1075.93,682.9 1076.49,682.9 1077.05,682.9 1077.61,682.9 1078.17,682.9 1078.73,682.9 1079.29,682.9 1079.85,682.9 1080.4,682.9 1080.96,682.9 1081.52,682.9 1082.08,682.9 1082.64,682.9 1083.2,682.9 1083.76,682.9 1084.32,682.9 1084.88,682.9 1085.44,682.9 1086,682.9 1086.56,682.9 1087.12,682.9 1087.67,682.9 1088.23,682.9 1088.79,682.9 1089.35,682.9 1089.91,682.9 1090.47,682.9 1091.03,682.9 1091.59,682.9 1092.15,682.9 1092.71,682.9 1093.27,682.9 1093.83,682.9 1094.39,682.9 1094.94,682.9 1095.5,682.9 1096.06,682.9 1096.62,682.9 1097.18,682.9 1097.74,682.9 1098.3,682.9 1098.86,682.9 1099.42,682.9 1099.98,682.9 1100.54,682.9 1101.1,682.9 1101.66,682.9 1102.22,682.9 1102.77,682.9 1103.33,682.9 1103.89,682.9 1104.45,682.9 1105.01,682.9 1105.57,682.9 1106.13,682.9 1106.69,682.9 1107.25,682.9 1107.81,682.9 1108.37,682.9 1108.93,682.9 1109.49,682.9 1110.04,682.9 1110.6,682.9 1111.16,682.9 1111.72,682.9 1112.28,682.9 1112.84,682.9 1113.4,682.9 1113.96,682.9 1114.52,682.9 1115.08,682.9 1115.64,682.9 1116.2,682.9 1116.76,682.9 1117.31,682.9 1117.87,682.9 1118.43,682.9 1118.99,682.9 1119.55,682.9 1120.11,682.9 1120.67,682.9 1121.23,682.9 1121.79,682.9 1122.35,682.9 1122.91,682.9 1123.47,682.9 1124.03,682.9 1124.59,682.9 1125.14,682.9 1125.7,682.9 1126.26,682.9 1126.82,682.9 1127.38,682.9 1127.94,682.9 1128.5,682.9 1129.06,682.9 1129.62,682.9 1130.18,682.9 1130.74,682.9 1131.3,682.9 1131.86,682.9 1132.41,682.9 1132.97,682.9 1133.53,682.9 1134.09,682.9 1134.65,682.9 1135.21,682.9 1135.77,682.9 1136.33,682.9 1136.89,682.9 1137.45,682.9 1138.01,682.9 1138.57,682.9 1139.13,682.9 1139.68,682.9 1140.24,682.9 1140.8,682.9 1141.36,682.9 1141.92,682.9 1142.48,682.9 1143.04,682.9 1143.6,682.9 1144.16,682.9 1144.72,682.9 1145.28,682.9 1145.84,682.9 1146.4,682.9 1146.96,682.9 1147.51,682.9 1148.07,682.9 1148.63,682.9 1149.19,682.9 1149.75,682.9 1150.31,682.9 1150.87,682.9 1151.43,682.9 1151.99,682.9 1152.55,682.9 1153.11,682.9 1153.67,682.9 1154.23,682.9 1154.78,682.9 1155.34,682.9 1155.9,682.9 1156.46,682.9 1157.02,682.9 1157.58,682.9 1158.14,682.9 1158.7,682.9 1159.26,682.9 1159.82,682.9 1160.38,682.9 1160.94,682.9 1161.5,682.9 1162.05,682.9 1162.61,682.9 1163.17,682.9 1163.73,682.9 1164.29,682.9 1164.85,682.9 1165.41,682.9 1165.97,682.9 1166.53,682.9 1167.09,682.9 1167.65,682.9 1168.21,682.9 1168.77,682.9 1169.33,682.9 1169.88,682.9 1170.44,682.9 1171,682.9 1171.56,682.9 1172.12,682.9 1172.68,682.9 1173.24,682.9 1173.8,682.9 1174.36,682.9 1174.92,682.9 1175.48,682.9 1176.04,682.9 1176.6,682.9 1177.15,682.9 1177.71,682.9 1178.27,682.9 1178.83,682.9 1179.39,682.9 1179.95,682.9 1180.51,682.9 1181.07,682.9 1181.63,682.9 1182.19,682.9 1182.75,682.9 1183.31,682.9 1183.87,682.9 1184.43,682.9 1184.98,682.9 1185.54,682.9 1186.1,682.9 1186.66,682.9 1187.22,682.9 1187.78,682.9 1188.34,682.9 1188.9,682.9 1189.46,682.9 1190.02,682.9 1190.58,682.9 1191.14,682.9 1191.7,682.9 1192.25,682.9 1192.81,682.9 1193.37,682.9 1193.93,682.9 1194.49,682.9 1195.05,682.9 1195.61,682.9 1196.17,682.9 1196.73,682.9 1197.29,682.9 1197.85,682.9 1198.41,682.9 1198.97,682.9 1199.52,682.9 1200.08,682.9 1200.64,682.9 1201.2,682.9 1201.76,682.9 1202.32,682.9 1202.88,682.9 1203.44,682.9 1204,682.9 1204.56,682.9 1205.12,682.9 1205.68,682.9 1206.24,682.9 1206.8,682.9 1207.35,682.9 1207.91,682.9 1208.47,682.9 1209.03,682.9 1209.59,682.9 1210.15,682.9 1210.71,682.9 1211.27,682.9 1211.83,682.9 1212.39,682.9 1212.95,682.9 1213.51,682.9 1214.07,682.9 1214.62,682.9 1215.18,682.9 1215.74,682.9 1216.3,682.9 1216.86,682.9 1217.42,682.9 1217.98,682.9 1218.54,682.9 1219.1,682.9 1219.66,682.9 1220.22,682.9 1220.78,682.9 1221.34,682.9 1221.89,682.9 1222.45,682.9 1223.01,682.9 1223.57,682.9 1224.13,682.9 1224.69,682.9 1225.25,682.9 1225.81,682.9 1226.37,682.9 1226.93,682.9 1227.49,682.9 1228.05,682.9 1228.61,682.9 1229.17,682.9 1229.72,682.9 1230.28,682.9 1230.84,682.9 1231.4,682.9 1231.96,682.9 1232.52,682.9 1233.08,682.9 1233.64,682.9 1234.2,682.9 1234.76,682.9 1235.32,682.9 1235.88,682.9 1236.44,682.9 1236.99,682.9 1237.55,682.9 1238.11,682.9 1238.67,682.9 1239.23,682.9 1239.79,682.9 1240.35,682.9 1240.91,682.9 1241.47,682.9 1242.03,682.9 1242.59,682.9 1243.15,682.9 1243.71,682.9 1244.26,682.9 1244.82,682.9 1245.38,682.9 1245.94,682.9 1246.5,682.9 1247.06,682.9 1247.62,682.9 1248.18,682.9 1248.74,682.9 1249.3,682.9 1249.86,682.9 1250.42,682.9 1250.98,682.9 1251.54,682.9 1252.09,682.9 1252.65,682.9 1253.21,682.9 1253.77,682.9 1254.33,682.9 1254.89,682.9 1255.45,682.9 1256.01,682.9 1256.57,682.9 1257.13,682.9 1257.69,682.9 1258.25,682.9 1258.81,682.9 1259.36,682.9 1259.92,682.9 1260.48,682.9 1261.04,682.9 1261.6,682.9 1262.16,682.9 1262.72,682.9 1263.28,682.9 1263.84,682.9 1264.4,682.9 1264.96,682.9 1265.52,682.9 1266.08,682.9 1266.63,682.9 1267.19,682.9 1267.75,682.9 1268.31,682.9 1268.87,682.9 1269.43,682.9 1269.99,682.9 1270.55,682.9 1271.11,682.9 1271.67,682.9 1272.23,682.9 1272.79,682.9 1273.35,682.9 1273.91,682.9 1274.46,682.9 1275.02,682.9 1275.58,682.9 1276.14,682.9 1276.7,682.9 1277.26,682.9 1277.82,682.9 1278.38,682.9 1278.94,682.9 1279.5,682.9 1280.06,682.9 1280.62,682.9 1281.18,682.9 1281.73,682.9 1282.29,682.9 1282.85,682.9 1283.41,682.9 1283.97,682.9 1284.53,682.9 1285.09,682.9 1285.65,682.9 1286.21,682.9 1286.77,682.9 1287.33,682.9 1287.89,682.9 1288.45,682.9 1289,682.9 1289.56,682.9 1290.12,682.9 1290.68,682.9 1291.24,682.9 1291.8,682.9 1292.36,682.9 1292.92,682.9 1293.48,682.9 1294.04,682.9 1294.6,682.9 1295.16,682.9 1295.72,682.9 1296.28,682.9 1296.83,682.9 1297.39,682.9 1297.95,682.9 1298.51,682.9 1299.07,682.9 1299.63,682.9 1300.19,682.9 1300.75,682.9 1301.31,682.9 1301.87,682.9 1302.43,682.9 1302.99,682.9 1303.55,682.9 1304.1,682.9 1304.66,682.9 1305.22,682.9 1305.78,682.9 1306.34,682.9 1306.9,682.9 1307.46,682.9 1308.02,682.9 1308.58,682.9 1309.14,682.9 1309.7,682.9 1310.26,682.9 1310.82,682.9 1311.38,682.9 1311.93,682.9 1312.49,682.9 1313.05,682.9 1313.61,682.9 1314.17,682.9 1314.73,682.9 1315.29,682.9 1315.85,682.9 1316.41,682.9 1316.97,682.9 1317.53,682.9 1318.09,682.9 1318.65,682.9 1319.2,682.9 1319.76,682.9 1320.32,682.9 1320.88,682.9 1321.44,682.9 1322,682.9 1322.56,682.9 1323.12,682.9 1323.68,682.9 1324.24,682.9 1324.8,682.9 1325.36,682.9 1325.92,682.9 1326.47,682.9 1327.03,682.9 1327.59,682.9 1328.15,682.9 1328.71,682.9 1329.27,682.9 1329.83,682.9 1330.39,682.9 1330.95,682.9 1331.51,682.9 1332.07,682.9 1332.63,682.9 1333.19,682.9 1333.75,682.9 1334.3,682.9 1334.86,682.9 1335.42,682.9 1335.98,682.9 1336.54,682.9 1337.1,682.9 1337.66,682.9 1338.22,682.9 1338.78,682.9 1339.34,682.9 1339.9,682.9 1340.46,682.9 1341.02,682.9 1341.57,682.9 1342.13,682.9 1342.69,682.9 1343.25,682.9 1343.81,682.9 1344.37,682.9 1344.93,682.9 1345.49,682.9 1346.05,682.9 1346.61,682.9 1347.17,682.9 1347.73,682.9 1348.29,682.9 1348.84,682.9 1349.4,682.9 1349.96,682.9 1350.52,682.9 1351.08,682.9 1351.64,682.9 1352.2,682.9 1352.76,682.9 1353.32,682.9 1353.88,682.9 1354.44,682.9 1355,682.9 1355.56,682.9 1356.12,682.9 1356.67,682.9 1357.23,682.9 1357.79,682.9 1358.35,682.9 1358.91,682.9 1359.47,682.9 1360.03,682.9 1360.59,682.9 1361.15,682.9 1361.71,682.9 1362.27,682.9 1362.83,682.9 1363.39,682.9 1363.94,682.9 1364.5,682.9 1365.06,682.9 1365.62,682.9 1366.18,682.9 1366.74,682.9 1367.3,682.9 1367.86,682.9 1368.42,682.9 1368.98,682.9 1369.54,682.9 1370.1,682.9 1370.66,682.9 1371.21,682.9 1371.77,682.9 1372.33,682.9 1372.89,682.9 1373.45,682.9 1374.01,682.9 1374.57,682.9 1375.13,682.9 1375.69,682.9 1376.25,682.9 1376.81,682.9 1377.37,682.9 1377.93,682.9 1378.49,682.9 1379.04,682.9 1379.6,682.9 1380.16,682.9 1380.72,682.9 1381.28,682.9 1381.84,682.9 1382.4,682.9 1382.96,682.9 1383.52,682.9 1384.08,682.9 1384.64,682.9 1385.2,682.9 1385.76,682.9 1386.31,682.9 1386.87,682.9 1387.43,682.9 1387.99,682.9 1388.55,682.9 1389.11,682.9 1389.67,682.9 1390.23,682.9 1390.79,682.9 1391.35,682.9 1391.91,682.9 1392.47,682.9 1393.03,682.9 1393.58,682.9 1394.14,682.9 1394.7,682.9 1395.26,682.9 1395.82,682.9 1396.38,682.9 1396.94,682.9 1397.5,682.9 1398.06,682.9 1398.62,682.9 1399.18,682.9 1399.74,682.9 1400.3,682.9 1400.86,682.9 1401.41,682.9 1401.97,682.9 1402.53,682.9 1403.09,682.9 1403.65,682.9 1404.21,682.9 1404.77,682.9 1405.33,682.9 1405.89,682.9 1406.45,682.9 1407.01,682.9 1407.57,682.9 1408.13,682.9 1408.68,682.9 1409.24,682.9 1409.8,682.9 1410.36,682.9 1410.92,682.9 1411.48,682.9 1412.04,682.9 1412.6,682.9 1413.16,682.9 1413.72,682.9 1414.28,682.9 1414.84,682.9 1415.4,682.9 1415.95,682.9 1416.51,682.9 1417.07,682.9 1417.63,682.9 1418.19,682.9 1418.75,682.9 1419.31,682.9 1419.87,682.9 1420.43,682.9 1420.99,682.9 1421.55,682.9 1422.11,682.9 1422.67,682.9 1423.23,682.9 1423.78,682.9 1424.34,682.9 1424.9,682.9 1425.46,682.9 1426.02,682.9 1426.58,682.9 1427.14,682.9 1427.7,682.9 1428.26,682.9 1428.82,682.9 1429.38,682.9 1429.94,682.9 1430.5,682.9 1431.05,682.9 1431.61,682.9 1432.17,682.9 1432.73,682.9 1433.29,682.9 1433.85,682.9 1434.41,682.9 1434.97,682.9 1435.53,682.9 1436.09,682.9 1436.65,682.9 1437.21,682.9 1437.77,682.9 1438.33,682.9 1438.88,682.9 1439.44,682.9 1440,682.9 1440.56,682.9 1441.12,682.9 1441.68,682.9 1442.24,682.9 1442.8,682.9 1443.36,682.9 1443.92,682.9 1444.48,682.9 1445.04,682.9 1445.6,682.9 1446.15,682.9 1446.71,682.9 1447.27,682.9 1447.83,682.9 1448.39,682.9 1448.95,682.9 1449.51,682.9 1450.07,682.9 1450.63,682.9 1451.19,682.9 1451.75,682.9 1452.31,682.9 1452.87,682.9 1453.42,682.9 1453.98,682.9 1454.54,682.9 1455.1,682.9 1455.66,682.9 1456.22,682.9 1456.78,682.9 1457.34,682.9 1457.9,682.9 1458.46,682.9 1459.02,682.9 1459.58,682.9 1460.14,682.9 1460.7,682.9 1461.25,682.9 1461.81,682.9 1462.37,682.9 1462.93,682.9 1463.49,682.9 1464.05,682.9 1464.61,682.9 1465.17,682.9 1465.73,682.9 1466.29,682.9 1466.85,682.9 1467.41,682.9 1467.97,682.9 1468.52,682.9 1469.08,682.9 1469.64,682.9 1470.2,682.9 1470.76,682.9 1471.32,682.9 1471.88,682.9 1472.44,682.9 1473,682.9 1473.56,682.9 1474.12,682.9 1474.68,682.9 1475.24,682.9 1475.79,682.9 1476.35,682.9 1476.91,682.9 1477.47,682.9 1478.03,682.9 1478.59,682.9 1479.15,682.9 1479.71,682.9 1480.27,682.9 1480.83,682.9 1481.39,682.9 1481.95,682.9 1482.51,682.9 1483.07,682.9 1483.62,682.9 1484.18,682.9 1484.74,682.9 1485.3,682.9 1485.86,682.9 1486.42,682.9 1486.98,682.9 1487.54,682.9 1488.1,682.9 1488.66,682.9 1489.22,682.9 1489.78,682.9 1490.34,682.9 1490.89,682.9 1491.45,682.9 1492.01,682.9 1492.57,682.9 1493.13,682.9 1493.69,682.9 1494.25,682.9 1494.81,682.9 1495.37,682.9 1495.93,682.9 1496.49,682.9 1497.05,682.9 1497.61,682.9 1498.16,682.9 1498.72,682.9 1499.28,682.9 1499.84,682.9 1500.4,682.9 1500.96,682.9 1501.52,682.9 1502.08,682.9 1502.64,682.9 1503.2,682.9 1503.76,682.9 1504.32,682.9 1504.88,682.9 1505.44,682.9 1505.99,682.9 1506.55,682.9 1507.11,682.9 1507.67,682.9 1508.23,682.9 1508.79,682.9 1509.35,682.9 1509.91,682.9 1510.47,682.9 1511.03,682.9 1511.59,682.9 1512.15,682.9 1512.71,682.9 1513.26,682.9 1513.82,682.9 1514.38,682.9 1514.94,682.9 1515.5,682.9 1516.06,682.9 1516.62,682.9 1517.18,682.9 1517.74,682.9 1518.3,682.9 1518.86,682.9 1519.42,682.9 1519.98,682.9 1520.53,682.9 1521.09,682.9 1521.65,682.9 1522.21,682.9 1522.77,682.9 1523.33,682.9 1523.89,682.9 1524.45,682.9 1525.01,682.9 1525.57,682.9 1526.13,682.9 1526.69,682.9 1527.25,682.9 1527.81,682.9 1528.36,682.9 1528.92,682.9 1529.48,682.9 1530.04,682.9 1530.6,682.9 1531.16,682.9 1531.72,682.9 1532.28,682.9 1532.84,682.9 1533.4,682.9 1533.96,682.9 1534.52,682.9 1535.08,682.9 1535.63,682.9 1536.19,682.9 1536.75,682.9 1537.31,682.9 1537.87,682.9 1538.43,682.9 1538.99,682.9 1539.55,682.9 1540.11,682.9 1540.67,682.9 1541.23,682.9 1541.79,682.9 1542.35,682.9 1542.9,682.9 1543.46,682.9 1544.02,682.9 1544.58,682.9 1545.14,682.9 1545.7,682.9 1546.26,682.9 1546.82,682.9 1547.38,682.9 1547.94,682.9 1548.5,682.9 1549.06,682.9 1549.62,682.9 1550.18,682.9 1550.73,682.9 1551.29,682.9 1551.85,682.9 1552.41,682.9 1552.97,682.9 1553.53,682.9 1554.09,682.9 1554.65,682.9 1555.21,682.9 1555.77,682.9 1556.33,682.9 1556.89,682.9 1557.45,682.9 1558,682.9 1558.56,682.9 1559.12,682.9 1559.68,682.9 1560.24,682.9 1560.8,682.9 1561.36,682.9 1561.92,682.9 1562.48,682.9 1563.04,682.9 1563.6,682.9 1564.16,682.9 1564.72,682.9 1565.28,682.9 1565.83,682.9 1566.39,682.9 1566.95,682.9 1567.51,682.9 1568.07,682.9 1568.63,682.9 1569.19,682.9 1569.75,682.9 1570.31,682.9 1570.87,682.9 1571.43,682.9 1571.99,682.9 1572.55,682.9 1573.1,682.9 1573.66,682.9 1574.22,682.9 1574.78,682.9 1575.34,682.9 1575.9,682.9 1576.46,682.9 1577.02,682.9 1577.58,682.9 1578.14,682.9 1578.7,682.9 1579.26,682.9 1579.82,682.9 1580.37,682.9 1580.93,682.9 1581.49,682.9 1582.05,682.9 1582.61,682.9 1583.17,682.9 1583.73,682.9 1584.29,682.9 1584.85,682.9 1585.41,682.9 1585.97,682.9 1586.53,682.9 1587.09,682.9 1587.65,682.9 1588.2,682.9 1588.76,682.9 1589.32,682.9 1589.88,682.9 1590.44,682.9 1591,682.9 1591.56,682.9 1592.12,682.9 1592.68,682.9 1593.24,682.9 1593.8,682.9 1594.36,682.9 1594.92,682.9 1595.47,682.9 1596.03,682.9 1596.59,682.9 1597.15,682.9 1597.71,682.9 1598.27,682.9 1598.83,682.9 1599.39,682.9 1599.95,682.9 1600.51,682.9 1601.07,682.9 1601.63,682.9 1602.19,682.9 1602.74,682.9 1603.3,682.9 1603.86,682.9 1604.42,682.9 1604.98,682.9 1605.54,682.9 1606.1,682.9 1606.66,682.9 1607.22,682.9 1607.78,682.9 1608.34,682.9 1608.9,682.9 1609.46,682.9 1610.02,682.9 1610.57,682.9 1611.13,682.9 1611.69,682.9 1612.25,682.9 1612.81,682.9 1613.37,682.9 1613.93,682.9 1614.49,682.9 1615.05,682.9 1615.61,682.9 1616.17,682.9 1616.73,682.9 1617.29,682.9 1617.84,682.9 1618.4,682.9 1618.96,682.9 1619.52,682.9 1620.08,682.9 1620.64,682.9 1621.2,682.9 1621.76,682.9 1622.32,682.9 1622.88,682.9 1623.44,682.9 1624,682.9 1624.56,682.9 1625.11,682.9 1625.67,682.9 1626.23,682.9 1626.79,682.9 1627.35,682.9 1627.91,682.9 1628.47,682.9 1629.03,682.9 1629.59,682.9 1630.15,682.9 1630.71,682.9 1631.27,682.9 1631.83,682.9 1632.39,682.9 1632.94,682.9 1633.5,682.9 1634.06,682.9 1634.62,682.9 1635.18,682.9 1635.74,682.9 1636.3,682.9 1636.86,682.9 1637.42,682.9 1637.98,682.9 1638.54,682.9 1639.1,682.9 1639.66,682.9 1640.21,682.9 1640.77,682.9 1641.33,682.9 1641.89,682.9 1642.45,682.9 1643.01,682.9 1643.57,682.9 1644.13,682.9 1644.69,682.9 1645.25,682.9 1645.81,682.9 1646.37,682.9 1646.93,682.9 1647.48,682.9 1648.04,682.9 1648.6,682.9 1649.16,682.9 1649.72,682.9 1650.28,682.9 1650.84,682.9 1651.4,682.9 1651.96,682.9 1652.52,682.9 1653.08,682.9 1653.64,682.9 1654.2,682.9 1654.76,682.9 1655.31,682.9 1655.87,682.9 1656.43,682.9 1656.99,682.9 1657.55,682.9 1658.11,682.9 1658.67,682.9 1659.23,682.9 1659.79,682.9 1660.35,682.9 1660.91,682.9 1661.47,682.9 1662.03,682.9 1662.58,682.9 1663.14,682.9 1663.7,682.9 1664.26,682.9 1664.82,682.9 1665.38,682.9 1665.94,682.9 1666.5,682.9 1667.06,682.9 1667.62,682.9 1668.18,682.9 1668.74,682.9 1669.3,682.9 1669.85,682.9 1670.41,682.9 1670.97,682.9 1671.53,682.9 1672.09,682.9 1672.65,682.9 1673.21,682.9 1673.77,682.9 1674.33,682.9 1674.89,682.9 1675.45,682.9 1676.01,682.9 1676.57,682.9 1677.13,682.9 1677.68,682.9 1678.24,682.9 1678.8,682.9 1679.36,682.9 1679.92,682.9 1680.48,682.9 1681.04,682.9 1681.6,682.9 1682.16,682.9 1682.72,682.9 1683.28,682.9 1683.84,682.9 1684.4,682.9 1684.95,682.9 1685.51,682.9 1686.07,682.9 1686.63,682.9 1687.19,682.9 1687.75,682.9 1688.31,682.9 1688.87,682.9 1689.43,682.9 1689.99,682.9 1690.55,682.9 1691.11,682.9 1691.67,682.9 1692.23,682.9 1692.78,682.9 1693.34,682.9 1693.9,682.9 1694.46,682.9 1695.02,682.9 1695.58,682.9 1696.14,682.9 1696.7,682.9 1697.26,682.9 1697.82,682.9 1698.38,682.9 1698.94,682.9 1699.5,682.9 1700.05,682.9 1700.61,682.9 1701.17,682.9 1701.73,682.9 1702.29,682.9 1702.85,682.9 1703.41,682.9 1703.97,682.9 1704.53,682.9 1705.09,682.9 1705.65,682.9 1706.21,682.9 1706.77,682.9 1707.32,682.9 1707.88,682.9 1708.44,682.9 1709,682.9 1709.56,682.9 1710.12,682.9 1710.68,682.9 1711.24,682.9 1711.8,682.9 1712.36,682.9 1712.92,682.9 1713.48,682.9 1714.04,682.9 1714.6,682.9 1715.15,682.9 1715.71,682.9 1716.27,682.9 1716.83,682.9 1717.39,682.9 1717.95,682.9 1718.51,682.9 1719.07,682.9 1719.63,682.9 1720.19,682.9 1720.75,682.9 1721.31,682.9 1721.87,682.9 1722.42,682.9 1722.98,682.9 1723.54,682.9 1724.1,682.9 1724.66,682.9 1725.22,682.9 1725.78,682.9 1726.34,682.9 1726.9,682.9 1727.46,682.9 1728.02,682.9 1728.58,682.9 1729.14,682.9 1729.69,682.9 1730.25,682.9 1730.81,682.9 1731.37,682.9 1731.93,682.9 1732.49,682.9 1733.05,682.9 1733.61,682.9 1734.17,682.9 1734.73,682.9 1735.29,682.9 1735.85,682.9 1736.41,682.9 1736.97,682.9 1737.52,682.9 1738.08,682.9 1738.64,682.9 1739.2,682.9 1739.76,682.9 1740.32,682.9 1740.88,682.9 1741.44,682.9 1742,682.9 1742.56,682.9 1743.12,682.9 1743.68,682.9 1744.24,682.9 1744.79,682.9 1745.35,682.9 1745.91,682.9 1746.47,682.9 1747.03,682.9 1747.59,682.9 1748.15,682.9 1748.71,682.9 1749.27,682.9 1749.83,682.9 1750.39,682.9 1750.95,682.9 1751.51,682.9 1752.06,682.9 1752.62,682.9 1753.18,682.9 1753.74,682.9 1754.3,682.9 1754.86,682.9 1755.42,682.9 1755.98,682.9 1756.54,682.9 1757.1,682.9 1757.66,682.9 1758.22,682.9 1758.78,682.9 1759.34,682.9 1759.89,682.9 1760.45,682.9 1761.01,682.9 1761.57,682.9 1762.13,682.9 1762.69,682.9 1763.25,682.9 1763.81,682.9 1764.37,682.9 1764.93,682.9 1765.49,682.9 1766.05,682.9 1766.61,682.9 1767.16,682.9 1767.72,682.9 1768.28,682.9 1768.84,682.9 1769.4,682.9 1769.96,682.9 1770.52,682.9 1771.08,682.9 1771.64,682.9 1772.2,682.9 1772.76,682.9 1773.32,682.9 1773.88,682.9 1774.43,682.9 1774.99,682.9 1775.55,682.9 1776.11,682.9 1776.67,682.9 1777.23,682.9 1777.79,682.9 1778.35,682.9 1778.91,682.9 1779.47,682.9 1780.03,682.9 1780.59,682.9 1781.15,682.9 1781.71,682.9 1782.26,682.9 1782.82,682.9 1783.38,682.9 1783.94,682.9 1784.5,682.9 1785.06,682.9 1785.62,682.9 1786.18,682.9 1786.74,682.9 1787.3,682.9 1787.86,682.9 1788.42,682.9 1788.98,682.9 1789.53,682.9 1790.09,682.9 1790.65,682.9 1791.21,682.9 1791.77,682.9 1792.33,682.9 1792.89,682.9 1793.45,682.9 1794.01,682.9 1794.57,682.9 1795.13,682.9 1795.69,682.9 1796.25,682.9 1796.8,682.9 1797.36,682.9 1797.92,682.9 1798.48,682.9 1799.04,682.9 1799.6,682.9 1800.16,682.9 1800.72,682.9 1801.28,682.9 1801.84,682.9 1802.4,682.9 1802.96,682.9 1803.52,682.9 1804.08,682.9 1804.63,682.9 1805.19,682.9 1805.75,682.9 1806.31,682.9 1806.87,682.9 1807.43,682.9 1807.99,682.9 1808.55,682.9 1809.11,682.9 1809.67,682.9 1810.23,682.9 1810.79,682.9 1811.35,682.9 1811.9,682.9 1812.46,682.9 1813.02,682.9 1813.58,682.9 1814.14,682.9 1814.7,682.9 1815.26,682.9 1815.82,682.9 1816.38,682.9 1816.94,682.9 1817.5,682.9 1818.06,682.9 1818.62,682.9 1819.18,682.9 1819.73,682.9 1820.29,682.9 1820.85,682.9 1821.41,682.9 1821.97,682.9 1822.53,682.9 1823.09,682.9 1823.65,682.9 1824.21,682.9 1824.77,682.9 1825.33,682.9 1825.89,682.9 1826.45,682.9 1827,682.9 1827.56,682.9 1828.12,682.9 1828.68,682.9 1829.24,682.9 1829.8,682.9 1830.36,682.9 1830.92,682.9 1831.48,682.9 1832.04,682.9 1832.6,682.9 1833.16,682.9 1833.72,682.9 1834.27,682.9 1834.83,682.9 1835.39,682.9 1835.95,682.9 1836.51,682.9 1837.07,682.9 1837.63,682.9 1838.19,682.9 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.021592325777355 ± 0.024794336540920517\nProjected Energy: -4.011637487626587 ± (0.007349040458896283, 0.007279030046642987)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.538601</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.6041e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">2.0167e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.698e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.203e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.625e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.676e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(true),Val(false))\n(BoseFS{2,4}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(false),Val(true))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
