var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip290\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip290)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip291\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip290)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip292\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.2 2211.02,1003.2 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.567 2211.02,745.567 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.934 2211.02,487.934 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.3 2211.02,230.3 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.2 423.181,1003.2 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.567 423.181,745.567 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.934 423.181,487.934 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.3 423.181,230.3 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.2 Q349.094 1253.74 349.094 1260.87 Q349.094 1267.98 350.899 1271.54 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.54 Q363.608 1267.98 363.608 1260.87 Q363.608 1253.74 361.779 1250.2 Q359.973 1246.63 356.339 1246.63 M356.339 1242.93 Q362.149 1242.93 365.205 1247.54 Q368.284 1252.12 368.284 1260.87 Q368.284 1269.6 365.205 1274.2 Q362.149 1278.79 356.339 1278.79 Q350.529 1278.79 347.45 1274.2 Q344.395 1269.6 344.395 1260.87 Q344.395 1252.12 347.45 1247.54 Q350.529 1242.93 356.339 1242.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M290.043 1016.55 L306.363 1016.55 L306.363 1020.48 L284.418 1020.48 L284.418 1016.55 Q287.08 1013.79 291.664 1009.16 Q296.27 1004.51 297.451 1003.17 Q299.696 1000.64 300.576 998.907 Q301.478 997.147 301.478 995.457 Q301.478 992.703 299.534 990.967 Q297.613 989.231 294.511 989.231 Q292.312 989.231 289.858 989.995 Q287.427 990.758 284.65 992.309 L284.65 987.587 Q287.474 986.453 289.927 985.874 Q292.381 985.295 294.418 985.295 Q299.789 985.295 302.983 987.981 Q306.177 990.666 306.177 995.157 Q306.177 997.286 305.367 999.207 Q304.58 1001.11 302.474 1003.7 Q301.895 1004.37 298.793 1007.59 Q295.691 1010.78 290.043 1016.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M316.224 985.92 L334.58 985.92 L334.58 989.856 L320.506 989.856 L320.506 998.328 Q321.524 997.981 322.543 997.819 Q323.562 997.633 324.58 997.633 Q330.367 997.633 333.747 1000.8 Q337.126 1003.98 337.126 1009.39 Q337.126 1014.97 333.654 1018.07 Q330.182 1021.15 323.862 1021.15 Q321.687 1021.15 319.418 1020.78 Q317.173 1020.41 314.765 1019.67 L314.765 1014.97 Q316.849 1016.11 319.071 1016.66 Q321.293 1017.22 323.77 1017.22 Q327.774 1017.22 330.112 1015.11 Q332.45 1013 332.45 1009.39 Q332.45 1005.78 330.112 1003.68 Q327.774 1001.57 323.77 1001.57 Q321.895 1001.57 320.02 1001.99 Q318.168 1002.4 316.224 1003.28 L316.224 985.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M356.339 988.999 Q352.728 988.999 350.899 992.564 Q349.094 996.106 349.094 1003.24 Q349.094 1010.34 350.899 1013.91 Q352.728 1017.45 356.339 1017.45 Q359.973 1017.45 361.779 1013.91 Q363.608 1010.34 363.608 1003.24 Q363.608 996.106 361.779 992.564 Q359.973 988.999 356.339 988.999 M356.339 985.295 Q362.149 985.295 365.205 989.902 Q368.284 994.485 368.284 1003.24 Q368.284 1011.96 365.205 1016.57 Q362.149 1021.15 356.339 1021.15 Q350.529 1021.15 347.45 1016.57 Q344.395 1011.96 344.395 1003.24 Q344.395 994.485 347.45 989.902 Q350.529 985.295 356.339 985.295 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M286.062 728.287 L304.418 728.287 L304.418 732.222 L290.344 732.222 L290.344 740.694 Q291.363 740.347 292.381 740.185 Q293.4 740 294.418 740 Q300.205 740 303.585 743.171 Q306.964 746.343 306.964 751.759 Q306.964 757.338 303.492 760.44 Q300.02 763.518 293.701 763.518 Q291.525 763.518 289.256 763.148 Q287.011 762.778 284.603 762.037 L284.603 757.338 Q286.687 758.472 288.909 759.028 Q291.131 759.583 293.608 759.583 Q297.613 759.583 299.951 757.477 Q302.288 755.37 302.288 751.759 Q302.288 748.148 299.951 746.042 Q297.613 743.935 293.608 743.935 Q291.733 743.935 289.858 744.352 Q288.006 744.768 286.062 745.648 L286.062 728.287 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M326.177 731.366 Q322.566 731.366 320.737 734.931 Q318.932 738.472 318.932 745.602 Q318.932 752.708 320.737 756.273 Q322.566 759.815 326.177 759.815 Q329.811 759.815 331.617 756.273 Q333.446 752.708 333.446 745.602 Q333.446 738.472 331.617 734.931 Q329.811 731.366 326.177 731.366 M326.177 727.662 Q331.987 727.662 335.043 732.269 Q338.122 736.852 338.122 745.602 Q338.122 754.329 335.043 758.935 Q331.987 763.518 326.177 763.518 Q320.367 763.518 317.288 758.935 Q314.233 754.329 314.233 745.602 Q314.233 736.852 317.288 732.269 Q320.367 727.662 326.177 727.662 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M356.339 731.366 Q352.728 731.366 350.899 734.931 Q349.094 738.472 349.094 745.602 Q349.094 752.708 350.899 756.273 Q352.728 759.815 356.339 759.815 Q359.973 759.815 361.779 756.273 Q363.608 752.708 363.608 745.602 Q363.608 738.472 361.779 734.931 Q359.973 731.366 356.339 731.366 M356.339 727.662 Q362.149 727.662 365.205 732.269 Q368.284 736.852 368.284 745.602 Q368.284 754.329 365.205 758.935 Q362.149 763.518 356.339 763.518 Q350.529 763.518 347.45 758.935 Q344.395 754.329 344.395 745.602 Q344.395 736.852 347.45 732.269 Q350.529 727.662 356.339 727.662 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M284.835 470.654 L307.057 470.654 L307.057 472.644 L294.511 505.214 L289.627 505.214 L301.432 474.589 L284.835 474.589 L284.835 470.654 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M316.224 470.654 L334.58 470.654 L334.58 474.589 L320.506 474.589 L320.506 483.061 Q321.524 482.714 322.543 482.552 Q323.562 482.367 324.58 482.367 Q330.367 482.367 333.747 485.538 Q337.126 488.709 337.126 494.126 Q337.126 499.704 333.654 502.806 Q330.182 505.885 323.862 505.885 Q321.687 505.885 319.418 505.515 Q317.173 505.144 314.765 504.403 L314.765 499.704 Q316.849 500.839 319.071 501.394 Q321.293 501.95 323.77 501.95 Q327.774 501.95 330.112 499.843 Q332.45 497.737 332.45 494.126 Q332.45 490.515 330.112 488.408 Q327.774 486.302 323.77 486.302 Q321.895 486.302 320.02 486.718 Q318.168 487.135 316.224 488.015 L316.224 470.654 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M356.339 473.732 Q352.728 473.732 350.899 477.297 Q349.094 480.839 349.094 487.968 Q349.094 495.075 350.899 498.64 Q352.728 502.181 356.339 502.181 Q359.973 502.181 361.779 498.64 Q363.608 495.075 363.608 487.968 Q363.608 480.839 361.779 477.297 Q359.973 473.732 356.339 473.732 M356.339 470.029 Q362.149 470.029 365.205 474.635 Q368.284 479.218 368.284 487.968 Q368.284 496.695 365.205 501.302 Q362.149 505.885 356.339 505.885 Q350.529 505.885 347.45 501.302 Q344.395 496.695 344.395 487.968 Q344.395 479.218 347.45 474.635 Q350.529 470.029 356.339 470.029 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M256.664 243.645 L264.303 243.645 L264.303 217.279 L255.992 218.946 L255.992 214.687 L264.256 213.02 L268.932 213.02 L268.932 243.645 L276.571 243.645 L276.571 247.58 L256.664 247.58 L256.664 243.645 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M296.015 216.099 Q292.404 216.099 290.576 219.664 Q288.77 223.205 288.77 230.335 Q288.77 237.441 290.576 241.006 Q292.404 244.548 296.015 244.548 Q299.65 244.548 301.455 241.006 Q303.284 237.441 303.284 230.335 Q303.284 223.205 301.455 219.664 Q299.65 216.099 296.015 216.099 M296.015 212.395 Q301.826 212.395 304.881 217.002 Q307.96 221.585 307.96 230.335 Q307.96 239.062 304.881 243.668 Q301.826 248.252 296.015 248.252 Q290.205 248.252 287.127 243.668 Q284.071 239.062 284.071 230.335 Q284.071 221.585 287.127 217.002 Q290.205 212.395 296.015 212.395 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M326.177 216.099 Q322.566 216.099 320.737 219.664 Q318.932 223.205 318.932 230.335 Q318.932 237.441 320.737 241.006 Q322.566 244.548 326.177 244.548 Q329.811 244.548 331.617 241.006 Q333.446 237.441 333.446 230.335 Q333.446 223.205 331.617 219.664 Q329.811 216.099 326.177 216.099 M326.177 212.395 Q331.987 212.395 335.043 217.002 Q338.122 221.585 338.122 230.335 Q338.122 239.062 335.043 243.668 Q331.987 248.252 326.177 248.252 Q320.367 248.252 317.288 243.668 Q314.233 239.062 314.233 230.335 Q314.233 221.585 317.288 217.002 Q320.367 212.395 326.177 212.395 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M356.339 216.099 Q352.728 216.099 350.899 219.664 Q349.094 223.205 349.094 230.335 Q349.094 237.441 350.899 241.006 Q352.728 244.548 356.339 244.548 Q359.973 244.548 361.779 241.006 Q363.608 237.441 363.608 230.335 Q363.608 223.205 361.779 219.664 Q359.973 216.099 356.339 216.099 M356.339 212.395 Q362.149 212.395 365.205 217.002 Q368.284 221.585 368.284 230.335 Q368.284 239.062 365.205 243.668 Q362.149 248.252 356.339 248.252 Q350.529 248.252 347.45 243.668 Q344.395 239.062 344.395 230.335 Q344.395 221.585 347.45 217.002 Q350.529 212.395 356.339 212.395 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip292)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.3 4017.76,230.3 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.58 459.964,1248.04 460.533,1247.43 461.101,1246.75 461.669,1245.99 462.238,1245.15 462.806,1244.23 463.375,1242.19 463.943,1240.04 464.511,1238.83 465.08,1237.53 465.648,1235.09 466.216,1233.55 466.785,1231.86 467.353,1230.08 467.921,1228.17 468.49,1226.09 469.058,1223.89 469.626,1221.54 470.195,1219.02 470.763,1216.34 471.331,1213.49 471.9,1210.44 472.468,1207.2 473.036,1202.71 473.605,1199.1 474.173,1195.3 474.741,1190.29 475.31,1186.12 475.878,1180.67 476.446,1174.99 477.015,1170 477.583,1161.69 478.152,1156.04 478.72,1149.09 479.288,1141.9 479.857,1134.46 480.425,1127.88 480.993,1121.08 481.562,1114.05 482.13,1106.68 482.698,1099.21 483.267,1090.48 483.835,1080.55 484.403,1072.42 484.972,1059.93 485.54,1050.16 486.108,1039.27 486.677,1029.31 487.245,1019.24 487.813,1007.99 488.382,996.774 488.95,987.541 489.518,976.014 490.087,966.589 490.655,955.022 491.224,944.444 491.792,933.801 492.36,922.16 492.929,912.527 493.497,902.809 494.065,891.972 494.634,880.17 495.202,870.416 495.77,859.622 496.339,847.801 496.907,835.094 497.475,825.618 498.044,814.908 498.612,805.386 499.18,794.765 499.749,784.215 500.317,771.638 500.885,762.327 501.454,751.992 502.022,742.84 502.59,729.589 503.159,717.745 503.727,706.999 504.295,695.477 504.864,685.035 505.432,673.631 506.001,664.694 506.569,653.685 507.137,642.727 507.706,630.121 508.274,622.863 508.842,614.553 509.411,605.193 509.979,599.224 510.547,591.166 511.116,583.215 511.684,573.232 512.252,566.742 512.821,560.056 513.389,552.687 513.957,545.445 514.526,538.224 515.094,528.258 515.662,523.467 516.231,517.66 516.799,511.049 517.367,506.472 517.936,497.833 518.504,492.342 519.072,484.953 519.641,479.028 520.209,474.033 520.778,469.266 521.346,465.447 521.914,459.508 522.483,453.836 523.051,446.085 523.619,441.76 524.188,436.536 524.756,432.155 525.324,426.044 525.893,422.2 526.461,419.293 527.029,414.4 527.598,411.69 528.166,407.982 528.734,404.522 529.303,398.77 529.871,395.252 530.439,389.716 531.008,383.407 531.576,379.274 532.144,376.305 532.713,374.611 533.281,369.681 533.85,368.136 534.418,365.433 534.986,361.769 535.555,360.221 536.123,355.5 536.691,351.822 537.26,347.308 537.828,343.199 538.396,341.123 538.965,339.35 539.533,337.261 540.101,334.187 540.67,332.386 541.238,328.287 541.806,324.45 542.375,323.977 542.943,320.453 543.511,318.121 544.08,316.785 544.648,315.272 545.216,312.901 545.785,308.456 546.353,305.417 546.921,303.609 547.49,299.767 548.058,295.046 548.627,294.743 549.195,295.277 549.763,294.59 550.332,292.965 550.9,291.487 551.468,291.999 552.037,286.43 552.605,286.105 553.173,285.86 553.742,285.688 554.31,286.181 554.878,285.793 555.447,283.123 556.015,282.615 556.583,282.17 557.152,281.592 557.72,280.259 558.288,278.796 558.857,279.164 559.425,274.479 559.993,273.351 560.562,272.287 561.13,271.018 561.698,270.27 562.267,271.497 562.835,272.377 563.404,271.098 563.972,270.859 564.54,270.43 565.109,270.241 565.677,269.028 566.245,267.582 566.814,267.272 567.382,267.143 567.95,266.872 568.519,264.689 569.087,262.449 569.655,261.433 570.224,260.46 570.792,259.664 571.36,259.892 571.929,260.042 572.497,261.203 573.065,260.231 573.634,261.31 574.202,260.159 574.77,259.055 575.339,259.014 575.907,258.881 576.476,257.943 577.044,255.793 577.612,254.677 578.181,255.91 578.749,254.906 579.317,255.947 579.886,256.983 580.454,253.753 581.022,252.994 581.591,254.108 582.159,253.081 582.727,254.122 583.296,255.095 583.864,250.869 584.432,250.974 585.001,252.106 585.569,251.041 586.137,251.111 586.706,251.223 587.274,250.361 587.842,250.443 588.411,249.657 588.979,248.808 589.547,249.014 590.116,250.199 590.684,250.286 591.253,251.189 591.821,249.205 592.389,249.368 592.958,251.42 593.526,252.416 594.094,252.193 594.663,252.019 595.231,250.703 595.799,250.701 596.368,249.52 596.936,250.356 597.504,248.991 598.073,248.94 598.641,249.804 599.209,250.686 599.778,251.464 600.346,248.994 600.914,248.919 601.483,247.805 602.051,247.672 602.619,247.386 603.188,246.157 603.756,244.123 604.325,244.323 604.893,244.42 605.461,243.564 606.03,243.386 606.598,244.577 607.166,242.754 607.735,242.877 608.303,244.092 608.871,242.307 609.44,241.555 610.008,240.884 610.576,239.146 611.145,238.276 611.713,238.611 612.281,238.664 612.85,239.711 613.418,239.984 613.986,241.245 614.555,240.399 615.123,238.577 615.691,239.164 616.26,239.678 616.828,238.889 617.396,237.189 617.965,235.582 618.533,236.177 619.102,236.778 619.67,237.307 620.238,236.799 620.807,238.101 621.375,235.335 621.943,235.697 622.512,234.949 623.08,236.563 623.648,237.988 624.217,238.635 624.785,239.05 625.353,238.311 625.922,239.546 626.49,240.823 627.058,242.087 627.627,242.135 628.195,242.147 628.763,241.26 629.332,240.083 629.9,239.278 630.468,238.486 631.037,236.766 631.605,234.174 632.173,230.765 632.742,231.533 633.31,235.662 633.879,236.325 634.447,236.7 635.015,236.436 635.584,237.085 636.152,238.639 636.72,237.957 637.289,238.178 637.857,236.406 638.425,234.399 638.994,234.813 639.562,234.057 640.13,234.444 640.699,236.073 641.267,235.33 641.835,234.639 642.404,233.003 642.972,232.512 643.54,232.035 644.109,232.643 644.677,231.209 645.245,232.747 645.814,235.163 646.382,237.646 646.951,237.003 647.519,237.239 648.087,238.369 648.656,236.313 649.224,236.571 649.792,235.828 650.361,236.148 650.929,235.319 651.497,237.69 652.066,239.961 652.634,238.984 653.202,238.872 653.771,238.258 654.339,240.56 654.907,242.608 655.476,242.565 656.044,243.218 656.612,245.082 657.181,244.596 657.749,243.853 658.317,243.409 658.886,243.042 659.454,242.787 660.022,241.375 660.591,242.145 661.159,241.704 661.728,240.398 662.296,241.273 662.864,241.028 663.433,239.876 664.001,240.734 664.569,241.504 665.138,241.229 665.706,242.944 666.274,239.563 666.843,236.098 667.411,237.052 667.979,236.148 668.548,235.093 669.116,235.117 669.684,234.201 670.253,235.413 670.821,232.375 671.389,231.608 671.958,232.935 672.526,233.282 673.094,234.383 673.663,231.395 674.231,232.79 674.799,231.892 675.368,233.195 675.936,234.452 676.505,235.562 677.073,234.662 677.641,233.71 678.21,233.909 678.778,232.963 679.346,233.108 679.915,232.357 680.483,231.732 681.051,229.016 681.62,231.601 682.188,231.85 682.756,232.369 683.325,232.872 683.893,233.161 684.461,233.412 685.03,233.578 685.598,233.942 686.166,233.962 686.735,233.09 687.303,234.549 687.871,234.467 688.44,236.524 689.008,236.346 689.577,234.311 690.145,234.355 690.713,234.543 691.282,233.658 691.85,233.785 692.418,235.04 692.987,235.135 693.555,237.25 694.123,237.464 694.692,236.218 695.26,236.078 695.828,234.97 696.397,235.092 696.965,232.041 697.533,233.379 698.102,233.564 698.67,232.894 699.238,232.105 699.807,232.231 700.375,231.376 700.943,233.51 701.512,235.651 702.08,235.711 702.648,237.658 703.217,237.485 703.785,236.24 704.354,236.265 704.922,238.918 705.49,238.563 706.059,239.287 706.627,238.29 707.195,236.275 707.764,236.254 708.332,236.161 708.9,238.07 709.469,236.632 710.037,236.236 710.605,236.07 711.174,235.797 711.742,233.771 712.31,229.771 712.879,229.162 713.447,228.539 714.015,228.851 714.584,227.896 715.152,226.369 715.72,226.8 716.289,227.343 716.857,227.893 717.425,228.324 717.994,229.696 718.562,228.876 719.131,227.168 719.699,226.599 720.267,227.373 720.836,227.91 721.404,229.443 721.972,227.873 722.541,228.701 723.109,230.993 723.677,228.242 724.246,226.716 724.814,229.408 725.382,229.787 725.951,232.117 726.519,232.375 727.087,232.439 727.656,232.841 728.224,234.041 728.792,232.205 729.361,231.381 729.929,230.74 730.497,233.105 731.066,233.169 731.634,234.355 732.203,235.496 732.771,233.357 733.339,232.37 733.908,232.674 734.476,235.864 735.044,236.832 735.613,236.464 736.181,235.149 736.749,235.003 737.318,236.093 737.886,237.176 738.454,236.695 739.023,237.445 739.591,237.311 740.159,238.128 740.728,237.808 741.296,236.42 741.864,237.202 742.433,235.894 743.001,236.535 743.569,237.219 744.138,238.961 744.706,236.589 745.274,237.007 745.843,238.836 746.411,238.317 746.98,238.08 747.548,234.616 748.116,234.277 748.685,234.127 749.253,234.813 749.821,235.697 750.39,233.554 750.958,235.432 751.526,235.218 752.095,232.937 752.663,232.689 753.231,231.623 753.8,231.406 754.368,231.497 754.936,231.583 755.505,231.395 756.073,230.439 756.641,230.52 757.21,228.366 757.778,229.557 758.346,231.914 758.915,231.743 759.483,231.922 760.052,231.992 760.62,231.939 761.188,230.054 761.757,230.147 762.325,229.099 762.893,229.524 763.462,229.614 764.03,230.773 764.598,229.801 765.167,227.045 765.735,226.39 766.303,226.598 766.872,226.115 767.44,227.397 768.008,227.604 768.577,227.739 769.145,227.04 769.713,228.581 770.282,229.04 770.85,231.452 771.418,230.582 771.987,233.727 772.555,233.579 773.123,235.657 773.692,234.279 774.26,235.024 774.829,233.06 775.397,232.203 775.965,233.259 776.534,233.061 777.102,232.965 777.67,233.789 778.239,235.818 778.807,234.593 779.375,233.507 779.944,233.559 780.512,234.348 781.08,233.265 781.649,236.319 782.217,236.008 782.785,236.758 783.354,235.626 783.922,236.532 784.49,237.334 785.059,237.923 785.627,238.499 786.195,237.899 786.764,237.672 787.332,236.263 787.9,234.855 788.469,233.546 789.037,236.274 789.606,235.763 790.174,233.979 790.742,231.72 791.311,230.65 791.879,231.69 792.447,230.585 793.016,227.492 793.584,225.859 794.152,228.268 794.721,227.467 795.289,225.753 795.857,227.127 796.426,228.558 796.994,229.84 797.562,228.815 798.131,229.081 798.699,228.488 799.267,228.727 799.836,228.93 800.404,229.214 800.972,228.594 801.541,228.805 802.109,228.952 802.678,228.109 803.246,229.315 803.814,228.401 804.383,228.586 804.951,229.773 805.519,231.068 806.088,230.269 806.656,231.328 807.224,231.534 807.793,230.312 808.361,228.041 808.929,226.245 809.498,224.64 810.066,225.086 810.634,224.428 811.203,226.022 811.771,226.624 812.339,226.215 812.908,226.735 813.476,228.132 814.044,228.206 814.613,226.496 815.181,227.873 815.749,230.157 816.318,228.176 816.886,228.633 817.455,229.937 818.023,228.064 818.591,228.472 819.16,226.767 819.728,227.262 820.296,226.672 820.865,227.953 821.433,226.207 822.001,227.755 822.57,228.048 823.138,228.57 823.706,227.981 824.275,232.334 824.843,231.487 825.411,231.796 825.98,230.813 826.548,229.921 827.116,231.38 827.685,232.59 828.253,232.665 828.821,232.829 829.39,233.241 829.958,233.201 830.526,235.391 831.095,233.145 831.663,232.079 832.232,232.222 832.8,233.392 833.368,233.624 833.937,232.454 834.505,234.593 835.073,234.552 835.642,237.51 836.21,237.075 836.778,236.898 837.347,235.359 837.915,236.13 838.483,236.598 839.052,235.035 839.62,235.019 840.188,235.769 840.757,234.325 841.325,233.062 841.893,234.085 842.462,233.924 843.03,234.939 843.598,233.711 844.167,233.801 844.735,233.65 845.304,233.686 845.872,234.763 846.44,233.605 847.009,233.314 847.577,232.895 848.145,233.748 848.714,235.657 849.282,235.326 849.85,234.916 850.419,234.763 850.987,236.511 851.555,236.213 852.124,234.995 852.692,236.034 853.26,234.612 853.829,232.358 854.397,232.308 854.965,234.181 855.534,235.075 856.102,235.779 856.67,235.33 857.239,233.853 857.807,234.741 858.375,234.589 858.944,233.202 859.512,232.012 860.081,232.9 860.649,233.482 861.217,230.065 861.786,231.14 862.354,231.078 862.922,232.083 863.491,229.895 864.059,229.781 864.627,229.747 865.196,230.955 865.764,228.947 866.332,226.927 866.901,226.174 867.469,225.47 868.037,223.639 868.606,223.257 869.174,224.762 869.742,225.216 870.311,224.59 870.879,222.022 871.447,224.818 872.016,226.475 872.584,226.88 873.152,227.244 873.721,228.682 874.289,227.862 874.858,229.274 875.426,231.55 875.994,229.649 876.563,228.791 877.131,227.984 877.699,227.174 878.268,228.265 878.836,229.351 879.404,229.494 879.973,231.531 880.541,231.258 881.109,230.174 881.678,228.049 882.246,227.312 882.814,226.547 883.383,228.796 883.951,228.201 884.519,229.545 885.088,228.731 885.656,228.074 886.224,229.548 886.793,227.518 887.361,227.494 887.93,228.782 888.498,229.051 889.066,230.233 889.635,230.364 890.203,230.492 890.771,233.505 891.34,232.364 891.908,233.472 892.476,232.374 893.045,233.551 893.613,233.505 894.181,234.492 894.75,233.326 895.318,233.186 895.886,232.124 896.455,230.771 897.023,228.851 897.591,229.034 898.16,231.301 898.728,229.37 899.296,229.437 899.865,229.43 900.433,228.632 901.001,230.081 901.57,231.262 902.138,233.168 902.707,233.051 903.275,232.94 903.843,230.802 904.412,230.833 904.98,232.947 905.548,232.861 906.117,233.623 906.685,233.409 907.253,233.321 907.822,232.122 908.39,230.879 908.958,229.991 909.527,228.27 910.095,227.535 910.663,227.81 911.232,229.239 911.8,228.321 912.368,228.595 912.937,228.73 913.505,230.034 914.073,231.23 914.642,230.28 915.21,229.464 915.779,228.803 916.347,230.006 916.915,230.154 917.484,231.14 918.052,231.302 918.62,233.22 919.189,233.012 919.757,232.995 920.325,233.793 920.894,233.505 921.462,231.311 922.03,229.241 922.599,230.427 923.167,229.288 923.735,229.678 924.304,231.745 924.872,233.687 925.44,233.535 926.009,233.391 926.577,234.412 927.145,235.061 927.714,235.736 928.282,232.322 928.85,231.225 929.419,234.2 929.987,234.849 930.556,236.715 931.124,235.245 931.692,234.031 932.261,230.648 932.829,230.593 933.397,231.78 933.966,229.838 934.534,231.054 935.102,230.128 935.671,230.173 936.239,230.307 936.807,229.393 937.376,229.331 937.944,229.459 938.512,228.471 939.081,227.535 939.649,228.79 940.217,230.937 940.786,230.964 941.354,230.743 941.922,231.032 942.491,229.886 943.059,229.9 943.627,229.843 944.196,227.715 944.764,225.863 945.333,225.25 945.901,227.58 946.469,230.011 947.038,230.184 947.606,230.384 948.174,232.565 948.743,232.646 949.311,232.715 949.879,233.733 950.448,233.452 951.016,233.037 951.584,229.8 952.153,228.596 952.721,226.768 953.289,225.999 953.858,225.442 954.426,225.982 954.994,228.58 955.563,228.724 956.131,229.051 956.699,227.2 957.268,227.308 957.836,229.696 958.405,228.829 958.973,228.107 959.541,228.353 960.11,229.73 960.678,229.752 961.246,233.995 961.815,234.827 962.383,235.475 962.951,235.32 963.52,233.038 964.088,231.777 964.656,231.688 965.225,230.502 965.793,229.567 966.361,229.665 966.93,230.841 967.498,231.925 968.066,231.895 968.635,231.932 969.203,232.804 969.771,232.692 970.34,232.472 970.908,232.294 971.476,232.184 972.045,233.061 972.613,230.768 973.182,231.806 973.75,231.861 974.318,232.712 974.887,232.684 975.455,233.949 976.023,230.798 976.592,229.863 977.16,229.911 977.728,229.041 978.297,229.124 978.865,229.243 979.433,229.254 980.002,230.389 980.57,232.418 981.138,233.331 981.707,231.989 982.275,230.924 982.843,232.257 983.412,232.143 983.98,233.138 984.548,232.945 985.117,232.83 985.685,232.587 986.253,233.63 986.822,232.513 987.39,231.167 987.959,231.181 988.527,233.026 989.095,232.772 989.664,229.51 990.232,229.619 990.8,227.631 991.369,228.84 991.937,230.044 992.505,230.365 993.074,231.14 993.642,228.981 994.21,227.007 994.779,227.003 995.347,228.223 995.915,228.302 996.484,228.553 997.052,228.725 997.62,229.777 998.189,230.947 998.757,230.75 999.325,229.676 999.894,230.905 1000.46,231.883 1001.03,232.745 1001.6,232.51 1002.17,231.51 1002.74,229.446 1003.3,229.331 1003.87,229.5 1004.44,229.632 1005.01,228.598 1005.58,228.583 1006.15,228.711 1006.71,231.026 1007.28,234.226 1007.85,232.005 1008.42,233.988 1008.99,234.994 1009.56,234.695 1010.12,233.327 1010.69,236.049 1011.26,234.542 1011.83,234.431 1012.4,235.184 1012.97,234.86 1013.53,236.495 1014.1,235.308 1014.67,235.129 1015.24,237.792 1015.81,236.144 1016.38,235.825 1016.94,236.455 1017.51,235.714 1018.08,238.633 1018.65,237.054 1019.22,235.308 1019.79,234.82 1020.35,234.353 1020.92,232.969 1021.49,231.477 1022.06,232.264 1022.63,230.967 1023.2,230.768 1023.76,230.58 1024.33,229.426 1024.9,229.323 1025.47,230.274 1026.04,231.235 1026.61,233.197 1027.17,233.757 1027.74,233.275 1028.31,233.9 1028.88,233.521 1029.45,233.236 1030.02,233.894 1030.58,232.805 1031.15,229.524 1031.72,229.463 1032.29,230.305 1032.86,230.227 1033.43,227.914 1033.99,226.973 1034.56,229.083 1035.13,230.11 1035.7,230.116 1036.27,229.101 1036.84,229.197 1037.4,228.161 1037.97,229.231 1038.54,228.494 1039.11,230.539 1039.68,230.44 1040.25,231.32 1040.81,229.126 1041.38,230.068 1041.95,229.044 1042.52,228.125 1043.09,227.082 1043.66,228.509 1044.22,230.695 1044.79,228.37 1045.36,228.187 1045.93,226.353 1046.5,226.73 1047.07,225.861 1047.63,226.336 1048.2,224.275 1048.77,225.779 1049.34,225.088 1049.91,225.36 1050.48,224.386 1051.05,226.878 1051.61,223.021 1052.18,225.484 1052.75,225.644 1053.32,225.917 1053.89,225.052 1054.46,226.439 1055.02,227.816 1055.59,227.041 1056.16,227.077 1056.73,227.226 1057.3,225.491 1057.87,226.842 1058.43,226.274 1059,226.463 1059.57,226.587 1060.14,229.874 1060.71,230.005 1061.28,231.202 1061.84,231.01 1062.41,231.943 1062.98,230.783 1063.55,231.692 1064.12,230.454 1064.69,227.403 1065.25,226.742 1065.82,227.866 1066.39,228.079 1066.96,231.511 1067.53,232.46 1068.1,232.388 1068.66,233.145 1069.23,232.991 1069.8,232.859 1070.37,231.616 1070.94,230.636 1071.51,233.608 1072.07,235.62 1072.64,233.399 1073.21,231.202 1073.78,231.279 1074.35,232.333 1074.92,231.13 1075.48,230.127 1076.05,230.283 1076.62,232.344 1077.19,232.072 1077.76,231.848 1078.33,230.768 1078.89,231.842 1079.46,230.725 1080.03,231.812 1080.6,232.71 1081.17,232.54 1081.74,233.378 1082.3,234.109 1082.87,234.987 1083.44,233.572 1084.01,230.244 1084.58,232.204 1085.15,233.062 1085.71,232.896 1086.28,232.543 1086.85,234.008 1087.42,232.597 1087.99,234.388 1088.56,233.07 1089.12,232.048 1089.69,231.928 1090.26,229.829 1090.83,231.845 1091.4,231.745 1091.97,230.383 1092.53,230.288 1093.1,230.426 1093.67,232.54 1094.24,233.126 1094.81,231.88 1095.38,230.743 1095.94,231.502 1096.51,231.343 1097.08,229.042 1097.65,226.781 1098.22,226.791 1098.79,225.877 1099.35,220.955 1099.92,221.382 1100.49,219.895 1101.06,220.494 1101.63,222.242 1102.2,221.755 1102.76,221.252 1103.33,221.817 1103.9,220.57 1104.47,221.311 1105.04,224.164 1105.61,225.651 1106.17,227 1106.74,230.403 1107.31,230.803 1107.88,228.792 1108.45,226.696 1109.02,225.026 1109.58,225.633 1110.15,226.027 1110.72,226.412 1111.29,228.692 1111.86,227.737 1112.43,229.165 1112.99,226.398 1113.56,226.765 1114.13,225.165 1114.7,223.529 1115.27,227.274 1115.84,228.658 1116.4,229.236 1116.97,229.592 1117.54,230.43 1118.11,231.476 1118.68,231.287 1119.25,233.174 1119.81,232.021 1120.38,232.154 1120.95,233.407 1121.52,232.18 1122.09,230.08 1122.66,229.034 1123.23,231.271 1123.79,231.253 1124.36,230.291 1124.93,232.668 1125.5,234.529 1126.07,235.26 1126.64,236.845 1127.2,237.429 1127.77,238.105 1128.34,237.526 1128.91,236.989 1129.48,237.702 1130.05,239.415 1130.61,240.842 1131.18,241.156 1131.75,238.277 1132.32,237.8 1132.89,237.3 1133.46,234.891 1134.02,233.669 1134.59,232.532 1135.16,231.437 1135.73,231.467 1136.3,232.638 1136.87,232.586 1137.43,232.3 1138,232.333 1138.57,233.107 1139.14,234.922 1139.71,235.848 1140.28,235.388 1140.84,234.05 1141.41,234.786 1141.98,234.189 1142.55,231.741 1143.12,231.611 1143.69,232.554 1144.25,233.477 1144.82,231.195 1145.39,231.138 1145.96,229.802 1146.53,227.883 1147.1,228.93 1147.66,227.86 1148.23,227.751 1148.8,228.945 1149.37,230.093 1149.94,230.104 1150.51,227.758 1151.07,226.969 1151.64,226.04 1152.21,226.468 1152.78,226.61 1153.35,226.968 1153.92,225.208 1154.48,225.374 1155.05,226.64 1155.62,226.816 1156.19,226.129 1156.76,226.438 1157.33,226.824 1157.89,228.377 1158.46,229.353 1159.03,229.25 1159.6,231.346 1160.17,232.24 1160.74,230.991 1161.3,229.924 1161.87,227.9 1162.44,226.987 1163.01,226.211 1163.58,226.378 1164.15,227.747 1164.71,228.129 1165.28,228.512 1165.85,226.599 1166.42,230.103 1166.99,231.201 1167.56,230.232 1168.12,230.238 1168.69,229.33 1169.26,228.149 1169.83,229.146 1170.4,229.274 1170.97,230.29 1171.53,228.099 1172.1,228.44 1172.67,228.646 1173.24,227.771 1173.81,227.734 1174.38,229.989 1174.94,231.163 1175.51,230.145 1176.08,232.218 1176.65,232.122 1177.22,232.068 1177.79,230.042 1178.35,231.121 1178.92,230.19 1179.49,228.24 1180.06,229.442 1180.63,228.492 1181.2,228.515 1181.76,227.712 1182.33,229.03 1182.9,230.224 1183.47,232.492 1184.04,234.493 1184.61,233.235 1185.17,232.131 1185.74,232.153 1186.31,230.933 1186.88,231.924 1187.45,230.912 1188.02,228.812 1188.58,228.134 1189.15,227.196 1189.72,227.641 1190.29,229.293 1190.86,231.483 1191.43,231.537 1192,232.431 1192.56,230.476 1193.13,232.56 1193.7,233.628 1194.27,232.247 1194.84,232.086 1195.41,232.07 1195.97,231.032 1196.54,232.003 1197.11,231.005 1197.68,233.112 1198.25,233.85 1198.82,234.682 1199.38,234.461 1199.95,235.026 1200.52,234.488 1201.09,234.22 1201.66,232.025 1202.23,233.906 1202.79,234.422 1203.36,232.125 1203.93,232.987 1204.5,231.65 1205.07,231.522 1205.64,232.329 1206.2,233.236 1206.77,235.007 1207.34,237.581 1207.91,234.903 1208.48,235.432 1209.05,234.979 1209.61,235.755 1210.18,232.282 1210.75,231.131 1211.32,230.975 1211.89,230.893 1212.46,231.773 1213.02,230.515 1213.59,228.343 1214.16,227.204 1214.73,226.447 1215.3,228.602 1215.87,229.905 1216.43,232.104 1217,232.936 1217.57,231.732 1218.14,230.771 1218.71,232.623 1219.28,233.518 1219.84,232.216 1220.41,231.164 1220.98,230.05 1221.55,229.13 1222.12,230.581 1222.69,228.579 1223.25,230.703 1223.82,230.513 1224.39,230.573 1224.96,230.663 1225.53,233.563 1226.1,234.345 1226.66,233.928 1227.23,232.236 1227.8,232.103 1228.37,231.812 1228.94,231.751 1229.51,229.319 1230.07,231.361 1230.64,232.202 1231.21,229.735 1231.78,227.519 1232.35,226.388 1232.92,224.233 1233.48,224.652 1234.05,225.784 1234.62,223.834 1235.19,224.337 1235.76,222.64 1236.33,221.95 1236.89,224.382 1237.46,226.972 1238.03,228.238 1238.6,227.314 1239.17,227.413 1239.74,227.405 1240.3,229.598 1240.87,230.601 1241.44,229.487 1242.01,228.744 1242.58,228.028 1243.15,226.368 1243.71,225.829 1244.28,226.249 1244.85,227.516 1245.42,228.757 1245.99,229.948 1246.56,229.821 1247.12,227.954 1247.69,229.205 1248.26,228.139 1248.83,228.264 1249.4,228.543 1249.97,227.636 1250.53,226.76 1251.1,228.136 1251.67,228.208 1252.24,227.301 1252.81,227.626 1253.38,227.801 1253.94,229.152 1254.51,229.441 1255.08,230.682 1255.65,229.531 1256.22,229.622 1256.79,228.697 1257.35,228.044 1257.92,226.36 1258.49,226.775 1259.06,224.088 1259.63,225.592 1260.2,225.076 1260.76,226.862 1261.33,226.186 1261.9,226.554 1262.47,228.08 1263.04,230.308 1263.61,231.264 1264.18,231.149 1264.74,231.013 1265.31,231.056 1265.88,233.083 1266.45,232.252 1267.02,235.246 1267.59,233.728 1268.15,234.347 1268.72,234.218 1269.29,234.913 1269.86,236.753 1270.43,235.297 1271,234.957 1271.56,234.702 1272.13,235.425 1272.7,235.369 1273.27,233.984 1273.84,233.649 1274.41,233.364 1274.97,233.955 1275.54,232.488 1276.11,232.451 1276.68,233.301 1277.25,232.057 1277.82,231.979 1278.38,231.863 1278.95,229.862 1279.52,230.803 1280.09,230.783 1280.66,231.572 1281.23,231.655 1281.79,231.68 1282.36,232.706 1282.93,230.635 1283.5,230.775 1284.07,231.717 1284.64,231.652 1285.2,231.431 1285.77,228.301 1286.34,229.529 1286.91,227.641 1287.48,230.921 1288.05,227.718 1288.61,232.2 1289.18,232.15 1289.75,231.152 1290.32,231.145 1290.89,232.163 1291.46,231.073 1292.02,232.145 1292.59,230.924 1293.16,232.915 1293.73,232.602 1294.3,233.368 1294.87,234.188 1295.43,234.794 1296,234.265 1296.57,232.857 1297.14,233.705 1297.71,233.37 1298.28,233.182 1298.84,232.988 1299.41,233.735 1299.98,231.364 1300.55,231.253 1301.12,229.899 1301.69,227.614 1302.25,227.681 1302.82,224.808 1303.39,226.219 1303.96,225.585 1304.53,226.836 1305.1,225.947 1305.66,226.126 1306.23,225.548 1306.8,224.84 1307.37,224.104 1307.94,223.648 1308.51,226.374 1309.07,227.544 1309.64,227.834 1310.21,228.194 1310.78,228.524 1311.35,228.881 1311.92,231.24 1312.48,229.086 1313.05,228.181 1313.62,228.343 1314.19,227.549 1314.76,226.505 1315.33,225.658 1315.89,226.002 1316.46,228.403 1317.03,228.404 1317.6,227.596 1318.17,225.862 1318.74,229.288 1319.3,228.559 1319.87,228.804 1320.44,230.05 1321.01,230.158 1321.58,232.284 1322.15,228.964 1322.71,227.194 1323.28,227.426 1323.85,229.587 1324.42,231.026 1324.99,231.168 1325.56,231.022 1326.12,231.749 1326.69,235.714 1327.26,233.412 1327.83,233.143 1328.4,232.063 1328.97,232.06 1329.53,231.825 1330.1,231.885 1330.67,232.997 1331.24,232.761 1331.81,234.754 1332.38,236.468 1332.94,233.644 1333.51,234.259 1334.08,231.039 1334.65,233.188 1335.22,235.102 1335.79,233.79 1336.36,233.51 1336.92,233.175 1337.49,233.659 1338.06,234.573 1338.63,235.208 1339.2,235.645 1339.77,234.323 1340.33,234.094 1340.9,228.746 1341.47,231.925 1342.04,232.815 1342.61,231.744 1343.18,230.388 1343.74,227.225 1344.31,229.458 1344.88,231.424 1345.45,228.257 1346.02,229.188 1346.59,229.403 1347.15,227.561 1347.72,225.614 1348.29,227.906 1348.86,227.122 1349.43,225.395 1350,225.769 1350.56,227.227 1351.13,227.526 1351.7,228.472 1352.27,229.571 1352.84,229.488 1353.41,229.496 1353.97,228.547 1354.54,226.715 1355.11,227.85 1355.68,225.913 1356.25,225.262 1356.82,226.876 1357.38,226.97 1357.95,227.2 1358.52,228.376 1359.09,230.478 1359.66,228.237 1360.23,228.266 1360.79,228.331 1361.36,227.327 1361.93,226.811 1362.5,228.128 1363.07,228.298 1363.64,224.494 1364.2,227.168 1364.77,226.506 1365.34,225.806 1365.91,227.237 1366.48,228.371 1367.05,228.511 1367.61,228.621 1368.18,229.78 1368.75,228.856 1369.32,230.031 1369.89,230.147 1370.46,230.389 1371.02,231.704 1371.59,230.89 1372.16,230.828 1372.73,226.844 1373.3,227.279 1373.87,230.702 1374.43,232.77 1375,232.734 1375.57,232.738 1376.14,232.585 1376.71,232.475 1377.28,232.478 1377.84,232.339 1378.41,235.249 1378.98,232.184 1379.55,233.151 1380.12,232.955 1380.69,233.048 1381.25,233.138 1381.82,234.033 1382.39,234.938 1382.96,234.902 1383.53,234.447 1384.1,233.22 1384.66,236.157 1385.23,235.961 1385.8,236.84 1386.37,232.195 1386.94,232.969 1387.51,233.848 1388.07,231.504 1388.64,231.621 1389.21,233.586 1389.78,235.471 1390.35,234.974 1390.92,234.493 1391.48,233.19 1392.05,231.693 1392.62,233.561 1393.19,233.267 1393.76,234.057 1394.33,232.612 1394.89,233.592 1395.46,233.422 1396.03,233.128 1396.6,232.967 1397.17,234.796 1397.74,234.391 1398.3,234.078 1398.87,234.847 1399.44,235.475 1400.01,233.919 1400.58,234.511 1401.15,233.314 1401.71,232.163 1402.28,230.79 1402.85,229.746 1403.42,229.578 1403.99,229.451 1404.56,229.545 1405.13,229.447 1405.69,230.288 1406.26,230.097 1406.83,229.101 1407.4,228.964 1407.97,226.987 1408.54,224.226 1409.1,224.385 1409.67,223.744 1410.24,226.209 1410.81,226.385 1411.38,226.61 1411.95,225.641 1412.51,226.974 1413.08,227.238 1413.65,227.451 1414.22,227.55 1414.79,226.493 1415.36,225.757 1415.92,224.834 1416.49,223.189 1417.06,222.867 1417.63,221.532 1418.2,221.097 1418.77,221.882 1419.33,222.583 1419.9,223.153 1420.47,223.718 1421.04,224.243 1421.61,224.614 1422.18,226.084 1422.74,227.596 1423.31,228.98 1423.88,231.202 1424.45,233.305 1425.02,236.32 1425.59,237.958 1426.15,239.665 1426.72,236.772 1427.29,235.272 1427.86,233.681 1428.43,234.557 1429,236.21 1429.56,234.784 1430.13,233.323 1430.7,230.196 1431.27,229.274 1431.84,230.299 1432.41,230.484 1432.97,231.768 1433.54,232.521 1434.11,231.338 1434.68,233.335 1435.25,233.158 1435.82,234.168 1436.38,234.85 1436.95,232.35 1437.52,232.122 1438.09,231.651 1438.66,232.426 1439.23,232.321 1439.79,230.05 1440.36,229.939 1440.93,228.915 1441.5,232.193 1442.07,231.06 1442.64,229.914 1443.2,231.831 1443.77,230.64 1444.34,229.6 1444.91,229.777 1445.48,231.039 1446.05,230.85 1446.61,229.657 1447.18,231.657 1447.75,232.518 1448.32,233.354 1448.89,233.019 1449.46,232.821 1450.02,230.651 1450.59,229.515 1451.16,229.664 1451.73,230.531 1452.3,233.411 1452.87,233.185 1453.43,233.084 1454,230.765 1454.57,230.614 1455.14,231.254 1455.71,231.025 1456.28,232.017 1456.84,230.829 1457.41,231.687 1457.98,231.441 1458.55,232.229 1459.12,230.96 1459.69,230.809 1460.25,229.524 1460.82,229.56 1461.39,228.395 1461.96,227.404 1462.53,227.658 1463.1,227.922 1463.66,227.933 1464.23,231.19 1464.8,230.995 1465.37,231.853 1465.94,231.687 1466.51,231.601 1467.07,230.496 1467.64,228.443 1468.21,227.524 1468.78,227.81 1469.35,228.13 1469.92,229.084 1470.48,231.049 1471.05,232.065 1471.62,229.519 1472.19,230.457 1472.76,227.167 1473.33,229.6 1473.89,230.788 1474.46,231.532 1475.03,231.247 1475.6,232.359 1476.17,234.301 1476.74,233.019 1477.31,230.743 1477.87,232.89 1478.44,237.888 1479.01,236.156 1479.58,233.776 1480.15,234.45 1480.72,235.177 1481.28,234.535 1481.85,234.13 1482.42,232.839 1482.99,233.427 1483.56,235.106 1484.13,235.476 1484.69,235.064 1485.26,232.433 1485.83,233.097 1486.4,232.531 1486.97,232.007 1487.54,230.853 1488.1,229.723 1488.67,226.438 1489.24,225.375 1489.81,227.806 1490.38,229.73 1490.95,229.563 1491.51,227.594 1492.08,227.833 1492.65,227.009 1493.22,225.947 1493.79,225.102 1494.36,225.326 1494.92,224.384 1495.49,224.539 1496.06,226.031 1496.63,226.061 1497.2,224.346 1497.77,224.816 1498.33,224.043 1498.9,224.43 1499.47,223.944 1500.04,226.402 1500.61,225.549 1501.18,227.175 1501.74,226.385 1502.31,225.454 1502.88,224.859 1503.45,226.256 1504.02,226.602 1504.59,225.958 1505.15,224.006 1505.72,225.404 1506.29,227.508 1506.86,226.797 1507.43,230.375 1508,230.195 1508.56,232.22 1509.13,229.071 1509.7,231.307 1510.27,231.472 1510.84,230.305 1511.41,229.463 1511.97,229.611 1512.54,229.913 1513.11,229.072 1513.68,230.233 1514.25,229.374 1514.82,227.292 1515.38,227.276 1515.95,224.563 1516.52,227.269 1517.09,226.67 1517.66,227.013 1518.23,226.383 1518.79,226.768 1519.36,227.238 1519.93,227.68 1520.5,226.187 1521.07,227.501 1521.64,227.639 1522.2,227.707 1522.77,226.011 1523.34,228.534 1523.91,228.129 1524.48,229.386 1525.05,229.633 1525.61,229.829 1526.18,229.028 1526.75,231.212 1527.32,230.099 1527.89,229.409 1528.46,229.593 1529.02,229.931 1529.59,230.079 1530.16,228.275 1530.73,227.75 1531.3,229.131 1531.87,231.395 1532.43,232.504 1533,230.443 1533.57,229.579 1534.14,228.791 1534.71,229.02 1535.28,230.16 1535.84,231.363 1536.41,231.484 1536.98,230.438 1537.55,230.419 1538.12,230.464 1538.69,229.387 1539.25,230.502 1539.82,231.406 1540.39,232.395 1540.96,234.187 1541.53,235.177 1542.1,234.056 1542.66,234.835 1543.23,234.674 1543.8,234.484 1544.37,234.234 1544.94,232.875 1545.51,232.824 1546.08,233.507 1546.64,234.182 1547.21,235.157 1547.78,236.055 1548.35,236.754 1548.92,237.437 1549.49,236.92 1550.05,236.337 1550.62,234.749 1551.19,234.453 1551.76,235.389 1552.33,235.071 1552.9,234.904 1553.46,234.487 1554.03,233.979 1554.6,232.718 1555.17,232.678 1555.74,236.839 1556.31,236.374 1556.87,237.911 1557.44,236.388 1558.01,235.795 1558.58,235.395 1559.15,233.897 1559.72,231.484 1560.28,230.469 1560.85,227.334 1561.42,230.628 1561.99,231.391 1562.56,232.211 1563.13,230.937 1563.69,228.976 1564.26,229.159 1564.83,232.295 1565.4,233.037 1565.97,235.812 1566.54,235.404 1567.1,236.024 1567.67,235.795 1568.24,236.452 1568.81,236.857 1569.38,235.43 1569.95,231.727 1570.51,230.451 1571.08,231.155 1571.65,228.959 1572.22,229.009 1572.79,228.821 1573.36,227.617 1573.92,228.545 1574.49,226.417 1575.06,226.859 1575.63,225.956 1576.2,227.055 1576.77,228.054 1577.33,228.017 1577.9,229.013 1578.47,228.917 1579.04,227.951 1579.61,229.216 1580.18,231.393 1580.74,231.261 1581.31,230.97 1581.88,232.025 1582.45,231.912 1583.02,231.576 1583.59,232.399 1584.15,231.37 1584.72,231.253 1585.29,230.154 1585.86,231.075 1586.43,233.18 1587,232.636 1587.56,232.499 1588.13,235.137 1588.7,235.762 1589.27,236.012 1589.84,235.388 1590.41,233.921 1590.97,235.469 1591.54,232.859 1592.11,229.22 1592.68,227.994 1593.25,228.148 1593.82,226.117 1594.38,227.161 1594.95,226.173 1595.52,226.504 1596.09,226.739 1596.66,224.602 1597.23,224.931 1597.79,224.27 1598.36,225.633 1598.93,222.722 1599.5,224.156 1600.07,223.64 1600.64,223.088 1601.2,223.622 1601.77,223.977 1602.34,225.38 1602.91,222.558 1603.48,224.945 1604.05,225.238 1604.61,225.505 1605.18,225.803 1605.75,223.191 1606.32,223.783 1606.89,227.268 1607.46,228.544 1608.02,227.531 1608.59,227.763 1609.16,229.013 1609.73,231.32 1610.3,231.22 1610.87,230.265 1611.43,232.254 1612,230.018 1612.57,230.042 1613.14,232.102 1613.71,230.991 1614.28,230.951 1614.84,230.835 1615.41,228.783 1615.98,228.02 1616.55,229.321 1617.12,230.635 1617.69,229.732 1618.26,228.89 1618.82,229.986 1619.39,231.13 1619.96,228.151 1620.53,229.181 1621.1,230.325 1621.67,229.326 1622.23,229.554 1622.8,230.848 1623.37,226.705 1623.94,224.907 1624.51,223.383 1625.08,222.949 1625.64,224.77 1626.21,225.047 1626.78,226.31 1627.35,226.704 1627.92,225.858 1628.49,228.4 1629.05,229.408 1629.62,229.43 1630.19,230.526 1630.76,231.828 1631.33,230.583 1631.9,231.837 1632.46,231.57 1633.03,231.224 1633.6,231.205 1634.17,228.228 1634.74,229.361 1635.31,228.442 1635.87,227.783 1636.44,229.099 1637.01,229.288 1637.58,230.324 1638.15,230.44 1638.72,231.744 1639.28,230.99 1639.85,230.983 1640.42,230.901 1640.99,232.075 1641.56,231.928 1642.13,233.985 1642.69,235.096 1643.26,233.743 1643.83,231.251 1644.4,234.253 1644.97,233.974 1645.54,230.882 1646.1,228.646 1646.67,229.935 1647.24,231.253 1647.81,228.165 1648.38,227.306 1648.95,227.821 1649.51,228.117 1650.08,229.464 1650.65,229.672 1651.22,229.613 1651.79,228.726 1652.36,227.093 1652.92,228.178 1653.49,228.562 1654.06,229.869 1654.63,233.025 1655.2,230.948 1655.77,234.182 1656.33,233.146 1656.9,235.175 1657.47,238.711 1658.04,237.259 1658.61,235.747 1659.18,235.208 1659.74,234.797 1660.31,235.667 1660.88,235.412 1661.45,236.013 1662.02,235.581 1662.59,235.375 1663.15,235.036 1663.72,235.836 1664.29,236.346 1664.86,233.777 1665.43,233.707 1666,234.668 1666.56,235.449 1667.13,231.907 1667.7,228.761 1668.27,230.03 1668.84,229.994 1669.41,229.837 1669.97,231.854 1670.54,232.785 1671.11,232.709 1671.68,231.288 1672.25,229.889 1672.82,231.853 1673.38,233.623 1673.95,230.049 1674.52,229.911 1675.09,227.848 1675.66,227.845 1676.23,227.016 1676.79,227.235 1677.36,228.576 1677.93,229.629 1678.5,229.475 1679.07,229.433 1679.64,229.521 1680.2,231.857 1680.77,230.71 1681.34,230.497 1681.91,228.539 1682.48,231.738 1683.05,230.28 1683.61,230.079 1684.18,230.165 1684.75,229.239 1685.32,229.372 1685.89,230.163 1686.46,229.949 1687.02,227.962 1687.59,230.202 1688.16,229.192 1688.73,227.109 1689.3,225.489 1689.87,224.393 1690.44,223.942 1691,225.377 1691.57,226.92 1692.14,226.96 1692.71,228.399 1693.28,228.649 1693.85,228.866 1694.41,229.016 1694.98,228.143 1695.55,228.506 1696.12,227.593 1696.69,227.624 1697.26,228.792 1697.82,229.877 1698.39,227.875 1698.96,230 1699.53,228.952 1700.1,229.98 1700.67,229.994 1701.23,230.042 1701.8,229.158 1702.37,229.318 1702.94,227.275 1703.51,226.735 1704.08,227.073 1704.64,227.206 1705.21,228.674 1705.78,228.873 1706.35,229.119 1706.92,229.556 1707.49,229.611 1708.05,229.741 1708.62,228.703 1709.19,227.773 1709.76,228.091 1710.33,228.322 1710.9,228.607 1711.46,230.829 1712.03,231.862 1712.6,231.863 1713.17,234.875 1713.74,235.529 1714.31,234.226 1714.87,231.897 1715.44,231.674 1716.01,233.74 1716.58,235.52 1717.15,233.975 1717.72,231.501 1718.28,230.487 1718.85,232.625 1719.42,233.623 1719.99,234.393 1720.56,232.916 1721.13,233.785 1721.69,232.517 1722.26,234.36 1722.83,235.071 1723.4,235.804 1723.97,236.352 1724.54,236.107 1725.1,237.761 1725.67,238.172 1726.24,239.644 1726.81,237.834 1727.38,237.248 1727.95,236.61 1728.51,235.92 1729.08,235.632 1729.65,235.194 1730.22,235.603 1730.79,234.179 1731.36,232.959 1731.92,232.846 1732.49,231.441 1733.06,231.443 1733.63,232.167 1734.2,232.938 1734.77,232.551 1735.33,230.411 1735.9,229.118 1736.47,229.142 1737.04,229.058 1737.61,228.258 1738.18,227.332 1738.74,227.612 1739.31,226.715 1739.88,226.896 1740.45,228.099 1741.02,228.04 1741.59,227.226 1742.15,225.396 1742.72,225.799 1743.29,226.001 1743.86,225.41 1744.43,226.511 1745,226.945 1745.56,227.338 1746.13,227.738 1746.7,229.054 1747.27,228.952 1747.84,227.029 1748.41,228.358 1748.97,226.247 1749.54,225.661 1750.11,225.782 1750.68,227.925 1751.25,229.26 1751.82,230.212 1752.38,231.261 1752.95,228.927 1753.52,227.948 1754.09,228.878 1754.66,226.793 1755.23,227.996 1755.79,228.108 1756.36,226.237 1756.93,224.395 1757.5,222.498 1758.07,222.001 1758.64,223.701 1759.21,225.221 1759.77,225.723 1760.34,229.297 1760.91,232.577 1761.48,231.276 1762.05,231.176 1762.62,231.095 1763.18,231.124 1763.75,233.079 1764.32,231.919 1764.89,229.852 1765.46,229.893 1766.03,229.812 1766.59,226.66 1767.16,227.035 1767.73,225.374 1768.3,225.696 1768.87,227.059 1769.44,228.318 1770,227.439 1770.57,227.621 1771.14,229.821 1771.71,228.922 1772.28,226.835 1772.85,227.083 1773.41,229.608 1773.98,231.747 1774.55,231.573 1775.12,230.661 1775.69,229.854 1776.26,231.247 1776.82,232.173 1777.39,235.239 1777.96,235.052 1778.53,233.708 1779.1,232.573 1779.67,233.499 1780.23,234.337 1780.8,232.967 1781.37,232.944 1781.94,235.777 1782.51,234.284 1783.08,233.299 1783.64,231.967 1784.21,231.072 1784.78,229.933 1785.35,227.992 1785.92,227.072 1786.49,227.283 1787.05,227.514 1787.62,228.682 1788.19,225.767 1788.76,226.193 1789.33,226.515 1789.9,226.781 1790.46,228.164 1791.03,230.51 1791.6,229.458 1792.17,228.474 1792.74,229.418 1793.31,228.451 1793.87,231.842 1794.44,231.821 1795.01,231.788 1795.58,234.755 1796.15,235.591 1796.72,238.463 1797.28,238.901 1797.85,238.36 1798.42,238.931 1798.99,238.147 1799.56,236.507 1800.13,237.088 1800.69,237.621 1801.26,235.999 1801.83,234.444 1802.4,235.154 1802.97,234.723 1803.54,234.313 1804.1,236.096 1804.67,236.667 1805.24,235.107 1805.81,233.767 1806.38,233.583 1806.95,233.448 1807.51,232.089 1808.08,230.961 1808.65,230.818 1809.22,229.68 1809.79,228.667 1810.36,227.707 1810.92,226.576 1811.49,226.846 1812.06,225.163 1812.63,225.501 1813.2,224.655 1813.77,224.766 1814.33,223.933 1814.9,223.552 1815.47,224.292 1816.04,222.694 1816.61,223.354 1817.18,223.803 1817.74,224.238 1818.31,223.805 1818.88,224.279 1819.45,221.696 1820.02,223.184 1820.59,223.86 1821.15,225.328 1821.72,226.56 1822.29,226.819 1822.86,226.314 1823.43,227.707 1824,228.002 1824.56,229.159 1825.13,229.706 1825.7,228.757 1826.27,227.943 1826.84,229.143 1827.41,230.455 1827.97,230.439 1828.54,234.677 1829.11,234.365 1829.68,231.01 1830.25,228.818 1830.82,228.008 1831.39,227.104 1831.95,227.389 1832.52,226.659 1833.09,226.988 1833.66,230.368 1834.23,228.481 1834.8,226.668 1835.36,226.941 1835.93,227.246 1836.5,227.716 1837.07,229.115 1837.64,228.131 1838.21,228.465 1838.77,228.767 1839.34,228.846 1839.91,228.113 1840.48,227.237 1841.05,228.682 1841.62,230.221 1842.18,232.359 1842.75,233.554 1843.32,234.646 1843.89,234.38 1844.46,230.963 1845.03,229.855 1845.59,229.993 1846.16,230.095 1846.73,230.228 1847.3,231.145 1847.87,230.921 1848.44,232.033 1849,231.8 1849.57,232.82 1850.14,234.827 1850.71,235.668 1851.28,234.386 1851.85,233.183 1852.41,232.987 1852.98,231.878 1853.55,231.682 1854.12,233.789 1854.69,233.654 1855.26,233.521 1855.82,234.532 1856.39,235.105 1856.96,233.762 1857.53,233.619 1858.1,233.297 1858.67,231.04 1859.23,227.777 1859.8,228.118 1860.37,228.425 1860.94,227.765 1861.51,228.041 1862.08,228.28 1862.64,230.314 1863.21,230.145 1863.78,230.242 1864.35,231.075 1864.92,230.864 1865.49,230.906 1866.05,231.709 1866.62,230.897 1867.19,231.907 1867.76,233.881 1868.33,232.774 1868.9,232.824 1869.46,233.502 1870.03,234.188 1870.6,234.048 1871.17,233.91 1871.74,235.523 1872.31,235.244 1872.87,233.67 1873.44,232.663 1874.01,233.336 1874.58,234.806 1875.15,234.396 1875.72,237.179 1876.28,237.52 1876.85,237.089 1877.42,235.46 1877.99,235.822 1878.56,235.225 1879.13,234.692 1879.69,232.46 1880.26,232.258 1880.83,233.102 1881.4,234.925 1881.97,235.522 1882.54,236.968 1883.1,236.242 1883.67,236.68 1884.24,234.294 1884.81,234.072 1885.38,233.957 1885.95,230.457 1886.51,229.383 1887.08,230.64 1887.65,229.486 1888.22,228.59 1888.79,228.704 1889.36,229.864 1889.92,227.896 1890.49,227.841 1891.06,229.971 1891.63,231.15 1892.2,230.932 1892.77,229.754 1893.33,230.804 1893.9,231.606 1894.47,231.533 1895.04,231.471 1895.61,232.358 1896.18,230.957 1896.74,230.925 1897.31,230.56 1897.88,230.605 1898.45,230.416 1899.02,230.451 1899.59,228.137 1900.16,227.094 1900.72,226.047 1901.29,224.912 1901.86,226.047 1902.43,228.418 1903,226.606 1903.57,224.796 1904.13,227.319 1904.7,227.02 1905.27,229.227 1905.84,230.232 1906.41,230.334 1906.98,230.262 1907.54,230.352 1908.11,230.327 1908.68,229.494 1909.25,229.495 1909.82,230.523 1910.39,229.394 1910.95,229.422 1911.52,229.483 1912.09,230.474 1912.66,230.329 1913.23,230.32 1913.8,231.052 1914.36,228.77 1914.93,230.858 1915.5,230.647 1916.07,229.584 1916.64,231.516 1917.21,229.375 1917.77,231.261 1918.34,232.1 1918.91,230.994 1919.48,233.012 1920.05,232.897 1920.62,230.692 1921.18,232.662 1921.75,231.358 1922.32,230.037 1922.89,228.916 1923.46,227.839 1924.03,228.968 1924.59,231.987 1925.16,228.859 1925.73,229.026 1926.3,228.03 1926.87,227.144 1927.44,226.365 1928,227.558 1928.57,227.784 1929.14,225.864 1929.71,227.067 1930.28,227.308 1930.85,227.404 1931.41,227.631 1931.98,227.765 1932.55,226.854 1933.12,226.99 1933.69,227.228 1934.26,228.355 1934.82,230.502 1935.39,231.513 1935.96,229.298 1936.53,227.251 1937.1,228.599 1937.67,228.932 1938.23,229.089 1938.8,228.29 1939.37,229.538 1939.94,228.623 1940.51,226.65 1941.08,230.226 1941.64,230.097 1942.21,229.178 1942.78,228.262 1943.35,229.419 1943.92,231.524 1944.49,233.672 1945.05,233.459 1945.62,233.127 1946.19,232.93 1946.76,232.739 1947.33,233.573 1947.9,232.429 1948.46,230.24 1949.03,231.321 1949.6,232.344 1950.17,235.262 1950.74,234.893 1951.31,232.625 1951.87,232.504 1952.44,233.182 1953.01,233.087 1953.58,231.902 1954.15,231.01 1954.72,230.873 1955.28,231.763 1955.85,230.787 1956.42,229.548 1956.99,229.522 1957.56,230.681 1958.13,231.57 1958.69,231.243 1959.26,231.885 1959.83,230.761 1960.4,228.848 1960.97,228.02 1961.54,227.003 1962.1,226.126 1962.67,225.192 1963.24,225.701 1963.81,225.027 1964.38,222.308 1964.95,224.871 1965.51,225.059 1966.08,225.356 1966.65,226.519 1967.22,225.892 1967.79,226.335 1968.36,226.81 1968.92,225.849 1969.49,226.208 1970.06,226.545 1970.63,226.818 1971.2,224.036 1971.77,226.658 1972.34,228.031 1972.9,228.115 1973.47,228.419 1974.04,229.814 1974.61,227.919 1975.18,229.025 1975.75,229.331 1976.31,229.602 1976.88,227.783 1977.45,227.757 1978.02,229.057 1978.59,231.192 1979.16,231.016 1979.72,231.102 1980.29,230.108 1980.86,230.269 1981.43,231.151 1982,232.194 1982.57,229.852 1983.13,229.941 1983.7,230.013 1984.27,230.073 1984.84,230.151 1985.41,231.583 1985.98,233.708 1986.54,233.489 1987.11,232.271 1987.68,232.172 1988.25,229.016 1988.82,229.24 1989.39,229.536 1989.95,229.746 1990.52,232.953 1991.09,232.718 1991.66,231.486 1992.23,231.583 1992.8,232.468 1993.36,231.652 1993.93,230.513 1994.5,229.941 1995.07,228.905 1995.64,230.225 1996.21,230.45 1996.77,230.388 1997.34,230.484 1997.91,230.51 1998.48,231.247 1999.05,230.244 1999.62,233.419 2000.18,235.162 2000.75,236.964 2001.32,236.309 2001.89,234.884 2002.46,234.431 2003.03,235.237 2003.59,234.838 2004.16,234.384 2004.73,232.131 2005.3,231.98 2005.87,231.74 2006.44,231.483 2007,232.377 2007.57,230.086 2008.14,233.334 2008.71,232.081 2009.28,232.05 2009.85,232.764 2010.41,231.495 2010.98,229.199 2011.55,227.917 2012.12,227.923 2012.69,229.054 2013.26,228.037 2013.82,227.228 2014.39,228.446 2014.96,227.579 2015.53,230.871 2016.1,230.873 2016.67,230.802 2017.23,229.76 2017.8,232.027 2018.37,231.826 2018.94,229.675 2019.51,227.793 2020.08,227.77 2020.64,226.88 2021.21,227.068 2021.78,227.197 2022.35,228.261 2022.92,228.407 2023.49,227.292 2024.05,226.407 2024.62,225.609 2025.19,226.893 2025.76,224.965 2026.33,225.363 2026.9,228.822 2027.46,230.159 2028.03,231.114 2028.6,229.023 2029.17,227.988 2029.74,228.308 2030.31,228.411 2030.87,228.685 2031.44,226.761 2032.01,225.26 2032.58,226.821 2033.15,229.481 2033.72,229.588 2034.28,227.776 2034.85,226.961 2035.42,227.29 2035.99,226.589 2036.56,228.224 2037.13,229.535 2037.69,229.767 2038.26,230.967 2038.83,233.935 2039.4,234.76 2039.97,234.681 2040.54,233.459 2041.11,236.381 2041.67,235.041 2042.24,233.956 2042.81,232.962 2043.38,233.998 2043.95,233.852 2044.52,233.672 2045.08,232.34 2045.65,230.97 2046.22,230.6 2046.79,230.522 2047.36,231.554 2047.93,231.491 2048.49,233.662 2049.06,233.403 2049.63,233.408 2050.2,236.263 2050.77,235.876 2051.34,236.42 2051.9,234.85 2052.47,235.631 2053.04,234.328 2053.61,233.947 2054.18,232.724 2054.75,232.569 2055.31,231.401 2055.88,227.173 2056.45,228.328 2057.02,227.418 2057.59,227.622 2058.16,228.589 2058.72,227.635 2059.29,226.886 2059.86,226.229 2060.43,226.419 2061,228.668 2061.57,229.466 2062.13,232.554 2062.7,232.401 2063.27,230.071 2063.84,229.959 2064.41,230.055 2064.98,231.297 2065.54,229.09 2066.11,229.123 2066.68,229.213 2067.25,228.265 2067.82,228.394 2068.39,231.774 2068.95,231.491 2069.52,229.337 2070.09,230.727 2070.66,228.583 2071.23,228.618 2071.8,231.063 2072.36,231.026 2072.93,234.084 2073.5,232.618 2074.07,232.425 2074.64,232.157 2075.21,232.074 2075.77,230.759 2076.34,228.523 2076.91,228.694 2077.48,230.981 2078.05,229.944 2078.62,229.787 2079.18,228.721 2079.75,227.785 2080.32,228.815 2080.89,229.936 2081.46,226.819 2082.03,227.069 2082.59,226.144 2083.16,226.733 2083.73,226.015 2084.3,226.345 2084.87,227.752 2085.44,227.154 2086,226.108 2086.57,225.438 2087.14,228.932 2087.71,227.015 2088.28,226.105 2088.85,227.664 2089.41,225.809 2089.98,227.168 2090.55,228.518 2091.12,229.674 2091.69,229.515 2092.26,228.619 2092.82,229.713 2093.39,229.713 2093.96,229.747 2094.53,228.694 2095.1,228.847 2095.67,230.177 2096.23,228.104 2096.8,227.367 2097.37,229.813 2097.94,231.785 2098.51,234.803 2099.08,235.601 2099.64,232.032 2100.21,232.198 2100.78,230.054 2101.35,230.396 2101.92,230.448 2102.49,234.479 2103.05,234.263 2103.62,232.005 2104.19,232.753 2104.76,232.771 2105.33,231.649 2105.9,232.596 2106.46,236.395 2107.03,238.082 2107.6,238.488 2108.17,236.958 2108.74,234.38 2109.31,234.007 2109.87,234.696 2110.44,235.337 2111.01,235.029 2111.58,233.702 2112.15,232.367 2112.72,231.165 2113.29,233.14 2113.85,231.67 2114.42,231.425 2114.99,231.288 2115.56,228.92 2116.13,227.994 2116.7,228.172 2117.26,229.199 2117.83,229.293 2118.4,228.174 2118.97,228.444 2119.54,229.683 2120.11,230.815 2120.67,229.941 2121.24,229.967 2121.81,231.052 2122.38,229.978 2122.95,231.141 2123.52,232.172 2124.08,231.035 2124.65,230.167 2125.22,229.127 2125.79,230.118 2126.36,231.15 2126.93,232.144 2127.49,232.926 2128.06,231.68 2128.63,232.547 2129.2,233.457 2129.77,233.022 2130.34,233.762 2130.9,231.363 2131.47,230.222 2132.04,231.321 2132.61,233.313 2133.18,234.077 2133.75,232.651 2134.31,232.622 2134.88,231.599 2135.45,228.268 2136.02,230.203 2136.59,228.753 2137.16,227.743 2137.72,227.755 2138.29,228.106 2138.86,230.022 2139.43,230.939 2140,226.64 2140.57,224.736 2141.13,224.09 2141.7,225.45 2142.27,226.627 2142.84,227.009 2143.41,227.11 2143.98,227.386 2144.54,228.586 2145.11,231.953 2145.68,230.794 2146.25,230.613 2146.82,229.216 2147.39,229.16 2147.95,231.199 2148.52,229.122 2149.09,229.219 2149.66,229.276 2150.23,229.353 2150.8,229.685 2151.36,229.778 2151.93,229.87 2152.5,230.953 2153.07,230.067 2153.64,230.191 2154.21,228.151 2154.77,228.497 2155.34,227.578 2155.91,227.881 2156.48,228.166 2157.05,228.154 2157.62,226.579 2158.18,226.893 2158.75,227.201 2159.32,226.457 2159.89,229.966 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip290)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.036 ± 0.022\n  with uncertainty of ± 0.00202457546335309\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01625 ± (0.00235443, 0.00228553) (MC)\n  95% confidence interval: [-4.02073, -4.01173]) (MC)\n  linear error propagation: -4.01635 ± 0.00237454\n  |δ_y| = |0.00157421| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016251262649524, val_l = 0.004481683737981079, val_u = 0.0045220036356461435)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip320\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip320)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip321\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip320)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip322\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1149.92 2211.02,1149.92 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,998.886 2211.02,998.886 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,847.853 2211.02,847.853 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,696.82 2211.02,696.82 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,545.787 2211.02,545.787 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,394.753 2211.02,394.753 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,243.72 2211.02,243.72 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1149.92 365.751,1149.92 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,998.886 365.751,998.886 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,847.853 365.751,847.853 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,696.82 365.751,696.82 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,545.787 365.751,545.787 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,394.753 365.751,394.753 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,243.72 365.751,243.72 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M298.909 1135.72 Q295.298 1135.72 293.469 1139.28 Q291.664 1142.82 291.664 1149.95 Q291.664 1157.06 293.469 1160.63 Q295.298 1164.17 298.909 1164.17 Q302.543 1164.17 304.349 1160.63 Q306.177 1157.06 306.177 1149.95 Q306.177 1142.82 304.349 1139.28 Q302.543 1135.72 298.909 1135.72 M298.909 1132.01 Q304.719 1132.01 307.775 1136.62 Q310.853 1141.2 310.853 1149.95 Q310.853 1158.68 307.775 1163.29 Q304.719 1167.87 298.909 1167.87 Q293.099 1167.87 290.02 1163.29 Q286.964 1158.68 286.964 1149.95 Q286.964 1141.2 290.02 1136.62 Q293.099 1132.01 298.909 1132.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M259.557 1012.23 L267.196 1012.23 L267.196 985.865 L258.886 987.532 L258.886 983.273 L267.15 981.606 L271.826 981.606 L271.826 1012.23 L279.465 1012.23 L279.465 1016.17 L259.557 1016.17 L259.557 1012.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M298.909 984.685 Q295.298 984.685 293.469 988.25 Q291.664 991.791 291.664 998.921 Q291.664 1006.03 293.469 1009.59 Q295.298 1013.13 298.909 1013.13 Q302.543 1013.13 304.349 1009.59 Q306.177 1006.03 306.177 998.921 Q306.177 991.791 304.349 988.25 Q302.543 984.685 298.909 984.685 M298.909 980.981 Q304.719 980.981 307.775 985.588 Q310.853 990.171 310.853 998.921 Q310.853 1007.65 307.775 1012.25 Q304.719 1016.84 298.909 1016.84 Q293.099 1016.84 290.02 1012.25 Q286.964 1007.65 286.964 998.921 Q286.964 990.171 290.02 985.588 Q293.099 980.981 298.909 980.981 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M262.775 861.198 L279.094 861.198 L279.094 865.133 L257.15 865.133 L257.15 861.198 Q259.812 858.443 264.395 853.814 Q269.002 849.161 270.182 847.818 Q272.428 845.295 273.307 843.559 Q274.21 841.8 274.21 840.11 Q274.21 837.355 272.266 835.619 Q270.344 833.883 267.242 833.883 Q265.043 833.883 262.59 834.647 Q260.159 835.411 257.381 836.962 L257.381 832.24 Q260.205 831.105 262.659 830.527 Q265.113 829.948 267.15 829.948 Q272.52 829.948 275.715 832.633 Q278.909 835.318 278.909 839.809 Q278.909 841.939 278.099 843.86 Q277.312 845.758 275.205 848.351 Q274.627 849.022 271.525 852.24 Q268.423 855.434 262.775 861.198 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M298.909 833.652 Q295.298 833.652 293.469 837.216 Q291.664 840.758 291.664 847.888 Q291.664 854.994 293.469 858.559 Q295.298 862.101 298.909 862.101 Q302.543 862.101 304.349 858.559 Q306.177 854.994 306.177 847.888 Q306.177 840.758 304.349 837.216 Q302.543 833.652 298.909 833.652 M298.909 829.948 Q304.719 829.948 307.775 834.554 Q310.853 839.138 310.853 847.888 Q310.853 856.614 307.775 861.221 Q304.719 865.804 298.909 865.804 Q293.099 865.804 290.02 861.221 Q286.964 856.614 286.964 847.888 Q286.964 839.138 290.02 834.554 Q293.099 829.948 298.909 829.948 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M272.914 695.466 Q276.27 696.183 278.145 698.452 Q280.043 700.72 280.043 704.054 Q280.043 709.169 276.525 711.97 Q273.006 714.771 266.525 714.771 Q264.349 714.771 262.034 714.331 Q259.742 713.915 257.289 713.058 L257.289 708.544 Q259.233 709.678 261.548 710.257 Q263.863 710.836 266.386 710.836 Q270.784 710.836 273.076 709.1 Q275.39 707.364 275.39 704.054 Q275.39 700.998 273.238 699.285 Q271.108 697.549 267.289 697.549 L263.261 697.549 L263.261 693.706 L267.474 693.706 Q270.923 693.706 272.752 692.341 Q274.58 690.952 274.58 688.359 Q274.58 685.697 272.682 684.285 Q270.807 682.85 267.289 682.85 Q265.367 682.85 263.168 683.267 Q260.969 683.683 258.33 684.563 L258.33 680.396 Q260.992 679.656 263.307 679.285 Q265.645 678.915 267.705 678.915 Q273.029 678.915 276.131 681.345 Q279.233 683.753 279.233 687.873 Q279.233 690.743 277.59 692.734 Q275.946 694.702 272.914 695.466 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M298.909 682.618 Q295.298 682.618 293.469 686.183 Q291.664 689.725 291.664 696.854 Q291.664 703.961 293.469 707.526 Q295.298 711.067 298.909 711.067 Q302.543 711.067 304.349 707.526 Q306.177 703.961 306.177 696.854 Q306.177 689.725 304.349 686.183 Q302.543 682.618 298.909 682.618 M298.909 678.915 Q304.719 678.915 307.775 683.521 Q310.853 688.105 310.853 696.854 Q310.853 705.581 307.775 710.188 Q304.719 714.771 298.909 714.771 Q293.099 714.771 290.02 710.188 Q286.964 705.581 286.964 696.854 Q286.964 688.105 290.02 683.521 Q293.099 678.915 298.909 678.915 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M271.594 532.581 L259.789 551.03 L271.594 551.03 L271.594 532.581 M270.367 528.507 L276.247 528.507 L276.247 551.03 L281.177 551.03 L281.177 554.918 L276.247 554.918 L276.247 563.067 L271.594 563.067 L271.594 554.918 L255.992 554.918 L255.992 550.405 L270.367 528.507 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M298.909 531.585 Q295.298 531.585 293.469 535.15 Q291.664 538.692 291.664 545.821 Q291.664 552.928 293.469 556.493 Q295.298 560.034 298.909 560.034 Q302.543 560.034 304.349 556.493 Q306.177 552.928 306.177 545.821 Q306.177 538.692 304.349 535.15 Q302.543 531.585 298.909 531.585 M298.909 527.882 Q304.719 527.882 307.775 532.488 Q310.853 537.071 310.853 545.821 Q310.853 554.548 307.775 559.155 Q304.719 563.738 298.909 563.738 Q293.099 563.738 290.02 559.155 Q286.964 554.548 286.964 545.821 Q286.964 537.071 290.02 532.488 Q293.099 527.882 298.909 527.882 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M258.793 377.473 L277.15 377.473 L277.15 381.409 L263.076 381.409 L263.076 389.881 Q264.094 389.533 265.113 389.371 Q266.131 389.186 267.15 389.186 Q272.937 389.186 276.316 392.358 Q279.696 395.529 279.696 400.945 Q279.696 406.524 276.224 409.626 Q272.752 412.705 266.432 412.705 Q264.256 412.705 261.988 412.334 Q259.742 411.964 257.335 411.223 L257.335 406.524 Q259.418 407.658 261.641 408.214 Q263.863 408.77 266.34 408.77 Q270.344 408.77 272.682 406.663 Q275.02 404.557 275.02 400.945 Q275.02 397.334 272.682 395.228 Q270.344 393.121 266.34 393.121 Q264.465 393.121 262.59 393.538 Q260.738 393.955 258.793 394.834 L258.793 377.473 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M298.909 380.552 Q295.298 380.552 293.469 384.117 Q291.664 387.659 291.664 394.788 Q291.664 401.895 293.469 405.459 Q295.298 409.001 298.909 409.001 Q302.543 409.001 304.349 405.459 Q306.177 401.895 306.177 394.788 Q306.177 387.659 304.349 384.117 Q302.543 380.552 298.909 380.552 M298.909 376.848 Q304.719 376.848 307.775 381.455 Q310.853 386.038 310.853 394.788 Q310.853 403.515 307.775 408.121 Q304.719 412.705 298.909 412.705 Q293.099 412.705 290.02 408.121 Q286.964 403.515 286.964 394.788 Q286.964 386.038 290.02 381.455 Q293.099 376.848 298.909 376.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M269.326 241.857 Q266.178 241.857 264.326 244.01 Q262.497 246.162 262.497 249.912 Q262.497 253.639 264.326 255.815 Q266.178 257.968 269.326 257.968 Q272.474 257.968 274.303 255.815 Q276.154 253.639 276.154 249.912 Q276.154 246.162 274.303 244.01 Q272.474 241.857 269.326 241.857 M278.608 227.204 L278.608 231.463 Q276.849 230.63 275.043 230.19 Q273.261 229.75 271.502 229.75 Q266.872 229.75 264.418 232.875 Q261.988 236 261.641 242.32 Q263.006 240.306 265.066 239.241 Q267.127 238.153 269.603 238.153 Q274.812 238.153 277.821 241.324 Q280.853 244.472 280.853 249.912 Q280.853 255.236 277.705 258.454 Q274.557 261.671 269.326 261.671 Q263.33 261.671 260.159 257.088 Q256.988 252.482 256.988 243.755 Q256.988 235.561 260.877 230.699 Q264.766 225.815 271.316 225.815 Q273.076 225.815 274.858 226.162 Q276.664 226.51 278.608 227.204 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M298.909 229.519 Q295.298 229.519 293.469 233.084 Q291.664 236.625 291.664 243.755 Q291.664 250.861 293.469 254.426 Q295.298 257.968 298.909 257.968 Q302.543 257.968 304.349 254.426 Q306.177 250.861 306.177 243.755 Q306.177 236.625 304.349 233.084 Q302.543 229.519 298.909 229.519 M298.909 225.815 Q304.719 225.815 307.775 230.422 Q310.853 235.005 310.853 243.755 Q310.853 252.482 307.775 257.088 Q304.719 261.671 298.909 261.671 Q293.099 261.671 290.02 257.088 Q286.964 252.482 286.964 243.755 Q286.964 235.005 290.02 230.422 Q293.099 225.815 298.909 225.815 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip322)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1038.63 400.199,936.396 400.786,842.59 401.372,756.647 401.958,678.046 402.545,606.301 403.131,540.963 403.718,481.615 404.304,427.869 404.891,379.362 405.477,335.755 406.063,296.732 406.65,261.995 407.236,231.266 407.823,274.343 408.409,311.566 408.995,286.942 409.582,264.688 410.168,295.868 410.755,278.55 411.341,264.629 411.927,251.701 412.514,241.179 413.1,233.817 413.687,227.567 414.273,223.255 414.86,220.742 415.446,219.895 416.032,220.591 416.619,223.177 417.205,227.057 417.792,254.505 418.378,259.326 418.964,264.903 419.551,289.206 420.137,295.163 420.724,318.535 421.31,341.108 421.896,350.785 422.483,399.994 423.069,411.691 423.656,435.554 424.242,458.712 424.829,481.331 425.415,493.212 426.001,505.185 426.588,517.36 427.174,530.625 427.761,543.101 428.347,563.145 428.933,589.488 429.52,601.684 430.106,639.713 430.693,658.744 431.279,682.515 431.865,699.545 432.452,715.943 433.038,736.992 433.625,756.516 434.211,765.965 434.798,784.809 435.384,793.853 435.97,811.086 436.557,823.636 437.143,835.875 437.73,851.246 438.316,858.921 438.902,866.621 439.489,877.823 440.075,891.81 440.662,898.926 441.248,909.08 441.835,922.072 442.421,937.322 443.007,943.091 443.594,952.22 444.18,958.018 444.767,966.695 445.353,975.108 445.939,988.571 446.526,993.805 447.112,1001.55 447.699,1006.46 448.285,1020.97 448.871,1032.13 449.458,1040.8 450.044,1051.17 450.631,1059.22 451.217,1069.32 451.804,1074.34 452.39,1083.67 452.976,1092.93 453.563,1105.46 454.149,1107.7 454.736,1112.06 455.322,1118.5 455.908,1118.74 456.495,1122.95 457.081,1127.08 457.668,1134.98 458.254,1136.78 458.84,1139.04 459.427,1142.62 460.013,1146.09 460.6,1149.65 461.186,1157.95 461.773,1157.74 462.359,1159.32 462.945,1162.33 463.532,1162.14 464.118,1168.64 464.705,1170.21 465.291,1174.92 465.877,1177.43 466.464,1178.61 467.05,1179.53 467.637,1179.09 468.223,1182 468.809,1184.61 469.396,1190.48 469.982,1191.33 470.569,1193.61 471.155,1194.75 471.742,1198.54 472.328,1199.11 472.914,1198.4 473.501,1200.65 474.087,1199.83 474.674,1200.52 475.26,1200.94 475.846,1204.71 476.433,1205.42 477.019,1209.06 477.606,1213.89 478.192,1215.8 478.778,1216.17 479.365,1214.83 479.951,1218.03 480.538,1216.65 481.124,1216.9 481.711,1218.54 482.297,1217.36 482.883,1220.55 483.47,1222.42 484.056,1225.49 484.643,1228.11 485.229,1228.09 485.815,1227.71 486.402,1227.8 486.988,1229.25 487.575,1229.07 488.161,1231.98 488.748,1234.63 489.334,1232.93 489.92,1235.26 490.507,1236.1 491.093,1235.69 491.68,1235.55 492.266,1236.55 492.852,1240.3 493.439,1242.32 494.025,1242.82 494.612,1245.98 495.198,1250.33 495.784,1249.15 496.371,1246.9 496.957,1246.21 497.544,1246.72 498.13,1247.09 498.717,1244.96 499.303,1250.53 499.889,1249.59 500.476,1248.55 501.062,1247.43 501.649,1245.47 502.235,1244.61 502.821,1246.65 503.408,1246.02 503.994,1245.32 504.581,1244.8 505.167,1245.24 505.753,1245.88 506.34,1244.25 506.926,1248.94 507.513,1249.29 508.099,1249.59 508.686,1250.16 509.272,1250.12 509.858,1247.64 510.445,1245.56 511.031,1246.14 511.618,1245.46 512.204,1245.03 512.79,1244.3 513.377,1244.85 513.963,1245.73 514.55,1245.22 515.136,1244.5 515.722,1243.95 516.309,1245.78 516.895,1247.73 517.482,1248.22 518.068,1248.68 518.655,1248.94 519.241,1247.96 519.827,1247.07 520.414,1244.93 521,1245.4 521.587,1243.35 522.173,1244.03 522.759,1244.68 523.346,1244.05 523.932,1243.53 524.519,1244 525.105,1245.99 525.691,1246.75 526.278,1244.66 526.864,1245.28 527.451,1243.42 528.037,1241.54 528.624,1244.86 529.21,1245.24 529.796,1243.34 530.383,1244.03 530.969,1242.21 531.556,1240.46 532.142,1245.04 532.728,1244.42 533.315,1242.55 533.901,1243.33 534.488,1242.76 535.074,1242.13 535.661,1242.68 536.247,1242.11 536.833,1242.59 537.42,1243.16 538.006,1242.48 538.593,1240.59 539.179,1240.01 539.765,1238.44 540.352,1240.36 540.938,1239.71 541.525,1236.76 542.111,1235.04 542.697,1234.79 543.284,1234.49 543.87,1235.58 544.457,1235.1 545.043,1236.05 545.63,1234.58 546.216,1235.77 546.802,1235.39 547.389,1233.89 547.975,1232.36 548.562,1230.92 549.148,1233.43 549.734,1233.08 550.321,1234 550.907,1233.75 551.494,1233.68 552.08,1234.77 552.666,1236.87 553.253,1236.3 553.839,1235.85 554.426,1236.55 555.012,1236.46 555.599,1234.7 556.185,1236.58 556.771,1236.13 557.358,1234.36 557.944,1236.2 558.531,1236.83 559.117,1237.37 559.703,1239.22 560.29,1240.06 560.876,1239.47 561.463,1239.21 562.049,1237.75 562.635,1237.2 563.222,1235.45 563.808,1236.21 564.395,1238.17 564.981,1237.27 565.568,1236.44 566.154,1237.17 566.74,1239.02 567.327,1240.79 567.913,1239.95 568.5,1239.09 569.086,1238.3 569.672,1238.75 570.259,1237.03 570.845,1240.17 571.432,1239.62 572.018,1240.39 572.605,1238.34 573.191,1236.48 573.777,1235.52 574.364,1234.82 574.95,1235.5 575.537,1233.83 576.123,1232.07 576.709,1230.29 577.296,1229.95 577.882,1229.66 578.469,1230.45 579.055,1231.62 579.641,1232.36 580.228,1233.1 580.814,1234.98 581.401,1237.94 581.987,1241.94 582.574,1241.01 583.16,1236.02 583.746,1235.1 584.333,1234.51 584.919,1234.68 585.506,1233.75 586.092,1231.72 586.678,1232.35 587.265,1231.9 587.851,1233.85 588.438,1236.11 589.024,1235.52 589.61,1236.32 590.197,1235.77 590.783,1233.72 591.37,1234.47 591.956,1235.19 592.543,1237.05 593.129,1237.57 593.715,1238.09 594.302,1237.32 594.888,1238.98 595.475,1237.12 596.061,1234.16 596.647,1231.06 597.234,1231.66 597.82,1231.22 598.407,1229.7 598.993,1231.98 599.579,1231.53 600.166,1232.28 600.752,1231.76 601.339,1232.62 601.925,1229.65 602.512,1226.74 603.098,1227.69 603.684,1227.62 604.271,1228.16 604.857,1225.19 605.444,1222.48 606.03,1222.24 606.616,1221.16 607.203,1218.59 607.789,1218.83 608.376,1219.4 608.962,1219.61 609.548,1219.75 610.135,1219.76 610.721,1221.17 611.308,1219.98 611.894,1220.23 612.481,1221.54 613.067,1220.25 613.653,1220.29 614.24,1221.42 614.826,1220.16 615.413,1218.99 615.999,1219.05 616.585,1216.72 617.172,1220.51 617.758,1224.47 618.345,1223.18 618.931,1224.11 619.518,1225.24 620.104,1225.1 620.69,1226.09 621.277,1224.54 621.863,1228.06 622.45,1228.94 623.036,1227.31 623.622,1226.84 624.209,1225.45 624.795,1228.93 625.382,1227.23 625.968,1228.25 626.554,1226.65 627.141,1225.08 627.727,1223.65 628.314,1224.6 628.9,1225.64 629.487,1225.33 630.073,1226.37 630.659,1226.14 631.246,1226.97 631.832,1227.67 632.419,1230.89 633.005,1227.83 633.591,1227.5 634.178,1226.84 634.764,1226.19 635.351,1225.78 635.937,1225.41 636.523,1225.14 637.11,1224.63 637.696,1224.52 638.283,1225.48 638.869,1223.66 639.456,1223.66 640.042,1221.09 640.628,1221.16 641.215,1223.46 641.801,1223.31 642.388,1222.99 642.974,1223.96 643.56,1223.72 644.147,1222.14 644.733,1221.91 645.32,1219.25 645.906,1218.83 646.492,1220.16 647.079,1220.19 647.665,1221.39 648.252,1221.13 648.838,1224.68 649.425,1223.03 650.011,1222.74 650.597,1223.47 651.184,1224.35 651.77,1224.16 652.357,1225.14 652.943,1222.55 653.529,1219.91 654.116,1219.71 654.702,1217.24 655.289,1217.28 655.875,1218.6 656.462,1218.43 657.048,1215.1 657.634,1215.32 658.221,1214.26 658.807,1215.25 659.394,1217.48 659.98,1217.37 660.566,1217.34 661.153,1214.91 661.739,1216.45 662.326,1216.78 662.912,1216.84 663.498,1217.03 664.085,1219.34 664.671,1224.05 665.258,1224.79 665.844,1225.56 666.431,1225.23 667.017,1226.4 667.603,1228.28 668.19,1227.86 668.776,1227.29 669.363,1226.7 669.949,1226.25 670.535,1224.65 671.122,1225.65 671.708,1227.72 672.295,1228.47 672.881,1227.63 673.467,1227.06 674.054,1225.29 674.64,1227.18 675.227,1226.25 675.813,1223.55 676.4,1226.82 676.986,1228.69 677.572,1225.56 678.159,1225.13 678.745,1222.35 679.332,1222 679.918,1221.87 680.504,1221.34 681.091,1219.84 681.677,1221.96 682.264,1222.9 682.85,1223.64 683.436,1220.8 684.023,1220.66 684.609,1219.16 685.196,1217.7 685.782,1220.15 686.369,1221.26 686.955,1220.84 687.541,1216.96 688.128,1215.66 688.714,1215.95 689.301,1217.39 689.887,1217.45 690.473,1216.03 691.06,1214.59 691.646,1215.01 692.233,1213.95 692.819,1213.95 693.405,1212.8 693.992,1213 694.578,1214.49 695.165,1213.41 695.751,1214.82 696.338,1213.92 696.924,1212.95 697.51,1210.69 698.097,1213.34 698.683,1212.69 699.27,1210.33 699.856,1210.75 700.442,1210.85 701.029,1214.83 701.615,1215.14 702.202,1215.22 702.788,1214.31 703.375,1213.14 703.961,1215.59 704.547,1213.26 705.134,1213.39 705.72,1216.02 706.307,1216.25 706.893,1217.47 707.479,1217.7 708.066,1217.57 708.652,1217.44 709.239,1217.63 709.825,1218.75 710.411,1218.65 710.998,1221.22 711.584,1219.84 712.171,1217.04 712.757,1217.2 713.344,1216.96 713.93,1216.83 714.516,1216.86 715.103,1219.08 715.689,1218.97 716.276,1220.23 716.862,1219.75 717.448,1219.66 718.035,1218.29 718.621,1219.44 719.208,1222.74 719.794,1223.6 720.38,1223.44 720.967,1224.1 721.553,1222.67 722.14,1222.49 722.726,1222.4 723.313,1223.29 723.899,1221.53 724.485,1221.02 725.072,1218.16 725.658,1219.18 726.245,1215.41 726.831,1215.5 727.417,1212.93 728.004,1214.46 728.59,1213.47 729.177,1215.72 729.763,1216.68 730.349,1215.37 730.936,1215.54 731.522,1215.59 732.109,1214.54 732.695,1212.02 733.282,1213.36 733.868,1214.56 734.454,1214.42 735.041,1213.4 735.627,1214.61 736.214,1210.87 736.8,1211.1 737.386,1210.06 737.973,1211.27 738.559,1210.06 739.146,1208.95 739.732,1208.07 740.318,1207.2 740.905,1207.73 741.491,1207.82 742.078,1209.34 742.664,1210.9 743.251,1212.36 743.837,1209.01 744.423,1209.48 745.01,1211.5 745.596,1214.12 746.183,1215.37 746.769,1214.11 747.355,1215.4 747.942,1219.09 748.528,1221.1 749.115,1218.33 749.701,1219.34 750.288,1221.45 750.874,1219.92 751.46,1218.28 752.047,1216.79 752.633,1218.03 753.22,1217.75 753.806,1218.48 754.392,1218.24 754.979,1218.03 755.565,1217.73 756.152,1218.49 756.738,1218.28 757.324,1218.14 757.911,1219.18 758.497,1217.79 759.084,1218.9 759.67,1218.73 760.257,1217.35 760.843,1215.81 761.429,1216.75 762.016,1215.48 762.602,1215.21 763.189,1216.65 763.775,1219.36 764.361,1221.55 764.948,1223.56 765.534,1223.16 766.121,1224.06 766.707,1222.31 767.293,1221.69 767.88,1222.26 768.466,1221.74 769.053,1220.15 769.639,1220.12 770.226,1222.21 770.812,1220.65 771.398,1217.98 771.985,1220.35 772.571,1219.86 773.158,1218.34 773.744,1220.58 774.33,1220.15 774.917,1222.23 775.503,1221.72 776.09,1222.49 776.676,1221.05 777.262,1223.19 777.849,1221.44 778.435,1221.15 779.022,1220.58 779.608,1221.32 780.195,1216.17 780.781,1217.14 781.367,1216.74 781.954,1217.88 782.54,1218.93 783.127,1217.2 783.713,1215.72 784.299,1215.58 784.886,1215.33 785.472,1214.77 786.059,1214.75 786.645,1212.06 787.232,1214.63 787.818,1215.84 788.404,1215.63 788.991,1214.18 789.577,1213.83 790.164,1215.16 790.75,1212.54 791.336,1212.49 791.923,1208.83 792.509,1209.18 793.096,1209.24 793.682,1210.93 794.268,1209.89 794.855,1209.19 795.441,1210.92 796.028,1210.83 796.614,1209.82 797.201,1211.42 797.787,1212.84 798.373,1211.55 798.96,1211.65 799.546,1210.35 800.133,1211.72 800.719,1211.53 801.305,1211.63 801.892,1211.5 802.478,1210.13 803.065,1211.42 803.651,1211.69 804.237,1212.12 804.824,1211.04 805.41,1208.66 805.997,1208.94 806.583,1209.31 807.17,1209.38 807.756,1207.18 808.342,1207.39 808.929,1208.72 809.515,1207.36 810.102,1208.93 810.688,1211.53 811.274,1211.55 811.861,1209.25 812.447,1208.09 813.034,1207.13 813.62,1207.54 814.206,1209.19 814.793,1208.04 815.379,1208.12 815.966,1209.69 816.552,1211.05 817.139,1209.94 817.725,1209.18 818.311,1213.2 818.898,1211.92 819.484,1211.97 820.071,1210.75 820.657,1213.33 821.243,1213.47 821.83,1213.53 822.416,1212.1 823.003,1214.48 823.589,1216.92 824.175,1217.9 824.762,1218.83 825.348,1221.12 825.935,1221.73 826.521,1220.11 827.108,1219.7 827.694,1220.56 828.28,1223.75 828.867,1220.62 829.453,1218.77 830.04,1218.38 830.626,1218.03 831.212,1216.38 831.799,1217.4 832.385,1215.77 832.972,1213.07 833.558,1215.32 834.145,1216.36 834.731,1217.36 835.317,1218.38 835.904,1217.15 836.49,1215.9 837.077,1215.75 837.663,1213.33 838.249,1213.63 838.836,1214.91 839.422,1217.45 840.009,1218.38 840.595,1219.36 841.181,1216.76 841.768,1217.51 842.354,1215.95 842.941,1216.94 843.527,1217.77 844.114,1216.06 844.7,1218.5 845.286,1218.59 845.873,1217.12 846.459,1216.84 847.046,1215.45 847.632,1215.3 848.218,1215.14 848.805,1211.53 849.391,1212.82 849.978,1211.44 850.564,1212.69 851.15,1211.23 851.737,1211.21 852.323,1209.95 852.91,1211.25 853.496,1211.34 854.083,1212.55 854.669,1214.13 855.255,1216.41 855.842,1216.23 856.428,1213.54 857.015,1215.83 857.601,1215.77 858.187,1215.8 858.774,1216.77 859.36,1215.08 859.947,1213.67 860.533,1211.37 861.119,1211.44 861.706,1211.51 862.292,1214.01 862.879,1213.96 863.465,1211.41 864.052,1211.46 864.638,1210.48 865.224,1210.66 865.811,1210.69 866.397,1212.06 866.984,1213.5 867.57,1214.55 868.156,1216.62 868.743,1217.54 869.329,1217.28 869.916,1215.63 870.502,1216.75 871.089,1216.47 871.675,1216.35 872.261,1214.83 872.848,1213.4 873.434,1214.52 874.021,1215.49 874.607,1216.3 875.193,1214.9 875.78,1214.73 876.366,1213.55 876.953,1213.34 877.539,1211.02 878.125,1211.2 878.712,1211.16 879.298,1210.14 879.885,1210.4 880.471,1212.95 881.058,1215.41 881.644,1214.01 882.23,1215.37 882.817,1214.93 883.403,1212.47 883.99,1210.11 884.576,1210.21 885.162,1210.31 885.749,1209.01 886.335,1208.13 886.922,1207.21 887.508,1211.18 888.094,1212.45 888.681,1208.86 889.267,1207.99 889.854,1205.64 890.44,1207.26 891.027,1208.6 891.613,1212.56 892.199,1212.62 892.786,1211.19 893.372,1213.48 893.959,1212.04 894.545,1213.13 895.131,1213.08 895.718,1212.92 896.304,1214.01 896.891,1214.11 897.477,1213.98 898.063,1215.18 898.65,1216.34 899.236,1214.9 899.823,1212.37 900.409,1212.33 900.996,1212.58 901.582,1212.22 902.168,1213.57 902.755,1213.57 903.341,1213.64 903.928,1216.2 904.514,1218.46 905.1,1219.3 905.687,1216.64 906.273,1213.8 906.86,1213.6 907.446,1213.36 908.032,1210.75 908.619,1210.6 909.205,1210.46 909.792,1209.18 910.378,1209.44 910.965,1209.86 911.551,1213.68 912.137,1215.13 912.724,1217.35 913.31,1218.35 913.897,1219.11 914.483,1218.58 915.069,1215.58 915.656,1215.45 916.242,1215.1 916.829,1217.34 917.415,1217.28 918.002,1214.5 918.588,1215.55 919.174,1216.45 919.761,1216.2 920.347,1214.6 920.934,1214.59 921.52,1209.52 922.106,1208.44 922.693,1207.55 923.279,1207.62 923.866,1210.24 924.452,1211.68 925.038,1211.76 925.625,1213.14 926.211,1214.26 926.798,1214.16 927.384,1212.76 927.971,1211.45 928.557,1211.45 929.143,1211.37 929.73,1210.29 930.316,1210.36 930.903,1210.57 931.489,1210.73 932.075,1210.82 932.662,1209.72 933.248,1212.4 933.835,1211.15 934.421,1211.05 935.007,1209.99 935.594,1209.97 936.18,1208.4 936.767,1212.09 937.353,1213.19 937.94,1213.15 938.526,1214.19 939.112,1214.12 939.699,1214.01 940.285,1214.02 940.872,1212.69 941.458,1210.26 942.044,1209.11 942.631,1210.65 943.217,1211.89 943.804,1210.28 944.39,1210.37 944.976,1209.13 945.563,1209.3 946.149,1209.37 946.736,1209.6 947.322,1208.3 947.909,1209.56 948.495,1211.12 949.081,1211.08 949.668,1208.85 950.254,1209.09 950.841,1212.94 951.427,1212.83 952.013,1215.22 952.6,1213.84 953.186,1212.43 953.773,1212.05 954.359,1211.13 954.945,1213.69 955.532,1216.07 956.118,1216.16 956.705,1214.78 957.291,1214.73 957.878,1214.48 958.464,1214.31 959.05,1213.09 959.637,1211.71 960.223,1211.93 960.81,1213.2 961.396,1211.75 961.982,1210.56 962.569,1209.49 963.155,1209.72 963.742,1210.86 964.328,1213.3 964.915,1213.46 965.501,1213.28 966.087,1213.14 966.674,1214.39 967.26,1214.45 967.847,1214.34 968.433,1211.61 969.019,1207.75 969.606,1210.33 970.192,1207.91 970.779,1206.61 971.365,1206.86 971.951,1208.4 972.538,1205.06 973.124,1206.74 973.711,1206.77 974.297,1205.77 974.884,1206.04 975.47,1203.97 976.056,1205.25 976.643,1205.35 977.229,1202.03 977.816,1203.84 978.402,1204.09 978.988,1203.2 979.575,1203.94 980.161,1200.3 980.748,1202.01 981.334,1203.95 981.92,1204.42 982.507,1204.87 983.093,1206.44 983.68,1208.16 984.266,1207.19 984.853,1208.7 985.439,1208.92 986.025,1209.14 986.612,1210.51 987.198,1210.65 987.785,1209.54 988.371,1208.39 988.957,1206.02 989.544,1205.28 990.13,1205.78 990.717,1204.95 991.303,1205.33 991.889,1205.59 992.476,1204.73 993.062,1205.95 993.649,1209.82 994.235,1209.91 994.822,1208.93 995.408,1209.02 995.994,1211.79 996.581,1212.96 997.167,1210.52 997.754,1209.32 998.34,1209.32 998.926,1210.54 999.513,1210.45 1000.1,1211.72 1000.69,1210.49 1001.27,1211.39 1001.86,1208.99 1002.44,1209.1 1003.03,1208.05 1003.62,1210.65 1004.2,1209.55 1004.79,1210.78 1005.38,1211.91 1005.96,1213.2 1006.55,1211.57 1007.14,1209 1007.72,1211.77 1008.31,1212.04 1008.9,1214.27 1009.48,1213.92 1010.07,1215.03 1010.65,1214.57 1011.24,1217.12 1011.83,1215.47 1012.41,1216.4 1013,1216.2 1013.59,1217.47 1014.17,1214.64 1014.76,1219.31 1015.35,1216.55 1015.93,1216.47 1016.52,1216.26 1017.11,1217.39 1017.69,1215.86 1018.28,1214.31 1018.86,1215.29 1019.45,1215.33 1020.04,1215.22 1020.62,1217.36 1021.21,1215.87 1021.8,1216.62 1022.38,1216.49 1022.97,1216.44 1023.56,1212.6 1024.14,1212.45 1024.73,1211.03 1025.32,1211.24 1025.9,1210.1 1026.49,1211.45 1027.07,1210.35 1027.66,1211.8 1028.25,1215.44 1028.83,1216.3 1029.42,1215.04 1030.01,1214.84 1030.59,1210.79 1031.18,1209.63 1031.77,1209.66 1032.35,1208.71 1032.94,1208.83 1033.52,1208.92 1034.11,1210.35 1034.7,1211.49 1035.28,1207.92 1035.87,1205.43 1036.46,1207.97 1037.04,1210.53 1037.63,1210.42 1038.22,1209.13 1038.8,1210.53 1039.39,1211.71 1039.98,1211.52 1040.56,1209.06 1041.15,1209.34 1041.73,1209.56 1042.32,1210.82 1042.91,1209.52 1043.49,1210.82 1044.08,1209.51 1044.67,1208.4 1045.25,1208.55 1045.84,1207.49 1046.43,1206.54 1047.01,1205.4 1047.6,1206.98 1048.19,1210.89 1048.77,1208.55 1049.36,1207.48 1049.94,1207.61 1050.53,1207.97 1051.12,1206.16 1051.7,1207.77 1052.29,1205.57 1052.88,1207.05 1053.46,1208.21 1054.05,1208.31 1054.64,1210.79 1055.22,1208.39 1055.81,1208.47 1056.39,1210.07 1056.98,1210.18 1057.57,1210.01 1058.15,1207.48 1058.74,1206.72 1059.33,1208.15 1059.91,1209.47 1060.5,1208.56 1061.09,1208.72 1061.67,1211.45 1062.26,1214.17 1062.85,1214.24 1063.43,1215.41 1064.02,1221.37 1064.6,1221.08 1065.19,1223.05 1065.78,1222.58 1066.36,1220.74 1066.95,1221.5 1067.54,1222.3 1068.12,1221.84 1068.71,1223.52 1069.3,1222.87 1069.88,1219.69 1070.47,1218.06 1071.06,1216.56 1071.64,1212.58 1072.23,1212.1 1072.81,1214.49 1073.4,1217.02 1073.99,1219.1 1074.57,1218.5 1075.16,1218.14 1075.75,1217.78 1076.33,1215.15 1076.92,1216.33 1077.51,1214.68 1078.09,1218.01 1078.68,1217.67 1079.26,1219.65 1079.85,1221.72 1080.44,1217.42 1081.02,1215.84 1081.61,1215.19 1082.2,1214.79 1082.78,1213.8 1083.37,1212.55 1083.96,1212.75 1084.54,1210.46 1085.13,1211.78 1085.72,1211.58 1086.3,1210.03 1086.89,1211.43 1087.47,1213.9 1088.06,1215.15 1088.65,1212.51 1089.23,1212.51 1089.82,1213.64 1090.41,1210.79 1090.99,1208.5 1091.58,1207.52 1092.17,1205.5 1092.75,1204.64 1093.34,1203.66 1093.93,1204.18 1094.51,1204.65 1095.1,1203.64 1095.68,1201.4 1096.27,1199.46 1096.86,1198.83 1097.44,1202.05 1098.03,1202.44 1098.62,1202.86 1099.2,1205.6 1099.79,1206.96 1100.38,1208.24 1100.96,1209.5 1101.55,1209.44 1102.14,1208.01 1102.72,1208.01 1103.31,1208.3 1103.89,1208.22 1104.48,1207.24 1105.07,1205 1105.65,1203.77 1106.24,1204.2 1106.83,1205.68 1107.41,1204.71 1108,1205.32 1108.59,1208.17 1109.17,1208.29 1109.76,1207.13 1110.34,1205.97 1110.93,1208.63 1111.52,1208.68 1112.1,1210.26 1112.69,1212.56 1113.28,1211.37 1113.86,1212.67 1114.45,1212.86 1115.04,1211.5 1115.62,1210.16 1116.21,1210.15 1116.8,1212.96 1117.38,1213.96 1117.97,1215.14 1118.55,1214.73 1119.14,1214.65 1119.73,1214.31 1120.31,1216.48 1120.9,1216.41 1121.49,1215.01 1122.07,1214.89 1122.66,1215.79 1123.25,1215.52 1123.83,1215.15 1124.42,1213.38 1125.01,1212.26 1125.59,1212.4 1126.18,1209.92 1126.76,1208.83 1127.35,1210.28 1127.94,1211.54 1128.52,1213.96 1129.11,1215.11 1129.7,1216.11 1130.28,1216.01 1130.87,1214.47 1131.46,1214.07 1132.04,1213.66 1132.63,1215.99 1133.21,1211.89 1133.8,1210.58 1134.39,1211.72 1134.97,1211.72 1135.56,1212.8 1136.15,1214.23 1136.73,1213.09 1137.32,1212.97 1137.91,1211.78 1138.49,1214.4 1139.08,1214.04 1139.67,1213.84 1140.25,1214.92 1140.84,1215.02 1141.42,1212.39 1142.01,1210.99 1142.6,1212.19 1143.18,1209.71 1143.77,1209.79 1144.36,1209.81 1144.94,1212.19 1145.53,1210.91 1146.12,1212 1146.7,1214.33 1147.29,1212.94 1147.88,1214.1 1148.46,1214.11 1149.05,1215.11 1149.63,1213.6 1150.22,1212.2 1150.81,1209.49 1151.39,1207.04 1151.98,1208.45 1152.57,1209.71 1153.15,1209.64 1153.74,1211.05 1154.33,1209.85 1154.91,1211.03 1155.5,1213.52 1156.09,1214.36 1156.67,1215.54 1157.26,1215.08 1157.84,1213.17 1158.43,1210.57 1159.02,1210.48 1159.6,1209.38 1160.19,1211.67 1160.78,1209.17 1161.36,1207.84 1161.95,1209.41 1162.54,1209.56 1163.12,1209.54 1163.71,1210.74 1164.29,1209.56 1164.88,1210.72 1165.47,1208.17 1166.05,1207.22 1166.64,1206.14 1167.23,1206.3 1167.81,1205.53 1168.4,1206.06 1168.99,1206.29 1169.57,1208.83 1170.16,1206.53 1170.75,1205.83 1171.33,1208.48 1171.92,1207.41 1172.5,1208.95 1173.09,1209.07 1173.68,1208.07 1174.26,1206.94 1174.85,1204.74 1175.44,1201.54 1176.02,1204.59 1176.61,1203.84 1177.2,1204.27 1177.78,1203.22 1178.37,1207.26 1178.96,1208.6 1179.54,1208.76 1180.13,1208.85 1180.71,1207.78 1181.3,1209.25 1181.89,1211.84 1182.47,1213.24 1183.06,1214.22 1183.65,1211.74 1184.23,1210.22 1184.82,1207.6 1185.41,1206.56 1185.99,1207.94 1186.58,1209.06 1187.16,1206.83 1187.75,1205.7 1188.34,1207.19 1188.92,1208.4 1189.51,1209.71 1190.1,1210.82 1190.68,1209.11 1191.27,1211.5 1191.86,1209 1192.44,1209.22 1193.03,1209.14 1193.62,1209.03 1194.2,1205.54 1194.79,1204.53 1195.37,1204.93 1195.96,1206.88 1196.55,1206.99 1197.13,1207.3 1197.72,1207.34 1198.31,1210.21 1198.89,1207.79 1199.48,1206.76 1200.07,1209.67 1200.65,1212.33 1201.24,1213.74 1201.83,1216.4 1202.41,1216.04 1203,1214.82 1203.58,1217.25 1204.17,1216.8 1204.76,1218.96 1205.34,1219.96 1205.93,1217.26 1206.52,1214.32 1207.1,1212.89 1207.69,1214.04 1208.28,1213.99 1208.86,1214.06 1209.45,1211.51 1210.03,1210.33 1210.62,1211.66 1211.21,1212.56 1211.79,1213.45 1212.38,1215.49 1212.97,1216.22 1213.55,1215.83 1214.14,1214.41 1214.73,1212.99 1215.31,1211.61 1215.9,1211.77 1216.49,1214.01 1217.07,1212.57 1217.66,1213.87 1218.24,1213.77 1218.83,1213.48 1219.42,1214.61 1220,1215.72 1220.59,1214.16 1221.18,1214.12 1221.76,1215.25 1222.35,1214.94 1222.94,1214.79 1223.52,1213.24 1224.11,1212.92 1224.7,1211.45 1225.28,1212.82 1225.87,1212.73 1226.45,1213.85 1227.04,1214.67 1227.63,1216.73 1228.21,1216.33 1228.8,1219.61 1229.39,1217.96 1229.97,1218.69 1230.56,1216.68 1231.15,1217.57 1231.73,1217.23 1232.32,1215.49 1232.91,1212.88 1233.49,1211.74 1234.08,1211.86 1234.66,1212 1235.25,1211.93 1235.84,1209.48 1236.42,1210.42 1237.01,1206.78 1237.6,1208.48 1238.18,1207.66 1238.77,1207.72 1239.36,1206.79 1239.94,1204.47 1240.53,1206.07 1241.11,1206.36 1241.7,1206.56 1242.29,1205.59 1242.87,1205.53 1243.46,1207.08 1244.05,1207.39 1244.63,1207.66 1245.22,1206.88 1245.81,1208.55 1246.39,1208.54 1246.98,1207.47 1247.57,1208.89 1248.15,1208.95 1248.74,1209.05 1249.32,1211.4 1249.91,1210.29 1250.5,1210.3 1251.08,1209.34 1251.67,1209.22 1252.26,1209.15 1252.84,1207.89 1253.43,1210.32 1254.02,1210.14 1254.6,1209 1255.19,1209.05 1255.78,1209.28 1256.36,1212.99 1256.95,1211.57 1257.53,1213.85 1258.12,1209.99 1258.71,1213.8 1259.29,1208.5 1259.88,1208.52 1260.47,1209.67 1261.05,1209.66 1261.64,1208.42 1262.23,1209.68 1262.81,1208.38 1263.4,1209.8 1263.98,1207.4 1264.57,1207.71 1265.16,1206.74 1265.74,1205.69 1266.33,1204.87 1266.92,1205.4 1267.5,1206.99 1268.09,1205.91 1268.68,1206.24 1269.26,1206.39 1269.85,1206.55 1270.44,1205.6 1271.02,1208.36 1271.61,1208.46 1272.19,1210.06 1272.78,1212.8 1273.37,1212.78 1273.95,1216.27 1274.54,1214.72 1275.13,1215.57 1275.71,1214.19 1276.3,1215.33 1276.89,1215.22 1277.47,1216 1278.06,1216.95 1278.65,1217.96 1279.23,1218.64 1279.82,1215.56 1280.4,1214.25 1280.99,1213.97 1281.58,1213.6 1282.16,1213.26 1282.75,1212.87 1283.34,1210.08 1283.92,1212.64 1284.51,1213.75 1285.1,1213.6 1285.68,1214.6 1286.27,1215.9 1286.86,1217 1287.44,1216.7 1288.03,1213.94 1288.61,1213.98 1289.2,1214.99 1289.79,1217.12 1290.37,1213.14 1290.96,1214.03 1291.55,1213.78 1292.13,1212.33 1292.72,1212.2 1293.31,1209.66 1293.89,1213.59 1294.48,1215.73 1295.06,1215.53 1295.65,1213.02 1296.24,1211.31 1296.82,1211.12 1297.41,1211.28 1298,1210.39 1298.58,1205.6 1299.17,1208.24 1299.76,1208.49 1300.34,1209.71 1300.93,1209.68 1301.52,1209.92 1302.1,1209.81 1302.69,1208.44 1303.27,1208.66 1303.86,1206.21 1304.45,1204.04 1305.03,1207.29 1305.62,1206.48 1306.21,1210.24 1306.79,1207.65 1307.38,1205.28 1307.97,1206.75 1308.55,1207 1309.14,1207.33 1309.73,1206.68 1310.31,1205.5 1310.9,1204.64 1311.48,1204 1312.07,1205.46 1312.66,1205.64 1313.24,1211.96 1313.83,1208.19 1314.42,1207.09 1315,1208.31 1315.59,1209.9 1316.18,1213.67 1316.76,1211.08 1317.35,1208.75 1317.93,1212.51 1318.52,1211.44 1319.11,1211.21 1319.69,1213.43 1320.28,1215.82 1320.87,1213.2 1321.45,1214.19 1322.04,1216.32 1322.63,1215.99 1323.21,1214.36 1323.8,1214.07 1324.39,1213.01 1324.97,1211.74 1325.56,1211.86 1326.14,1211.86 1326.73,1213.02 1327.32,1215.24 1327.9,1213.97 1328.49,1216.34 1329.08,1217.22 1329.66,1215.41 1330.25,1215.38 1330.84,1215.19 1331.42,1213.86 1332.01,1211.39 1332.6,1214.06 1333.18,1214.08 1333.77,1214.05 1334.35,1215.29 1334.94,1215.97 1335.53,1214.49 1336.11,1214.33 1336.7,1218.91 1337.29,1215.86 1337.87,1216.73 1338.46,1217.65 1339.05,1216.05 1339.63,1214.77 1340.22,1214.65 1340.8,1214.56 1341.39,1213.21 1341.98,1214.33 1342.56,1212.96 1343.15,1212.83 1343.74,1212.54 1344.32,1210.96 1344.91,1211.9 1345.5,1211.96 1346.08,1216.71 1346.67,1216.27 1347.26,1212.26 1347.84,1209.77 1348.43,1209.75 1349.01,1209.69 1349.6,1209.82 1350.19,1209.9 1350.77,1209.84 1351.36,1209.96 1351.95,1206.42 1352.53,1209.98 1353.12,1208.78 1353.71,1208.94 1354.29,1208.77 1354.88,1208.6 1355.47,1207.46 1356.05,1206.28 1356.64,1206.22 1357.22,1206.65 1357.81,1208.03 1358.4,1204.43 1358.98,1204.53 1359.57,1203.34 1360.16,1208.77 1360.74,1207.79 1361.33,1206.68 1361.92,1209.4 1362.5,1209.23 1363.09,1206.85 1363.68,1204.51 1364.26,1204.98 1364.85,1205.45 1365.43,1206.92 1366.02,1208.64 1366.61,1206.37 1367.19,1206.65 1367.78,1205.63 1368.37,1207.27 1368.95,1206.04 1369.54,1206.17 1370.13,1206.45 1370.71,1206.58 1371.3,1204.32 1371.88,1204.7 1372.47,1204.98 1373.06,1203.97 1373.64,1203.11 1374.23,1204.85 1374.82,1204.06 1375.4,1205.4 1375.99,1206.7 1376.58,1208.31 1377.16,1209.54 1377.75,1209.76 1378.34,1209.92 1378.92,1209.83 1379.51,1209.97 1380.09,1208.98 1380.68,1209.21 1381.27,1210.41 1381.85,1210.6 1382.44,1212.99 1383.03,1216.35 1383.61,1216.3 1384.2,1217.2 1384.79,1214.42 1385.37,1214.31 1385.96,1214.13 1386.55,1215.37 1387.13,1213.9 1387.72,1213.66 1388.3,1213.48 1388.89,1213.43 1389.48,1214.75 1390.06,1215.72 1390.65,1216.92 1391.24,1219 1391.82,1219.55 1392.41,1221.31 1393,1222.03 1393.58,1221.31 1394.17,1220.68 1394.75,1220.18 1395.34,1219.68 1395.93,1219.21 1396.51,1218.91 1397.1,1217.29 1397.69,1215.59 1398.27,1214 1398.86,1211.38 1399.45,1208.83 1400.03,1205.14 1400.62,1203.03 1401.21,1200.79 1401.79,1204.06 1402.38,1205.71 1402.96,1207.5 1403.55,1206.37 1404.14,1204.28 1404.72,1205.86 1405.31,1207.51 1405.9,1211.18 1406.48,1212.28 1407.07,1211.08 1407.66,1210.86 1408.24,1209.32 1408.83,1208.39 1409.42,1209.75 1410,1207.33 1410.59,1207.47 1411.17,1206.19 1411.76,1205.28 1412.35,1208.18 1412.93,1208.4 1413.52,1208.92 1414.11,1207.96 1414.69,1208.04 1415.28,1210.71 1415.87,1210.85 1416.45,1212.08 1417.04,1208.19 1417.63,1209.5 1418.21,1210.86 1418.8,1208.57 1419.38,1209.96 1419.97,1211.2 1420.56,1211 1421.14,1209.51 1421.73,1209.71 1422.32,1211.13 1422.9,1208.75 1423.49,1207.69 1424.08,1206.63 1424.66,1206.96 1425.25,1207.14 1425.83,1209.68 1426.42,1211.03 1427.01,1210.87 1427.59,1209.84 1428.18,1206.39 1428.77,1206.59 1429.35,1206.64 1429.94,1209.35 1430.53,1209.52 1431.11,1208.75 1431.7,1209 1432.29,1207.8 1432.87,1209.18 1433.46,1208.14 1434.04,1208.4 1434.63,1207.43 1435.22,1208.9 1435.8,1209.07 1436.39,1210.59 1436.98,1210.57 1437.56,1211.98 1438.15,1213.21 1438.74,1212.97 1439.32,1212.72 1439.91,1212.76 1440.5,1208.92 1441.08,1209.14 1441.67,1208.09 1442.25,1208.26 1442.84,1208.33 1443.43,1209.62 1444.01,1212.07 1444.6,1213.21 1445.19,1212.93 1445.77,1212.61 1446.36,1211.52 1446.95,1209.2 1447.53,1207.96 1448.12,1210.97 1448.7,1209.87 1449.29,1213.79 1449.88,1210.96 1450.46,1209.55 1451.05,1208.65 1451.64,1208.97 1452.22,1207.61 1452.81,1205.23 1453.4,1206.68 1453.98,1209.34 1454.57,1206.76 1455.16,1200.69 1455.74,1202.6 1456.33,1205.32 1456.91,1204.43 1457.5,1203.46 1458.09,1204.11 1458.67,1204.5 1459.26,1205.96 1459.85,1205.19 1460.43,1203.1 1461.02,1202.55 1461.61,1202.92 1462.19,1205.97 1462.78,1205.12 1463.37,1205.73 1463.95,1206.31 1464.54,1207.65 1465.12,1208.99 1465.71,1212.92 1466.3,1214.28 1466.88,1211.5 1467.47,1209.26 1468.06,1209.47 1468.64,1211.84 1469.23,1211.62 1469.82,1212.66 1470.4,1214 1470.99,1215.11 1471.57,1214.96 1472.16,1216.2 1472.75,1216.15 1473.33,1214.51 1473.92,1214.58 1474.51,1216.72 1475.09,1216.3 1475.68,1217.35 1476.27,1217.03 1476.85,1217.75 1477.44,1214.97 1478.03,1216.08 1478.61,1214.25 1479.2,1215.26 1479.78,1216.47 1480.37,1217.29 1480.96,1215.75 1481.54,1215.43 1482.13,1216.29 1482.72,1218.71 1483.3,1217.2 1483.89,1214.8 1484.48,1215.72 1485.06,1211.53 1485.65,1211.74 1486.24,1209.32 1486.82,1213.04 1487.41,1210.4 1487.99,1210.17 1488.58,1211.54 1489.17,1212.55 1489.75,1212.39 1490.34,1212.05 1490.93,1213.06 1491.51,1211.7 1492.1,1212.73 1492.69,1215.24 1493.27,1215.33 1493.86,1218.63 1494.45,1215.54 1495.03,1216.33 1495.62,1216 1496.2,1216.83 1496.79,1216.46 1497.38,1215.99 1497.96,1215.53 1498.55,1217.37 1499.14,1215.9 1499.72,1215.8 1500.31,1215.78 1500.9,1217.87 1501.48,1214.96 1502.07,1215.48 1502.65,1214.03 1503.24,1213.76 1503.83,1213.54 1504.41,1214.51 1505,1211.93 1505.59,1213.24 1506.17,1214.07 1506.76,1213.87 1507.35,1213.48 1507.93,1213.31 1508.52,1215.47 1509.11,1216.15 1509.69,1214.56 1510.28,1211.88 1510.86,1210.52 1511.45,1212.94 1512.04,1213.97 1512.62,1214.93 1513.21,1214.69 1513.8,1213.36 1514.38,1211.92 1514.97,1211.75 1515.56,1212.97 1516.14,1212.99 1516.73,1212.94 1517.32,1214.22 1517.9,1212.91 1518.49,1211.82 1519.07,1210.61 1519.66,1208.41 1520.25,1207.13 1520.83,1208.36 1521.42,1207.34 1522.01,1207.43 1522.59,1207.55 1523.18,1207.75 1523.77,1209.29 1524.35,1209.29 1524.94,1208.42 1525.52,1207.53 1526.11,1206.27 1526.7,1205.07 1527.28,1204.1 1527.87,1203.12 1528.46,1203.58 1529.04,1204.12 1529.63,1205.89 1530.22,1206.14 1530.8,1204.92 1531.39,1205.18 1531.98,1205.27 1532.56,1205.66 1533.15,1206.17 1533.73,1207.6 1534.32,1207.59 1534.91,1202.54 1535.49,1202.94 1536.08,1200.95 1536.67,1202.61 1537.25,1203.18 1537.84,1203.53 1538.43,1205.21 1539.01,1208.01 1539.6,1209.2 1540.19,1212.94 1540.77,1209.08 1541.36,1208.16 1541.94,1207.15 1542.53,1208.63 1543.12,1210.96 1543.7,1210.77 1544.29,1207.05 1544.88,1206.11 1545.46,1202.71 1546.05,1203.07 1546.64,1202.21 1547.22,1202.35 1547.81,1201.43 1548.4,1200.8 1548.98,1202.36 1549.57,1206.68 1550.15,1208.18 1550.74,1207.33 1551.33,1209.94 1551.91,1209.91 1552.5,1210.16 1553.09,1211.63 1553.67,1210.59 1554.26,1213.17 1554.85,1212.73 1555.43,1213.89 1556.02,1212.68 1556.6,1211.56 1557.19,1211.66 1557.78,1210.53 1558.36,1210.67 1558.95,1211.86 1559.54,1210.4 1560.12,1207.82 1560.71,1207.96 1561.3,1208.28 1561.88,1207 1562.47,1207.1 1563.06,1207.46 1563.64,1206.45 1564.23,1207.63 1564.81,1207.74 1565.4,1209.04 1565.99,1207.94 1566.57,1205.4 1567.16,1205.98 1567.75,1206.09 1568.33,1202.87 1568.92,1202.01 1569.51,1201.58 1570.09,1202.2 1570.68,1203.84 1571.27,1201.9 1571.85,1204.91 1572.44,1209.2 1573.02,1210.69 1573.61,1210.56 1574.2,1213.03 1574.78,1211.89 1575.37,1213.14 1575.96,1212.84 1576.54,1212.65 1577.13,1215.28 1577.72,1215.02 1578.3,1215.93 1578.89,1214.45 1579.47,1218.02 1580.06,1216.49 1580.65,1217.25 1581.23,1218.06 1581.82,1217.59 1582.41,1217.33 1582.99,1215.81 1583.58,1219.28 1584.17,1216.62 1584.75,1216.4 1585.34,1216.2 1585.93,1215.96 1586.51,1219.17 1587.1,1218.63 1587.68,1214.63 1588.27,1213.18 1588.86,1214.43 1589.44,1214.22 1590.03,1212.79 1590.62,1210.06 1591.2,1210.16 1591.79,1211.28 1592.38,1208.9 1592.96,1211.53 1593.55,1211.51 1594.14,1209.05 1594.72,1210.33 1595.31,1210.37 1595.89,1210.49 1596.48,1212.93 1597.07,1213.88 1597.65,1212.38 1598.24,1210.83 1598.83,1211.9 1599.41,1212.92 1600,1211.64 1600.59,1210.28 1601.17,1213.82 1601.76,1212.64 1602.34,1211.3 1602.93,1212.5 1603.52,1212.25 1604.1,1210.72 1604.69,1215.65 1605.28,1217.88 1605.86,1219.81 1606.45,1220.49 1607.04,1218.5 1607.62,1218.3 1608.21,1216.92 1608.8,1216.54 1609.38,1217.63 1609.97,1214.71 1610.55,1213.55 1611.14,1213.54 1611.73,1212.25 1612.31,1210.69 1612.9,1212.14 1613.49,1210.63 1614.07,1210.92 1614.66,1211.3 1615.25,1211.3 1615.83,1214.84 1616.42,1213.54 1617.01,1214.66 1617.59,1215.49 1618.18,1213.97 1618.76,1213.78 1619.35,1212.56 1619.94,1212.42 1620.52,1210.86 1621.11,1211.73 1621.7,1211.72 1622.28,1211.8 1622.87,1210.38 1623.46,1210.52 1624.04,1208.01 1624.63,1206.59 1625.22,1208.1 1625.8,1211.01 1626.39,1207.39 1626.97,1207.63 1627.56,1211.25 1628.15,1213.91 1628.73,1212.41 1629.32,1210.84 1629.91,1214.51 1630.49,1215.58 1631.08,1215.04 1631.67,1214.74 1632.25,1213.18 1632.84,1212.96 1633.42,1213.04 1634.01,1214.12 1634.6,1216.1 1635.18,1214.88 1635.77,1214.47 1636.36,1212.95 1636.94,1209.18 1637.53,1211.61 1638.12,1207.72 1638.7,1208.87 1639.29,1206.37 1639.88,1202 1640.46,1203.55 1641.05,1205.2 1641.63,1205.72 1642.22,1206.1 1642.81,1204.95 1643.39,1205.13 1643.98,1204.29 1644.57,1204.67 1645.15,1204.8 1645.74,1205.08 1646.33,1204.01 1646.91,1203.27 1647.5,1206.21 1648.09,1206.22 1648.67,1204.98 1649.26,1203.94 1649.84,1208.07 1650.43,1211.79 1651.02,1210.31 1651.6,1210.36 1652.19,1210.56 1652.78,1208.16 1653.36,1207 1653.95,1207.04 1654.54,1208.68 1655.12,1210.33 1655.71,1207.99 1656.29,1205.83 1656.88,1210.04 1657.47,1210.21 1658.05,1212.68 1658.64,1212.74 1659.23,1213.79 1659.81,1213.6 1660.4,1212.07 1660.99,1210.86 1661.57,1211.06 1662.16,1211.13 1662.75,1211.04 1663.33,1208.26 1663.92,1209.6 1664.5,1209.85 1665.09,1212.18 1665.68,1208.4 1666.26,1210.11 1666.85,1210.35 1667.44,1210.25 1668.02,1211.36 1668.61,1211.23 1669.2,1210.3 1669.78,1210.56 1670.37,1212.95 1670.96,1210.32 1671.54,1211.53 1672.13,1214.05 1672.71,1216.05 1673.3,1217.47 1673.89,1218.14 1674.47,1216.58 1675.06,1214.86 1675.65,1214.89 1676.23,1213.25 1676.82,1213 1677.41,1212.78 1677.99,1212.63 1678.58,1213.71 1679.17,1213.32 1679.75,1214.45 1680.34,1214.48 1680.92,1213.15 1681.51,1211.89 1682.1,1214.29 1682.68,1211.81 1683.27,1213.07 1683.86,1211.87 1684.44,1211.86 1685.03,1211.81 1685.62,1212.87 1686.2,1212.71 1686.79,1215.17 1687.37,1215.89 1687.96,1215.57 1688.55,1215.48 1689.13,1213.8 1689.72,1213.6 1690.31,1213.34 1690.89,1212.85 1691.48,1212.8 1692.07,1212.66 1692.65,1213.92 1693.24,1215.06 1693.83,1214.74 1694.41,1214.52 1695,1214.23 1695.58,1211.61 1696.17,1210.36 1696.76,1210.32 1697.34,1206.67 1697.93,1205.78 1698.52,1207.22 1699.1,1209.92 1699.69,1210.15 1700.28,1207.64 1700.86,1205.42 1701.45,1207.16 1702.04,1210.04 1702.62,1211.22 1703.21,1208.66 1703.79,1207.41 1704.38,1206.4 1704.97,1208.08 1705.55,1206.98 1706.14,1208.41 1706.73,1206.15 1707.31,1205.2 1707.9,1204.21 1708.49,1203.42 1709.07,1203.57 1709.66,1201.45 1710.24,1200.78 1710.83,1198.81 1711.42,1200.78 1712,1201.3 1712.59,1201.91 1713.18,1202.59 1713.76,1202.8 1714.35,1203.21 1714.94,1202.6 1715.52,1204.19 1716.11,1205.56 1716.7,1205.63 1717.28,1207.25 1717.87,1207.23 1718.45,1206.33 1719.04,1205.36 1719.63,1205.77 1720.21,1208.28 1720.8,1209.82 1721.39,1209.82 1721.97,1209.94 1722.56,1210.93 1723.15,1212.08 1723.73,1211.82 1724.32,1212.95 1724.91,1212.82 1725.49,1211.46 1726.08,1211.59 1726.66,1212.61 1727.25,1214.86 1727.84,1214.5 1728.42,1214.36 1729.01,1215.16 1729.6,1213.97 1730.18,1213.54 1730.77,1213.15 1731.36,1212.74 1731.94,1211.23 1732.53,1211.38 1733.11,1213.71 1733.7,1212.2 1734.29,1214.76 1734.87,1215.55 1735.46,1215.52 1736.05,1213.07 1736.63,1211.53 1737.22,1210.42 1737.81,1209.17 1738.39,1211.93 1738.98,1213.13 1739.57,1212.08 1740.15,1214.6 1740.74,1213.25 1741.32,1213.17 1741.91,1215.45 1742.5,1217.74 1743.08,1220.13 1743.67,1220.9 1744.26,1219.08 1744.84,1217.42 1745.43,1216.94 1746.02,1212.79 1746.6,1208.89 1747.19,1210.39 1747.78,1210.49 1748.36,1210.57 1748.95,1210.51 1749.53,1208.15 1750.12,1209.48 1750.71,1211.91 1751.29,1211.87 1751.88,1211.98 1752.47,1215.75 1753.05,1215.39 1753.64,1217.45 1754.23,1217.18 1754.81,1215.66 1755.4,1214.24 1755.99,1215.33 1756.57,1215.18 1757.16,1212.62 1757.74,1213.7 1758.33,1216.22 1758.92,1216.01 1759.5,1213.07 1760.09,1210.53 1760.68,1210.7 1761.26,1211.76 1761.85,1212.72 1762.44,1211.07 1763.02,1209.93 1763.61,1206.21 1764.19,1206.32 1764.78,1207.82 1765.37,1209.1 1765.95,1207.94 1766.54,1206.86 1767.13,1208.41 1767.71,1208.37 1768.3,1204.91 1768.89,1206.57 1769.47,1207.66 1770.06,1209.19 1770.65,1210.22 1771.23,1211.56 1771.82,1213.89 1772.4,1215.04 1772.99,1214.87 1773.58,1214.66 1774.16,1213.33 1774.75,1216.85 1775.34,1216.45 1775.92,1216.16 1776.51,1215.93 1777.1,1214.36 1777.68,1211.61 1778.27,1212.86 1778.86,1214.06 1779.44,1212.97 1780.03,1214.15 1780.61,1210.14 1781.2,1210.13 1781.79,1210.13 1782.37,1206.54 1782.96,1205.43 1783.55,1201.85 1784.13,1201.13 1784.72,1201.58 1785.31,1200.7 1785.89,1201.44 1786.48,1203.23 1787.06,1202.38 1787.65,1201.58 1788.24,1203.36 1788.82,1205.1 1789.41,1204.15 1790,1204.55 1790.58,1204.94 1791.17,1202.7 1791.76,1201.88 1792.34,1203.6 1792.93,1205.1 1793.52,1205.24 1794.1,1205.33 1794.69,1206.88 1795.27,1208.19 1795.86,1208.34 1796.45,1209.69 1797.03,1210.92 1797.62,1212.1 1798.21,1213.51 1798.79,1213.28 1799.38,1215.36 1799.97,1215.08 1800.55,1216.2 1801.14,1216.2 1801.73,1217.32 1802.31,1217.92 1802.9,1217.2 1803.48,1219.24 1804.07,1218.63 1804.66,1218.26 1805.24,1217.9 1805.83,1218.55 1806.42,1218.14 1807,1221.35 1807.59,1219.78 1808.18,1219.15 1808.76,1217.55 1809.35,1216.2 1809.94,1215.98 1810.52,1216.66 1811.11,1215.09 1811.69,1214.8 1812.28,1213.48 1812.87,1212.85 1813.45,1214 1814.04,1215.01 1814.63,1213.63 1815.21,1212.09 1815.8,1212.1 1816.39,1207.02 1816.97,1207.29 1817.56,1211.22 1818.14,1213.82 1818.73,1214.82 1819.32,1215.95 1819.9,1215.69 1820.49,1216.63 1821.08,1216.32 1821.66,1212.36 1822.25,1214.62 1822.84,1216.82 1823.42,1216.58 1824.01,1216.3 1824.6,1215.81 1825.18,1214.2 1825.77,1215.4 1826.35,1215.05 1826.94,1214.73 1827.53,1214.68 1828.11,1215.59 1828.7,1216.68 1829.29,1215.03 1829.87,1213.23 1830.46,1210.67 1831.05,1209.19 1831.63,1207.8 1832.22,1208.02 1832.81,1212.02 1833.39,1213.33 1833.98,1213.17 1834.56,1213.06 1835.15,1212.9 1835.74,1211.81 1836.32,1212.06 1836.91,1210.71 1837.5,1210.95 1838.08,1209.69 1838.67,1207.23 1839.26,1206.11 1839.84,1207.52 1840.43,1208.87 1841.01,1209.04 1841.6,1210.3 1842.19,1210.5 1842.77,1207.94 1843.36,1208.02 1843.95,1208.1 1844.53,1206.81 1845.12,1206.03 1845.71,1207.53 1846.29,1207.62 1846.88,1207.93 1847.47,1210.56 1848.05,1214.44 1848.64,1214.09 1849.22,1213.78 1849.81,1214.61 1850.4,1214.34 1850.98,1214.11 1851.57,1211.72 1852.16,1211.93 1852.74,1211.81 1853.33,1210.82 1853.92,1211.05 1854.5,1210.99 1855.09,1210.01 1855.68,1210.95 1856.26,1209.73 1856.85,1207.32 1857.43,1208.57 1858.02,1208.45 1858.61,1207.58 1859.19,1206.68 1859.78,1206.76 1860.37,1206.83 1860.95,1204.81 1861.54,1205.02 1862.13,1206.8 1862.71,1207.93 1863.3,1207.06 1863.88,1205.23 1864.47,1205.62 1865.06,1202.17 1865.64,1201.6 1866.23,1201.95 1866.82,1203.75 1867.4,1203.19 1867.99,1203.78 1868.58,1204.31 1869.16,1206.88 1869.75,1207.07 1870.34,1206.01 1870.92,1203.76 1871.51,1202.93 1872.09,1201.07 1872.68,1201.79 1873.27,1201.12 1873.85,1203.84 1874.44,1204.01 1875.03,1204.06 1875.61,1208.17 1876.2,1209.45 1876.79,1207.97 1877.37,1209.34 1877.96,1210.43 1878.55,1210.33 1879.13,1208.98 1879.72,1211.35 1880.3,1211.47 1880.89,1208.98 1881.48,1207.58 1882.06,1207.82 1882.65,1209.21 1883.24,1207.97 1883.82,1207 1884.41,1207.06 1885,1207.1 1885.58,1206.01 1886.17,1207.64 1886.76,1207.66 1887.34,1208.08 1887.93,1208.02 1888.51,1208.24 1889.1,1208.2 1889.69,1210.96 1890.27,1212.26 1890.86,1213.58 1891.45,1215.03 1892.03,1213.8 1892.62,1211.08 1893.21,1213.28 1893.79,1215.52 1894.38,1212.65 1894.96,1213.07 1895.55,1210.52 1896.14,1209.34 1896.72,1209.22 1897.31,1209.3 1897.9,1209.2 1898.48,1209.23 1899.07,1210.22 1899.66,1210.24 1900.24,1209.03 1900.83,1210.37 1901.42,1210.36 1902,1210.31 1902.59,1209.14 1903.17,1209.31 1903.76,1209.32 1904.35,1208.45 1904.93,1211.16 1905.52,1208.7 1906.11,1208.94 1906.69,1210.2 1907.28,1207.9 1907.87,1210.44 1908.45,1208.2 1909.04,1207.18 1909.63,1208.46 1910.21,1206.03 1910.8,1206.1 1911.38,1208.68 1911.97,1206.31 1912.56,1207.82 1913.14,1209.37 1913.73,1210.72 1914.32,1212.04 1914.9,1210.75 1915.49,1207.17 1916.08,1210.87 1916.66,1210.7 1917.25,1211.92 1917.83,1213.03 1918.42,1214.03 1919.01,1212.7 1919.59,1212.5 1920.18,1214.85 1920.77,1213.52 1921.35,1213.3 1921.94,1213.26 1922.53,1213.06 1923.11,1212.96 1923.7,1214.11 1924.29,1214.02 1924.87,1213.82 1925.46,1212.54 1926.04,1210.02 1926.63,1208.81 1927.22,1211.43 1927.8,1213.9 1928.39,1212.36 1928.98,1212 1929.56,1211.85 1930.15,1212.83 1930.74,1211.39 1931.32,1212.5 1931.91,1214.89 1932.5,1210.71 1933.08,1210.86 1933.67,1211.97 1934.25,1213.09 1934.84,1211.75 1935.43,1209.25 1936.01,1206.65 1936.6,1206.83 1937.19,1207.15 1937.77,1207.32 1938.36,1207.49 1938.95,1206.43 1939.53,1207.73 1940.12,1210.3 1940.71,1209.01 1941.29,1207.76 1941.88,1204.21 1942.46,1204.53 1943.05,1207.15 1943.64,1207.24 1944.22,1206.37 1944.81,1206.42 1945.4,1207.77 1945.98,1208.8 1946.57,1208.95 1947.16,1207.87 1947.74,1209.01 1948.33,1210.48 1948.91,1210.53 1949.5,1209.16 1950.09,1208.08 1950.67,1208.45 1951.26,1207.66 1951.85,1208.96 1952.43,1211.24 1953.02,1212.26 1953.61,1213.53 1954.19,1214.65 1954.78,1215.86 1955.37,1215.37 1955.95,1216.28 1956.54,1219.64 1957.12,1216.78 1957.71,1216.68 1958.3,1216.45 1958.88,1215.18 1959.47,1216.02 1960.06,1215.59 1960.64,1215.12 1961.23,1216.35 1961.82,1216.02 1962.4,1215.72 1962.99,1215.48 1963.58,1218.87 1964.16,1215.9 1964.75,1214.35 1965.33,1214.3 1965.92,1213.99 1966.51,1212.37 1967.09,1214.64 1967.68,1213.38 1968.27,1213.04 1968.85,1212.74 1969.44,1214.93 1970.03,1215.02 1970.61,1213.53 1971.2,1211 1971.78,1211.19 1972.37,1211.07 1972.96,1212.24 1973.54,1212.05 1974.13,1211 1974.72,1209.73 1975.3,1212.49 1975.89,1212.39 1976.48,1212.32 1977.06,1212.25 1977.65,1212.16 1978.24,1210.45 1978.82,1207.87 1979.41,1208.06 1979.99,1209.44 1980.58,1209.52 1981.17,1213.25 1981.75,1213.01 1982.34,1212.68 1982.93,1212.45 1983.51,1208.62 1984.1,1208.84 1984.69,1210.26 1985.27,1210.12 1985.86,1209.03 1986.45,1209.95 1987.03,1211.28 1987.62,1211.96 1988.2,1213.21 1988.79,1211.66 1989.38,1211.4 1989.96,1211.47 1990.55,1211.35 1991.14,1211.31 1991.72,1210.43 1992.31,1211.61 1992.9,1207.81 1993.48,1205.64 1994.07,1203.36 1994.65,1203.99 1995.24,1205.56 1995.83,1206 1996.41,1204.93 1997,1205.29 1997.59,1205.73 1998.17,1208.34 1998.76,1208.48 1999.35,1208.73 1999.93,1209 2000.52,1207.9 2001.11,1210.59 2001.69,1206.71 2002.28,1208.14 2002.86,1208.14 2003.45,1207.24 2004.04,1208.7 2004.62,1211.42 2005.21,1212.98 2005.8,1213.02 2006.38,1211.73 2006.97,1212.97 2007.56,1213.99 2008.14,1212.61 2008.73,1213.69 2009.32,1209.82 2009.9,1209.8 2010.49,1209.88 2011.07,1211.11 2011.66,1208.41 2012.25,1208.61 2012.83,1211.15 2013.42,1213.41 2014.01,1213.5 2014.59,1214.62 2015.18,1214.47 2015.77,1214.39 2016.35,1213.2 2016.94,1213.07 2017.53,1214.45 2018.11,1215.57 2018.7,1216.61 2019.28,1215.19 2019.87,1217.57 2020.46,1217.22 2021.04,1213.21 2021.63,1211.65 2022.22,1210.51 2022.8,1212.99 2023.39,1214.26 2023.98,1213.93 2024.56,1213.85 2025.15,1213.57 2025.73,1215.9 2026.32,1217.77 2026.91,1216.03 2027.49,1212.94 2028.08,1212.83 2028.67,1215.01 2029.25,1216.04 2029.84,1215.73 2030.43,1216.63 2031.01,1214.77 2031.6,1213.25 2032.19,1212.99 2032.77,1211.57 2033.36,1208 2033.94,1206.92 2034.53,1206.91 2035.12,1208.28 2035.7,1204.69 2036.29,1206.16 2036.88,1207.35 2037.46,1208.46 2038.05,1207.15 2038.64,1207.24 2039.22,1207.37 2039.81,1208.89 2040.4,1210.48 2040.98,1210.91 2041.57,1211 2042.15,1209.76 2042.74,1209.8 2043.33,1207.17 2043.91,1207.4 2044.5,1207.33 2045.09,1203.82 2045.67,1204.15 2046.26,1203.36 2046.85,1205.11 2047.43,1204.06 2048.02,1205.5 2048.6,1205.86 2049.19,1207.25 2049.78,1207.37 2050.36,1208.72 2050.95,1213.75 2051.54,1212.44 2052.12,1213.57 2052.71,1213.4 2053.3,1212.31 2053.88,1213.48 2054.47,1214.44 2055.06,1215.3 2055.64,1215.17 2056.23,1212.58 2056.81,1211.66 2057.4,1207.99 2057.99,1208.12 2058.57,1210.86 2059.16,1211 2059.75,1210.89 2060.33,1209.41 2060.92,1212.03 2061.51,1212.02 2062.09,1211.94 2062.68,1213.09 2063.27,1212.99 2063.85,1208.99 2064.44,1209.29 2065.02,1211.84 2065.61,1210.2 2066.2,1212.76 2066.78,1212.75 2067.37,1209.87 2067.96,1209.9 2068.54,1206.22 2069.13,1207.89 2069.72,1208.06 2070.3,1208.33 2070.89,1208.39 2071.48,1209.92 2072.06,1212.58 2072.65,1212.42 2073.23,1209.72 2073.82,1210.95 2074.41,1211.15 2074.99,1212.43 2075.58,1213.59 2076.17,1212.41 2076.75,1211.11 2077.34,1214.84 2077.93,1214.62 2078.51,1215.8 2079.1,1215.2 2079.68,1216.13 2080.27,1215.84 2080.86,1214.26 2081.44,1215.03 2082.03,1216.35 2082.62,1217.25 2083.2,1213.19 2083.79,1215.51 2084.38,1216.67 2084.96,1214.92 2085.55,1217.19 2086.14,1215.67 2086.72,1214.14 2087.31,1212.8 2087.89,1213 2088.48,1214.09 2089.07,1212.82 2089.65,1212.84 2090.24,1212.81 2090.83,1214.08 2091.41,1213.94 2092,1212.38 2092.59,1214.86 2093.17,1215.79 2093.76,1212.94 2094.35,1210.59 2094.93,1206.94 2095.52,1205.87 2096.1,1210.03 2096.69,1209.79 2097.28,1212.31 2097.86,1211.91 2098.45,1211.84 2099.04,1207.01 2099.62,1207.17 2100.21,1209.79 2100.8,1208.85 2101.38,1208.77 2101.97,1210.06 2102.55,1208.89 2103.14,1204.27 2103.73,1202.1 2104.31,1201.43 2104.9,1203.08 2105.49,1206.02 2106.07,1206.37 2106.66,1205.46 2107.25,1204.58 2107.83,1204.83 2108.42,1206.32 2109.01,1207.84 2109.59,1209.23 2110.18,1206.84 2110.76,1208.54 2111.35,1208.8 2111.94,1208.94 2112.52,1211.74 2113.11,1212.88 2113.7,1212.72 2114.28,1211.55 2114.87,1211.46 2115.46,1212.82 2116.04,1212.55 2116.63,1211.11 2117.22,1209.77 2117.8,1210.81 2118.39,1210.78 2118.97,1209.49 2119.56,1210.76 2120.15,1209.38 2120.73,1208.12 2121.32,1209.44 2121.91,1210.46 2122.49,1211.71 2123.08,1210.55 2123.67,1209.32 2124.25,1208.11 2124.84,1207.13 2125.42,1208.56 2126.01,1207.49 2126.6,1206.35 2127.18,1206.79 2127.77,1205.84 2128.36,1208.64 2128.94,1209.98 2129.53,1208.66 2130.12,1206.25 2130.7,1205.27 2131.29,1206.89 2131.88,1206.87 2132.46,1208.04 2133.05,1211.99 2133.63,1209.73 2134.22,1211.46 2134.81,1212.7 2135.39,1212.75 2135.98,1212.39 2136.57,1210.15 2137.15,1209.06 2137.74,1214.18 2138.33,1216.53 2138.91,1217.43 2139.5,1215.96 2140.09,1214.67 2140.67,1214.3 2141.26,1214.26 2141.84,1214 2142.43,1212.64 2143.02,1208.65 2143.6,1210 2144.19,1210.21 2144.78,1211.87 2145.36,1211.96 2145.95,1209.55 2146.54,1212.01 2147.12,1211.92 2147.71,1211.88 2148.3,1211.81 2148.88,1211.44 2149.47,1211.34 2150.05,1211.24 2150.64,1209.96 2151.23,1211 2151.81,1210.86 2152.4,1213.3 2152.99,1212.94 2153.57,1214.08 2154.16,1213.78 2154.75,1213.49 2155.33,1213.56 2155.92,1215.49 2156.5,1215.2 2157.09,1214.91 2157.68,1215.87 2158.26,1211.77 \"/>\n<path clip-path=\"url(#clip322)\" d=\"M986.025 1211.22 L986.612 1211.22 L987.198 1211.22 L987.785 1211.22 L988.371 1211.22 L988.957 1211.22 L989.544 1211.22 L990.13 1211.22 L990.717 1211.22 L991.303 1211.22 L991.889 1211.22 L992.476 1211.22 L993.062 1211.22 L993.649 1211.22 L994.235 1211.22 L994.822 1211.22 L995.408 1211.22 L995.994 1211.22 L996.581 1211.22 L997.167 1211.22 L997.754 1211.22 L998.34 1211.22 L998.926 1211.22 L999.513 1211.22 L1000.1 1211.22 L1000.69 1211.22 L1001.27 1211.22 L1001.86 1211.22 L1002.44 1211.22 L1003.03 1211.22 L1003.62 1211.22 L1004.2 1211.22 L1004.79 1211.22 L1005.38 1211.22 L1005.96 1211.22 L1006.55 1211.22 L1007.14 1211.22 L1007.72 1211.22 L1008.31 1211.22 L1008.9 1211.22 L1009.48 1211.22 L1010.07 1211.22 L1010.65 1211.22 L1011.24 1211.22 L1011.83 1211.22 L1012.41 1211.22 L1013 1211.22 L1013.59 1211.22 L1014.17 1211.22 L1014.76 1211.22 L1015.35 1211.22 L1015.93 1211.22 L1016.52 1211.22 L1017.11 1211.22 L1017.69 1211.22 L1018.28 1211.22 L1018.86 1211.22 L1019.45 1211.22 L1020.04 1211.22 L1020.62 1211.22 L1021.21 1211.22 L1021.8 1211.22 L1022.38 1211.22 L1022.97 1211.22 L1023.56 1211.22 L1024.14 1211.22 L1024.73 1211.22 L1025.32 1211.22 L1025.9 1211.22 L1026.49 1211.22 L1027.07 1211.22 L1027.66 1211.22 L1028.25 1211.22 L1028.83 1211.22 L1029.42 1211.22 L1030.01 1211.22 L1030.59 1211.22 L1031.18 1211.22 L1031.77 1211.22 L1032.35 1211.22 L1032.94 1211.22 L1033.52 1211.22 L1034.11 1211.22 L1034.7 1211.22 L1035.28 1211.22 L1035.87 1211.22 L1036.46 1211.22 L1037.04 1211.22 L1037.63 1211.22 L1038.22 1211.22 L1038.8 1211.22 L1039.39 1211.22 L1039.98 1211.22 L1040.56 1211.22 L1041.15 1211.22 L1041.73 1211.22 L1042.32 1211.22 L1042.91 1211.22 L1043.49 1211.22 L1044.08 1211.22 L1044.67 1211.22 L1045.25 1211.22 L1045.84 1211.22 L1046.43 1211.22 L1047.01 1211.22 L1047.6 1211.22 L1048.19 1211.22 L1048.77 1211.22 L1049.36 1211.22 L1049.94 1211.22 L1050.53 1211.22 L1051.12 1211.22 L1051.7 1211.22 L1052.29 1211.22 L1052.88 1211.22 L1053.46 1211.22 L1054.05 1211.22 L1054.64 1211.22 L1055.22 1211.22 L1055.81 1211.22 L1056.39 1211.22 L1056.98 1211.22 L1057.57 1211.22 L1058.15 1211.22 L1058.74 1211.22 L1059.33 1211.22 L1059.91 1211.22 L1060.5 1211.22 L1061.09 1211.22 L1061.67 1211.22 L1062.26 1211.22 L1062.85 1211.22 L1063.43 1211.22 L1064.02 1211.22 L1064.6 1211.22 L1065.19 1211.22 L1065.78 1211.22 L1066.36 1211.22 L1066.95 1211.22 L1067.54 1211.22 L1068.12 1211.22 L1068.71 1211.22 L1069.3 1211.22 L1069.88 1211.22 L1070.47 1211.22 L1071.06 1211.22 L1071.64 1211.22 L1072.23 1211.22 L1072.81 1211.22 L1073.4 1211.22 L1073.99 1211.22 L1074.57 1211.22 L1075.16 1211.22 L1075.75 1211.22 L1076.33 1211.22 L1076.92 1211.22 L1077.51 1211.22 L1078.09 1211.22 L1078.68 1211.22 L1079.26 1211.22 L1079.85 1211.22 L1080.44 1211.22 L1081.02 1211.22 L1081.61 1211.22 L1082.2 1211.22 L1082.78 1211.22 L1083.37 1211.22 L1083.96 1211.22 L1084.54 1211.22 L1085.13 1211.22 L1085.72 1211.22 L1086.3 1211.22 L1086.89 1211.22 L1087.47 1211.22 L1088.06 1211.22 L1088.65 1211.22 L1089.23 1211.22 L1089.82 1211.22 L1090.41 1211.22 L1090.99 1211.22 L1091.58 1211.22 L1092.17 1211.22 L1092.75 1211.22 L1093.34 1211.22 L1093.93 1211.22 L1094.51 1211.22 L1095.1 1211.22 L1095.68 1211.22 L1096.27 1211.22 L1096.86 1211.22 L1097.44 1211.22 L1098.03 1211.22 L1098.62 1211.22 L1099.2 1211.22 L1099.79 1211.22 L1100.38 1211.22 L1100.96 1211.22 L1101.55 1211.22 L1102.14 1211.22 L1102.72 1211.22 L1103.31 1211.22 L1103.89 1211.22 L1104.48 1211.22 L1105.07 1211.22 L1105.65 1211.22 L1106.24 1211.22 L1106.83 1211.22 L1107.41 1211.22 L1108 1211.22 L1108.59 1211.22 L1109.17 1211.22 L1109.76 1211.22 L1110.34 1211.22 L1110.93 1211.22 L1111.52 1211.22 L1112.1 1211.22 L1112.69 1211.22 L1113.28 1211.22 L1113.86 1211.22 L1114.45 1211.22 L1115.04 1211.22 L1115.62 1211.22 L1116.21 1211.22 L1116.8 1211.22 L1117.38 1211.22 L1117.97 1211.22 L1118.55 1211.22 L1119.14 1211.22 L1119.73 1211.22 L1120.31 1211.22 L1120.9 1211.22 L1121.49 1211.22 L1122.07 1211.22 L1122.66 1211.22 L1123.25 1211.22 L1123.83 1211.22 L1124.42 1211.22 L1125.01 1211.22 L1125.59 1211.22 L1126.18 1211.22 L1126.76 1211.22 L1127.35 1211.22 L1127.94 1211.22 L1128.52 1211.22 L1129.11 1211.22 L1129.7 1211.22 L1130.28 1211.22 L1130.87 1211.22 L1131.46 1211.22 L1132.04 1211.22 L1132.63 1211.22 L1133.21 1211.22 L1133.8 1211.22 L1134.39 1211.22 L1134.97 1211.22 L1135.56 1211.22 L1136.15 1211.22 L1136.73 1211.22 L1137.32 1211.22 L1137.91 1211.22 L1138.49 1211.22 L1139.08 1211.22 L1139.67 1211.22 L1140.25 1211.22 L1140.84 1211.22 L1141.42 1211.22 L1142.01 1211.22 L1142.6 1211.22 L1143.18 1211.22 L1143.77 1211.22 L1144.36 1211.22 L1144.94 1211.22 L1145.53 1211.22 L1146.12 1211.22 L1146.7 1211.22 L1147.29 1211.22 L1147.88 1211.22 L1148.46 1211.22 L1149.05 1211.22 L1149.63 1211.22 L1150.22 1211.22 L1150.81 1211.22 L1151.39 1211.22 L1151.98 1211.22 L1152.57 1211.22 L1153.15 1211.22 L1153.74 1211.22 L1154.33 1211.22 L1154.91 1211.22 L1155.5 1211.22 L1156.09 1211.22 L1156.67 1211.22 L1157.26 1211.22 L1157.84 1211.22 L1158.43 1211.22 L1159.02 1211.22 L1159.6 1211.22 L1160.19 1211.22 L1160.78 1211.22 L1161.36 1211.22 L1161.95 1211.22 L1162.54 1211.22 L1163.12 1211.22 L1163.71 1211.22 L1164.29 1211.22 L1164.88 1211.22 L1165.47 1211.22 L1166.05 1211.22 L1166.64 1211.22 L1167.23 1211.22 L1167.81 1211.22 L1168.4 1211.22 L1168.99 1211.22 L1169.57 1211.22 L1170.16 1211.22 L1170.75 1211.22 L1171.33 1211.22 L1171.92 1211.22 L1172.5 1211.22 L1173.09 1211.22 L1173.68 1211.22 L1174.26 1211.22 L1174.85 1211.22 L1175.44 1211.22 L1176.02 1211.22 L1176.61 1211.22 L1177.2 1211.22 L1177.78 1211.22 L1178.37 1211.22 L1178.96 1211.22 L1179.54 1211.22 L1180.13 1211.22 L1180.71 1211.22 L1181.3 1211.22 L1181.89 1211.22 L1182.47 1211.22 L1183.06 1211.22 L1183.65 1211.22 L1184.23 1211.22 L1184.82 1211.22 L1185.41 1211.22 L1185.99 1211.22 L1186.58 1211.22 L1187.16 1211.22 L1187.75 1211.22 L1188.34 1211.22 L1188.92 1211.22 L1189.51 1211.22 L1190.1 1211.22 L1190.68 1211.22 L1191.27 1211.22 L1191.86 1211.22 L1192.44 1211.22 L1193.03 1211.22 L1193.62 1211.22 L1194.2 1211.22 L1194.79 1211.22 L1195.37 1211.22 L1195.96 1211.22 L1196.55 1211.22 L1197.13 1211.22 L1197.72 1211.22 L1198.31 1211.22 L1198.89 1211.22 L1199.48 1211.22 L1200.07 1211.22 L1200.65 1211.22 L1201.24 1211.22 L1201.83 1211.22 L1202.41 1211.22 L1203 1211.22 L1203.58 1211.22 L1204.17 1211.22 L1204.76 1211.22 L1205.34 1211.22 L1205.93 1211.22 L1206.52 1211.22 L1207.1 1211.22 L1207.69 1211.22 L1208.28 1211.22 L1208.86 1211.22 L1209.45 1211.22 L1210.03 1211.22 L1210.62 1211.22 L1211.21 1211.22 L1211.79 1211.22 L1212.38 1211.22 L1212.97 1211.22 L1213.55 1211.22 L1214.14 1211.22 L1214.73 1211.22 L1215.31 1211.22 L1215.9 1211.22 L1216.49 1211.22 L1217.07 1211.22 L1217.66 1211.22 L1218.24 1211.22 L1218.83 1211.22 L1219.42 1211.22 L1220 1211.22 L1220.59 1211.22 L1221.18 1211.22 L1221.76 1211.22 L1222.35 1211.22 L1222.94 1211.22 L1223.52 1211.22 L1224.11 1211.22 L1224.7 1211.22 L1225.28 1211.22 L1225.87 1211.22 L1226.45 1211.22 L1227.04 1211.22 L1227.63 1211.22 L1228.21 1211.22 L1228.8 1211.22 L1229.39 1211.22 L1229.97 1211.22 L1230.56 1211.22 L1231.15 1211.22 L1231.73 1211.22 L1232.32 1211.22 L1232.91 1211.22 L1233.49 1211.22 L1234.08 1211.22 L1234.66 1211.22 L1235.25 1211.22 L1235.84 1211.22 L1236.42 1211.22 L1237.01 1211.22 L1237.6 1211.22 L1238.18 1211.22 L1238.77 1211.22 L1239.36 1211.22 L1239.94 1211.22 L1240.53 1211.22 L1241.11 1211.22 L1241.7 1211.22 L1242.29 1211.22 L1242.87 1211.22 L1243.46 1211.22 L1244.05 1211.22 L1244.63 1211.22 L1245.22 1211.22 L1245.81 1211.22 L1246.39 1211.22 L1246.98 1211.22 L1247.57 1211.22 L1248.15 1211.22 L1248.74 1211.22 L1249.32 1211.22 L1249.91 1211.22 L1250.5 1211.22 L1251.08 1211.22 L1251.67 1211.22 L1252.26 1211.22 L1252.84 1211.22 L1253.43 1211.22 L1254.02 1211.22 L1254.6 1211.22 L1255.19 1211.22 L1255.78 1211.22 L1256.36 1211.22 L1256.95 1211.22 L1257.53 1211.22 L1258.12 1211.22 L1258.71 1211.22 L1259.29 1211.22 L1259.88 1211.22 L1260.47 1211.22 L1261.05 1211.22 L1261.64 1211.22 L1262.23 1211.22 L1262.81 1211.22 L1263.4 1211.22 L1263.98 1211.22 L1264.57 1211.22 L1265.16 1211.22 L1265.74 1211.22 L1266.33 1211.22 L1266.92 1211.22 L1267.5 1211.22 L1268.09 1211.22 L1268.68 1211.22 L1269.26 1211.22 L1269.85 1211.22 L1270.44 1211.22 L1271.02 1211.22 L1271.61 1211.22 L1272.19 1211.22 L1272.78 1211.22 L1273.37 1211.22 L1273.95 1211.22 L1274.54 1211.22 L1275.13 1211.22 L1275.71 1211.22 L1276.3 1211.22 L1276.89 1211.22 L1277.47 1211.22 L1278.06 1211.22 L1278.65 1211.22 L1279.23 1211.22 L1279.82 1211.22 L1280.4 1211.22 L1280.99 1211.22 L1281.58 1211.22 L1282.16 1211.22 L1282.75 1211.22 L1283.34 1211.22 L1283.92 1211.22 L1284.51 1211.22 L1285.1 1211.22 L1285.68 1211.22 L1286.27 1211.22 L1286.86 1211.22 L1287.44 1211.22 L1288.03 1211.22 L1288.61 1211.22 L1289.2 1211.22 L1289.79 1211.22 L1290.37 1211.22 L1290.96 1211.22 L1291.55 1211.22 L1292.13 1211.22 L1292.72 1211.22 L1293.31 1211.22 L1293.89 1211.22 L1294.48 1211.22 L1295.06 1211.22 L1295.65 1211.22 L1296.24 1211.22 L1296.82 1211.22 L1297.41 1211.22 L1298 1211.22 L1298.58 1211.22 L1299.17 1211.22 L1299.76 1211.22 L1300.34 1211.22 L1300.93 1211.22 L1301.52 1211.22 L1302.1 1211.22 L1302.69 1211.22 L1303.27 1211.22 L1303.86 1211.22 L1304.45 1211.22 L1305.03 1211.22 L1305.62 1211.22 L1306.21 1211.22 L1306.79 1211.22 L1307.38 1211.22 L1307.97 1211.22 L1308.55 1211.22 L1309.14 1211.22 L1309.73 1211.22 L1310.31 1211.22 L1310.9 1211.22 L1311.48 1211.22 L1312.07 1211.22 L1312.66 1211.22 L1313.24 1211.22 L1313.83 1211.22 L1314.42 1211.22 L1315 1211.22 L1315.59 1211.22 L1316.18 1211.22 L1316.76 1211.22 L1317.35 1211.22 L1317.93 1211.22 L1318.52 1211.22 L1319.11 1211.22 L1319.69 1211.22 L1320.28 1211.22 L1320.87 1211.22 L1321.45 1211.22 L1322.04 1211.22 L1322.63 1211.22 L1323.21 1211.22 L1323.8 1211.22 L1324.39 1211.22 L1324.97 1211.22 L1325.56 1211.22 L1326.14 1211.22 L1326.73 1211.22 L1327.32 1211.22 L1327.9 1211.22 L1328.49 1211.22 L1329.08 1211.22 L1329.66 1211.22 L1330.25 1211.22 L1330.84 1211.22 L1331.42 1211.22 L1332.01 1211.22 L1332.6 1211.22 L1333.18 1211.22 L1333.77 1211.22 L1334.35 1211.22 L1334.94 1211.22 L1335.53 1211.22 L1336.11 1211.22 L1336.7 1211.22 L1337.29 1211.22 L1337.87 1211.22 L1338.46 1211.22 L1339.05 1211.22 L1339.63 1211.22 L1340.22 1211.22 L1340.8 1211.22 L1341.39 1211.22 L1341.98 1211.22 L1342.56 1211.22 L1343.15 1211.22 L1343.74 1211.22 L1344.32 1211.22 L1344.91 1211.22 L1345.5 1211.22 L1346.08 1211.22 L1346.67 1211.22 L1347.26 1211.22 L1347.84 1211.22 L1348.43 1211.22 L1349.01 1211.22 L1349.6 1211.22 L1350.19 1211.22 L1350.77 1211.22 L1351.36 1211.22 L1351.95 1211.22 L1352.53 1211.22 L1353.12 1211.22 L1353.71 1211.22 L1354.29 1211.22 L1354.88 1211.22 L1355.47 1211.22 L1356.05 1211.22 L1356.64 1211.22 L1357.22 1211.22 L1357.81 1211.22 L1358.4 1211.22 L1358.98 1211.22 L1359.57 1211.22 L1360.16 1211.22 L1360.74 1211.22 L1361.33 1211.22 L1361.92 1211.22 L1362.5 1211.22 L1363.09 1211.22 L1363.68 1211.22 L1364.26 1211.22 L1364.85 1211.22 L1365.43 1211.22 L1366.02 1211.22 L1366.61 1211.22 L1367.19 1211.22 L1367.78 1211.22 L1368.37 1211.22 L1368.95 1211.22 L1369.54 1211.22 L1370.13 1211.22 L1370.71 1211.22 L1371.3 1211.22 L1371.88 1211.22 L1372.47 1211.22 L1373.06 1211.22 L1373.64 1211.22 L1374.23 1211.22 L1374.82 1211.22 L1375.4 1211.22 L1375.99 1211.22 L1376.58 1211.22 L1377.16 1211.22 L1377.75 1211.22 L1378.34 1211.22 L1378.92 1211.22 L1379.51 1211.22 L1380.09 1211.22 L1380.68 1211.22 L1381.27 1211.22 L1381.85 1211.22 L1382.44 1211.22 L1383.03 1211.22 L1383.61 1211.22 L1384.2 1211.22 L1384.79 1211.22 L1385.37 1211.22 L1385.96 1211.22 L1386.55 1211.22 L1387.13 1211.22 L1387.72 1211.22 L1388.3 1211.22 L1388.89 1211.22 L1389.48 1211.22 L1390.06 1211.22 L1390.65 1211.22 L1391.24 1211.22 L1391.82 1211.22 L1392.41 1211.22 L1393 1211.22 L1393.58 1211.22 L1394.17 1211.22 L1394.75 1211.22 L1395.34 1211.22 L1395.93 1211.22 L1396.51 1211.22 L1397.1 1211.22 L1397.69 1211.22 L1398.27 1211.22 L1398.86 1211.22 L1399.45 1211.22 L1400.03 1211.22 L1400.62 1211.22 L1401.21 1211.22 L1401.79 1211.22 L1402.38 1211.22 L1402.96 1211.22 L1403.55 1211.22 L1404.14 1211.22 L1404.72 1211.22 L1405.31 1211.22 L1405.9 1211.22 L1406.48 1211.22 L1407.07 1211.22 L1407.66 1211.22 L1408.24 1211.22 L1408.83 1211.22 L1409.42 1211.22 L1410 1211.22 L1410.59 1211.22 L1411.17 1211.22 L1411.76 1211.22 L1412.35 1211.22 L1412.93 1211.22 L1413.52 1211.22 L1414.11 1211.22 L1414.69 1211.22 L1415.28 1211.22 L1415.87 1211.22 L1416.45 1211.22 L1417.04 1211.22 L1417.63 1211.22 L1418.21 1211.22 L1418.8 1211.22 L1419.38 1211.22 L1419.97 1211.22 L1420.56 1211.22 L1421.14 1211.22 L1421.73 1211.22 L1422.32 1211.22 L1422.9 1211.22 L1423.49 1211.22 L1424.08 1211.22 L1424.66 1211.22 L1425.25 1211.22 L1425.83 1211.22 L1426.42 1211.22 L1427.01 1211.22 L1427.59 1211.22 L1428.18 1211.22 L1428.77 1211.22 L1429.35 1211.22 L1429.94 1211.22 L1430.53 1211.22 L1431.11 1211.22 L1431.7 1211.22 L1432.29 1211.22 L1432.87 1211.22 L1433.46 1211.22 L1434.04 1211.22 L1434.63 1211.22 L1435.22 1211.22 L1435.8 1211.22 L1436.39 1211.22 L1436.98 1211.22 L1437.56 1211.22 L1438.15 1211.22 L1438.74 1211.22 L1439.32 1211.22 L1439.91 1211.22 L1440.5 1211.22 L1441.08 1211.22 L1441.67 1211.22 L1442.25 1211.22 L1442.84 1211.22 L1443.43 1211.22 L1444.01 1211.22 L1444.6 1211.22 L1445.19 1211.22 L1445.77 1211.22 L1446.36 1211.22 L1446.95 1211.22 L1447.53 1211.22 L1448.12 1211.22 L1448.7 1211.22 L1449.29 1211.22 L1449.88 1211.22 L1450.46 1211.22 L1451.05 1211.22 L1451.64 1211.22 L1452.22 1211.22 L1452.81 1211.22 L1453.4 1211.22 L1453.98 1211.22 L1454.57 1211.22 L1455.16 1211.22 L1455.74 1211.22 L1456.33 1211.22 L1456.91 1211.22 L1457.5 1211.22 L1458.09 1211.22 L1458.67 1211.22 L1459.26 1211.22 L1459.85 1211.22 L1460.43 1211.22 L1461.02 1211.22 L1461.61 1211.22 L1462.19 1211.22 L1462.78 1211.22 L1463.37 1211.22 L1463.95 1211.22 L1464.54 1211.22 L1465.12 1211.22 L1465.71 1211.22 L1466.3 1211.22 L1466.88 1211.22 L1467.47 1211.22 L1468.06 1211.22 L1468.64 1211.22 L1469.23 1211.22 L1469.82 1211.22 L1470.4 1211.22 L1470.99 1211.22 L1471.57 1211.22 L1472.16 1211.22 L1472.75 1211.22 L1473.33 1211.22 L1473.92 1211.22 L1474.51 1211.22 L1475.09 1211.22 L1475.68 1211.22 L1476.27 1211.22 L1476.85 1211.22 L1477.44 1211.22 L1478.03 1211.22 L1478.61 1211.22 L1479.2 1211.22 L1479.78 1211.22 L1480.37 1211.22 L1480.96 1211.22 L1481.54 1211.22 L1482.13 1211.22 L1482.72 1211.22 L1483.3 1211.22 L1483.89 1211.22 L1484.48 1211.22 L1485.06 1211.22 L1485.65 1211.22 L1486.24 1211.22 L1486.82 1211.22 L1487.41 1211.22 L1487.99 1211.22 L1488.58 1211.22 L1489.17 1211.22 L1489.75 1211.22 L1490.34 1211.22 L1490.93 1211.22 L1491.51 1211.22 L1492.1 1211.22 L1492.69 1211.22 L1493.27 1211.22 L1493.86 1211.22 L1494.45 1211.22 L1495.03 1211.22 L1495.62 1211.22 L1496.2 1211.22 L1496.79 1211.22 L1497.38 1211.22 L1497.96 1211.22 L1498.55 1211.22 L1499.14 1211.22 L1499.72 1211.22 L1500.31 1211.22 L1500.9 1211.22 L1501.48 1211.22 L1502.07 1211.22 L1502.65 1211.22 L1503.24 1211.22 L1503.83 1211.22 L1504.41 1211.22 L1505 1211.22 L1505.59 1211.22 L1506.17 1211.22 L1506.76 1211.22 L1507.35 1211.22 L1507.93 1211.22 L1508.52 1211.22 L1509.11 1211.22 L1509.69 1211.22 L1510.28 1211.22 L1510.86 1211.22 L1511.45 1211.22 L1512.04 1211.22 L1512.62 1211.22 L1513.21 1211.22 L1513.8 1211.22 L1514.38 1211.22 L1514.97 1211.22 L1515.56 1211.22 L1516.14 1211.22 L1516.73 1211.22 L1517.32 1211.22 L1517.9 1211.22 L1518.49 1211.22 L1519.07 1211.22 L1519.66 1211.22 L1520.25 1211.22 L1520.83 1211.22 L1521.42 1211.22 L1522.01 1211.22 L1522.59 1211.22 L1523.18 1211.22 L1523.77 1211.22 L1524.35 1211.22 L1524.94 1211.22 L1525.52 1211.22 L1526.11 1211.22 L1526.7 1211.22 L1527.28 1211.22 L1527.87 1211.22 L1528.46 1211.22 L1529.04 1211.22 L1529.63 1211.22 L1530.22 1211.22 L1530.8 1211.22 L1531.39 1211.22 L1531.98 1211.22 L1532.56 1211.22 L1533.15 1211.22 L1533.73 1211.22 L1534.32 1211.22 L1534.91 1211.22 L1535.49 1211.22 L1536.08 1211.22 L1536.67 1211.22 L1537.25 1211.22 L1537.84 1211.22 L1538.43 1211.22 L1539.01 1211.22 L1539.6 1211.22 L1540.19 1211.22 L1540.77 1211.22 L1541.36 1211.22 L1541.94 1211.22 L1542.53 1211.22 L1543.12 1211.22 L1543.7 1211.22 L1544.29 1211.22 L1544.88 1211.22 L1545.46 1211.22 L1546.05 1211.22 L1546.64 1211.22 L1547.22 1211.22 L1547.81 1211.22 L1548.4 1211.22 L1548.98 1211.22 L1549.57 1211.22 L1550.15 1211.22 L1550.74 1211.22 L1551.33 1211.22 L1551.91 1211.22 L1552.5 1211.22 L1553.09 1211.22 L1553.67 1211.22 L1554.26 1211.22 L1554.85 1211.22 L1555.43 1211.22 L1556.02 1211.22 L1556.6 1211.22 L1557.19 1211.22 L1557.78 1211.22 L1558.36 1211.22 L1558.95 1211.22 L1559.54 1211.22 L1560.12 1211.22 L1560.71 1211.22 L1561.3 1211.22 L1561.88 1211.22 L1562.47 1211.22 L1563.06 1211.22 L1563.64 1211.22 L1564.23 1211.22 L1564.81 1211.22 L1565.4 1211.22 L1565.99 1211.22 L1566.57 1211.22 L1567.16 1211.22 L1567.75 1211.22 L1568.33 1211.22 L1568.92 1211.22 L1569.51 1211.22 L1570.09 1211.22 L1570.68 1211.22 L1571.27 1211.22 L1571.85 1211.22 L1572.44 1211.22 L1573.02 1211.22 L1573.61 1211.22 L1574.2 1211.22 L1574.78 1211.22 L1575.37 1211.22 L1575.96 1211.22 L1576.54 1211.22 L1577.13 1211.22 L1577.72 1211.22 L1578.3 1211.22 L1578.89 1211.22 L1579.47 1211.22 L1580.06 1211.22 L1580.65 1211.22 L1581.23 1211.22 L1581.82 1211.22 L1582.41 1211.22 L1582.99 1211.22 L1583.58 1211.22 L1584.17 1211.22 L1584.75 1211.22 L1585.34 1211.22 L1585.93 1211.22 L1586.51 1211.22 L1587.1 1211.22 L1587.68 1211.22 L1588.27 1211.22 L1588.86 1211.22 L1589.44 1211.22 L1590.03 1211.22 L1590.62 1211.22 L1591.2 1211.22 L1591.79 1211.22 L1592.38 1211.22 L1592.96 1211.22 L1593.55 1211.22 L1594.14 1211.22 L1594.72 1211.22 L1595.31 1211.22 L1595.89 1211.22 L1596.48 1211.22 L1597.07 1211.22 L1597.65 1211.22 L1598.24 1211.22 L1598.83 1211.22 L1599.41 1211.22 L1600 1211.22 L1600.59 1211.22 L1601.17 1211.22 L1601.76 1211.22 L1602.34 1211.22 L1602.93 1211.22 L1603.52 1211.22 L1604.1 1211.22 L1604.69 1211.22 L1605.28 1211.22 L1605.86 1211.22 L1606.45 1211.22 L1607.04 1211.22 L1607.62 1211.22 L1608.21 1211.22 L1608.8 1211.22 L1609.38 1211.22 L1609.97 1211.22 L1610.55 1211.22 L1611.14 1211.22 L1611.73 1211.22 L1612.31 1211.22 L1612.9 1211.22 L1613.49 1211.22 L1614.07 1211.22 L1614.66 1211.22 L1615.25 1211.22 L1615.83 1211.22 L1616.42 1211.22 L1617.01 1211.22 L1617.59 1211.22 L1618.18 1211.22 L1618.76 1211.22 L1619.35 1211.22 L1619.94 1211.22 L1620.52 1211.22 L1621.11 1211.22 L1621.7 1211.22 L1622.28 1211.22 L1622.87 1211.22 L1623.46 1211.22 L1624.04 1211.22 L1624.63 1211.22 L1625.22 1211.22 L1625.8 1211.22 L1626.39 1211.22 L1626.97 1211.22 L1627.56 1211.22 L1628.15 1211.22 L1628.73 1211.22 L1629.32 1211.22 L1629.91 1211.22 L1630.49 1211.22 L1631.08 1211.22 L1631.67 1211.22 L1632.25 1211.22 L1632.84 1211.22 L1633.42 1211.22 L1634.01 1211.22 L1634.6 1211.22 L1635.18 1211.22 L1635.77 1211.22 L1636.36 1211.22 L1636.94 1211.22 L1637.53 1211.22 L1638.12 1211.22 L1638.7 1211.22 L1639.29 1211.22 L1639.88 1211.22 L1640.46 1211.22 L1641.05 1211.22 L1641.63 1211.22 L1642.22 1211.22 L1642.81 1211.22 L1643.39 1211.22 L1643.98 1211.22 L1644.57 1211.22 L1645.15 1211.22 L1645.74 1211.22 L1646.33 1211.22 L1646.91 1211.22 L1647.5 1211.22 L1648.09 1211.22 L1648.67 1211.22 L1649.26 1211.22 L1649.84 1211.22 L1650.43 1211.22 L1651.02 1211.22 L1651.6 1211.22 L1652.19 1211.22 L1652.78 1211.22 L1653.36 1211.22 L1653.95 1211.22 L1654.54 1211.22 L1655.12 1211.22 L1655.71 1211.22 L1656.29 1211.22 L1656.88 1211.22 L1657.47 1211.22 L1658.05 1211.22 L1658.64 1211.22 L1659.23 1211.22 L1659.81 1211.22 L1660.4 1211.22 L1660.99 1211.22 L1661.57 1211.22 L1662.16 1211.22 L1662.75 1211.22 L1663.33 1211.22 L1663.92 1211.22 L1664.5 1211.22 L1665.09 1211.22 L1665.68 1211.22 L1666.26 1211.22 L1666.85 1211.22 L1667.44 1211.22 L1668.02 1211.22 L1668.61 1211.22 L1669.2 1211.22 L1669.78 1211.22 L1670.37 1211.22 L1670.96 1211.22 L1671.54 1211.22 L1672.13 1211.22 L1672.71 1211.22 L1673.3 1211.22 L1673.89 1211.22 L1674.47 1211.22 L1675.06 1211.22 L1675.65 1211.22 L1676.23 1211.22 L1676.82 1211.22 L1677.41 1211.22 L1677.99 1211.22 L1678.58 1211.22 L1679.17 1211.22 L1679.75 1211.22 L1680.34 1211.22 L1680.92 1211.22 L1681.51 1211.22 L1682.1 1211.22 L1682.68 1211.22 L1683.27 1211.22 L1683.86 1211.22 L1684.44 1211.22 L1685.03 1211.22 L1685.62 1211.22 L1686.2 1211.22 L1686.79 1211.22 L1687.37 1211.22 L1687.96 1211.22 L1688.55 1211.22 L1689.13 1211.22 L1689.72 1211.22 L1690.31 1211.22 L1690.89 1211.22 L1691.48 1211.22 L1692.07 1211.22 L1692.65 1211.22 L1693.24 1211.22 L1693.83 1211.22 L1694.41 1211.22 L1695 1211.22 L1695.58 1211.22 L1696.17 1211.22 L1696.76 1211.22 L1697.34 1211.22 L1697.93 1211.22 L1698.52 1211.22 L1699.1 1211.22 L1699.69 1211.22 L1700.28 1211.22 L1700.86 1211.22 L1701.45 1211.22 L1702.04 1211.22 L1702.62 1211.22 L1703.21 1211.22 L1703.79 1211.22 L1704.38 1211.22 L1704.97 1211.22 L1705.55 1211.22 L1706.14 1211.22 L1706.73 1211.22 L1707.31 1211.22 L1707.9 1211.22 L1708.49 1211.22 L1709.07 1211.22 L1709.66 1211.22 L1710.24 1211.22 L1710.83 1211.22 L1711.42 1211.22 L1712 1211.22 L1712.59 1211.22 L1713.18 1211.22 L1713.76 1211.22 L1714.35 1211.22 L1714.94 1211.22 L1715.52 1211.22 L1716.11 1211.22 L1716.7 1211.22 L1717.28 1211.22 L1717.87 1211.22 L1718.45 1211.22 L1719.04 1211.22 L1719.63 1211.22 L1720.21 1211.22 L1720.8 1211.22 L1721.39 1211.22 L1721.97 1211.22 L1722.56 1211.22 L1723.15 1211.22 L1723.73 1211.22 L1724.32 1211.22 L1724.91 1211.22 L1725.49 1211.22 L1726.08 1211.22 L1726.66 1211.22 L1727.25 1211.22 L1727.84 1211.22 L1728.42 1211.22 L1729.01 1211.22 L1729.6 1211.22 L1730.18 1211.22 L1730.77 1211.22 L1731.36 1211.22 L1731.94 1211.22 L1732.53 1211.22 L1733.11 1211.22 L1733.7 1211.22 L1734.29 1211.22 L1734.87 1211.22 L1735.46 1211.22 L1736.05 1211.22 L1736.63 1211.22 L1737.22 1211.22 L1737.81 1211.22 L1738.39 1211.22 L1738.98 1211.22 L1739.57 1211.22 L1740.15 1211.22 L1740.74 1211.22 L1741.32 1211.22 L1741.91 1211.22 L1742.5 1211.22 L1743.08 1211.22 L1743.67 1211.22 L1744.26 1211.22 L1744.84 1211.22 L1745.43 1211.22 L1746.02 1211.22 L1746.6 1211.22 L1747.19 1211.22 L1747.78 1211.22 L1748.36 1211.22 L1748.95 1211.22 L1749.53 1211.22 L1750.12 1211.22 L1750.71 1211.22 L1751.29 1211.22 L1751.88 1211.22 L1752.47 1211.22 L1753.05 1211.22 L1753.64 1211.22 L1754.23 1211.22 L1754.81 1211.22 L1755.4 1211.22 L1755.99 1211.22 L1756.57 1211.22 L1757.16 1211.22 L1757.74 1211.22 L1758.33 1211.22 L1758.92 1211.22 L1759.5 1211.22 L1760.09 1211.22 L1760.68 1211.22 L1761.26 1211.22 L1761.85 1211.22 L1762.44 1211.22 L1763.02 1211.22 L1763.61 1211.22 L1764.19 1211.22 L1764.78 1211.22 L1765.37 1211.22 L1765.95 1211.22 L1766.54 1211.22 L1767.13 1211.22 L1767.71 1211.22 L1768.3 1211.22 L1768.89 1211.22 L1769.47 1211.22 L1770.06 1211.22 L1770.65 1211.22 L1771.23 1211.22 L1771.82 1211.22 L1772.4 1211.22 L1772.99 1211.22 L1773.58 1211.22 L1774.16 1211.22 L1774.75 1211.22 L1775.34 1211.22 L1775.92 1211.22 L1776.51 1211.22 L1777.1 1211.22 L1777.68 1211.22 L1778.27 1211.22 L1778.86 1211.22 L1779.44 1211.22 L1780.03 1211.22 L1780.61 1211.22 L1781.2 1211.22 L1781.79 1211.22 L1782.37 1211.22 L1782.96 1211.22 L1783.55 1211.22 L1784.13 1211.22 L1784.72 1211.22 L1785.31 1211.22 L1785.89 1211.22 L1786.48 1211.22 L1787.06 1211.22 L1787.65 1211.22 L1788.24 1211.22 L1788.82 1211.22 L1789.41 1211.22 L1790 1211.22 L1790.58 1211.22 L1791.17 1211.22 L1791.76 1211.22 L1792.34 1211.22 L1792.93 1211.22 L1793.52 1211.22 L1794.1 1211.22 L1794.69 1211.22 L1795.27 1211.22 L1795.86 1211.22 L1796.45 1211.22 L1797.03 1211.22 L1797.62 1211.22 L1798.21 1211.22 L1798.79 1211.22 L1799.38 1211.22 L1799.97 1211.22 L1800.55 1211.22 L1801.14 1211.22 L1801.73 1211.22 L1802.31 1211.22 L1802.9 1211.22 L1803.48 1211.22 L1804.07 1211.22 L1804.66 1211.22 L1805.24 1211.22 L1805.83 1211.22 L1806.42 1211.22 L1807 1211.22 L1807.59 1211.22 L1808.18 1211.22 L1808.76 1211.22 L1809.35 1211.22 L1809.94 1211.22 L1810.52 1211.22 L1811.11 1211.22 L1811.69 1211.22 L1812.28 1211.22 L1812.87 1211.22 L1813.45 1211.22 L1814.04 1211.22 L1814.63 1211.22 L1815.21 1211.22 L1815.8 1211.22 L1816.39 1211.22 L1816.97 1211.22 L1817.56 1211.22 L1818.14 1211.22 L1818.73 1211.22 L1819.32 1211.22 L1819.9 1211.22 L1820.49 1211.22 L1821.08 1211.22 L1821.66 1211.22 L1822.25 1211.22 L1822.84 1211.22 L1823.42 1211.22 L1824.01 1211.22 L1824.6 1211.22 L1825.18 1211.22 L1825.77 1211.22 L1826.35 1211.22 L1826.94 1211.22 L1827.53 1211.22 L1828.11 1211.22 L1828.7 1211.22 L1829.29 1211.22 L1829.87 1211.22 L1830.46 1211.22 L1831.05 1211.22 L1831.63 1211.22 L1832.22 1211.22 L1832.81 1211.22 L1833.39 1211.22 L1833.98 1211.22 L1834.56 1211.22 L1835.15 1211.22 L1835.74 1211.22 L1836.32 1211.22 L1836.91 1211.22 L1837.5 1211.22 L1838.08 1211.22 L1838.67 1211.22 L1839.26 1211.22 L1839.84 1211.22 L1840.43 1211.22 L1841.01 1211.22 L1841.6 1211.22 L1842.19 1211.22 L1842.77 1211.22 L1843.36 1211.22 L1843.95 1211.22 L1844.53 1211.22 L1845.12 1211.22 L1845.71 1211.22 L1846.29 1211.22 L1846.88 1211.22 L1847.47 1211.22 L1848.05 1211.22 L1848.64 1211.22 L1849.22 1211.22 L1849.81 1211.22 L1850.4 1211.22 L1850.98 1211.22 L1851.57 1211.22 L1852.16 1211.22 L1852.74 1211.22 L1853.33 1211.22 L1853.92 1211.22 L1854.5 1211.22 L1855.09 1211.22 L1855.68 1211.22 L1856.26 1211.22 L1856.85 1211.22 L1857.43 1211.22 L1858.02 1211.22 L1858.61 1211.22 L1859.19 1211.22 L1859.78 1211.22 L1860.37 1211.22 L1860.95 1211.22 L1861.54 1211.22 L1862.13 1211.22 L1862.71 1211.22 L1863.3 1211.22 L1863.88 1211.22 L1864.47 1211.22 L1865.06 1211.22 L1865.64 1211.22 L1866.23 1211.22 L1866.82 1211.22 L1867.4 1211.22 L1867.99 1211.22 L1868.58 1211.22 L1869.16 1211.22 L1869.75 1211.22 L1870.34 1211.22 L1870.92 1211.22 L1871.51 1211.22 L1872.09 1211.22 L1872.68 1211.22 L1873.27 1211.22 L1873.85 1211.22 L1874.44 1211.22 L1875.03 1211.22 L1875.61 1211.22 L1876.2 1211.22 L1876.79 1211.22 L1877.37 1211.22 L1877.96 1211.22 L1878.55 1211.22 L1879.13 1211.22 L1879.72 1211.22 L1880.3 1211.22 L1880.89 1211.22 L1881.48 1211.22 L1882.06 1211.22 L1882.65 1211.22 L1883.24 1211.22 L1883.82 1211.22 L1884.41 1211.22 L1885 1211.22 L1885.58 1211.22 L1886.17 1211.22 L1886.76 1211.22 L1887.34 1211.22 L1887.93 1211.22 L1888.51 1211.22 L1889.1 1211.22 L1889.69 1211.22 L1890.27 1211.22 L1890.86 1211.22 L1891.45 1211.22 L1892.03 1211.22 L1892.62 1211.22 L1893.21 1211.22 L1893.79 1211.22 L1894.38 1211.22 L1894.96 1211.22 L1895.55 1211.22 L1896.14 1211.22 L1896.72 1211.22 L1897.31 1211.22 L1897.9 1211.22 L1898.48 1211.22 L1899.07 1211.22 L1899.66 1211.22 L1900.24 1211.22 L1900.83 1211.22 L1901.42 1211.22 L1902 1211.22 L1902.59 1211.22 L1903.17 1211.22 L1903.76 1211.22 L1904.35 1211.22 L1904.93 1211.22 L1905.52 1211.22 L1906.11 1211.22 L1906.69 1211.22 L1907.28 1211.22 L1907.87 1211.22 L1908.45 1211.22 L1909.04 1211.22 L1909.63 1211.22 L1910.21 1211.22 L1910.8 1211.22 L1911.38 1211.22 L1911.97 1211.22 L1912.56 1211.22 L1913.14 1211.22 L1913.73 1211.22 L1914.32 1211.22 L1914.9 1211.22 L1915.49 1211.22 L1916.08 1211.22 L1916.66 1211.22 L1917.25 1211.22 L1917.83 1211.22 L1918.42 1211.22 L1919.01 1211.22 L1919.59 1211.22 L1920.18 1211.22 L1920.77 1211.22 L1921.35 1211.22 L1921.94 1211.22 L1922.53 1211.22 L1923.11 1211.22 L1923.7 1211.22 L1924.29 1211.22 L1924.87 1211.22 L1925.46 1211.22 L1926.04 1211.22 L1926.63 1211.22 L1927.22 1211.22 L1927.8 1211.22 L1928.39 1211.22 L1928.98 1211.22 L1929.56 1211.22 L1930.15 1211.22 L1930.74 1211.22 L1931.32 1211.22 L1931.91 1211.22 L1932.5 1211.22 L1933.08 1211.22 L1933.67 1211.22 L1934.25 1211.22 L1934.84 1211.22 L1935.43 1211.22 L1936.01 1211.22 L1936.6 1211.22 L1937.19 1211.22 L1937.77 1211.22 L1938.36 1211.22 L1938.95 1211.22 L1939.53 1211.22 L1940.12 1211.22 L1940.71 1211.22 L1941.29 1211.22 L1941.88 1211.22 L1942.46 1211.22 L1943.05 1211.22 L1943.64 1211.22 L1944.22 1211.22 L1944.81 1211.22 L1945.4 1211.22 L1945.98 1211.22 L1946.57 1211.22 L1947.16 1211.22 L1947.74 1211.22 L1948.33 1211.22 L1948.91 1211.22 L1949.5 1211.22 L1950.09 1211.22 L1950.67 1211.22 L1951.26 1211.22 L1951.85 1211.22 L1952.43 1211.22 L1953.02 1211.22 L1953.61 1211.22 L1954.19 1211.22 L1954.78 1211.22 L1955.37 1211.22 L1955.95 1211.22 L1956.54 1211.22 L1957.12 1211.22 L1957.71 1211.22 L1958.3 1211.22 L1958.88 1211.22 L1959.47 1211.22 L1960.06 1211.22 L1960.64 1211.22 L1961.23 1211.22 L1961.82 1211.22 L1962.4 1211.22 L1962.99 1211.22 L1963.58 1211.22 L1964.16 1211.22 L1964.75 1211.22 L1965.33 1211.22 L1965.92 1211.22 L1966.51 1211.22 L1967.09 1211.22 L1967.68 1211.22 L1968.27 1211.22 L1968.85 1211.22 L1969.44 1211.22 L1970.03 1211.22 L1970.61 1211.22 L1971.2 1211.22 L1971.78 1211.22 L1972.37 1211.22 L1972.96 1211.22 L1973.54 1211.22 L1974.13 1211.22 L1974.72 1211.22 L1975.3 1211.22 L1975.89 1211.22 L1976.48 1211.22 L1977.06 1211.22 L1977.65 1211.22 L1978.24 1211.22 L1978.82 1211.22 L1979.41 1211.22 L1979.99 1211.22 L1980.58 1211.22 L1981.17 1211.22 L1981.75 1211.22 L1982.34 1211.22 L1982.93 1211.22 L1983.51 1211.22 L1984.1 1211.22 L1984.69 1211.22 L1985.27 1211.22 L1985.86 1211.22 L1986.45 1211.22 L1987.03 1211.22 L1987.62 1211.22 L1988.2 1211.22 L1988.79 1211.22 L1989.38 1211.22 L1989.96 1211.22 L1990.55 1211.22 L1991.14 1211.22 L1991.72 1211.22 L1992.31 1211.22 L1992.9 1211.22 L1993.48 1211.22 L1994.07 1211.22 L1994.65 1211.22 L1995.24 1211.22 L1995.83 1211.22 L1996.41 1211.22 L1997 1211.22 L1997.59 1211.22 L1998.17 1211.22 L1998.76 1211.22 L1999.35 1211.22 L1999.93 1211.22 L2000.52 1211.22 L2001.11 1211.22 L2001.69 1211.22 L2002.28 1211.22 L2002.86 1211.22 L2003.45 1211.22 L2004.04 1211.22 L2004.62 1211.22 L2005.21 1211.22 L2005.8 1211.22 L2006.38 1211.22 L2006.97 1211.22 L2007.56 1211.22 L2008.14 1211.22 L2008.73 1211.22 L2009.32 1211.22 L2009.9 1211.22 L2010.49 1211.22 L2011.07 1211.22 L2011.66 1211.22 L2012.25 1211.22 L2012.83 1211.22 L2013.42 1211.22 L2014.01 1211.22 L2014.59 1211.22 L2015.18 1211.22 L2015.77 1211.22 L2016.35 1211.22 L2016.94 1211.22 L2017.53 1211.22 L2018.11 1211.22 L2018.7 1211.22 L2019.28 1211.22 L2019.87 1211.22 L2020.46 1211.22 L2021.04 1211.22 L2021.63 1211.22 L2022.22 1211.22 L2022.8 1211.22 L2023.39 1211.22 L2023.98 1211.22 L2024.56 1211.22 L2025.15 1211.22 L2025.73 1211.22 L2026.32 1211.22 L2026.91 1211.22 L2027.49 1211.22 L2028.08 1211.22 L2028.67 1211.22 L2029.25 1211.22 L2029.84 1211.22 L2030.43 1211.22 L2031.01 1211.22 L2031.6 1211.22 L2032.19 1211.22 L2032.77 1211.22 L2033.36 1211.22 L2033.94 1211.22 L2034.53 1211.22 L2035.12 1211.22 L2035.7 1211.22 L2036.29 1211.22 L2036.88 1211.22 L2037.46 1211.22 L2038.05 1211.22 L2038.64 1211.22 L2039.22 1211.22 L2039.81 1211.22 L2040.4 1211.22 L2040.98 1211.22 L2041.57 1211.22 L2042.15 1211.22 L2042.74 1211.22 L2043.33 1211.22 L2043.91 1211.22 L2044.5 1211.22 L2045.09 1211.22 L2045.67 1211.22 L2046.26 1211.22 L2046.85 1211.22 L2047.43 1211.22 L2048.02 1211.22 L2048.6 1211.22 L2049.19 1211.22 L2049.78 1211.22 L2050.36 1211.22 L2050.95 1211.22 L2051.54 1211.22 L2052.12 1211.22 L2052.71 1211.22 L2053.3 1211.22 L2053.88 1211.22 L2054.47 1211.22 L2055.06 1211.22 L2055.64 1211.22 L2056.23 1211.22 L2056.81 1211.22 L2057.4 1211.22 L2057.99 1211.22 L2058.57 1211.22 L2059.16 1211.22 L2059.75 1211.22 L2060.33 1211.22 L2060.92 1211.22 L2061.51 1211.22 L2062.09 1211.22 L2062.68 1211.22 L2063.27 1211.22 L2063.85 1211.22 L2064.44 1211.22 L2065.02 1211.22 L2065.61 1211.22 L2066.2 1211.22 L2066.78 1211.22 L2067.37 1211.22 L2067.96 1211.22 L2068.54 1211.22 L2069.13 1211.22 L2069.72 1211.22 L2070.3 1211.22 L2070.89 1211.22 L2071.48 1211.22 L2072.06 1211.22 L2072.65 1211.22 L2073.23 1211.22 L2073.82 1211.22 L2074.41 1211.22 L2074.99 1211.22 L2075.58 1211.22 L2076.17 1211.22 L2076.75 1211.22 L2077.34 1211.22 L2077.93 1211.22 L2078.51 1211.22 L2079.1 1211.22 L2079.68 1211.22 L2080.27 1211.22 L2080.86 1211.22 L2081.44 1211.22 L2082.03 1211.22 L2082.62 1211.22 L2083.2 1211.22 L2083.79 1211.22 L2084.38 1211.22 L2084.96 1211.22 L2085.55 1211.22 L2086.14 1211.22 L2086.72 1211.22 L2087.31 1211.22 L2087.89 1211.22 L2088.48 1211.22 L2089.07 1211.22 L2089.65 1211.22 L2090.24 1211.22 L2090.83 1211.22 L2091.41 1211.22 L2092 1211.22 L2092.59 1211.22 L2093.17 1211.22 L2093.76 1211.22 L2094.35 1211.22 L2094.93 1211.22 L2095.52 1211.22 L2096.1 1211.22 L2096.69 1211.22 L2097.28 1211.22 L2097.86 1211.22 L2098.45 1211.22 L2099.04 1211.22 L2099.62 1211.22 L2100.21 1211.22 L2100.8 1211.22 L2101.38 1211.22 L2101.97 1211.22 L2102.55 1211.22 L2103.14 1211.22 L2103.73 1211.22 L2104.31 1211.22 L2104.9 1211.22 L2105.49 1211.22 L2106.07 1211.22 L2106.66 1211.22 L2107.25 1211.22 L2107.83 1211.22 L2108.42 1211.22 L2109.01 1211.22 L2109.59 1211.22 L2110.18 1211.22 L2110.76 1211.22 L2111.35 1211.22 L2111.94 1211.22 L2112.52 1211.22 L2113.11 1211.22 L2113.7 1211.22 L2114.28 1211.22 L2114.87 1211.22 L2115.46 1211.22 L2116.04 1211.22 L2116.63 1211.22 L2117.22 1211.22 L2117.8 1211.22 L2118.39 1211.22 L2118.97 1211.22 L2119.56 1211.22 L2120.15 1211.22 L2120.73 1211.22 L2121.32 1211.22 L2121.91 1211.22 L2122.49 1211.22 L2123.08 1211.22 L2123.67 1211.22 L2124.25 1211.22 L2124.84 1211.22 L2125.42 1211.22 L2126.01 1211.22 L2126.6 1211.22 L2127.18 1211.22 L2127.77 1211.22 L2128.36 1211.22 L2128.94 1211.22 L2129.53 1211.22 L2130.12 1211.22 L2130.7 1211.22 L2131.29 1211.22 L2131.88 1211.22 L2132.46 1211.22 L2133.05 1211.22 L2133.63 1211.22 L2134.22 1211.22 L2134.81 1211.22 L2135.39 1211.22 L2135.98 1211.22 L2136.57 1211.22 L2137.15 1211.22 L2137.74 1211.22 L2138.33 1211.22 L2138.91 1211.22 L2139.5 1211.22 L2140.09 1211.22 L2140.67 1211.22 L2141.26 1211.22 L2141.84 1211.22 L2142.43 1211.22 L2143.02 1211.22 L2143.6 1211.22 L2144.19 1211.22 L2144.78 1211.22 L2145.36 1211.22 L2145.95 1211.22 L2146.54 1211.22 L2147.12 1211.22 L2147.71 1211.22 L2148.3 1211.22 L2148.88 1211.22 L2149.47 1211.22 L2150.05 1211.22 L2150.64 1211.22 L2151.23 1211.22 L2151.81 1211.22 L2152.4 1211.22 L2152.99 1211.22 L2153.57 1211.22 L2154.16 1211.22 L2154.75 1211.22 L2155.33 1211.22 L2155.92 1211.22 L2156.5 1211.22 L2157.09 1211.22 L2157.68 1211.22 L2158.26 1211.22 L2158.26 1210.54 L2157.68 1210.54 L2157.09 1210.54 L2156.5 1210.54 L2155.92 1210.54 L2155.33 1210.54 L2154.75 1210.54 L2154.16 1210.54 L2153.57 1210.54 L2152.99 1210.54 L2152.4 1210.54 L2151.81 1210.54 L2151.23 1210.54 L2150.64 1210.54 L2150.05 1210.54 L2149.47 1210.54 L2148.88 1210.54 L2148.3 1210.54 L2147.71 1210.54 L2147.12 1210.54 L2146.54 1210.54 L2145.95 1210.54 L2145.36 1210.54 L2144.78 1210.54 L2144.19 1210.54 L2143.6 1210.54 L2143.02 1210.54 L2142.43 1210.54 L2141.84 1210.54 L2141.26 1210.54 L2140.67 1210.54 L2140.09 1210.54 L2139.5 1210.54 L2138.91 1210.54 L2138.33 1210.54 L2137.74 1210.54 L2137.15 1210.54 L2136.57 1210.54 L2135.98 1210.54 L2135.39 1210.54 L2134.81 1210.54 L2134.22 1210.54 L2133.63 1210.54 L2133.05 1210.54 L2132.46 1210.54 L2131.88 1210.54 L2131.29 1210.54 L2130.7 1210.54 L2130.12 1210.54 L2129.53 1210.54 L2128.94 1210.54 L2128.36 1210.54 L2127.77 1210.54 L2127.18 1210.54 L2126.6 1210.54 L2126.01 1210.54 L2125.42 1210.54 L2124.84 1210.54 L2124.25 1210.54 L2123.67 1210.54 L2123.08 1210.54 L2122.49 1210.54 L2121.91 1210.54 L2121.32 1210.54 L2120.73 1210.54 L2120.15 1210.54 L2119.56 1210.54 L2118.97 1210.54 L2118.39 1210.54 L2117.8 1210.54 L2117.22 1210.54 L2116.63 1210.54 L2116.04 1210.54 L2115.46 1210.54 L2114.87 1210.54 L2114.28 1210.54 L2113.7 1210.54 L2113.11 1210.54 L2112.52 1210.54 L2111.94 1210.54 L2111.35 1210.54 L2110.76 1210.54 L2110.18 1210.54 L2109.59 1210.54 L2109.01 1210.54 L2108.42 1210.54 L2107.83 1210.54 L2107.25 1210.54 L2106.66 1210.54 L2106.07 1210.54 L2105.49 1210.54 L2104.9 1210.54 L2104.31 1210.54 L2103.73 1210.54 L2103.14 1210.54 L2102.55 1210.54 L2101.97 1210.54 L2101.38 1210.54 L2100.8 1210.54 L2100.21 1210.54 L2099.62 1210.54 L2099.04 1210.54 L2098.45 1210.54 L2097.86 1210.54 L2097.28 1210.54 L2096.69 1210.54 L2096.1 1210.54 L2095.52 1210.54 L2094.93 1210.54 L2094.35 1210.54 L2093.76 1210.54 L2093.17 1210.54 L2092.59 1210.54 L2092 1210.54 L2091.41 1210.54 L2090.83 1210.54 L2090.24 1210.54 L2089.65 1210.54 L2089.07 1210.54 L2088.48 1210.54 L2087.89 1210.54 L2087.31 1210.54 L2086.72 1210.54 L2086.14 1210.54 L2085.55 1210.54 L2084.96 1210.54 L2084.38 1210.54 L2083.79 1210.54 L2083.2 1210.54 L2082.62 1210.54 L2082.03 1210.54 L2081.44 1210.54 L2080.86 1210.54 L2080.27 1210.54 L2079.68 1210.54 L2079.1 1210.54 L2078.51 1210.54 L2077.93 1210.54 L2077.34 1210.54 L2076.75 1210.54 L2076.17 1210.54 L2075.58 1210.54 L2074.99 1210.54 L2074.41 1210.54 L2073.82 1210.54 L2073.23 1210.54 L2072.65 1210.54 L2072.06 1210.54 L2071.48 1210.54 L2070.89 1210.54 L2070.3 1210.54 L2069.72 1210.54 L2069.13 1210.54 L2068.54 1210.54 L2067.96 1210.54 L2067.37 1210.54 L2066.78 1210.54 L2066.2 1210.54 L2065.61 1210.54 L2065.02 1210.54 L2064.44 1210.54 L2063.85 1210.54 L2063.27 1210.54 L2062.68 1210.54 L2062.09 1210.54 L2061.51 1210.54 L2060.92 1210.54 L2060.33 1210.54 L2059.75 1210.54 L2059.16 1210.54 L2058.57 1210.54 L2057.99 1210.54 L2057.4 1210.54 L2056.81 1210.54 L2056.23 1210.54 L2055.64 1210.54 L2055.06 1210.54 L2054.47 1210.54 L2053.88 1210.54 L2053.3 1210.54 L2052.71 1210.54 L2052.12 1210.54 L2051.54 1210.54 L2050.95 1210.54 L2050.36 1210.54 L2049.78 1210.54 L2049.19 1210.54 L2048.6 1210.54 L2048.02 1210.54 L2047.43 1210.54 L2046.85 1210.54 L2046.26 1210.54 L2045.67 1210.54 L2045.09 1210.54 L2044.5 1210.54 L2043.91 1210.54 L2043.33 1210.54 L2042.74 1210.54 L2042.15 1210.54 L2041.57 1210.54 L2040.98 1210.54 L2040.4 1210.54 L2039.81 1210.54 L2039.22 1210.54 L2038.64 1210.54 L2038.05 1210.54 L2037.46 1210.54 L2036.88 1210.54 L2036.29 1210.54 L2035.7 1210.54 L2035.12 1210.54 L2034.53 1210.54 L2033.94 1210.54 L2033.36 1210.54 L2032.77 1210.54 L2032.19 1210.54 L2031.6 1210.54 L2031.01 1210.54 L2030.43 1210.54 L2029.84 1210.54 L2029.25 1210.54 L2028.67 1210.54 L2028.08 1210.54 L2027.49 1210.54 L2026.91 1210.54 L2026.32 1210.54 L2025.73 1210.54 L2025.15 1210.54 L2024.56 1210.54 L2023.98 1210.54 L2023.39 1210.54 L2022.8 1210.54 L2022.22 1210.54 L2021.63 1210.54 L2021.04 1210.54 L2020.46 1210.54 L2019.87 1210.54 L2019.28 1210.54 L2018.7 1210.54 L2018.11 1210.54 L2017.53 1210.54 L2016.94 1210.54 L2016.35 1210.54 L2015.77 1210.54 L2015.18 1210.54 L2014.59 1210.54 L2014.01 1210.54 L2013.42 1210.54 L2012.83 1210.54 L2012.25 1210.54 L2011.66 1210.54 L2011.07 1210.54 L2010.49 1210.54 L2009.9 1210.54 L2009.32 1210.54 L2008.73 1210.54 L2008.14 1210.54 L2007.56 1210.54 L2006.97 1210.54 L2006.38 1210.54 L2005.8 1210.54 L2005.21 1210.54 L2004.62 1210.54 L2004.04 1210.54 L2003.45 1210.54 L2002.86 1210.54 L2002.28 1210.54 L2001.69 1210.54 L2001.11 1210.54 L2000.52 1210.54 L1999.93 1210.54 L1999.35 1210.54 L1998.76 1210.54 L1998.17 1210.54 L1997.59 1210.54 L1997 1210.54 L1996.41 1210.54 L1995.83 1210.54 L1995.24 1210.54 L1994.65 1210.54 L1994.07 1210.54 L1993.48 1210.54 L1992.9 1210.54 L1992.31 1210.54 L1991.72 1210.54 L1991.14 1210.54 L1990.55 1210.54 L1989.96 1210.54 L1989.38 1210.54 L1988.79 1210.54 L1988.2 1210.54 L1987.62 1210.54 L1987.03 1210.54 L1986.45 1210.54 L1985.86 1210.54 L1985.27 1210.54 L1984.69 1210.54 L1984.1 1210.54 L1983.51 1210.54 L1982.93 1210.54 L1982.34 1210.54 L1981.75 1210.54 L1981.17 1210.54 L1980.58 1210.54 L1979.99 1210.54 L1979.41 1210.54 L1978.82 1210.54 L1978.24 1210.54 L1977.65 1210.54 L1977.06 1210.54 L1976.48 1210.54 L1975.89 1210.54 L1975.3 1210.54 L1974.72 1210.54 L1974.13 1210.54 L1973.54 1210.54 L1972.96 1210.54 L1972.37 1210.54 L1971.78 1210.54 L1971.2 1210.54 L1970.61 1210.54 L1970.03 1210.54 L1969.44 1210.54 L1968.85 1210.54 L1968.27 1210.54 L1967.68 1210.54 L1967.09 1210.54 L1966.51 1210.54 L1965.92 1210.54 L1965.33 1210.54 L1964.75 1210.54 L1964.16 1210.54 L1963.58 1210.54 L1962.99 1210.54 L1962.4 1210.54 L1961.82 1210.54 L1961.23 1210.54 L1960.64 1210.54 L1960.06 1210.54 L1959.47 1210.54 L1958.88 1210.54 L1958.3 1210.54 L1957.71 1210.54 L1957.12 1210.54 L1956.54 1210.54 L1955.95 1210.54 L1955.37 1210.54 L1954.78 1210.54 L1954.19 1210.54 L1953.61 1210.54 L1953.02 1210.54 L1952.43 1210.54 L1951.85 1210.54 L1951.26 1210.54 L1950.67 1210.54 L1950.09 1210.54 L1949.5 1210.54 L1948.91 1210.54 L1948.33 1210.54 L1947.74 1210.54 L1947.16 1210.54 L1946.57 1210.54 L1945.98 1210.54 L1945.4 1210.54 L1944.81 1210.54 L1944.22 1210.54 L1943.64 1210.54 L1943.05 1210.54 L1942.46 1210.54 L1941.88 1210.54 L1941.29 1210.54 L1940.71 1210.54 L1940.12 1210.54 L1939.53 1210.54 L1938.95 1210.54 L1938.36 1210.54 L1937.77 1210.54 L1937.19 1210.54 L1936.6 1210.54 L1936.01 1210.54 L1935.43 1210.54 L1934.84 1210.54 L1934.25 1210.54 L1933.67 1210.54 L1933.08 1210.54 L1932.5 1210.54 L1931.91 1210.54 L1931.32 1210.54 L1930.74 1210.54 L1930.15 1210.54 L1929.56 1210.54 L1928.98 1210.54 L1928.39 1210.54 L1927.8 1210.54 L1927.22 1210.54 L1926.63 1210.54 L1926.04 1210.54 L1925.46 1210.54 L1924.87 1210.54 L1924.29 1210.54 L1923.7 1210.54 L1923.11 1210.54 L1922.53 1210.54 L1921.94 1210.54 L1921.35 1210.54 L1920.77 1210.54 L1920.18 1210.54 L1919.59 1210.54 L1919.01 1210.54 L1918.42 1210.54 L1917.83 1210.54 L1917.25 1210.54 L1916.66 1210.54 L1916.08 1210.54 L1915.49 1210.54 L1914.9 1210.54 L1914.32 1210.54 L1913.73 1210.54 L1913.14 1210.54 L1912.56 1210.54 L1911.97 1210.54 L1911.38 1210.54 L1910.8 1210.54 L1910.21 1210.54 L1909.63 1210.54 L1909.04 1210.54 L1908.45 1210.54 L1907.87 1210.54 L1907.28 1210.54 L1906.69 1210.54 L1906.11 1210.54 L1905.52 1210.54 L1904.93 1210.54 L1904.35 1210.54 L1903.76 1210.54 L1903.17 1210.54 L1902.59 1210.54 L1902 1210.54 L1901.42 1210.54 L1900.83 1210.54 L1900.24 1210.54 L1899.66 1210.54 L1899.07 1210.54 L1898.48 1210.54 L1897.9 1210.54 L1897.31 1210.54 L1896.72 1210.54 L1896.14 1210.54 L1895.55 1210.54 L1894.96 1210.54 L1894.38 1210.54 L1893.79 1210.54 L1893.21 1210.54 L1892.62 1210.54 L1892.03 1210.54 L1891.45 1210.54 L1890.86 1210.54 L1890.27 1210.54 L1889.69 1210.54 L1889.1 1210.54 L1888.51 1210.54 L1887.93 1210.54 L1887.34 1210.54 L1886.76 1210.54 L1886.17 1210.54 L1885.58 1210.54 L1885 1210.54 L1884.41 1210.54 L1883.82 1210.54 L1883.24 1210.54 L1882.65 1210.54 L1882.06 1210.54 L1881.48 1210.54 L1880.89 1210.54 L1880.3 1210.54 L1879.72 1210.54 L1879.13 1210.54 L1878.55 1210.54 L1877.96 1210.54 L1877.37 1210.54 L1876.79 1210.54 L1876.2 1210.54 L1875.61 1210.54 L1875.03 1210.54 L1874.44 1210.54 L1873.85 1210.54 L1873.27 1210.54 L1872.68 1210.54 L1872.09 1210.54 L1871.51 1210.54 L1870.92 1210.54 L1870.34 1210.54 L1869.75 1210.54 L1869.16 1210.54 L1868.58 1210.54 L1867.99 1210.54 L1867.4 1210.54 L1866.82 1210.54 L1866.23 1210.54 L1865.64 1210.54 L1865.06 1210.54 L1864.47 1210.54 L1863.88 1210.54 L1863.3 1210.54 L1862.71 1210.54 L1862.13 1210.54 L1861.54 1210.54 L1860.95 1210.54 L1860.37 1210.54 L1859.78 1210.54 L1859.19 1210.54 L1858.61 1210.54 L1858.02 1210.54 L1857.43 1210.54 L1856.85 1210.54 L1856.26 1210.54 L1855.68 1210.54 L1855.09 1210.54 L1854.5 1210.54 L1853.92 1210.54 L1853.33 1210.54 L1852.74 1210.54 L1852.16 1210.54 L1851.57 1210.54 L1850.98 1210.54 L1850.4 1210.54 L1849.81 1210.54 L1849.22 1210.54 L1848.64 1210.54 L1848.05 1210.54 L1847.47 1210.54 L1846.88 1210.54 L1846.29 1210.54 L1845.71 1210.54 L1845.12 1210.54 L1844.53 1210.54 L1843.95 1210.54 L1843.36 1210.54 L1842.77 1210.54 L1842.19 1210.54 L1841.6 1210.54 L1841.01 1210.54 L1840.43 1210.54 L1839.84 1210.54 L1839.26 1210.54 L1838.67 1210.54 L1838.08 1210.54 L1837.5 1210.54 L1836.91 1210.54 L1836.32 1210.54 L1835.74 1210.54 L1835.15 1210.54 L1834.56 1210.54 L1833.98 1210.54 L1833.39 1210.54 L1832.81 1210.54 L1832.22 1210.54 L1831.63 1210.54 L1831.05 1210.54 L1830.46 1210.54 L1829.87 1210.54 L1829.29 1210.54 L1828.7 1210.54 L1828.11 1210.54 L1827.53 1210.54 L1826.94 1210.54 L1826.35 1210.54 L1825.77 1210.54 L1825.18 1210.54 L1824.6 1210.54 L1824.01 1210.54 L1823.42 1210.54 L1822.84 1210.54 L1822.25 1210.54 L1821.66 1210.54 L1821.08 1210.54 L1820.49 1210.54 L1819.9 1210.54 L1819.32 1210.54 L1818.73 1210.54 L1818.14 1210.54 L1817.56 1210.54 L1816.97 1210.54 L1816.39 1210.54 L1815.8 1210.54 L1815.21 1210.54 L1814.63 1210.54 L1814.04 1210.54 L1813.45 1210.54 L1812.87 1210.54 L1812.28 1210.54 L1811.69 1210.54 L1811.11 1210.54 L1810.52 1210.54 L1809.94 1210.54 L1809.35 1210.54 L1808.76 1210.54 L1808.18 1210.54 L1807.59 1210.54 L1807 1210.54 L1806.42 1210.54 L1805.83 1210.54 L1805.24 1210.54 L1804.66 1210.54 L1804.07 1210.54 L1803.48 1210.54 L1802.9 1210.54 L1802.31 1210.54 L1801.73 1210.54 L1801.14 1210.54 L1800.55 1210.54 L1799.97 1210.54 L1799.38 1210.54 L1798.79 1210.54 L1798.21 1210.54 L1797.62 1210.54 L1797.03 1210.54 L1796.45 1210.54 L1795.86 1210.54 L1795.27 1210.54 L1794.69 1210.54 L1794.1 1210.54 L1793.52 1210.54 L1792.93 1210.54 L1792.34 1210.54 L1791.76 1210.54 L1791.17 1210.54 L1790.58 1210.54 L1790 1210.54 L1789.41 1210.54 L1788.82 1210.54 L1788.24 1210.54 L1787.65 1210.54 L1787.06 1210.54 L1786.48 1210.54 L1785.89 1210.54 L1785.31 1210.54 L1784.72 1210.54 L1784.13 1210.54 L1783.55 1210.54 L1782.96 1210.54 L1782.37 1210.54 L1781.79 1210.54 L1781.2 1210.54 L1780.61 1210.54 L1780.03 1210.54 L1779.44 1210.54 L1778.86 1210.54 L1778.27 1210.54 L1777.68 1210.54 L1777.1 1210.54 L1776.51 1210.54 L1775.92 1210.54 L1775.34 1210.54 L1774.75 1210.54 L1774.16 1210.54 L1773.58 1210.54 L1772.99 1210.54 L1772.4 1210.54 L1771.82 1210.54 L1771.23 1210.54 L1770.65 1210.54 L1770.06 1210.54 L1769.47 1210.54 L1768.89 1210.54 L1768.3 1210.54 L1767.71 1210.54 L1767.13 1210.54 L1766.54 1210.54 L1765.95 1210.54 L1765.37 1210.54 L1764.78 1210.54 L1764.19 1210.54 L1763.61 1210.54 L1763.02 1210.54 L1762.44 1210.54 L1761.85 1210.54 L1761.26 1210.54 L1760.68 1210.54 L1760.09 1210.54 L1759.5 1210.54 L1758.92 1210.54 L1758.33 1210.54 L1757.74 1210.54 L1757.16 1210.54 L1756.57 1210.54 L1755.99 1210.54 L1755.4 1210.54 L1754.81 1210.54 L1754.23 1210.54 L1753.64 1210.54 L1753.05 1210.54 L1752.47 1210.54 L1751.88 1210.54 L1751.29 1210.54 L1750.71 1210.54 L1750.12 1210.54 L1749.53 1210.54 L1748.95 1210.54 L1748.36 1210.54 L1747.78 1210.54 L1747.19 1210.54 L1746.6 1210.54 L1746.02 1210.54 L1745.43 1210.54 L1744.84 1210.54 L1744.26 1210.54 L1743.67 1210.54 L1743.08 1210.54 L1742.5 1210.54 L1741.91 1210.54 L1741.32 1210.54 L1740.74 1210.54 L1740.15 1210.54 L1739.57 1210.54 L1738.98 1210.54 L1738.39 1210.54 L1737.81 1210.54 L1737.22 1210.54 L1736.63 1210.54 L1736.05 1210.54 L1735.46 1210.54 L1734.87 1210.54 L1734.29 1210.54 L1733.7 1210.54 L1733.11 1210.54 L1732.53 1210.54 L1731.94 1210.54 L1731.36 1210.54 L1730.77 1210.54 L1730.18 1210.54 L1729.6 1210.54 L1729.01 1210.54 L1728.42 1210.54 L1727.84 1210.54 L1727.25 1210.54 L1726.66 1210.54 L1726.08 1210.54 L1725.49 1210.54 L1724.91 1210.54 L1724.32 1210.54 L1723.73 1210.54 L1723.15 1210.54 L1722.56 1210.54 L1721.97 1210.54 L1721.39 1210.54 L1720.8 1210.54 L1720.21 1210.54 L1719.63 1210.54 L1719.04 1210.54 L1718.45 1210.54 L1717.87 1210.54 L1717.28 1210.54 L1716.7 1210.54 L1716.11 1210.54 L1715.52 1210.54 L1714.94 1210.54 L1714.35 1210.54 L1713.76 1210.54 L1713.18 1210.54 L1712.59 1210.54 L1712 1210.54 L1711.42 1210.54 L1710.83 1210.54 L1710.24 1210.54 L1709.66 1210.54 L1709.07 1210.54 L1708.49 1210.54 L1707.9 1210.54 L1707.31 1210.54 L1706.73 1210.54 L1706.14 1210.54 L1705.55 1210.54 L1704.97 1210.54 L1704.38 1210.54 L1703.79 1210.54 L1703.21 1210.54 L1702.62 1210.54 L1702.04 1210.54 L1701.45 1210.54 L1700.86 1210.54 L1700.28 1210.54 L1699.69 1210.54 L1699.1 1210.54 L1698.52 1210.54 L1697.93 1210.54 L1697.34 1210.54 L1696.76 1210.54 L1696.17 1210.54 L1695.58 1210.54 L1695 1210.54 L1694.41 1210.54 L1693.83 1210.54 L1693.24 1210.54 L1692.65 1210.54 L1692.07 1210.54 L1691.48 1210.54 L1690.89 1210.54 L1690.31 1210.54 L1689.72 1210.54 L1689.13 1210.54 L1688.55 1210.54 L1687.96 1210.54 L1687.37 1210.54 L1686.79 1210.54 L1686.2 1210.54 L1685.62 1210.54 L1685.03 1210.54 L1684.44 1210.54 L1683.86 1210.54 L1683.27 1210.54 L1682.68 1210.54 L1682.1 1210.54 L1681.51 1210.54 L1680.92 1210.54 L1680.34 1210.54 L1679.75 1210.54 L1679.17 1210.54 L1678.58 1210.54 L1677.99 1210.54 L1677.41 1210.54 L1676.82 1210.54 L1676.23 1210.54 L1675.65 1210.54 L1675.06 1210.54 L1674.47 1210.54 L1673.89 1210.54 L1673.3 1210.54 L1672.71 1210.54 L1672.13 1210.54 L1671.54 1210.54 L1670.96 1210.54 L1670.37 1210.54 L1669.78 1210.54 L1669.2 1210.54 L1668.61 1210.54 L1668.02 1210.54 L1667.44 1210.54 L1666.85 1210.54 L1666.26 1210.54 L1665.68 1210.54 L1665.09 1210.54 L1664.5 1210.54 L1663.92 1210.54 L1663.33 1210.54 L1662.75 1210.54 L1662.16 1210.54 L1661.57 1210.54 L1660.99 1210.54 L1660.4 1210.54 L1659.81 1210.54 L1659.23 1210.54 L1658.64 1210.54 L1658.05 1210.54 L1657.47 1210.54 L1656.88 1210.54 L1656.29 1210.54 L1655.71 1210.54 L1655.12 1210.54 L1654.54 1210.54 L1653.95 1210.54 L1653.36 1210.54 L1652.78 1210.54 L1652.19 1210.54 L1651.6 1210.54 L1651.02 1210.54 L1650.43 1210.54 L1649.84 1210.54 L1649.26 1210.54 L1648.67 1210.54 L1648.09 1210.54 L1647.5 1210.54 L1646.91 1210.54 L1646.33 1210.54 L1645.74 1210.54 L1645.15 1210.54 L1644.57 1210.54 L1643.98 1210.54 L1643.39 1210.54 L1642.81 1210.54 L1642.22 1210.54 L1641.63 1210.54 L1641.05 1210.54 L1640.46 1210.54 L1639.88 1210.54 L1639.29 1210.54 L1638.7 1210.54 L1638.12 1210.54 L1637.53 1210.54 L1636.94 1210.54 L1636.36 1210.54 L1635.77 1210.54 L1635.18 1210.54 L1634.6 1210.54 L1634.01 1210.54 L1633.42 1210.54 L1632.84 1210.54 L1632.25 1210.54 L1631.67 1210.54 L1631.08 1210.54 L1630.49 1210.54 L1629.91 1210.54 L1629.32 1210.54 L1628.73 1210.54 L1628.15 1210.54 L1627.56 1210.54 L1626.97 1210.54 L1626.39 1210.54 L1625.8 1210.54 L1625.22 1210.54 L1624.63 1210.54 L1624.04 1210.54 L1623.46 1210.54 L1622.87 1210.54 L1622.28 1210.54 L1621.7 1210.54 L1621.11 1210.54 L1620.52 1210.54 L1619.94 1210.54 L1619.35 1210.54 L1618.76 1210.54 L1618.18 1210.54 L1617.59 1210.54 L1617.01 1210.54 L1616.42 1210.54 L1615.83 1210.54 L1615.25 1210.54 L1614.66 1210.54 L1614.07 1210.54 L1613.49 1210.54 L1612.9 1210.54 L1612.31 1210.54 L1611.73 1210.54 L1611.14 1210.54 L1610.55 1210.54 L1609.97 1210.54 L1609.38 1210.54 L1608.8 1210.54 L1608.21 1210.54 L1607.62 1210.54 L1607.04 1210.54 L1606.45 1210.54 L1605.86 1210.54 L1605.28 1210.54 L1604.69 1210.54 L1604.1 1210.54 L1603.52 1210.54 L1602.93 1210.54 L1602.34 1210.54 L1601.76 1210.54 L1601.17 1210.54 L1600.59 1210.54 L1600 1210.54 L1599.41 1210.54 L1598.83 1210.54 L1598.24 1210.54 L1597.65 1210.54 L1597.07 1210.54 L1596.48 1210.54 L1595.89 1210.54 L1595.31 1210.54 L1594.72 1210.54 L1594.14 1210.54 L1593.55 1210.54 L1592.96 1210.54 L1592.38 1210.54 L1591.79 1210.54 L1591.2 1210.54 L1590.62 1210.54 L1590.03 1210.54 L1589.44 1210.54 L1588.86 1210.54 L1588.27 1210.54 L1587.68 1210.54 L1587.1 1210.54 L1586.51 1210.54 L1585.93 1210.54 L1585.34 1210.54 L1584.75 1210.54 L1584.17 1210.54 L1583.58 1210.54 L1582.99 1210.54 L1582.41 1210.54 L1581.82 1210.54 L1581.23 1210.54 L1580.65 1210.54 L1580.06 1210.54 L1579.47 1210.54 L1578.89 1210.54 L1578.3 1210.54 L1577.72 1210.54 L1577.13 1210.54 L1576.54 1210.54 L1575.96 1210.54 L1575.37 1210.54 L1574.78 1210.54 L1574.2 1210.54 L1573.61 1210.54 L1573.02 1210.54 L1572.44 1210.54 L1571.85 1210.54 L1571.27 1210.54 L1570.68 1210.54 L1570.09 1210.54 L1569.51 1210.54 L1568.92 1210.54 L1568.33 1210.54 L1567.75 1210.54 L1567.16 1210.54 L1566.57 1210.54 L1565.99 1210.54 L1565.4 1210.54 L1564.81 1210.54 L1564.23 1210.54 L1563.64 1210.54 L1563.06 1210.54 L1562.47 1210.54 L1561.88 1210.54 L1561.3 1210.54 L1560.71 1210.54 L1560.12 1210.54 L1559.54 1210.54 L1558.95 1210.54 L1558.36 1210.54 L1557.78 1210.54 L1557.19 1210.54 L1556.6 1210.54 L1556.02 1210.54 L1555.43 1210.54 L1554.85 1210.54 L1554.26 1210.54 L1553.67 1210.54 L1553.09 1210.54 L1552.5 1210.54 L1551.91 1210.54 L1551.33 1210.54 L1550.74 1210.54 L1550.15 1210.54 L1549.57 1210.54 L1548.98 1210.54 L1548.4 1210.54 L1547.81 1210.54 L1547.22 1210.54 L1546.64 1210.54 L1546.05 1210.54 L1545.46 1210.54 L1544.88 1210.54 L1544.29 1210.54 L1543.7 1210.54 L1543.12 1210.54 L1542.53 1210.54 L1541.94 1210.54 L1541.36 1210.54 L1540.77 1210.54 L1540.19 1210.54 L1539.6 1210.54 L1539.01 1210.54 L1538.43 1210.54 L1537.84 1210.54 L1537.25 1210.54 L1536.67 1210.54 L1536.08 1210.54 L1535.49 1210.54 L1534.91 1210.54 L1534.32 1210.54 L1533.73 1210.54 L1533.15 1210.54 L1532.56 1210.54 L1531.98 1210.54 L1531.39 1210.54 L1530.8 1210.54 L1530.22 1210.54 L1529.63 1210.54 L1529.04 1210.54 L1528.46 1210.54 L1527.87 1210.54 L1527.28 1210.54 L1526.7 1210.54 L1526.11 1210.54 L1525.52 1210.54 L1524.94 1210.54 L1524.35 1210.54 L1523.77 1210.54 L1523.18 1210.54 L1522.59 1210.54 L1522.01 1210.54 L1521.42 1210.54 L1520.83 1210.54 L1520.25 1210.54 L1519.66 1210.54 L1519.07 1210.54 L1518.49 1210.54 L1517.9 1210.54 L1517.32 1210.54 L1516.73 1210.54 L1516.14 1210.54 L1515.56 1210.54 L1514.97 1210.54 L1514.38 1210.54 L1513.8 1210.54 L1513.21 1210.54 L1512.62 1210.54 L1512.04 1210.54 L1511.45 1210.54 L1510.86 1210.54 L1510.28 1210.54 L1509.69 1210.54 L1509.11 1210.54 L1508.52 1210.54 L1507.93 1210.54 L1507.35 1210.54 L1506.76 1210.54 L1506.17 1210.54 L1505.59 1210.54 L1505 1210.54 L1504.41 1210.54 L1503.83 1210.54 L1503.24 1210.54 L1502.65 1210.54 L1502.07 1210.54 L1501.48 1210.54 L1500.9 1210.54 L1500.31 1210.54 L1499.72 1210.54 L1499.14 1210.54 L1498.55 1210.54 L1497.96 1210.54 L1497.38 1210.54 L1496.79 1210.54 L1496.2 1210.54 L1495.62 1210.54 L1495.03 1210.54 L1494.45 1210.54 L1493.86 1210.54 L1493.27 1210.54 L1492.69 1210.54 L1492.1 1210.54 L1491.51 1210.54 L1490.93 1210.54 L1490.34 1210.54 L1489.75 1210.54 L1489.17 1210.54 L1488.58 1210.54 L1487.99 1210.54 L1487.41 1210.54 L1486.82 1210.54 L1486.24 1210.54 L1485.65 1210.54 L1485.06 1210.54 L1484.48 1210.54 L1483.89 1210.54 L1483.3 1210.54 L1482.72 1210.54 L1482.13 1210.54 L1481.54 1210.54 L1480.96 1210.54 L1480.37 1210.54 L1479.78 1210.54 L1479.2 1210.54 L1478.61 1210.54 L1478.03 1210.54 L1477.44 1210.54 L1476.85 1210.54 L1476.27 1210.54 L1475.68 1210.54 L1475.09 1210.54 L1474.51 1210.54 L1473.92 1210.54 L1473.33 1210.54 L1472.75 1210.54 L1472.16 1210.54 L1471.57 1210.54 L1470.99 1210.54 L1470.4 1210.54 L1469.82 1210.54 L1469.23 1210.54 L1468.64 1210.54 L1468.06 1210.54 L1467.47 1210.54 L1466.88 1210.54 L1466.3 1210.54 L1465.71 1210.54 L1465.12 1210.54 L1464.54 1210.54 L1463.95 1210.54 L1463.37 1210.54 L1462.78 1210.54 L1462.19 1210.54 L1461.61 1210.54 L1461.02 1210.54 L1460.43 1210.54 L1459.85 1210.54 L1459.26 1210.54 L1458.67 1210.54 L1458.09 1210.54 L1457.5 1210.54 L1456.91 1210.54 L1456.33 1210.54 L1455.74 1210.54 L1455.16 1210.54 L1454.57 1210.54 L1453.98 1210.54 L1453.4 1210.54 L1452.81 1210.54 L1452.22 1210.54 L1451.64 1210.54 L1451.05 1210.54 L1450.46 1210.54 L1449.88 1210.54 L1449.29 1210.54 L1448.7 1210.54 L1448.12 1210.54 L1447.53 1210.54 L1446.95 1210.54 L1446.36 1210.54 L1445.77 1210.54 L1445.19 1210.54 L1444.6 1210.54 L1444.01 1210.54 L1443.43 1210.54 L1442.84 1210.54 L1442.25 1210.54 L1441.67 1210.54 L1441.08 1210.54 L1440.5 1210.54 L1439.91 1210.54 L1439.32 1210.54 L1438.74 1210.54 L1438.15 1210.54 L1437.56 1210.54 L1436.98 1210.54 L1436.39 1210.54 L1435.8 1210.54 L1435.22 1210.54 L1434.63 1210.54 L1434.04 1210.54 L1433.46 1210.54 L1432.87 1210.54 L1432.29 1210.54 L1431.7 1210.54 L1431.11 1210.54 L1430.53 1210.54 L1429.94 1210.54 L1429.35 1210.54 L1428.77 1210.54 L1428.18 1210.54 L1427.59 1210.54 L1427.01 1210.54 L1426.42 1210.54 L1425.83 1210.54 L1425.25 1210.54 L1424.66 1210.54 L1424.08 1210.54 L1423.49 1210.54 L1422.9 1210.54 L1422.32 1210.54 L1421.73 1210.54 L1421.14 1210.54 L1420.56 1210.54 L1419.97 1210.54 L1419.38 1210.54 L1418.8 1210.54 L1418.21 1210.54 L1417.63 1210.54 L1417.04 1210.54 L1416.45 1210.54 L1415.87 1210.54 L1415.28 1210.54 L1414.69 1210.54 L1414.11 1210.54 L1413.52 1210.54 L1412.93 1210.54 L1412.35 1210.54 L1411.76 1210.54 L1411.17 1210.54 L1410.59 1210.54 L1410 1210.54 L1409.42 1210.54 L1408.83 1210.54 L1408.24 1210.54 L1407.66 1210.54 L1407.07 1210.54 L1406.48 1210.54 L1405.9 1210.54 L1405.31 1210.54 L1404.72 1210.54 L1404.14 1210.54 L1403.55 1210.54 L1402.96 1210.54 L1402.38 1210.54 L1401.79 1210.54 L1401.21 1210.54 L1400.62 1210.54 L1400.03 1210.54 L1399.45 1210.54 L1398.86 1210.54 L1398.27 1210.54 L1397.69 1210.54 L1397.1 1210.54 L1396.51 1210.54 L1395.93 1210.54 L1395.34 1210.54 L1394.75 1210.54 L1394.17 1210.54 L1393.58 1210.54 L1393 1210.54 L1392.41 1210.54 L1391.82 1210.54 L1391.24 1210.54 L1390.65 1210.54 L1390.06 1210.54 L1389.48 1210.54 L1388.89 1210.54 L1388.3 1210.54 L1387.72 1210.54 L1387.13 1210.54 L1386.55 1210.54 L1385.96 1210.54 L1385.37 1210.54 L1384.79 1210.54 L1384.2 1210.54 L1383.61 1210.54 L1383.03 1210.54 L1382.44 1210.54 L1381.85 1210.54 L1381.27 1210.54 L1380.68 1210.54 L1380.09 1210.54 L1379.51 1210.54 L1378.92 1210.54 L1378.34 1210.54 L1377.75 1210.54 L1377.16 1210.54 L1376.58 1210.54 L1375.99 1210.54 L1375.4 1210.54 L1374.82 1210.54 L1374.23 1210.54 L1373.64 1210.54 L1373.06 1210.54 L1372.47 1210.54 L1371.88 1210.54 L1371.3 1210.54 L1370.71 1210.54 L1370.13 1210.54 L1369.54 1210.54 L1368.95 1210.54 L1368.37 1210.54 L1367.78 1210.54 L1367.19 1210.54 L1366.61 1210.54 L1366.02 1210.54 L1365.43 1210.54 L1364.85 1210.54 L1364.26 1210.54 L1363.68 1210.54 L1363.09 1210.54 L1362.5 1210.54 L1361.92 1210.54 L1361.33 1210.54 L1360.74 1210.54 L1360.16 1210.54 L1359.57 1210.54 L1358.98 1210.54 L1358.4 1210.54 L1357.81 1210.54 L1357.22 1210.54 L1356.64 1210.54 L1356.05 1210.54 L1355.47 1210.54 L1354.88 1210.54 L1354.29 1210.54 L1353.71 1210.54 L1353.12 1210.54 L1352.53 1210.54 L1351.95 1210.54 L1351.36 1210.54 L1350.77 1210.54 L1350.19 1210.54 L1349.6 1210.54 L1349.01 1210.54 L1348.43 1210.54 L1347.84 1210.54 L1347.26 1210.54 L1346.67 1210.54 L1346.08 1210.54 L1345.5 1210.54 L1344.91 1210.54 L1344.32 1210.54 L1343.74 1210.54 L1343.15 1210.54 L1342.56 1210.54 L1341.98 1210.54 L1341.39 1210.54 L1340.8 1210.54 L1340.22 1210.54 L1339.63 1210.54 L1339.05 1210.54 L1338.46 1210.54 L1337.87 1210.54 L1337.29 1210.54 L1336.7 1210.54 L1336.11 1210.54 L1335.53 1210.54 L1334.94 1210.54 L1334.35 1210.54 L1333.77 1210.54 L1333.18 1210.54 L1332.6 1210.54 L1332.01 1210.54 L1331.42 1210.54 L1330.84 1210.54 L1330.25 1210.54 L1329.66 1210.54 L1329.08 1210.54 L1328.49 1210.54 L1327.9 1210.54 L1327.32 1210.54 L1326.73 1210.54 L1326.14 1210.54 L1325.56 1210.54 L1324.97 1210.54 L1324.39 1210.54 L1323.8 1210.54 L1323.21 1210.54 L1322.63 1210.54 L1322.04 1210.54 L1321.45 1210.54 L1320.87 1210.54 L1320.28 1210.54 L1319.69 1210.54 L1319.11 1210.54 L1318.52 1210.54 L1317.93 1210.54 L1317.35 1210.54 L1316.76 1210.54 L1316.18 1210.54 L1315.59 1210.54 L1315 1210.54 L1314.42 1210.54 L1313.83 1210.54 L1313.24 1210.54 L1312.66 1210.54 L1312.07 1210.54 L1311.48 1210.54 L1310.9 1210.54 L1310.31 1210.54 L1309.73 1210.54 L1309.14 1210.54 L1308.55 1210.54 L1307.97 1210.54 L1307.38 1210.54 L1306.79 1210.54 L1306.21 1210.54 L1305.62 1210.54 L1305.03 1210.54 L1304.45 1210.54 L1303.86 1210.54 L1303.27 1210.54 L1302.69 1210.54 L1302.1 1210.54 L1301.52 1210.54 L1300.93 1210.54 L1300.34 1210.54 L1299.76 1210.54 L1299.17 1210.54 L1298.58 1210.54 L1298 1210.54 L1297.41 1210.54 L1296.82 1210.54 L1296.24 1210.54 L1295.65 1210.54 L1295.06 1210.54 L1294.48 1210.54 L1293.89 1210.54 L1293.31 1210.54 L1292.72 1210.54 L1292.13 1210.54 L1291.55 1210.54 L1290.96 1210.54 L1290.37 1210.54 L1289.79 1210.54 L1289.2 1210.54 L1288.61 1210.54 L1288.03 1210.54 L1287.44 1210.54 L1286.86 1210.54 L1286.27 1210.54 L1285.68 1210.54 L1285.1 1210.54 L1284.51 1210.54 L1283.92 1210.54 L1283.34 1210.54 L1282.75 1210.54 L1282.16 1210.54 L1281.58 1210.54 L1280.99 1210.54 L1280.4 1210.54 L1279.82 1210.54 L1279.23 1210.54 L1278.65 1210.54 L1278.06 1210.54 L1277.47 1210.54 L1276.89 1210.54 L1276.3 1210.54 L1275.71 1210.54 L1275.13 1210.54 L1274.54 1210.54 L1273.95 1210.54 L1273.37 1210.54 L1272.78 1210.54 L1272.19 1210.54 L1271.61 1210.54 L1271.02 1210.54 L1270.44 1210.54 L1269.85 1210.54 L1269.26 1210.54 L1268.68 1210.54 L1268.09 1210.54 L1267.5 1210.54 L1266.92 1210.54 L1266.33 1210.54 L1265.74 1210.54 L1265.16 1210.54 L1264.57 1210.54 L1263.98 1210.54 L1263.4 1210.54 L1262.81 1210.54 L1262.23 1210.54 L1261.64 1210.54 L1261.05 1210.54 L1260.47 1210.54 L1259.88 1210.54 L1259.29 1210.54 L1258.71 1210.54 L1258.12 1210.54 L1257.53 1210.54 L1256.95 1210.54 L1256.36 1210.54 L1255.78 1210.54 L1255.19 1210.54 L1254.6 1210.54 L1254.02 1210.54 L1253.43 1210.54 L1252.84 1210.54 L1252.26 1210.54 L1251.67 1210.54 L1251.08 1210.54 L1250.5 1210.54 L1249.91 1210.54 L1249.32 1210.54 L1248.74 1210.54 L1248.15 1210.54 L1247.57 1210.54 L1246.98 1210.54 L1246.39 1210.54 L1245.81 1210.54 L1245.22 1210.54 L1244.63 1210.54 L1244.05 1210.54 L1243.46 1210.54 L1242.87 1210.54 L1242.29 1210.54 L1241.7 1210.54 L1241.11 1210.54 L1240.53 1210.54 L1239.94 1210.54 L1239.36 1210.54 L1238.77 1210.54 L1238.18 1210.54 L1237.6 1210.54 L1237.01 1210.54 L1236.42 1210.54 L1235.84 1210.54 L1235.25 1210.54 L1234.66 1210.54 L1234.08 1210.54 L1233.49 1210.54 L1232.91 1210.54 L1232.32 1210.54 L1231.73 1210.54 L1231.15 1210.54 L1230.56 1210.54 L1229.97 1210.54 L1229.39 1210.54 L1228.8 1210.54 L1228.21 1210.54 L1227.63 1210.54 L1227.04 1210.54 L1226.45 1210.54 L1225.87 1210.54 L1225.28 1210.54 L1224.7 1210.54 L1224.11 1210.54 L1223.52 1210.54 L1222.94 1210.54 L1222.35 1210.54 L1221.76 1210.54 L1221.18 1210.54 L1220.59 1210.54 L1220 1210.54 L1219.42 1210.54 L1218.83 1210.54 L1218.24 1210.54 L1217.66 1210.54 L1217.07 1210.54 L1216.49 1210.54 L1215.9 1210.54 L1215.31 1210.54 L1214.73 1210.54 L1214.14 1210.54 L1213.55 1210.54 L1212.97 1210.54 L1212.38 1210.54 L1211.79 1210.54 L1211.21 1210.54 L1210.62 1210.54 L1210.03 1210.54 L1209.45 1210.54 L1208.86 1210.54 L1208.28 1210.54 L1207.69 1210.54 L1207.1 1210.54 L1206.52 1210.54 L1205.93 1210.54 L1205.34 1210.54 L1204.76 1210.54 L1204.17 1210.54 L1203.58 1210.54 L1203 1210.54 L1202.41 1210.54 L1201.83 1210.54 L1201.24 1210.54 L1200.65 1210.54 L1200.07 1210.54 L1199.48 1210.54 L1198.89 1210.54 L1198.31 1210.54 L1197.72 1210.54 L1197.13 1210.54 L1196.55 1210.54 L1195.96 1210.54 L1195.37 1210.54 L1194.79 1210.54 L1194.2 1210.54 L1193.62 1210.54 L1193.03 1210.54 L1192.44 1210.54 L1191.86 1210.54 L1191.27 1210.54 L1190.68 1210.54 L1190.1 1210.54 L1189.51 1210.54 L1188.92 1210.54 L1188.34 1210.54 L1187.75 1210.54 L1187.16 1210.54 L1186.58 1210.54 L1185.99 1210.54 L1185.41 1210.54 L1184.82 1210.54 L1184.23 1210.54 L1183.65 1210.54 L1183.06 1210.54 L1182.47 1210.54 L1181.89 1210.54 L1181.3 1210.54 L1180.71 1210.54 L1180.13 1210.54 L1179.54 1210.54 L1178.96 1210.54 L1178.37 1210.54 L1177.78 1210.54 L1177.2 1210.54 L1176.61 1210.54 L1176.02 1210.54 L1175.44 1210.54 L1174.85 1210.54 L1174.26 1210.54 L1173.68 1210.54 L1173.09 1210.54 L1172.5 1210.54 L1171.92 1210.54 L1171.33 1210.54 L1170.75 1210.54 L1170.16 1210.54 L1169.57 1210.54 L1168.99 1210.54 L1168.4 1210.54 L1167.81 1210.54 L1167.23 1210.54 L1166.64 1210.54 L1166.05 1210.54 L1165.47 1210.54 L1164.88 1210.54 L1164.29 1210.54 L1163.71 1210.54 L1163.12 1210.54 L1162.54 1210.54 L1161.95 1210.54 L1161.36 1210.54 L1160.78 1210.54 L1160.19 1210.54 L1159.6 1210.54 L1159.02 1210.54 L1158.43 1210.54 L1157.84 1210.54 L1157.26 1210.54 L1156.67 1210.54 L1156.09 1210.54 L1155.5 1210.54 L1154.91 1210.54 L1154.33 1210.54 L1153.74 1210.54 L1153.15 1210.54 L1152.57 1210.54 L1151.98 1210.54 L1151.39 1210.54 L1150.81 1210.54 L1150.22 1210.54 L1149.63 1210.54 L1149.05 1210.54 L1148.46 1210.54 L1147.88 1210.54 L1147.29 1210.54 L1146.7 1210.54 L1146.12 1210.54 L1145.53 1210.54 L1144.94 1210.54 L1144.36 1210.54 L1143.77 1210.54 L1143.18 1210.54 L1142.6 1210.54 L1142.01 1210.54 L1141.42 1210.54 L1140.84 1210.54 L1140.25 1210.54 L1139.67 1210.54 L1139.08 1210.54 L1138.49 1210.54 L1137.91 1210.54 L1137.32 1210.54 L1136.73 1210.54 L1136.15 1210.54 L1135.56 1210.54 L1134.97 1210.54 L1134.39 1210.54 L1133.8 1210.54 L1133.21 1210.54 L1132.63 1210.54 L1132.04 1210.54 L1131.46 1210.54 L1130.87 1210.54 L1130.28 1210.54 L1129.7 1210.54 L1129.11 1210.54 L1128.52 1210.54 L1127.94 1210.54 L1127.35 1210.54 L1126.76 1210.54 L1126.18 1210.54 L1125.59 1210.54 L1125.01 1210.54 L1124.42 1210.54 L1123.83 1210.54 L1123.25 1210.54 L1122.66 1210.54 L1122.07 1210.54 L1121.49 1210.54 L1120.9 1210.54 L1120.31 1210.54 L1119.73 1210.54 L1119.14 1210.54 L1118.55 1210.54 L1117.97 1210.54 L1117.38 1210.54 L1116.8 1210.54 L1116.21 1210.54 L1115.62 1210.54 L1115.04 1210.54 L1114.45 1210.54 L1113.86 1210.54 L1113.28 1210.54 L1112.69 1210.54 L1112.1 1210.54 L1111.52 1210.54 L1110.93 1210.54 L1110.34 1210.54 L1109.76 1210.54 L1109.17 1210.54 L1108.59 1210.54 L1108 1210.54 L1107.41 1210.54 L1106.83 1210.54 L1106.24 1210.54 L1105.65 1210.54 L1105.07 1210.54 L1104.48 1210.54 L1103.89 1210.54 L1103.31 1210.54 L1102.72 1210.54 L1102.14 1210.54 L1101.55 1210.54 L1100.96 1210.54 L1100.38 1210.54 L1099.79 1210.54 L1099.2 1210.54 L1098.62 1210.54 L1098.03 1210.54 L1097.44 1210.54 L1096.86 1210.54 L1096.27 1210.54 L1095.68 1210.54 L1095.1 1210.54 L1094.51 1210.54 L1093.93 1210.54 L1093.34 1210.54 L1092.75 1210.54 L1092.17 1210.54 L1091.58 1210.54 L1090.99 1210.54 L1090.41 1210.54 L1089.82 1210.54 L1089.23 1210.54 L1088.65 1210.54 L1088.06 1210.54 L1087.47 1210.54 L1086.89 1210.54 L1086.3 1210.54 L1085.72 1210.54 L1085.13 1210.54 L1084.54 1210.54 L1083.96 1210.54 L1083.37 1210.54 L1082.78 1210.54 L1082.2 1210.54 L1081.61 1210.54 L1081.02 1210.54 L1080.44 1210.54 L1079.85 1210.54 L1079.26 1210.54 L1078.68 1210.54 L1078.09 1210.54 L1077.51 1210.54 L1076.92 1210.54 L1076.33 1210.54 L1075.75 1210.54 L1075.16 1210.54 L1074.57 1210.54 L1073.99 1210.54 L1073.4 1210.54 L1072.81 1210.54 L1072.23 1210.54 L1071.64 1210.54 L1071.06 1210.54 L1070.47 1210.54 L1069.88 1210.54 L1069.3 1210.54 L1068.71 1210.54 L1068.12 1210.54 L1067.54 1210.54 L1066.95 1210.54 L1066.36 1210.54 L1065.78 1210.54 L1065.19 1210.54 L1064.6 1210.54 L1064.02 1210.54 L1063.43 1210.54 L1062.85 1210.54 L1062.26 1210.54 L1061.67 1210.54 L1061.09 1210.54 L1060.5 1210.54 L1059.91 1210.54 L1059.33 1210.54 L1058.74 1210.54 L1058.15 1210.54 L1057.57 1210.54 L1056.98 1210.54 L1056.39 1210.54 L1055.81 1210.54 L1055.22 1210.54 L1054.64 1210.54 L1054.05 1210.54 L1053.46 1210.54 L1052.88 1210.54 L1052.29 1210.54 L1051.7 1210.54 L1051.12 1210.54 L1050.53 1210.54 L1049.94 1210.54 L1049.36 1210.54 L1048.77 1210.54 L1048.19 1210.54 L1047.6 1210.54 L1047.01 1210.54 L1046.43 1210.54 L1045.84 1210.54 L1045.25 1210.54 L1044.67 1210.54 L1044.08 1210.54 L1043.49 1210.54 L1042.91 1210.54 L1042.32 1210.54 L1041.73 1210.54 L1041.15 1210.54 L1040.56 1210.54 L1039.98 1210.54 L1039.39 1210.54 L1038.8 1210.54 L1038.22 1210.54 L1037.63 1210.54 L1037.04 1210.54 L1036.46 1210.54 L1035.87 1210.54 L1035.28 1210.54 L1034.7 1210.54 L1034.11 1210.54 L1033.52 1210.54 L1032.94 1210.54 L1032.35 1210.54 L1031.77 1210.54 L1031.18 1210.54 L1030.59 1210.54 L1030.01 1210.54 L1029.42 1210.54 L1028.83 1210.54 L1028.25 1210.54 L1027.66 1210.54 L1027.07 1210.54 L1026.49 1210.54 L1025.9 1210.54 L1025.32 1210.54 L1024.73 1210.54 L1024.14 1210.54 L1023.56 1210.54 L1022.97 1210.54 L1022.38 1210.54 L1021.8 1210.54 L1021.21 1210.54 L1020.62 1210.54 L1020.04 1210.54 L1019.45 1210.54 L1018.86 1210.54 L1018.28 1210.54 L1017.69 1210.54 L1017.11 1210.54 L1016.52 1210.54 L1015.93 1210.54 L1015.35 1210.54 L1014.76 1210.54 L1014.17 1210.54 L1013.59 1210.54 L1013 1210.54 L1012.41 1210.54 L1011.83 1210.54 L1011.24 1210.54 L1010.65 1210.54 L1010.07 1210.54 L1009.48 1210.54 L1008.9 1210.54 L1008.31 1210.54 L1007.72 1210.54 L1007.14 1210.54 L1006.55 1210.54 L1005.96 1210.54 L1005.38 1210.54 L1004.79 1210.54 L1004.2 1210.54 L1003.62 1210.54 L1003.03 1210.54 L1002.44 1210.54 L1001.86 1210.54 L1001.27 1210.54 L1000.69 1210.54 L1000.1 1210.54 L999.513 1210.54 L998.926 1210.54 L998.34 1210.54 L997.754 1210.54 L997.167 1210.54 L996.581 1210.54 L995.994 1210.54 L995.408 1210.54 L994.822 1210.54 L994.235 1210.54 L993.649 1210.54 L993.062 1210.54 L992.476 1210.54 L991.889 1210.54 L991.303 1210.54 L990.717 1210.54 L990.13 1210.54 L989.544 1210.54 L988.957 1210.54 L988.371 1210.54 L987.785 1210.54 L987.198 1210.54 L986.612 1210.54 L986.025 1210.54  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.88 986.612,1210.88 987.198,1210.88 987.785,1210.88 988.371,1210.88 988.957,1210.88 989.544,1210.88 990.13,1210.88 990.717,1210.88 991.303,1210.88 991.889,1210.88 992.476,1210.88 993.062,1210.88 993.649,1210.88 994.235,1210.88 994.822,1210.88 995.408,1210.88 995.994,1210.88 996.581,1210.88 997.167,1210.88 997.754,1210.88 998.34,1210.88 998.926,1210.88 999.513,1210.88 1000.1,1210.88 1000.69,1210.88 1001.27,1210.88 1001.86,1210.88 1002.44,1210.88 1003.03,1210.88 1003.62,1210.88 1004.2,1210.88 1004.79,1210.88 1005.38,1210.88 1005.96,1210.88 1006.55,1210.88 1007.14,1210.88 1007.72,1210.88 1008.31,1210.88 1008.9,1210.88 1009.48,1210.88 1010.07,1210.88 1010.65,1210.88 1011.24,1210.88 1011.83,1210.88 1012.41,1210.88 1013,1210.88 1013.59,1210.88 1014.17,1210.88 1014.76,1210.88 1015.35,1210.88 1015.93,1210.88 1016.52,1210.88 1017.11,1210.88 1017.69,1210.88 1018.28,1210.88 1018.86,1210.88 1019.45,1210.88 1020.04,1210.88 1020.62,1210.88 1021.21,1210.88 1021.8,1210.88 1022.38,1210.88 1022.97,1210.88 1023.56,1210.88 1024.14,1210.88 1024.73,1210.88 1025.32,1210.88 1025.9,1210.88 1026.49,1210.88 1027.07,1210.88 1027.66,1210.88 1028.25,1210.88 1028.83,1210.88 1029.42,1210.88 1030.01,1210.88 1030.59,1210.88 1031.18,1210.88 1031.77,1210.88 1032.35,1210.88 1032.94,1210.88 1033.52,1210.88 1034.11,1210.88 1034.7,1210.88 1035.28,1210.88 1035.87,1210.88 1036.46,1210.88 1037.04,1210.88 1037.63,1210.88 1038.22,1210.88 1038.8,1210.88 1039.39,1210.88 1039.98,1210.88 1040.56,1210.88 1041.15,1210.88 1041.73,1210.88 1042.32,1210.88 1042.91,1210.88 1043.49,1210.88 1044.08,1210.88 1044.67,1210.88 1045.25,1210.88 1045.84,1210.88 1046.43,1210.88 1047.01,1210.88 1047.6,1210.88 1048.19,1210.88 1048.77,1210.88 1049.36,1210.88 1049.94,1210.88 1050.53,1210.88 1051.12,1210.88 1051.7,1210.88 1052.29,1210.88 1052.88,1210.88 1053.46,1210.88 1054.05,1210.88 1054.64,1210.88 1055.22,1210.88 1055.81,1210.88 1056.39,1210.88 1056.98,1210.88 1057.57,1210.88 1058.15,1210.88 1058.74,1210.88 1059.33,1210.88 1059.91,1210.88 1060.5,1210.88 1061.09,1210.88 1061.67,1210.88 1062.26,1210.88 1062.85,1210.88 1063.43,1210.88 1064.02,1210.88 1064.6,1210.88 1065.19,1210.88 1065.78,1210.88 1066.36,1210.88 1066.95,1210.88 1067.54,1210.88 1068.12,1210.88 1068.71,1210.88 1069.3,1210.88 1069.88,1210.88 1070.47,1210.88 1071.06,1210.88 1071.64,1210.88 1072.23,1210.88 1072.81,1210.88 1073.4,1210.88 1073.99,1210.88 1074.57,1210.88 1075.16,1210.88 1075.75,1210.88 1076.33,1210.88 1076.92,1210.88 1077.51,1210.88 1078.09,1210.88 1078.68,1210.88 1079.26,1210.88 1079.85,1210.88 1080.44,1210.88 1081.02,1210.88 1081.61,1210.88 1082.2,1210.88 1082.78,1210.88 1083.37,1210.88 1083.96,1210.88 1084.54,1210.88 1085.13,1210.88 1085.72,1210.88 1086.3,1210.88 1086.89,1210.88 1087.47,1210.88 1088.06,1210.88 1088.65,1210.88 1089.23,1210.88 1089.82,1210.88 1090.41,1210.88 1090.99,1210.88 1091.58,1210.88 1092.17,1210.88 1092.75,1210.88 1093.34,1210.88 1093.93,1210.88 1094.51,1210.88 1095.1,1210.88 1095.68,1210.88 1096.27,1210.88 1096.86,1210.88 1097.44,1210.88 1098.03,1210.88 1098.62,1210.88 1099.2,1210.88 1099.79,1210.88 1100.38,1210.88 1100.96,1210.88 1101.55,1210.88 1102.14,1210.88 1102.72,1210.88 1103.31,1210.88 1103.89,1210.88 1104.48,1210.88 1105.07,1210.88 1105.65,1210.88 1106.24,1210.88 1106.83,1210.88 1107.41,1210.88 1108,1210.88 1108.59,1210.88 1109.17,1210.88 1109.76,1210.88 1110.34,1210.88 1110.93,1210.88 1111.52,1210.88 1112.1,1210.88 1112.69,1210.88 1113.28,1210.88 1113.86,1210.88 1114.45,1210.88 1115.04,1210.88 1115.62,1210.88 1116.21,1210.88 1116.8,1210.88 1117.38,1210.88 1117.97,1210.88 1118.55,1210.88 1119.14,1210.88 1119.73,1210.88 1120.31,1210.88 1120.9,1210.88 1121.49,1210.88 1122.07,1210.88 1122.66,1210.88 1123.25,1210.88 1123.83,1210.88 1124.42,1210.88 1125.01,1210.88 1125.59,1210.88 1126.18,1210.88 1126.76,1210.88 1127.35,1210.88 1127.94,1210.88 1128.52,1210.88 1129.11,1210.88 1129.7,1210.88 1130.28,1210.88 1130.87,1210.88 1131.46,1210.88 1132.04,1210.88 1132.63,1210.88 1133.21,1210.88 1133.8,1210.88 1134.39,1210.88 1134.97,1210.88 1135.56,1210.88 1136.15,1210.88 1136.73,1210.88 1137.32,1210.88 1137.91,1210.88 1138.49,1210.88 1139.08,1210.88 1139.67,1210.88 1140.25,1210.88 1140.84,1210.88 1141.42,1210.88 1142.01,1210.88 1142.6,1210.88 1143.18,1210.88 1143.77,1210.88 1144.36,1210.88 1144.94,1210.88 1145.53,1210.88 1146.12,1210.88 1146.7,1210.88 1147.29,1210.88 1147.88,1210.88 1148.46,1210.88 1149.05,1210.88 1149.63,1210.88 1150.22,1210.88 1150.81,1210.88 1151.39,1210.88 1151.98,1210.88 1152.57,1210.88 1153.15,1210.88 1153.74,1210.88 1154.33,1210.88 1154.91,1210.88 1155.5,1210.88 1156.09,1210.88 1156.67,1210.88 1157.26,1210.88 1157.84,1210.88 1158.43,1210.88 1159.02,1210.88 1159.6,1210.88 1160.19,1210.88 1160.78,1210.88 1161.36,1210.88 1161.95,1210.88 1162.54,1210.88 1163.12,1210.88 1163.71,1210.88 1164.29,1210.88 1164.88,1210.88 1165.47,1210.88 1166.05,1210.88 1166.64,1210.88 1167.23,1210.88 1167.81,1210.88 1168.4,1210.88 1168.99,1210.88 1169.57,1210.88 1170.16,1210.88 1170.75,1210.88 1171.33,1210.88 1171.92,1210.88 1172.5,1210.88 1173.09,1210.88 1173.68,1210.88 1174.26,1210.88 1174.85,1210.88 1175.44,1210.88 1176.02,1210.88 1176.61,1210.88 1177.2,1210.88 1177.78,1210.88 1178.37,1210.88 1178.96,1210.88 1179.54,1210.88 1180.13,1210.88 1180.71,1210.88 1181.3,1210.88 1181.89,1210.88 1182.47,1210.88 1183.06,1210.88 1183.65,1210.88 1184.23,1210.88 1184.82,1210.88 1185.41,1210.88 1185.99,1210.88 1186.58,1210.88 1187.16,1210.88 1187.75,1210.88 1188.34,1210.88 1188.92,1210.88 1189.51,1210.88 1190.1,1210.88 1190.68,1210.88 1191.27,1210.88 1191.86,1210.88 1192.44,1210.88 1193.03,1210.88 1193.62,1210.88 1194.2,1210.88 1194.79,1210.88 1195.37,1210.88 1195.96,1210.88 1196.55,1210.88 1197.13,1210.88 1197.72,1210.88 1198.31,1210.88 1198.89,1210.88 1199.48,1210.88 1200.07,1210.88 1200.65,1210.88 1201.24,1210.88 1201.83,1210.88 1202.41,1210.88 1203,1210.88 1203.58,1210.88 1204.17,1210.88 1204.76,1210.88 1205.34,1210.88 1205.93,1210.88 1206.52,1210.88 1207.1,1210.88 1207.69,1210.88 1208.28,1210.88 1208.86,1210.88 1209.45,1210.88 1210.03,1210.88 1210.62,1210.88 1211.21,1210.88 1211.79,1210.88 1212.38,1210.88 1212.97,1210.88 1213.55,1210.88 1214.14,1210.88 1214.73,1210.88 1215.31,1210.88 1215.9,1210.88 1216.49,1210.88 1217.07,1210.88 1217.66,1210.88 1218.24,1210.88 1218.83,1210.88 1219.42,1210.88 1220,1210.88 1220.59,1210.88 1221.18,1210.88 1221.76,1210.88 1222.35,1210.88 1222.94,1210.88 1223.52,1210.88 1224.11,1210.88 1224.7,1210.88 1225.28,1210.88 1225.87,1210.88 1226.45,1210.88 1227.04,1210.88 1227.63,1210.88 1228.21,1210.88 1228.8,1210.88 1229.39,1210.88 1229.97,1210.88 1230.56,1210.88 1231.15,1210.88 1231.73,1210.88 1232.32,1210.88 1232.91,1210.88 1233.49,1210.88 1234.08,1210.88 1234.66,1210.88 1235.25,1210.88 1235.84,1210.88 1236.42,1210.88 1237.01,1210.88 1237.6,1210.88 1238.18,1210.88 1238.77,1210.88 1239.36,1210.88 1239.94,1210.88 1240.53,1210.88 1241.11,1210.88 1241.7,1210.88 1242.29,1210.88 1242.87,1210.88 1243.46,1210.88 1244.05,1210.88 1244.63,1210.88 1245.22,1210.88 1245.81,1210.88 1246.39,1210.88 1246.98,1210.88 1247.57,1210.88 1248.15,1210.88 1248.74,1210.88 1249.32,1210.88 1249.91,1210.88 1250.5,1210.88 1251.08,1210.88 1251.67,1210.88 1252.26,1210.88 1252.84,1210.88 1253.43,1210.88 1254.02,1210.88 1254.6,1210.88 1255.19,1210.88 1255.78,1210.88 1256.36,1210.88 1256.95,1210.88 1257.53,1210.88 1258.12,1210.88 1258.71,1210.88 1259.29,1210.88 1259.88,1210.88 1260.47,1210.88 1261.05,1210.88 1261.64,1210.88 1262.23,1210.88 1262.81,1210.88 1263.4,1210.88 1263.98,1210.88 1264.57,1210.88 1265.16,1210.88 1265.74,1210.88 1266.33,1210.88 1266.92,1210.88 1267.5,1210.88 1268.09,1210.88 1268.68,1210.88 1269.26,1210.88 1269.85,1210.88 1270.44,1210.88 1271.02,1210.88 1271.61,1210.88 1272.19,1210.88 1272.78,1210.88 1273.37,1210.88 1273.95,1210.88 1274.54,1210.88 1275.13,1210.88 1275.71,1210.88 1276.3,1210.88 1276.89,1210.88 1277.47,1210.88 1278.06,1210.88 1278.65,1210.88 1279.23,1210.88 1279.82,1210.88 1280.4,1210.88 1280.99,1210.88 1281.58,1210.88 1282.16,1210.88 1282.75,1210.88 1283.34,1210.88 1283.92,1210.88 1284.51,1210.88 1285.1,1210.88 1285.68,1210.88 1286.27,1210.88 1286.86,1210.88 1287.44,1210.88 1288.03,1210.88 1288.61,1210.88 1289.2,1210.88 1289.79,1210.88 1290.37,1210.88 1290.96,1210.88 1291.55,1210.88 1292.13,1210.88 1292.72,1210.88 1293.31,1210.88 1293.89,1210.88 1294.48,1210.88 1295.06,1210.88 1295.65,1210.88 1296.24,1210.88 1296.82,1210.88 1297.41,1210.88 1298,1210.88 1298.58,1210.88 1299.17,1210.88 1299.76,1210.88 1300.34,1210.88 1300.93,1210.88 1301.52,1210.88 1302.1,1210.88 1302.69,1210.88 1303.27,1210.88 1303.86,1210.88 1304.45,1210.88 1305.03,1210.88 1305.62,1210.88 1306.21,1210.88 1306.79,1210.88 1307.38,1210.88 1307.97,1210.88 1308.55,1210.88 1309.14,1210.88 1309.73,1210.88 1310.31,1210.88 1310.9,1210.88 1311.48,1210.88 1312.07,1210.88 1312.66,1210.88 1313.24,1210.88 1313.83,1210.88 1314.42,1210.88 1315,1210.88 1315.59,1210.88 1316.18,1210.88 1316.76,1210.88 1317.35,1210.88 1317.93,1210.88 1318.52,1210.88 1319.11,1210.88 1319.69,1210.88 1320.28,1210.88 1320.87,1210.88 1321.45,1210.88 1322.04,1210.88 1322.63,1210.88 1323.21,1210.88 1323.8,1210.88 1324.39,1210.88 1324.97,1210.88 1325.56,1210.88 1326.14,1210.88 1326.73,1210.88 1327.32,1210.88 1327.9,1210.88 1328.49,1210.88 1329.08,1210.88 1329.66,1210.88 1330.25,1210.88 1330.84,1210.88 1331.42,1210.88 1332.01,1210.88 1332.6,1210.88 1333.18,1210.88 1333.77,1210.88 1334.35,1210.88 1334.94,1210.88 1335.53,1210.88 1336.11,1210.88 1336.7,1210.88 1337.29,1210.88 1337.87,1210.88 1338.46,1210.88 1339.05,1210.88 1339.63,1210.88 1340.22,1210.88 1340.8,1210.88 1341.39,1210.88 1341.98,1210.88 1342.56,1210.88 1343.15,1210.88 1343.74,1210.88 1344.32,1210.88 1344.91,1210.88 1345.5,1210.88 1346.08,1210.88 1346.67,1210.88 1347.26,1210.88 1347.84,1210.88 1348.43,1210.88 1349.01,1210.88 1349.6,1210.88 1350.19,1210.88 1350.77,1210.88 1351.36,1210.88 1351.95,1210.88 1352.53,1210.88 1353.12,1210.88 1353.71,1210.88 1354.29,1210.88 1354.88,1210.88 1355.47,1210.88 1356.05,1210.88 1356.64,1210.88 1357.22,1210.88 1357.81,1210.88 1358.4,1210.88 1358.98,1210.88 1359.57,1210.88 1360.16,1210.88 1360.74,1210.88 1361.33,1210.88 1361.92,1210.88 1362.5,1210.88 1363.09,1210.88 1363.68,1210.88 1364.26,1210.88 1364.85,1210.88 1365.43,1210.88 1366.02,1210.88 1366.61,1210.88 1367.19,1210.88 1367.78,1210.88 1368.37,1210.88 1368.95,1210.88 1369.54,1210.88 1370.13,1210.88 1370.71,1210.88 1371.3,1210.88 1371.88,1210.88 1372.47,1210.88 1373.06,1210.88 1373.64,1210.88 1374.23,1210.88 1374.82,1210.88 1375.4,1210.88 1375.99,1210.88 1376.58,1210.88 1377.16,1210.88 1377.75,1210.88 1378.34,1210.88 1378.92,1210.88 1379.51,1210.88 1380.09,1210.88 1380.68,1210.88 1381.27,1210.88 1381.85,1210.88 1382.44,1210.88 1383.03,1210.88 1383.61,1210.88 1384.2,1210.88 1384.79,1210.88 1385.37,1210.88 1385.96,1210.88 1386.55,1210.88 1387.13,1210.88 1387.72,1210.88 1388.3,1210.88 1388.89,1210.88 1389.48,1210.88 1390.06,1210.88 1390.65,1210.88 1391.24,1210.88 1391.82,1210.88 1392.41,1210.88 1393,1210.88 1393.58,1210.88 1394.17,1210.88 1394.75,1210.88 1395.34,1210.88 1395.93,1210.88 1396.51,1210.88 1397.1,1210.88 1397.69,1210.88 1398.27,1210.88 1398.86,1210.88 1399.45,1210.88 1400.03,1210.88 1400.62,1210.88 1401.21,1210.88 1401.79,1210.88 1402.38,1210.88 1402.96,1210.88 1403.55,1210.88 1404.14,1210.88 1404.72,1210.88 1405.31,1210.88 1405.9,1210.88 1406.48,1210.88 1407.07,1210.88 1407.66,1210.88 1408.24,1210.88 1408.83,1210.88 1409.42,1210.88 1410,1210.88 1410.59,1210.88 1411.17,1210.88 1411.76,1210.88 1412.35,1210.88 1412.93,1210.88 1413.52,1210.88 1414.11,1210.88 1414.69,1210.88 1415.28,1210.88 1415.87,1210.88 1416.45,1210.88 1417.04,1210.88 1417.63,1210.88 1418.21,1210.88 1418.8,1210.88 1419.38,1210.88 1419.97,1210.88 1420.56,1210.88 1421.14,1210.88 1421.73,1210.88 1422.32,1210.88 1422.9,1210.88 1423.49,1210.88 1424.08,1210.88 1424.66,1210.88 1425.25,1210.88 1425.83,1210.88 1426.42,1210.88 1427.01,1210.88 1427.59,1210.88 1428.18,1210.88 1428.77,1210.88 1429.35,1210.88 1429.94,1210.88 1430.53,1210.88 1431.11,1210.88 1431.7,1210.88 1432.29,1210.88 1432.87,1210.88 1433.46,1210.88 1434.04,1210.88 1434.63,1210.88 1435.22,1210.88 1435.8,1210.88 1436.39,1210.88 1436.98,1210.88 1437.56,1210.88 1438.15,1210.88 1438.74,1210.88 1439.32,1210.88 1439.91,1210.88 1440.5,1210.88 1441.08,1210.88 1441.67,1210.88 1442.25,1210.88 1442.84,1210.88 1443.43,1210.88 1444.01,1210.88 1444.6,1210.88 1445.19,1210.88 1445.77,1210.88 1446.36,1210.88 1446.95,1210.88 1447.53,1210.88 1448.12,1210.88 1448.7,1210.88 1449.29,1210.88 1449.88,1210.88 1450.46,1210.88 1451.05,1210.88 1451.64,1210.88 1452.22,1210.88 1452.81,1210.88 1453.4,1210.88 1453.98,1210.88 1454.57,1210.88 1455.16,1210.88 1455.74,1210.88 1456.33,1210.88 1456.91,1210.88 1457.5,1210.88 1458.09,1210.88 1458.67,1210.88 1459.26,1210.88 1459.85,1210.88 1460.43,1210.88 1461.02,1210.88 1461.61,1210.88 1462.19,1210.88 1462.78,1210.88 1463.37,1210.88 1463.95,1210.88 1464.54,1210.88 1465.12,1210.88 1465.71,1210.88 1466.3,1210.88 1466.88,1210.88 1467.47,1210.88 1468.06,1210.88 1468.64,1210.88 1469.23,1210.88 1469.82,1210.88 1470.4,1210.88 1470.99,1210.88 1471.57,1210.88 1472.16,1210.88 1472.75,1210.88 1473.33,1210.88 1473.92,1210.88 1474.51,1210.88 1475.09,1210.88 1475.68,1210.88 1476.27,1210.88 1476.85,1210.88 1477.44,1210.88 1478.03,1210.88 1478.61,1210.88 1479.2,1210.88 1479.78,1210.88 1480.37,1210.88 1480.96,1210.88 1481.54,1210.88 1482.13,1210.88 1482.72,1210.88 1483.3,1210.88 1483.89,1210.88 1484.48,1210.88 1485.06,1210.88 1485.65,1210.88 1486.24,1210.88 1486.82,1210.88 1487.41,1210.88 1487.99,1210.88 1488.58,1210.88 1489.17,1210.88 1489.75,1210.88 1490.34,1210.88 1490.93,1210.88 1491.51,1210.88 1492.1,1210.88 1492.69,1210.88 1493.27,1210.88 1493.86,1210.88 1494.45,1210.88 1495.03,1210.88 1495.62,1210.88 1496.2,1210.88 1496.79,1210.88 1497.38,1210.88 1497.96,1210.88 1498.55,1210.88 1499.14,1210.88 1499.72,1210.88 1500.31,1210.88 1500.9,1210.88 1501.48,1210.88 1502.07,1210.88 1502.65,1210.88 1503.24,1210.88 1503.83,1210.88 1504.41,1210.88 1505,1210.88 1505.59,1210.88 1506.17,1210.88 1506.76,1210.88 1507.35,1210.88 1507.93,1210.88 1508.52,1210.88 1509.11,1210.88 1509.69,1210.88 1510.28,1210.88 1510.86,1210.88 1511.45,1210.88 1512.04,1210.88 1512.62,1210.88 1513.21,1210.88 1513.8,1210.88 1514.38,1210.88 1514.97,1210.88 1515.56,1210.88 1516.14,1210.88 1516.73,1210.88 1517.32,1210.88 1517.9,1210.88 1518.49,1210.88 1519.07,1210.88 1519.66,1210.88 1520.25,1210.88 1520.83,1210.88 1521.42,1210.88 1522.01,1210.88 1522.59,1210.88 1523.18,1210.88 1523.77,1210.88 1524.35,1210.88 1524.94,1210.88 1525.52,1210.88 1526.11,1210.88 1526.7,1210.88 1527.28,1210.88 1527.87,1210.88 1528.46,1210.88 1529.04,1210.88 1529.63,1210.88 1530.22,1210.88 1530.8,1210.88 1531.39,1210.88 1531.98,1210.88 1532.56,1210.88 1533.15,1210.88 1533.73,1210.88 1534.32,1210.88 1534.91,1210.88 1535.49,1210.88 1536.08,1210.88 1536.67,1210.88 1537.25,1210.88 1537.84,1210.88 1538.43,1210.88 1539.01,1210.88 1539.6,1210.88 1540.19,1210.88 1540.77,1210.88 1541.36,1210.88 1541.94,1210.88 1542.53,1210.88 1543.12,1210.88 1543.7,1210.88 1544.29,1210.88 1544.88,1210.88 1545.46,1210.88 1546.05,1210.88 1546.64,1210.88 1547.22,1210.88 1547.81,1210.88 1548.4,1210.88 1548.98,1210.88 1549.57,1210.88 1550.15,1210.88 1550.74,1210.88 1551.33,1210.88 1551.91,1210.88 1552.5,1210.88 1553.09,1210.88 1553.67,1210.88 1554.26,1210.88 1554.85,1210.88 1555.43,1210.88 1556.02,1210.88 1556.6,1210.88 1557.19,1210.88 1557.78,1210.88 1558.36,1210.88 1558.95,1210.88 1559.54,1210.88 1560.12,1210.88 1560.71,1210.88 1561.3,1210.88 1561.88,1210.88 1562.47,1210.88 1563.06,1210.88 1563.64,1210.88 1564.23,1210.88 1564.81,1210.88 1565.4,1210.88 1565.99,1210.88 1566.57,1210.88 1567.16,1210.88 1567.75,1210.88 1568.33,1210.88 1568.92,1210.88 1569.51,1210.88 1570.09,1210.88 1570.68,1210.88 1571.27,1210.88 1571.85,1210.88 1572.44,1210.88 1573.02,1210.88 1573.61,1210.88 1574.2,1210.88 1574.78,1210.88 1575.37,1210.88 1575.96,1210.88 1576.54,1210.88 1577.13,1210.88 1577.72,1210.88 1578.3,1210.88 1578.89,1210.88 1579.47,1210.88 1580.06,1210.88 1580.65,1210.88 1581.23,1210.88 1581.82,1210.88 1582.41,1210.88 1582.99,1210.88 1583.58,1210.88 1584.17,1210.88 1584.75,1210.88 1585.34,1210.88 1585.93,1210.88 1586.51,1210.88 1587.1,1210.88 1587.68,1210.88 1588.27,1210.88 1588.86,1210.88 1589.44,1210.88 1590.03,1210.88 1590.62,1210.88 1591.2,1210.88 1591.79,1210.88 1592.38,1210.88 1592.96,1210.88 1593.55,1210.88 1594.14,1210.88 1594.72,1210.88 1595.31,1210.88 1595.89,1210.88 1596.48,1210.88 1597.07,1210.88 1597.65,1210.88 1598.24,1210.88 1598.83,1210.88 1599.41,1210.88 1600,1210.88 1600.59,1210.88 1601.17,1210.88 1601.76,1210.88 1602.34,1210.88 1602.93,1210.88 1603.52,1210.88 1604.1,1210.88 1604.69,1210.88 1605.28,1210.88 1605.86,1210.88 1606.45,1210.88 1607.04,1210.88 1607.62,1210.88 1608.21,1210.88 1608.8,1210.88 1609.38,1210.88 1609.97,1210.88 1610.55,1210.88 1611.14,1210.88 1611.73,1210.88 1612.31,1210.88 1612.9,1210.88 1613.49,1210.88 1614.07,1210.88 1614.66,1210.88 1615.25,1210.88 1615.83,1210.88 1616.42,1210.88 1617.01,1210.88 1617.59,1210.88 1618.18,1210.88 1618.76,1210.88 1619.35,1210.88 1619.94,1210.88 1620.52,1210.88 1621.11,1210.88 1621.7,1210.88 1622.28,1210.88 1622.87,1210.88 1623.46,1210.88 1624.04,1210.88 1624.63,1210.88 1625.22,1210.88 1625.8,1210.88 1626.39,1210.88 1626.97,1210.88 1627.56,1210.88 1628.15,1210.88 1628.73,1210.88 1629.32,1210.88 1629.91,1210.88 1630.49,1210.88 1631.08,1210.88 1631.67,1210.88 1632.25,1210.88 1632.84,1210.88 1633.42,1210.88 1634.01,1210.88 1634.6,1210.88 1635.18,1210.88 1635.77,1210.88 1636.36,1210.88 1636.94,1210.88 1637.53,1210.88 1638.12,1210.88 1638.7,1210.88 1639.29,1210.88 1639.88,1210.88 1640.46,1210.88 1641.05,1210.88 1641.63,1210.88 1642.22,1210.88 1642.81,1210.88 1643.39,1210.88 1643.98,1210.88 1644.57,1210.88 1645.15,1210.88 1645.74,1210.88 1646.33,1210.88 1646.91,1210.88 1647.5,1210.88 1648.09,1210.88 1648.67,1210.88 1649.26,1210.88 1649.84,1210.88 1650.43,1210.88 1651.02,1210.88 1651.6,1210.88 1652.19,1210.88 1652.78,1210.88 1653.36,1210.88 1653.95,1210.88 1654.54,1210.88 1655.12,1210.88 1655.71,1210.88 1656.29,1210.88 1656.88,1210.88 1657.47,1210.88 1658.05,1210.88 1658.64,1210.88 1659.23,1210.88 1659.81,1210.88 1660.4,1210.88 1660.99,1210.88 1661.57,1210.88 1662.16,1210.88 1662.75,1210.88 1663.33,1210.88 1663.92,1210.88 1664.5,1210.88 1665.09,1210.88 1665.68,1210.88 1666.26,1210.88 1666.85,1210.88 1667.44,1210.88 1668.02,1210.88 1668.61,1210.88 1669.2,1210.88 1669.78,1210.88 1670.37,1210.88 1670.96,1210.88 1671.54,1210.88 1672.13,1210.88 1672.71,1210.88 1673.3,1210.88 1673.89,1210.88 1674.47,1210.88 1675.06,1210.88 1675.65,1210.88 1676.23,1210.88 1676.82,1210.88 1677.41,1210.88 1677.99,1210.88 1678.58,1210.88 1679.17,1210.88 1679.75,1210.88 1680.34,1210.88 1680.92,1210.88 1681.51,1210.88 1682.1,1210.88 1682.68,1210.88 1683.27,1210.88 1683.86,1210.88 1684.44,1210.88 1685.03,1210.88 1685.62,1210.88 1686.2,1210.88 1686.79,1210.88 1687.37,1210.88 1687.96,1210.88 1688.55,1210.88 1689.13,1210.88 1689.72,1210.88 1690.31,1210.88 1690.89,1210.88 1691.48,1210.88 1692.07,1210.88 1692.65,1210.88 1693.24,1210.88 1693.83,1210.88 1694.41,1210.88 1695,1210.88 1695.58,1210.88 1696.17,1210.88 1696.76,1210.88 1697.34,1210.88 1697.93,1210.88 1698.52,1210.88 1699.1,1210.88 1699.69,1210.88 1700.28,1210.88 1700.86,1210.88 1701.45,1210.88 1702.04,1210.88 1702.62,1210.88 1703.21,1210.88 1703.79,1210.88 1704.38,1210.88 1704.97,1210.88 1705.55,1210.88 1706.14,1210.88 1706.73,1210.88 1707.31,1210.88 1707.9,1210.88 1708.49,1210.88 1709.07,1210.88 1709.66,1210.88 1710.24,1210.88 1710.83,1210.88 1711.42,1210.88 1712,1210.88 1712.59,1210.88 1713.18,1210.88 1713.76,1210.88 1714.35,1210.88 1714.94,1210.88 1715.52,1210.88 1716.11,1210.88 1716.7,1210.88 1717.28,1210.88 1717.87,1210.88 1718.45,1210.88 1719.04,1210.88 1719.63,1210.88 1720.21,1210.88 1720.8,1210.88 1721.39,1210.88 1721.97,1210.88 1722.56,1210.88 1723.15,1210.88 1723.73,1210.88 1724.32,1210.88 1724.91,1210.88 1725.49,1210.88 1726.08,1210.88 1726.66,1210.88 1727.25,1210.88 1727.84,1210.88 1728.42,1210.88 1729.01,1210.88 1729.6,1210.88 1730.18,1210.88 1730.77,1210.88 1731.36,1210.88 1731.94,1210.88 1732.53,1210.88 1733.11,1210.88 1733.7,1210.88 1734.29,1210.88 1734.87,1210.88 1735.46,1210.88 1736.05,1210.88 1736.63,1210.88 1737.22,1210.88 1737.81,1210.88 1738.39,1210.88 1738.98,1210.88 1739.57,1210.88 1740.15,1210.88 1740.74,1210.88 1741.32,1210.88 1741.91,1210.88 1742.5,1210.88 1743.08,1210.88 1743.67,1210.88 1744.26,1210.88 1744.84,1210.88 1745.43,1210.88 1746.02,1210.88 1746.6,1210.88 1747.19,1210.88 1747.78,1210.88 1748.36,1210.88 1748.95,1210.88 1749.53,1210.88 1750.12,1210.88 1750.71,1210.88 1751.29,1210.88 1751.88,1210.88 1752.47,1210.88 1753.05,1210.88 1753.64,1210.88 1754.23,1210.88 1754.81,1210.88 1755.4,1210.88 1755.99,1210.88 1756.57,1210.88 1757.16,1210.88 1757.74,1210.88 1758.33,1210.88 1758.92,1210.88 1759.5,1210.88 1760.09,1210.88 1760.68,1210.88 1761.26,1210.88 1761.85,1210.88 1762.44,1210.88 1763.02,1210.88 1763.61,1210.88 1764.19,1210.88 1764.78,1210.88 1765.37,1210.88 1765.95,1210.88 1766.54,1210.88 1767.13,1210.88 1767.71,1210.88 1768.3,1210.88 1768.89,1210.88 1769.47,1210.88 1770.06,1210.88 1770.65,1210.88 1771.23,1210.88 1771.82,1210.88 1772.4,1210.88 1772.99,1210.88 1773.58,1210.88 1774.16,1210.88 1774.75,1210.88 1775.34,1210.88 1775.92,1210.88 1776.51,1210.88 1777.1,1210.88 1777.68,1210.88 1778.27,1210.88 1778.86,1210.88 1779.44,1210.88 1780.03,1210.88 1780.61,1210.88 1781.2,1210.88 1781.79,1210.88 1782.37,1210.88 1782.96,1210.88 1783.55,1210.88 1784.13,1210.88 1784.72,1210.88 1785.31,1210.88 1785.89,1210.88 1786.48,1210.88 1787.06,1210.88 1787.65,1210.88 1788.24,1210.88 1788.82,1210.88 1789.41,1210.88 1790,1210.88 1790.58,1210.88 1791.17,1210.88 1791.76,1210.88 1792.34,1210.88 1792.93,1210.88 1793.52,1210.88 1794.1,1210.88 1794.69,1210.88 1795.27,1210.88 1795.86,1210.88 1796.45,1210.88 1797.03,1210.88 1797.62,1210.88 1798.21,1210.88 1798.79,1210.88 1799.38,1210.88 1799.97,1210.88 1800.55,1210.88 1801.14,1210.88 1801.73,1210.88 1802.31,1210.88 1802.9,1210.88 1803.48,1210.88 1804.07,1210.88 1804.66,1210.88 1805.24,1210.88 1805.83,1210.88 1806.42,1210.88 1807,1210.88 1807.59,1210.88 1808.18,1210.88 1808.76,1210.88 1809.35,1210.88 1809.94,1210.88 1810.52,1210.88 1811.11,1210.88 1811.69,1210.88 1812.28,1210.88 1812.87,1210.88 1813.45,1210.88 1814.04,1210.88 1814.63,1210.88 1815.21,1210.88 1815.8,1210.88 1816.39,1210.88 1816.97,1210.88 1817.56,1210.88 1818.14,1210.88 1818.73,1210.88 1819.32,1210.88 1819.9,1210.88 1820.49,1210.88 1821.08,1210.88 1821.66,1210.88 1822.25,1210.88 1822.84,1210.88 1823.42,1210.88 1824.01,1210.88 1824.6,1210.88 1825.18,1210.88 1825.77,1210.88 1826.35,1210.88 1826.94,1210.88 1827.53,1210.88 1828.11,1210.88 1828.7,1210.88 1829.29,1210.88 1829.87,1210.88 1830.46,1210.88 1831.05,1210.88 1831.63,1210.88 1832.22,1210.88 1832.81,1210.88 1833.39,1210.88 1833.98,1210.88 1834.56,1210.88 1835.15,1210.88 1835.74,1210.88 1836.32,1210.88 1836.91,1210.88 1837.5,1210.88 1838.08,1210.88 1838.67,1210.88 1839.26,1210.88 1839.84,1210.88 1840.43,1210.88 1841.01,1210.88 1841.6,1210.88 1842.19,1210.88 1842.77,1210.88 1843.36,1210.88 1843.95,1210.88 1844.53,1210.88 1845.12,1210.88 1845.71,1210.88 1846.29,1210.88 1846.88,1210.88 1847.47,1210.88 1848.05,1210.88 1848.64,1210.88 1849.22,1210.88 1849.81,1210.88 1850.4,1210.88 1850.98,1210.88 1851.57,1210.88 1852.16,1210.88 1852.74,1210.88 1853.33,1210.88 1853.92,1210.88 1854.5,1210.88 1855.09,1210.88 1855.68,1210.88 1856.26,1210.88 1856.85,1210.88 1857.43,1210.88 1858.02,1210.88 1858.61,1210.88 1859.19,1210.88 1859.78,1210.88 1860.37,1210.88 1860.95,1210.88 1861.54,1210.88 1862.13,1210.88 1862.71,1210.88 1863.3,1210.88 1863.88,1210.88 1864.47,1210.88 1865.06,1210.88 1865.64,1210.88 1866.23,1210.88 1866.82,1210.88 1867.4,1210.88 1867.99,1210.88 1868.58,1210.88 1869.16,1210.88 1869.75,1210.88 1870.34,1210.88 1870.92,1210.88 1871.51,1210.88 1872.09,1210.88 1872.68,1210.88 1873.27,1210.88 1873.85,1210.88 1874.44,1210.88 1875.03,1210.88 1875.61,1210.88 1876.2,1210.88 1876.79,1210.88 1877.37,1210.88 1877.96,1210.88 1878.55,1210.88 1879.13,1210.88 1879.72,1210.88 1880.3,1210.88 1880.89,1210.88 1881.48,1210.88 1882.06,1210.88 1882.65,1210.88 1883.24,1210.88 1883.82,1210.88 1884.41,1210.88 1885,1210.88 1885.58,1210.88 1886.17,1210.88 1886.76,1210.88 1887.34,1210.88 1887.93,1210.88 1888.51,1210.88 1889.1,1210.88 1889.69,1210.88 1890.27,1210.88 1890.86,1210.88 1891.45,1210.88 1892.03,1210.88 1892.62,1210.88 1893.21,1210.88 1893.79,1210.88 1894.38,1210.88 1894.96,1210.88 1895.55,1210.88 1896.14,1210.88 1896.72,1210.88 1897.31,1210.88 1897.9,1210.88 1898.48,1210.88 1899.07,1210.88 1899.66,1210.88 1900.24,1210.88 1900.83,1210.88 1901.42,1210.88 1902,1210.88 1902.59,1210.88 1903.17,1210.88 1903.76,1210.88 1904.35,1210.88 1904.93,1210.88 1905.52,1210.88 1906.11,1210.88 1906.69,1210.88 1907.28,1210.88 1907.87,1210.88 1908.45,1210.88 1909.04,1210.88 1909.63,1210.88 1910.21,1210.88 1910.8,1210.88 1911.38,1210.88 1911.97,1210.88 1912.56,1210.88 1913.14,1210.88 1913.73,1210.88 1914.32,1210.88 1914.9,1210.88 1915.49,1210.88 1916.08,1210.88 1916.66,1210.88 1917.25,1210.88 1917.83,1210.88 1918.42,1210.88 1919.01,1210.88 1919.59,1210.88 1920.18,1210.88 1920.77,1210.88 1921.35,1210.88 1921.94,1210.88 1922.53,1210.88 1923.11,1210.88 1923.7,1210.88 1924.29,1210.88 1924.87,1210.88 1925.46,1210.88 1926.04,1210.88 1926.63,1210.88 1927.22,1210.88 1927.8,1210.88 1928.39,1210.88 1928.98,1210.88 1929.56,1210.88 1930.15,1210.88 1930.74,1210.88 1931.32,1210.88 1931.91,1210.88 1932.5,1210.88 1933.08,1210.88 1933.67,1210.88 1934.25,1210.88 1934.84,1210.88 1935.43,1210.88 1936.01,1210.88 1936.6,1210.88 1937.19,1210.88 1937.77,1210.88 1938.36,1210.88 1938.95,1210.88 1939.53,1210.88 1940.12,1210.88 1940.71,1210.88 1941.29,1210.88 1941.88,1210.88 1942.46,1210.88 1943.05,1210.88 1943.64,1210.88 1944.22,1210.88 1944.81,1210.88 1945.4,1210.88 1945.98,1210.88 1946.57,1210.88 1947.16,1210.88 1947.74,1210.88 1948.33,1210.88 1948.91,1210.88 1949.5,1210.88 1950.09,1210.88 1950.67,1210.88 1951.26,1210.88 1951.85,1210.88 1952.43,1210.88 1953.02,1210.88 1953.61,1210.88 1954.19,1210.88 1954.78,1210.88 1955.37,1210.88 1955.95,1210.88 1956.54,1210.88 1957.12,1210.88 1957.71,1210.88 1958.3,1210.88 1958.88,1210.88 1959.47,1210.88 1960.06,1210.88 1960.64,1210.88 1961.23,1210.88 1961.82,1210.88 1962.4,1210.88 1962.99,1210.88 1963.58,1210.88 1964.16,1210.88 1964.75,1210.88 1965.33,1210.88 1965.92,1210.88 1966.51,1210.88 1967.09,1210.88 1967.68,1210.88 1968.27,1210.88 1968.85,1210.88 1969.44,1210.88 1970.03,1210.88 1970.61,1210.88 1971.2,1210.88 1971.78,1210.88 1972.37,1210.88 1972.96,1210.88 1973.54,1210.88 1974.13,1210.88 1974.72,1210.88 1975.3,1210.88 1975.89,1210.88 1976.48,1210.88 1977.06,1210.88 1977.65,1210.88 1978.24,1210.88 1978.82,1210.88 1979.41,1210.88 1979.99,1210.88 1980.58,1210.88 1981.17,1210.88 1981.75,1210.88 1982.34,1210.88 1982.93,1210.88 1983.51,1210.88 1984.1,1210.88 1984.69,1210.88 1985.27,1210.88 1985.86,1210.88 1986.45,1210.88 1987.03,1210.88 1987.62,1210.88 1988.2,1210.88 1988.79,1210.88 1989.38,1210.88 1989.96,1210.88 1990.55,1210.88 1991.14,1210.88 1991.72,1210.88 1992.31,1210.88 1992.9,1210.88 1993.48,1210.88 1994.07,1210.88 1994.65,1210.88 1995.24,1210.88 1995.83,1210.88 1996.41,1210.88 1997,1210.88 1997.59,1210.88 1998.17,1210.88 1998.76,1210.88 1999.35,1210.88 1999.93,1210.88 2000.52,1210.88 2001.11,1210.88 2001.69,1210.88 2002.28,1210.88 2002.86,1210.88 2003.45,1210.88 2004.04,1210.88 2004.62,1210.88 2005.21,1210.88 2005.8,1210.88 2006.38,1210.88 2006.97,1210.88 2007.56,1210.88 2008.14,1210.88 2008.73,1210.88 2009.32,1210.88 2009.9,1210.88 2010.49,1210.88 2011.07,1210.88 2011.66,1210.88 2012.25,1210.88 2012.83,1210.88 2013.42,1210.88 2014.01,1210.88 2014.59,1210.88 2015.18,1210.88 2015.77,1210.88 2016.35,1210.88 2016.94,1210.88 2017.53,1210.88 2018.11,1210.88 2018.7,1210.88 2019.28,1210.88 2019.87,1210.88 2020.46,1210.88 2021.04,1210.88 2021.63,1210.88 2022.22,1210.88 2022.8,1210.88 2023.39,1210.88 2023.98,1210.88 2024.56,1210.88 2025.15,1210.88 2025.73,1210.88 2026.32,1210.88 2026.91,1210.88 2027.49,1210.88 2028.08,1210.88 2028.67,1210.88 2029.25,1210.88 2029.84,1210.88 2030.43,1210.88 2031.01,1210.88 2031.6,1210.88 2032.19,1210.88 2032.77,1210.88 2033.36,1210.88 2033.94,1210.88 2034.53,1210.88 2035.12,1210.88 2035.7,1210.88 2036.29,1210.88 2036.88,1210.88 2037.46,1210.88 2038.05,1210.88 2038.64,1210.88 2039.22,1210.88 2039.81,1210.88 2040.4,1210.88 2040.98,1210.88 2041.57,1210.88 2042.15,1210.88 2042.74,1210.88 2043.33,1210.88 2043.91,1210.88 2044.5,1210.88 2045.09,1210.88 2045.67,1210.88 2046.26,1210.88 2046.85,1210.88 2047.43,1210.88 2048.02,1210.88 2048.6,1210.88 2049.19,1210.88 2049.78,1210.88 2050.36,1210.88 2050.95,1210.88 2051.54,1210.88 2052.12,1210.88 2052.71,1210.88 2053.3,1210.88 2053.88,1210.88 2054.47,1210.88 2055.06,1210.88 2055.64,1210.88 2056.23,1210.88 2056.81,1210.88 2057.4,1210.88 2057.99,1210.88 2058.57,1210.88 2059.16,1210.88 2059.75,1210.88 2060.33,1210.88 2060.92,1210.88 2061.51,1210.88 2062.09,1210.88 2062.68,1210.88 2063.27,1210.88 2063.85,1210.88 2064.44,1210.88 2065.02,1210.88 2065.61,1210.88 2066.2,1210.88 2066.78,1210.88 2067.37,1210.88 2067.96,1210.88 2068.54,1210.88 2069.13,1210.88 2069.72,1210.88 2070.3,1210.88 2070.89,1210.88 2071.48,1210.88 2072.06,1210.88 2072.65,1210.88 2073.23,1210.88 2073.82,1210.88 2074.41,1210.88 2074.99,1210.88 2075.58,1210.88 2076.17,1210.88 2076.75,1210.88 2077.34,1210.88 2077.93,1210.88 2078.51,1210.88 2079.1,1210.88 2079.68,1210.88 2080.27,1210.88 2080.86,1210.88 2081.44,1210.88 2082.03,1210.88 2082.62,1210.88 2083.2,1210.88 2083.79,1210.88 2084.38,1210.88 2084.96,1210.88 2085.55,1210.88 2086.14,1210.88 2086.72,1210.88 2087.31,1210.88 2087.89,1210.88 2088.48,1210.88 2089.07,1210.88 2089.65,1210.88 2090.24,1210.88 2090.83,1210.88 2091.41,1210.88 2092,1210.88 2092.59,1210.88 2093.17,1210.88 2093.76,1210.88 2094.35,1210.88 2094.93,1210.88 2095.52,1210.88 2096.1,1210.88 2096.69,1210.88 2097.28,1210.88 2097.86,1210.88 2098.45,1210.88 2099.04,1210.88 2099.62,1210.88 2100.21,1210.88 2100.8,1210.88 2101.38,1210.88 2101.97,1210.88 2102.55,1210.88 2103.14,1210.88 2103.73,1210.88 2104.31,1210.88 2104.9,1210.88 2105.49,1210.88 2106.07,1210.88 2106.66,1210.88 2107.25,1210.88 2107.83,1210.88 2108.42,1210.88 2109.01,1210.88 2109.59,1210.88 2110.18,1210.88 2110.76,1210.88 2111.35,1210.88 2111.94,1210.88 2112.52,1210.88 2113.11,1210.88 2113.7,1210.88 2114.28,1210.88 2114.87,1210.88 2115.46,1210.88 2116.04,1210.88 2116.63,1210.88 2117.22,1210.88 2117.8,1210.88 2118.39,1210.88 2118.97,1210.88 2119.56,1210.88 2120.15,1210.88 2120.73,1210.88 2121.32,1210.88 2121.91,1210.88 2122.49,1210.88 2123.08,1210.88 2123.67,1210.88 2124.25,1210.88 2124.84,1210.88 2125.42,1210.88 2126.01,1210.88 2126.6,1210.88 2127.18,1210.88 2127.77,1210.88 2128.36,1210.88 2128.94,1210.88 2129.53,1210.88 2130.12,1210.88 2130.7,1210.88 2131.29,1210.88 2131.88,1210.88 2132.46,1210.88 2133.05,1210.88 2133.63,1210.88 2134.22,1210.88 2134.81,1210.88 2135.39,1210.88 2135.98,1210.88 2136.57,1210.88 2137.15,1210.88 2137.74,1210.88 2138.33,1210.88 2138.91,1210.88 2139.5,1210.88 2140.09,1210.88 2140.67,1210.88 2141.26,1210.88 2141.84,1210.88 2142.43,1210.88 2143.02,1210.88 2143.6,1210.88 2144.19,1210.88 2144.78,1210.88 2145.36,1210.88 2145.95,1210.88 2146.54,1210.88 2147.12,1210.88 2147.71,1210.88 2148.3,1210.88 2148.88,1210.88 2149.47,1210.88 2150.05,1210.88 2150.64,1210.88 2151.23,1210.88 2151.81,1210.88 2152.4,1210.88 2152.99,1210.88 2153.57,1210.88 2154.16,1210.88 2154.75,1210.88 2155.33,1210.88 2155.92,1210.88 2156.5,1210.88 2157.09,1210.88 2157.68,1210.88 2158.26,1210.88 \"/>\n<path clip-path=\"url(#clip322)\" d=\"M986.025 1210.65 L986.612 1210.65 L987.198 1210.65 L987.785 1210.65 L988.371 1210.65 L988.957 1210.65 L989.544 1210.65 L990.13 1210.65 L990.717 1210.65 L991.303 1210.65 L991.889 1210.65 L992.476 1210.65 L993.062 1210.65 L993.649 1210.65 L994.235 1210.65 L994.822 1210.65 L995.408 1210.65 L995.994 1210.65 L996.581 1210.65 L997.167 1210.65 L997.754 1210.65 L998.34 1210.65 L998.926 1210.65 L999.513 1210.65 L1000.1 1210.65 L1000.69 1210.65 L1001.27 1210.65 L1001.86 1210.65 L1002.44 1210.65 L1003.03 1210.65 L1003.62 1210.65 L1004.2 1210.65 L1004.79 1210.65 L1005.38 1210.65 L1005.96 1210.65 L1006.55 1210.65 L1007.14 1210.65 L1007.72 1210.65 L1008.31 1210.65 L1008.9 1210.65 L1009.48 1210.65 L1010.07 1210.65 L1010.65 1210.65 L1011.24 1210.65 L1011.83 1210.65 L1012.41 1210.65 L1013 1210.65 L1013.59 1210.65 L1014.17 1210.65 L1014.76 1210.65 L1015.35 1210.65 L1015.93 1210.65 L1016.52 1210.65 L1017.11 1210.65 L1017.69 1210.65 L1018.28 1210.65 L1018.86 1210.65 L1019.45 1210.65 L1020.04 1210.65 L1020.62 1210.65 L1021.21 1210.65 L1021.8 1210.65 L1022.38 1210.65 L1022.97 1210.65 L1023.56 1210.65 L1024.14 1210.65 L1024.73 1210.65 L1025.32 1210.65 L1025.9 1210.65 L1026.49 1210.65 L1027.07 1210.65 L1027.66 1210.65 L1028.25 1210.65 L1028.83 1210.65 L1029.42 1210.65 L1030.01 1210.65 L1030.59 1210.65 L1031.18 1210.65 L1031.77 1210.65 L1032.35 1210.65 L1032.94 1210.65 L1033.52 1210.65 L1034.11 1210.65 L1034.7 1210.65 L1035.28 1210.65 L1035.87 1210.65 L1036.46 1210.65 L1037.04 1210.65 L1037.63 1210.65 L1038.22 1210.65 L1038.8 1210.65 L1039.39 1210.65 L1039.98 1210.65 L1040.56 1210.65 L1041.15 1210.65 L1041.73 1210.65 L1042.32 1210.65 L1042.91 1210.65 L1043.49 1210.65 L1044.08 1210.65 L1044.67 1210.65 L1045.25 1210.65 L1045.84 1210.65 L1046.43 1210.65 L1047.01 1210.65 L1047.6 1210.65 L1048.19 1210.65 L1048.77 1210.65 L1049.36 1210.65 L1049.94 1210.65 L1050.53 1210.65 L1051.12 1210.65 L1051.7 1210.65 L1052.29 1210.65 L1052.88 1210.65 L1053.46 1210.65 L1054.05 1210.65 L1054.64 1210.65 L1055.22 1210.65 L1055.81 1210.65 L1056.39 1210.65 L1056.98 1210.65 L1057.57 1210.65 L1058.15 1210.65 L1058.74 1210.65 L1059.33 1210.65 L1059.91 1210.65 L1060.5 1210.65 L1061.09 1210.65 L1061.67 1210.65 L1062.26 1210.65 L1062.85 1210.65 L1063.43 1210.65 L1064.02 1210.65 L1064.6 1210.65 L1065.19 1210.65 L1065.78 1210.65 L1066.36 1210.65 L1066.95 1210.65 L1067.54 1210.65 L1068.12 1210.65 L1068.71 1210.65 L1069.3 1210.65 L1069.88 1210.65 L1070.47 1210.65 L1071.06 1210.65 L1071.64 1210.65 L1072.23 1210.65 L1072.81 1210.65 L1073.4 1210.65 L1073.99 1210.65 L1074.57 1210.65 L1075.16 1210.65 L1075.75 1210.65 L1076.33 1210.65 L1076.92 1210.65 L1077.51 1210.65 L1078.09 1210.65 L1078.68 1210.65 L1079.26 1210.65 L1079.85 1210.65 L1080.44 1210.65 L1081.02 1210.65 L1081.61 1210.65 L1082.2 1210.65 L1082.78 1210.65 L1083.37 1210.65 L1083.96 1210.65 L1084.54 1210.65 L1085.13 1210.65 L1085.72 1210.65 L1086.3 1210.65 L1086.89 1210.65 L1087.47 1210.65 L1088.06 1210.65 L1088.65 1210.65 L1089.23 1210.65 L1089.82 1210.65 L1090.41 1210.65 L1090.99 1210.65 L1091.58 1210.65 L1092.17 1210.65 L1092.75 1210.65 L1093.34 1210.65 L1093.93 1210.65 L1094.51 1210.65 L1095.1 1210.65 L1095.68 1210.65 L1096.27 1210.65 L1096.86 1210.65 L1097.44 1210.65 L1098.03 1210.65 L1098.62 1210.65 L1099.2 1210.65 L1099.79 1210.65 L1100.38 1210.65 L1100.96 1210.65 L1101.55 1210.65 L1102.14 1210.65 L1102.72 1210.65 L1103.31 1210.65 L1103.89 1210.65 L1104.48 1210.65 L1105.07 1210.65 L1105.65 1210.65 L1106.24 1210.65 L1106.83 1210.65 L1107.41 1210.65 L1108 1210.65 L1108.59 1210.65 L1109.17 1210.65 L1109.76 1210.65 L1110.34 1210.65 L1110.93 1210.65 L1111.52 1210.65 L1112.1 1210.65 L1112.69 1210.65 L1113.28 1210.65 L1113.86 1210.65 L1114.45 1210.65 L1115.04 1210.65 L1115.62 1210.65 L1116.21 1210.65 L1116.8 1210.65 L1117.38 1210.65 L1117.97 1210.65 L1118.55 1210.65 L1119.14 1210.65 L1119.73 1210.65 L1120.31 1210.65 L1120.9 1210.65 L1121.49 1210.65 L1122.07 1210.65 L1122.66 1210.65 L1123.25 1210.65 L1123.83 1210.65 L1124.42 1210.65 L1125.01 1210.65 L1125.59 1210.65 L1126.18 1210.65 L1126.76 1210.65 L1127.35 1210.65 L1127.94 1210.65 L1128.52 1210.65 L1129.11 1210.65 L1129.7 1210.65 L1130.28 1210.65 L1130.87 1210.65 L1131.46 1210.65 L1132.04 1210.65 L1132.63 1210.65 L1133.21 1210.65 L1133.8 1210.65 L1134.39 1210.65 L1134.97 1210.65 L1135.56 1210.65 L1136.15 1210.65 L1136.73 1210.65 L1137.32 1210.65 L1137.91 1210.65 L1138.49 1210.65 L1139.08 1210.65 L1139.67 1210.65 L1140.25 1210.65 L1140.84 1210.65 L1141.42 1210.65 L1142.01 1210.65 L1142.6 1210.65 L1143.18 1210.65 L1143.77 1210.65 L1144.36 1210.65 L1144.94 1210.65 L1145.53 1210.65 L1146.12 1210.65 L1146.7 1210.65 L1147.29 1210.65 L1147.88 1210.65 L1148.46 1210.65 L1149.05 1210.65 L1149.63 1210.65 L1150.22 1210.65 L1150.81 1210.65 L1151.39 1210.65 L1151.98 1210.65 L1152.57 1210.65 L1153.15 1210.65 L1153.74 1210.65 L1154.33 1210.65 L1154.91 1210.65 L1155.5 1210.65 L1156.09 1210.65 L1156.67 1210.65 L1157.26 1210.65 L1157.84 1210.65 L1158.43 1210.65 L1159.02 1210.65 L1159.6 1210.65 L1160.19 1210.65 L1160.78 1210.65 L1161.36 1210.65 L1161.95 1210.65 L1162.54 1210.65 L1163.12 1210.65 L1163.71 1210.65 L1164.29 1210.65 L1164.88 1210.65 L1165.47 1210.65 L1166.05 1210.65 L1166.64 1210.65 L1167.23 1210.65 L1167.81 1210.65 L1168.4 1210.65 L1168.99 1210.65 L1169.57 1210.65 L1170.16 1210.65 L1170.75 1210.65 L1171.33 1210.65 L1171.92 1210.65 L1172.5 1210.65 L1173.09 1210.65 L1173.68 1210.65 L1174.26 1210.65 L1174.85 1210.65 L1175.44 1210.65 L1176.02 1210.65 L1176.61 1210.65 L1177.2 1210.65 L1177.78 1210.65 L1178.37 1210.65 L1178.96 1210.65 L1179.54 1210.65 L1180.13 1210.65 L1180.71 1210.65 L1181.3 1210.65 L1181.89 1210.65 L1182.47 1210.65 L1183.06 1210.65 L1183.65 1210.65 L1184.23 1210.65 L1184.82 1210.65 L1185.41 1210.65 L1185.99 1210.65 L1186.58 1210.65 L1187.16 1210.65 L1187.75 1210.65 L1188.34 1210.65 L1188.92 1210.65 L1189.51 1210.65 L1190.1 1210.65 L1190.68 1210.65 L1191.27 1210.65 L1191.86 1210.65 L1192.44 1210.65 L1193.03 1210.65 L1193.62 1210.65 L1194.2 1210.65 L1194.79 1210.65 L1195.37 1210.65 L1195.96 1210.65 L1196.55 1210.65 L1197.13 1210.65 L1197.72 1210.65 L1198.31 1210.65 L1198.89 1210.65 L1199.48 1210.65 L1200.07 1210.65 L1200.65 1210.65 L1201.24 1210.65 L1201.83 1210.65 L1202.41 1210.65 L1203 1210.65 L1203.58 1210.65 L1204.17 1210.65 L1204.76 1210.65 L1205.34 1210.65 L1205.93 1210.65 L1206.52 1210.65 L1207.1 1210.65 L1207.69 1210.65 L1208.28 1210.65 L1208.86 1210.65 L1209.45 1210.65 L1210.03 1210.65 L1210.62 1210.65 L1211.21 1210.65 L1211.79 1210.65 L1212.38 1210.65 L1212.97 1210.65 L1213.55 1210.65 L1214.14 1210.65 L1214.73 1210.65 L1215.31 1210.65 L1215.9 1210.65 L1216.49 1210.65 L1217.07 1210.65 L1217.66 1210.65 L1218.24 1210.65 L1218.83 1210.65 L1219.42 1210.65 L1220 1210.65 L1220.59 1210.65 L1221.18 1210.65 L1221.76 1210.65 L1222.35 1210.65 L1222.94 1210.65 L1223.52 1210.65 L1224.11 1210.65 L1224.7 1210.65 L1225.28 1210.65 L1225.87 1210.65 L1226.45 1210.65 L1227.04 1210.65 L1227.63 1210.65 L1228.21 1210.65 L1228.8 1210.65 L1229.39 1210.65 L1229.97 1210.65 L1230.56 1210.65 L1231.15 1210.65 L1231.73 1210.65 L1232.32 1210.65 L1232.91 1210.65 L1233.49 1210.65 L1234.08 1210.65 L1234.66 1210.65 L1235.25 1210.65 L1235.84 1210.65 L1236.42 1210.65 L1237.01 1210.65 L1237.6 1210.65 L1238.18 1210.65 L1238.77 1210.65 L1239.36 1210.65 L1239.94 1210.65 L1240.53 1210.65 L1241.11 1210.65 L1241.7 1210.65 L1242.29 1210.65 L1242.87 1210.65 L1243.46 1210.65 L1244.05 1210.65 L1244.63 1210.65 L1245.22 1210.65 L1245.81 1210.65 L1246.39 1210.65 L1246.98 1210.65 L1247.57 1210.65 L1248.15 1210.65 L1248.74 1210.65 L1249.32 1210.65 L1249.91 1210.65 L1250.5 1210.65 L1251.08 1210.65 L1251.67 1210.65 L1252.26 1210.65 L1252.84 1210.65 L1253.43 1210.65 L1254.02 1210.65 L1254.6 1210.65 L1255.19 1210.65 L1255.78 1210.65 L1256.36 1210.65 L1256.95 1210.65 L1257.53 1210.65 L1258.12 1210.65 L1258.71 1210.65 L1259.29 1210.65 L1259.88 1210.65 L1260.47 1210.65 L1261.05 1210.65 L1261.64 1210.65 L1262.23 1210.65 L1262.81 1210.65 L1263.4 1210.65 L1263.98 1210.65 L1264.57 1210.65 L1265.16 1210.65 L1265.74 1210.65 L1266.33 1210.65 L1266.92 1210.65 L1267.5 1210.65 L1268.09 1210.65 L1268.68 1210.65 L1269.26 1210.65 L1269.85 1210.65 L1270.44 1210.65 L1271.02 1210.65 L1271.61 1210.65 L1272.19 1210.65 L1272.78 1210.65 L1273.37 1210.65 L1273.95 1210.65 L1274.54 1210.65 L1275.13 1210.65 L1275.71 1210.65 L1276.3 1210.65 L1276.89 1210.65 L1277.47 1210.65 L1278.06 1210.65 L1278.65 1210.65 L1279.23 1210.65 L1279.82 1210.65 L1280.4 1210.65 L1280.99 1210.65 L1281.58 1210.65 L1282.16 1210.65 L1282.75 1210.65 L1283.34 1210.65 L1283.92 1210.65 L1284.51 1210.65 L1285.1 1210.65 L1285.68 1210.65 L1286.27 1210.65 L1286.86 1210.65 L1287.44 1210.65 L1288.03 1210.65 L1288.61 1210.65 L1289.2 1210.65 L1289.79 1210.65 L1290.37 1210.65 L1290.96 1210.65 L1291.55 1210.65 L1292.13 1210.65 L1292.72 1210.65 L1293.31 1210.65 L1293.89 1210.65 L1294.48 1210.65 L1295.06 1210.65 L1295.65 1210.65 L1296.24 1210.65 L1296.82 1210.65 L1297.41 1210.65 L1298 1210.65 L1298.58 1210.65 L1299.17 1210.65 L1299.76 1210.65 L1300.34 1210.65 L1300.93 1210.65 L1301.52 1210.65 L1302.1 1210.65 L1302.69 1210.65 L1303.27 1210.65 L1303.86 1210.65 L1304.45 1210.65 L1305.03 1210.65 L1305.62 1210.65 L1306.21 1210.65 L1306.79 1210.65 L1307.38 1210.65 L1307.97 1210.65 L1308.55 1210.65 L1309.14 1210.65 L1309.73 1210.65 L1310.31 1210.65 L1310.9 1210.65 L1311.48 1210.65 L1312.07 1210.65 L1312.66 1210.65 L1313.24 1210.65 L1313.83 1210.65 L1314.42 1210.65 L1315 1210.65 L1315.59 1210.65 L1316.18 1210.65 L1316.76 1210.65 L1317.35 1210.65 L1317.93 1210.65 L1318.52 1210.65 L1319.11 1210.65 L1319.69 1210.65 L1320.28 1210.65 L1320.87 1210.65 L1321.45 1210.65 L1322.04 1210.65 L1322.63 1210.65 L1323.21 1210.65 L1323.8 1210.65 L1324.39 1210.65 L1324.97 1210.65 L1325.56 1210.65 L1326.14 1210.65 L1326.73 1210.65 L1327.32 1210.65 L1327.9 1210.65 L1328.49 1210.65 L1329.08 1210.65 L1329.66 1210.65 L1330.25 1210.65 L1330.84 1210.65 L1331.42 1210.65 L1332.01 1210.65 L1332.6 1210.65 L1333.18 1210.65 L1333.77 1210.65 L1334.35 1210.65 L1334.94 1210.65 L1335.53 1210.65 L1336.11 1210.65 L1336.7 1210.65 L1337.29 1210.65 L1337.87 1210.65 L1338.46 1210.65 L1339.05 1210.65 L1339.63 1210.65 L1340.22 1210.65 L1340.8 1210.65 L1341.39 1210.65 L1341.98 1210.65 L1342.56 1210.65 L1343.15 1210.65 L1343.74 1210.65 L1344.32 1210.65 L1344.91 1210.65 L1345.5 1210.65 L1346.08 1210.65 L1346.67 1210.65 L1347.26 1210.65 L1347.84 1210.65 L1348.43 1210.65 L1349.01 1210.65 L1349.6 1210.65 L1350.19 1210.65 L1350.77 1210.65 L1351.36 1210.65 L1351.95 1210.65 L1352.53 1210.65 L1353.12 1210.65 L1353.71 1210.65 L1354.29 1210.65 L1354.88 1210.65 L1355.47 1210.65 L1356.05 1210.65 L1356.64 1210.65 L1357.22 1210.65 L1357.81 1210.65 L1358.4 1210.65 L1358.98 1210.65 L1359.57 1210.65 L1360.16 1210.65 L1360.74 1210.65 L1361.33 1210.65 L1361.92 1210.65 L1362.5 1210.65 L1363.09 1210.65 L1363.68 1210.65 L1364.26 1210.65 L1364.85 1210.65 L1365.43 1210.65 L1366.02 1210.65 L1366.61 1210.65 L1367.19 1210.65 L1367.78 1210.65 L1368.37 1210.65 L1368.95 1210.65 L1369.54 1210.65 L1370.13 1210.65 L1370.71 1210.65 L1371.3 1210.65 L1371.88 1210.65 L1372.47 1210.65 L1373.06 1210.65 L1373.64 1210.65 L1374.23 1210.65 L1374.82 1210.65 L1375.4 1210.65 L1375.99 1210.65 L1376.58 1210.65 L1377.16 1210.65 L1377.75 1210.65 L1378.34 1210.65 L1378.92 1210.65 L1379.51 1210.65 L1380.09 1210.65 L1380.68 1210.65 L1381.27 1210.65 L1381.85 1210.65 L1382.44 1210.65 L1383.03 1210.65 L1383.61 1210.65 L1384.2 1210.65 L1384.79 1210.65 L1385.37 1210.65 L1385.96 1210.65 L1386.55 1210.65 L1387.13 1210.65 L1387.72 1210.65 L1388.3 1210.65 L1388.89 1210.65 L1389.48 1210.65 L1390.06 1210.65 L1390.65 1210.65 L1391.24 1210.65 L1391.82 1210.65 L1392.41 1210.65 L1393 1210.65 L1393.58 1210.65 L1394.17 1210.65 L1394.75 1210.65 L1395.34 1210.65 L1395.93 1210.65 L1396.51 1210.65 L1397.1 1210.65 L1397.69 1210.65 L1398.27 1210.65 L1398.86 1210.65 L1399.45 1210.65 L1400.03 1210.65 L1400.62 1210.65 L1401.21 1210.65 L1401.79 1210.65 L1402.38 1210.65 L1402.96 1210.65 L1403.55 1210.65 L1404.14 1210.65 L1404.72 1210.65 L1405.31 1210.65 L1405.9 1210.65 L1406.48 1210.65 L1407.07 1210.65 L1407.66 1210.65 L1408.24 1210.65 L1408.83 1210.65 L1409.42 1210.65 L1410 1210.65 L1410.59 1210.65 L1411.17 1210.65 L1411.76 1210.65 L1412.35 1210.65 L1412.93 1210.65 L1413.52 1210.65 L1414.11 1210.65 L1414.69 1210.65 L1415.28 1210.65 L1415.87 1210.65 L1416.45 1210.65 L1417.04 1210.65 L1417.63 1210.65 L1418.21 1210.65 L1418.8 1210.65 L1419.38 1210.65 L1419.97 1210.65 L1420.56 1210.65 L1421.14 1210.65 L1421.73 1210.65 L1422.32 1210.65 L1422.9 1210.65 L1423.49 1210.65 L1424.08 1210.65 L1424.66 1210.65 L1425.25 1210.65 L1425.83 1210.65 L1426.42 1210.65 L1427.01 1210.65 L1427.59 1210.65 L1428.18 1210.65 L1428.77 1210.65 L1429.35 1210.65 L1429.94 1210.65 L1430.53 1210.65 L1431.11 1210.65 L1431.7 1210.65 L1432.29 1210.65 L1432.87 1210.65 L1433.46 1210.65 L1434.04 1210.65 L1434.63 1210.65 L1435.22 1210.65 L1435.8 1210.65 L1436.39 1210.65 L1436.98 1210.65 L1437.56 1210.65 L1438.15 1210.65 L1438.74 1210.65 L1439.32 1210.65 L1439.91 1210.65 L1440.5 1210.65 L1441.08 1210.65 L1441.67 1210.65 L1442.25 1210.65 L1442.84 1210.65 L1443.43 1210.65 L1444.01 1210.65 L1444.6 1210.65 L1445.19 1210.65 L1445.77 1210.65 L1446.36 1210.65 L1446.95 1210.65 L1447.53 1210.65 L1448.12 1210.65 L1448.7 1210.65 L1449.29 1210.65 L1449.88 1210.65 L1450.46 1210.65 L1451.05 1210.65 L1451.64 1210.65 L1452.22 1210.65 L1452.81 1210.65 L1453.4 1210.65 L1453.98 1210.65 L1454.57 1210.65 L1455.16 1210.65 L1455.74 1210.65 L1456.33 1210.65 L1456.91 1210.65 L1457.5 1210.65 L1458.09 1210.65 L1458.67 1210.65 L1459.26 1210.65 L1459.85 1210.65 L1460.43 1210.65 L1461.02 1210.65 L1461.61 1210.65 L1462.19 1210.65 L1462.78 1210.65 L1463.37 1210.65 L1463.95 1210.65 L1464.54 1210.65 L1465.12 1210.65 L1465.71 1210.65 L1466.3 1210.65 L1466.88 1210.65 L1467.47 1210.65 L1468.06 1210.65 L1468.64 1210.65 L1469.23 1210.65 L1469.82 1210.65 L1470.4 1210.65 L1470.99 1210.65 L1471.57 1210.65 L1472.16 1210.65 L1472.75 1210.65 L1473.33 1210.65 L1473.92 1210.65 L1474.51 1210.65 L1475.09 1210.65 L1475.68 1210.65 L1476.27 1210.65 L1476.85 1210.65 L1477.44 1210.65 L1478.03 1210.65 L1478.61 1210.65 L1479.2 1210.65 L1479.78 1210.65 L1480.37 1210.65 L1480.96 1210.65 L1481.54 1210.65 L1482.13 1210.65 L1482.72 1210.65 L1483.3 1210.65 L1483.89 1210.65 L1484.48 1210.65 L1485.06 1210.65 L1485.65 1210.65 L1486.24 1210.65 L1486.82 1210.65 L1487.41 1210.65 L1487.99 1210.65 L1488.58 1210.65 L1489.17 1210.65 L1489.75 1210.65 L1490.34 1210.65 L1490.93 1210.65 L1491.51 1210.65 L1492.1 1210.65 L1492.69 1210.65 L1493.27 1210.65 L1493.86 1210.65 L1494.45 1210.65 L1495.03 1210.65 L1495.62 1210.65 L1496.2 1210.65 L1496.79 1210.65 L1497.38 1210.65 L1497.96 1210.65 L1498.55 1210.65 L1499.14 1210.65 L1499.72 1210.65 L1500.31 1210.65 L1500.9 1210.65 L1501.48 1210.65 L1502.07 1210.65 L1502.65 1210.65 L1503.24 1210.65 L1503.83 1210.65 L1504.41 1210.65 L1505 1210.65 L1505.59 1210.65 L1506.17 1210.65 L1506.76 1210.65 L1507.35 1210.65 L1507.93 1210.65 L1508.52 1210.65 L1509.11 1210.65 L1509.69 1210.65 L1510.28 1210.65 L1510.86 1210.65 L1511.45 1210.65 L1512.04 1210.65 L1512.62 1210.65 L1513.21 1210.65 L1513.8 1210.65 L1514.38 1210.65 L1514.97 1210.65 L1515.56 1210.65 L1516.14 1210.65 L1516.73 1210.65 L1517.32 1210.65 L1517.9 1210.65 L1518.49 1210.65 L1519.07 1210.65 L1519.66 1210.65 L1520.25 1210.65 L1520.83 1210.65 L1521.42 1210.65 L1522.01 1210.65 L1522.59 1210.65 L1523.18 1210.65 L1523.77 1210.65 L1524.35 1210.65 L1524.94 1210.65 L1525.52 1210.65 L1526.11 1210.65 L1526.7 1210.65 L1527.28 1210.65 L1527.87 1210.65 L1528.46 1210.65 L1529.04 1210.65 L1529.63 1210.65 L1530.22 1210.65 L1530.8 1210.65 L1531.39 1210.65 L1531.98 1210.65 L1532.56 1210.65 L1533.15 1210.65 L1533.73 1210.65 L1534.32 1210.65 L1534.91 1210.65 L1535.49 1210.65 L1536.08 1210.65 L1536.67 1210.65 L1537.25 1210.65 L1537.84 1210.65 L1538.43 1210.65 L1539.01 1210.65 L1539.6 1210.65 L1540.19 1210.65 L1540.77 1210.65 L1541.36 1210.65 L1541.94 1210.65 L1542.53 1210.65 L1543.12 1210.65 L1543.7 1210.65 L1544.29 1210.65 L1544.88 1210.65 L1545.46 1210.65 L1546.05 1210.65 L1546.64 1210.65 L1547.22 1210.65 L1547.81 1210.65 L1548.4 1210.65 L1548.98 1210.65 L1549.57 1210.65 L1550.15 1210.65 L1550.74 1210.65 L1551.33 1210.65 L1551.91 1210.65 L1552.5 1210.65 L1553.09 1210.65 L1553.67 1210.65 L1554.26 1210.65 L1554.85 1210.65 L1555.43 1210.65 L1556.02 1210.65 L1556.6 1210.65 L1557.19 1210.65 L1557.78 1210.65 L1558.36 1210.65 L1558.95 1210.65 L1559.54 1210.65 L1560.12 1210.65 L1560.71 1210.65 L1561.3 1210.65 L1561.88 1210.65 L1562.47 1210.65 L1563.06 1210.65 L1563.64 1210.65 L1564.23 1210.65 L1564.81 1210.65 L1565.4 1210.65 L1565.99 1210.65 L1566.57 1210.65 L1567.16 1210.65 L1567.75 1210.65 L1568.33 1210.65 L1568.92 1210.65 L1569.51 1210.65 L1570.09 1210.65 L1570.68 1210.65 L1571.27 1210.65 L1571.85 1210.65 L1572.44 1210.65 L1573.02 1210.65 L1573.61 1210.65 L1574.2 1210.65 L1574.78 1210.65 L1575.37 1210.65 L1575.96 1210.65 L1576.54 1210.65 L1577.13 1210.65 L1577.72 1210.65 L1578.3 1210.65 L1578.89 1210.65 L1579.47 1210.65 L1580.06 1210.65 L1580.65 1210.65 L1581.23 1210.65 L1581.82 1210.65 L1582.41 1210.65 L1582.99 1210.65 L1583.58 1210.65 L1584.17 1210.65 L1584.75 1210.65 L1585.34 1210.65 L1585.93 1210.65 L1586.51 1210.65 L1587.1 1210.65 L1587.68 1210.65 L1588.27 1210.65 L1588.86 1210.65 L1589.44 1210.65 L1590.03 1210.65 L1590.62 1210.65 L1591.2 1210.65 L1591.79 1210.65 L1592.38 1210.65 L1592.96 1210.65 L1593.55 1210.65 L1594.14 1210.65 L1594.72 1210.65 L1595.31 1210.65 L1595.89 1210.65 L1596.48 1210.65 L1597.07 1210.65 L1597.65 1210.65 L1598.24 1210.65 L1598.83 1210.65 L1599.41 1210.65 L1600 1210.65 L1600.59 1210.65 L1601.17 1210.65 L1601.76 1210.65 L1602.34 1210.65 L1602.93 1210.65 L1603.52 1210.65 L1604.1 1210.65 L1604.69 1210.65 L1605.28 1210.65 L1605.86 1210.65 L1606.45 1210.65 L1607.04 1210.65 L1607.62 1210.65 L1608.21 1210.65 L1608.8 1210.65 L1609.38 1210.65 L1609.97 1210.65 L1610.55 1210.65 L1611.14 1210.65 L1611.73 1210.65 L1612.31 1210.65 L1612.9 1210.65 L1613.49 1210.65 L1614.07 1210.65 L1614.66 1210.65 L1615.25 1210.65 L1615.83 1210.65 L1616.42 1210.65 L1617.01 1210.65 L1617.59 1210.65 L1618.18 1210.65 L1618.76 1210.65 L1619.35 1210.65 L1619.94 1210.65 L1620.52 1210.65 L1621.11 1210.65 L1621.7 1210.65 L1622.28 1210.65 L1622.87 1210.65 L1623.46 1210.65 L1624.04 1210.65 L1624.63 1210.65 L1625.22 1210.65 L1625.8 1210.65 L1626.39 1210.65 L1626.97 1210.65 L1627.56 1210.65 L1628.15 1210.65 L1628.73 1210.65 L1629.32 1210.65 L1629.91 1210.65 L1630.49 1210.65 L1631.08 1210.65 L1631.67 1210.65 L1632.25 1210.65 L1632.84 1210.65 L1633.42 1210.65 L1634.01 1210.65 L1634.6 1210.65 L1635.18 1210.65 L1635.77 1210.65 L1636.36 1210.65 L1636.94 1210.65 L1637.53 1210.65 L1638.12 1210.65 L1638.7 1210.65 L1639.29 1210.65 L1639.88 1210.65 L1640.46 1210.65 L1641.05 1210.65 L1641.63 1210.65 L1642.22 1210.65 L1642.81 1210.65 L1643.39 1210.65 L1643.98 1210.65 L1644.57 1210.65 L1645.15 1210.65 L1645.74 1210.65 L1646.33 1210.65 L1646.91 1210.65 L1647.5 1210.65 L1648.09 1210.65 L1648.67 1210.65 L1649.26 1210.65 L1649.84 1210.65 L1650.43 1210.65 L1651.02 1210.65 L1651.6 1210.65 L1652.19 1210.65 L1652.78 1210.65 L1653.36 1210.65 L1653.95 1210.65 L1654.54 1210.65 L1655.12 1210.65 L1655.71 1210.65 L1656.29 1210.65 L1656.88 1210.65 L1657.47 1210.65 L1658.05 1210.65 L1658.64 1210.65 L1659.23 1210.65 L1659.81 1210.65 L1660.4 1210.65 L1660.99 1210.65 L1661.57 1210.65 L1662.16 1210.65 L1662.75 1210.65 L1663.33 1210.65 L1663.92 1210.65 L1664.5 1210.65 L1665.09 1210.65 L1665.68 1210.65 L1666.26 1210.65 L1666.85 1210.65 L1667.44 1210.65 L1668.02 1210.65 L1668.61 1210.65 L1669.2 1210.65 L1669.78 1210.65 L1670.37 1210.65 L1670.96 1210.65 L1671.54 1210.65 L1672.13 1210.65 L1672.71 1210.65 L1673.3 1210.65 L1673.89 1210.65 L1674.47 1210.65 L1675.06 1210.65 L1675.65 1210.65 L1676.23 1210.65 L1676.82 1210.65 L1677.41 1210.65 L1677.99 1210.65 L1678.58 1210.65 L1679.17 1210.65 L1679.75 1210.65 L1680.34 1210.65 L1680.92 1210.65 L1681.51 1210.65 L1682.1 1210.65 L1682.68 1210.65 L1683.27 1210.65 L1683.86 1210.65 L1684.44 1210.65 L1685.03 1210.65 L1685.62 1210.65 L1686.2 1210.65 L1686.79 1210.65 L1687.37 1210.65 L1687.96 1210.65 L1688.55 1210.65 L1689.13 1210.65 L1689.72 1210.65 L1690.31 1210.65 L1690.89 1210.65 L1691.48 1210.65 L1692.07 1210.65 L1692.65 1210.65 L1693.24 1210.65 L1693.83 1210.65 L1694.41 1210.65 L1695 1210.65 L1695.58 1210.65 L1696.17 1210.65 L1696.76 1210.65 L1697.34 1210.65 L1697.93 1210.65 L1698.52 1210.65 L1699.1 1210.65 L1699.69 1210.65 L1700.28 1210.65 L1700.86 1210.65 L1701.45 1210.65 L1702.04 1210.65 L1702.62 1210.65 L1703.21 1210.65 L1703.79 1210.65 L1704.38 1210.65 L1704.97 1210.65 L1705.55 1210.65 L1706.14 1210.65 L1706.73 1210.65 L1707.31 1210.65 L1707.9 1210.65 L1708.49 1210.65 L1709.07 1210.65 L1709.66 1210.65 L1710.24 1210.65 L1710.83 1210.65 L1711.42 1210.65 L1712 1210.65 L1712.59 1210.65 L1713.18 1210.65 L1713.76 1210.65 L1714.35 1210.65 L1714.94 1210.65 L1715.52 1210.65 L1716.11 1210.65 L1716.7 1210.65 L1717.28 1210.65 L1717.87 1210.65 L1718.45 1210.65 L1719.04 1210.65 L1719.63 1210.65 L1720.21 1210.65 L1720.8 1210.65 L1721.39 1210.65 L1721.97 1210.65 L1722.56 1210.65 L1723.15 1210.65 L1723.73 1210.65 L1724.32 1210.65 L1724.91 1210.65 L1725.49 1210.65 L1726.08 1210.65 L1726.66 1210.65 L1727.25 1210.65 L1727.84 1210.65 L1728.42 1210.65 L1729.01 1210.65 L1729.6 1210.65 L1730.18 1210.65 L1730.77 1210.65 L1731.36 1210.65 L1731.94 1210.65 L1732.53 1210.65 L1733.11 1210.65 L1733.7 1210.65 L1734.29 1210.65 L1734.87 1210.65 L1735.46 1210.65 L1736.05 1210.65 L1736.63 1210.65 L1737.22 1210.65 L1737.81 1210.65 L1738.39 1210.65 L1738.98 1210.65 L1739.57 1210.65 L1740.15 1210.65 L1740.74 1210.65 L1741.32 1210.65 L1741.91 1210.65 L1742.5 1210.65 L1743.08 1210.65 L1743.67 1210.65 L1744.26 1210.65 L1744.84 1210.65 L1745.43 1210.65 L1746.02 1210.65 L1746.6 1210.65 L1747.19 1210.65 L1747.78 1210.65 L1748.36 1210.65 L1748.95 1210.65 L1749.53 1210.65 L1750.12 1210.65 L1750.71 1210.65 L1751.29 1210.65 L1751.88 1210.65 L1752.47 1210.65 L1753.05 1210.65 L1753.64 1210.65 L1754.23 1210.65 L1754.81 1210.65 L1755.4 1210.65 L1755.99 1210.65 L1756.57 1210.65 L1757.16 1210.65 L1757.74 1210.65 L1758.33 1210.65 L1758.92 1210.65 L1759.5 1210.65 L1760.09 1210.65 L1760.68 1210.65 L1761.26 1210.65 L1761.85 1210.65 L1762.44 1210.65 L1763.02 1210.65 L1763.61 1210.65 L1764.19 1210.65 L1764.78 1210.65 L1765.37 1210.65 L1765.95 1210.65 L1766.54 1210.65 L1767.13 1210.65 L1767.71 1210.65 L1768.3 1210.65 L1768.89 1210.65 L1769.47 1210.65 L1770.06 1210.65 L1770.65 1210.65 L1771.23 1210.65 L1771.82 1210.65 L1772.4 1210.65 L1772.99 1210.65 L1773.58 1210.65 L1774.16 1210.65 L1774.75 1210.65 L1775.34 1210.65 L1775.92 1210.65 L1776.51 1210.65 L1777.1 1210.65 L1777.68 1210.65 L1778.27 1210.65 L1778.86 1210.65 L1779.44 1210.65 L1780.03 1210.65 L1780.61 1210.65 L1781.2 1210.65 L1781.79 1210.65 L1782.37 1210.65 L1782.96 1210.65 L1783.55 1210.65 L1784.13 1210.65 L1784.72 1210.65 L1785.31 1210.65 L1785.89 1210.65 L1786.48 1210.65 L1787.06 1210.65 L1787.65 1210.65 L1788.24 1210.65 L1788.82 1210.65 L1789.41 1210.65 L1790 1210.65 L1790.58 1210.65 L1791.17 1210.65 L1791.76 1210.65 L1792.34 1210.65 L1792.93 1210.65 L1793.52 1210.65 L1794.1 1210.65 L1794.69 1210.65 L1795.27 1210.65 L1795.86 1210.65 L1796.45 1210.65 L1797.03 1210.65 L1797.62 1210.65 L1798.21 1210.65 L1798.79 1210.65 L1799.38 1210.65 L1799.97 1210.65 L1800.55 1210.65 L1801.14 1210.65 L1801.73 1210.65 L1802.31 1210.65 L1802.9 1210.65 L1803.48 1210.65 L1804.07 1210.65 L1804.66 1210.65 L1805.24 1210.65 L1805.83 1210.65 L1806.42 1210.65 L1807 1210.65 L1807.59 1210.65 L1808.18 1210.65 L1808.76 1210.65 L1809.35 1210.65 L1809.94 1210.65 L1810.52 1210.65 L1811.11 1210.65 L1811.69 1210.65 L1812.28 1210.65 L1812.87 1210.65 L1813.45 1210.65 L1814.04 1210.65 L1814.63 1210.65 L1815.21 1210.65 L1815.8 1210.65 L1816.39 1210.65 L1816.97 1210.65 L1817.56 1210.65 L1818.14 1210.65 L1818.73 1210.65 L1819.32 1210.65 L1819.9 1210.65 L1820.49 1210.65 L1821.08 1210.65 L1821.66 1210.65 L1822.25 1210.65 L1822.84 1210.65 L1823.42 1210.65 L1824.01 1210.65 L1824.6 1210.65 L1825.18 1210.65 L1825.77 1210.65 L1826.35 1210.65 L1826.94 1210.65 L1827.53 1210.65 L1828.11 1210.65 L1828.7 1210.65 L1829.29 1210.65 L1829.87 1210.65 L1830.46 1210.65 L1831.05 1210.65 L1831.63 1210.65 L1832.22 1210.65 L1832.81 1210.65 L1833.39 1210.65 L1833.98 1210.65 L1834.56 1210.65 L1835.15 1210.65 L1835.74 1210.65 L1836.32 1210.65 L1836.91 1210.65 L1837.5 1210.65 L1838.08 1210.65 L1838.67 1210.65 L1839.26 1210.65 L1839.84 1210.65 L1840.43 1210.65 L1841.01 1210.65 L1841.6 1210.65 L1842.19 1210.65 L1842.77 1210.65 L1843.36 1210.65 L1843.95 1210.65 L1844.53 1210.65 L1845.12 1210.65 L1845.71 1210.65 L1846.29 1210.65 L1846.88 1210.65 L1847.47 1210.65 L1848.05 1210.65 L1848.64 1210.65 L1849.22 1210.65 L1849.81 1210.65 L1850.4 1210.65 L1850.98 1210.65 L1851.57 1210.65 L1852.16 1210.65 L1852.74 1210.65 L1853.33 1210.65 L1853.92 1210.65 L1854.5 1210.65 L1855.09 1210.65 L1855.68 1210.65 L1856.26 1210.65 L1856.85 1210.65 L1857.43 1210.65 L1858.02 1210.65 L1858.61 1210.65 L1859.19 1210.65 L1859.78 1210.65 L1860.37 1210.65 L1860.95 1210.65 L1861.54 1210.65 L1862.13 1210.65 L1862.71 1210.65 L1863.3 1210.65 L1863.88 1210.65 L1864.47 1210.65 L1865.06 1210.65 L1865.64 1210.65 L1866.23 1210.65 L1866.82 1210.65 L1867.4 1210.65 L1867.99 1210.65 L1868.58 1210.65 L1869.16 1210.65 L1869.75 1210.65 L1870.34 1210.65 L1870.92 1210.65 L1871.51 1210.65 L1872.09 1210.65 L1872.68 1210.65 L1873.27 1210.65 L1873.85 1210.65 L1874.44 1210.65 L1875.03 1210.65 L1875.61 1210.65 L1876.2 1210.65 L1876.79 1210.65 L1877.37 1210.65 L1877.96 1210.65 L1878.55 1210.65 L1879.13 1210.65 L1879.72 1210.65 L1880.3 1210.65 L1880.89 1210.65 L1881.48 1210.65 L1882.06 1210.65 L1882.65 1210.65 L1883.24 1210.65 L1883.82 1210.65 L1884.41 1210.65 L1885 1210.65 L1885.58 1210.65 L1886.17 1210.65 L1886.76 1210.65 L1887.34 1210.65 L1887.93 1210.65 L1888.51 1210.65 L1889.1 1210.65 L1889.69 1210.65 L1890.27 1210.65 L1890.86 1210.65 L1891.45 1210.65 L1892.03 1210.65 L1892.62 1210.65 L1893.21 1210.65 L1893.79 1210.65 L1894.38 1210.65 L1894.96 1210.65 L1895.55 1210.65 L1896.14 1210.65 L1896.72 1210.65 L1897.31 1210.65 L1897.9 1210.65 L1898.48 1210.65 L1899.07 1210.65 L1899.66 1210.65 L1900.24 1210.65 L1900.83 1210.65 L1901.42 1210.65 L1902 1210.65 L1902.59 1210.65 L1903.17 1210.65 L1903.76 1210.65 L1904.35 1210.65 L1904.93 1210.65 L1905.52 1210.65 L1906.11 1210.65 L1906.69 1210.65 L1907.28 1210.65 L1907.87 1210.65 L1908.45 1210.65 L1909.04 1210.65 L1909.63 1210.65 L1910.21 1210.65 L1910.8 1210.65 L1911.38 1210.65 L1911.97 1210.65 L1912.56 1210.65 L1913.14 1210.65 L1913.73 1210.65 L1914.32 1210.65 L1914.9 1210.65 L1915.49 1210.65 L1916.08 1210.65 L1916.66 1210.65 L1917.25 1210.65 L1917.83 1210.65 L1918.42 1210.65 L1919.01 1210.65 L1919.59 1210.65 L1920.18 1210.65 L1920.77 1210.65 L1921.35 1210.65 L1921.94 1210.65 L1922.53 1210.65 L1923.11 1210.65 L1923.7 1210.65 L1924.29 1210.65 L1924.87 1210.65 L1925.46 1210.65 L1926.04 1210.65 L1926.63 1210.65 L1927.22 1210.65 L1927.8 1210.65 L1928.39 1210.65 L1928.98 1210.65 L1929.56 1210.65 L1930.15 1210.65 L1930.74 1210.65 L1931.32 1210.65 L1931.91 1210.65 L1932.5 1210.65 L1933.08 1210.65 L1933.67 1210.65 L1934.25 1210.65 L1934.84 1210.65 L1935.43 1210.65 L1936.01 1210.65 L1936.6 1210.65 L1937.19 1210.65 L1937.77 1210.65 L1938.36 1210.65 L1938.95 1210.65 L1939.53 1210.65 L1940.12 1210.65 L1940.71 1210.65 L1941.29 1210.65 L1941.88 1210.65 L1942.46 1210.65 L1943.05 1210.65 L1943.64 1210.65 L1944.22 1210.65 L1944.81 1210.65 L1945.4 1210.65 L1945.98 1210.65 L1946.57 1210.65 L1947.16 1210.65 L1947.74 1210.65 L1948.33 1210.65 L1948.91 1210.65 L1949.5 1210.65 L1950.09 1210.65 L1950.67 1210.65 L1951.26 1210.65 L1951.85 1210.65 L1952.43 1210.65 L1953.02 1210.65 L1953.61 1210.65 L1954.19 1210.65 L1954.78 1210.65 L1955.37 1210.65 L1955.95 1210.65 L1956.54 1210.65 L1957.12 1210.65 L1957.71 1210.65 L1958.3 1210.65 L1958.88 1210.65 L1959.47 1210.65 L1960.06 1210.65 L1960.64 1210.65 L1961.23 1210.65 L1961.82 1210.65 L1962.4 1210.65 L1962.99 1210.65 L1963.58 1210.65 L1964.16 1210.65 L1964.75 1210.65 L1965.33 1210.65 L1965.92 1210.65 L1966.51 1210.65 L1967.09 1210.65 L1967.68 1210.65 L1968.27 1210.65 L1968.85 1210.65 L1969.44 1210.65 L1970.03 1210.65 L1970.61 1210.65 L1971.2 1210.65 L1971.78 1210.65 L1972.37 1210.65 L1972.96 1210.65 L1973.54 1210.65 L1974.13 1210.65 L1974.72 1210.65 L1975.3 1210.65 L1975.89 1210.65 L1976.48 1210.65 L1977.06 1210.65 L1977.65 1210.65 L1978.24 1210.65 L1978.82 1210.65 L1979.41 1210.65 L1979.99 1210.65 L1980.58 1210.65 L1981.17 1210.65 L1981.75 1210.65 L1982.34 1210.65 L1982.93 1210.65 L1983.51 1210.65 L1984.1 1210.65 L1984.69 1210.65 L1985.27 1210.65 L1985.86 1210.65 L1986.45 1210.65 L1987.03 1210.65 L1987.62 1210.65 L1988.2 1210.65 L1988.79 1210.65 L1989.38 1210.65 L1989.96 1210.65 L1990.55 1210.65 L1991.14 1210.65 L1991.72 1210.65 L1992.31 1210.65 L1992.9 1210.65 L1993.48 1210.65 L1994.07 1210.65 L1994.65 1210.65 L1995.24 1210.65 L1995.83 1210.65 L1996.41 1210.65 L1997 1210.65 L1997.59 1210.65 L1998.17 1210.65 L1998.76 1210.65 L1999.35 1210.65 L1999.93 1210.65 L2000.52 1210.65 L2001.11 1210.65 L2001.69 1210.65 L2002.28 1210.65 L2002.86 1210.65 L2003.45 1210.65 L2004.04 1210.65 L2004.62 1210.65 L2005.21 1210.65 L2005.8 1210.65 L2006.38 1210.65 L2006.97 1210.65 L2007.56 1210.65 L2008.14 1210.65 L2008.73 1210.65 L2009.32 1210.65 L2009.9 1210.65 L2010.49 1210.65 L2011.07 1210.65 L2011.66 1210.65 L2012.25 1210.65 L2012.83 1210.65 L2013.42 1210.65 L2014.01 1210.65 L2014.59 1210.65 L2015.18 1210.65 L2015.77 1210.65 L2016.35 1210.65 L2016.94 1210.65 L2017.53 1210.65 L2018.11 1210.65 L2018.7 1210.65 L2019.28 1210.65 L2019.87 1210.65 L2020.46 1210.65 L2021.04 1210.65 L2021.63 1210.65 L2022.22 1210.65 L2022.8 1210.65 L2023.39 1210.65 L2023.98 1210.65 L2024.56 1210.65 L2025.15 1210.65 L2025.73 1210.65 L2026.32 1210.65 L2026.91 1210.65 L2027.49 1210.65 L2028.08 1210.65 L2028.67 1210.65 L2029.25 1210.65 L2029.84 1210.65 L2030.43 1210.65 L2031.01 1210.65 L2031.6 1210.65 L2032.19 1210.65 L2032.77 1210.65 L2033.36 1210.65 L2033.94 1210.65 L2034.53 1210.65 L2035.12 1210.65 L2035.7 1210.65 L2036.29 1210.65 L2036.88 1210.65 L2037.46 1210.65 L2038.05 1210.65 L2038.64 1210.65 L2039.22 1210.65 L2039.81 1210.65 L2040.4 1210.65 L2040.98 1210.65 L2041.57 1210.65 L2042.15 1210.65 L2042.74 1210.65 L2043.33 1210.65 L2043.91 1210.65 L2044.5 1210.65 L2045.09 1210.65 L2045.67 1210.65 L2046.26 1210.65 L2046.85 1210.65 L2047.43 1210.65 L2048.02 1210.65 L2048.6 1210.65 L2049.19 1210.65 L2049.78 1210.65 L2050.36 1210.65 L2050.95 1210.65 L2051.54 1210.65 L2052.12 1210.65 L2052.71 1210.65 L2053.3 1210.65 L2053.88 1210.65 L2054.47 1210.65 L2055.06 1210.65 L2055.64 1210.65 L2056.23 1210.65 L2056.81 1210.65 L2057.4 1210.65 L2057.99 1210.65 L2058.57 1210.65 L2059.16 1210.65 L2059.75 1210.65 L2060.33 1210.65 L2060.92 1210.65 L2061.51 1210.65 L2062.09 1210.65 L2062.68 1210.65 L2063.27 1210.65 L2063.85 1210.65 L2064.44 1210.65 L2065.02 1210.65 L2065.61 1210.65 L2066.2 1210.65 L2066.78 1210.65 L2067.37 1210.65 L2067.96 1210.65 L2068.54 1210.65 L2069.13 1210.65 L2069.72 1210.65 L2070.3 1210.65 L2070.89 1210.65 L2071.48 1210.65 L2072.06 1210.65 L2072.65 1210.65 L2073.23 1210.65 L2073.82 1210.65 L2074.41 1210.65 L2074.99 1210.65 L2075.58 1210.65 L2076.17 1210.65 L2076.75 1210.65 L2077.34 1210.65 L2077.93 1210.65 L2078.51 1210.65 L2079.1 1210.65 L2079.68 1210.65 L2080.27 1210.65 L2080.86 1210.65 L2081.44 1210.65 L2082.03 1210.65 L2082.62 1210.65 L2083.2 1210.65 L2083.79 1210.65 L2084.38 1210.65 L2084.96 1210.65 L2085.55 1210.65 L2086.14 1210.65 L2086.72 1210.65 L2087.31 1210.65 L2087.89 1210.65 L2088.48 1210.65 L2089.07 1210.65 L2089.65 1210.65 L2090.24 1210.65 L2090.83 1210.65 L2091.41 1210.65 L2092 1210.65 L2092.59 1210.65 L2093.17 1210.65 L2093.76 1210.65 L2094.35 1210.65 L2094.93 1210.65 L2095.52 1210.65 L2096.1 1210.65 L2096.69 1210.65 L2097.28 1210.65 L2097.86 1210.65 L2098.45 1210.65 L2099.04 1210.65 L2099.62 1210.65 L2100.21 1210.65 L2100.8 1210.65 L2101.38 1210.65 L2101.97 1210.65 L2102.55 1210.65 L2103.14 1210.65 L2103.73 1210.65 L2104.31 1210.65 L2104.9 1210.65 L2105.49 1210.65 L2106.07 1210.65 L2106.66 1210.65 L2107.25 1210.65 L2107.83 1210.65 L2108.42 1210.65 L2109.01 1210.65 L2109.59 1210.65 L2110.18 1210.65 L2110.76 1210.65 L2111.35 1210.65 L2111.94 1210.65 L2112.52 1210.65 L2113.11 1210.65 L2113.7 1210.65 L2114.28 1210.65 L2114.87 1210.65 L2115.46 1210.65 L2116.04 1210.65 L2116.63 1210.65 L2117.22 1210.65 L2117.8 1210.65 L2118.39 1210.65 L2118.97 1210.65 L2119.56 1210.65 L2120.15 1210.65 L2120.73 1210.65 L2121.32 1210.65 L2121.91 1210.65 L2122.49 1210.65 L2123.08 1210.65 L2123.67 1210.65 L2124.25 1210.65 L2124.84 1210.65 L2125.42 1210.65 L2126.01 1210.65 L2126.6 1210.65 L2127.18 1210.65 L2127.77 1210.65 L2128.36 1210.65 L2128.94 1210.65 L2129.53 1210.65 L2130.12 1210.65 L2130.7 1210.65 L2131.29 1210.65 L2131.88 1210.65 L2132.46 1210.65 L2133.05 1210.65 L2133.63 1210.65 L2134.22 1210.65 L2134.81 1210.65 L2135.39 1210.65 L2135.98 1210.65 L2136.57 1210.65 L2137.15 1210.65 L2137.74 1210.65 L2138.33 1210.65 L2138.91 1210.65 L2139.5 1210.65 L2140.09 1210.65 L2140.67 1210.65 L2141.26 1210.65 L2141.84 1210.65 L2142.43 1210.65 L2143.02 1210.65 L2143.6 1210.65 L2144.19 1210.65 L2144.78 1210.65 L2145.36 1210.65 L2145.95 1210.65 L2146.54 1210.65 L2147.12 1210.65 L2147.71 1210.65 L2148.3 1210.65 L2148.88 1210.65 L2149.47 1210.65 L2150.05 1210.65 L2150.64 1210.65 L2151.23 1210.65 L2151.81 1210.65 L2152.4 1210.65 L2152.99 1210.65 L2153.57 1210.65 L2154.16 1210.65 L2154.75 1210.65 L2155.33 1210.65 L2155.92 1210.65 L2156.5 1210.65 L2157.09 1210.65 L2157.68 1210.65 L2158.26 1210.65 L2158.26 1210.51 L2157.68 1210.51 L2157.09 1210.51 L2156.5 1210.51 L2155.92 1210.51 L2155.33 1210.51 L2154.75 1210.51 L2154.16 1210.51 L2153.57 1210.51 L2152.99 1210.51 L2152.4 1210.51 L2151.81 1210.51 L2151.23 1210.51 L2150.64 1210.51 L2150.05 1210.51 L2149.47 1210.51 L2148.88 1210.51 L2148.3 1210.51 L2147.71 1210.51 L2147.12 1210.51 L2146.54 1210.51 L2145.95 1210.51 L2145.36 1210.51 L2144.78 1210.51 L2144.19 1210.51 L2143.6 1210.51 L2143.02 1210.51 L2142.43 1210.51 L2141.84 1210.51 L2141.26 1210.51 L2140.67 1210.51 L2140.09 1210.51 L2139.5 1210.51 L2138.91 1210.51 L2138.33 1210.51 L2137.74 1210.51 L2137.15 1210.51 L2136.57 1210.51 L2135.98 1210.51 L2135.39 1210.51 L2134.81 1210.51 L2134.22 1210.51 L2133.63 1210.51 L2133.05 1210.51 L2132.46 1210.51 L2131.88 1210.51 L2131.29 1210.51 L2130.7 1210.51 L2130.12 1210.51 L2129.53 1210.51 L2128.94 1210.51 L2128.36 1210.51 L2127.77 1210.51 L2127.18 1210.51 L2126.6 1210.51 L2126.01 1210.51 L2125.42 1210.51 L2124.84 1210.51 L2124.25 1210.51 L2123.67 1210.51 L2123.08 1210.51 L2122.49 1210.51 L2121.91 1210.51 L2121.32 1210.51 L2120.73 1210.51 L2120.15 1210.51 L2119.56 1210.51 L2118.97 1210.51 L2118.39 1210.51 L2117.8 1210.51 L2117.22 1210.51 L2116.63 1210.51 L2116.04 1210.51 L2115.46 1210.51 L2114.87 1210.51 L2114.28 1210.51 L2113.7 1210.51 L2113.11 1210.51 L2112.52 1210.51 L2111.94 1210.51 L2111.35 1210.51 L2110.76 1210.51 L2110.18 1210.51 L2109.59 1210.51 L2109.01 1210.51 L2108.42 1210.51 L2107.83 1210.51 L2107.25 1210.51 L2106.66 1210.51 L2106.07 1210.51 L2105.49 1210.51 L2104.9 1210.51 L2104.31 1210.51 L2103.73 1210.51 L2103.14 1210.51 L2102.55 1210.51 L2101.97 1210.51 L2101.38 1210.51 L2100.8 1210.51 L2100.21 1210.51 L2099.62 1210.51 L2099.04 1210.51 L2098.45 1210.51 L2097.86 1210.51 L2097.28 1210.51 L2096.69 1210.51 L2096.1 1210.51 L2095.52 1210.51 L2094.93 1210.51 L2094.35 1210.51 L2093.76 1210.51 L2093.17 1210.51 L2092.59 1210.51 L2092 1210.51 L2091.41 1210.51 L2090.83 1210.51 L2090.24 1210.51 L2089.65 1210.51 L2089.07 1210.51 L2088.48 1210.51 L2087.89 1210.51 L2087.31 1210.51 L2086.72 1210.51 L2086.14 1210.51 L2085.55 1210.51 L2084.96 1210.51 L2084.38 1210.51 L2083.79 1210.51 L2083.2 1210.51 L2082.62 1210.51 L2082.03 1210.51 L2081.44 1210.51 L2080.86 1210.51 L2080.27 1210.51 L2079.68 1210.51 L2079.1 1210.51 L2078.51 1210.51 L2077.93 1210.51 L2077.34 1210.51 L2076.75 1210.51 L2076.17 1210.51 L2075.58 1210.51 L2074.99 1210.51 L2074.41 1210.51 L2073.82 1210.51 L2073.23 1210.51 L2072.65 1210.51 L2072.06 1210.51 L2071.48 1210.51 L2070.89 1210.51 L2070.3 1210.51 L2069.72 1210.51 L2069.13 1210.51 L2068.54 1210.51 L2067.96 1210.51 L2067.37 1210.51 L2066.78 1210.51 L2066.2 1210.51 L2065.61 1210.51 L2065.02 1210.51 L2064.44 1210.51 L2063.85 1210.51 L2063.27 1210.51 L2062.68 1210.51 L2062.09 1210.51 L2061.51 1210.51 L2060.92 1210.51 L2060.33 1210.51 L2059.75 1210.51 L2059.16 1210.51 L2058.57 1210.51 L2057.99 1210.51 L2057.4 1210.51 L2056.81 1210.51 L2056.23 1210.51 L2055.64 1210.51 L2055.06 1210.51 L2054.47 1210.51 L2053.88 1210.51 L2053.3 1210.51 L2052.71 1210.51 L2052.12 1210.51 L2051.54 1210.51 L2050.95 1210.51 L2050.36 1210.51 L2049.78 1210.51 L2049.19 1210.51 L2048.6 1210.51 L2048.02 1210.51 L2047.43 1210.51 L2046.85 1210.51 L2046.26 1210.51 L2045.67 1210.51 L2045.09 1210.51 L2044.5 1210.51 L2043.91 1210.51 L2043.33 1210.51 L2042.74 1210.51 L2042.15 1210.51 L2041.57 1210.51 L2040.98 1210.51 L2040.4 1210.51 L2039.81 1210.51 L2039.22 1210.51 L2038.64 1210.51 L2038.05 1210.51 L2037.46 1210.51 L2036.88 1210.51 L2036.29 1210.51 L2035.7 1210.51 L2035.12 1210.51 L2034.53 1210.51 L2033.94 1210.51 L2033.36 1210.51 L2032.77 1210.51 L2032.19 1210.51 L2031.6 1210.51 L2031.01 1210.51 L2030.43 1210.51 L2029.84 1210.51 L2029.25 1210.51 L2028.67 1210.51 L2028.08 1210.51 L2027.49 1210.51 L2026.91 1210.51 L2026.32 1210.51 L2025.73 1210.51 L2025.15 1210.51 L2024.56 1210.51 L2023.98 1210.51 L2023.39 1210.51 L2022.8 1210.51 L2022.22 1210.51 L2021.63 1210.51 L2021.04 1210.51 L2020.46 1210.51 L2019.87 1210.51 L2019.28 1210.51 L2018.7 1210.51 L2018.11 1210.51 L2017.53 1210.51 L2016.94 1210.51 L2016.35 1210.51 L2015.77 1210.51 L2015.18 1210.51 L2014.59 1210.51 L2014.01 1210.51 L2013.42 1210.51 L2012.83 1210.51 L2012.25 1210.51 L2011.66 1210.51 L2011.07 1210.51 L2010.49 1210.51 L2009.9 1210.51 L2009.32 1210.51 L2008.73 1210.51 L2008.14 1210.51 L2007.56 1210.51 L2006.97 1210.51 L2006.38 1210.51 L2005.8 1210.51 L2005.21 1210.51 L2004.62 1210.51 L2004.04 1210.51 L2003.45 1210.51 L2002.86 1210.51 L2002.28 1210.51 L2001.69 1210.51 L2001.11 1210.51 L2000.52 1210.51 L1999.93 1210.51 L1999.35 1210.51 L1998.76 1210.51 L1998.17 1210.51 L1997.59 1210.51 L1997 1210.51 L1996.41 1210.51 L1995.83 1210.51 L1995.24 1210.51 L1994.65 1210.51 L1994.07 1210.51 L1993.48 1210.51 L1992.9 1210.51 L1992.31 1210.51 L1991.72 1210.51 L1991.14 1210.51 L1990.55 1210.51 L1989.96 1210.51 L1989.38 1210.51 L1988.79 1210.51 L1988.2 1210.51 L1987.62 1210.51 L1987.03 1210.51 L1986.45 1210.51 L1985.86 1210.51 L1985.27 1210.51 L1984.69 1210.51 L1984.1 1210.51 L1983.51 1210.51 L1982.93 1210.51 L1982.34 1210.51 L1981.75 1210.51 L1981.17 1210.51 L1980.58 1210.51 L1979.99 1210.51 L1979.41 1210.51 L1978.82 1210.51 L1978.24 1210.51 L1977.65 1210.51 L1977.06 1210.51 L1976.48 1210.51 L1975.89 1210.51 L1975.3 1210.51 L1974.72 1210.51 L1974.13 1210.51 L1973.54 1210.51 L1972.96 1210.51 L1972.37 1210.51 L1971.78 1210.51 L1971.2 1210.51 L1970.61 1210.51 L1970.03 1210.51 L1969.44 1210.51 L1968.85 1210.51 L1968.27 1210.51 L1967.68 1210.51 L1967.09 1210.51 L1966.51 1210.51 L1965.92 1210.51 L1965.33 1210.51 L1964.75 1210.51 L1964.16 1210.51 L1963.58 1210.51 L1962.99 1210.51 L1962.4 1210.51 L1961.82 1210.51 L1961.23 1210.51 L1960.64 1210.51 L1960.06 1210.51 L1959.47 1210.51 L1958.88 1210.51 L1958.3 1210.51 L1957.71 1210.51 L1957.12 1210.51 L1956.54 1210.51 L1955.95 1210.51 L1955.37 1210.51 L1954.78 1210.51 L1954.19 1210.51 L1953.61 1210.51 L1953.02 1210.51 L1952.43 1210.51 L1951.85 1210.51 L1951.26 1210.51 L1950.67 1210.51 L1950.09 1210.51 L1949.5 1210.51 L1948.91 1210.51 L1948.33 1210.51 L1947.74 1210.51 L1947.16 1210.51 L1946.57 1210.51 L1945.98 1210.51 L1945.4 1210.51 L1944.81 1210.51 L1944.22 1210.51 L1943.64 1210.51 L1943.05 1210.51 L1942.46 1210.51 L1941.88 1210.51 L1941.29 1210.51 L1940.71 1210.51 L1940.12 1210.51 L1939.53 1210.51 L1938.95 1210.51 L1938.36 1210.51 L1937.77 1210.51 L1937.19 1210.51 L1936.6 1210.51 L1936.01 1210.51 L1935.43 1210.51 L1934.84 1210.51 L1934.25 1210.51 L1933.67 1210.51 L1933.08 1210.51 L1932.5 1210.51 L1931.91 1210.51 L1931.32 1210.51 L1930.74 1210.51 L1930.15 1210.51 L1929.56 1210.51 L1928.98 1210.51 L1928.39 1210.51 L1927.8 1210.51 L1927.22 1210.51 L1926.63 1210.51 L1926.04 1210.51 L1925.46 1210.51 L1924.87 1210.51 L1924.29 1210.51 L1923.7 1210.51 L1923.11 1210.51 L1922.53 1210.51 L1921.94 1210.51 L1921.35 1210.51 L1920.77 1210.51 L1920.18 1210.51 L1919.59 1210.51 L1919.01 1210.51 L1918.42 1210.51 L1917.83 1210.51 L1917.25 1210.51 L1916.66 1210.51 L1916.08 1210.51 L1915.49 1210.51 L1914.9 1210.51 L1914.32 1210.51 L1913.73 1210.51 L1913.14 1210.51 L1912.56 1210.51 L1911.97 1210.51 L1911.38 1210.51 L1910.8 1210.51 L1910.21 1210.51 L1909.63 1210.51 L1909.04 1210.51 L1908.45 1210.51 L1907.87 1210.51 L1907.28 1210.51 L1906.69 1210.51 L1906.11 1210.51 L1905.52 1210.51 L1904.93 1210.51 L1904.35 1210.51 L1903.76 1210.51 L1903.17 1210.51 L1902.59 1210.51 L1902 1210.51 L1901.42 1210.51 L1900.83 1210.51 L1900.24 1210.51 L1899.66 1210.51 L1899.07 1210.51 L1898.48 1210.51 L1897.9 1210.51 L1897.31 1210.51 L1896.72 1210.51 L1896.14 1210.51 L1895.55 1210.51 L1894.96 1210.51 L1894.38 1210.51 L1893.79 1210.51 L1893.21 1210.51 L1892.62 1210.51 L1892.03 1210.51 L1891.45 1210.51 L1890.86 1210.51 L1890.27 1210.51 L1889.69 1210.51 L1889.1 1210.51 L1888.51 1210.51 L1887.93 1210.51 L1887.34 1210.51 L1886.76 1210.51 L1886.17 1210.51 L1885.58 1210.51 L1885 1210.51 L1884.41 1210.51 L1883.82 1210.51 L1883.24 1210.51 L1882.65 1210.51 L1882.06 1210.51 L1881.48 1210.51 L1880.89 1210.51 L1880.3 1210.51 L1879.72 1210.51 L1879.13 1210.51 L1878.55 1210.51 L1877.96 1210.51 L1877.37 1210.51 L1876.79 1210.51 L1876.2 1210.51 L1875.61 1210.51 L1875.03 1210.51 L1874.44 1210.51 L1873.85 1210.51 L1873.27 1210.51 L1872.68 1210.51 L1872.09 1210.51 L1871.51 1210.51 L1870.92 1210.51 L1870.34 1210.51 L1869.75 1210.51 L1869.16 1210.51 L1868.58 1210.51 L1867.99 1210.51 L1867.4 1210.51 L1866.82 1210.51 L1866.23 1210.51 L1865.64 1210.51 L1865.06 1210.51 L1864.47 1210.51 L1863.88 1210.51 L1863.3 1210.51 L1862.71 1210.51 L1862.13 1210.51 L1861.54 1210.51 L1860.95 1210.51 L1860.37 1210.51 L1859.78 1210.51 L1859.19 1210.51 L1858.61 1210.51 L1858.02 1210.51 L1857.43 1210.51 L1856.85 1210.51 L1856.26 1210.51 L1855.68 1210.51 L1855.09 1210.51 L1854.5 1210.51 L1853.92 1210.51 L1853.33 1210.51 L1852.74 1210.51 L1852.16 1210.51 L1851.57 1210.51 L1850.98 1210.51 L1850.4 1210.51 L1849.81 1210.51 L1849.22 1210.51 L1848.64 1210.51 L1848.05 1210.51 L1847.47 1210.51 L1846.88 1210.51 L1846.29 1210.51 L1845.71 1210.51 L1845.12 1210.51 L1844.53 1210.51 L1843.95 1210.51 L1843.36 1210.51 L1842.77 1210.51 L1842.19 1210.51 L1841.6 1210.51 L1841.01 1210.51 L1840.43 1210.51 L1839.84 1210.51 L1839.26 1210.51 L1838.67 1210.51 L1838.08 1210.51 L1837.5 1210.51 L1836.91 1210.51 L1836.32 1210.51 L1835.74 1210.51 L1835.15 1210.51 L1834.56 1210.51 L1833.98 1210.51 L1833.39 1210.51 L1832.81 1210.51 L1832.22 1210.51 L1831.63 1210.51 L1831.05 1210.51 L1830.46 1210.51 L1829.87 1210.51 L1829.29 1210.51 L1828.7 1210.51 L1828.11 1210.51 L1827.53 1210.51 L1826.94 1210.51 L1826.35 1210.51 L1825.77 1210.51 L1825.18 1210.51 L1824.6 1210.51 L1824.01 1210.51 L1823.42 1210.51 L1822.84 1210.51 L1822.25 1210.51 L1821.66 1210.51 L1821.08 1210.51 L1820.49 1210.51 L1819.9 1210.51 L1819.32 1210.51 L1818.73 1210.51 L1818.14 1210.51 L1817.56 1210.51 L1816.97 1210.51 L1816.39 1210.51 L1815.8 1210.51 L1815.21 1210.51 L1814.63 1210.51 L1814.04 1210.51 L1813.45 1210.51 L1812.87 1210.51 L1812.28 1210.51 L1811.69 1210.51 L1811.11 1210.51 L1810.52 1210.51 L1809.94 1210.51 L1809.35 1210.51 L1808.76 1210.51 L1808.18 1210.51 L1807.59 1210.51 L1807 1210.51 L1806.42 1210.51 L1805.83 1210.51 L1805.24 1210.51 L1804.66 1210.51 L1804.07 1210.51 L1803.48 1210.51 L1802.9 1210.51 L1802.31 1210.51 L1801.73 1210.51 L1801.14 1210.51 L1800.55 1210.51 L1799.97 1210.51 L1799.38 1210.51 L1798.79 1210.51 L1798.21 1210.51 L1797.62 1210.51 L1797.03 1210.51 L1796.45 1210.51 L1795.86 1210.51 L1795.27 1210.51 L1794.69 1210.51 L1794.1 1210.51 L1793.52 1210.51 L1792.93 1210.51 L1792.34 1210.51 L1791.76 1210.51 L1791.17 1210.51 L1790.58 1210.51 L1790 1210.51 L1789.41 1210.51 L1788.82 1210.51 L1788.24 1210.51 L1787.65 1210.51 L1787.06 1210.51 L1786.48 1210.51 L1785.89 1210.51 L1785.31 1210.51 L1784.72 1210.51 L1784.13 1210.51 L1783.55 1210.51 L1782.96 1210.51 L1782.37 1210.51 L1781.79 1210.51 L1781.2 1210.51 L1780.61 1210.51 L1780.03 1210.51 L1779.44 1210.51 L1778.86 1210.51 L1778.27 1210.51 L1777.68 1210.51 L1777.1 1210.51 L1776.51 1210.51 L1775.92 1210.51 L1775.34 1210.51 L1774.75 1210.51 L1774.16 1210.51 L1773.58 1210.51 L1772.99 1210.51 L1772.4 1210.51 L1771.82 1210.51 L1771.23 1210.51 L1770.65 1210.51 L1770.06 1210.51 L1769.47 1210.51 L1768.89 1210.51 L1768.3 1210.51 L1767.71 1210.51 L1767.13 1210.51 L1766.54 1210.51 L1765.95 1210.51 L1765.37 1210.51 L1764.78 1210.51 L1764.19 1210.51 L1763.61 1210.51 L1763.02 1210.51 L1762.44 1210.51 L1761.85 1210.51 L1761.26 1210.51 L1760.68 1210.51 L1760.09 1210.51 L1759.5 1210.51 L1758.92 1210.51 L1758.33 1210.51 L1757.74 1210.51 L1757.16 1210.51 L1756.57 1210.51 L1755.99 1210.51 L1755.4 1210.51 L1754.81 1210.51 L1754.23 1210.51 L1753.64 1210.51 L1753.05 1210.51 L1752.47 1210.51 L1751.88 1210.51 L1751.29 1210.51 L1750.71 1210.51 L1750.12 1210.51 L1749.53 1210.51 L1748.95 1210.51 L1748.36 1210.51 L1747.78 1210.51 L1747.19 1210.51 L1746.6 1210.51 L1746.02 1210.51 L1745.43 1210.51 L1744.84 1210.51 L1744.26 1210.51 L1743.67 1210.51 L1743.08 1210.51 L1742.5 1210.51 L1741.91 1210.51 L1741.32 1210.51 L1740.74 1210.51 L1740.15 1210.51 L1739.57 1210.51 L1738.98 1210.51 L1738.39 1210.51 L1737.81 1210.51 L1737.22 1210.51 L1736.63 1210.51 L1736.05 1210.51 L1735.46 1210.51 L1734.87 1210.51 L1734.29 1210.51 L1733.7 1210.51 L1733.11 1210.51 L1732.53 1210.51 L1731.94 1210.51 L1731.36 1210.51 L1730.77 1210.51 L1730.18 1210.51 L1729.6 1210.51 L1729.01 1210.51 L1728.42 1210.51 L1727.84 1210.51 L1727.25 1210.51 L1726.66 1210.51 L1726.08 1210.51 L1725.49 1210.51 L1724.91 1210.51 L1724.32 1210.51 L1723.73 1210.51 L1723.15 1210.51 L1722.56 1210.51 L1721.97 1210.51 L1721.39 1210.51 L1720.8 1210.51 L1720.21 1210.51 L1719.63 1210.51 L1719.04 1210.51 L1718.45 1210.51 L1717.87 1210.51 L1717.28 1210.51 L1716.7 1210.51 L1716.11 1210.51 L1715.52 1210.51 L1714.94 1210.51 L1714.35 1210.51 L1713.76 1210.51 L1713.18 1210.51 L1712.59 1210.51 L1712 1210.51 L1711.42 1210.51 L1710.83 1210.51 L1710.24 1210.51 L1709.66 1210.51 L1709.07 1210.51 L1708.49 1210.51 L1707.9 1210.51 L1707.31 1210.51 L1706.73 1210.51 L1706.14 1210.51 L1705.55 1210.51 L1704.97 1210.51 L1704.38 1210.51 L1703.79 1210.51 L1703.21 1210.51 L1702.62 1210.51 L1702.04 1210.51 L1701.45 1210.51 L1700.86 1210.51 L1700.28 1210.51 L1699.69 1210.51 L1699.1 1210.51 L1698.52 1210.51 L1697.93 1210.51 L1697.34 1210.51 L1696.76 1210.51 L1696.17 1210.51 L1695.58 1210.51 L1695 1210.51 L1694.41 1210.51 L1693.83 1210.51 L1693.24 1210.51 L1692.65 1210.51 L1692.07 1210.51 L1691.48 1210.51 L1690.89 1210.51 L1690.31 1210.51 L1689.72 1210.51 L1689.13 1210.51 L1688.55 1210.51 L1687.96 1210.51 L1687.37 1210.51 L1686.79 1210.51 L1686.2 1210.51 L1685.62 1210.51 L1685.03 1210.51 L1684.44 1210.51 L1683.86 1210.51 L1683.27 1210.51 L1682.68 1210.51 L1682.1 1210.51 L1681.51 1210.51 L1680.92 1210.51 L1680.34 1210.51 L1679.75 1210.51 L1679.17 1210.51 L1678.58 1210.51 L1677.99 1210.51 L1677.41 1210.51 L1676.82 1210.51 L1676.23 1210.51 L1675.65 1210.51 L1675.06 1210.51 L1674.47 1210.51 L1673.89 1210.51 L1673.3 1210.51 L1672.71 1210.51 L1672.13 1210.51 L1671.54 1210.51 L1670.96 1210.51 L1670.37 1210.51 L1669.78 1210.51 L1669.2 1210.51 L1668.61 1210.51 L1668.02 1210.51 L1667.44 1210.51 L1666.85 1210.51 L1666.26 1210.51 L1665.68 1210.51 L1665.09 1210.51 L1664.5 1210.51 L1663.92 1210.51 L1663.33 1210.51 L1662.75 1210.51 L1662.16 1210.51 L1661.57 1210.51 L1660.99 1210.51 L1660.4 1210.51 L1659.81 1210.51 L1659.23 1210.51 L1658.64 1210.51 L1658.05 1210.51 L1657.47 1210.51 L1656.88 1210.51 L1656.29 1210.51 L1655.71 1210.51 L1655.12 1210.51 L1654.54 1210.51 L1653.95 1210.51 L1653.36 1210.51 L1652.78 1210.51 L1652.19 1210.51 L1651.6 1210.51 L1651.02 1210.51 L1650.43 1210.51 L1649.84 1210.51 L1649.26 1210.51 L1648.67 1210.51 L1648.09 1210.51 L1647.5 1210.51 L1646.91 1210.51 L1646.33 1210.51 L1645.74 1210.51 L1645.15 1210.51 L1644.57 1210.51 L1643.98 1210.51 L1643.39 1210.51 L1642.81 1210.51 L1642.22 1210.51 L1641.63 1210.51 L1641.05 1210.51 L1640.46 1210.51 L1639.88 1210.51 L1639.29 1210.51 L1638.7 1210.51 L1638.12 1210.51 L1637.53 1210.51 L1636.94 1210.51 L1636.36 1210.51 L1635.77 1210.51 L1635.18 1210.51 L1634.6 1210.51 L1634.01 1210.51 L1633.42 1210.51 L1632.84 1210.51 L1632.25 1210.51 L1631.67 1210.51 L1631.08 1210.51 L1630.49 1210.51 L1629.91 1210.51 L1629.32 1210.51 L1628.73 1210.51 L1628.15 1210.51 L1627.56 1210.51 L1626.97 1210.51 L1626.39 1210.51 L1625.8 1210.51 L1625.22 1210.51 L1624.63 1210.51 L1624.04 1210.51 L1623.46 1210.51 L1622.87 1210.51 L1622.28 1210.51 L1621.7 1210.51 L1621.11 1210.51 L1620.52 1210.51 L1619.94 1210.51 L1619.35 1210.51 L1618.76 1210.51 L1618.18 1210.51 L1617.59 1210.51 L1617.01 1210.51 L1616.42 1210.51 L1615.83 1210.51 L1615.25 1210.51 L1614.66 1210.51 L1614.07 1210.51 L1613.49 1210.51 L1612.9 1210.51 L1612.31 1210.51 L1611.73 1210.51 L1611.14 1210.51 L1610.55 1210.51 L1609.97 1210.51 L1609.38 1210.51 L1608.8 1210.51 L1608.21 1210.51 L1607.62 1210.51 L1607.04 1210.51 L1606.45 1210.51 L1605.86 1210.51 L1605.28 1210.51 L1604.69 1210.51 L1604.1 1210.51 L1603.52 1210.51 L1602.93 1210.51 L1602.34 1210.51 L1601.76 1210.51 L1601.17 1210.51 L1600.59 1210.51 L1600 1210.51 L1599.41 1210.51 L1598.83 1210.51 L1598.24 1210.51 L1597.65 1210.51 L1597.07 1210.51 L1596.48 1210.51 L1595.89 1210.51 L1595.31 1210.51 L1594.72 1210.51 L1594.14 1210.51 L1593.55 1210.51 L1592.96 1210.51 L1592.38 1210.51 L1591.79 1210.51 L1591.2 1210.51 L1590.62 1210.51 L1590.03 1210.51 L1589.44 1210.51 L1588.86 1210.51 L1588.27 1210.51 L1587.68 1210.51 L1587.1 1210.51 L1586.51 1210.51 L1585.93 1210.51 L1585.34 1210.51 L1584.75 1210.51 L1584.17 1210.51 L1583.58 1210.51 L1582.99 1210.51 L1582.41 1210.51 L1581.82 1210.51 L1581.23 1210.51 L1580.65 1210.51 L1580.06 1210.51 L1579.47 1210.51 L1578.89 1210.51 L1578.3 1210.51 L1577.72 1210.51 L1577.13 1210.51 L1576.54 1210.51 L1575.96 1210.51 L1575.37 1210.51 L1574.78 1210.51 L1574.2 1210.51 L1573.61 1210.51 L1573.02 1210.51 L1572.44 1210.51 L1571.85 1210.51 L1571.27 1210.51 L1570.68 1210.51 L1570.09 1210.51 L1569.51 1210.51 L1568.92 1210.51 L1568.33 1210.51 L1567.75 1210.51 L1567.16 1210.51 L1566.57 1210.51 L1565.99 1210.51 L1565.4 1210.51 L1564.81 1210.51 L1564.23 1210.51 L1563.64 1210.51 L1563.06 1210.51 L1562.47 1210.51 L1561.88 1210.51 L1561.3 1210.51 L1560.71 1210.51 L1560.12 1210.51 L1559.54 1210.51 L1558.95 1210.51 L1558.36 1210.51 L1557.78 1210.51 L1557.19 1210.51 L1556.6 1210.51 L1556.02 1210.51 L1555.43 1210.51 L1554.85 1210.51 L1554.26 1210.51 L1553.67 1210.51 L1553.09 1210.51 L1552.5 1210.51 L1551.91 1210.51 L1551.33 1210.51 L1550.74 1210.51 L1550.15 1210.51 L1549.57 1210.51 L1548.98 1210.51 L1548.4 1210.51 L1547.81 1210.51 L1547.22 1210.51 L1546.64 1210.51 L1546.05 1210.51 L1545.46 1210.51 L1544.88 1210.51 L1544.29 1210.51 L1543.7 1210.51 L1543.12 1210.51 L1542.53 1210.51 L1541.94 1210.51 L1541.36 1210.51 L1540.77 1210.51 L1540.19 1210.51 L1539.6 1210.51 L1539.01 1210.51 L1538.43 1210.51 L1537.84 1210.51 L1537.25 1210.51 L1536.67 1210.51 L1536.08 1210.51 L1535.49 1210.51 L1534.91 1210.51 L1534.32 1210.51 L1533.73 1210.51 L1533.15 1210.51 L1532.56 1210.51 L1531.98 1210.51 L1531.39 1210.51 L1530.8 1210.51 L1530.22 1210.51 L1529.63 1210.51 L1529.04 1210.51 L1528.46 1210.51 L1527.87 1210.51 L1527.28 1210.51 L1526.7 1210.51 L1526.11 1210.51 L1525.52 1210.51 L1524.94 1210.51 L1524.35 1210.51 L1523.77 1210.51 L1523.18 1210.51 L1522.59 1210.51 L1522.01 1210.51 L1521.42 1210.51 L1520.83 1210.51 L1520.25 1210.51 L1519.66 1210.51 L1519.07 1210.51 L1518.49 1210.51 L1517.9 1210.51 L1517.32 1210.51 L1516.73 1210.51 L1516.14 1210.51 L1515.56 1210.51 L1514.97 1210.51 L1514.38 1210.51 L1513.8 1210.51 L1513.21 1210.51 L1512.62 1210.51 L1512.04 1210.51 L1511.45 1210.51 L1510.86 1210.51 L1510.28 1210.51 L1509.69 1210.51 L1509.11 1210.51 L1508.52 1210.51 L1507.93 1210.51 L1507.35 1210.51 L1506.76 1210.51 L1506.17 1210.51 L1505.59 1210.51 L1505 1210.51 L1504.41 1210.51 L1503.83 1210.51 L1503.24 1210.51 L1502.65 1210.51 L1502.07 1210.51 L1501.48 1210.51 L1500.9 1210.51 L1500.31 1210.51 L1499.72 1210.51 L1499.14 1210.51 L1498.55 1210.51 L1497.96 1210.51 L1497.38 1210.51 L1496.79 1210.51 L1496.2 1210.51 L1495.62 1210.51 L1495.03 1210.51 L1494.45 1210.51 L1493.86 1210.51 L1493.27 1210.51 L1492.69 1210.51 L1492.1 1210.51 L1491.51 1210.51 L1490.93 1210.51 L1490.34 1210.51 L1489.75 1210.51 L1489.17 1210.51 L1488.58 1210.51 L1487.99 1210.51 L1487.41 1210.51 L1486.82 1210.51 L1486.24 1210.51 L1485.65 1210.51 L1485.06 1210.51 L1484.48 1210.51 L1483.89 1210.51 L1483.3 1210.51 L1482.72 1210.51 L1482.13 1210.51 L1481.54 1210.51 L1480.96 1210.51 L1480.37 1210.51 L1479.78 1210.51 L1479.2 1210.51 L1478.61 1210.51 L1478.03 1210.51 L1477.44 1210.51 L1476.85 1210.51 L1476.27 1210.51 L1475.68 1210.51 L1475.09 1210.51 L1474.51 1210.51 L1473.92 1210.51 L1473.33 1210.51 L1472.75 1210.51 L1472.16 1210.51 L1471.57 1210.51 L1470.99 1210.51 L1470.4 1210.51 L1469.82 1210.51 L1469.23 1210.51 L1468.64 1210.51 L1468.06 1210.51 L1467.47 1210.51 L1466.88 1210.51 L1466.3 1210.51 L1465.71 1210.51 L1465.12 1210.51 L1464.54 1210.51 L1463.95 1210.51 L1463.37 1210.51 L1462.78 1210.51 L1462.19 1210.51 L1461.61 1210.51 L1461.02 1210.51 L1460.43 1210.51 L1459.85 1210.51 L1459.26 1210.51 L1458.67 1210.51 L1458.09 1210.51 L1457.5 1210.51 L1456.91 1210.51 L1456.33 1210.51 L1455.74 1210.51 L1455.16 1210.51 L1454.57 1210.51 L1453.98 1210.51 L1453.4 1210.51 L1452.81 1210.51 L1452.22 1210.51 L1451.64 1210.51 L1451.05 1210.51 L1450.46 1210.51 L1449.88 1210.51 L1449.29 1210.51 L1448.7 1210.51 L1448.12 1210.51 L1447.53 1210.51 L1446.95 1210.51 L1446.36 1210.51 L1445.77 1210.51 L1445.19 1210.51 L1444.6 1210.51 L1444.01 1210.51 L1443.43 1210.51 L1442.84 1210.51 L1442.25 1210.51 L1441.67 1210.51 L1441.08 1210.51 L1440.5 1210.51 L1439.91 1210.51 L1439.32 1210.51 L1438.74 1210.51 L1438.15 1210.51 L1437.56 1210.51 L1436.98 1210.51 L1436.39 1210.51 L1435.8 1210.51 L1435.22 1210.51 L1434.63 1210.51 L1434.04 1210.51 L1433.46 1210.51 L1432.87 1210.51 L1432.29 1210.51 L1431.7 1210.51 L1431.11 1210.51 L1430.53 1210.51 L1429.94 1210.51 L1429.35 1210.51 L1428.77 1210.51 L1428.18 1210.51 L1427.59 1210.51 L1427.01 1210.51 L1426.42 1210.51 L1425.83 1210.51 L1425.25 1210.51 L1424.66 1210.51 L1424.08 1210.51 L1423.49 1210.51 L1422.9 1210.51 L1422.32 1210.51 L1421.73 1210.51 L1421.14 1210.51 L1420.56 1210.51 L1419.97 1210.51 L1419.38 1210.51 L1418.8 1210.51 L1418.21 1210.51 L1417.63 1210.51 L1417.04 1210.51 L1416.45 1210.51 L1415.87 1210.51 L1415.28 1210.51 L1414.69 1210.51 L1414.11 1210.51 L1413.52 1210.51 L1412.93 1210.51 L1412.35 1210.51 L1411.76 1210.51 L1411.17 1210.51 L1410.59 1210.51 L1410 1210.51 L1409.42 1210.51 L1408.83 1210.51 L1408.24 1210.51 L1407.66 1210.51 L1407.07 1210.51 L1406.48 1210.51 L1405.9 1210.51 L1405.31 1210.51 L1404.72 1210.51 L1404.14 1210.51 L1403.55 1210.51 L1402.96 1210.51 L1402.38 1210.51 L1401.79 1210.51 L1401.21 1210.51 L1400.62 1210.51 L1400.03 1210.51 L1399.45 1210.51 L1398.86 1210.51 L1398.27 1210.51 L1397.69 1210.51 L1397.1 1210.51 L1396.51 1210.51 L1395.93 1210.51 L1395.34 1210.51 L1394.75 1210.51 L1394.17 1210.51 L1393.58 1210.51 L1393 1210.51 L1392.41 1210.51 L1391.82 1210.51 L1391.24 1210.51 L1390.65 1210.51 L1390.06 1210.51 L1389.48 1210.51 L1388.89 1210.51 L1388.3 1210.51 L1387.72 1210.51 L1387.13 1210.51 L1386.55 1210.51 L1385.96 1210.51 L1385.37 1210.51 L1384.79 1210.51 L1384.2 1210.51 L1383.61 1210.51 L1383.03 1210.51 L1382.44 1210.51 L1381.85 1210.51 L1381.27 1210.51 L1380.68 1210.51 L1380.09 1210.51 L1379.51 1210.51 L1378.92 1210.51 L1378.34 1210.51 L1377.75 1210.51 L1377.16 1210.51 L1376.58 1210.51 L1375.99 1210.51 L1375.4 1210.51 L1374.82 1210.51 L1374.23 1210.51 L1373.64 1210.51 L1373.06 1210.51 L1372.47 1210.51 L1371.88 1210.51 L1371.3 1210.51 L1370.71 1210.51 L1370.13 1210.51 L1369.54 1210.51 L1368.95 1210.51 L1368.37 1210.51 L1367.78 1210.51 L1367.19 1210.51 L1366.61 1210.51 L1366.02 1210.51 L1365.43 1210.51 L1364.85 1210.51 L1364.26 1210.51 L1363.68 1210.51 L1363.09 1210.51 L1362.5 1210.51 L1361.92 1210.51 L1361.33 1210.51 L1360.74 1210.51 L1360.16 1210.51 L1359.57 1210.51 L1358.98 1210.51 L1358.4 1210.51 L1357.81 1210.51 L1357.22 1210.51 L1356.64 1210.51 L1356.05 1210.51 L1355.47 1210.51 L1354.88 1210.51 L1354.29 1210.51 L1353.71 1210.51 L1353.12 1210.51 L1352.53 1210.51 L1351.95 1210.51 L1351.36 1210.51 L1350.77 1210.51 L1350.19 1210.51 L1349.6 1210.51 L1349.01 1210.51 L1348.43 1210.51 L1347.84 1210.51 L1347.26 1210.51 L1346.67 1210.51 L1346.08 1210.51 L1345.5 1210.51 L1344.91 1210.51 L1344.32 1210.51 L1343.74 1210.51 L1343.15 1210.51 L1342.56 1210.51 L1341.98 1210.51 L1341.39 1210.51 L1340.8 1210.51 L1340.22 1210.51 L1339.63 1210.51 L1339.05 1210.51 L1338.46 1210.51 L1337.87 1210.51 L1337.29 1210.51 L1336.7 1210.51 L1336.11 1210.51 L1335.53 1210.51 L1334.94 1210.51 L1334.35 1210.51 L1333.77 1210.51 L1333.18 1210.51 L1332.6 1210.51 L1332.01 1210.51 L1331.42 1210.51 L1330.84 1210.51 L1330.25 1210.51 L1329.66 1210.51 L1329.08 1210.51 L1328.49 1210.51 L1327.9 1210.51 L1327.32 1210.51 L1326.73 1210.51 L1326.14 1210.51 L1325.56 1210.51 L1324.97 1210.51 L1324.39 1210.51 L1323.8 1210.51 L1323.21 1210.51 L1322.63 1210.51 L1322.04 1210.51 L1321.45 1210.51 L1320.87 1210.51 L1320.28 1210.51 L1319.69 1210.51 L1319.11 1210.51 L1318.52 1210.51 L1317.93 1210.51 L1317.35 1210.51 L1316.76 1210.51 L1316.18 1210.51 L1315.59 1210.51 L1315 1210.51 L1314.42 1210.51 L1313.83 1210.51 L1313.24 1210.51 L1312.66 1210.51 L1312.07 1210.51 L1311.48 1210.51 L1310.9 1210.51 L1310.31 1210.51 L1309.73 1210.51 L1309.14 1210.51 L1308.55 1210.51 L1307.97 1210.51 L1307.38 1210.51 L1306.79 1210.51 L1306.21 1210.51 L1305.62 1210.51 L1305.03 1210.51 L1304.45 1210.51 L1303.86 1210.51 L1303.27 1210.51 L1302.69 1210.51 L1302.1 1210.51 L1301.52 1210.51 L1300.93 1210.51 L1300.34 1210.51 L1299.76 1210.51 L1299.17 1210.51 L1298.58 1210.51 L1298 1210.51 L1297.41 1210.51 L1296.82 1210.51 L1296.24 1210.51 L1295.65 1210.51 L1295.06 1210.51 L1294.48 1210.51 L1293.89 1210.51 L1293.31 1210.51 L1292.72 1210.51 L1292.13 1210.51 L1291.55 1210.51 L1290.96 1210.51 L1290.37 1210.51 L1289.79 1210.51 L1289.2 1210.51 L1288.61 1210.51 L1288.03 1210.51 L1287.44 1210.51 L1286.86 1210.51 L1286.27 1210.51 L1285.68 1210.51 L1285.1 1210.51 L1284.51 1210.51 L1283.92 1210.51 L1283.34 1210.51 L1282.75 1210.51 L1282.16 1210.51 L1281.58 1210.51 L1280.99 1210.51 L1280.4 1210.51 L1279.82 1210.51 L1279.23 1210.51 L1278.65 1210.51 L1278.06 1210.51 L1277.47 1210.51 L1276.89 1210.51 L1276.3 1210.51 L1275.71 1210.51 L1275.13 1210.51 L1274.54 1210.51 L1273.95 1210.51 L1273.37 1210.51 L1272.78 1210.51 L1272.19 1210.51 L1271.61 1210.51 L1271.02 1210.51 L1270.44 1210.51 L1269.85 1210.51 L1269.26 1210.51 L1268.68 1210.51 L1268.09 1210.51 L1267.5 1210.51 L1266.92 1210.51 L1266.33 1210.51 L1265.74 1210.51 L1265.16 1210.51 L1264.57 1210.51 L1263.98 1210.51 L1263.4 1210.51 L1262.81 1210.51 L1262.23 1210.51 L1261.64 1210.51 L1261.05 1210.51 L1260.47 1210.51 L1259.88 1210.51 L1259.29 1210.51 L1258.71 1210.51 L1258.12 1210.51 L1257.53 1210.51 L1256.95 1210.51 L1256.36 1210.51 L1255.78 1210.51 L1255.19 1210.51 L1254.6 1210.51 L1254.02 1210.51 L1253.43 1210.51 L1252.84 1210.51 L1252.26 1210.51 L1251.67 1210.51 L1251.08 1210.51 L1250.5 1210.51 L1249.91 1210.51 L1249.32 1210.51 L1248.74 1210.51 L1248.15 1210.51 L1247.57 1210.51 L1246.98 1210.51 L1246.39 1210.51 L1245.81 1210.51 L1245.22 1210.51 L1244.63 1210.51 L1244.05 1210.51 L1243.46 1210.51 L1242.87 1210.51 L1242.29 1210.51 L1241.7 1210.51 L1241.11 1210.51 L1240.53 1210.51 L1239.94 1210.51 L1239.36 1210.51 L1238.77 1210.51 L1238.18 1210.51 L1237.6 1210.51 L1237.01 1210.51 L1236.42 1210.51 L1235.84 1210.51 L1235.25 1210.51 L1234.66 1210.51 L1234.08 1210.51 L1233.49 1210.51 L1232.91 1210.51 L1232.32 1210.51 L1231.73 1210.51 L1231.15 1210.51 L1230.56 1210.51 L1229.97 1210.51 L1229.39 1210.51 L1228.8 1210.51 L1228.21 1210.51 L1227.63 1210.51 L1227.04 1210.51 L1226.45 1210.51 L1225.87 1210.51 L1225.28 1210.51 L1224.7 1210.51 L1224.11 1210.51 L1223.52 1210.51 L1222.94 1210.51 L1222.35 1210.51 L1221.76 1210.51 L1221.18 1210.51 L1220.59 1210.51 L1220 1210.51 L1219.42 1210.51 L1218.83 1210.51 L1218.24 1210.51 L1217.66 1210.51 L1217.07 1210.51 L1216.49 1210.51 L1215.9 1210.51 L1215.31 1210.51 L1214.73 1210.51 L1214.14 1210.51 L1213.55 1210.51 L1212.97 1210.51 L1212.38 1210.51 L1211.79 1210.51 L1211.21 1210.51 L1210.62 1210.51 L1210.03 1210.51 L1209.45 1210.51 L1208.86 1210.51 L1208.28 1210.51 L1207.69 1210.51 L1207.1 1210.51 L1206.52 1210.51 L1205.93 1210.51 L1205.34 1210.51 L1204.76 1210.51 L1204.17 1210.51 L1203.58 1210.51 L1203 1210.51 L1202.41 1210.51 L1201.83 1210.51 L1201.24 1210.51 L1200.65 1210.51 L1200.07 1210.51 L1199.48 1210.51 L1198.89 1210.51 L1198.31 1210.51 L1197.72 1210.51 L1197.13 1210.51 L1196.55 1210.51 L1195.96 1210.51 L1195.37 1210.51 L1194.79 1210.51 L1194.2 1210.51 L1193.62 1210.51 L1193.03 1210.51 L1192.44 1210.51 L1191.86 1210.51 L1191.27 1210.51 L1190.68 1210.51 L1190.1 1210.51 L1189.51 1210.51 L1188.92 1210.51 L1188.34 1210.51 L1187.75 1210.51 L1187.16 1210.51 L1186.58 1210.51 L1185.99 1210.51 L1185.41 1210.51 L1184.82 1210.51 L1184.23 1210.51 L1183.65 1210.51 L1183.06 1210.51 L1182.47 1210.51 L1181.89 1210.51 L1181.3 1210.51 L1180.71 1210.51 L1180.13 1210.51 L1179.54 1210.51 L1178.96 1210.51 L1178.37 1210.51 L1177.78 1210.51 L1177.2 1210.51 L1176.61 1210.51 L1176.02 1210.51 L1175.44 1210.51 L1174.85 1210.51 L1174.26 1210.51 L1173.68 1210.51 L1173.09 1210.51 L1172.5 1210.51 L1171.92 1210.51 L1171.33 1210.51 L1170.75 1210.51 L1170.16 1210.51 L1169.57 1210.51 L1168.99 1210.51 L1168.4 1210.51 L1167.81 1210.51 L1167.23 1210.51 L1166.64 1210.51 L1166.05 1210.51 L1165.47 1210.51 L1164.88 1210.51 L1164.29 1210.51 L1163.71 1210.51 L1163.12 1210.51 L1162.54 1210.51 L1161.95 1210.51 L1161.36 1210.51 L1160.78 1210.51 L1160.19 1210.51 L1159.6 1210.51 L1159.02 1210.51 L1158.43 1210.51 L1157.84 1210.51 L1157.26 1210.51 L1156.67 1210.51 L1156.09 1210.51 L1155.5 1210.51 L1154.91 1210.51 L1154.33 1210.51 L1153.74 1210.51 L1153.15 1210.51 L1152.57 1210.51 L1151.98 1210.51 L1151.39 1210.51 L1150.81 1210.51 L1150.22 1210.51 L1149.63 1210.51 L1149.05 1210.51 L1148.46 1210.51 L1147.88 1210.51 L1147.29 1210.51 L1146.7 1210.51 L1146.12 1210.51 L1145.53 1210.51 L1144.94 1210.51 L1144.36 1210.51 L1143.77 1210.51 L1143.18 1210.51 L1142.6 1210.51 L1142.01 1210.51 L1141.42 1210.51 L1140.84 1210.51 L1140.25 1210.51 L1139.67 1210.51 L1139.08 1210.51 L1138.49 1210.51 L1137.91 1210.51 L1137.32 1210.51 L1136.73 1210.51 L1136.15 1210.51 L1135.56 1210.51 L1134.97 1210.51 L1134.39 1210.51 L1133.8 1210.51 L1133.21 1210.51 L1132.63 1210.51 L1132.04 1210.51 L1131.46 1210.51 L1130.87 1210.51 L1130.28 1210.51 L1129.7 1210.51 L1129.11 1210.51 L1128.52 1210.51 L1127.94 1210.51 L1127.35 1210.51 L1126.76 1210.51 L1126.18 1210.51 L1125.59 1210.51 L1125.01 1210.51 L1124.42 1210.51 L1123.83 1210.51 L1123.25 1210.51 L1122.66 1210.51 L1122.07 1210.51 L1121.49 1210.51 L1120.9 1210.51 L1120.31 1210.51 L1119.73 1210.51 L1119.14 1210.51 L1118.55 1210.51 L1117.97 1210.51 L1117.38 1210.51 L1116.8 1210.51 L1116.21 1210.51 L1115.62 1210.51 L1115.04 1210.51 L1114.45 1210.51 L1113.86 1210.51 L1113.28 1210.51 L1112.69 1210.51 L1112.1 1210.51 L1111.52 1210.51 L1110.93 1210.51 L1110.34 1210.51 L1109.76 1210.51 L1109.17 1210.51 L1108.59 1210.51 L1108 1210.51 L1107.41 1210.51 L1106.83 1210.51 L1106.24 1210.51 L1105.65 1210.51 L1105.07 1210.51 L1104.48 1210.51 L1103.89 1210.51 L1103.31 1210.51 L1102.72 1210.51 L1102.14 1210.51 L1101.55 1210.51 L1100.96 1210.51 L1100.38 1210.51 L1099.79 1210.51 L1099.2 1210.51 L1098.62 1210.51 L1098.03 1210.51 L1097.44 1210.51 L1096.86 1210.51 L1096.27 1210.51 L1095.68 1210.51 L1095.1 1210.51 L1094.51 1210.51 L1093.93 1210.51 L1093.34 1210.51 L1092.75 1210.51 L1092.17 1210.51 L1091.58 1210.51 L1090.99 1210.51 L1090.41 1210.51 L1089.82 1210.51 L1089.23 1210.51 L1088.65 1210.51 L1088.06 1210.51 L1087.47 1210.51 L1086.89 1210.51 L1086.3 1210.51 L1085.72 1210.51 L1085.13 1210.51 L1084.54 1210.51 L1083.96 1210.51 L1083.37 1210.51 L1082.78 1210.51 L1082.2 1210.51 L1081.61 1210.51 L1081.02 1210.51 L1080.44 1210.51 L1079.85 1210.51 L1079.26 1210.51 L1078.68 1210.51 L1078.09 1210.51 L1077.51 1210.51 L1076.92 1210.51 L1076.33 1210.51 L1075.75 1210.51 L1075.16 1210.51 L1074.57 1210.51 L1073.99 1210.51 L1073.4 1210.51 L1072.81 1210.51 L1072.23 1210.51 L1071.64 1210.51 L1071.06 1210.51 L1070.47 1210.51 L1069.88 1210.51 L1069.3 1210.51 L1068.71 1210.51 L1068.12 1210.51 L1067.54 1210.51 L1066.95 1210.51 L1066.36 1210.51 L1065.78 1210.51 L1065.19 1210.51 L1064.6 1210.51 L1064.02 1210.51 L1063.43 1210.51 L1062.85 1210.51 L1062.26 1210.51 L1061.67 1210.51 L1061.09 1210.51 L1060.5 1210.51 L1059.91 1210.51 L1059.33 1210.51 L1058.74 1210.51 L1058.15 1210.51 L1057.57 1210.51 L1056.98 1210.51 L1056.39 1210.51 L1055.81 1210.51 L1055.22 1210.51 L1054.64 1210.51 L1054.05 1210.51 L1053.46 1210.51 L1052.88 1210.51 L1052.29 1210.51 L1051.7 1210.51 L1051.12 1210.51 L1050.53 1210.51 L1049.94 1210.51 L1049.36 1210.51 L1048.77 1210.51 L1048.19 1210.51 L1047.6 1210.51 L1047.01 1210.51 L1046.43 1210.51 L1045.84 1210.51 L1045.25 1210.51 L1044.67 1210.51 L1044.08 1210.51 L1043.49 1210.51 L1042.91 1210.51 L1042.32 1210.51 L1041.73 1210.51 L1041.15 1210.51 L1040.56 1210.51 L1039.98 1210.51 L1039.39 1210.51 L1038.8 1210.51 L1038.22 1210.51 L1037.63 1210.51 L1037.04 1210.51 L1036.46 1210.51 L1035.87 1210.51 L1035.28 1210.51 L1034.7 1210.51 L1034.11 1210.51 L1033.52 1210.51 L1032.94 1210.51 L1032.35 1210.51 L1031.77 1210.51 L1031.18 1210.51 L1030.59 1210.51 L1030.01 1210.51 L1029.42 1210.51 L1028.83 1210.51 L1028.25 1210.51 L1027.66 1210.51 L1027.07 1210.51 L1026.49 1210.51 L1025.9 1210.51 L1025.32 1210.51 L1024.73 1210.51 L1024.14 1210.51 L1023.56 1210.51 L1022.97 1210.51 L1022.38 1210.51 L1021.8 1210.51 L1021.21 1210.51 L1020.62 1210.51 L1020.04 1210.51 L1019.45 1210.51 L1018.86 1210.51 L1018.28 1210.51 L1017.69 1210.51 L1017.11 1210.51 L1016.52 1210.51 L1015.93 1210.51 L1015.35 1210.51 L1014.76 1210.51 L1014.17 1210.51 L1013.59 1210.51 L1013 1210.51 L1012.41 1210.51 L1011.83 1210.51 L1011.24 1210.51 L1010.65 1210.51 L1010.07 1210.51 L1009.48 1210.51 L1008.9 1210.51 L1008.31 1210.51 L1007.72 1210.51 L1007.14 1210.51 L1006.55 1210.51 L1005.96 1210.51 L1005.38 1210.51 L1004.79 1210.51 L1004.2 1210.51 L1003.62 1210.51 L1003.03 1210.51 L1002.44 1210.51 L1001.86 1210.51 L1001.27 1210.51 L1000.69 1210.51 L1000.1 1210.51 L999.513 1210.51 L998.926 1210.51 L998.34 1210.51 L997.754 1210.51 L997.167 1210.51 L996.581 1210.51 L995.994 1210.51 L995.408 1210.51 L994.822 1210.51 L994.235 1210.51 L993.649 1210.51 L993.062 1210.51 L992.476 1210.51 L991.889 1210.51 L991.303 1210.51 L990.717 1210.51 L990.13 1210.51 L989.544 1210.51 L988.957 1210.51 L988.371 1210.51 L987.785 1210.51 L987.198 1210.51 L986.612 1210.51 L986.025 1210.51  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.58 986.612,1210.58 987.198,1210.58 987.785,1210.58 988.371,1210.58 988.957,1210.58 989.544,1210.58 990.13,1210.58 990.717,1210.58 991.303,1210.58 991.889,1210.58 992.476,1210.58 993.062,1210.58 993.649,1210.58 994.235,1210.58 994.822,1210.58 995.408,1210.58 995.994,1210.58 996.581,1210.58 997.167,1210.58 997.754,1210.58 998.34,1210.58 998.926,1210.58 999.513,1210.58 1000.1,1210.58 1000.69,1210.58 1001.27,1210.58 1001.86,1210.58 1002.44,1210.58 1003.03,1210.58 1003.62,1210.58 1004.2,1210.58 1004.79,1210.58 1005.38,1210.58 1005.96,1210.58 1006.55,1210.58 1007.14,1210.58 1007.72,1210.58 1008.31,1210.58 1008.9,1210.58 1009.48,1210.58 1010.07,1210.58 1010.65,1210.58 1011.24,1210.58 1011.83,1210.58 1012.41,1210.58 1013,1210.58 1013.59,1210.58 1014.17,1210.58 1014.76,1210.58 1015.35,1210.58 1015.93,1210.58 1016.52,1210.58 1017.11,1210.58 1017.69,1210.58 1018.28,1210.58 1018.86,1210.58 1019.45,1210.58 1020.04,1210.58 1020.62,1210.58 1021.21,1210.58 1021.8,1210.58 1022.38,1210.58 1022.97,1210.58 1023.56,1210.58 1024.14,1210.58 1024.73,1210.58 1025.32,1210.58 1025.9,1210.58 1026.49,1210.58 1027.07,1210.58 1027.66,1210.58 1028.25,1210.58 1028.83,1210.58 1029.42,1210.58 1030.01,1210.58 1030.59,1210.58 1031.18,1210.58 1031.77,1210.58 1032.35,1210.58 1032.94,1210.58 1033.52,1210.58 1034.11,1210.58 1034.7,1210.58 1035.28,1210.58 1035.87,1210.58 1036.46,1210.58 1037.04,1210.58 1037.63,1210.58 1038.22,1210.58 1038.8,1210.58 1039.39,1210.58 1039.98,1210.58 1040.56,1210.58 1041.15,1210.58 1041.73,1210.58 1042.32,1210.58 1042.91,1210.58 1043.49,1210.58 1044.08,1210.58 1044.67,1210.58 1045.25,1210.58 1045.84,1210.58 1046.43,1210.58 1047.01,1210.58 1047.6,1210.58 1048.19,1210.58 1048.77,1210.58 1049.36,1210.58 1049.94,1210.58 1050.53,1210.58 1051.12,1210.58 1051.7,1210.58 1052.29,1210.58 1052.88,1210.58 1053.46,1210.58 1054.05,1210.58 1054.64,1210.58 1055.22,1210.58 1055.81,1210.58 1056.39,1210.58 1056.98,1210.58 1057.57,1210.58 1058.15,1210.58 1058.74,1210.58 1059.33,1210.58 1059.91,1210.58 1060.5,1210.58 1061.09,1210.58 1061.67,1210.58 1062.26,1210.58 1062.85,1210.58 1063.43,1210.58 1064.02,1210.58 1064.6,1210.58 1065.19,1210.58 1065.78,1210.58 1066.36,1210.58 1066.95,1210.58 1067.54,1210.58 1068.12,1210.58 1068.71,1210.58 1069.3,1210.58 1069.88,1210.58 1070.47,1210.58 1071.06,1210.58 1071.64,1210.58 1072.23,1210.58 1072.81,1210.58 1073.4,1210.58 1073.99,1210.58 1074.57,1210.58 1075.16,1210.58 1075.75,1210.58 1076.33,1210.58 1076.92,1210.58 1077.51,1210.58 1078.09,1210.58 1078.68,1210.58 1079.26,1210.58 1079.85,1210.58 1080.44,1210.58 1081.02,1210.58 1081.61,1210.58 1082.2,1210.58 1082.78,1210.58 1083.37,1210.58 1083.96,1210.58 1084.54,1210.58 1085.13,1210.58 1085.72,1210.58 1086.3,1210.58 1086.89,1210.58 1087.47,1210.58 1088.06,1210.58 1088.65,1210.58 1089.23,1210.58 1089.82,1210.58 1090.41,1210.58 1090.99,1210.58 1091.58,1210.58 1092.17,1210.58 1092.75,1210.58 1093.34,1210.58 1093.93,1210.58 1094.51,1210.58 1095.1,1210.58 1095.68,1210.58 1096.27,1210.58 1096.86,1210.58 1097.44,1210.58 1098.03,1210.58 1098.62,1210.58 1099.2,1210.58 1099.79,1210.58 1100.38,1210.58 1100.96,1210.58 1101.55,1210.58 1102.14,1210.58 1102.72,1210.58 1103.31,1210.58 1103.89,1210.58 1104.48,1210.58 1105.07,1210.58 1105.65,1210.58 1106.24,1210.58 1106.83,1210.58 1107.41,1210.58 1108,1210.58 1108.59,1210.58 1109.17,1210.58 1109.76,1210.58 1110.34,1210.58 1110.93,1210.58 1111.52,1210.58 1112.1,1210.58 1112.69,1210.58 1113.28,1210.58 1113.86,1210.58 1114.45,1210.58 1115.04,1210.58 1115.62,1210.58 1116.21,1210.58 1116.8,1210.58 1117.38,1210.58 1117.97,1210.58 1118.55,1210.58 1119.14,1210.58 1119.73,1210.58 1120.31,1210.58 1120.9,1210.58 1121.49,1210.58 1122.07,1210.58 1122.66,1210.58 1123.25,1210.58 1123.83,1210.58 1124.42,1210.58 1125.01,1210.58 1125.59,1210.58 1126.18,1210.58 1126.76,1210.58 1127.35,1210.58 1127.94,1210.58 1128.52,1210.58 1129.11,1210.58 1129.7,1210.58 1130.28,1210.58 1130.87,1210.58 1131.46,1210.58 1132.04,1210.58 1132.63,1210.58 1133.21,1210.58 1133.8,1210.58 1134.39,1210.58 1134.97,1210.58 1135.56,1210.58 1136.15,1210.58 1136.73,1210.58 1137.32,1210.58 1137.91,1210.58 1138.49,1210.58 1139.08,1210.58 1139.67,1210.58 1140.25,1210.58 1140.84,1210.58 1141.42,1210.58 1142.01,1210.58 1142.6,1210.58 1143.18,1210.58 1143.77,1210.58 1144.36,1210.58 1144.94,1210.58 1145.53,1210.58 1146.12,1210.58 1146.7,1210.58 1147.29,1210.58 1147.88,1210.58 1148.46,1210.58 1149.05,1210.58 1149.63,1210.58 1150.22,1210.58 1150.81,1210.58 1151.39,1210.58 1151.98,1210.58 1152.57,1210.58 1153.15,1210.58 1153.74,1210.58 1154.33,1210.58 1154.91,1210.58 1155.5,1210.58 1156.09,1210.58 1156.67,1210.58 1157.26,1210.58 1157.84,1210.58 1158.43,1210.58 1159.02,1210.58 1159.6,1210.58 1160.19,1210.58 1160.78,1210.58 1161.36,1210.58 1161.95,1210.58 1162.54,1210.58 1163.12,1210.58 1163.71,1210.58 1164.29,1210.58 1164.88,1210.58 1165.47,1210.58 1166.05,1210.58 1166.64,1210.58 1167.23,1210.58 1167.81,1210.58 1168.4,1210.58 1168.99,1210.58 1169.57,1210.58 1170.16,1210.58 1170.75,1210.58 1171.33,1210.58 1171.92,1210.58 1172.5,1210.58 1173.09,1210.58 1173.68,1210.58 1174.26,1210.58 1174.85,1210.58 1175.44,1210.58 1176.02,1210.58 1176.61,1210.58 1177.2,1210.58 1177.78,1210.58 1178.37,1210.58 1178.96,1210.58 1179.54,1210.58 1180.13,1210.58 1180.71,1210.58 1181.3,1210.58 1181.89,1210.58 1182.47,1210.58 1183.06,1210.58 1183.65,1210.58 1184.23,1210.58 1184.82,1210.58 1185.41,1210.58 1185.99,1210.58 1186.58,1210.58 1187.16,1210.58 1187.75,1210.58 1188.34,1210.58 1188.92,1210.58 1189.51,1210.58 1190.1,1210.58 1190.68,1210.58 1191.27,1210.58 1191.86,1210.58 1192.44,1210.58 1193.03,1210.58 1193.62,1210.58 1194.2,1210.58 1194.79,1210.58 1195.37,1210.58 1195.96,1210.58 1196.55,1210.58 1197.13,1210.58 1197.72,1210.58 1198.31,1210.58 1198.89,1210.58 1199.48,1210.58 1200.07,1210.58 1200.65,1210.58 1201.24,1210.58 1201.83,1210.58 1202.41,1210.58 1203,1210.58 1203.58,1210.58 1204.17,1210.58 1204.76,1210.58 1205.34,1210.58 1205.93,1210.58 1206.52,1210.58 1207.1,1210.58 1207.69,1210.58 1208.28,1210.58 1208.86,1210.58 1209.45,1210.58 1210.03,1210.58 1210.62,1210.58 1211.21,1210.58 1211.79,1210.58 1212.38,1210.58 1212.97,1210.58 1213.55,1210.58 1214.14,1210.58 1214.73,1210.58 1215.31,1210.58 1215.9,1210.58 1216.49,1210.58 1217.07,1210.58 1217.66,1210.58 1218.24,1210.58 1218.83,1210.58 1219.42,1210.58 1220,1210.58 1220.59,1210.58 1221.18,1210.58 1221.76,1210.58 1222.35,1210.58 1222.94,1210.58 1223.52,1210.58 1224.11,1210.58 1224.7,1210.58 1225.28,1210.58 1225.87,1210.58 1226.45,1210.58 1227.04,1210.58 1227.63,1210.58 1228.21,1210.58 1228.8,1210.58 1229.39,1210.58 1229.97,1210.58 1230.56,1210.58 1231.15,1210.58 1231.73,1210.58 1232.32,1210.58 1232.91,1210.58 1233.49,1210.58 1234.08,1210.58 1234.66,1210.58 1235.25,1210.58 1235.84,1210.58 1236.42,1210.58 1237.01,1210.58 1237.6,1210.58 1238.18,1210.58 1238.77,1210.58 1239.36,1210.58 1239.94,1210.58 1240.53,1210.58 1241.11,1210.58 1241.7,1210.58 1242.29,1210.58 1242.87,1210.58 1243.46,1210.58 1244.05,1210.58 1244.63,1210.58 1245.22,1210.58 1245.81,1210.58 1246.39,1210.58 1246.98,1210.58 1247.57,1210.58 1248.15,1210.58 1248.74,1210.58 1249.32,1210.58 1249.91,1210.58 1250.5,1210.58 1251.08,1210.58 1251.67,1210.58 1252.26,1210.58 1252.84,1210.58 1253.43,1210.58 1254.02,1210.58 1254.6,1210.58 1255.19,1210.58 1255.78,1210.58 1256.36,1210.58 1256.95,1210.58 1257.53,1210.58 1258.12,1210.58 1258.71,1210.58 1259.29,1210.58 1259.88,1210.58 1260.47,1210.58 1261.05,1210.58 1261.64,1210.58 1262.23,1210.58 1262.81,1210.58 1263.4,1210.58 1263.98,1210.58 1264.57,1210.58 1265.16,1210.58 1265.74,1210.58 1266.33,1210.58 1266.92,1210.58 1267.5,1210.58 1268.09,1210.58 1268.68,1210.58 1269.26,1210.58 1269.85,1210.58 1270.44,1210.58 1271.02,1210.58 1271.61,1210.58 1272.19,1210.58 1272.78,1210.58 1273.37,1210.58 1273.95,1210.58 1274.54,1210.58 1275.13,1210.58 1275.71,1210.58 1276.3,1210.58 1276.89,1210.58 1277.47,1210.58 1278.06,1210.58 1278.65,1210.58 1279.23,1210.58 1279.82,1210.58 1280.4,1210.58 1280.99,1210.58 1281.58,1210.58 1282.16,1210.58 1282.75,1210.58 1283.34,1210.58 1283.92,1210.58 1284.51,1210.58 1285.1,1210.58 1285.68,1210.58 1286.27,1210.58 1286.86,1210.58 1287.44,1210.58 1288.03,1210.58 1288.61,1210.58 1289.2,1210.58 1289.79,1210.58 1290.37,1210.58 1290.96,1210.58 1291.55,1210.58 1292.13,1210.58 1292.72,1210.58 1293.31,1210.58 1293.89,1210.58 1294.48,1210.58 1295.06,1210.58 1295.65,1210.58 1296.24,1210.58 1296.82,1210.58 1297.41,1210.58 1298,1210.58 1298.58,1210.58 1299.17,1210.58 1299.76,1210.58 1300.34,1210.58 1300.93,1210.58 1301.52,1210.58 1302.1,1210.58 1302.69,1210.58 1303.27,1210.58 1303.86,1210.58 1304.45,1210.58 1305.03,1210.58 1305.62,1210.58 1306.21,1210.58 1306.79,1210.58 1307.38,1210.58 1307.97,1210.58 1308.55,1210.58 1309.14,1210.58 1309.73,1210.58 1310.31,1210.58 1310.9,1210.58 1311.48,1210.58 1312.07,1210.58 1312.66,1210.58 1313.24,1210.58 1313.83,1210.58 1314.42,1210.58 1315,1210.58 1315.59,1210.58 1316.18,1210.58 1316.76,1210.58 1317.35,1210.58 1317.93,1210.58 1318.52,1210.58 1319.11,1210.58 1319.69,1210.58 1320.28,1210.58 1320.87,1210.58 1321.45,1210.58 1322.04,1210.58 1322.63,1210.58 1323.21,1210.58 1323.8,1210.58 1324.39,1210.58 1324.97,1210.58 1325.56,1210.58 1326.14,1210.58 1326.73,1210.58 1327.32,1210.58 1327.9,1210.58 1328.49,1210.58 1329.08,1210.58 1329.66,1210.58 1330.25,1210.58 1330.84,1210.58 1331.42,1210.58 1332.01,1210.58 1332.6,1210.58 1333.18,1210.58 1333.77,1210.58 1334.35,1210.58 1334.94,1210.58 1335.53,1210.58 1336.11,1210.58 1336.7,1210.58 1337.29,1210.58 1337.87,1210.58 1338.46,1210.58 1339.05,1210.58 1339.63,1210.58 1340.22,1210.58 1340.8,1210.58 1341.39,1210.58 1341.98,1210.58 1342.56,1210.58 1343.15,1210.58 1343.74,1210.58 1344.32,1210.58 1344.91,1210.58 1345.5,1210.58 1346.08,1210.58 1346.67,1210.58 1347.26,1210.58 1347.84,1210.58 1348.43,1210.58 1349.01,1210.58 1349.6,1210.58 1350.19,1210.58 1350.77,1210.58 1351.36,1210.58 1351.95,1210.58 1352.53,1210.58 1353.12,1210.58 1353.71,1210.58 1354.29,1210.58 1354.88,1210.58 1355.47,1210.58 1356.05,1210.58 1356.64,1210.58 1357.22,1210.58 1357.81,1210.58 1358.4,1210.58 1358.98,1210.58 1359.57,1210.58 1360.16,1210.58 1360.74,1210.58 1361.33,1210.58 1361.92,1210.58 1362.5,1210.58 1363.09,1210.58 1363.68,1210.58 1364.26,1210.58 1364.85,1210.58 1365.43,1210.58 1366.02,1210.58 1366.61,1210.58 1367.19,1210.58 1367.78,1210.58 1368.37,1210.58 1368.95,1210.58 1369.54,1210.58 1370.13,1210.58 1370.71,1210.58 1371.3,1210.58 1371.88,1210.58 1372.47,1210.58 1373.06,1210.58 1373.64,1210.58 1374.23,1210.58 1374.82,1210.58 1375.4,1210.58 1375.99,1210.58 1376.58,1210.58 1377.16,1210.58 1377.75,1210.58 1378.34,1210.58 1378.92,1210.58 1379.51,1210.58 1380.09,1210.58 1380.68,1210.58 1381.27,1210.58 1381.85,1210.58 1382.44,1210.58 1383.03,1210.58 1383.61,1210.58 1384.2,1210.58 1384.79,1210.58 1385.37,1210.58 1385.96,1210.58 1386.55,1210.58 1387.13,1210.58 1387.72,1210.58 1388.3,1210.58 1388.89,1210.58 1389.48,1210.58 1390.06,1210.58 1390.65,1210.58 1391.24,1210.58 1391.82,1210.58 1392.41,1210.58 1393,1210.58 1393.58,1210.58 1394.17,1210.58 1394.75,1210.58 1395.34,1210.58 1395.93,1210.58 1396.51,1210.58 1397.1,1210.58 1397.69,1210.58 1398.27,1210.58 1398.86,1210.58 1399.45,1210.58 1400.03,1210.58 1400.62,1210.58 1401.21,1210.58 1401.79,1210.58 1402.38,1210.58 1402.96,1210.58 1403.55,1210.58 1404.14,1210.58 1404.72,1210.58 1405.31,1210.58 1405.9,1210.58 1406.48,1210.58 1407.07,1210.58 1407.66,1210.58 1408.24,1210.58 1408.83,1210.58 1409.42,1210.58 1410,1210.58 1410.59,1210.58 1411.17,1210.58 1411.76,1210.58 1412.35,1210.58 1412.93,1210.58 1413.52,1210.58 1414.11,1210.58 1414.69,1210.58 1415.28,1210.58 1415.87,1210.58 1416.45,1210.58 1417.04,1210.58 1417.63,1210.58 1418.21,1210.58 1418.8,1210.58 1419.38,1210.58 1419.97,1210.58 1420.56,1210.58 1421.14,1210.58 1421.73,1210.58 1422.32,1210.58 1422.9,1210.58 1423.49,1210.58 1424.08,1210.58 1424.66,1210.58 1425.25,1210.58 1425.83,1210.58 1426.42,1210.58 1427.01,1210.58 1427.59,1210.58 1428.18,1210.58 1428.77,1210.58 1429.35,1210.58 1429.94,1210.58 1430.53,1210.58 1431.11,1210.58 1431.7,1210.58 1432.29,1210.58 1432.87,1210.58 1433.46,1210.58 1434.04,1210.58 1434.63,1210.58 1435.22,1210.58 1435.8,1210.58 1436.39,1210.58 1436.98,1210.58 1437.56,1210.58 1438.15,1210.58 1438.74,1210.58 1439.32,1210.58 1439.91,1210.58 1440.5,1210.58 1441.08,1210.58 1441.67,1210.58 1442.25,1210.58 1442.84,1210.58 1443.43,1210.58 1444.01,1210.58 1444.6,1210.58 1445.19,1210.58 1445.77,1210.58 1446.36,1210.58 1446.95,1210.58 1447.53,1210.58 1448.12,1210.58 1448.7,1210.58 1449.29,1210.58 1449.88,1210.58 1450.46,1210.58 1451.05,1210.58 1451.64,1210.58 1452.22,1210.58 1452.81,1210.58 1453.4,1210.58 1453.98,1210.58 1454.57,1210.58 1455.16,1210.58 1455.74,1210.58 1456.33,1210.58 1456.91,1210.58 1457.5,1210.58 1458.09,1210.58 1458.67,1210.58 1459.26,1210.58 1459.85,1210.58 1460.43,1210.58 1461.02,1210.58 1461.61,1210.58 1462.19,1210.58 1462.78,1210.58 1463.37,1210.58 1463.95,1210.58 1464.54,1210.58 1465.12,1210.58 1465.71,1210.58 1466.3,1210.58 1466.88,1210.58 1467.47,1210.58 1468.06,1210.58 1468.64,1210.58 1469.23,1210.58 1469.82,1210.58 1470.4,1210.58 1470.99,1210.58 1471.57,1210.58 1472.16,1210.58 1472.75,1210.58 1473.33,1210.58 1473.92,1210.58 1474.51,1210.58 1475.09,1210.58 1475.68,1210.58 1476.27,1210.58 1476.85,1210.58 1477.44,1210.58 1478.03,1210.58 1478.61,1210.58 1479.2,1210.58 1479.78,1210.58 1480.37,1210.58 1480.96,1210.58 1481.54,1210.58 1482.13,1210.58 1482.72,1210.58 1483.3,1210.58 1483.89,1210.58 1484.48,1210.58 1485.06,1210.58 1485.65,1210.58 1486.24,1210.58 1486.82,1210.58 1487.41,1210.58 1487.99,1210.58 1488.58,1210.58 1489.17,1210.58 1489.75,1210.58 1490.34,1210.58 1490.93,1210.58 1491.51,1210.58 1492.1,1210.58 1492.69,1210.58 1493.27,1210.58 1493.86,1210.58 1494.45,1210.58 1495.03,1210.58 1495.62,1210.58 1496.2,1210.58 1496.79,1210.58 1497.38,1210.58 1497.96,1210.58 1498.55,1210.58 1499.14,1210.58 1499.72,1210.58 1500.31,1210.58 1500.9,1210.58 1501.48,1210.58 1502.07,1210.58 1502.65,1210.58 1503.24,1210.58 1503.83,1210.58 1504.41,1210.58 1505,1210.58 1505.59,1210.58 1506.17,1210.58 1506.76,1210.58 1507.35,1210.58 1507.93,1210.58 1508.52,1210.58 1509.11,1210.58 1509.69,1210.58 1510.28,1210.58 1510.86,1210.58 1511.45,1210.58 1512.04,1210.58 1512.62,1210.58 1513.21,1210.58 1513.8,1210.58 1514.38,1210.58 1514.97,1210.58 1515.56,1210.58 1516.14,1210.58 1516.73,1210.58 1517.32,1210.58 1517.9,1210.58 1518.49,1210.58 1519.07,1210.58 1519.66,1210.58 1520.25,1210.58 1520.83,1210.58 1521.42,1210.58 1522.01,1210.58 1522.59,1210.58 1523.18,1210.58 1523.77,1210.58 1524.35,1210.58 1524.94,1210.58 1525.52,1210.58 1526.11,1210.58 1526.7,1210.58 1527.28,1210.58 1527.87,1210.58 1528.46,1210.58 1529.04,1210.58 1529.63,1210.58 1530.22,1210.58 1530.8,1210.58 1531.39,1210.58 1531.98,1210.58 1532.56,1210.58 1533.15,1210.58 1533.73,1210.58 1534.32,1210.58 1534.91,1210.58 1535.49,1210.58 1536.08,1210.58 1536.67,1210.58 1537.25,1210.58 1537.84,1210.58 1538.43,1210.58 1539.01,1210.58 1539.6,1210.58 1540.19,1210.58 1540.77,1210.58 1541.36,1210.58 1541.94,1210.58 1542.53,1210.58 1543.12,1210.58 1543.7,1210.58 1544.29,1210.58 1544.88,1210.58 1545.46,1210.58 1546.05,1210.58 1546.64,1210.58 1547.22,1210.58 1547.81,1210.58 1548.4,1210.58 1548.98,1210.58 1549.57,1210.58 1550.15,1210.58 1550.74,1210.58 1551.33,1210.58 1551.91,1210.58 1552.5,1210.58 1553.09,1210.58 1553.67,1210.58 1554.26,1210.58 1554.85,1210.58 1555.43,1210.58 1556.02,1210.58 1556.6,1210.58 1557.19,1210.58 1557.78,1210.58 1558.36,1210.58 1558.95,1210.58 1559.54,1210.58 1560.12,1210.58 1560.71,1210.58 1561.3,1210.58 1561.88,1210.58 1562.47,1210.58 1563.06,1210.58 1563.64,1210.58 1564.23,1210.58 1564.81,1210.58 1565.4,1210.58 1565.99,1210.58 1566.57,1210.58 1567.16,1210.58 1567.75,1210.58 1568.33,1210.58 1568.92,1210.58 1569.51,1210.58 1570.09,1210.58 1570.68,1210.58 1571.27,1210.58 1571.85,1210.58 1572.44,1210.58 1573.02,1210.58 1573.61,1210.58 1574.2,1210.58 1574.78,1210.58 1575.37,1210.58 1575.96,1210.58 1576.54,1210.58 1577.13,1210.58 1577.72,1210.58 1578.3,1210.58 1578.89,1210.58 1579.47,1210.58 1580.06,1210.58 1580.65,1210.58 1581.23,1210.58 1581.82,1210.58 1582.41,1210.58 1582.99,1210.58 1583.58,1210.58 1584.17,1210.58 1584.75,1210.58 1585.34,1210.58 1585.93,1210.58 1586.51,1210.58 1587.1,1210.58 1587.68,1210.58 1588.27,1210.58 1588.86,1210.58 1589.44,1210.58 1590.03,1210.58 1590.62,1210.58 1591.2,1210.58 1591.79,1210.58 1592.38,1210.58 1592.96,1210.58 1593.55,1210.58 1594.14,1210.58 1594.72,1210.58 1595.31,1210.58 1595.89,1210.58 1596.48,1210.58 1597.07,1210.58 1597.65,1210.58 1598.24,1210.58 1598.83,1210.58 1599.41,1210.58 1600,1210.58 1600.59,1210.58 1601.17,1210.58 1601.76,1210.58 1602.34,1210.58 1602.93,1210.58 1603.52,1210.58 1604.1,1210.58 1604.69,1210.58 1605.28,1210.58 1605.86,1210.58 1606.45,1210.58 1607.04,1210.58 1607.62,1210.58 1608.21,1210.58 1608.8,1210.58 1609.38,1210.58 1609.97,1210.58 1610.55,1210.58 1611.14,1210.58 1611.73,1210.58 1612.31,1210.58 1612.9,1210.58 1613.49,1210.58 1614.07,1210.58 1614.66,1210.58 1615.25,1210.58 1615.83,1210.58 1616.42,1210.58 1617.01,1210.58 1617.59,1210.58 1618.18,1210.58 1618.76,1210.58 1619.35,1210.58 1619.94,1210.58 1620.52,1210.58 1621.11,1210.58 1621.7,1210.58 1622.28,1210.58 1622.87,1210.58 1623.46,1210.58 1624.04,1210.58 1624.63,1210.58 1625.22,1210.58 1625.8,1210.58 1626.39,1210.58 1626.97,1210.58 1627.56,1210.58 1628.15,1210.58 1628.73,1210.58 1629.32,1210.58 1629.91,1210.58 1630.49,1210.58 1631.08,1210.58 1631.67,1210.58 1632.25,1210.58 1632.84,1210.58 1633.42,1210.58 1634.01,1210.58 1634.6,1210.58 1635.18,1210.58 1635.77,1210.58 1636.36,1210.58 1636.94,1210.58 1637.53,1210.58 1638.12,1210.58 1638.7,1210.58 1639.29,1210.58 1639.88,1210.58 1640.46,1210.58 1641.05,1210.58 1641.63,1210.58 1642.22,1210.58 1642.81,1210.58 1643.39,1210.58 1643.98,1210.58 1644.57,1210.58 1645.15,1210.58 1645.74,1210.58 1646.33,1210.58 1646.91,1210.58 1647.5,1210.58 1648.09,1210.58 1648.67,1210.58 1649.26,1210.58 1649.84,1210.58 1650.43,1210.58 1651.02,1210.58 1651.6,1210.58 1652.19,1210.58 1652.78,1210.58 1653.36,1210.58 1653.95,1210.58 1654.54,1210.58 1655.12,1210.58 1655.71,1210.58 1656.29,1210.58 1656.88,1210.58 1657.47,1210.58 1658.05,1210.58 1658.64,1210.58 1659.23,1210.58 1659.81,1210.58 1660.4,1210.58 1660.99,1210.58 1661.57,1210.58 1662.16,1210.58 1662.75,1210.58 1663.33,1210.58 1663.92,1210.58 1664.5,1210.58 1665.09,1210.58 1665.68,1210.58 1666.26,1210.58 1666.85,1210.58 1667.44,1210.58 1668.02,1210.58 1668.61,1210.58 1669.2,1210.58 1669.78,1210.58 1670.37,1210.58 1670.96,1210.58 1671.54,1210.58 1672.13,1210.58 1672.71,1210.58 1673.3,1210.58 1673.89,1210.58 1674.47,1210.58 1675.06,1210.58 1675.65,1210.58 1676.23,1210.58 1676.82,1210.58 1677.41,1210.58 1677.99,1210.58 1678.58,1210.58 1679.17,1210.58 1679.75,1210.58 1680.34,1210.58 1680.92,1210.58 1681.51,1210.58 1682.1,1210.58 1682.68,1210.58 1683.27,1210.58 1683.86,1210.58 1684.44,1210.58 1685.03,1210.58 1685.62,1210.58 1686.2,1210.58 1686.79,1210.58 1687.37,1210.58 1687.96,1210.58 1688.55,1210.58 1689.13,1210.58 1689.72,1210.58 1690.31,1210.58 1690.89,1210.58 1691.48,1210.58 1692.07,1210.58 1692.65,1210.58 1693.24,1210.58 1693.83,1210.58 1694.41,1210.58 1695,1210.58 1695.58,1210.58 1696.17,1210.58 1696.76,1210.58 1697.34,1210.58 1697.93,1210.58 1698.52,1210.58 1699.1,1210.58 1699.69,1210.58 1700.28,1210.58 1700.86,1210.58 1701.45,1210.58 1702.04,1210.58 1702.62,1210.58 1703.21,1210.58 1703.79,1210.58 1704.38,1210.58 1704.97,1210.58 1705.55,1210.58 1706.14,1210.58 1706.73,1210.58 1707.31,1210.58 1707.9,1210.58 1708.49,1210.58 1709.07,1210.58 1709.66,1210.58 1710.24,1210.58 1710.83,1210.58 1711.42,1210.58 1712,1210.58 1712.59,1210.58 1713.18,1210.58 1713.76,1210.58 1714.35,1210.58 1714.94,1210.58 1715.52,1210.58 1716.11,1210.58 1716.7,1210.58 1717.28,1210.58 1717.87,1210.58 1718.45,1210.58 1719.04,1210.58 1719.63,1210.58 1720.21,1210.58 1720.8,1210.58 1721.39,1210.58 1721.97,1210.58 1722.56,1210.58 1723.15,1210.58 1723.73,1210.58 1724.32,1210.58 1724.91,1210.58 1725.49,1210.58 1726.08,1210.58 1726.66,1210.58 1727.25,1210.58 1727.84,1210.58 1728.42,1210.58 1729.01,1210.58 1729.6,1210.58 1730.18,1210.58 1730.77,1210.58 1731.36,1210.58 1731.94,1210.58 1732.53,1210.58 1733.11,1210.58 1733.7,1210.58 1734.29,1210.58 1734.87,1210.58 1735.46,1210.58 1736.05,1210.58 1736.63,1210.58 1737.22,1210.58 1737.81,1210.58 1738.39,1210.58 1738.98,1210.58 1739.57,1210.58 1740.15,1210.58 1740.74,1210.58 1741.32,1210.58 1741.91,1210.58 1742.5,1210.58 1743.08,1210.58 1743.67,1210.58 1744.26,1210.58 1744.84,1210.58 1745.43,1210.58 1746.02,1210.58 1746.6,1210.58 1747.19,1210.58 1747.78,1210.58 1748.36,1210.58 1748.95,1210.58 1749.53,1210.58 1750.12,1210.58 1750.71,1210.58 1751.29,1210.58 1751.88,1210.58 1752.47,1210.58 1753.05,1210.58 1753.64,1210.58 1754.23,1210.58 1754.81,1210.58 1755.4,1210.58 1755.99,1210.58 1756.57,1210.58 1757.16,1210.58 1757.74,1210.58 1758.33,1210.58 1758.92,1210.58 1759.5,1210.58 1760.09,1210.58 1760.68,1210.58 1761.26,1210.58 1761.85,1210.58 1762.44,1210.58 1763.02,1210.58 1763.61,1210.58 1764.19,1210.58 1764.78,1210.58 1765.37,1210.58 1765.95,1210.58 1766.54,1210.58 1767.13,1210.58 1767.71,1210.58 1768.3,1210.58 1768.89,1210.58 1769.47,1210.58 1770.06,1210.58 1770.65,1210.58 1771.23,1210.58 1771.82,1210.58 1772.4,1210.58 1772.99,1210.58 1773.58,1210.58 1774.16,1210.58 1774.75,1210.58 1775.34,1210.58 1775.92,1210.58 1776.51,1210.58 1777.1,1210.58 1777.68,1210.58 1778.27,1210.58 1778.86,1210.58 1779.44,1210.58 1780.03,1210.58 1780.61,1210.58 1781.2,1210.58 1781.79,1210.58 1782.37,1210.58 1782.96,1210.58 1783.55,1210.58 1784.13,1210.58 1784.72,1210.58 1785.31,1210.58 1785.89,1210.58 1786.48,1210.58 1787.06,1210.58 1787.65,1210.58 1788.24,1210.58 1788.82,1210.58 1789.41,1210.58 1790,1210.58 1790.58,1210.58 1791.17,1210.58 1791.76,1210.58 1792.34,1210.58 1792.93,1210.58 1793.52,1210.58 1794.1,1210.58 1794.69,1210.58 1795.27,1210.58 1795.86,1210.58 1796.45,1210.58 1797.03,1210.58 1797.62,1210.58 1798.21,1210.58 1798.79,1210.58 1799.38,1210.58 1799.97,1210.58 1800.55,1210.58 1801.14,1210.58 1801.73,1210.58 1802.31,1210.58 1802.9,1210.58 1803.48,1210.58 1804.07,1210.58 1804.66,1210.58 1805.24,1210.58 1805.83,1210.58 1806.42,1210.58 1807,1210.58 1807.59,1210.58 1808.18,1210.58 1808.76,1210.58 1809.35,1210.58 1809.94,1210.58 1810.52,1210.58 1811.11,1210.58 1811.69,1210.58 1812.28,1210.58 1812.87,1210.58 1813.45,1210.58 1814.04,1210.58 1814.63,1210.58 1815.21,1210.58 1815.8,1210.58 1816.39,1210.58 1816.97,1210.58 1817.56,1210.58 1818.14,1210.58 1818.73,1210.58 1819.32,1210.58 1819.9,1210.58 1820.49,1210.58 1821.08,1210.58 1821.66,1210.58 1822.25,1210.58 1822.84,1210.58 1823.42,1210.58 1824.01,1210.58 1824.6,1210.58 1825.18,1210.58 1825.77,1210.58 1826.35,1210.58 1826.94,1210.58 1827.53,1210.58 1828.11,1210.58 1828.7,1210.58 1829.29,1210.58 1829.87,1210.58 1830.46,1210.58 1831.05,1210.58 1831.63,1210.58 1832.22,1210.58 1832.81,1210.58 1833.39,1210.58 1833.98,1210.58 1834.56,1210.58 1835.15,1210.58 1835.74,1210.58 1836.32,1210.58 1836.91,1210.58 1837.5,1210.58 1838.08,1210.58 1838.67,1210.58 1839.26,1210.58 1839.84,1210.58 1840.43,1210.58 1841.01,1210.58 1841.6,1210.58 1842.19,1210.58 1842.77,1210.58 1843.36,1210.58 1843.95,1210.58 1844.53,1210.58 1845.12,1210.58 1845.71,1210.58 1846.29,1210.58 1846.88,1210.58 1847.47,1210.58 1848.05,1210.58 1848.64,1210.58 1849.22,1210.58 1849.81,1210.58 1850.4,1210.58 1850.98,1210.58 1851.57,1210.58 1852.16,1210.58 1852.74,1210.58 1853.33,1210.58 1853.92,1210.58 1854.5,1210.58 1855.09,1210.58 1855.68,1210.58 1856.26,1210.58 1856.85,1210.58 1857.43,1210.58 1858.02,1210.58 1858.61,1210.58 1859.19,1210.58 1859.78,1210.58 1860.37,1210.58 1860.95,1210.58 1861.54,1210.58 1862.13,1210.58 1862.71,1210.58 1863.3,1210.58 1863.88,1210.58 1864.47,1210.58 1865.06,1210.58 1865.64,1210.58 1866.23,1210.58 1866.82,1210.58 1867.4,1210.58 1867.99,1210.58 1868.58,1210.58 1869.16,1210.58 1869.75,1210.58 1870.34,1210.58 1870.92,1210.58 1871.51,1210.58 1872.09,1210.58 1872.68,1210.58 1873.27,1210.58 1873.85,1210.58 1874.44,1210.58 1875.03,1210.58 1875.61,1210.58 1876.2,1210.58 1876.79,1210.58 1877.37,1210.58 1877.96,1210.58 1878.55,1210.58 1879.13,1210.58 1879.72,1210.58 1880.3,1210.58 1880.89,1210.58 1881.48,1210.58 1882.06,1210.58 1882.65,1210.58 1883.24,1210.58 1883.82,1210.58 1884.41,1210.58 1885,1210.58 1885.58,1210.58 1886.17,1210.58 1886.76,1210.58 1887.34,1210.58 1887.93,1210.58 1888.51,1210.58 1889.1,1210.58 1889.69,1210.58 1890.27,1210.58 1890.86,1210.58 1891.45,1210.58 1892.03,1210.58 1892.62,1210.58 1893.21,1210.58 1893.79,1210.58 1894.38,1210.58 1894.96,1210.58 1895.55,1210.58 1896.14,1210.58 1896.72,1210.58 1897.31,1210.58 1897.9,1210.58 1898.48,1210.58 1899.07,1210.58 1899.66,1210.58 1900.24,1210.58 1900.83,1210.58 1901.42,1210.58 1902,1210.58 1902.59,1210.58 1903.17,1210.58 1903.76,1210.58 1904.35,1210.58 1904.93,1210.58 1905.52,1210.58 1906.11,1210.58 1906.69,1210.58 1907.28,1210.58 1907.87,1210.58 1908.45,1210.58 1909.04,1210.58 1909.63,1210.58 1910.21,1210.58 1910.8,1210.58 1911.38,1210.58 1911.97,1210.58 1912.56,1210.58 1913.14,1210.58 1913.73,1210.58 1914.32,1210.58 1914.9,1210.58 1915.49,1210.58 1916.08,1210.58 1916.66,1210.58 1917.25,1210.58 1917.83,1210.58 1918.42,1210.58 1919.01,1210.58 1919.59,1210.58 1920.18,1210.58 1920.77,1210.58 1921.35,1210.58 1921.94,1210.58 1922.53,1210.58 1923.11,1210.58 1923.7,1210.58 1924.29,1210.58 1924.87,1210.58 1925.46,1210.58 1926.04,1210.58 1926.63,1210.58 1927.22,1210.58 1927.8,1210.58 1928.39,1210.58 1928.98,1210.58 1929.56,1210.58 1930.15,1210.58 1930.74,1210.58 1931.32,1210.58 1931.91,1210.58 1932.5,1210.58 1933.08,1210.58 1933.67,1210.58 1934.25,1210.58 1934.84,1210.58 1935.43,1210.58 1936.01,1210.58 1936.6,1210.58 1937.19,1210.58 1937.77,1210.58 1938.36,1210.58 1938.95,1210.58 1939.53,1210.58 1940.12,1210.58 1940.71,1210.58 1941.29,1210.58 1941.88,1210.58 1942.46,1210.58 1943.05,1210.58 1943.64,1210.58 1944.22,1210.58 1944.81,1210.58 1945.4,1210.58 1945.98,1210.58 1946.57,1210.58 1947.16,1210.58 1947.74,1210.58 1948.33,1210.58 1948.91,1210.58 1949.5,1210.58 1950.09,1210.58 1950.67,1210.58 1951.26,1210.58 1951.85,1210.58 1952.43,1210.58 1953.02,1210.58 1953.61,1210.58 1954.19,1210.58 1954.78,1210.58 1955.37,1210.58 1955.95,1210.58 1956.54,1210.58 1957.12,1210.58 1957.71,1210.58 1958.3,1210.58 1958.88,1210.58 1959.47,1210.58 1960.06,1210.58 1960.64,1210.58 1961.23,1210.58 1961.82,1210.58 1962.4,1210.58 1962.99,1210.58 1963.58,1210.58 1964.16,1210.58 1964.75,1210.58 1965.33,1210.58 1965.92,1210.58 1966.51,1210.58 1967.09,1210.58 1967.68,1210.58 1968.27,1210.58 1968.85,1210.58 1969.44,1210.58 1970.03,1210.58 1970.61,1210.58 1971.2,1210.58 1971.78,1210.58 1972.37,1210.58 1972.96,1210.58 1973.54,1210.58 1974.13,1210.58 1974.72,1210.58 1975.3,1210.58 1975.89,1210.58 1976.48,1210.58 1977.06,1210.58 1977.65,1210.58 1978.24,1210.58 1978.82,1210.58 1979.41,1210.58 1979.99,1210.58 1980.58,1210.58 1981.17,1210.58 1981.75,1210.58 1982.34,1210.58 1982.93,1210.58 1983.51,1210.58 1984.1,1210.58 1984.69,1210.58 1985.27,1210.58 1985.86,1210.58 1986.45,1210.58 1987.03,1210.58 1987.62,1210.58 1988.2,1210.58 1988.79,1210.58 1989.38,1210.58 1989.96,1210.58 1990.55,1210.58 1991.14,1210.58 1991.72,1210.58 1992.31,1210.58 1992.9,1210.58 1993.48,1210.58 1994.07,1210.58 1994.65,1210.58 1995.24,1210.58 1995.83,1210.58 1996.41,1210.58 1997,1210.58 1997.59,1210.58 1998.17,1210.58 1998.76,1210.58 1999.35,1210.58 1999.93,1210.58 2000.52,1210.58 2001.11,1210.58 2001.69,1210.58 2002.28,1210.58 2002.86,1210.58 2003.45,1210.58 2004.04,1210.58 2004.62,1210.58 2005.21,1210.58 2005.8,1210.58 2006.38,1210.58 2006.97,1210.58 2007.56,1210.58 2008.14,1210.58 2008.73,1210.58 2009.32,1210.58 2009.9,1210.58 2010.49,1210.58 2011.07,1210.58 2011.66,1210.58 2012.25,1210.58 2012.83,1210.58 2013.42,1210.58 2014.01,1210.58 2014.59,1210.58 2015.18,1210.58 2015.77,1210.58 2016.35,1210.58 2016.94,1210.58 2017.53,1210.58 2018.11,1210.58 2018.7,1210.58 2019.28,1210.58 2019.87,1210.58 2020.46,1210.58 2021.04,1210.58 2021.63,1210.58 2022.22,1210.58 2022.8,1210.58 2023.39,1210.58 2023.98,1210.58 2024.56,1210.58 2025.15,1210.58 2025.73,1210.58 2026.32,1210.58 2026.91,1210.58 2027.49,1210.58 2028.08,1210.58 2028.67,1210.58 2029.25,1210.58 2029.84,1210.58 2030.43,1210.58 2031.01,1210.58 2031.6,1210.58 2032.19,1210.58 2032.77,1210.58 2033.36,1210.58 2033.94,1210.58 2034.53,1210.58 2035.12,1210.58 2035.7,1210.58 2036.29,1210.58 2036.88,1210.58 2037.46,1210.58 2038.05,1210.58 2038.64,1210.58 2039.22,1210.58 2039.81,1210.58 2040.4,1210.58 2040.98,1210.58 2041.57,1210.58 2042.15,1210.58 2042.74,1210.58 2043.33,1210.58 2043.91,1210.58 2044.5,1210.58 2045.09,1210.58 2045.67,1210.58 2046.26,1210.58 2046.85,1210.58 2047.43,1210.58 2048.02,1210.58 2048.6,1210.58 2049.19,1210.58 2049.78,1210.58 2050.36,1210.58 2050.95,1210.58 2051.54,1210.58 2052.12,1210.58 2052.71,1210.58 2053.3,1210.58 2053.88,1210.58 2054.47,1210.58 2055.06,1210.58 2055.64,1210.58 2056.23,1210.58 2056.81,1210.58 2057.4,1210.58 2057.99,1210.58 2058.57,1210.58 2059.16,1210.58 2059.75,1210.58 2060.33,1210.58 2060.92,1210.58 2061.51,1210.58 2062.09,1210.58 2062.68,1210.58 2063.27,1210.58 2063.85,1210.58 2064.44,1210.58 2065.02,1210.58 2065.61,1210.58 2066.2,1210.58 2066.78,1210.58 2067.37,1210.58 2067.96,1210.58 2068.54,1210.58 2069.13,1210.58 2069.72,1210.58 2070.3,1210.58 2070.89,1210.58 2071.48,1210.58 2072.06,1210.58 2072.65,1210.58 2073.23,1210.58 2073.82,1210.58 2074.41,1210.58 2074.99,1210.58 2075.58,1210.58 2076.17,1210.58 2076.75,1210.58 2077.34,1210.58 2077.93,1210.58 2078.51,1210.58 2079.1,1210.58 2079.68,1210.58 2080.27,1210.58 2080.86,1210.58 2081.44,1210.58 2082.03,1210.58 2082.62,1210.58 2083.2,1210.58 2083.79,1210.58 2084.38,1210.58 2084.96,1210.58 2085.55,1210.58 2086.14,1210.58 2086.72,1210.58 2087.31,1210.58 2087.89,1210.58 2088.48,1210.58 2089.07,1210.58 2089.65,1210.58 2090.24,1210.58 2090.83,1210.58 2091.41,1210.58 2092,1210.58 2092.59,1210.58 2093.17,1210.58 2093.76,1210.58 2094.35,1210.58 2094.93,1210.58 2095.52,1210.58 2096.1,1210.58 2096.69,1210.58 2097.28,1210.58 2097.86,1210.58 2098.45,1210.58 2099.04,1210.58 2099.62,1210.58 2100.21,1210.58 2100.8,1210.58 2101.38,1210.58 2101.97,1210.58 2102.55,1210.58 2103.14,1210.58 2103.73,1210.58 2104.31,1210.58 2104.9,1210.58 2105.49,1210.58 2106.07,1210.58 2106.66,1210.58 2107.25,1210.58 2107.83,1210.58 2108.42,1210.58 2109.01,1210.58 2109.59,1210.58 2110.18,1210.58 2110.76,1210.58 2111.35,1210.58 2111.94,1210.58 2112.52,1210.58 2113.11,1210.58 2113.7,1210.58 2114.28,1210.58 2114.87,1210.58 2115.46,1210.58 2116.04,1210.58 2116.63,1210.58 2117.22,1210.58 2117.8,1210.58 2118.39,1210.58 2118.97,1210.58 2119.56,1210.58 2120.15,1210.58 2120.73,1210.58 2121.32,1210.58 2121.91,1210.58 2122.49,1210.58 2123.08,1210.58 2123.67,1210.58 2124.25,1210.58 2124.84,1210.58 2125.42,1210.58 2126.01,1210.58 2126.6,1210.58 2127.18,1210.58 2127.77,1210.58 2128.36,1210.58 2128.94,1210.58 2129.53,1210.58 2130.12,1210.58 2130.7,1210.58 2131.29,1210.58 2131.88,1210.58 2132.46,1210.58 2133.05,1210.58 2133.63,1210.58 2134.22,1210.58 2134.81,1210.58 2135.39,1210.58 2135.98,1210.58 2136.57,1210.58 2137.15,1210.58 2137.74,1210.58 2138.33,1210.58 2138.91,1210.58 2139.5,1210.58 2140.09,1210.58 2140.67,1210.58 2141.26,1210.58 2141.84,1210.58 2142.43,1210.58 2143.02,1210.58 2143.6,1210.58 2144.19,1210.58 2144.78,1210.58 2145.36,1210.58 2145.95,1210.58 2146.54,1210.58 2147.12,1210.58 2147.71,1210.58 2148.3,1210.58 2148.88,1210.58 2149.47,1210.58 2150.05,1210.58 2150.64,1210.58 2151.23,1210.58 2151.81,1210.58 2152.4,1210.58 2152.99,1210.58 2153.57,1210.58 2154.16,1210.58 2154.75,1210.58 2155.33,1210.58 2155.92,1210.58 2156.5,1210.58 2157.09,1210.58 2157.68,1210.58 2158.26,1210.58 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.67,1193.72 1399.75,899.083 \"/>\n<polyline clip-path=\"url(#clip322)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1226.95 985.439,1193.72 2158.26,1193.72 2158.26,1226.95 985.439,1226.95 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip320)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip320)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip323\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip320)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip320)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip320)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip323)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-11334.6 167.706,-11791.5 168.266,-12195.6 168.825,-11629.1 169.384,-11139.5 169.943,-11463.4 170.503,-11756 171.062,-11346 171.621,-11573.7 172.18,-11756.8 172.74,-11926.8 173.299,-12065.2 173.858,-12162.1 174.417,-12244.2 174.977,-12300.9 175.536,-12334 176.095,-12345.1 176.655,-12336 177.214,-12302 177.773,-12251 178.332,-11890 178.892,-11826.6 179.451,-11753.2 180.01,-11433.6 180.569,-11355.3 181.129,-11047.9 181.688,-10751 182.247,-10623.7 182.806,-9976.58 183.366,-9822.74 183.925,-9508.9 184.484,-9204.35 185.043,-8906.87 185.603,-8750.62 186.162,-8593.15 186.721,-8433.03 187.28,-8258.57 187.84,-8094.5 188.399,-7830.9 188.958,-7484.45 189.517,-7324.05 190.077,-6823.9 190.636,-6573.62 191.195,-6261 191.754,-6037.03 192.314,-5821.37 192.873,-5544.54 193.432,-5287.78 193.991,-5163.5 194.551,-4915.68 195.11,-4796.74 195.669,-4570.1 196.228,-4405.04 196.788,-4244.09 197.347,-4041.94 197.906,-3941 198.465,-3839.74 199.025,-3692.4 199.584,-3508.46 200.143,-3414.88 200.702,-3281.33 201.262,-3110.47 201.821,-2909.91 202.38,-2834.03 202.939,-2713.98 203.499,-2637.73 204.058,-2523.61 204.617,-2412.97 205.176,-2235.91 205.736,-2167.07 206.295,-2065.28 206.854,-2000.63 207.413,-1809.84 207.973,-1663.03 208.532,-1549.02 209.091,-1412.62 209.65,-1306.79 210.21,-1173.92 210.769,-1107.85 211.328,-985.213 211.887,-863.435 212.447,-698.634 213.006,-669.227 213.565,-611.865 214.124,-527.105 214.684,-523.94 215.243,-468.564 215.802,-414.246 216.361,-310.441 216.921,-286.748 217.48,-256.987 218.039,-209.994 218.598,-164.314 219.158,-117.539 219.717,-8.32579 220.276,-11.143 220.835,9.63094 221.395,49.2695 221.954,46.8393 222.513,132.26 223.072,152.959 223.632,214.804 224.191,247.919 224.75,263.36 225.309,275.503 225.869,269.664 226.428,307.933 226.987,342.305 227.546,419.523 228.106,430.673 228.665,460.718 229.224,475.677 229.783,525.482 230.343,532.992 230.902,523.601 231.461,553.182 232.02,542.439 232.58,551.543 233.139,557.02 233.698,606.659 234.257,615.946 234.817,663.844 235.376,727.397 235.935,752.444 236.494,757.316 237.054,739.785 237.613,781.761 238.172,763.652 238.731,767.016 239.291,788.541 239.85,773.047 240.409,814.958 240.968,839.512 241.528,879.91 242.087,914.359 242.646,914.105 243.205,909.165 243.765,910.32 244.324,929.359 244.883,927.059 245.442,965.307 246.002,1000.11 246.561,977.832 247.12,1008.4 247.679,1019.46 248.239,1014.1 248.798,1012.19 249.357,1025.45 249.916,1074.72 250.476,1101.28 251.035,1107.87 251.594,1149.35 252.153,1206.6 252.713,1191.07 253.272,1161.57 253.831,1152.41 254.39,1159.17 254.95,1163.96 255.509,1135.94 256.068,1209.22 256.627,1196.83 257.187,1183.22 257.746,1168.45 258.305,1142.71 258.864,1131.43 259.424,1158.17 259.983,1149.87 260.542,1140.68 261.101,1133.83 261.661,1139.66 262.22,1148.03 262.779,1126.64 263.338,1188.38 263.898,1192.98 264.457,1196.87 265.016,1204.43 265.575,1203.87 266.135,1171.2 266.694,1143.82 267.253,1151.53 267.812,1142.6 268.372,1136.86 268.931,1127.34 269.49,1134.61 270.049,1146.06 270.609,1139.39 271.168,1129.88 271.727,1122.74 272.286,1146.82 272.846,1172.43 273.405,1178.85 273.964,1184.87 274.523,1188.32 275.083,1175.44 275.642,1163.75 276.201,1135.63 276.76,1141.72 277.32,1114.85 277.879,1123.8 278.438,1132.33 278.997,1124 279.557,1117.16 280.116,1123.39 280.675,1149.47 281.234,1159.49 281.794,1132 282.353,1140.2 282.912,1115.74 283.471,1091.01 284.031,1134.73 284.59,1139.64 285.149,1114.63 285.708,1123.72 286.268,1099.87 286.827,1076.76 287.386,1136.98 287.945,1128.89 288.505,1104.27 289.064,1114.58 289.623,1106.99 290.182,1098.72 290.742,1106.03 291.301,1098.46 291.86,1104.8 292.419,1112.37 292.979,1103.32 293.538,1078.5 294.097,1070.91 294.656,1050.19 295.216,1075.5 295.775,1067 296.334,1028.16 296.893,1005.57 297.453,1002.26 298.012,998.235 298.571,1012.59 299.13,1006.27 299.69,1018.86 300.249,999.473 300.808,1015.09 301.368,1010.1 301.927,990.456 302.486,970.232 303.045,951.396 303.605,984.415 304.164,979.794 304.723,991.839 305.282,988.529 305.842,987.688 306.401,1002.03 306.96,1029.55 307.519,1022.08 308.079,1016.17 308.638,1025.43 309.197,1024.16 309.756,1001.11 310.316,1025.72 310.875,1019.9 311.434,996.645 311.993,1020.79 312.553,1029.03 313.112,1036.2 313.671,1060.52 314.23,1071.58 314.79,1063.8 315.349,1060.38 315.908,1041.18 316.467,1033.94 317.027,1010.9 317.586,1020.94 318.145,1046.73 318.704,1034.86 319.264,1023.95 319.823,1033.58 320.382,1057.86 320.941,1081.15 321.501,1070.1 322.06,1058.78 322.619,1048.4 323.178,1054.28 323.738,1031.65 324.297,1073 324.856,1065.72 325.415,1075.88 325.975,1048.92 326.534,1024.41 327.093,1011.78 327.652,1002.61 328.212,1011.63 328.771,989.559 329.33,966.414 329.889,943.057 330.449,938.634 331.008,934.776 331.567,945.205 332.126,960.505 332.686,970.251 333.245,980.038 333.804,1004.74 334.363,1043.72 334.923,1096.24 335.482,1084.02 336.041,1018.48 336.6,1006.35 337.16,998.547 337.719,1000.75 338.278,988.571 338.837,961.854 339.397,970.084 339.956,964.206 340.515,989.839 341.074,1019.66 341.634,1011.86 342.193,1022.41 342.752,1015.13 343.311,988.112 343.871,998.074 344.43,1007.44 344.989,1031.92 345.548,1038.81 346.108,1045.65 346.667,1035.54 347.226,1057.4 347.785,1032.9 348.345,994 348.904,953.214 349.463,961.116 350.022,955.313 350.582,935.266 351.141,965.322 351.7,959.379 352.259,969.189 352.819,962.43 353.378,973.724 353.937,934.661 354.496,896.35 355.056,908.86 355.615,907.942 356.174,915.038 356.733,876.038 357.293,840.29 357.852,837.152 358.411,822.948 358.97,789.222 359.53,792.396 360.089,799.792 360.648,802.659 361.207,804.442 361.767,804.551 362.326,823.134 362.885,807.459 363.444,810.8 364.004,828.015 364.563,810.98 365.122,811.482 365.681,826.456 366.241,809.851 366.8,794.383 367.359,795.275 367.918,764.609 368.478,814.426 369.037,866.466 369.596,849.565 370.155,861.792 370.715,876.657 371.274,874.796 371.833,887.775 372.392,867.422 372.952,913.791 373.511,925.238 374.07,903.922 374.629,897.643 375.189,879.343 375.748,925.185 376.307,902.877 376.866,916.257 377.426,895.233 377.985,874.504 378.544,855.671 379.103,868.266 379.663,881.958 380.222,877.763 380.781,891.562 381.34,888.457 381.9,899.427 382.459,908.641 383.018,950.925 383.577,910.659 384.137,906.344 384.696,897.676 385.255,889.113 385.814,883.757 386.374,878.919 386.933,875.338 387.492,868.578 388.051,867.144 388.611,879.764 389.17,855.88 389.729,855.868 390.288,822.06 390.848,822.943 391.407,853.241 391.966,851.305 392.525,847.09 393.085,859.753 393.644,856.703 394.203,835.818 394.762,832.842 395.322,797.89 395.881,792.354 396.44,809.867 396.999,810.238 397.559,825.978 398.118,822.609 398.677,869.253 399.236,847.625 399.796,843.766 400.355,853.323 400.914,864.962 401.473,862.408 402.033,875.29 402.592,841.313 403.151,806.505 403.71,803.902 404.27,771.427 404.829,771.891 405.388,789.363 405.947,787.139 406.507,743.271 407.066,746.222 407.625,732.183 408.184,745.218 408.744,774.644 409.303,773.138 409.862,772.767 410.421,740.731 410.981,761.087 411.54,765.402 412.099,766.194 412.658,768.728 413.218,799.035 413.777,860.956 414.336,870.684 414.895,880.833 415.455,876.472 416.014,891.908 416.573,916.594 417.132,911.043 417.692,903.607 418.251,895.901 418.81,889.866 419.369,868.928 419.929,881.993 420.488,909.239 421.047,919.121 421.606,908.126 422.166,900.604 422.725,877.266 423.284,902.186 423.843,889.94 424.403,854.407 424.962,897.419 425.521,921.992 426.08,880.852 426.64,875.165 427.199,838.652 427.758,834.03 428.318,832.387 428.877,825.386 429.436,805.661 429.995,833.471 430.555,845.864 431.114,855.61 431.673,818.229 432.232,816.354 432.792,796.741 433.351,777.46 433.91,809.642 434.469,824.259 435.029,818.82 435.588,767.72 436.147,750.694 436.706,754.496 437.266,773.388 437.825,774.191 438.384,755.501 438.943,736.578 439.503,742.065 440.062,728.207 440.621,728.125 441.18,713.002 441.74,715.647 442.299,735.299 442.858,721.036 443.417,739.604 443.977,727.727 444.536,714.971 445.095,685.228 445.654,720.124 446.214,711.563 446.773,680.507 447.332,686.098 447.891,687.36 448.451,739.756 449.01,743.783 449.569,744.922 450.128,732.907 450.688,717.539 451.247,749.721 451.806,719.05 452.365,720.847 452.925,755.338 453.484,758.438 454.043,774.495 454.602,777.504 455.162,775.721 455.721,774.006 456.28,776.56 456.839,791.278 457.399,789.956 457.958,823.745 458.517,805.628 459.076,768.763 459.636,770.968 460.195,767.699 460.754,766.098 461.313,766.415 461.873,795.572 462.432,794.188 462.991,810.713 463.55,804.398 464.11,803.221 464.669,785.202 465.228,800.355 465.787,843.77 466.347,855.039 466.906,852.989 467.465,861.683 468.024,842.878 468.584,840.527 469.143,839.249 469.702,851.001 470.261,827.829 470.821,821.143 471.38,783.594 471.939,796.93 472.498,747.301 473.058,748.565 473.617,714.729 474.176,734.853 474.735,721.856 475.295,751.391 475.854,764.051 476.413,746.816 476.972,749.028 477.532,749.689 478.091,735.866 478.65,702.734 479.209,720.388 479.769,736.201 480.328,734.391 480.887,720.931 481.446,736.785 482.006,687.617 482.565,690.673 483.124,677.043 483.683,692.956 484.243,676.97 484.802,662.348 485.361,650.85 485.92,639.353 486.48,646.333 487.039,647.566 487.598,667.594 488.157,688.013 488.717,707.276 489.276,663.172 489.835,669.403 490.394,695.903 490.954,730.375 491.513,746.787 492.072,730.311 492.631,747.267 493.191,795.766 493.75,822.229 494.309,785.823 494.868,799.011 495.428,826.746 495.987,806.625 496.546,785.141 497.105,765.536 497.665,781.785 498.224,778.072 498.783,787.761 499.342,784.562 499.902,781.856 500.461,777.816 501.02,787.897 501.579,785.111 502.139,783.263 502.698,796.906 503.257,778.643 503.816,793.303 504.376,790.989 504.935,772.865 505.494,752.662 506.053,764.997 506.613,748.335 507.172,744.779 507.731,763.621 508.29,799.296 508.85,828.16 509.409,854.53 509.968,849.304 510.527,861.188 511.087,838.047 511.646,829.94 512.205,837.477 512.764,830.594 513.324,809.766 513.883,809.279 514.442,836.746 515.001,816.322 515.561,781.195 516.12,812.356 516.679,805.845 517.238,785.858 517.798,815.402 518.357,809.676 518.916,836.991 519.475,830.312 520.035,840.505 520.594,821.536 521.153,849.631 521.712,826.623 522.272,822.812 522.831,815.306 523.39,825.09 523.949,757.342 524.509,770.064 525.068,764.835 525.627,779.845 526.186,793.71 526.746,770.883 527.305,751.478 527.864,749.59 528.423,746.273 528.983,738.99 529.542,738.727 530.101,703.253 530.66,737.13 531.22,753.061 531.779,750.264 532.338,731.215 532.897,726.595 533.457,744.025 534.016,709.606 534.575,708.937 535.134,660.839 535.694,665.486 536.253,666.203 536.812,688.501 537.371,674.742 537.931,665.539 538.49,688.302 539.049,687.096 539.608,673.782 540.168,694.903 540.727,713.598 541.286,696.598 541.845,697.976 542.405,680.827 542.964,698.78 543.523,696.312 544.082,697.605 544.642,695.999 545.201,677.948 545.76,694.858 546.319,698.432 546.879,704.105 547.438,689.85 547.997,658.623 548.556,662.213 549.116,667.137 549.675,668.123 550.234,639.103 550.793,641.905 551.353,659.33 551.912,641.446 552.471,662.158 553.031,696.385 553.59,696.537 554.149,666.367 554.708,651.051 555.268,638.444 555.827,643.846 556.386,665.624 556.945,650.5 557.505,651.529 558.064,672.099 558.623,689.97 559.182,675.436 559.742,665.449 560.301,718.3 560.86,701.447 561.419,702.171 561.979,686.098 562.538,719.984 563.097,721.909 563.656,722.603 564.216,703.768 564.775,735.139 565.334,767.256 565.893,780.098 566.453,792.395 567.012,822.517 567.571,830.523 568.13,809.165 568.69,803.771 569.249,815.133 569.808,856.992 570.367,815.851 570.927,791.605 571.486,786.424 572.045,781.775 572.604,760.15 573.164,773.528 573.723,752.105 574.282,716.62 574.841,746.145 575.401,759.815 575.96,772.948 576.519,786.378 577.078,770.219 577.638,753.796 578.197,751.838 578.756,720.041 579.315,723.96 579.875,740.722 580.434,774.136 580.993,786.397 581.552,799.309 582.112,765.176 582.671,774.991 583.23,754.528 583.789,767.546 584.349,778.349 584.908,755.882 585.467,787.982 586.026,789.216 586.586,769.871 587.145,766.116 587.704,747.912 588.263,745.882 588.823,743.843 589.382,696.322 589.941,713.314 590.5,695.21 591.06,711.548 591.619,692.343 592.178,692.075 592.737,675.501 593.297,692.61 593.856,693.881 594.415,709.738 594.974,730.476 595.534,760.514 596.093,758.083 596.652,722.827 597.211,752.89 597.771,752.123 598.33,752.489 598.889,765.305 599.448,743.047 600.008,724.532 600.567,694.193 601.126,695.16 601.685,696.063 602.245,728.924 602.804,728.288 603.363,694.815 603.922,695.36 604.482,682.552 605.041,684.892 605.6,685.317 606.159,703.292 606.719,722.309 607.278,736.094 607.837,763.228 608.396,775.386 608.956,771.919 609.515,750.257 610.074,764.99 610.633,761.31 611.193,759.707 611.752,739.703 612.311,720.965 612.87,735.633 613.43,748.461 613.989,759.108 614.548,740.671 615.107,738.426 615.667,722.954 616.226,720.15 616.785,689.624 617.344,692.003 617.904,691.423 618.463,678 619.022,681.464 619.581,715.06 620.141,747.309 620.7,728.989 621.259,746.855 621.818,741.043 622.378,708.706 622.937,677.638 623.496,678.992 624.055,680.264 624.615,663.204 625.174,651.683 625.733,639.536 626.292,691.749 626.852,708.394 627.411,661.212 627.97,649.757 628.529,618.846 629.089,640.115 629.648,657.758 630.207,709.925 630.766,710.683 631.326,691.894 631.885,722.009 632.444,703.024 633.003,717.36 633.563,716.693 634.122,714.625 634.681,729 635.24,730.251 635.8,728.542 636.359,744.313 636.918,759.566 637.477,740.72 638.037,707.428 638.596,706.821 639.155,710.089 639.714,705.405 640.274,723.207 640.833,723.116 641.392,724.133 641.951,757.699 642.511,787.512 643.07,798.487 643.629,763.52 644.188,726.185 644.748,723.552 645.307,720.443 645.866,686.072 646.425,684.105 646.985,682.29 647.544,665.489 648.103,668.864 648.662,674.427 649.222,724.558 649.781,743.629 650.34,772.831 650.899,785.969 651.459,796.015 652.018,789.045 652.577,749.634 653.136,747.907 653.696,743.257 654.255,772.698 654.814,771.95 655.373,735.377 655.933,749.181 656.492,760.977 657.051,757.789 657.61,736.763 658.17,736.589 658.729,669.92 659.288,655.644 659.847,644.011 660.407,644.861 660.966,679.336 661.525,698.354 662.084,699.307 662.644,717.546 663.203,732.182 663.762,730.868 664.321,712.565 664.881,695.331 665.44,695.309 665.999,694.238 666.558,679.992 667.118,680.976 667.677,683.701 668.236,685.84 668.795,686.956 669.355,672.56 669.914,707.826 670.473,691.337 671.032,690.003 671.592,676.111 672.151,675.817 672.71,655.126 673.269,703.652 673.829,718.204 674.388,717.577 674.947,731.375 675.506,730.459 676.066,728.96 676.625,729.106 677.184,711.591 677.743,679.619 678.303,664.558 678.862,684.776 679.421,701.032 679.981,679.848 680.54,681.035 681.099,664.79 681.658,666.949 682.218,667.955 682.777,670.992 683.336,653.85 683.895,670.439 684.455,690.954 685.014,690.454 685.573,661.12 686.132,664.281 686.692,714.871 687.251,713.397 687.81,744.824 688.369,726.664 688.929,708.198 689.488,703.226 690.047,691.017 690.606,724.706 691.166,756.088 691.725,757.163 692.284,739.051 692.843,738.451 693.403,735.119 693.962,732.952 694.521,716.906 695.08,698.666 695.64,701.572 696.199,718.325 696.758,699.181 697.317,683.608 697.877,669.521 698.436,672.483 698.995,687.546 699.554,719.638 700.114,721.722 700.673,719.36 701.232,717.528 701.791,733.977 702.351,734.743 702.91,733.254 703.469,697.356 704.028,646.684 704.588,680.505 705.147,648.702 705.706,631.677 706.265,634.951 706.825,655.179 707.384,611.251 707.943,633.303 708.502,633.745 709.062,620.562 709.621,624.182 710.18,596.914 710.739,613.773 711.299,615.051 711.858,571.421 712.417,595.202 712.976,598.437 713.536,586.765 714.095,596.578 714.654,548.687 715.213,571.115 715.773,596.65 716.332,602.814 716.891,608.786 717.45,629.371 718.01,652.07 718.569,639.307 719.128,659.115 719.687,662.047 720.247,664.865 720.806,682.927 721.365,684.805 721.924,670.166 722.484,655.054 723.043,623.845 723.602,614.114 724.161,620.656 724.721,609.863 725.28,614.734 725.839,618.235 726.398,606.955 726.958,623.015 727.517,673.897 728.076,675.089 728.635,662.113 729.195,663.332 729.754,699.693 730.313,715.185 730.872,683.1 731.432,667.329 731.991,667.294 732.55,683.312 733.109,682.176 733.669,698.78 734.228,682.638 734.787,694.543 735.346,662.953 735.906,664.443 736.465,650.542 737.024,684.735 737.583,670.297 738.143,686.453 738.702,701.279 739.261,718.312 739.82,696.907 740.38,663.108 740.939,699.529 741.498,702.988 742.057,732.409 742.617,727.706 743.176,742.421 743.735,736.348 744.294,769.83 744.854,748.15 745.413,760.355 745.972,757.703 746.531,774.457 747.091,737.253 747.65,798.659 748.209,762.386 748.768,761.358 749.328,758.518 749.887,773.421 750.446,753.317 751.005,732.915 751.565,745.825 752.124,746.269 752.683,744.925 753.242,773.046 753.802,753.368 754.361,763.33 754.92,761.609 755.479,760.856 756.039,710.399 756.598,708.473 757.157,689.734 757.716,692.478 758.276,677.561 758.835,695.324 759.394,680.862 759.953,699.919 760.513,747.799 761.072,759.047 761.631,742.514 762.19,739.932 762.75,686.665 763.309,671.328 763.868,671.798 764.427,659.216 764.987,660.768 765.546,662.027 766.105,680.823 766.664,695.838 767.224,648.905 767.783,616.107 768.342,649.532 768.901,683.203 769.461,681.714 770.02,664.813 770.579,683.132 771.138,698.651 771.698,696.255 772.257,663.818 772.816,667.471 773.375,670.443 773.935,686.979 774.494,669.918 775.053,687.033 775.612,669.787 776.172,655.174 776.731,657.099 777.29,643.2 777.849,630.718 778.409,615.665 778.968,636.558 779.527,687.976 780.086,657.137 780.646,643.031 781.205,644.793 781.764,649.562 782.323,625.752 782.883,646.861 783.442,617.906 784.001,637.436 784.56,652.689 785.12,654.049 785.679,686.564 786.238,654.99 786.797,656.098 787.357,677.084 787.916,678.559 788.475,676.381 789.034,643.052 789.594,633.12 790.153,651.886 790.712,669.304 791.271,657.228 791.831,659.361 792.39,695.222 792.949,731.081 793.508,732.015 794.068,747.411 794.627,825.68 795.186,821.888 795.745,847.791 796.305,841.656 796.864,817.414 797.423,827.482 797.982,837.961 798.542,831.924 799.101,853.976 799.66,845.408 800.219,803.621 800.779,782.243 801.338,762.531 801.897,710.116 802.456,703.788 803.016,735.245 803.575,768.594 804.134,795.857 804.693,787.973 805.253,783.252 805.812,778.53 806.371,743.966 806.931,759.45 807.49,737.812 808.049,781.582 808.608,777.033 809.168,803.181 809.727,830.347 810.286,773.795 810.845,753.018 811.405,744.438 811.964,739.182 812.523,726.216 813.082,709.72 813.642,712.324 814.201,682.296 814.76,699.582 815.319,696.945 815.879,676.628 816.438,695.013 816.997,727.481 817.556,743.995 818.116,709.2 818.675,709.193 819.234,724.036 819.793,686.611 820.353,656.507 820.912,643.658 821.471,617.054 822.03,605.787 822.59,592.867 823.149,599.624 823.708,605.885 824.267,592.526 824.827,563.085 825.386,537.592 825.945,529.343 826.504,571.676 827.064,576.764 827.623,582.364 828.182,618.297 828.741,636.172 829.301,653.058 829.86,669.616 830.419,668.804 830.978,649.994 831.538,650.091 832.097,653.891 832.656,652.752 833.215,639.927 833.775,610.414 834.334,594.335 834.893,599.893 835.452,619.462 836.012,606.685 836.571,614.715 837.13,652.121 837.689,653.726 838.249,638.467 838.808,623.211 839.367,658.196 839.926,658.817 840.486,679.576 841.045,709.87 841.604,694.167 842.163,711.393 842.723,713.861 843.282,695.901 843.841,678.273 844.4,678.168 844.96,715.079 845.519,728.231 846.078,743.807 846.637,738.419 847.197,737.37 847.756,732.902 848.315,761.489 848.874,760.464 849.434,742.146 849.993,740.516 850.552,752.361 851.111,748.796 851.671,743.935 852.23,720.638 852.789,705.906 853.348,707.826 853.908,675.181 854.467,660.765 855.026,679.846 855.585,696.415 856.145,728.317 856.704,743.376 857.263,756.565 857.822,755.2 858.382,734.942 858.941,729.744 859.5,724.392 860.059,754.956 860.619,701.091 861.178,683.875 861.737,698.843 862.296,698.77 862.856,713.059 863.415,731.908 863.974,716.907 864.533,715.253 865.093,699.607 865.652,734.037 866.211,729.348 866.77,726.689 867.33,740.938 867.889,742.291 868.448,707.665 869.007,689.292 869.567,705.053 870.126,672.46 870.685,673.39 871.244,673.679 871.804,705.009 872.363,688.116 872.922,702.508 873.481,733.183 874.041,714.944 874.6,730.122 875.159,730.331 875.718,743.47 876.278,723.585 876.837,705.211 877.396,669.523 877.955,637.28 878.515,655.835 879.074,672.341 879.633,671.415 880.192,690.055 880.752,674.27 881.311,689.7 881.87,722.514 882.429,733.618 882.989,749.008 883.548,742.983 884.107,717.859 884.666,683.733 885.226,682.507 885.785,668.042 886.344,698.166 886.903,665.3 887.463,647.761 888.022,668.503 888.581,670.447 889.14,670.148 889.7,685.954 890.259,670.426 890.818,685.622 891.377,652.206 891.937,639.696 892.496,625.466 893.055,627.599 893.614,617.388 894.174,624.432 894.733,627.369 895.292,660.773 895.851,630.572 896.411,621.315 896.97,656.28 897.529,642.119 898.088,662.359 898.648,663.956 899.207,650.867 899.766,635.951 900.325,607.077 900.885,564.901 901.444,605.025 902.003,595.236 902.562,600.803 903.122,587.101 903.681,640.227 904.24,657.739 904.799,659.95 905.359,661.034 905.918,646.987 906.477,666.337 907.036,700.397 907.596,718.885 908.155,731.7 908.714,699.078 909.273,679.132 909.833,644.646 910.392,630.972 910.951,649.129 911.51,663.815 912.07,634.502 912.629,619.674 913.188,639.209 913.747,655.185 914.307,672.454 914.866,686.986 915.425,664.541 915.984,695.919 916.544,663.054 917.103,665.923 917.662,664.907 918.221,663.415 918.781,617.605 919.34,604.255 919.899,609.589 920.458,635.159 921.018,636.658 921.577,640.676 922.136,641.171 922.695,678.981 923.255,647.178 923.814,633.593 924.373,671.835 924.932,706.814 925.492,725.403 926.051,760.337 926.61,755.642 927.169,739.666 927.729,771.561 928.288,765.69 928.847,794.036 929.406,807.159 929.966,771.733 930.525,732.994 931.084,714.165 931.644,729.304 932.203,728.662 932.762,729.673 933.321,696.135 933.881,680.575 934.44,698.005 934.999,709.937 935.558,721.643 936.118,748.378 936.677,758.027 937.236,752.834 937.795,734.217 938.355,715.596 938.914,697.359 939.473,699.468 940.032,728.929 940.592,710.017 941.151,727.094 941.71,725.794 942.269,722.039 942.829,736.824 943.388,751.376 943.947,730.89 944.506,730.416 945.066,745.295 945.625,741.126 946.184,739.197 946.743,718.759 947.303,714.571 947.862,695.328 948.421,713.296 948.98,712.11 949.54,726.851 950.099,737.598 950.658,764.706 951.217,759.4 951.777,802.556 952.336,780.932 952.895,790.455 953.454,764.1 954.014,775.754 954.573,771.248 955.132,748.468 955.691,714.149 956.251,699.104 956.81,700.615 957.369,702.5 957.928,701.595 958.488,669.428 959.047,681.677 959.606,633.822 960.165,656.259 960.725,645.428 961.284,646.222 961.843,634.039 962.402,603.513 962.962,624.538 963.521,628.37 964.08,630.966 964.639,618.18 965.199,617.481 965.758,637.786 966.317,641.933 966.876,645.402 967.436,635.131 967.995,657.142 968.554,657.035 969.113,642.974 969.673,661.659 970.232,662.345 970.791,663.661 971.35,694.667 971.91,679.991 972.469,680.149 973.028,667.592 973.587,665.891 974.147,665.071 974.706,648.482 975.265,680.356 975.824,678.047 976.384,663.081 976.943,663.667 977.502,666.72 978.061,715.58 978.621,696.906 979.18,726.792 979.739,676.069 980.298,726.209 980.858,656.537 981.417,656.735 981.976,671.883 982.535,671.739 983.095,655.448 983.654,672.027 984.213,654.913 984.772,673.572 985.332,642.007 985.891,646.144 986.45,633.356 987.009,619.468 987.569,608.683 988.128,615.653 988.687,636.65 989.246,622.474 989.806,626.716 990.365,628.737 990.924,630.902 991.483,618.286 992.043,654.602 992.602,656.023 993.161,677.032 993.72,713.036 994.28,712.808 994.839,758.633 995.398,738.225 995.957,749.409 996.517,731.269 997.076,746.258 997.635,744.802 998.194,755.136 998.754,767.678 999.313,780.865 999.872,789.902 1000.43,749.288 1000.99,732.15 1001.55,728.454 1002.11,723.56 1002.67,719.031 1003.23,713.969 1003.79,677.313 1004.35,710.907 1004.91,725.486 1005.46,723.597 1006.02,736.664 1006.58,753.872 1007.14,768.317 1007.7,764.359 1008.26,728.019 1008.82,728.597 1009.38,741.861 1009.94,769.871 1010.5,717.497 1011.06,729.257 1011.62,725.943 1012.18,706.83 1012.73,705.207 1013.29,671.781 1013.85,723.403 1014.41,751.591 1014.97,748.917 1015.53,715.865 1016.09,693.446 1016.65,690.996 1017.21,693.031 1017.77,681.35 1018.33,618.338 1018.89,653.021 1019.45,656.304 1020.01,672.448 1020.56,671.95 1021.12,675.113 1021.68,673.701 1022.24,655.675 1022.8,658.567 1023.36,626.35 1023.92,597.882 1024.48,640.601 1025.04,629.863 1025.6,679.395 1026.16,645.304 1026.72,614.201 1027.28,633.435 1027.83,636.775 1028.39,641.068 1028.95,632.535 1029.51,617.078 1030.07,605.718 1030.63,597.294 1031.19,616.537 1031.75,618.906 1032.31,701.94 1032.87,652.419 1033.43,637.888 1033.99,653.994 1034.55,674.884 1035.1,724.539 1035.66,690.431 1036.22,659.757 1036.78,709.208 1037.34,695.217 1037.9,692.172 1038.46,721.375 1039.02,752.734 1039.58,718.251 1040.14,731.285 1040.7,759.324 1041.26,754.979 1041.82,733.52 1042.38,729.776 1042.93,715.785 1043.49,699.083 1044.05,700.617 1044.61,700.732 1045.17,715.897 1045.73,745.173 1046.29,728.471 1046.85,759.595 1047.41,771.132 1047.97,747.411 1048.53,746.99 1049.09,744.413 1049.65,726.916 1050.2,694.479 1050.76,729.626 1051.32,729.809 1051.88,729.412 1052.44,745.772 1053,754.782 1053.56,735.207 1054.12,733.205 1054.68,793.425 1055.24,753.339 1055.8,764.679 1056.36,776.811 1056.92,755.774 1057.48,738.925 1058.03,737.311 1058.59,736.14 1059.15,718.444 1059.71,733.124 1060.27,715.11 1060.83,713.37 1061.39,709.611 1061.95,688.885 1062.51,701.258 1063.07,702.05 1063.63,764.471 1064.19,758.713 1064.75,705.875 1065.3,673.177 1065.86,672.988 1066.42,672.16 1066.98,673.829 1067.54,674.85 1068.1,674.141 1068.66,675.651 1069.22,629.105 1069.78,675.936 1070.34,660.119 1070.9,662.321 1071.46,660.042 1072.02,657.768 1072.57,642.77 1073.13,627.329 1073.69,626.463 1074.25,632.221 1074.81,650.312 1075.37,603.022 1075.93,604.302 1076.49,588.652 1077.05,659.976 1077.61,647.196 1078.17,632.51 1078.73,668.364 1079.29,666.141 1079.85,634.765 1080.4,603.98 1080.96,610.231 1081.52,616.385 1082.08,635.654 1082.64,658.351 1083.2,628.488 1083.76,632.115 1084.32,618.724 1084.88,640.36 1085.44,624.196 1086,625.856 1086.56,629.531 1087.12,631.204 1087.67,601.509 1088.23,606.513 1088.79,610.194 1089.35,596.883 1089.91,585.554 1090.47,608.526 1091.03,598.063 1091.59,615.66 1092.15,632.878 1092.71,653.924 1093.27,670.194 1093.83,673.005 1094.39,675.215 1094.94,674.008 1095.5,675.775 1096.06,662.816 1096.62,665.828 1097.18,681.542 1097.74,684.06 1098.3,715.503 1098.86,759.742 1099.42,759.127 1099.98,770.961 1100.54,734.408 1101.1,732.91 1101.66,730.59 1102.22,746.902 1102.77,727.455 1103.33,724.346 1103.89,721.951 1104.45,721.273 1105.01,738.688 1105.57,751.391 1106.13,767.232 1106.69,794.63 1107.25,801.847 1107.81,824.97 1108.37,834.442 1108.93,825.021 1109.49,816.666 1110.04,810.139 1110.6,803.504 1111.16,797.332 1111.72,793.384 1112.28,772.132 1112.84,749.718 1113.4,728.831 1113.96,694.298 1114.52,660.885 1115.08,612.32 1115.64,584.525 1116.2,555.075 1116.76,598.028 1117.31,619.755 1117.87,643.345 1118.43,628.478 1118.99,601.034 1119.55,621.74 1120.11,643.417 1120.67,691.745 1121.23,706.259 1121.79,690.46 1122.35,687.563 1122.91,667.296 1123.47,654.976 1124.03,672.921 1124.59,641.128 1125.14,642.991 1125.7,626.161 1126.26,614.202 1126.82,652.24 1127.38,655.203 1127.94,662.057 1128.5,649.435 1129.06,650.434 1129.62,685.557 1130.18,687.377 1130.74,703.581 1131.3,652.442 1131.86,669.701 1132.41,687.484 1132.97,657.435 1133.53,675.712 1134.09,691.967 1134.65,689.408 1135.21,669.707 1135.77,672.459 1136.33,691.045 1136.89,659.776 1137.45,645.793 1138.01,631.927 1138.57,636.274 1139.13,638.551 1139.68,671.956 1140.24,689.702 1140.8,687.609 1141.36,674.169 1141.92,628.727 1142.48,631.332 1143.04,632.033 1143.6,667.711 1144.16,669.94 1144.72,659.769 1145.28,663.087 1145.84,647.232 1146.4,665.416 1146.96,651.734 1147.51,655.191 1148.07,642.426 1148.63,661.811 1149.19,663.98 1149.75,684.038 1150.31,683.703 1150.87,702.242 1151.43,718.368 1151.99,715.276 1152.55,711.955 1153.11,712.515 1153.67,662.046 1154.23,664.849 1154.78,651.129 1155.34,653.264 1155.9,654.193 1156.46,671.169 1157.02,703.381 1157.58,718.375 1158.14,714.735 1158.7,710.488 1159.26,696.178 1159.82,665.657 1160.38,649.418 1160.94,688.936 1161.5,674.44 1162.05,726.061 1162.61,688.82 1163.17,670.35 1163.73,658.501 1164.29,662.604 1164.85,644.792 1165.41,613.526 1165.97,632.517 1166.53,667.525 1167.09,633.581 1167.65,553.782 1168.21,578.856 1168.77,614.646 1169.33,602.926 1169.88,590.161 1170.44,598.797 1171,603.878 1171.56,623.068 1172.12,613.011 1172.68,585.532 1173.24,578.199 1173.8,583.116 1174.36,623.158 1174.92,612.034 1175.48,620.099 1176.04,627.666 1176.6,645.307 1177.15,662.901 1177.71,714.642 1178.27,732.47 1178.83,695.892 1179.39,666.452 1179.95,669.247 1180.51,700.394 1181.07,697.469 1181.63,711.159 1182.19,728.818 1182.75,743.386 1183.31,741.473 1183.87,757.749 1184.43,757.138 1184.98,735.562 1185.54,736.41 1186.1,764.547 1186.66,759.035 1187.22,772.811 1187.78,768.684 1188.34,778.084 1188.9,741.561 1189.46,756.123 1190.02,732.11 1190.58,745.453 1191.14,761.243 1191.7,772.042 1192.25,751.845 1192.81,747.673 1193.37,758.902 1193.93,790.779 1194.49,770.849 1195.05,739.385 1195.61,751.396 1196.17,696.285 1196.73,699.097 1197.29,667.257 1197.85,716.205 1198.41,681.418 1198.97,678.512 1199.52,696.516 1200.08,709.744 1200.64,707.682 1201.2,703.141 1201.76,716.476 1202.32,698.611 1202.88,712.131 1203.44,745.111 1204,746.287 1204.56,789.71 1205.12,749.086 1205.68,759.411 1206.24,755.155 1206.8,766.043 1207.35,761.216 1207.91,754.934 1208.47,748.94 1209.03,773.155 1209.59,753.825 1210.15,752.524 1210.71,752.272 1211.27,779.659 1211.83,741.412 1212.39,748.306 1212.95,729.244 1213.51,725.648 1214.07,722.766 1214.62,735.504 1215.18,701.552 1215.74,718.777 1216.3,729.686 1216.86,727.065 1217.42,721.976 1217.98,719.754 1218.54,748.166 1219.1,757.033 1219.66,736.134 1220.22,700.887 1220.78,683.09 1221.34,714.856 1221.89,728.397 1222.45,741 1223.01,737.87 1223.57,720.344 1224.13,701.453 1224.69,699.22 1225.25,715.32 1225.81,715.585 1226.37,714.835 1226.93,731.717 1227.49,714.463 1228.05,700.185 1228.61,684.251 1229.17,655.34 1229.72,638.508 1230.28,654.708 1230.84,641.248 1231.4,642.385 1231.96,644.035 1232.52,646.688 1233.08,666.916 1233.64,666.918 1234.2,655.377 1234.76,643.731 1235.32,627.126 1235.88,611.433 1236.44,598.593 1236.99,585.781 1237.55,591.759 1238.11,598.934 1238.67,622.178 1239.23,625.473 1239.79,609.406 1240.35,612.85 1240.91,614.019 1241.47,619.185 1242.03,625.906 1242.59,644.666 1243.15,644.554 1243.71,578.085 1244.26,583.42 1244.82,557.202 1245.38,578.964 1245.94,586.461 1246.5,591.085 1247.06,613.167 1247.62,650.096 1248.18,665.715 1248.74,714.893 1249.3,664.071 1249.86,651.963 1250.42,638.702 1250.98,658.173 1251.54,688.818 1252.09,686.348 1252.65,637.361 1253.21,625.043 1253.77,580.378 1254.33,585.121 1254.89,573.744 1255.45,575.603 1256.01,563.5 1256.57,555.193 1257.13,575.743 1257.69,632.578 1258.25,652.215 1258.81,641.09 1259.36,675.362 1259.92,674.985 1260.48,678.336 1261.04,697.7 1261.6,683.954 1262.16,717.869 1262.72,712.139 1263.28,727.35 1263.84,711.465 1264.4,696.792 1264.96,698.063 1265.52,683.127 1266.08,685.042 1266.63,700.628 1267.19,681.485 1267.75,647.59 1268.31,649.331 1268.87,653.604 1269.43,636.792 1269.99,638.039 1270.55,642.831 1271.11,629.47 1271.67,645.039 1272.23,646.55 1272.79,663.55 1273.35,649.094 1273.91,615.692 1274.46,623.389 1275.02,624.823 1275.58,582.506 1276.14,571.132 1276.7,565.492 1277.26,573.596 1277.82,595.194 1278.38,569.623 1278.94,609.235 1279.5,665.715 1280.06,685.294 1280.62,683.595 1281.18,716.1 1281.73,701.026 1282.29,717.478 1282.85,713.556 1283.41,711.055 1283.97,745.609 1284.53,742.217 1285.09,754.193 1285.65,734.736 1286.21,781.675 1286.77,761.607 1287.33,771.551 1287.89,782.224 1288.45,776.095 1289,772.606 1289.56,752.602 1290.12,798.224 1290.68,763.31 1291.24,760.362 1291.8,757.739 1292.36,754.55 1292.92,796.794 1293.48,789.724 1294.04,737.16 1294.6,718.083 1295.16,734.512 1295.72,731.738 1296.28,712.89 1296.83,677.002 1297.39,678.269 1297.95,693.012 1298.51,661.704 1299.07,696.296 1299.63,696.012 1300.19,663.665 1300.75,680.604 1301.31,681.023 1301.87,682.649 1302.43,714.746 1302.99,727.18 1303.55,707.456 1304.1,687.106 1304.66,701.191 1305.22,714.609 1305.78,697.818 1306.34,679.92 1306.9,726.485 1307.46,710.964 1308.02,693.33 1308.58,709.032 1309.14,705.745 1309.7,685.619 1310.26,750.527 1310.82,779.787 1311.38,805.269 1311.93,814.17 1312.49,787.972 1313.05,785.344 1313.61,767.184 1314.17,762.234 1314.73,776.596 1315.29,738.096 1315.85,722.861 1316.41,722.79 1316.97,705.819 1317.53,685.264 1318.09,704.377 1318.65,684.562 1319.2,688.287 1319.76,693.349 1320.32,693.364 1320.88,739.87 1321.44,722.716 1322,737.437 1322.56,748.356 1323.12,728.471 1323.68,725.878 1324.24,709.9 1324.8,708.06 1325.36,687.496 1325.92,698.928 1326.47,698.822 1327.03,699.907 1327.59,681.236 1328.15,683.002 1328.71,650.062 1329.27,631.381 1329.83,651.263 1330.39,689.476 1330.95,641.858 1331.51,645.033 1332.07,692.631 1332.63,727.6 1333.19,707.852 1333.75,687.236 1334.3,735.487 1334.86,749.61 1335.42,742.463 1335.98,738.583 1336.54,718.1 1337.1,715.084 1337.66,716.212 1338.22,730.358 1338.78,756.458 1339.34,740.433 1339.9,735.061 1340.46,715.059 1341.02,665.491 1341.57,697.379 1342.13,646.197 1342.69,661.354 1343.25,628.439 1343.81,570.959 1344.37,591.355 1344.93,613.138 1345.49,619.959 1346.05,624.941 1346.61,609.812 1347.17,612.182 1347.73,601.097 1348.29,606.154 1348.84,607.776 1349.4,611.572 1349.96,597.457 1350.52,587.685 1351.08,626.409 1351.64,626.436 1352.2,610.206 1352.76,596.52 1353.32,650.827 1353.88,699.801 1354.44,680.342 1355,680.982 1355.56,683.56 1356.12,651.956 1356.67,636.808 1357.23,637.239 1357.79,658.883 1358.35,680.579 1358.91,649.799 1359.47,621.422 1360.03,676.69 1360.59,678.93 1361.15,711.457 1361.71,712.266 1362.27,726.012 1362.83,723.591 1363.39,703.502 1363.94,687.484 1364.5,690.108 1365.06,691.02 1365.62,689.906 1366.18,653.395 1366.74,670.976 1367.3,674.197 1367.86,704.907 1368.42,655.151 1368.98,677.655 1369.54,680.823 1370.1,679.538 1370.66,694.125 1371.21,692.366 1371.77,680.22 1372.33,683.63 1372.89,714.952 1373.45,680.482 1374.01,696.389 1374.57,729.416 1375.13,755.783 1375.69,774.407 1376.25,783.278 1376.81,762.794 1377.37,740.132 1377.93,740.541 1378.49,718.997 1379.04,715.657 1379.6,712.753 1380.16,710.842 1380.72,724.953 1381.28,719.914 1381.84,734.794 1382.4,735.137 1382.96,717.638 1383.52,701.043 1384.08,732.627 1384.64,699.991 1385.2,716.563 1385.76,700.821 1386.31,700.692 1386.87,700.042 1387.43,714.016 1387.99,711.844 1388.55,744.217 1389.11,753.625 1389.67,749.424 1390.23,748.323 1390.79,726.246 1391.35,723.615 1391.91,720.191 1392.47,713.686 1393.03,713.058 1393.58,711.221 1394.14,727.703 1394.7,742.788 1395.26,738.581 1395.82,735.638 1396.38,731.779 1396.94,697.368 1397.5,680.937 1398.06,680.437 1398.62,632.444 1399.18,620.698 1399.74,639.67 1400.3,675.189 1400.86,678.198 1401.41,645.211 1401.97,616.031 1402.53,638.829 1403.09,676.689 1403.65,692.28 1404.21,658.558 1404.77,642.098 1405.33,628.91 1405.89,650.96 1406.45,636.436 1407.01,655.357 1407.57,625.61 1408.13,613.117 1408.68,600.054 1409.24,589.681 1409.8,591.684 1410.36,563.719 1410.92,554.892 1411.48,529.101 1412.04,554.909 1412.6,561.861 1413.16,569.807 1413.72,578.773 1414.28,581.588 1414.84,586.871 1415.4,578.897 1415.95,599.751 1416.51,617.797 1417.07,618.755 1417.63,640.112 1418.19,639.722 1418.75,627.978 1419.31,615.248 1419.87,620.524 1420.43,653.535 1420.99,673.821 1421.55,673.818 1422.11,675.489 1422.67,688.429 1423.23,703.583 1423.78,700.108 1424.34,715.005 1424.9,713.272 1425.46,695.452 1426.02,697.06 1426.58,710.516 1427.14,740.136 1427.7,735.335 1428.26,733.561 1428.82,744.141 1429.38,728.391 1429.94,722.757 1430.5,717.638 1431.05,712.262 1431.61,692.404 1432.17,694.39 1432.73,724.978 1433.29,705.13 1433.85,738.838 1434.41,749.267 1434.97,748.798 1435.53,716.6 1436.09,696.363 1436.65,681.715 1437.21,665.249 1437.77,701.648 1438.33,717.435 1438.88,703.564 1439.44,736.72 1440,718.924 1440.56,717.878 1441.12,747.903 1441.68,777.976 1442.24,809.432 1442.8,819.588 1443.36,795.587 1443.92,773.839 1444.48,767.547 1445.04,712.9 1445.6,661.594 1446.15,681.377 1446.71,682.654 1447.27,683.656 1447.83,682.955 1448.39,651.895 1448.95,669.323 1449.51,701.357 1450.07,700.849 1450.63,702.248 1451.19,751.868 1451.75,747.117 1452.31,774.14 1452.87,770.613 1453.42,750.678 1453.98,731.927 1454.54,746.324 1455.1,744.347 1455.66,710.633 1456.22,724.898 1456.78,758.068 1457.34,755.246 1457.9,716.599 1458.46,683.162 1459.02,685.455 1459.58,699.425 1460.14,712 1460.7,690.228 1461.25,675.344 1461.81,626.394 1462.37,627.822 1462.93,647.574 1463.49,664.416 1464.05,649.118 1464.61,634.896 1465.17,655.269 1465.73,654.811 1466.29,609.252 1466.85,631.151 1467.41,645.476 1467.97,665.547 1468.52,679.116 1469.08,696.794 1469.64,727.401 1470.2,742.541 1470.76,740.234 1471.32,737.539 1471.88,720.067 1472.44,766.264 1473,760.996 1473.56,757.214 1474.12,754.207 1474.68,733.601 1475.24,697.389 1475.79,713.872 1476.35,729.58 1476.91,715.322 1477.47,730.776 1478.03,678.023 1478.59,677.885 1479.15,677.929 1479.71,630.665 1480.27,616.086 1480.83,568.976 1481.39,559.506 1481.95,565.428 1482.51,553.868 1483.07,563.638 1483.62,587.168 1484.18,576.049 1484.74,565.516 1485.3,588.93 1485.86,611.733 1486.42,599.231 1486.98,604.553 1487.54,609.651 1488.1,580.238 1488.66,569.416 1489.22,592.105 1489.78,611.789 1490.34,613.621 1490.89,614.742 1491.45,635.194 1492.01,652.403 1492.57,654.442 1493.13,672.18 1493.69,688.287 1494.25,703.859 1494.81,722.394 1495.37,719.308 1495.93,746.734 1496.49,743.029 1497.05,757.745 1497.61,757.738 1498.16,772.466 1498.72,780.373 1499.28,770.892 1499.84,797.7 1500.4,789.728 1500.96,784.857 1501.52,780.045 1502.08,788.685 1502.64,783.267 1503.2,825.459 1503.76,804.872 1504.32,796.502 1504.88,775.516 1505.44,757.751 1505.99,754.841 1506.55,763.837 1507.11,743.22 1507.67,739.388 1508.23,721.923 1508.79,713.691 1509.35,728.772 1509.91,742.038 1510.47,723.922 1511.03,703.645 1511.59,703.853 1512.15,637.002 1512.71,640.588 1513.26,692.223 1513.82,726.462 1514.38,739.636 1514.94,754.522 1515.5,751.034 1516.06,763.369 1516.62,759.342 1517.18,707.282 1517.74,736.921 1518.3,765.913 1518.86,762.75 1519.42,759.006 1519.98,752.578 1520.53,731.408 1521.09,747.228 1521.65,742.654 1522.21,738.476 1522.77,737.698 1523.33,749.666 1523.89,764.071 1524.45,742.342 1525.01,718.652 1525.57,685.03 1526.13,665.545 1526.69,647.305 1527.25,650.158 1527.81,702.76 1528.36,719.993 1528.92,717.961 1529.48,716.45 1530.04,714.417 1530.6,700.018 1531.16,703.279 1531.72,685.577 1532.28,688.717 1532.84,672.184 1533.4,639.726 1533.96,625.027 1534.52,643.628 1535.08,661.347 1535.63,663.55 1536.19,680.202 1536.75,682.801 1537.31,649.153 1537.87,650.217 1538.43,651.281 1538.99,634.313 1539.55,623.953 1540.11,643.679 1540.67,644.87 1541.23,648.929 1541.79,683.567 1542.35,734.618 1542.9,730.042 1543.46,725.882 1544.02,736.822 1544.58,733.275 1545.14,730.222 1545.7,698.887 1546.26,701.54 1546.82,700.064 1547.38,686.977 1547.94,690.054 1548.5,689.216 1549.06,676.397 1549.62,688.735 1550.18,672.654 1550.73,641.03 1551.29,657.382 1551.85,655.84 1552.41,644.365 1552.97,632.551 1553.53,633.55 1554.09,634.574 1554.65,607.984 1555.21,610.774 1555.77,634.107 1556.33,648.952 1556.89,637.601 1557.45,613.465 1558,618.545 1558.56,573.268 1559.12,565.744 1559.68,570.334 1560.24,594.001 1560.8,586.689 1561.36,594.424 1561.92,601.319 1562.48,635.17 1563.04,637.686 1563.6,623.776 1564.16,594.148 1564.72,583.282 1565.28,558.784 1565.83,568.208 1566.39,559.439 1566.95,595.188 1567.51,597.452 1568.07,598.117 1568.63,652.137 1569.19,668.975 1569.75,649.485 1570.31,667.521 1570.87,681.856 1571.43,680.595 1571.99,662.863 1572.55,693.902 1573.1,695.51 1573.66,662.8 1574.22,644.353 1574.78,647.532 1575.34,665.869 1575.9,649.509 1576.46,636.738 1577.02,637.49 1577.58,638.072 1578.14,623.743 1578.7,645.171 1579.26,645.472 1579.82,651.017 1580.37,650.234 1580.93,653.111 1581.49,652.534 1582.05,688.845 1582.61,705.874 1583.17,723.258 1583.73,742.349 1584.29,726.235 1584.85,690.356 1585.41,719.361 1585.97,748.842 1586.53,711.017 1587.09,716.621 1587.65,682.987 1588.2,667.523 1588.76,665.95 1589.32,667.062 1589.88,665.666 1590.44,666.041 1591,679.119 1591.56,679.358 1592.12,663.441 1592.68,681.131 1593.24,680.966 1593.8,680.27 1594.36,664.945 1594.92,667.168 1595.47,667.311 1596.03,655.789 1596.59,691.427 1597.15,659.071 1597.71,662.221 1598.27,678.84 1598.83,648.656 1599.39,681.968 1599.95,652.58 1600.51,639.077 1601.07,655.938 1601.63,623.938 1602.19,624.913 1602.74,658.835 1603.3,627.683 1603.86,647.504 1604.42,667.967 1604.98,685.656 1605.54,702.993 1606.1,686.027 1606.66,638.941 1607.22,687.624 1607.78,685.443 1608.34,701.48 1608.9,716.081 1609.46,729.256 1610.02,711.768 1610.57,709.066 1611.13,739.935 1611.69,722.449 1612.25,719.669 1612.81,719.091 1613.37,716.421 1613.93,715.132 1614.49,730.212 1615.05,729.129 1615.61,726.418 1616.17,709.679 1616.73,676.538 1617.29,660.566 1617.84,695.04 1618.4,727.471 1618.96,707.271 1619.52,702.558 1620.08,700.519 1620.64,713.442 1621.2,694.451 1621.76,709.055 1622.32,740.522 1622.88,685.517 1623.44,687.562 1624,702.065 1624.56,716.794 1625.11,699.262 1625.67,666.416 1626.23,632.178 1626.79,634.494 1627.35,638.754 1627.91,640.998 1628.47,643.195 1629.03,629.28 1629.59,646.308 1630.15,680.118 1630.71,663.13 1631.27,646.705 1631.83,600.018 1632.39,604.311 1632.94,638.689 1633.5,639.876 1634.06,628.506 1634.62,629.113 1635.18,646.933 1635.74,660.491 1636.3,662.424 1636.86,648.231 1637.42,663.152 1637.98,682.482 1638.54,683.119 1639.1,665.128 1639.66,651.022 1640.21,655.774 1640.77,645.375 1641.33,662.588 1641.89,692.524 1642.45,705.96 1643.01,722.622 1643.57,737.386 1644.13,753.288 1644.69,746.896 1645.25,758.864 1645.81,802.977 1646.37,765.377 1646.93,764.096 1647.48,761.071 1648.04,744.372 1648.6,755.365 1649.16,749.774 1649.72,743.547 1650.28,759.684 1650.84,755.431 1651.4,751.404 1651.96,748.282 1652.52,792.913 1653.08,753.793 1653.64,733.387 1654.2,732.761 1654.76,728.659 1655.31,707.325 1655.87,737.24 1656.43,720.61 1656.99,716.201 1657.55,712.229 1658.11,741.015 1658.67,742.206 1659.23,722.576 1659.79,689.388 1660.35,691.873 1660.91,690.303 1661.47,705.702 1662.03,703.227 1662.58,689.352 1663.14,672.67 1663.7,708.938 1664.26,707.679 1664.82,706.662 1665.38,705.808 1665.94,704.641 1666.5,682.165 1667.06,648.26 1667.62,650.667 1668.18,668.89 1668.74,669.845 1669.3,718.908 1669.85,715.789 1670.41,711.464 1670.97,708.405 1671.53,658.076 1672.09,660.97 1672.65,679.629 1673.21,677.732 1673.77,663.398 1674.33,675.58 1674.89,693.09 1675.45,702.026 1676.01,718.413 1676.57,698.096 1677.13,694.579 1677.68,695.518 1678.24,693.973 1678.8,693.508 1679.36,681.847 1679.92,697.337 1680.48,647.352 1681.04,618.855 1681.6,588.858 1682.16,597.168 1682.72,617.825 1683.28,623.573 1683.84,609.567 1684.4,614.334 1684.95,620.1 1685.51,654.388 1686.07,656.189 1686.63,659.45 1687.19,663.062 1687.75,648.613 1688.31,684.031 1688.87,632.952 1689.43,651.766 1689.99,651.695 1690.55,639.912 1691.11,659.137 1691.67,694.895 1692.23,715.36 1692.78,715.995 1693.34,698.977 1693.9,715.321 1694.46,728.719 1695.02,710.545 1695.58,724.73 1696.14,673.833 1696.7,673.634 1697.26,674.576 1697.82,690.81 1698.38,655.299 1698.94,657.924 1699.5,691.308 1700.05,721.053 1700.61,722.182 1701.17,736.931 1701.73,735.034 1702.29,734.006 1702.85,718.259 1703.41,716.603 1703.97,734.675 1704.53,749.481 1705.09,763.179 1705.65,744.508 1706.21,775.756 1706.77,771.155 1707.32,718.447 1707.88,697.885 1708.44,682.9 1709,715.544 1709.56,732.186 1710.12,727.878 1710.68,726.874 1711.24,723.15 1711.8,753.824 1712.36,778.429 1712.92,755.534 1713.48,714.859 1714.04,713.419 1714.6,742.09 1715.15,755.663 1715.71,751.532 1716.27,763.437 1716.83,738.942 1717.39,718.982 1717.95,715.573 1718.51,696.876 1719.07,649.886 1719.63,635.732 1720.19,635.605 1720.75,653.548 1721.31,606.404 1721.87,625.711 1722.42,641.377 1722.98,655.93 1723.54,638.767 1724.1,639.921 1724.66,641.672 1725.22,661.627 1725.78,682.576 1726.34,688.187 1726.9,689.326 1727.46,673.02 1728.02,673.614 1728.58,639.038 1729.14,642.082 1729.69,641.046 1730.25,594.983 1730.81,599.259 1731.37,588.923 1731.93,611.85 1732.49,598.103 1733.05,617.042 1733.61,621.817 1734.17,639.983 1734.73,641.683 1735.29,659.371 1735.85,725.467 1736.41,708.311 1736.97,723.195 1737.52,720.881 1738.08,706.534 1738.64,722.041 1739.2,734.61 1739.76,745.953 1740.32,744.22 1740.88,710.149 1741.44,698.105 1742,649.765 1742.56,651.479 1743.12,687.507 1743.68,689.35 1744.24,687.94 1744.79,668.472 1745.35,702.875 1745.91,702.725 1746.47,701.682 1747.03,716.901 1747.59,715.51 1748.15,662.946 1748.71,666.937 1749.27,700.452 1749.83,678.89 1750.39,712.465 1750.95,712.439 1751.51,674.519 1752.06,674.876 1752.62,626.442 1753.18,648.408 1753.74,650.733 1754.3,654.293 1754.86,655.034 1755.42,675.185 1755.98,710.194 1756.54,708.059 1757.1,672.59 1757.66,688.695 1758.22,691.283 1758.78,708.187 1759.34,723.368 1759.89,707.968 1760.45,690.814 1761.01,739.852 1761.57,737.003 1762.13,752.499 1762.69,744.55 1763.25,756.893 1763.81,753.048 1764.37,732.201 1764.93,742.376 1765.49,759.725 1766.05,771.518 1766.61,718.222 1767.16,748.719 1767.72,763.991 1768.28,740.855 1768.84,770.741 1769.4,750.818 1769.96,730.605 1770.52,712.993 1771.08,715.679 1771.64,730.012 1772.2,713.332 1772.76,713.516 1773.32,713.157 1773.88,729.879 1774.43,727.977 1774.99,707.507 1775.55,740.123 1776.11,752.366 1776.67,714.856 1777.23,683.973 1777.79,635.911 1778.35,621.91 1778.91,676.591 1779.47,673.439 1780.03,706.607 1780.59,701.311 1781.15,700.457 1781.71,636.875 1782.26,639.003 1782.82,673.392 1783.38,661.079 1783.94,660.026 1784.5,676.949 1785.06,661.61 1785.62,600.905 1786.18,572.305 1786.74,563.459 1787.3,585.16 1787.86,623.868 1788.42,628.489 1788.98,616.464 1789.53,604.978 1790.09,608.285 1790.65,627.78 1791.21,647.794 1791.77,666.08 1792.33,634.701 1792.89,656.984 1793.45,660.425 1794.01,662.228 1794.57,699.157 1795.13,714.13 1795.69,712.043 1796.25,696.571 1796.8,695.428 1797.36,713.313 1797.92,709.736 1798.48,690.846 1799.04,673.227 1799.6,686.824 1800.16,686.514 1800.72,669.562 1801.28,686.218 1801.84,668.02 1802.4,651.525 1802.96,668.858 1803.52,682.284 1804.08,698.666 1804.63,683.459 1805.19,667.275 1805.75,651.362 1806.31,638.471 1806.87,657.285 1807.43,643.209 1807.99,628.153 1808.55,634.041 1809.11,621.526 1809.67,658.28 1810.23,675.898 1810.79,658.634 1811.35,626.933 1811.9,613.945 1812.46,635.273 1813.02,634.999 1813.58,650.398 1814.14,702.371 1814.7,672.6 1815.26,695.419 1815.82,711.739 1816.38,712.338 1816.94,707.617 1817.5,678.19 1818.06,663.864 1818.62,731.177 1819.18,762.11 1819.73,773.924 1820.29,754.568 1820.85,737.616 1821.41,732.767 1821.97,732.191 1822.53,728.85 1823.09,710.918 1823.65,658.483 1824.21,676.225 1824.77,678.923 1825.33,700.783 1825.89,701.997 1826.45,670.286 1827,702.678 1827.56,701.505 1828.12,700.947 1828.68,700.056 1829.24,695.127 1829.8,693.86 1830.36,692.565 1830.92,675.668 1831.48,689.412 1832.04,687.528 1832.6,719.605 1833.16,714.848 1833.72,729.826 1834.27,725.9 1834.83,722.177 1835.39,723.022 1835.95,748.388 1836.51,744.608 1837.07,740.836 1837.63,753.442 1838.19,699.547 \"/>\n<path clip-path=\"url(#clip323)\" d=\"M720.247 692.239 L720.806 692.239 L721.365 692.239 L721.924 692.239 L722.484 692.239 L723.043 692.239 L723.602 692.239 L724.161 692.239 L724.721 692.239 L725.28 692.239 L725.839 692.239 L726.398 692.239 L726.958 692.239 L727.517 692.239 L728.076 692.239 L728.635 692.239 L729.195 692.239 L729.754 692.239 L730.313 692.239 L730.872 692.239 L731.432 692.239 L731.991 692.239 L732.55 692.239 L733.109 692.239 L733.669 692.239 L734.228 692.239 L734.787 692.239 L735.346 692.239 L735.906 692.239 L736.465 692.239 L737.024 692.239 L737.583 692.239 L738.143 692.239 L738.702 692.239 L739.261 692.239 L739.82 692.239 L740.38 692.239 L740.939 692.239 L741.498 692.239 L742.057 692.239 L742.617 692.239 L743.176 692.239 L743.735 692.239 L744.294 692.239 L744.854 692.239 L745.413 692.239 L745.972 692.239 L746.531 692.239 L747.091 692.239 L747.65 692.239 L748.209 692.239 L748.768 692.239 L749.328 692.239 L749.887 692.239 L750.446 692.239 L751.005 692.239 L751.565 692.239 L752.124 692.239 L752.683 692.239 L753.242 692.239 L753.802 692.239 L754.361 692.239 L754.92 692.239 L755.479 692.239 L756.039 692.239 L756.598 692.239 L757.157 692.239 L757.716 692.239 L758.276 692.239 L758.835 692.239 L759.394 692.239 L759.953 692.239 L760.513 692.239 L761.072 692.239 L761.631 692.239 L762.19 692.239 L762.75 692.239 L763.309 692.239 L763.868 692.239 L764.427 692.239 L764.987 692.239 L765.546 692.239 L766.105 692.239 L766.664 692.239 L767.224 692.239 L767.783 692.239 L768.342 692.239 L768.901 692.239 L769.461 692.239 L770.02 692.239 L770.579 692.239 L771.138 692.239 L771.698 692.239 L772.257 692.239 L772.816 692.239 L773.375 692.239 L773.935 692.239 L774.494 692.239 L775.053 692.239 L775.612 692.239 L776.172 692.239 L776.731 692.239 L777.29 692.239 L777.849 692.239 L778.409 692.239 L778.968 692.239 L779.527 692.239 L780.086 692.239 L780.646 692.239 L781.205 692.239 L781.764 692.239 L782.323 692.239 L782.883 692.239 L783.442 692.239 L784.001 692.239 L784.56 692.239 L785.12 692.239 L785.679 692.239 L786.238 692.239 L786.797 692.239 L787.357 692.239 L787.916 692.239 L788.475 692.239 L789.034 692.239 L789.594 692.239 L790.153 692.239 L790.712 692.239 L791.271 692.239 L791.831 692.239 L792.39 692.239 L792.949 692.239 L793.508 692.239 L794.068 692.239 L794.627 692.239 L795.186 692.239 L795.745 692.239 L796.305 692.239 L796.864 692.239 L797.423 692.239 L797.982 692.239 L798.542 692.239 L799.101 692.239 L799.66 692.239 L800.219 692.239 L800.779 692.239 L801.338 692.239 L801.897 692.239 L802.456 692.239 L803.016 692.239 L803.575 692.239 L804.134 692.239 L804.693 692.239 L805.253 692.239 L805.812 692.239 L806.371 692.239 L806.931 692.239 L807.49 692.239 L808.049 692.239 L808.608 692.239 L809.168 692.239 L809.727 692.239 L810.286 692.239 L810.845 692.239 L811.405 692.239 L811.964 692.239 L812.523 692.239 L813.082 692.239 L813.642 692.239 L814.201 692.239 L814.76 692.239 L815.319 692.239 L815.879 692.239 L816.438 692.239 L816.997 692.239 L817.556 692.239 L818.116 692.239 L818.675 692.239 L819.234 692.239 L819.793 692.239 L820.353 692.239 L820.912 692.239 L821.471 692.239 L822.03 692.239 L822.59 692.239 L823.149 692.239 L823.708 692.239 L824.267 692.239 L824.827 692.239 L825.386 692.239 L825.945 692.239 L826.504 692.239 L827.064 692.239 L827.623 692.239 L828.182 692.239 L828.741 692.239 L829.301 692.239 L829.86 692.239 L830.419 692.239 L830.978 692.239 L831.538 692.239 L832.097 692.239 L832.656 692.239 L833.215 692.239 L833.775 692.239 L834.334 692.239 L834.893 692.239 L835.452 692.239 L836.012 692.239 L836.571 692.239 L837.13 692.239 L837.689 692.239 L838.249 692.239 L838.808 692.239 L839.367 692.239 L839.926 692.239 L840.486 692.239 L841.045 692.239 L841.604 692.239 L842.163 692.239 L842.723 692.239 L843.282 692.239 L843.841 692.239 L844.4 692.239 L844.96 692.239 L845.519 692.239 L846.078 692.239 L846.637 692.239 L847.197 692.239 L847.756 692.239 L848.315 692.239 L848.874 692.239 L849.434 692.239 L849.993 692.239 L850.552 692.239 L851.111 692.239 L851.671 692.239 L852.23 692.239 L852.789 692.239 L853.348 692.239 L853.908 692.239 L854.467 692.239 L855.026 692.239 L855.585 692.239 L856.145 692.239 L856.704 692.239 L857.263 692.239 L857.822 692.239 L858.382 692.239 L858.941 692.239 L859.5 692.239 L860.059 692.239 L860.619 692.239 L861.178 692.239 L861.737 692.239 L862.296 692.239 L862.856 692.239 L863.415 692.239 L863.974 692.239 L864.533 692.239 L865.093 692.239 L865.652 692.239 L866.211 692.239 L866.77 692.239 L867.33 692.239 L867.889 692.239 L868.448 692.239 L869.007 692.239 L869.567 692.239 L870.126 692.239 L870.685 692.239 L871.244 692.239 L871.804 692.239 L872.363 692.239 L872.922 692.239 L873.481 692.239 L874.041 692.239 L874.6 692.239 L875.159 692.239 L875.718 692.239 L876.278 692.239 L876.837 692.239 L877.396 692.239 L877.955 692.239 L878.515 692.239 L879.074 692.239 L879.633 692.239 L880.192 692.239 L880.752 692.239 L881.311 692.239 L881.87 692.239 L882.429 692.239 L882.989 692.239 L883.548 692.239 L884.107 692.239 L884.666 692.239 L885.226 692.239 L885.785 692.239 L886.344 692.239 L886.903 692.239 L887.463 692.239 L888.022 692.239 L888.581 692.239 L889.14 692.239 L889.7 692.239 L890.259 692.239 L890.818 692.239 L891.377 692.239 L891.937 692.239 L892.496 692.239 L893.055 692.239 L893.614 692.239 L894.174 692.239 L894.733 692.239 L895.292 692.239 L895.851 692.239 L896.411 692.239 L896.97 692.239 L897.529 692.239 L898.088 692.239 L898.648 692.239 L899.207 692.239 L899.766 692.239 L900.325 692.239 L900.885 692.239 L901.444 692.239 L902.003 692.239 L902.562 692.239 L903.122 692.239 L903.681 692.239 L904.24 692.239 L904.799 692.239 L905.359 692.239 L905.918 692.239 L906.477 692.239 L907.036 692.239 L907.596 692.239 L908.155 692.239 L908.714 692.239 L909.273 692.239 L909.833 692.239 L910.392 692.239 L910.951 692.239 L911.51 692.239 L912.07 692.239 L912.629 692.239 L913.188 692.239 L913.747 692.239 L914.307 692.239 L914.866 692.239 L915.425 692.239 L915.984 692.239 L916.544 692.239 L917.103 692.239 L917.662 692.239 L918.221 692.239 L918.781 692.239 L919.34 692.239 L919.899 692.239 L920.458 692.239 L921.018 692.239 L921.577 692.239 L922.136 692.239 L922.695 692.239 L923.255 692.239 L923.814 692.239 L924.373 692.239 L924.932 692.239 L925.492 692.239 L926.051 692.239 L926.61 692.239 L927.169 692.239 L927.729 692.239 L928.288 692.239 L928.847 692.239 L929.406 692.239 L929.966 692.239 L930.525 692.239 L931.084 692.239 L931.644 692.239 L932.203 692.239 L932.762 692.239 L933.321 692.239 L933.881 692.239 L934.44 692.239 L934.999 692.239 L935.558 692.239 L936.118 692.239 L936.677 692.239 L937.236 692.239 L937.795 692.239 L938.355 692.239 L938.914 692.239 L939.473 692.239 L940.032 692.239 L940.592 692.239 L941.151 692.239 L941.71 692.239 L942.269 692.239 L942.829 692.239 L943.388 692.239 L943.947 692.239 L944.506 692.239 L945.066 692.239 L945.625 692.239 L946.184 692.239 L946.743 692.239 L947.303 692.239 L947.862 692.239 L948.421 692.239 L948.98 692.239 L949.54 692.239 L950.099 692.239 L950.658 692.239 L951.217 692.239 L951.777 692.239 L952.336 692.239 L952.895 692.239 L953.454 692.239 L954.014 692.239 L954.573 692.239 L955.132 692.239 L955.691 692.239 L956.251 692.239 L956.81 692.239 L957.369 692.239 L957.928 692.239 L958.488 692.239 L959.047 692.239 L959.606 692.239 L960.165 692.239 L960.725 692.239 L961.284 692.239 L961.843 692.239 L962.402 692.239 L962.962 692.239 L963.521 692.239 L964.08 692.239 L964.639 692.239 L965.199 692.239 L965.758 692.239 L966.317 692.239 L966.876 692.239 L967.436 692.239 L967.995 692.239 L968.554 692.239 L969.113 692.239 L969.673 692.239 L970.232 692.239 L970.791 692.239 L971.35 692.239 L971.91 692.239 L972.469 692.239 L973.028 692.239 L973.587 692.239 L974.147 692.239 L974.706 692.239 L975.265 692.239 L975.824 692.239 L976.384 692.239 L976.943 692.239 L977.502 692.239 L978.061 692.239 L978.621 692.239 L979.18 692.239 L979.739 692.239 L980.298 692.239 L980.858 692.239 L981.417 692.239 L981.976 692.239 L982.535 692.239 L983.095 692.239 L983.654 692.239 L984.213 692.239 L984.772 692.239 L985.332 692.239 L985.891 692.239 L986.45 692.239 L987.009 692.239 L987.569 692.239 L988.128 692.239 L988.687 692.239 L989.246 692.239 L989.806 692.239 L990.365 692.239 L990.924 692.239 L991.483 692.239 L992.043 692.239 L992.602 692.239 L993.161 692.239 L993.72 692.239 L994.28 692.239 L994.839 692.239 L995.398 692.239 L995.957 692.239 L996.517 692.239 L997.076 692.239 L997.635 692.239 L998.194 692.239 L998.754 692.239 L999.313 692.239 L999.872 692.239 L1000.43 692.239 L1000.99 692.239 L1001.55 692.239 L1002.11 692.239 L1002.67 692.239 L1003.23 692.239 L1003.79 692.239 L1004.35 692.239 L1004.91 692.239 L1005.46 692.239 L1006.02 692.239 L1006.58 692.239 L1007.14 692.239 L1007.7 692.239 L1008.26 692.239 L1008.82 692.239 L1009.38 692.239 L1009.94 692.239 L1010.5 692.239 L1011.06 692.239 L1011.62 692.239 L1012.18 692.239 L1012.73 692.239 L1013.29 692.239 L1013.85 692.239 L1014.41 692.239 L1014.97 692.239 L1015.53 692.239 L1016.09 692.239 L1016.65 692.239 L1017.21 692.239 L1017.77 692.239 L1018.33 692.239 L1018.89 692.239 L1019.45 692.239 L1020.01 692.239 L1020.56 692.239 L1021.12 692.239 L1021.68 692.239 L1022.24 692.239 L1022.8 692.239 L1023.36 692.239 L1023.92 692.239 L1024.48 692.239 L1025.04 692.239 L1025.6 692.239 L1026.16 692.239 L1026.72 692.239 L1027.28 692.239 L1027.83 692.239 L1028.39 692.239 L1028.95 692.239 L1029.51 692.239 L1030.07 692.239 L1030.63 692.239 L1031.19 692.239 L1031.75 692.239 L1032.31 692.239 L1032.87 692.239 L1033.43 692.239 L1033.99 692.239 L1034.55 692.239 L1035.1 692.239 L1035.66 692.239 L1036.22 692.239 L1036.78 692.239 L1037.34 692.239 L1037.9 692.239 L1038.46 692.239 L1039.02 692.239 L1039.58 692.239 L1040.14 692.239 L1040.7 692.239 L1041.26 692.239 L1041.82 692.239 L1042.38 692.239 L1042.93 692.239 L1043.49 692.239 L1044.05 692.239 L1044.61 692.239 L1045.17 692.239 L1045.73 692.239 L1046.29 692.239 L1046.85 692.239 L1047.41 692.239 L1047.97 692.239 L1048.53 692.239 L1049.09 692.239 L1049.65 692.239 L1050.2 692.239 L1050.76 692.239 L1051.32 692.239 L1051.88 692.239 L1052.44 692.239 L1053 692.239 L1053.56 692.239 L1054.12 692.239 L1054.68 692.239 L1055.24 692.239 L1055.8 692.239 L1056.36 692.239 L1056.92 692.239 L1057.48 692.239 L1058.03 692.239 L1058.59 692.239 L1059.15 692.239 L1059.71 692.239 L1060.27 692.239 L1060.83 692.239 L1061.39 692.239 L1061.95 692.239 L1062.51 692.239 L1063.07 692.239 L1063.63 692.239 L1064.19 692.239 L1064.75 692.239 L1065.3 692.239 L1065.86 692.239 L1066.42 692.239 L1066.98 692.239 L1067.54 692.239 L1068.1 692.239 L1068.66 692.239 L1069.22 692.239 L1069.78 692.239 L1070.34 692.239 L1070.9 692.239 L1071.46 692.239 L1072.02 692.239 L1072.57 692.239 L1073.13 692.239 L1073.69 692.239 L1074.25 692.239 L1074.81 692.239 L1075.37 692.239 L1075.93 692.239 L1076.49 692.239 L1077.05 692.239 L1077.61 692.239 L1078.17 692.239 L1078.73 692.239 L1079.29 692.239 L1079.85 692.239 L1080.4 692.239 L1080.96 692.239 L1081.52 692.239 L1082.08 692.239 L1082.64 692.239 L1083.2 692.239 L1083.76 692.239 L1084.32 692.239 L1084.88 692.239 L1085.44 692.239 L1086 692.239 L1086.56 692.239 L1087.12 692.239 L1087.67 692.239 L1088.23 692.239 L1088.79 692.239 L1089.35 692.239 L1089.91 692.239 L1090.47 692.239 L1091.03 692.239 L1091.59 692.239 L1092.15 692.239 L1092.71 692.239 L1093.27 692.239 L1093.83 692.239 L1094.39 692.239 L1094.94 692.239 L1095.5 692.239 L1096.06 692.239 L1096.62 692.239 L1097.18 692.239 L1097.74 692.239 L1098.3 692.239 L1098.86 692.239 L1099.42 692.239 L1099.98 692.239 L1100.54 692.239 L1101.1 692.239 L1101.66 692.239 L1102.22 692.239 L1102.77 692.239 L1103.33 692.239 L1103.89 692.239 L1104.45 692.239 L1105.01 692.239 L1105.57 692.239 L1106.13 692.239 L1106.69 692.239 L1107.25 692.239 L1107.81 692.239 L1108.37 692.239 L1108.93 692.239 L1109.49 692.239 L1110.04 692.239 L1110.6 692.239 L1111.16 692.239 L1111.72 692.239 L1112.28 692.239 L1112.84 692.239 L1113.4 692.239 L1113.96 692.239 L1114.52 692.239 L1115.08 692.239 L1115.64 692.239 L1116.2 692.239 L1116.76 692.239 L1117.31 692.239 L1117.87 692.239 L1118.43 692.239 L1118.99 692.239 L1119.55 692.239 L1120.11 692.239 L1120.67 692.239 L1121.23 692.239 L1121.79 692.239 L1122.35 692.239 L1122.91 692.239 L1123.47 692.239 L1124.03 692.239 L1124.59 692.239 L1125.14 692.239 L1125.7 692.239 L1126.26 692.239 L1126.82 692.239 L1127.38 692.239 L1127.94 692.239 L1128.5 692.239 L1129.06 692.239 L1129.62 692.239 L1130.18 692.239 L1130.74 692.239 L1131.3 692.239 L1131.86 692.239 L1132.41 692.239 L1132.97 692.239 L1133.53 692.239 L1134.09 692.239 L1134.65 692.239 L1135.21 692.239 L1135.77 692.239 L1136.33 692.239 L1136.89 692.239 L1137.45 692.239 L1138.01 692.239 L1138.57 692.239 L1139.13 692.239 L1139.68 692.239 L1140.24 692.239 L1140.8 692.239 L1141.36 692.239 L1141.92 692.239 L1142.48 692.239 L1143.04 692.239 L1143.6 692.239 L1144.16 692.239 L1144.72 692.239 L1145.28 692.239 L1145.84 692.239 L1146.4 692.239 L1146.96 692.239 L1147.51 692.239 L1148.07 692.239 L1148.63 692.239 L1149.19 692.239 L1149.75 692.239 L1150.31 692.239 L1150.87 692.239 L1151.43 692.239 L1151.99 692.239 L1152.55 692.239 L1153.11 692.239 L1153.67 692.239 L1154.23 692.239 L1154.78 692.239 L1155.34 692.239 L1155.9 692.239 L1156.46 692.239 L1157.02 692.239 L1157.58 692.239 L1158.14 692.239 L1158.7 692.239 L1159.26 692.239 L1159.82 692.239 L1160.38 692.239 L1160.94 692.239 L1161.5 692.239 L1162.05 692.239 L1162.61 692.239 L1163.17 692.239 L1163.73 692.239 L1164.29 692.239 L1164.85 692.239 L1165.41 692.239 L1165.97 692.239 L1166.53 692.239 L1167.09 692.239 L1167.65 692.239 L1168.21 692.239 L1168.77 692.239 L1169.33 692.239 L1169.88 692.239 L1170.44 692.239 L1171 692.239 L1171.56 692.239 L1172.12 692.239 L1172.68 692.239 L1173.24 692.239 L1173.8 692.239 L1174.36 692.239 L1174.92 692.239 L1175.48 692.239 L1176.04 692.239 L1176.6 692.239 L1177.15 692.239 L1177.71 692.239 L1178.27 692.239 L1178.83 692.239 L1179.39 692.239 L1179.95 692.239 L1180.51 692.239 L1181.07 692.239 L1181.63 692.239 L1182.19 692.239 L1182.75 692.239 L1183.31 692.239 L1183.87 692.239 L1184.43 692.239 L1184.98 692.239 L1185.54 692.239 L1186.1 692.239 L1186.66 692.239 L1187.22 692.239 L1187.78 692.239 L1188.34 692.239 L1188.9 692.239 L1189.46 692.239 L1190.02 692.239 L1190.58 692.239 L1191.14 692.239 L1191.7 692.239 L1192.25 692.239 L1192.81 692.239 L1193.37 692.239 L1193.93 692.239 L1194.49 692.239 L1195.05 692.239 L1195.61 692.239 L1196.17 692.239 L1196.73 692.239 L1197.29 692.239 L1197.85 692.239 L1198.41 692.239 L1198.97 692.239 L1199.52 692.239 L1200.08 692.239 L1200.64 692.239 L1201.2 692.239 L1201.76 692.239 L1202.32 692.239 L1202.88 692.239 L1203.44 692.239 L1204 692.239 L1204.56 692.239 L1205.12 692.239 L1205.68 692.239 L1206.24 692.239 L1206.8 692.239 L1207.35 692.239 L1207.91 692.239 L1208.47 692.239 L1209.03 692.239 L1209.59 692.239 L1210.15 692.239 L1210.71 692.239 L1211.27 692.239 L1211.83 692.239 L1212.39 692.239 L1212.95 692.239 L1213.51 692.239 L1214.07 692.239 L1214.62 692.239 L1215.18 692.239 L1215.74 692.239 L1216.3 692.239 L1216.86 692.239 L1217.42 692.239 L1217.98 692.239 L1218.54 692.239 L1219.1 692.239 L1219.66 692.239 L1220.22 692.239 L1220.78 692.239 L1221.34 692.239 L1221.89 692.239 L1222.45 692.239 L1223.01 692.239 L1223.57 692.239 L1224.13 692.239 L1224.69 692.239 L1225.25 692.239 L1225.81 692.239 L1226.37 692.239 L1226.93 692.239 L1227.49 692.239 L1228.05 692.239 L1228.61 692.239 L1229.17 692.239 L1229.72 692.239 L1230.28 692.239 L1230.84 692.239 L1231.4 692.239 L1231.96 692.239 L1232.52 692.239 L1233.08 692.239 L1233.64 692.239 L1234.2 692.239 L1234.76 692.239 L1235.32 692.239 L1235.88 692.239 L1236.44 692.239 L1236.99 692.239 L1237.55 692.239 L1238.11 692.239 L1238.67 692.239 L1239.23 692.239 L1239.79 692.239 L1240.35 692.239 L1240.91 692.239 L1241.47 692.239 L1242.03 692.239 L1242.59 692.239 L1243.15 692.239 L1243.71 692.239 L1244.26 692.239 L1244.82 692.239 L1245.38 692.239 L1245.94 692.239 L1246.5 692.239 L1247.06 692.239 L1247.62 692.239 L1248.18 692.239 L1248.74 692.239 L1249.3 692.239 L1249.86 692.239 L1250.42 692.239 L1250.98 692.239 L1251.54 692.239 L1252.09 692.239 L1252.65 692.239 L1253.21 692.239 L1253.77 692.239 L1254.33 692.239 L1254.89 692.239 L1255.45 692.239 L1256.01 692.239 L1256.57 692.239 L1257.13 692.239 L1257.69 692.239 L1258.25 692.239 L1258.81 692.239 L1259.36 692.239 L1259.92 692.239 L1260.48 692.239 L1261.04 692.239 L1261.6 692.239 L1262.16 692.239 L1262.72 692.239 L1263.28 692.239 L1263.84 692.239 L1264.4 692.239 L1264.96 692.239 L1265.52 692.239 L1266.08 692.239 L1266.63 692.239 L1267.19 692.239 L1267.75 692.239 L1268.31 692.239 L1268.87 692.239 L1269.43 692.239 L1269.99 692.239 L1270.55 692.239 L1271.11 692.239 L1271.67 692.239 L1272.23 692.239 L1272.79 692.239 L1273.35 692.239 L1273.91 692.239 L1274.46 692.239 L1275.02 692.239 L1275.58 692.239 L1276.14 692.239 L1276.7 692.239 L1277.26 692.239 L1277.82 692.239 L1278.38 692.239 L1278.94 692.239 L1279.5 692.239 L1280.06 692.239 L1280.62 692.239 L1281.18 692.239 L1281.73 692.239 L1282.29 692.239 L1282.85 692.239 L1283.41 692.239 L1283.97 692.239 L1284.53 692.239 L1285.09 692.239 L1285.65 692.239 L1286.21 692.239 L1286.77 692.239 L1287.33 692.239 L1287.89 692.239 L1288.45 692.239 L1289 692.239 L1289.56 692.239 L1290.12 692.239 L1290.68 692.239 L1291.24 692.239 L1291.8 692.239 L1292.36 692.239 L1292.92 692.239 L1293.48 692.239 L1294.04 692.239 L1294.6 692.239 L1295.16 692.239 L1295.72 692.239 L1296.28 692.239 L1296.83 692.239 L1297.39 692.239 L1297.95 692.239 L1298.51 692.239 L1299.07 692.239 L1299.63 692.239 L1300.19 692.239 L1300.75 692.239 L1301.31 692.239 L1301.87 692.239 L1302.43 692.239 L1302.99 692.239 L1303.55 692.239 L1304.1 692.239 L1304.66 692.239 L1305.22 692.239 L1305.78 692.239 L1306.34 692.239 L1306.9 692.239 L1307.46 692.239 L1308.02 692.239 L1308.58 692.239 L1309.14 692.239 L1309.7 692.239 L1310.26 692.239 L1310.82 692.239 L1311.38 692.239 L1311.93 692.239 L1312.49 692.239 L1313.05 692.239 L1313.61 692.239 L1314.17 692.239 L1314.73 692.239 L1315.29 692.239 L1315.85 692.239 L1316.41 692.239 L1316.97 692.239 L1317.53 692.239 L1318.09 692.239 L1318.65 692.239 L1319.2 692.239 L1319.76 692.239 L1320.32 692.239 L1320.88 692.239 L1321.44 692.239 L1322 692.239 L1322.56 692.239 L1323.12 692.239 L1323.68 692.239 L1324.24 692.239 L1324.8 692.239 L1325.36 692.239 L1325.92 692.239 L1326.47 692.239 L1327.03 692.239 L1327.59 692.239 L1328.15 692.239 L1328.71 692.239 L1329.27 692.239 L1329.83 692.239 L1330.39 692.239 L1330.95 692.239 L1331.51 692.239 L1332.07 692.239 L1332.63 692.239 L1333.19 692.239 L1333.75 692.239 L1334.3 692.239 L1334.86 692.239 L1335.42 692.239 L1335.98 692.239 L1336.54 692.239 L1337.1 692.239 L1337.66 692.239 L1338.22 692.239 L1338.78 692.239 L1339.34 692.239 L1339.9 692.239 L1340.46 692.239 L1341.02 692.239 L1341.57 692.239 L1342.13 692.239 L1342.69 692.239 L1343.25 692.239 L1343.81 692.239 L1344.37 692.239 L1344.93 692.239 L1345.49 692.239 L1346.05 692.239 L1346.61 692.239 L1347.17 692.239 L1347.73 692.239 L1348.29 692.239 L1348.84 692.239 L1349.4 692.239 L1349.96 692.239 L1350.52 692.239 L1351.08 692.239 L1351.64 692.239 L1352.2 692.239 L1352.76 692.239 L1353.32 692.239 L1353.88 692.239 L1354.44 692.239 L1355 692.239 L1355.56 692.239 L1356.12 692.239 L1356.67 692.239 L1357.23 692.239 L1357.79 692.239 L1358.35 692.239 L1358.91 692.239 L1359.47 692.239 L1360.03 692.239 L1360.59 692.239 L1361.15 692.239 L1361.71 692.239 L1362.27 692.239 L1362.83 692.239 L1363.39 692.239 L1363.94 692.239 L1364.5 692.239 L1365.06 692.239 L1365.62 692.239 L1366.18 692.239 L1366.74 692.239 L1367.3 692.239 L1367.86 692.239 L1368.42 692.239 L1368.98 692.239 L1369.54 692.239 L1370.1 692.239 L1370.66 692.239 L1371.21 692.239 L1371.77 692.239 L1372.33 692.239 L1372.89 692.239 L1373.45 692.239 L1374.01 692.239 L1374.57 692.239 L1375.13 692.239 L1375.69 692.239 L1376.25 692.239 L1376.81 692.239 L1377.37 692.239 L1377.93 692.239 L1378.49 692.239 L1379.04 692.239 L1379.6 692.239 L1380.16 692.239 L1380.72 692.239 L1381.28 692.239 L1381.84 692.239 L1382.4 692.239 L1382.96 692.239 L1383.52 692.239 L1384.08 692.239 L1384.64 692.239 L1385.2 692.239 L1385.76 692.239 L1386.31 692.239 L1386.87 692.239 L1387.43 692.239 L1387.99 692.239 L1388.55 692.239 L1389.11 692.239 L1389.67 692.239 L1390.23 692.239 L1390.79 692.239 L1391.35 692.239 L1391.91 692.239 L1392.47 692.239 L1393.03 692.239 L1393.58 692.239 L1394.14 692.239 L1394.7 692.239 L1395.26 692.239 L1395.82 692.239 L1396.38 692.239 L1396.94 692.239 L1397.5 692.239 L1398.06 692.239 L1398.62 692.239 L1399.18 692.239 L1399.74 692.239 L1400.3 692.239 L1400.86 692.239 L1401.41 692.239 L1401.97 692.239 L1402.53 692.239 L1403.09 692.239 L1403.65 692.239 L1404.21 692.239 L1404.77 692.239 L1405.33 692.239 L1405.89 692.239 L1406.45 692.239 L1407.01 692.239 L1407.57 692.239 L1408.13 692.239 L1408.68 692.239 L1409.24 692.239 L1409.8 692.239 L1410.36 692.239 L1410.92 692.239 L1411.48 692.239 L1412.04 692.239 L1412.6 692.239 L1413.16 692.239 L1413.72 692.239 L1414.28 692.239 L1414.84 692.239 L1415.4 692.239 L1415.95 692.239 L1416.51 692.239 L1417.07 692.239 L1417.63 692.239 L1418.19 692.239 L1418.75 692.239 L1419.31 692.239 L1419.87 692.239 L1420.43 692.239 L1420.99 692.239 L1421.55 692.239 L1422.11 692.239 L1422.67 692.239 L1423.23 692.239 L1423.78 692.239 L1424.34 692.239 L1424.9 692.239 L1425.46 692.239 L1426.02 692.239 L1426.58 692.239 L1427.14 692.239 L1427.7 692.239 L1428.26 692.239 L1428.82 692.239 L1429.38 692.239 L1429.94 692.239 L1430.5 692.239 L1431.05 692.239 L1431.61 692.239 L1432.17 692.239 L1432.73 692.239 L1433.29 692.239 L1433.85 692.239 L1434.41 692.239 L1434.97 692.239 L1435.53 692.239 L1436.09 692.239 L1436.65 692.239 L1437.21 692.239 L1437.77 692.239 L1438.33 692.239 L1438.88 692.239 L1439.44 692.239 L1440 692.239 L1440.56 692.239 L1441.12 692.239 L1441.68 692.239 L1442.24 692.239 L1442.8 692.239 L1443.36 692.239 L1443.92 692.239 L1444.48 692.239 L1445.04 692.239 L1445.6 692.239 L1446.15 692.239 L1446.71 692.239 L1447.27 692.239 L1447.83 692.239 L1448.39 692.239 L1448.95 692.239 L1449.51 692.239 L1450.07 692.239 L1450.63 692.239 L1451.19 692.239 L1451.75 692.239 L1452.31 692.239 L1452.87 692.239 L1453.42 692.239 L1453.98 692.239 L1454.54 692.239 L1455.1 692.239 L1455.66 692.239 L1456.22 692.239 L1456.78 692.239 L1457.34 692.239 L1457.9 692.239 L1458.46 692.239 L1459.02 692.239 L1459.58 692.239 L1460.14 692.239 L1460.7 692.239 L1461.25 692.239 L1461.81 692.239 L1462.37 692.239 L1462.93 692.239 L1463.49 692.239 L1464.05 692.239 L1464.61 692.239 L1465.17 692.239 L1465.73 692.239 L1466.29 692.239 L1466.85 692.239 L1467.41 692.239 L1467.97 692.239 L1468.52 692.239 L1469.08 692.239 L1469.64 692.239 L1470.2 692.239 L1470.76 692.239 L1471.32 692.239 L1471.88 692.239 L1472.44 692.239 L1473 692.239 L1473.56 692.239 L1474.12 692.239 L1474.68 692.239 L1475.24 692.239 L1475.79 692.239 L1476.35 692.239 L1476.91 692.239 L1477.47 692.239 L1478.03 692.239 L1478.59 692.239 L1479.15 692.239 L1479.71 692.239 L1480.27 692.239 L1480.83 692.239 L1481.39 692.239 L1481.95 692.239 L1482.51 692.239 L1483.07 692.239 L1483.62 692.239 L1484.18 692.239 L1484.74 692.239 L1485.3 692.239 L1485.86 692.239 L1486.42 692.239 L1486.98 692.239 L1487.54 692.239 L1488.1 692.239 L1488.66 692.239 L1489.22 692.239 L1489.78 692.239 L1490.34 692.239 L1490.89 692.239 L1491.45 692.239 L1492.01 692.239 L1492.57 692.239 L1493.13 692.239 L1493.69 692.239 L1494.25 692.239 L1494.81 692.239 L1495.37 692.239 L1495.93 692.239 L1496.49 692.239 L1497.05 692.239 L1497.61 692.239 L1498.16 692.239 L1498.72 692.239 L1499.28 692.239 L1499.84 692.239 L1500.4 692.239 L1500.96 692.239 L1501.52 692.239 L1502.08 692.239 L1502.64 692.239 L1503.2 692.239 L1503.76 692.239 L1504.32 692.239 L1504.88 692.239 L1505.44 692.239 L1505.99 692.239 L1506.55 692.239 L1507.11 692.239 L1507.67 692.239 L1508.23 692.239 L1508.79 692.239 L1509.35 692.239 L1509.91 692.239 L1510.47 692.239 L1511.03 692.239 L1511.59 692.239 L1512.15 692.239 L1512.71 692.239 L1513.26 692.239 L1513.82 692.239 L1514.38 692.239 L1514.94 692.239 L1515.5 692.239 L1516.06 692.239 L1516.62 692.239 L1517.18 692.239 L1517.74 692.239 L1518.3 692.239 L1518.86 692.239 L1519.42 692.239 L1519.98 692.239 L1520.53 692.239 L1521.09 692.239 L1521.65 692.239 L1522.21 692.239 L1522.77 692.239 L1523.33 692.239 L1523.89 692.239 L1524.45 692.239 L1525.01 692.239 L1525.57 692.239 L1526.13 692.239 L1526.69 692.239 L1527.25 692.239 L1527.81 692.239 L1528.36 692.239 L1528.92 692.239 L1529.48 692.239 L1530.04 692.239 L1530.6 692.239 L1531.16 692.239 L1531.72 692.239 L1532.28 692.239 L1532.84 692.239 L1533.4 692.239 L1533.96 692.239 L1534.52 692.239 L1535.08 692.239 L1535.63 692.239 L1536.19 692.239 L1536.75 692.239 L1537.31 692.239 L1537.87 692.239 L1538.43 692.239 L1538.99 692.239 L1539.55 692.239 L1540.11 692.239 L1540.67 692.239 L1541.23 692.239 L1541.79 692.239 L1542.35 692.239 L1542.9 692.239 L1543.46 692.239 L1544.02 692.239 L1544.58 692.239 L1545.14 692.239 L1545.7 692.239 L1546.26 692.239 L1546.82 692.239 L1547.38 692.239 L1547.94 692.239 L1548.5 692.239 L1549.06 692.239 L1549.62 692.239 L1550.18 692.239 L1550.73 692.239 L1551.29 692.239 L1551.85 692.239 L1552.41 692.239 L1552.97 692.239 L1553.53 692.239 L1554.09 692.239 L1554.65 692.239 L1555.21 692.239 L1555.77 692.239 L1556.33 692.239 L1556.89 692.239 L1557.45 692.239 L1558 692.239 L1558.56 692.239 L1559.12 692.239 L1559.68 692.239 L1560.24 692.239 L1560.8 692.239 L1561.36 692.239 L1561.92 692.239 L1562.48 692.239 L1563.04 692.239 L1563.6 692.239 L1564.16 692.239 L1564.72 692.239 L1565.28 692.239 L1565.83 692.239 L1566.39 692.239 L1566.95 692.239 L1567.51 692.239 L1568.07 692.239 L1568.63 692.239 L1569.19 692.239 L1569.75 692.239 L1570.31 692.239 L1570.87 692.239 L1571.43 692.239 L1571.99 692.239 L1572.55 692.239 L1573.1 692.239 L1573.66 692.239 L1574.22 692.239 L1574.78 692.239 L1575.34 692.239 L1575.9 692.239 L1576.46 692.239 L1577.02 692.239 L1577.58 692.239 L1578.14 692.239 L1578.7 692.239 L1579.26 692.239 L1579.82 692.239 L1580.37 692.239 L1580.93 692.239 L1581.49 692.239 L1582.05 692.239 L1582.61 692.239 L1583.17 692.239 L1583.73 692.239 L1584.29 692.239 L1584.85 692.239 L1585.41 692.239 L1585.97 692.239 L1586.53 692.239 L1587.09 692.239 L1587.65 692.239 L1588.2 692.239 L1588.76 692.239 L1589.32 692.239 L1589.88 692.239 L1590.44 692.239 L1591 692.239 L1591.56 692.239 L1592.12 692.239 L1592.68 692.239 L1593.24 692.239 L1593.8 692.239 L1594.36 692.239 L1594.92 692.239 L1595.47 692.239 L1596.03 692.239 L1596.59 692.239 L1597.15 692.239 L1597.71 692.239 L1598.27 692.239 L1598.83 692.239 L1599.39 692.239 L1599.95 692.239 L1600.51 692.239 L1601.07 692.239 L1601.63 692.239 L1602.19 692.239 L1602.74 692.239 L1603.3 692.239 L1603.86 692.239 L1604.42 692.239 L1604.98 692.239 L1605.54 692.239 L1606.1 692.239 L1606.66 692.239 L1607.22 692.239 L1607.78 692.239 L1608.34 692.239 L1608.9 692.239 L1609.46 692.239 L1610.02 692.239 L1610.57 692.239 L1611.13 692.239 L1611.69 692.239 L1612.25 692.239 L1612.81 692.239 L1613.37 692.239 L1613.93 692.239 L1614.49 692.239 L1615.05 692.239 L1615.61 692.239 L1616.17 692.239 L1616.73 692.239 L1617.29 692.239 L1617.84 692.239 L1618.4 692.239 L1618.96 692.239 L1619.52 692.239 L1620.08 692.239 L1620.64 692.239 L1621.2 692.239 L1621.76 692.239 L1622.32 692.239 L1622.88 692.239 L1623.44 692.239 L1624 692.239 L1624.56 692.239 L1625.11 692.239 L1625.67 692.239 L1626.23 692.239 L1626.79 692.239 L1627.35 692.239 L1627.91 692.239 L1628.47 692.239 L1629.03 692.239 L1629.59 692.239 L1630.15 692.239 L1630.71 692.239 L1631.27 692.239 L1631.83 692.239 L1632.39 692.239 L1632.94 692.239 L1633.5 692.239 L1634.06 692.239 L1634.62 692.239 L1635.18 692.239 L1635.74 692.239 L1636.3 692.239 L1636.86 692.239 L1637.42 692.239 L1637.98 692.239 L1638.54 692.239 L1639.1 692.239 L1639.66 692.239 L1640.21 692.239 L1640.77 692.239 L1641.33 692.239 L1641.89 692.239 L1642.45 692.239 L1643.01 692.239 L1643.57 692.239 L1644.13 692.239 L1644.69 692.239 L1645.25 692.239 L1645.81 692.239 L1646.37 692.239 L1646.93 692.239 L1647.48 692.239 L1648.04 692.239 L1648.6 692.239 L1649.16 692.239 L1649.72 692.239 L1650.28 692.239 L1650.84 692.239 L1651.4 692.239 L1651.96 692.239 L1652.52 692.239 L1653.08 692.239 L1653.64 692.239 L1654.2 692.239 L1654.76 692.239 L1655.31 692.239 L1655.87 692.239 L1656.43 692.239 L1656.99 692.239 L1657.55 692.239 L1658.11 692.239 L1658.67 692.239 L1659.23 692.239 L1659.79 692.239 L1660.35 692.239 L1660.91 692.239 L1661.47 692.239 L1662.03 692.239 L1662.58 692.239 L1663.14 692.239 L1663.7 692.239 L1664.26 692.239 L1664.82 692.239 L1665.38 692.239 L1665.94 692.239 L1666.5 692.239 L1667.06 692.239 L1667.62 692.239 L1668.18 692.239 L1668.74 692.239 L1669.3 692.239 L1669.85 692.239 L1670.41 692.239 L1670.97 692.239 L1671.53 692.239 L1672.09 692.239 L1672.65 692.239 L1673.21 692.239 L1673.77 692.239 L1674.33 692.239 L1674.89 692.239 L1675.45 692.239 L1676.01 692.239 L1676.57 692.239 L1677.13 692.239 L1677.68 692.239 L1678.24 692.239 L1678.8 692.239 L1679.36 692.239 L1679.92 692.239 L1680.48 692.239 L1681.04 692.239 L1681.6 692.239 L1682.16 692.239 L1682.72 692.239 L1683.28 692.239 L1683.84 692.239 L1684.4 692.239 L1684.95 692.239 L1685.51 692.239 L1686.07 692.239 L1686.63 692.239 L1687.19 692.239 L1687.75 692.239 L1688.31 692.239 L1688.87 692.239 L1689.43 692.239 L1689.99 692.239 L1690.55 692.239 L1691.11 692.239 L1691.67 692.239 L1692.23 692.239 L1692.78 692.239 L1693.34 692.239 L1693.9 692.239 L1694.46 692.239 L1695.02 692.239 L1695.58 692.239 L1696.14 692.239 L1696.7 692.239 L1697.26 692.239 L1697.82 692.239 L1698.38 692.239 L1698.94 692.239 L1699.5 692.239 L1700.05 692.239 L1700.61 692.239 L1701.17 692.239 L1701.73 692.239 L1702.29 692.239 L1702.85 692.239 L1703.41 692.239 L1703.97 692.239 L1704.53 692.239 L1705.09 692.239 L1705.65 692.239 L1706.21 692.239 L1706.77 692.239 L1707.32 692.239 L1707.88 692.239 L1708.44 692.239 L1709 692.239 L1709.56 692.239 L1710.12 692.239 L1710.68 692.239 L1711.24 692.239 L1711.8 692.239 L1712.36 692.239 L1712.92 692.239 L1713.48 692.239 L1714.04 692.239 L1714.6 692.239 L1715.15 692.239 L1715.71 692.239 L1716.27 692.239 L1716.83 692.239 L1717.39 692.239 L1717.95 692.239 L1718.51 692.239 L1719.07 692.239 L1719.63 692.239 L1720.19 692.239 L1720.75 692.239 L1721.31 692.239 L1721.87 692.239 L1722.42 692.239 L1722.98 692.239 L1723.54 692.239 L1724.1 692.239 L1724.66 692.239 L1725.22 692.239 L1725.78 692.239 L1726.34 692.239 L1726.9 692.239 L1727.46 692.239 L1728.02 692.239 L1728.58 692.239 L1729.14 692.239 L1729.69 692.239 L1730.25 692.239 L1730.81 692.239 L1731.37 692.239 L1731.93 692.239 L1732.49 692.239 L1733.05 692.239 L1733.61 692.239 L1734.17 692.239 L1734.73 692.239 L1735.29 692.239 L1735.85 692.239 L1736.41 692.239 L1736.97 692.239 L1737.52 692.239 L1738.08 692.239 L1738.64 692.239 L1739.2 692.239 L1739.76 692.239 L1740.32 692.239 L1740.88 692.239 L1741.44 692.239 L1742 692.239 L1742.56 692.239 L1743.12 692.239 L1743.68 692.239 L1744.24 692.239 L1744.79 692.239 L1745.35 692.239 L1745.91 692.239 L1746.47 692.239 L1747.03 692.239 L1747.59 692.239 L1748.15 692.239 L1748.71 692.239 L1749.27 692.239 L1749.83 692.239 L1750.39 692.239 L1750.95 692.239 L1751.51 692.239 L1752.06 692.239 L1752.62 692.239 L1753.18 692.239 L1753.74 692.239 L1754.3 692.239 L1754.86 692.239 L1755.42 692.239 L1755.98 692.239 L1756.54 692.239 L1757.1 692.239 L1757.66 692.239 L1758.22 692.239 L1758.78 692.239 L1759.34 692.239 L1759.89 692.239 L1760.45 692.239 L1761.01 692.239 L1761.57 692.239 L1762.13 692.239 L1762.69 692.239 L1763.25 692.239 L1763.81 692.239 L1764.37 692.239 L1764.93 692.239 L1765.49 692.239 L1766.05 692.239 L1766.61 692.239 L1767.16 692.239 L1767.72 692.239 L1768.28 692.239 L1768.84 692.239 L1769.4 692.239 L1769.96 692.239 L1770.52 692.239 L1771.08 692.239 L1771.64 692.239 L1772.2 692.239 L1772.76 692.239 L1773.32 692.239 L1773.88 692.239 L1774.43 692.239 L1774.99 692.239 L1775.55 692.239 L1776.11 692.239 L1776.67 692.239 L1777.23 692.239 L1777.79 692.239 L1778.35 692.239 L1778.91 692.239 L1779.47 692.239 L1780.03 692.239 L1780.59 692.239 L1781.15 692.239 L1781.71 692.239 L1782.26 692.239 L1782.82 692.239 L1783.38 692.239 L1783.94 692.239 L1784.5 692.239 L1785.06 692.239 L1785.62 692.239 L1786.18 692.239 L1786.74 692.239 L1787.3 692.239 L1787.86 692.239 L1788.42 692.239 L1788.98 692.239 L1789.53 692.239 L1790.09 692.239 L1790.65 692.239 L1791.21 692.239 L1791.77 692.239 L1792.33 692.239 L1792.89 692.239 L1793.45 692.239 L1794.01 692.239 L1794.57 692.239 L1795.13 692.239 L1795.69 692.239 L1796.25 692.239 L1796.8 692.239 L1797.36 692.239 L1797.92 692.239 L1798.48 692.239 L1799.04 692.239 L1799.6 692.239 L1800.16 692.239 L1800.72 692.239 L1801.28 692.239 L1801.84 692.239 L1802.4 692.239 L1802.96 692.239 L1803.52 692.239 L1804.08 692.239 L1804.63 692.239 L1805.19 692.239 L1805.75 692.239 L1806.31 692.239 L1806.87 692.239 L1807.43 692.239 L1807.99 692.239 L1808.55 692.239 L1809.11 692.239 L1809.67 692.239 L1810.23 692.239 L1810.79 692.239 L1811.35 692.239 L1811.9 692.239 L1812.46 692.239 L1813.02 692.239 L1813.58 692.239 L1814.14 692.239 L1814.7 692.239 L1815.26 692.239 L1815.82 692.239 L1816.38 692.239 L1816.94 692.239 L1817.5 692.239 L1818.06 692.239 L1818.62 692.239 L1819.18 692.239 L1819.73 692.239 L1820.29 692.239 L1820.85 692.239 L1821.41 692.239 L1821.97 692.239 L1822.53 692.239 L1823.09 692.239 L1823.65 692.239 L1824.21 692.239 L1824.77 692.239 L1825.33 692.239 L1825.89 692.239 L1826.45 692.239 L1827 692.239 L1827.56 692.239 L1828.12 692.239 L1828.68 692.239 L1829.24 692.239 L1829.8 692.239 L1830.36 692.239 L1830.92 692.239 L1831.48 692.239 L1832.04 692.239 L1832.6 692.239 L1833.16 692.239 L1833.72 692.239 L1834.27 692.239 L1834.83 692.239 L1835.39 692.239 L1835.95 692.239 L1836.51 692.239 L1837.07 692.239 L1837.63 692.239 L1838.19 692.239 L1838.19 683.355 L1837.63 683.355 L1837.07 683.355 L1836.51 683.355 L1835.95 683.355 L1835.39 683.355 L1834.83 683.355 L1834.27 683.355 L1833.72 683.355 L1833.16 683.355 L1832.6 683.355 L1832.04 683.355 L1831.48 683.355 L1830.92 683.355 L1830.36 683.355 L1829.8 683.355 L1829.24 683.355 L1828.68 683.355 L1828.12 683.355 L1827.56 683.355 L1827 683.355 L1826.45 683.355 L1825.89 683.355 L1825.33 683.355 L1824.77 683.355 L1824.21 683.355 L1823.65 683.355 L1823.09 683.355 L1822.53 683.355 L1821.97 683.355 L1821.41 683.355 L1820.85 683.355 L1820.29 683.355 L1819.73 683.355 L1819.18 683.355 L1818.62 683.355 L1818.06 683.355 L1817.5 683.355 L1816.94 683.355 L1816.38 683.355 L1815.82 683.355 L1815.26 683.355 L1814.7 683.355 L1814.14 683.355 L1813.58 683.355 L1813.02 683.355 L1812.46 683.355 L1811.9 683.355 L1811.35 683.355 L1810.79 683.355 L1810.23 683.355 L1809.67 683.355 L1809.11 683.355 L1808.55 683.355 L1807.99 683.355 L1807.43 683.355 L1806.87 683.355 L1806.31 683.355 L1805.75 683.355 L1805.19 683.355 L1804.63 683.355 L1804.08 683.355 L1803.52 683.355 L1802.96 683.355 L1802.4 683.355 L1801.84 683.355 L1801.28 683.355 L1800.72 683.355 L1800.16 683.355 L1799.6 683.355 L1799.04 683.355 L1798.48 683.355 L1797.92 683.355 L1797.36 683.355 L1796.8 683.355 L1796.25 683.355 L1795.69 683.355 L1795.13 683.355 L1794.57 683.355 L1794.01 683.355 L1793.45 683.355 L1792.89 683.355 L1792.33 683.355 L1791.77 683.355 L1791.21 683.355 L1790.65 683.355 L1790.09 683.355 L1789.53 683.355 L1788.98 683.355 L1788.42 683.355 L1787.86 683.355 L1787.3 683.355 L1786.74 683.355 L1786.18 683.355 L1785.62 683.355 L1785.06 683.355 L1784.5 683.355 L1783.94 683.355 L1783.38 683.355 L1782.82 683.355 L1782.26 683.355 L1781.71 683.355 L1781.15 683.355 L1780.59 683.355 L1780.03 683.355 L1779.47 683.355 L1778.91 683.355 L1778.35 683.355 L1777.79 683.355 L1777.23 683.355 L1776.67 683.355 L1776.11 683.355 L1775.55 683.355 L1774.99 683.355 L1774.43 683.355 L1773.88 683.355 L1773.32 683.355 L1772.76 683.355 L1772.2 683.355 L1771.64 683.355 L1771.08 683.355 L1770.52 683.355 L1769.96 683.355 L1769.4 683.355 L1768.84 683.355 L1768.28 683.355 L1767.72 683.355 L1767.16 683.355 L1766.61 683.355 L1766.05 683.355 L1765.49 683.355 L1764.93 683.355 L1764.37 683.355 L1763.81 683.355 L1763.25 683.355 L1762.69 683.355 L1762.13 683.355 L1761.57 683.355 L1761.01 683.355 L1760.45 683.355 L1759.89 683.355 L1759.34 683.355 L1758.78 683.355 L1758.22 683.355 L1757.66 683.355 L1757.1 683.355 L1756.54 683.355 L1755.98 683.355 L1755.42 683.355 L1754.86 683.355 L1754.3 683.355 L1753.74 683.355 L1753.18 683.355 L1752.62 683.355 L1752.06 683.355 L1751.51 683.355 L1750.95 683.355 L1750.39 683.355 L1749.83 683.355 L1749.27 683.355 L1748.71 683.355 L1748.15 683.355 L1747.59 683.355 L1747.03 683.355 L1746.47 683.355 L1745.91 683.355 L1745.35 683.355 L1744.79 683.355 L1744.24 683.355 L1743.68 683.355 L1743.12 683.355 L1742.56 683.355 L1742 683.355 L1741.44 683.355 L1740.88 683.355 L1740.32 683.355 L1739.76 683.355 L1739.2 683.355 L1738.64 683.355 L1738.08 683.355 L1737.52 683.355 L1736.97 683.355 L1736.41 683.355 L1735.85 683.355 L1735.29 683.355 L1734.73 683.355 L1734.17 683.355 L1733.61 683.355 L1733.05 683.355 L1732.49 683.355 L1731.93 683.355 L1731.37 683.355 L1730.81 683.355 L1730.25 683.355 L1729.69 683.355 L1729.14 683.355 L1728.58 683.355 L1728.02 683.355 L1727.46 683.355 L1726.9 683.355 L1726.34 683.355 L1725.78 683.355 L1725.22 683.355 L1724.66 683.355 L1724.1 683.355 L1723.54 683.355 L1722.98 683.355 L1722.42 683.355 L1721.87 683.355 L1721.31 683.355 L1720.75 683.355 L1720.19 683.355 L1719.63 683.355 L1719.07 683.355 L1718.51 683.355 L1717.95 683.355 L1717.39 683.355 L1716.83 683.355 L1716.27 683.355 L1715.71 683.355 L1715.15 683.355 L1714.6 683.355 L1714.04 683.355 L1713.48 683.355 L1712.92 683.355 L1712.36 683.355 L1711.8 683.355 L1711.24 683.355 L1710.68 683.355 L1710.12 683.355 L1709.56 683.355 L1709 683.355 L1708.44 683.355 L1707.88 683.355 L1707.32 683.355 L1706.77 683.355 L1706.21 683.355 L1705.65 683.355 L1705.09 683.355 L1704.53 683.355 L1703.97 683.355 L1703.41 683.355 L1702.85 683.355 L1702.29 683.355 L1701.73 683.355 L1701.17 683.355 L1700.61 683.355 L1700.05 683.355 L1699.5 683.355 L1698.94 683.355 L1698.38 683.355 L1697.82 683.355 L1697.26 683.355 L1696.7 683.355 L1696.14 683.355 L1695.58 683.355 L1695.02 683.355 L1694.46 683.355 L1693.9 683.355 L1693.34 683.355 L1692.78 683.355 L1692.23 683.355 L1691.67 683.355 L1691.11 683.355 L1690.55 683.355 L1689.99 683.355 L1689.43 683.355 L1688.87 683.355 L1688.31 683.355 L1687.75 683.355 L1687.19 683.355 L1686.63 683.355 L1686.07 683.355 L1685.51 683.355 L1684.95 683.355 L1684.4 683.355 L1683.84 683.355 L1683.28 683.355 L1682.72 683.355 L1682.16 683.355 L1681.6 683.355 L1681.04 683.355 L1680.48 683.355 L1679.92 683.355 L1679.36 683.355 L1678.8 683.355 L1678.24 683.355 L1677.68 683.355 L1677.13 683.355 L1676.57 683.355 L1676.01 683.355 L1675.45 683.355 L1674.89 683.355 L1674.33 683.355 L1673.77 683.355 L1673.21 683.355 L1672.65 683.355 L1672.09 683.355 L1671.53 683.355 L1670.97 683.355 L1670.41 683.355 L1669.85 683.355 L1669.3 683.355 L1668.74 683.355 L1668.18 683.355 L1667.62 683.355 L1667.06 683.355 L1666.5 683.355 L1665.94 683.355 L1665.38 683.355 L1664.82 683.355 L1664.26 683.355 L1663.7 683.355 L1663.14 683.355 L1662.58 683.355 L1662.03 683.355 L1661.47 683.355 L1660.91 683.355 L1660.35 683.355 L1659.79 683.355 L1659.23 683.355 L1658.67 683.355 L1658.11 683.355 L1657.55 683.355 L1656.99 683.355 L1656.43 683.355 L1655.87 683.355 L1655.31 683.355 L1654.76 683.355 L1654.2 683.355 L1653.64 683.355 L1653.08 683.355 L1652.52 683.355 L1651.96 683.355 L1651.4 683.355 L1650.84 683.355 L1650.28 683.355 L1649.72 683.355 L1649.16 683.355 L1648.6 683.355 L1648.04 683.355 L1647.48 683.355 L1646.93 683.355 L1646.37 683.355 L1645.81 683.355 L1645.25 683.355 L1644.69 683.355 L1644.13 683.355 L1643.57 683.355 L1643.01 683.355 L1642.45 683.355 L1641.89 683.355 L1641.33 683.355 L1640.77 683.355 L1640.21 683.355 L1639.66 683.355 L1639.1 683.355 L1638.54 683.355 L1637.98 683.355 L1637.42 683.355 L1636.86 683.355 L1636.3 683.355 L1635.74 683.355 L1635.18 683.355 L1634.62 683.355 L1634.06 683.355 L1633.5 683.355 L1632.94 683.355 L1632.39 683.355 L1631.83 683.355 L1631.27 683.355 L1630.71 683.355 L1630.15 683.355 L1629.59 683.355 L1629.03 683.355 L1628.47 683.355 L1627.91 683.355 L1627.35 683.355 L1626.79 683.355 L1626.23 683.355 L1625.67 683.355 L1625.11 683.355 L1624.56 683.355 L1624 683.355 L1623.44 683.355 L1622.88 683.355 L1622.32 683.355 L1621.76 683.355 L1621.2 683.355 L1620.64 683.355 L1620.08 683.355 L1619.52 683.355 L1618.96 683.355 L1618.4 683.355 L1617.84 683.355 L1617.29 683.355 L1616.73 683.355 L1616.17 683.355 L1615.61 683.355 L1615.05 683.355 L1614.49 683.355 L1613.93 683.355 L1613.37 683.355 L1612.81 683.355 L1612.25 683.355 L1611.69 683.355 L1611.13 683.355 L1610.57 683.355 L1610.02 683.355 L1609.46 683.355 L1608.9 683.355 L1608.34 683.355 L1607.78 683.355 L1607.22 683.355 L1606.66 683.355 L1606.1 683.355 L1605.54 683.355 L1604.98 683.355 L1604.42 683.355 L1603.86 683.355 L1603.3 683.355 L1602.74 683.355 L1602.19 683.355 L1601.63 683.355 L1601.07 683.355 L1600.51 683.355 L1599.95 683.355 L1599.39 683.355 L1598.83 683.355 L1598.27 683.355 L1597.71 683.355 L1597.15 683.355 L1596.59 683.355 L1596.03 683.355 L1595.47 683.355 L1594.92 683.355 L1594.36 683.355 L1593.8 683.355 L1593.24 683.355 L1592.68 683.355 L1592.12 683.355 L1591.56 683.355 L1591 683.355 L1590.44 683.355 L1589.88 683.355 L1589.32 683.355 L1588.76 683.355 L1588.2 683.355 L1587.65 683.355 L1587.09 683.355 L1586.53 683.355 L1585.97 683.355 L1585.41 683.355 L1584.85 683.355 L1584.29 683.355 L1583.73 683.355 L1583.17 683.355 L1582.61 683.355 L1582.05 683.355 L1581.49 683.355 L1580.93 683.355 L1580.37 683.355 L1579.82 683.355 L1579.26 683.355 L1578.7 683.355 L1578.14 683.355 L1577.58 683.355 L1577.02 683.355 L1576.46 683.355 L1575.9 683.355 L1575.34 683.355 L1574.78 683.355 L1574.22 683.355 L1573.66 683.355 L1573.1 683.355 L1572.55 683.355 L1571.99 683.355 L1571.43 683.355 L1570.87 683.355 L1570.31 683.355 L1569.75 683.355 L1569.19 683.355 L1568.63 683.355 L1568.07 683.355 L1567.51 683.355 L1566.95 683.355 L1566.39 683.355 L1565.83 683.355 L1565.28 683.355 L1564.72 683.355 L1564.16 683.355 L1563.6 683.355 L1563.04 683.355 L1562.48 683.355 L1561.92 683.355 L1561.36 683.355 L1560.8 683.355 L1560.24 683.355 L1559.68 683.355 L1559.12 683.355 L1558.56 683.355 L1558 683.355 L1557.45 683.355 L1556.89 683.355 L1556.33 683.355 L1555.77 683.355 L1555.21 683.355 L1554.65 683.355 L1554.09 683.355 L1553.53 683.355 L1552.97 683.355 L1552.41 683.355 L1551.85 683.355 L1551.29 683.355 L1550.73 683.355 L1550.18 683.355 L1549.62 683.355 L1549.06 683.355 L1548.5 683.355 L1547.94 683.355 L1547.38 683.355 L1546.82 683.355 L1546.26 683.355 L1545.7 683.355 L1545.14 683.355 L1544.58 683.355 L1544.02 683.355 L1543.46 683.355 L1542.9 683.355 L1542.35 683.355 L1541.79 683.355 L1541.23 683.355 L1540.67 683.355 L1540.11 683.355 L1539.55 683.355 L1538.99 683.355 L1538.43 683.355 L1537.87 683.355 L1537.31 683.355 L1536.75 683.355 L1536.19 683.355 L1535.63 683.355 L1535.08 683.355 L1534.52 683.355 L1533.96 683.355 L1533.4 683.355 L1532.84 683.355 L1532.28 683.355 L1531.72 683.355 L1531.16 683.355 L1530.6 683.355 L1530.04 683.355 L1529.48 683.355 L1528.92 683.355 L1528.36 683.355 L1527.81 683.355 L1527.25 683.355 L1526.69 683.355 L1526.13 683.355 L1525.57 683.355 L1525.01 683.355 L1524.45 683.355 L1523.89 683.355 L1523.33 683.355 L1522.77 683.355 L1522.21 683.355 L1521.65 683.355 L1521.09 683.355 L1520.53 683.355 L1519.98 683.355 L1519.42 683.355 L1518.86 683.355 L1518.3 683.355 L1517.74 683.355 L1517.18 683.355 L1516.62 683.355 L1516.06 683.355 L1515.5 683.355 L1514.94 683.355 L1514.38 683.355 L1513.82 683.355 L1513.26 683.355 L1512.71 683.355 L1512.15 683.355 L1511.59 683.355 L1511.03 683.355 L1510.47 683.355 L1509.91 683.355 L1509.35 683.355 L1508.79 683.355 L1508.23 683.355 L1507.67 683.355 L1507.11 683.355 L1506.55 683.355 L1505.99 683.355 L1505.44 683.355 L1504.88 683.355 L1504.32 683.355 L1503.76 683.355 L1503.2 683.355 L1502.64 683.355 L1502.08 683.355 L1501.52 683.355 L1500.96 683.355 L1500.4 683.355 L1499.84 683.355 L1499.28 683.355 L1498.72 683.355 L1498.16 683.355 L1497.61 683.355 L1497.05 683.355 L1496.49 683.355 L1495.93 683.355 L1495.37 683.355 L1494.81 683.355 L1494.25 683.355 L1493.69 683.355 L1493.13 683.355 L1492.57 683.355 L1492.01 683.355 L1491.45 683.355 L1490.89 683.355 L1490.34 683.355 L1489.78 683.355 L1489.22 683.355 L1488.66 683.355 L1488.1 683.355 L1487.54 683.355 L1486.98 683.355 L1486.42 683.355 L1485.86 683.355 L1485.3 683.355 L1484.74 683.355 L1484.18 683.355 L1483.62 683.355 L1483.07 683.355 L1482.51 683.355 L1481.95 683.355 L1481.39 683.355 L1480.83 683.355 L1480.27 683.355 L1479.71 683.355 L1479.15 683.355 L1478.59 683.355 L1478.03 683.355 L1477.47 683.355 L1476.91 683.355 L1476.35 683.355 L1475.79 683.355 L1475.24 683.355 L1474.68 683.355 L1474.12 683.355 L1473.56 683.355 L1473 683.355 L1472.44 683.355 L1471.88 683.355 L1471.32 683.355 L1470.76 683.355 L1470.2 683.355 L1469.64 683.355 L1469.08 683.355 L1468.52 683.355 L1467.97 683.355 L1467.41 683.355 L1466.85 683.355 L1466.29 683.355 L1465.73 683.355 L1465.17 683.355 L1464.61 683.355 L1464.05 683.355 L1463.49 683.355 L1462.93 683.355 L1462.37 683.355 L1461.81 683.355 L1461.25 683.355 L1460.7 683.355 L1460.14 683.355 L1459.58 683.355 L1459.02 683.355 L1458.46 683.355 L1457.9 683.355 L1457.34 683.355 L1456.78 683.355 L1456.22 683.355 L1455.66 683.355 L1455.1 683.355 L1454.54 683.355 L1453.98 683.355 L1453.42 683.355 L1452.87 683.355 L1452.31 683.355 L1451.75 683.355 L1451.19 683.355 L1450.63 683.355 L1450.07 683.355 L1449.51 683.355 L1448.95 683.355 L1448.39 683.355 L1447.83 683.355 L1447.27 683.355 L1446.71 683.355 L1446.15 683.355 L1445.6 683.355 L1445.04 683.355 L1444.48 683.355 L1443.92 683.355 L1443.36 683.355 L1442.8 683.355 L1442.24 683.355 L1441.68 683.355 L1441.12 683.355 L1440.56 683.355 L1440 683.355 L1439.44 683.355 L1438.88 683.355 L1438.33 683.355 L1437.77 683.355 L1437.21 683.355 L1436.65 683.355 L1436.09 683.355 L1435.53 683.355 L1434.97 683.355 L1434.41 683.355 L1433.85 683.355 L1433.29 683.355 L1432.73 683.355 L1432.17 683.355 L1431.61 683.355 L1431.05 683.355 L1430.5 683.355 L1429.94 683.355 L1429.38 683.355 L1428.82 683.355 L1428.26 683.355 L1427.7 683.355 L1427.14 683.355 L1426.58 683.355 L1426.02 683.355 L1425.46 683.355 L1424.9 683.355 L1424.34 683.355 L1423.78 683.355 L1423.23 683.355 L1422.67 683.355 L1422.11 683.355 L1421.55 683.355 L1420.99 683.355 L1420.43 683.355 L1419.87 683.355 L1419.31 683.355 L1418.75 683.355 L1418.19 683.355 L1417.63 683.355 L1417.07 683.355 L1416.51 683.355 L1415.95 683.355 L1415.4 683.355 L1414.84 683.355 L1414.28 683.355 L1413.72 683.355 L1413.16 683.355 L1412.6 683.355 L1412.04 683.355 L1411.48 683.355 L1410.92 683.355 L1410.36 683.355 L1409.8 683.355 L1409.24 683.355 L1408.68 683.355 L1408.13 683.355 L1407.57 683.355 L1407.01 683.355 L1406.45 683.355 L1405.89 683.355 L1405.33 683.355 L1404.77 683.355 L1404.21 683.355 L1403.65 683.355 L1403.09 683.355 L1402.53 683.355 L1401.97 683.355 L1401.41 683.355 L1400.86 683.355 L1400.3 683.355 L1399.74 683.355 L1399.18 683.355 L1398.62 683.355 L1398.06 683.355 L1397.5 683.355 L1396.94 683.355 L1396.38 683.355 L1395.82 683.355 L1395.26 683.355 L1394.7 683.355 L1394.14 683.355 L1393.58 683.355 L1393.03 683.355 L1392.47 683.355 L1391.91 683.355 L1391.35 683.355 L1390.79 683.355 L1390.23 683.355 L1389.67 683.355 L1389.11 683.355 L1388.55 683.355 L1387.99 683.355 L1387.43 683.355 L1386.87 683.355 L1386.31 683.355 L1385.76 683.355 L1385.2 683.355 L1384.64 683.355 L1384.08 683.355 L1383.52 683.355 L1382.96 683.355 L1382.4 683.355 L1381.84 683.355 L1381.28 683.355 L1380.72 683.355 L1380.16 683.355 L1379.6 683.355 L1379.04 683.355 L1378.49 683.355 L1377.93 683.355 L1377.37 683.355 L1376.81 683.355 L1376.25 683.355 L1375.69 683.355 L1375.13 683.355 L1374.57 683.355 L1374.01 683.355 L1373.45 683.355 L1372.89 683.355 L1372.33 683.355 L1371.77 683.355 L1371.21 683.355 L1370.66 683.355 L1370.1 683.355 L1369.54 683.355 L1368.98 683.355 L1368.42 683.355 L1367.86 683.355 L1367.3 683.355 L1366.74 683.355 L1366.18 683.355 L1365.62 683.355 L1365.06 683.355 L1364.5 683.355 L1363.94 683.355 L1363.39 683.355 L1362.83 683.355 L1362.27 683.355 L1361.71 683.355 L1361.15 683.355 L1360.59 683.355 L1360.03 683.355 L1359.47 683.355 L1358.91 683.355 L1358.35 683.355 L1357.79 683.355 L1357.23 683.355 L1356.67 683.355 L1356.12 683.355 L1355.56 683.355 L1355 683.355 L1354.44 683.355 L1353.88 683.355 L1353.32 683.355 L1352.76 683.355 L1352.2 683.355 L1351.64 683.355 L1351.08 683.355 L1350.52 683.355 L1349.96 683.355 L1349.4 683.355 L1348.84 683.355 L1348.29 683.355 L1347.73 683.355 L1347.17 683.355 L1346.61 683.355 L1346.05 683.355 L1345.49 683.355 L1344.93 683.355 L1344.37 683.355 L1343.81 683.355 L1343.25 683.355 L1342.69 683.355 L1342.13 683.355 L1341.57 683.355 L1341.02 683.355 L1340.46 683.355 L1339.9 683.355 L1339.34 683.355 L1338.78 683.355 L1338.22 683.355 L1337.66 683.355 L1337.1 683.355 L1336.54 683.355 L1335.98 683.355 L1335.42 683.355 L1334.86 683.355 L1334.3 683.355 L1333.75 683.355 L1333.19 683.355 L1332.63 683.355 L1332.07 683.355 L1331.51 683.355 L1330.95 683.355 L1330.39 683.355 L1329.83 683.355 L1329.27 683.355 L1328.71 683.355 L1328.15 683.355 L1327.59 683.355 L1327.03 683.355 L1326.47 683.355 L1325.92 683.355 L1325.36 683.355 L1324.8 683.355 L1324.24 683.355 L1323.68 683.355 L1323.12 683.355 L1322.56 683.355 L1322 683.355 L1321.44 683.355 L1320.88 683.355 L1320.32 683.355 L1319.76 683.355 L1319.2 683.355 L1318.65 683.355 L1318.09 683.355 L1317.53 683.355 L1316.97 683.355 L1316.41 683.355 L1315.85 683.355 L1315.29 683.355 L1314.73 683.355 L1314.17 683.355 L1313.61 683.355 L1313.05 683.355 L1312.49 683.355 L1311.93 683.355 L1311.38 683.355 L1310.82 683.355 L1310.26 683.355 L1309.7 683.355 L1309.14 683.355 L1308.58 683.355 L1308.02 683.355 L1307.46 683.355 L1306.9 683.355 L1306.34 683.355 L1305.78 683.355 L1305.22 683.355 L1304.66 683.355 L1304.1 683.355 L1303.55 683.355 L1302.99 683.355 L1302.43 683.355 L1301.87 683.355 L1301.31 683.355 L1300.75 683.355 L1300.19 683.355 L1299.63 683.355 L1299.07 683.355 L1298.51 683.355 L1297.95 683.355 L1297.39 683.355 L1296.83 683.355 L1296.28 683.355 L1295.72 683.355 L1295.16 683.355 L1294.6 683.355 L1294.04 683.355 L1293.48 683.355 L1292.92 683.355 L1292.36 683.355 L1291.8 683.355 L1291.24 683.355 L1290.68 683.355 L1290.12 683.355 L1289.56 683.355 L1289 683.355 L1288.45 683.355 L1287.89 683.355 L1287.33 683.355 L1286.77 683.355 L1286.21 683.355 L1285.65 683.355 L1285.09 683.355 L1284.53 683.355 L1283.97 683.355 L1283.41 683.355 L1282.85 683.355 L1282.29 683.355 L1281.73 683.355 L1281.18 683.355 L1280.62 683.355 L1280.06 683.355 L1279.5 683.355 L1278.94 683.355 L1278.38 683.355 L1277.82 683.355 L1277.26 683.355 L1276.7 683.355 L1276.14 683.355 L1275.58 683.355 L1275.02 683.355 L1274.46 683.355 L1273.91 683.355 L1273.35 683.355 L1272.79 683.355 L1272.23 683.355 L1271.67 683.355 L1271.11 683.355 L1270.55 683.355 L1269.99 683.355 L1269.43 683.355 L1268.87 683.355 L1268.31 683.355 L1267.75 683.355 L1267.19 683.355 L1266.63 683.355 L1266.08 683.355 L1265.52 683.355 L1264.96 683.355 L1264.4 683.355 L1263.84 683.355 L1263.28 683.355 L1262.72 683.355 L1262.16 683.355 L1261.6 683.355 L1261.04 683.355 L1260.48 683.355 L1259.92 683.355 L1259.36 683.355 L1258.81 683.355 L1258.25 683.355 L1257.69 683.355 L1257.13 683.355 L1256.57 683.355 L1256.01 683.355 L1255.45 683.355 L1254.89 683.355 L1254.33 683.355 L1253.77 683.355 L1253.21 683.355 L1252.65 683.355 L1252.09 683.355 L1251.54 683.355 L1250.98 683.355 L1250.42 683.355 L1249.86 683.355 L1249.3 683.355 L1248.74 683.355 L1248.18 683.355 L1247.62 683.355 L1247.06 683.355 L1246.5 683.355 L1245.94 683.355 L1245.38 683.355 L1244.82 683.355 L1244.26 683.355 L1243.71 683.355 L1243.15 683.355 L1242.59 683.355 L1242.03 683.355 L1241.47 683.355 L1240.91 683.355 L1240.35 683.355 L1239.79 683.355 L1239.23 683.355 L1238.67 683.355 L1238.11 683.355 L1237.55 683.355 L1236.99 683.355 L1236.44 683.355 L1235.88 683.355 L1235.32 683.355 L1234.76 683.355 L1234.2 683.355 L1233.64 683.355 L1233.08 683.355 L1232.52 683.355 L1231.96 683.355 L1231.4 683.355 L1230.84 683.355 L1230.28 683.355 L1229.72 683.355 L1229.17 683.355 L1228.61 683.355 L1228.05 683.355 L1227.49 683.355 L1226.93 683.355 L1226.37 683.355 L1225.81 683.355 L1225.25 683.355 L1224.69 683.355 L1224.13 683.355 L1223.57 683.355 L1223.01 683.355 L1222.45 683.355 L1221.89 683.355 L1221.34 683.355 L1220.78 683.355 L1220.22 683.355 L1219.66 683.355 L1219.1 683.355 L1218.54 683.355 L1217.98 683.355 L1217.42 683.355 L1216.86 683.355 L1216.3 683.355 L1215.74 683.355 L1215.18 683.355 L1214.62 683.355 L1214.07 683.355 L1213.51 683.355 L1212.95 683.355 L1212.39 683.355 L1211.83 683.355 L1211.27 683.355 L1210.71 683.355 L1210.15 683.355 L1209.59 683.355 L1209.03 683.355 L1208.47 683.355 L1207.91 683.355 L1207.35 683.355 L1206.8 683.355 L1206.24 683.355 L1205.68 683.355 L1205.12 683.355 L1204.56 683.355 L1204 683.355 L1203.44 683.355 L1202.88 683.355 L1202.32 683.355 L1201.76 683.355 L1201.2 683.355 L1200.64 683.355 L1200.08 683.355 L1199.52 683.355 L1198.97 683.355 L1198.41 683.355 L1197.85 683.355 L1197.29 683.355 L1196.73 683.355 L1196.17 683.355 L1195.61 683.355 L1195.05 683.355 L1194.49 683.355 L1193.93 683.355 L1193.37 683.355 L1192.81 683.355 L1192.25 683.355 L1191.7 683.355 L1191.14 683.355 L1190.58 683.355 L1190.02 683.355 L1189.46 683.355 L1188.9 683.355 L1188.34 683.355 L1187.78 683.355 L1187.22 683.355 L1186.66 683.355 L1186.1 683.355 L1185.54 683.355 L1184.98 683.355 L1184.43 683.355 L1183.87 683.355 L1183.31 683.355 L1182.75 683.355 L1182.19 683.355 L1181.63 683.355 L1181.07 683.355 L1180.51 683.355 L1179.95 683.355 L1179.39 683.355 L1178.83 683.355 L1178.27 683.355 L1177.71 683.355 L1177.15 683.355 L1176.6 683.355 L1176.04 683.355 L1175.48 683.355 L1174.92 683.355 L1174.36 683.355 L1173.8 683.355 L1173.24 683.355 L1172.68 683.355 L1172.12 683.355 L1171.56 683.355 L1171 683.355 L1170.44 683.355 L1169.88 683.355 L1169.33 683.355 L1168.77 683.355 L1168.21 683.355 L1167.65 683.355 L1167.09 683.355 L1166.53 683.355 L1165.97 683.355 L1165.41 683.355 L1164.85 683.355 L1164.29 683.355 L1163.73 683.355 L1163.17 683.355 L1162.61 683.355 L1162.05 683.355 L1161.5 683.355 L1160.94 683.355 L1160.38 683.355 L1159.82 683.355 L1159.26 683.355 L1158.7 683.355 L1158.14 683.355 L1157.58 683.355 L1157.02 683.355 L1156.46 683.355 L1155.9 683.355 L1155.34 683.355 L1154.78 683.355 L1154.23 683.355 L1153.67 683.355 L1153.11 683.355 L1152.55 683.355 L1151.99 683.355 L1151.43 683.355 L1150.87 683.355 L1150.31 683.355 L1149.75 683.355 L1149.19 683.355 L1148.63 683.355 L1148.07 683.355 L1147.51 683.355 L1146.96 683.355 L1146.4 683.355 L1145.84 683.355 L1145.28 683.355 L1144.72 683.355 L1144.16 683.355 L1143.6 683.355 L1143.04 683.355 L1142.48 683.355 L1141.92 683.355 L1141.36 683.355 L1140.8 683.355 L1140.24 683.355 L1139.68 683.355 L1139.13 683.355 L1138.57 683.355 L1138.01 683.355 L1137.45 683.355 L1136.89 683.355 L1136.33 683.355 L1135.77 683.355 L1135.21 683.355 L1134.65 683.355 L1134.09 683.355 L1133.53 683.355 L1132.97 683.355 L1132.41 683.355 L1131.86 683.355 L1131.3 683.355 L1130.74 683.355 L1130.18 683.355 L1129.62 683.355 L1129.06 683.355 L1128.5 683.355 L1127.94 683.355 L1127.38 683.355 L1126.82 683.355 L1126.26 683.355 L1125.7 683.355 L1125.14 683.355 L1124.59 683.355 L1124.03 683.355 L1123.47 683.355 L1122.91 683.355 L1122.35 683.355 L1121.79 683.355 L1121.23 683.355 L1120.67 683.355 L1120.11 683.355 L1119.55 683.355 L1118.99 683.355 L1118.43 683.355 L1117.87 683.355 L1117.31 683.355 L1116.76 683.355 L1116.2 683.355 L1115.64 683.355 L1115.08 683.355 L1114.52 683.355 L1113.96 683.355 L1113.4 683.355 L1112.84 683.355 L1112.28 683.355 L1111.72 683.355 L1111.16 683.355 L1110.6 683.355 L1110.04 683.355 L1109.49 683.355 L1108.93 683.355 L1108.37 683.355 L1107.81 683.355 L1107.25 683.355 L1106.69 683.355 L1106.13 683.355 L1105.57 683.355 L1105.01 683.355 L1104.45 683.355 L1103.89 683.355 L1103.33 683.355 L1102.77 683.355 L1102.22 683.355 L1101.66 683.355 L1101.1 683.355 L1100.54 683.355 L1099.98 683.355 L1099.42 683.355 L1098.86 683.355 L1098.3 683.355 L1097.74 683.355 L1097.18 683.355 L1096.62 683.355 L1096.06 683.355 L1095.5 683.355 L1094.94 683.355 L1094.39 683.355 L1093.83 683.355 L1093.27 683.355 L1092.71 683.355 L1092.15 683.355 L1091.59 683.355 L1091.03 683.355 L1090.47 683.355 L1089.91 683.355 L1089.35 683.355 L1088.79 683.355 L1088.23 683.355 L1087.67 683.355 L1087.12 683.355 L1086.56 683.355 L1086 683.355 L1085.44 683.355 L1084.88 683.355 L1084.32 683.355 L1083.76 683.355 L1083.2 683.355 L1082.64 683.355 L1082.08 683.355 L1081.52 683.355 L1080.96 683.355 L1080.4 683.355 L1079.85 683.355 L1079.29 683.355 L1078.73 683.355 L1078.17 683.355 L1077.61 683.355 L1077.05 683.355 L1076.49 683.355 L1075.93 683.355 L1075.37 683.355 L1074.81 683.355 L1074.25 683.355 L1073.69 683.355 L1073.13 683.355 L1072.57 683.355 L1072.02 683.355 L1071.46 683.355 L1070.9 683.355 L1070.34 683.355 L1069.78 683.355 L1069.22 683.355 L1068.66 683.355 L1068.1 683.355 L1067.54 683.355 L1066.98 683.355 L1066.42 683.355 L1065.86 683.355 L1065.3 683.355 L1064.75 683.355 L1064.19 683.355 L1063.63 683.355 L1063.07 683.355 L1062.51 683.355 L1061.95 683.355 L1061.39 683.355 L1060.83 683.355 L1060.27 683.355 L1059.71 683.355 L1059.15 683.355 L1058.59 683.355 L1058.03 683.355 L1057.48 683.355 L1056.92 683.355 L1056.36 683.355 L1055.8 683.355 L1055.24 683.355 L1054.68 683.355 L1054.12 683.355 L1053.56 683.355 L1053 683.355 L1052.44 683.355 L1051.88 683.355 L1051.32 683.355 L1050.76 683.355 L1050.2 683.355 L1049.65 683.355 L1049.09 683.355 L1048.53 683.355 L1047.97 683.355 L1047.41 683.355 L1046.85 683.355 L1046.29 683.355 L1045.73 683.355 L1045.17 683.355 L1044.61 683.355 L1044.05 683.355 L1043.49 683.355 L1042.93 683.355 L1042.38 683.355 L1041.82 683.355 L1041.26 683.355 L1040.7 683.355 L1040.14 683.355 L1039.58 683.355 L1039.02 683.355 L1038.46 683.355 L1037.9 683.355 L1037.34 683.355 L1036.78 683.355 L1036.22 683.355 L1035.66 683.355 L1035.1 683.355 L1034.55 683.355 L1033.99 683.355 L1033.43 683.355 L1032.87 683.355 L1032.31 683.355 L1031.75 683.355 L1031.19 683.355 L1030.63 683.355 L1030.07 683.355 L1029.51 683.355 L1028.95 683.355 L1028.39 683.355 L1027.83 683.355 L1027.28 683.355 L1026.72 683.355 L1026.16 683.355 L1025.6 683.355 L1025.04 683.355 L1024.48 683.355 L1023.92 683.355 L1023.36 683.355 L1022.8 683.355 L1022.24 683.355 L1021.68 683.355 L1021.12 683.355 L1020.56 683.355 L1020.01 683.355 L1019.45 683.355 L1018.89 683.355 L1018.33 683.355 L1017.77 683.355 L1017.21 683.355 L1016.65 683.355 L1016.09 683.355 L1015.53 683.355 L1014.97 683.355 L1014.41 683.355 L1013.85 683.355 L1013.29 683.355 L1012.73 683.355 L1012.18 683.355 L1011.62 683.355 L1011.06 683.355 L1010.5 683.355 L1009.94 683.355 L1009.38 683.355 L1008.82 683.355 L1008.26 683.355 L1007.7 683.355 L1007.14 683.355 L1006.58 683.355 L1006.02 683.355 L1005.46 683.355 L1004.91 683.355 L1004.35 683.355 L1003.79 683.355 L1003.23 683.355 L1002.67 683.355 L1002.11 683.355 L1001.55 683.355 L1000.99 683.355 L1000.43 683.355 L999.872 683.355 L999.313 683.355 L998.754 683.355 L998.194 683.355 L997.635 683.355 L997.076 683.355 L996.517 683.355 L995.957 683.355 L995.398 683.355 L994.839 683.355 L994.28 683.355 L993.72 683.355 L993.161 683.355 L992.602 683.355 L992.043 683.355 L991.483 683.355 L990.924 683.355 L990.365 683.355 L989.806 683.355 L989.246 683.355 L988.687 683.355 L988.128 683.355 L987.569 683.355 L987.009 683.355 L986.45 683.355 L985.891 683.355 L985.332 683.355 L984.772 683.355 L984.213 683.355 L983.654 683.355 L983.095 683.355 L982.535 683.355 L981.976 683.355 L981.417 683.355 L980.858 683.355 L980.298 683.355 L979.739 683.355 L979.18 683.355 L978.621 683.355 L978.061 683.355 L977.502 683.355 L976.943 683.355 L976.384 683.355 L975.824 683.355 L975.265 683.355 L974.706 683.355 L974.147 683.355 L973.587 683.355 L973.028 683.355 L972.469 683.355 L971.91 683.355 L971.35 683.355 L970.791 683.355 L970.232 683.355 L969.673 683.355 L969.113 683.355 L968.554 683.355 L967.995 683.355 L967.436 683.355 L966.876 683.355 L966.317 683.355 L965.758 683.355 L965.199 683.355 L964.639 683.355 L964.08 683.355 L963.521 683.355 L962.962 683.355 L962.402 683.355 L961.843 683.355 L961.284 683.355 L960.725 683.355 L960.165 683.355 L959.606 683.355 L959.047 683.355 L958.488 683.355 L957.928 683.355 L957.369 683.355 L956.81 683.355 L956.251 683.355 L955.691 683.355 L955.132 683.355 L954.573 683.355 L954.014 683.355 L953.454 683.355 L952.895 683.355 L952.336 683.355 L951.777 683.355 L951.217 683.355 L950.658 683.355 L950.099 683.355 L949.54 683.355 L948.98 683.355 L948.421 683.355 L947.862 683.355 L947.303 683.355 L946.743 683.355 L946.184 683.355 L945.625 683.355 L945.066 683.355 L944.506 683.355 L943.947 683.355 L943.388 683.355 L942.829 683.355 L942.269 683.355 L941.71 683.355 L941.151 683.355 L940.592 683.355 L940.032 683.355 L939.473 683.355 L938.914 683.355 L938.355 683.355 L937.795 683.355 L937.236 683.355 L936.677 683.355 L936.118 683.355 L935.558 683.355 L934.999 683.355 L934.44 683.355 L933.881 683.355 L933.321 683.355 L932.762 683.355 L932.203 683.355 L931.644 683.355 L931.084 683.355 L930.525 683.355 L929.966 683.355 L929.406 683.355 L928.847 683.355 L928.288 683.355 L927.729 683.355 L927.169 683.355 L926.61 683.355 L926.051 683.355 L925.492 683.355 L924.932 683.355 L924.373 683.355 L923.814 683.355 L923.255 683.355 L922.695 683.355 L922.136 683.355 L921.577 683.355 L921.018 683.355 L920.458 683.355 L919.899 683.355 L919.34 683.355 L918.781 683.355 L918.221 683.355 L917.662 683.355 L917.103 683.355 L916.544 683.355 L915.984 683.355 L915.425 683.355 L914.866 683.355 L914.307 683.355 L913.747 683.355 L913.188 683.355 L912.629 683.355 L912.07 683.355 L911.51 683.355 L910.951 683.355 L910.392 683.355 L909.833 683.355 L909.273 683.355 L908.714 683.355 L908.155 683.355 L907.596 683.355 L907.036 683.355 L906.477 683.355 L905.918 683.355 L905.359 683.355 L904.799 683.355 L904.24 683.355 L903.681 683.355 L903.122 683.355 L902.562 683.355 L902.003 683.355 L901.444 683.355 L900.885 683.355 L900.325 683.355 L899.766 683.355 L899.207 683.355 L898.648 683.355 L898.088 683.355 L897.529 683.355 L896.97 683.355 L896.411 683.355 L895.851 683.355 L895.292 683.355 L894.733 683.355 L894.174 683.355 L893.614 683.355 L893.055 683.355 L892.496 683.355 L891.937 683.355 L891.377 683.355 L890.818 683.355 L890.259 683.355 L889.7 683.355 L889.14 683.355 L888.581 683.355 L888.022 683.355 L887.463 683.355 L886.903 683.355 L886.344 683.355 L885.785 683.355 L885.226 683.355 L884.666 683.355 L884.107 683.355 L883.548 683.355 L882.989 683.355 L882.429 683.355 L881.87 683.355 L881.311 683.355 L880.752 683.355 L880.192 683.355 L879.633 683.355 L879.074 683.355 L878.515 683.355 L877.955 683.355 L877.396 683.355 L876.837 683.355 L876.278 683.355 L875.718 683.355 L875.159 683.355 L874.6 683.355 L874.041 683.355 L873.481 683.355 L872.922 683.355 L872.363 683.355 L871.804 683.355 L871.244 683.355 L870.685 683.355 L870.126 683.355 L869.567 683.355 L869.007 683.355 L868.448 683.355 L867.889 683.355 L867.33 683.355 L866.77 683.355 L866.211 683.355 L865.652 683.355 L865.093 683.355 L864.533 683.355 L863.974 683.355 L863.415 683.355 L862.856 683.355 L862.296 683.355 L861.737 683.355 L861.178 683.355 L860.619 683.355 L860.059 683.355 L859.5 683.355 L858.941 683.355 L858.382 683.355 L857.822 683.355 L857.263 683.355 L856.704 683.355 L856.145 683.355 L855.585 683.355 L855.026 683.355 L854.467 683.355 L853.908 683.355 L853.348 683.355 L852.789 683.355 L852.23 683.355 L851.671 683.355 L851.111 683.355 L850.552 683.355 L849.993 683.355 L849.434 683.355 L848.874 683.355 L848.315 683.355 L847.756 683.355 L847.197 683.355 L846.637 683.355 L846.078 683.355 L845.519 683.355 L844.96 683.355 L844.4 683.355 L843.841 683.355 L843.282 683.355 L842.723 683.355 L842.163 683.355 L841.604 683.355 L841.045 683.355 L840.486 683.355 L839.926 683.355 L839.367 683.355 L838.808 683.355 L838.249 683.355 L837.689 683.355 L837.13 683.355 L836.571 683.355 L836.012 683.355 L835.452 683.355 L834.893 683.355 L834.334 683.355 L833.775 683.355 L833.215 683.355 L832.656 683.355 L832.097 683.355 L831.538 683.355 L830.978 683.355 L830.419 683.355 L829.86 683.355 L829.301 683.355 L828.741 683.355 L828.182 683.355 L827.623 683.355 L827.064 683.355 L826.504 683.355 L825.945 683.355 L825.386 683.355 L824.827 683.355 L824.267 683.355 L823.708 683.355 L823.149 683.355 L822.59 683.355 L822.03 683.355 L821.471 683.355 L820.912 683.355 L820.353 683.355 L819.793 683.355 L819.234 683.355 L818.675 683.355 L818.116 683.355 L817.556 683.355 L816.997 683.355 L816.438 683.355 L815.879 683.355 L815.319 683.355 L814.76 683.355 L814.201 683.355 L813.642 683.355 L813.082 683.355 L812.523 683.355 L811.964 683.355 L811.405 683.355 L810.845 683.355 L810.286 683.355 L809.727 683.355 L809.168 683.355 L808.608 683.355 L808.049 683.355 L807.49 683.355 L806.931 683.355 L806.371 683.355 L805.812 683.355 L805.253 683.355 L804.693 683.355 L804.134 683.355 L803.575 683.355 L803.016 683.355 L802.456 683.355 L801.897 683.355 L801.338 683.355 L800.779 683.355 L800.219 683.355 L799.66 683.355 L799.101 683.355 L798.542 683.355 L797.982 683.355 L797.423 683.355 L796.864 683.355 L796.305 683.355 L795.745 683.355 L795.186 683.355 L794.627 683.355 L794.068 683.355 L793.508 683.355 L792.949 683.355 L792.39 683.355 L791.831 683.355 L791.271 683.355 L790.712 683.355 L790.153 683.355 L789.594 683.355 L789.034 683.355 L788.475 683.355 L787.916 683.355 L787.357 683.355 L786.797 683.355 L786.238 683.355 L785.679 683.355 L785.12 683.355 L784.56 683.355 L784.001 683.355 L783.442 683.355 L782.883 683.355 L782.323 683.355 L781.764 683.355 L781.205 683.355 L780.646 683.355 L780.086 683.355 L779.527 683.355 L778.968 683.355 L778.409 683.355 L777.849 683.355 L777.29 683.355 L776.731 683.355 L776.172 683.355 L775.612 683.355 L775.053 683.355 L774.494 683.355 L773.935 683.355 L773.375 683.355 L772.816 683.355 L772.257 683.355 L771.698 683.355 L771.138 683.355 L770.579 683.355 L770.02 683.355 L769.461 683.355 L768.901 683.355 L768.342 683.355 L767.783 683.355 L767.224 683.355 L766.664 683.355 L766.105 683.355 L765.546 683.355 L764.987 683.355 L764.427 683.355 L763.868 683.355 L763.309 683.355 L762.75 683.355 L762.19 683.355 L761.631 683.355 L761.072 683.355 L760.513 683.355 L759.953 683.355 L759.394 683.355 L758.835 683.355 L758.276 683.355 L757.716 683.355 L757.157 683.355 L756.598 683.355 L756.039 683.355 L755.479 683.355 L754.92 683.355 L754.361 683.355 L753.802 683.355 L753.242 683.355 L752.683 683.355 L752.124 683.355 L751.565 683.355 L751.005 683.355 L750.446 683.355 L749.887 683.355 L749.328 683.355 L748.768 683.355 L748.209 683.355 L747.65 683.355 L747.091 683.355 L746.531 683.355 L745.972 683.355 L745.413 683.355 L744.854 683.355 L744.294 683.355 L743.735 683.355 L743.176 683.355 L742.617 683.355 L742.057 683.355 L741.498 683.355 L740.939 683.355 L740.38 683.355 L739.82 683.355 L739.261 683.355 L738.702 683.355 L738.143 683.355 L737.583 683.355 L737.024 683.355 L736.465 683.355 L735.906 683.355 L735.346 683.355 L734.787 683.355 L734.228 683.355 L733.669 683.355 L733.109 683.355 L732.55 683.355 L731.991 683.355 L731.432 683.355 L730.872 683.355 L730.313 683.355 L729.754 683.355 L729.195 683.355 L728.635 683.355 L728.076 683.355 L727.517 683.355 L726.958 683.355 L726.398 683.355 L725.839 683.355 L725.28 683.355 L724.721 683.355 L724.161 683.355 L723.602 683.355 L723.043 683.355 L722.484 683.355 L721.924 683.355 L721.365 683.355 L720.806 683.355 L720.247 683.355  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.797 720.806,687.797 721.365,687.797 721.924,687.797 722.484,687.797 723.043,687.797 723.602,687.797 724.161,687.797 724.721,687.797 725.28,687.797 725.839,687.797 726.398,687.797 726.958,687.797 727.517,687.797 728.076,687.797 728.635,687.797 729.195,687.797 729.754,687.797 730.313,687.797 730.872,687.797 731.432,687.797 731.991,687.797 732.55,687.797 733.109,687.797 733.669,687.797 734.228,687.797 734.787,687.797 735.346,687.797 735.906,687.797 736.465,687.797 737.024,687.797 737.583,687.797 738.143,687.797 738.702,687.797 739.261,687.797 739.82,687.797 740.38,687.797 740.939,687.797 741.498,687.797 742.057,687.797 742.617,687.797 743.176,687.797 743.735,687.797 744.294,687.797 744.854,687.797 745.413,687.797 745.972,687.797 746.531,687.797 747.091,687.797 747.65,687.797 748.209,687.797 748.768,687.797 749.328,687.797 749.887,687.797 750.446,687.797 751.005,687.797 751.565,687.797 752.124,687.797 752.683,687.797 753.242,687.797 753.802,687.797 754.361,687.797 754.92,687.797 755.479,687.797 756.039,687.797 756.598,687.797 757.157,687.797 757.716,687.797 758.276,687.797 758.835,687.797 759.394,687.797 759.953,687.797 760.513,687.797 761.072,687.797 761.631,687.797 762.19,687.797 762.75,687.797 763.309,687.797 763.868,687.797 764.427,687.797 764.987,687.797 765.546,687.797 766.105,687.797 766.664,687.797 767.224,687.797 767.783,687.797 768.342,687.797 768.901,687.797 769.461,687.797 770.02,687.797 770.579,687.797 771.138,687.797 771.698,687.797 772.257,687.797 772.816,687.797 773.375,687.797 773.935,687.797 774.494,687.797 775.053,687.797 775.612,687.797 776.172,687.797 776.731,687.797 777.29,687.797 777.849,687.797 778.409,687.797 778.968,687.797 779.527,687.797 780.086,687.797 780.646,687.797 781.205,687.797 781.764,687.797 782.323,687.797 782.883,687.797 783.442,687.797 784.001,687.797 784.56,687.797 785.12,687.797 785.679,687.797 786.238,687.797 786.797,687.797 787.357,687.797 787.916,687.797 788.475,687.797 789.034,687.797 789.594,687.797 790.153,687.797 790.712,687.797 791.271,687.797 791.831,687.797 792.39,687.797 792.949,687.797 793.508,687.797 794.068,687.797 794.627,687.797 795.186,687.797 795.745,687.797 796.305,687.797 796.864,687.797 797.423,687.797 797.982,687.797 798.542,687.797 799.101,687.797 799.66,687.797 800.219,687.797 800.779,687.797 801.338,687.797 801.897,687.797 802.456,687.797 803.016,687.797 803.575,687.797 804.134,687.797 804.693,687.797 805.253,687.797 805.812,687.797 806.371,687.797 806.931,687.797 807.49,687.797 808.049,687.797 808.608,687.797 809.168,687.797 809.727,687.797 810.286,687.797 810.845,687.797 811.405,687.797 811.964,687.797 812.523,687.797 813.082,687.797 813.642,687.797 814.201,687.797 814.76,687.797 815.319,687.797 815.879,687.797 816.438,687.797 816.997,687.797 817.556,687.797 818.116,687.797 818.675,687.797 819.234,687.797 819.793,687.797 820.353,687.797 820.912,687.797 821.471,687.797 822.03,687.797 822.59,687.797 823.149,687.797 823.708,687.797 824.267,687.797 824.827,687.797 825.386,687.797 825.945,687.797 826.504,687.797 827.064,687.797 827.623,687.797 828.182,687.797 828.741,687.797 829.301,687.797 829.86,687.797 830.419,687.797 830.978,687.797 831.538,687.797 832.097,687.797 832.656,687.797 833.215,687.797 833.775,687.797 834.334,687.797 834.893,687.797 835.452,687.797 836.012,687.797 836.571,687.797 837.13,687.797 837.689,687.797 838.249,687.797 838.808,687.797 839.367,687.797 839.926,687.797 840.486,687.797 841.045,687.797 841.604,687.797 842.163,687.797 842.723,687.797 843.282,687.797 843.841,687.797 844.4,687.797 844.96,687.797 845.519,687.797 846.078,687.797 846.637,687.797 847.197,687.797 847.756,687.797 848.315,687.797 848.874,687.797 849.434,687.797 849.993,687.797 850.552,687.797 851.111,687.797 851.671,687.797 852.23,687.797 852.789,687.797 853.348,687.797 853.908,687.797 854.467,687.797 855.026,687.797 855.585,687.797 856.145,687.797 856.704,687.797 857.263,687.797 857.822,687.797 858.382,687.797 858.941,687.797 859.5,687.797 860.059,687.797 860.619,687.797 861.178,687.797 861.737,687.797 862.296,687.797 862.856,687.797 863.415,687.797 863.974,687.797 864.533,687.797 865.093,687.797 865.652,687.797 866.211,687.797 866.77,687.797 867.33,687.797 867.889,687.797 868.448,687.797 869.007,687.797 869.567,687.797 870.126,687.797 870.685,687.797 871.244,687.797 871.804,687.797 872.363,687.797 872.922,687.797 873.481,687.797 874.041,687.797 874.6,687.797 875.159,687.797 875.718,687.797 876.278,687.797 876.837,687.797 877.396,687.797 877.955,687.797 878.515,687.797 879.074,687.797 879.633,687.797 880.192,687.797 880.752,687.797 881.311,687.797 881.87,687.797 882.429,687.797 882.989,687.797 883.548,687.797 884.107,687.797 884.666,687.797 885.226,687.797 885.785,687.797 886.344,687.797 886.903,687.797 887.463,687.797 888.022,687.797 888.581,687.797 889.14,687.797 889.7,687.797 890.259,687.797 890.818,687.797 891.377,687.797 891.937,687.797 892.496,687.797 893.055,687.797 893.614,687.797 894.174,687.797 894.733,687.797 895.292,687.797 895.851,687.797 896.411,687.797 896.97,687.797 897.529,687.797 898.088,687.797 898.648,687.797 899.207,687.797 899.766,687.797 900.325,687.797 900.885,687.797 901.444,687.797 902.003,687.797 902.562,687.797 903.122,687.797 903.681,687.797 904.24,687.797 904.799,687.797 905.359,687.797 905.918,687.797 906.477,687.797 907.036,687.797 907.596,687.797 908.155,687.797 908.714,687.797 909.273,687.797 909.833,687.797 910.392,687.797 910.951,687.797 911.51,687.797 912.07,687.797 912.629,687.797 913.188,687.797 913.747,687.797 914.307,687.797 914.866,687.797 915.425,687.797 915.984,687.797 916.544,687.797 917.103,687.797 917.662,687.797 918.221,687.797 918.781,687.797 919.34,687.797 919.899,687.797 920.458,687.797 921.018,687.797 921.577,687.797 922.136,687.797 922.695,687.797 923.255,687.797 923.814,687.797 924.373,687.797 924.932,687.797 925.492,687.797 926.051,687.797 926.61,687.797 927.169,687.797 927.729,687.797 928.288,687.797 928.847,687.797 929.406,687.797 929.966,687.797 930.525,687.797 931.084,687.797 931.644,687.797 932.203,687.797 932.762,687.797 933.321,687.797 933.881,687.797 934.44,687.797 934.999,687.797 935.558,687.797 936.118,687.797 936.677,687.797 937.236,687.797 937.795,687.797 938.355,687.797 938.914,687.797 939.473,687.797 940.032,687.797 940.592,687.797 941.151,687.797 941.71,687.797 942.269,687.797 942.829,687.797 943.388,687.797 943.947,687.797 944.506,687.797 945.066,687.797 945.625,687.797 946.184,687.797 946.743,687.797 947.303,687.797 947.862,687.797 948.421,687.797 948.98,687.797 949.54,687.797 950.099,687.797 950.658,687.797 951.217,687.797 951.777,687.797 952.336,687.797 952.895,687.797 953.454,687.797 954.014,687.797 954.573,687.797 955.132,687.797 955.691,687.797 956.251,687.797 956.81,687.797 957.369,687.797 957.928,687.797 958.488,687.797 959.047,687.797 959.606,687.797 960.165,687.797 960.725,687.797 961.284,687.797 961.843,687.797 962.402,687.797 962.962,687.797 963.521,687.797 964.08,687.797 964.639,687.797 965.199,687.797 965.758,687.797 966.317,687.797 966.876,687.797 967.436,687.797 967.995,687.797 968.554,687.797 969.113,687.797 969.673,687.797 970.232,687.797 970.791,687.797 971.35,687.797 971.91,687.797 972.469,687.797 973.028,687.797 973.587,687.797 974.147,687.797 974.706,687.797 975.265,687.797 975.824,687.797 976.384,687.797 976.943,687.797 977.502,687.797 978.061,687.797 978.621,687.797 979.18,687.797 979.739,687.797 980.298,687.797 980.858,687.797 981.417,687.797 981.976,687.797 982.535,687.797 983.095,687.797 983.654,687.797 984.213,687.797 984.772,687.797 985.332,687.797 985.891,687.797 986.45,687.797 987.009,687.797 987.569,687.797 988.128,687.797 988.687,687.797 989.246,687.797 989.806,687.797 990.365,687.797 990.924,687.797 991.483,687.797 992.043,687.797 992.602,687.797 993.161,687.797 993.72,687.797 994.28,687.797 994.839,687.797 995.398,687.797 995.957,687.797 996.517,687.797 997.076,687.797 997.635,687.797 998.194,687.797 998.754,687.797 999.313,687.797 999.872,687.797 1000.43,687.797 1000.99,687.797 1001.55,687.797 1002.11,687.797 1002.67,687.797 1003.23,687.797 1003.79,687.797 1004.35,687.797 1004.91,687.797 1005.46,687.797 1006.02,687.797 1006.58,687.797 1007.14,687.797 1007.7,687.797 1008.26,687.797 1008.82,687.797 1009.38,687.797 1009.94,687.797 1010.5,687.797 1011.06,687.797 1011.62,687.797 1012.18,687.797 1012.73,687.797 1013.29,687.797 1013.85,687.797 1014.41,687.797 1014.97,687.797 1015.53,687.797 1016.09,687.797 1016.65,687.797 1017.21,687.797 1017.77,687.797 1018.33,687.797 1018.89,687.797 1019.45,687.797 1020.01,687.797 1020.56,687.797 1021.12,687.797 1021.68,687.797 1022.24,687.797 1022.8,687.797 1023.36,687.797 1023.92,687.797 1024.48,687.797 1025.04,687.797 1025.6,687.797 1026.16,687.797 1026.72,687.797 1027.28,687.797 1027.83,687.797 1028.39,687.797 1028.95,687.797 1029.51,687.797 1030.07,687.797 1030.63,687.797 1031.19,687.797 1031.75,687.797 1032.31,687.797 1032.87,687.797 1033.43,687.797 1033.99,687.797 1034.55,687.797 1035.1,687.797 1035.66,687.797 1036.22,687.797 1036.78,687.797 1037.34,687.797 1037.9,687.797 1038.46,687.797 1039.02,687.797 1039.58,687.797 1040.14,687.797 1040.7,687.797 1041.26,687.797 1041.82,687.797 1042.38,687.797 1042.93,687.797 1043.49,687.797 1044.05,687.797 1044.61,687.797 1045.17,687.797 1045.73,687.797 1046.29,687.797 1046.85,687.797 1047.41,687.797 1047.97,687.797 1048.53,687.797 1049.09,687.797 1049.65,687.797 1050.2,687.797 1050.76,687.797 1051.32,687.797 1051.88,687.797 1052.44,687.797 1053,687.797 1053.56,687.797 1054.12,687.797 1054.68,687.797 1055.24,687.797 1055.8,687.797 1056.36,687.797 1056.92,687.797 1057.48,687.797 1058.03,687.797 1058.59,687.797 1059.15,687.797 1059.71,687.797 1060.27,687.797 1060.83,687.797 1061.39,687.797 1061.95,687.797 1062.51,687.797 1063.07,687.797 1063.63,687.797 1064.19,687.797 1064.75,687.797 1065.3,687.797 1065.86,687.797 1066.42,687.797 1066.98,687.797 1067.54,687.797 1068.1,687.797 1068.66,687.797 1069.22,687.797 1069.78,687.797 1070.34,687.797 1070.9,687.797 1071.46,687.797 1072.02,687.797 1072.57,687.797 1073.13,687.797 1073.69,687.797 1074.25,687.797 1074.81,687.797 1075.37,687.797 1075.93,687.797 1076.49,687.797 1077.05,687.797 1077.61,687.797 1078.17,687.797 1078.73,687.797 1079.29,687.797 1079.85,687.797 1080.4,687.797 1080.96,687.797 1081.52,687.797 1082.08,687.797 1082.64,687.797 1083.2,687.797 1083.76,687.797 1084.32,687.797 1084.88,687.797 1085.44,687.797 1086,687.797 1086.56,687.797 1087.12,687.797 1087.67,687.797 1088.23,687.797 1088.79,687.797 1089.35,687.797 1089.91,687.797 1090.47,687.797 1091.03,687.797 1091.59,687.797 1092.15,687.797 1092.71,687.797 1093.27,687.797 1093.83,687.797 1094.39,687.797 1094.94,687.797 1095.5,687.797 1096.06,687.797 1096.62,687.797 1097.18,687.797 1097.74,687.797 1098.3,687.797 1098.86,687.797 1099.42,687.797 1099.98,687.797 1100.54,687.797 1101.1,687.797 1101.66,687.797 1102.22,687.797 1102.77,687.797 1103.33,687.797 1103.89,687.797 1104.45,687.797 1105.01,687.797 1105.57,687.797 1106.13,687.797 1106.69,687.797 1107.25,687.797 1107.81,687.797 1108.37,687.797 1108.93,687.797 1109.49,687.797 1110.04,687.797 1110.6,687.797 1111.16,687.797 1111.72,687.797 1112.28,687.797 1112.84,687.797 1113.4,687.797 1113.96,687.797 1114.52,687.797 1115.08,687.797 1115.64,687.797 1116.2,687.797 1116.76,687.797 1117.31,687.797 1117.87,687.797 1118.43,687.797 1118.99,687.797 1119.55,687.797 1120.11,687.797 1120.67,687.797 1121.23,687.797 1121.79,687.797 1122.35,687.797 1122.91,687.797 1123.47,687.797 1124.03,687.797 1124.59,687.797 1125.14,687.797 1125.7,687.797 1126.26,687.797 1126.82,687.797 1127.38,687.797 1127.94,687.797 1128.5,687.797 1129.06,687.797 1129.62,687.797 1130.18,687.797 1130.74,687.797 1131.3,687.797 1131.86,687.797 1132.41,687.797 1132.97,687.797 1133.53,687.797 1134.09,687.797 1134.65,687.797 1135.21,687.797 1135.77,687.797 1136.33,687.797 1136.89,687.797 1137.45,687.797 1138.01,687.797 1138.57,687.797 1139.13,687.797 1139.68,687.797 1140.24,687.797 1140.8,687.797 1141.36,687.797 1141.92,687.797 1142.48,687.797 1143.04,687.797 1143.6,687.797 1144.16,687.797 1144.72,687.797 1145.28,687.797 1145.84,687.797 1146.4,687.797 1146.96,687.797 1147.51,687.797 1148.07,687.797 1148.63,687.797 1149.19,687.797 1149.75,687.797 1150.31,687.797 1150.87,687.797 1151.43,687.797 1151.99,687.797 1152.55,687.797 1153.11,687.797 1153.67,687.797 1154.23,687.797 1154.78,687.797 1155.34,687.797 1155.9,687.797 1156.46,687.797 1157.02,687.797 1157.58,687.797 1158.14,687.797 1158.7,687.797 1159.26,687.797 1159.82,687.797 1160.38,687.797 1160.94,687.797 1161.5,687.797 1162.05,687.797 1162.61,687.797 1163.17,687.797 1163.73,687.797 1164.29,687.797 1164.85,687.797 1165.41,687.797 1165.97,687.797 1166.53,687.797 1167.09,687.797 1167.65,687.797 1168.21,687.797 1168.77,687.797 1169.33,687.797 1169.88,687.797 1170.44,687.797 1171,687.797 1171.56,687.797 1172.12,687.797 1172.68,687.797 1173.24,687.797 1173.8,687.797 1174.36,687.797 1174.92,687.797 1175.48,687.797 1176.04,687.797 1176.6,687.797 1177.15,687.797 1177.71,687.797 1178.27,687.797 1178.83,687.797 1179.39,687.797 1179.95,687.797 1180.51,687.797 1181.07,687.797 1181.63,687.797 1182.19,687.797 1182.75,687.797 1183.31,687.797 1183.87,687.797 1184.43,687.797 1184.98,687.797 1185.54,687.797 1186.1,687.797 1186.66,687.797 1187.22,687.797 1187.78,687.797 1188.34,687.797 1188.9,687.797 1189.46,687.797 1190.02,687.797 1190.58,687.797 1191.14,687.797 1191.7,687.797 1192.25,687.797 1192.81,687.797 1193.37,687.797 1193.93,687.797 1194.49,687.797 1195.05,687.797 1195.61,687.797 1196.17,687.797 1196.73,687.797 1197.29,687.797 1197.85,687.797 1198.41,687.797 1198.97,687.797 1199.52,687.797 1200.08,687.797 1200.64,687.797 1201.2,687.797 1201.76,687.797 1202.32,687.797 1202.88,687.797 1203.44,687.797 1204,687.797 1204.56,687.797 1205.12,687.797 1205.68,687.797 1206.24,687.797 1206.8,687.797 1207.35,687.797 1207.91,687.797 1208.47,687.797 1209.03,687.797 1209.59,687.797 1210.15,687.797 1210.71,687.797 1211.27,687.797 1211.83,687.797 1212.39,687.797 1212.95,687.797 1213.51,687.797 1214.07,687.797 1214.62,687.797 1215.18,687.797 1215.74,687.797 1216.3,687.797 1216.86,687.797 1217.42,687.797 1217.98,687.797 1218.54,687.797 1219.1,687.797 1219.66,687.797 1220.22,687.797 1220.78,687.797 1221.34,687.797 1221.89,687.797 1222.45,687.797 1223.01,687.797 1223.57,687.797 1224.13,687.797 1224.69,687.797 1225.25,687.797 1225.81,687.797 1226.37,687.797 1226.93,687.797 1227.49,687.797 1228.05,687.797 1228.61,687.797 1229.17,687.797 1229.72,687.797 1230.28,687.797 1230.84,687.797 1231.4,687.797 1231.96,687.797 1232.52,687.797 1233.08,687.797 1233.64,687.797 1234.2,687.797 1234.76,687.797 1235.32,687.797 1235.88,687.797 1236.44,687.797 1236.99,687.797 1237.55,687.797 1238.11,687.797 1238.67,687.797 1239.23,687.797 1239.79,687.797 1240.35,687.797 1240.91,687.797 1241.47,687.797 1242.03,687.797 1242.59,687.797 1243.15,687.797 1243.71,687.797 1244.26,687.797 1244.82,687.797 1245.38,687.797 1245.94,687.797 1246.5,687.797 1247.06,687.797 1247.62,687.797 1248.18,687.797 1248.74,687.797 1249.3,687.797 1249.86,687.797 1250.42,687.797 1250.98,687.797 1251.54,687.797 1252.09,687.797 1252.65,687.797 1253.21,687.797 1253.77,687.797 1254.33,687.797 1254.89,687.797 1255.45,687.797 1256.01,687.797 1256.57,687.797 1257.13,687.797 1257.69,687.797 1258.25,687.797 1258.81,687.797 1259.36,687.797 1259.92,687.797 1260.48,687.797 1261.04,687.797 1261.6,687.797 1262.16,687.797 1262.72,687.797 1263.28,687.797 1263.84,687.797 1264.4,687.797 1264.96,687.797 1265.52,687.797 1266.08,687.797 1266.63,687.797 1267.19,687.797 1267.75,687.797 1268.31,687.797 1268.87,687.797 1269.43,687.797 1269.99,687.797 1270.55,687.797 1271.11,687.797 1271.67,687.797 1272.23,687.797 1272.79,687.797 1273.35,687.797 1273.91,687.797 1274.46,687.797 1275.02,687.797 1275.58,687.797 1276.14,687.797 1276.7,687.797 1277.26,687.797 1277.82,687.797 1278.38,687.797 1278.94,687.797 1279.5,687.797 1280.06,687.797 1280.62,687.797 1281.18,687.797 1281.73,687.797 1282.29,687.797 1282.85,687.797 1283.41,687.797 1283.97,687.797 1284.53,687.797 1285.09,687.797 1285.65,687.797 1286.21,687.797 1286.77,687.797 1287.33,687.797 1287.89,687.797 1288.45,687.797 1289,687.797 1289.56,687.797 1290.12,687.797 1290.68,687.797 1291.24,687.797 1291.8,687.797 1292.36,687.797 1292.92,687.797 1293.48,687.797 1294.04,687.797 1294.6,687.797 1295.16,687.797 1295.72,687.797 1296.28,687.797 1296.83,687.797 1297.39,687.797 1297.95,687.797 1298.51,687.797 1299.07,687.797 1299.63,687.797 1300.19,687.797 1300.75,687.797 1301.31,687.797 1301.87,687.797 1302.43,687.797 1302.99,687.797 1303.55,687.797 1304.1,687.797 1304.66,687.797 1305.22,687.797 1305.78,687.797 1306.34,687.797 1306.9,687.797 1307.46,687.797 1308.02,687.797 1308.58,687.797 1309.14,687.797 1309.7,687.797 1310.26,687.797 1310.82,687.797 1311.38,687.797 1311.93,687.797 1312.49,687.797 1313.05,687.797 1313.61,687.797 1314.17,687.797 1314.73,687.797 1315.29,687.797 1315.85,687.797 1316.41,687.797 1316.97,687.797 1317.53,687.797 1318.09,687.797 1318.65,687.797 1319.2,687.797 1319.76,687.797 1320.32,687.797 1320.88,687.797 1321.44,687.797 1322,687.797 1322.56,687.797 1323.12,687.797 1323.68,687.797 1324.24,687.797 1324.8,687.797 1325.36,687.797 1325.92,687.797 1326.47,687.797 1327.03,687.797 1327.59,687.797 1328.15,687.797 1328.71,687.797 1329.27,687.797 1329.83,687.797 1330.39,687.797 1330.95,687.797 1331.51,687.797 1332.07,687.797 1332.63,687.797 1333.19,687.797 1333.75,687.797 1334.3,687.797 1334.86,687.797 1335.42,687.797 1335.98,687.797 1336.54,687.797 1337.1,687.797 1337.66,687.797 1338.22,687.797 1338.78,687.797 1339.34,687.797 1339.9,687.797 1340.46,687.797 1341.02,687.797 1341.57,687.797 1342.13,687.797 1342.69,687.797 1343.25,687.797 1343.81,687.797 1344.37,687.797 1344.93,687.797 1345.49,687.797 1346.05,687.797 1346.61,687.797 1347.17,687.797 1347.73,687.797 1348.29,687.797 1348.84,687.797 1349.4,687.797 1349.96,687.797 1350.52,687.797 1351.08,687.797 1351.64,687.797 1352.2,687.797 1352.76,687.797 1353.32,687.797 1353.88,687.797 1354.44,687.797 1355,687.797 1355.56,687.797 1356.12,687.797 1356.67,687.797 1357.23,687.797 1357.79,687.797 1358.35,687.797 1358.91,687.797 1359.47,687.797 1360.03,687.797 1360.59,687.797 1361.15,687.797 1361.71,687.797 1362.27,687.797 1362.83,687.797 1363.39,687.797 1363.94,687.797 1364.5,687.797 1365.06,687.797 1365.62,687.797 1366.18,687.797 1366.74,687.797 1367.3,687.797 1367.86,687.797 1368.42,687.797 1368.98,687.797 1369.54,687.797 1370.1,687.797 1370.66,687.797 1371.21,687.797 1371.77,687.797 1372.33,687.797 1372.89,687.797 1373.45,687.797 1374.01,687.797 1374.57,687.797 1375.13,687.797 1375.69,687.797 1376.25,687.797 1376.81,687.797 1377.37,687.797 1377.93,687.797 1378.49,687.797 1379.04,687.797 1379.6,687.797 1380.16,687.797 1380.72,687.797 1381.28,687.797 1381.84,687.797 1382.4,687.797 1382.96,687.797 1383.52,687.797 1384.08,687.797 1384.64,687.797 1385.2,687.797 1385.76,687.797 1386.31,687.797 1386.87,687.797 1387.43,687.797 1387.99,687.797 1388.55,687.797 1389.11,687.797 1389.67,687.797 1390.23,687.797 1390.79,687.797 1391.35,687.797 1391.91,687.797 1392.47,687.797 1393.03,687.797 1393.58,687.797 1394.14,687.797 1394.7,687.797 1395.26,687.797 1395.82,687.797 1396.38,687.797 1396.94,687.797 1397.5,687.797 1398.06,687.797 1398.62,687.797 1399.18,687.797 1399.74,687.797 1400.3,687.797 1400.86,687.797 1401.41,687.797 1401.97,687.797 1402.53,687.797 1403.09,687.797 1403.65,687.797 1404.21,687.797 1404.77,687.797 1405.33,687.797 1405.89,687.797 1406.45,687.797 1407.01,687.797 1407.57,687.797 1408.13,687.797 1408.68,687.797 1409.24,687.797 1409.8,687.797 1410.36,687.797 1410.92,687.797 1411.48,687.797 1412.04,687.797 1412.6,687.797 1413.16,687.797 1413.72,687.797 1414.28,687.797 1414.84,687.797 1415.4,687.797 1415.95,687.797 1416.51,687.797 1417.07,687.797 1417.63,687.797 1418.19,687.797 1418.75,687.797 1419.31,687.797 1419.87,687.797 1420.43,687.797 1420.99,687.797 1421.55,687.797 1422.11,687.797 1422.67,687.797 1423.23,687.797 1423.78,687.797 1424.34,687.797 1424.9,687.797 1425.46,687.797 1426.02,687.797 1426.58,687.797 1427.14,687.797 1427.7,687.797 1428.26,687.797 1428.82,687.797 1429.38,687.797 1429.94,687.797 1430.5,687.797 1431.05,687.797 1431.61,687.797 1432.17,687.797 1432.73,687.797 1433.29,687.797 1433.85,687.797 1434.41,687.797 1434.97,687.797 1435.53,687.797 1436.09,687.797 1436.65,687.797 1437.21,687.797 1437.77,687.797 1438.33,687.797 1438.88,687.797 1439.44,687.797 1440,687.797 1440.56,687.797 1441.12,687.797 1441.68,687.797 1442.24,687.797 1442.8,687.797 1443.36,687.797 1443.92,687.797 1444.48,687.797 1445.04,687.797 1445.6,687.797 1446.15,687.797 1446.71,687.797 1447.27,687.797 1447.83,687.797 1448.39,687.797 1448.95,687.797 1449.51,687.797 1450.07,687.797 1450.63,687.797 1451.19,687.797 1451.75,687.797 1452.31,687.797 1452.87,687.797 1453.42,687.797 1453.98,687.797 1454.54,687.797 1455.1,687.797 1455.66,687.797 1456.22,687.797 1456.78,687.797 1457.34,687.797 1457.9,687.797 1458.46,687.797 1459.02,687.797 1459.58,687.797 1460.14,687.797 1460.7,687.797 1461.25,687.797 1461.81,687.797 1462.37,687.797 1462.93,687.797 1463.49,687.797 1464.05,687.797 1464.61,687.797 1465.17,687.797 1465.73,687.797 1466.29,687.797 1466.85,687.797 1467.41,687.797 1467.97,687.797 1468.52,687.797 1469.08,687.797 1469.64,687.797 1470.2,687.797 1470.76,687.797 1471.32,687.797 1471.88,687.797 1472.44,687.797 1473,687.797 1473.56,687.797 1474.12,687.797 1474.68,687.797 1475.24,687.797 1475.79,687.797 1476.35,687.797 1476.91,687.797 1477.47,687.797 1478.03,687.797 1478.59,687.797 1479.15,687.797 1479.71,687.797 1480.27,687.797 1480.83,687.797 1481.39,687.797 1481.95,687.797 1482.51,687.797 1483.07,687.797 1483.62,687.797 1484.18,687.797 1484.74,687.797 1485.3,687.797 1485.86,687.797 1486.42,687.797 1486.98,687.797 1487.54,687.797 1488.1,687.797 1488.66,687.797 1489.22,687.797 1489.78,687.797 1490.34,687.797 1490.89,687.797 1491.45,687.797 1492.01,687.797 1492.57,687.797 1493.13,687.797 1493.69,687.797 1494.25,687.797 1494.81,687.797 1495.37,687.797 1495.93,687.797 1496.49,687.797 1497.05,687.797 1497.61,687.797 1498.16,687.797 1498.72,687.797 1499.28,687.797 1499.84,687.797 1500.4,687.797 1500.96,687.797 1501.52,687.797 1502.08,687.797 1502.64,687.797 1503.2,687.797 1503.76,687.797 1504.32,687.797 1504.88,687.797 1505.44,687.797 1505.99,687.797 1506.55,687.797 1507.11,687.797 1507.67,687.797 1508.23,687.797 1508.79,687.797 1509.35,687.797 1509.91,687.797 1510.47,687.797 1511.03,687.797 1511.59,687.797 1512.15,687.797 1512.71,687.797 1513.26,687.797 1513.82,687.797 1514.38,687.797 1514.94,687.797 1515.5,687.797 1516.06,687.797 1516.62,687.797 1517.18,687.797 1517.74,687.797 1518.3,687.797 1518.86,687.797 1519.42,687.797 1519.98,687.797 1520.53,687.797 1521.09,687.797 1521.65,687.797 1522.21,687.797 1522.77,687.797 1523.33,687.797 1523.89,687.797 1524.45,687.797 1525.01,687.797 1525.57,687.797 1526.13,687.797 1526.69,687.797 1527.25,687.797 1527.81,687.797 1528.36,687.797 1528.92,687.797 1529.48,687.797 1530.04,687.797 1530.6,687.797 1531.16,687.797 1531.72,687.797 1532.28,687.797 1532.84,687.797 1533.4,687.797 1533.96,687.797 1534.52,687.797 1535.08,687.797 1535.63,687.797 1536.19,687.797 1536.75,687.797 1537.31,687.797 1537.87,687.797 1538.43,687.797 1538.99,687.797 1539.55,687.797 1540.11,687.797 1540.67,687.797 1541.23,687.797 1541.79,687.797 1542.35,687.797 1542.9,687.797 1543.46,687.797 1544.02,687.797 1544.58,687.797 1545.14,687.797 1545.7,687.797 1546.26,687.797 1546.82,687.797 1547.38,687.797 1547.94,687.797 1548.5,687.797 1549.06,687.797 1549.62,687.797 1550.18,687.797 1550.73,687.797 1551.29,687.797 1551.85,687.797 1552.41,687.797 1552.97,687.797 1553.53,687.797 1554.09,687.797 1554.65,687.797 1555.21,687.797 1555.77,687.797 1556.33,687.797 1556.89,687.797 1557.45,687.797 1558,687.797 1558.56,687.797 1559.12,687.797 1559.68,687.797 1560.24,687.797 1560.8,687.797 1561.36,687.797 1561.92,687.797 1562.48,687.797 1563.04,687.797 1563.6,687.797 1564.16,687.797 1564.72,687.797 1565.28,687.797 1565.83,687.797 1566.39,687.797 1566.95,687.797 1567.51,687.797 1568.07,687.797 1568.63,687.797 1569.19,687.797 1569.75,687.797 1570.31,687.797 1570.87,687.797 1571.43,687.797 1571.99,687.797 1572.55,687.797 1573.1,687.797 1573.66,687.797 1574.22,687.797 1574.78,687.797 1575.34,687.797 1575.9,687.797 1576.46,687.797 1577.02,687.797 1577.58,687.797 1578.14,687.797 1578.7,687.797 1579.26,687.797 1579.82,687.797 1580.37,687.797 1580.93,687.797 1581.49,687.797 1582.05,687.797 1582.61,687.797 1583.17,687.797 1583.73,687.797 1584.29,687.797 1584.85,687.797 1585.41,687.797 1585.97,687.797 1586.53,687.797 1587.09,687.797 1587.65,687.797 1588.2,687.797 1588.76,687.797 1589.32,687.797 1589.88,687.797 1590.44,687.797 1591,687.797 1591.56,687.797 1592.12,687.797 1592.68,687.797 1593.24,687.797 1593.8,687.797 1594.36,687.797 1594.92,687.797 1595.47,687.797 1596.03,687.797 1596.59,687.797 1597.15,687.797 1597.71,687.797 1598.27,687.797 1598.83,687.797 1599.39,687.797 1599.95,687.797 1600.51,687.797 1601.07,687.797 1601.63,687.797 1602.19,687.797 1602.74,687.797 1603.3,687.797 1603.86,687.797 1604.42,687.797 1604.98,687.797 1605.54,687.797 1606.1,687.797 1606.66,687.797 1607.22,687.797 1607.78,687.797 1608.34,687.797 1608.9,687.797 1609.46,687.797 1610.02,687.797 1610.57,687.797 1611.13,687.797 1611.69,687.797 1612.25,687.797 1612.81,687.797 1613.37,687.797 1613.93,687.797 1614.49,687.797 1615.05,687.797 1615.61,687.797 1616.17,687.797 1616.73,687.797 1617.29,687.797 1617.84,687.797 1618.4,687.797 1618.96,687.797 1619.52,687.797 1620.08,687.797 1620.64,687.797 1621.2,687.797 1621.76,687.797 1622.32,687.797 1622.88,687.797 1623.44,687.797 1624,687.797 1624.56,687.797 1625.11,687.797 1625.67,687.797 1626.23,687.797 1626.79,687.797 1627.35,687.797 1627.91,687.797 1628.47,687.797 1629.03,687.797 1629.59,687.797 1630.15,687.797 1630.71,687.797 1631.27,687.797 1631.83,687.797 1632.39,687.797 1632.94,687.797 1633.5,687.797 1634.06,687.797 1634.62,687.797 1635.18,687.797 1635.74,687.797 1636.3,687.797 1636.86,687.797 1637.42,687.797 1637.98,687.797 1638.54,687.797 1639.1,687.797 1639.66,687.797 1640.21,687.797 1640.77,687.797 1641.33,687.797 1641.89,687.797 1642.45,687.797 1643.01,687.797 1643.57,687.797 1644.13,687.797 1644.69,687.797 1645.25,687.797 1645.81,687.797 1646.37,687.797 1646.93,687.797 1647.48,687.797 1648.04,687.797 1648.6,687.797 1649.16,687.797 1649.72,687.797 1650.28,687.797 1650.84,687.797 1651.4,687.797 1651.96,687.797 1652.52,687.797 1653.08,687.797 1653.64,687.797 1654.2,687.797 1654.76,687.797 1655.31,687.797 1655.87,687.797 1656.43,687.797 1656.99,687.797 1657.55,687.797 1658.11,687.797 1658.67,687.797 1659.23,687.797 1659.79,687.797 1660.35,687.797 1660.91,687.797 1661.47,687.797 1662.03,687.797 1662.58,687.797 1663.14,687.797 1663.7,687.797 1664.26,687.797 1664.82,687.797 1665.38,687.797 1665.94,687.797 1666.5,687.797 1667.06,687.797 1667.62,687.797 1668.18,687.797 1668.74,687.797 1669.3,687.797 1669.85,687.797 1670.41,687.797 1670.97,687.797 1671.53,687.797 1672.09,687.797 1672.65,687.797 1673.21,687.797 1673.77,687.797 1674.33,687.797 1674.89,687.797 1675.45,687.797 1676.01,687.797 1676.57,687.797 1677.13,687.797 1677.68,687.797 1678.24,687.797 1678.8,687.797 1679.36,687.797 1679.92,687.797 1680.48,687.797 1681.04,687.797 1681.6,687.797 1682.16,687.797 1682.72,687.797 1683.28,687.797 1683.84,687.797 1684.4,687.797 1684.95,687.797 1685.51,687.797 1686.07,687.797 1686.63,687.797 1687.19,687.797 1687.75,687.797 1688.31,687.797 1688.87,687.797 1689.43,687.797 1689.99,687.797 1690.55,687.797 1691.11,687.797 1691.67,687.797 1692.23,687.797 1692.78,687.797 1693.34,687.797 1693.9,687.797 1694.46,687.797 1695.02,687.797 1695.58,687.797 1696.14,687.797 1696.7,687.797 1697.26,687.797 1697.82,687.797 1698.38,687.797 1698.94,687.797 1699.5,687.797 1700.05,687.797 1700.61,687.797 1701.17,687.797 1701.73,687.797 1702.29,687.797 1702.85,687.797 1703.41,687.797 1703.97,687.797 1704.53,687.797 1705.09,687.797 1705.65,687.797 1706.21,687.797 1706.77,687.797 1707.32,687.797 1707.88,687.797 1708.44,687.797 1709,687.797 1709.56,687.797 1710.12,687.797 1710.68,687.797 1711.24,687.797 1711.8,687.797 1712.36,687.797 1712.92,687.797 1713.48,687.797 1714.04,687.797 1714.6,687.797 1715.15,687.797 1715.71,687.797 1716.27,687.797 1716.83,687.797 1717.39,687.797 1717.95,687.797 1718.51,687.797 1719.07,687.797 1719.63,687.797 1720.19,687.797 1720.75,687.797 1721.31,687.797 1721.87,687.797 1722.42,687.797 1722.98,687.797 1723.54,687.797 1724.1,687.797 1724.66,687.797 1725.22,687.797 1725.78,687.797 1726.34,687.797 1726.9,687.797 1727.46,687.797 1728.02,687.797 1728.58,687.797 1729.14,687.797 1729.69,687.797 1730.25,687.797 1730.81,687.797 1731.37,687.797 1731.93,687.797 1732.49,687.797 1733.05,687.797 1733.61,687.797 1734.17,687.797 1734.73,687.797 1735.29,687.797 1735.85,687.797 1736.41,687.797 1736.97,687.797 1737.52,687.797 1738.08,687.797 1738.64,687.797 1739.2,687.797 1739.76,687.797 1740.32,687.797 1740.88,687.797 1741.44,687.797 1742,687.797 1742.56,687.797 1743.12,687.797 1743.68,687.797 1744.24,687.797 1744.79,687.797 1745.35,687.797 1745.91,687.797 1746.47,687.797 1747.03,687.797 1747.59,687.797 1748.15,687.797 1748.71,687.797 1749.27,687.797 1749.83,687.797 1750.39,687.797 1750.95,687.797 1751.51,687.797 1752.06,687.797 1752.62,687.797 1753.18,687.797 1753.74,687.797 1754.3,687.797 1754.86,687.797 1755.42,687.797 1755.98,687.797 1756.54,687.797 1757.1,687.797 1757.66,687.797 1758.22,687.797 1758.78,687.797 1759.34,687.797 1759.89,687.797 1760.45,687.797 1761.01,687.797 1761.57,687.797 1762.13,687.797 1762.69,687.797 1763.25,687.797 1763.81,687.797 1764.37,687.797 1764.93,687.797 1765.49,687.797 1766.05,687.797 1766.61,687.797 1767.16,687.797 1767.72,687.797 1768.28,687.797 1768.84,687.797 1769.4,687.797 1769.96,687.797 1770.52,687.797 1771.08,687.797 1771.64,687.797 1772.2,687.797 1772.76,687.797 1773.32,687.797 1773.88,687.797 1774.43,687.797 1774.99,687.797 1775.55,687.797 1776.11,687.797 1776.67,687.797 1777.23,687.797 1777.79,687.797 1778.35,687.797 1778.91,687.797 1779.47,687.797 1780.03,687.797 1780.59,687.797 1781.15,687.797 1781.71,687.797 1782.26,687.797 1782.82,687.797 1783.38,687.797 1783.94,687.797 1784.5,687.797 1785.06,687.797 1785.62,687.797 1786.18,687.797 1786.74,687.797 1787.3,687.797 1787.86,687.797 1788.42,687.797 1788.98,687.797 1789.53,687.797 1790.09,687.797 1790.65,687.797 1791.21,687.797 1791.77,687.797 1792.33,687.797 1792.89,687.797 1793.45,687.797 1794.01,687.797 1794.57,687.797 1795.13,687.797 1795.69,687.797 1796.25,687.797 1796.8,687.797 1797.36,687.797 1797.92,687.797 1798.48,687.797 1799.04,687.797 1799.6,687.797 1800.16,687.797 1800.72,687.797 1801.28,687.797 1801.84,687.797 1802.4,687.797 1802.96,687.797 1803.52,687.797 1804.08,687.797 1804.63,687.797 1805.19,687.797 1805.75,687.797 1806.31,687.797 1806.87,687.797 1807.43,687.797 1807.99,687.797 1808.55,687.797 1809.11,687.797 1809.67,687.797 1810.23,687.797 1810.79,687.797 1811.35,687.797 1811.9,687.797 1812.46,687.797 1813.02,687.797 1813.58,687.797 1814.14,687.797 1814.7,687.797 1815.26,687.797 1815.82,687.797 1816.38,687.797 1816.94,687.797 1817.5,687.797 1818.06,687.797 1818.62,687.797 1819.18,687.797 1819.73,687.797 1820.29,687.797 1820.85,687.797 1821.41,687.797 1821.97,687.797 1822.53,687.797 1823.09,687.797 1823.65,687.797 1824.21,687.797 1824.77,687.797 1825.33,687.797 1825.89,687.797 1826.45,687.797 1827,687.797 1827.56,687.797 1828.12,687.797 1828.68,687.797 1829.24,687.797 1829.8,687.797 1830.36,687.797 1830.92,687.797 1831.48,687.797 1832.04,687.797 1832.6,687.797 1833.16,687.797 1833.72,687.797 1834.27,687.797 1834.83,687.797 1835.39,687.797 1835.95,687.797 1836.51,687.797 1837.07,687.797 1837.63,687.797 1838.19,687.797 \"/>\n<path clip-path=\"url(#clip323)\" d=\"M720.247 684.707 L720.806 684.707 L721.365 684.707 L721.924 684.707 L722.484 684.707 L723.043 684.707 L723.602 684.707 L724.161 684.707 L724.721 684.707 L725.28 684.707 L725.839 684.707 L726.398 684.707 L726.958 684.707 L727.517 684.707 L728.076 684.707 L728.635 684.707 L729.195 684.707 L729.754 684.707 L730.313 684.707 L730.872 684.707 L731.432 684.707 L731.991 684.707 L732.55 684.707 L733.109 684.707 L733.669 684.707 L734.228 684.707 L734.787 684.707 L735.346 684.707 L735.906 684.707 L736.465 684.707 L737.024 684.707 L737.583 684.707 L738.143 684.707 L738.702 684.707 L739.261 684.707 L739.82 684.707 L740.38 684.707 L740.939 684.707 L741.498 684.707 L742.057 684.707 L742.617 684.707 L743.176 684.707 L743.735 684.707 L744.294 684.707 L744.854 684.707 L745.413 684.707 L745.972 684.707 L746.531 684.707 L747.091 684.707 L747.65 684.707 L748.209 684.707 L748.768 684.707 L749.328 684.707 L749.887 684.707 L750.446 684.707 L751.005 684.707 L751.565 684.707 L752.124 684.707 L752.683 684.707 L753.242 684.707 L753.802 684.707 L754.361 684.707 L754.92 684.707 L755.479 684.707 L756.039 684.707 L756.598 684.707 L757.157 684.707 L757.716 684.707 L758.276 684.707 L758.835 684.707 L759.394 684.707 L759.953 684.707 L760.513 684.707 L761.072 684.707 L761.631 684.707 L762.19 684.707 L762.75 684.707 L763.309 684.707 L763.868 684.707 L764.427 684.707 L764.987 684.707 L765.546 684.707 L766.105 684.707 L766.664 684.707 L767.224 684.707 L767.783 684.707 L768.342 684.707 L768.901 684.707 L769.461 684.707 L770.02 684.707 L770.579 684.707 L771.138 684.707 L771.698 684.707 L772.257 684.707 L772.816 684.707 L773.375 684.707 L773.935 684.707 L774.494 684.707 L775.053 684.707 L775.612 684.707 L776.172 684.707 L776.731 684.707 L777.29 684.707 L777.849 684.707 L778.409 684.707 L778.968 684.707 L779.527 684.707 L780.086 684.707 L780.646 684.707 L781.205 684.707 L781.764 684.707 L782.323 684.707 L782.883 684.707 L783.442 684.707 L784.001 684.707 L784.56 684.707 L785.12 684.707 L785.679 684.707 L786.238 684.707 L786.797 684.707 L787.357 684.707 L787.916 684.707 L788.475 684.707 L789.034 684.707 L789.594 684.707 L790.153 684.707 L790.712 684.707 L791.271 684.707 L791.831 684.707 L792.39 684.707 L792.949 684.707 L793.508 684.707 L794.068 684.707 L794.627 684.707 L795.186 684.707 L795.745 684.707 L796.305 684.707 L796.864 684.707 L797.423 684.707 L797.982 684.707 L798.542 684.707 L799.101 684.707 L799.66 684.707 L800.219 684.707 L800.779 684.707 L801.338 684.707 L801.897 684.707 L802.456 684.707 L803.016 684.707 L803.575 684.707 L804.134 684.707 L804.693 684.707 L805.253 684.707 L805.812 684.707 L806.371 684.707 L806.931 684.707 L807.49 684.707 L808.049 684.707 L808.608 684.707 L809.168 684.707 L809.727 684.707 L810.286 684.707 L810.845 684.707 L811.405 684.707 L811.964 684.707 L812.523 684.707 L813.082 684.707 L813.642 684.707 L814.201 684.707 L814.76 684.707 L815.319 684.707 L815.879 684.707 L816.438 684.707 L816.997 684.707 L817.556 684.707 L818.116 684.707 L818.675 684.707 L819.234 684.707 L819.793 684.707 L820.353 684.707 L820.912 684.707 L821.471 684.707 L822.03 684.707 L822.59 684.707 L823.149 684.707 L823.708 684.707 L824.267 684.707 L824.827 684.707 L825.386 684.707 L825.945 684.707 L826.504 684.707 L827.064 684.707 L827.623 684.707 L828.182 684.707 L828.741 684.707 L829.301 684.707 L829.86 684.707 L830.419 684.707 L830.978 684.707 L831.538 684.707 L832.097 684.707 L832.656 684.707 L833.215 684.707 L833.775 684.707 L834.334 684.707 L834.893 684.707 L835.452 684.707 L836.012 684.707 L836.571 684.707 L837.13 684.707 L837.689 684.707 L838.249 684.707 L838.808 684.707 L839.367 684.707 L839.926 684.707 L840.486 684.707 L841.045 684.707 L841.604 684.707 L842.163 684.707 L842.723 684.707 L843.282 684.707 L843.841 684.707 L844.4 684.707 L844.96 684.707 L845.519 684.707 L846.078 684.707 L846.637 684.707 L847.197 684.707 L847.756 684.707 L848.315 684.707 L848.874 684.707 L849.434 684.707 L849.993 684.707 L850.552 684.707 L851.111 684.707 L851.671 684.707 L852.23 684.707 L852.789 684.707 L853.348 684.707 L853.908 684.707 L854.467 684.707 L855.026 684.707 L855.585 684.707 L856.145 684.707 L856.704 684.707 L857.263 684.707 L857.822 684.707 L858.382 684.707 L858.941 684.707 L859.5 684.707 L860.059 684.707 L860.619 684.707 L861.178 684.707 L861.737 684.707 L862.296 684.707 L862.856 684.707 L863.415 684.707 L863.974 684.707 L864.533 684.707 L865.093 684.707 L865.652 684.707 L866.211 684.707 L866.77 684.707 L867.33 684.707 L867.889 684.707 L868.448 684.707 L869.007 684.707 L869.567 684.707 L870.126 684.707 L870.685 684.707 L871.244 684.707 L871.804 684.707 L872.363 684.707 L872.922 684.707 L873.481 684.707 L874.041 684.707 L874.6 684.707 L875.159 684.707 L875.718 684.707 L876.278 684.707 L876.837 684.707 L877.396 684.707 L877.955 684.707 L878.515 684.707 L879.074 684.707 L879.633 684.707 L880.192 684.707 L880.752 684.707 L881.311 684.707 L881.87 684.707 L882.429 684.707 L882.989 684.707 L883.548 684.707 L884.107 684.707 L884.666 684.707 L885.226 684.707 L885.785 684.707 L886.344 684.707 L886.903 684.707 L887.463 684.707 L888.022 684.707 L888.581 684.707 L889.14 684.707 L889.7 684.707 L890.259 684.707 L890.818 684.707 L891.377 684.707 L891.937 684.707 L892.496 684.707 L893.055 684.707 L893.614 684.707 L894.174 684.707 L894.733 684.707 L895.292 684.707 L895.851 684.707 L896.411 684.707 L896.97 684.707 L897.529 684.707 L898.088 684.707 L898.648 684.707 L899.207 684.707 L899.766 684.707 L900.325 684.707 L900.885 684.707 L901.444 684.707 L902.003 684.707 L902.562 684.707 L903.122 684.707 L903.681 684.707 L904.24 684.707 L904.799 684.707 L905.359 684.707 L905.918 684.707 L906.477 684.707 L907.036 684.707 L907.596 684.707 L908.155 684.707 L908.714 684.707 L909.273 684.707 L909.833 684.707 L910.392 684.707 L910.951 684.707 L911.51 684.707 L912.07 684.707 L912.629 684.707 L913.188 684.707 L913.747 684.707 L914.307 684.707 L914.866 684.707 L915.425 684.707 L915.984 684.707 L916.544 684.707 L917.103 684.707 L917.662 684.707 L918.221 684.707 L918.781 684.707 L919.34 684.707 L919.899 684.707 L920.458 684.707 L921.018 684.707 L921.577 684.707 L922.136 684.707 L922.695 684.707 L923.255 684.707 L923.814 684.707 L924.373 684.707 L924.932 684.707 L925.492 684.707 L926.051 684.707 L926.61 684.707 L927.169 684.707 L927.729 684.707 L928.288 684.707 L928.847 684.707 L929.406 684.707 L929.966 684.707 L930.525 684.707 L931.084 684.707 L931.644 684.707 L932.203 684.707 L932.762 684.707 L933.321 684.707 L933.881 684.707 L934.44 684.707 L934.999 684.707 L935.558 684.707 L936.118 684.707 L936.677 684.707 L937.236 684.707 L937.795 684.707 L938.355 684.707 L938.914 684.707 L939.473 684.707 L940.032 684.707 L940.592 684.707 L941.151 684.707 L941.71 684.707 L942.269 684.707 L942.829 684.707 L943.388 684.707 L943.947 684.707 L944.506 684.707 L945.066 684.707 L945.625 684.707 L946.184 684.707 L946.743 684.707 L947.303 684.707 L947.862 684.707 L948.421 684.707 L948.98 684.707 L949.54 684.707 L950.099 684.707 L950.658 684.707 L951.217 684.707 L951.777 684.707 L952.336 684.707 L952.895 684.707 L953.454 684.707 L954.014 684.707 L954.573 684.707 L955.132 684.707 L955.691 684.707 L956.251 684.707 L956.81 684.707 L957.369 684.707 L957.928 684.707 L958.488 684.707 L959.047 684.707 L959.606 684.707 L960.165 684.707 L960.725 684.707 L961.284 684.707 L961.843 684.707 L962.402 684.707 L962.962 684.707 L963.521 684.707 L964.08 684.707 L964.639 684.707 L965.199 684.707 L965.758 684.707 L966.317 684.707 L966.876 684.707 L967.436 684.707 L967.995 684.707 L968.554 684.707 L969.113 684.707 L969.673 684.707 L970.232 684.707 L970.791 684.707 L971.35 684.707 L971.91 684.707 L972.469 684.707 L973.028 684.707 L973.587 684.707 L974.147 684.707 L974.706 684.707 L975.265 684.707 L975.824 684.707 L976.384 684.707 L976.943 684.707 L977.502 684.707 L978.061 684.707 L978.621 684.707 L979.18 684.707 L979.739 684.707 L980.298 684.707 L980.858 684.707 L981.417 684.707 L981.976 684.707 L982.535 684.707 L983.095 684.707 L983.654 684.707 L984.213 684.707 L984.772 684.707 L985.332 684.707 L985.891 684.707 L986.45 684.707 L987.009 684.707 L987.569 684.707 L988.128 684.707 L988.687 684.707 L989.246 684.707 L989.806 684.707 L990.365 684.707 L990.924 684.707 L991.483 684.707 L992.043 684.707 L992.602 684.707 L993.161 684.707 L993.72 684.707 L994.28 684.707 L994.839 684.707 L995.398 684.707 L995.957 684.707 L996.517 684.707 L997.076 684.707 L997.635 684.707 L998.194 684.707 L998.754 684.707 L999.313 684.707 L999.872 684.707 L1000.43 684.707 L1000.99 684.707 L1001.55 684.707 L1002.11 684.707 L1002.67 684.707 L1003.23 684.707 L1003.79 684.707 L1004.35 684.707 L1004.91 684.707 L1005.46 684.707 L1006.02 684.707 L1006.58 684.707 L1007.14 684.707 L1007.7 684.707 L1008.26 684.707 L1008.82 684.707 L1009.38 684.707 L1009.94 684.707 L1010.5 684.707 L1011.06 684.707 L1011.62 684.707 L1012.18 684.707 L1012.73 684.707 L1013.29 684.707 L1013.85 684.707 L1014.41 684.707 L1014.97 684.707 L1015.53 684.707 L1016.09 684.707 L1016.65 684.707 L1017.21 684.707 L1017.77 684.707 L1018.33 684.707 L1018.89 684.707 L1019.45 684.707 L1020.01 684.707 L1020.56 684.707 L1021.12 684.707 L1021.68 684.707 L1022.24 684.707 L1022.8 684.707 L1023.36 684.707 L1023.92 684.707 L1024.48 684.707 L1025.04 684.707 L1025.6 684.707 L1026.16 684.707 L1026.72 684.707 L1027.28 684.707 L1027.83 684.707 L1028.39 684.707 L1028.95 684.707 L1029.51 684.707 L1030.07 684.707 L1030.63 684.707 L1031.19 684.707 L1031.75 684.707 L1032.31 684.707 L1032.87 684.707 L1033.43 684.707 L1033.99 684.707 L1034.55 684.707 L1035.1 684.707 L1035.66 684.707 L1036.22 684.707 L1036.78 684.707 L1037.34 684.707 L1037.9 684.707 L1038.46 684.707 L1039.02 684.707 L1039.58 684.707 L1040.14 684.707 L1040.7 684.707 L1041.26 684.707 L1041.82 684.707 L1042.38 684.707 L1042.93 684.707 L1043.49 684.707 L1044.05 684.707 L1044.61 684.707 L1045.17 684.707 L1045.73 684.707 L1046.29 684.707 L1046.85 684.707 L1047.41 684.707 L1047.97 684.707 L1048.53 684.707 L1049.09 684.707 L1049.65 684.707 L1050.2 684.707 L1050.76 684.707 L1051.32 684.707 L1051.88 684.707 L1052.44 684.707 L1053 684.707 L1053.56 684.707 L1054.12 684.707 L1054.68 684.707 L1055.24 684.707 L1055.8 684.707 L1056.36 684.707 L1056.92 684.707 L1057.48 684.707 L1058.03 684.707 L1058.59 684.707 L1059.15 684.707 L1059.71 684.707 L1060.27 684.707 L1060.83 684.707 L1061.39 684.707 L1061.95 684.707 L1062.51 684.707 L1063.07 684.707 L1063.63 684.707 L1064.19 684.707 L1064.75 684.707 L1065.3 684.707 L1065.86 684.707 L1066.42 684.707 L1066.98 684.707 L1067.54 684.707 L1068.1 684.707 L1068.66 684.707 L1069.22 684.707 L1069.78 684.707 L1070.34 684.707 L1070.9 684.707 L1071.46 684.707 L1072.02 684.707 L1072.57 684.707 L1073.13 684.707 L1073.69 684.707 L1074.25 684.707 L1074.81 684.707 L1075.37 684.707 L1075.93 684.707 L1076.49 684.707 L1077.05 684.707 L1077.61 684.707 L1078.17 684.707 L1078.73 684.707 L1079.29 684.707 L1079.85 684.707 L1080.4 684.707 L1080.96 684.707 L1081.52 684.707 L1082.08 684.707 L1082.64 684.707 L1083.2 684.707 L1083.76 684.707 L1084.32 684.707 L1084.88 684.707 L1085.44 684.707 L1086 684.707 L1086.56 684.707 L1087.12 684.707 L1087.67 684.707 L1088.23 684.707 L1088.79 684.707 L1089.35 684.707 L1089.91 684.707 L1090.47 684.707 L1091.03 684.707 L1091.59 684.707 L1092.15 684.707 L1092.71 684.707 L1093.27 684.707 L1093.83 684.707 L1094.39 684.707 L1094.94 684.707 L1095.5 684.707 L1096.06 684.707 L1096.62 684.707 L1097.18 684.707 L1097.74 684.707 L1098.3 684.707 L1098.86 684.707 L1099.42 684.707 L1099.98 684.707 L1100.54 684.707 L1101.1 684.707 L1101.66 684.707 L1102.22 684.707 L1102.77 684.707 L1103.33 684.707 L1103.89 684.707 L1104.45 684.707 L1105.01 684.707 L1105.57 684.707 L1106.13 684.707 L1106.69 684.707 L1107.25 684.707 L1107.81 684.707 L1108.37 684.707 L1108.93 684.707 L1109.49 684.707 L1110.04 684.707 L1110.6 684.707 L1111.16 684.707 L1111.72 684.707 L1112.28 684.707 L1112.84 684.707 L1113.4 684.707 L1113.96 684.707 L1114.52 684.707 L1115.08 684.707 L1115.64 684.707 L1116.2 684.707 L1116.76 684.707 L1117.31 684.707 L1117.87 684.707 L1118.43 684.707 L1118.99 684.707 L1119.55 684.707 L1120.11 684.707 L1120.67 684.707 L1121.23 684.707 L1121.79 684.707 L1122.35 684.707 L1122.91 684.707 L1123.47 684.707 L1124.03 684.707 L1124.59 684.707 L1125.14 684.707 L1125.7 684.707 L1126.26 684.707 L1126.82 684.707 L1127.38 684.707 L1127.94 684.707 L1128.5 684.707 L1129.06 684.707 L1129.62 684.707 L1130.18 684.707 L1130.74 684.707 L1131.3 684.707 L1131.86 684.707 L1132.41 684.707 L1132.97 684.707 L1133.53 684.707 L1134.09 684.707 L1134.65 684.707 L1135.21 684.707 L1135.77 684.707 L1136.33 684.707 L1136.89 684.707 L1137.45 684.707 L1138.01 684.707 L1138.57 684.707 L1139.13 684.707 L1139.68 684.707 L1140.24 684.707 L1140.8 684.707 L1141.36 684.707 L1141.92 684.707 L1142.48 684.707 L1143.04 684.707 L1143.6 684.707 L1144.16 684.707 L1144.72 684.707 L1145.28 684.707 L1145.84 684.707 L1146.4 684.707 L1146.96 684.707 L1147.51 684.707 L1148.07 684.707 L1148.63 684.707 L1149.19 684.707 L1149.75 684.707 L1150.31 684.707 L1150.87 684.707 L1151.43 684.707 L1151.99 684.707 L1152.55 684.707 L1153.11 684.707 L1153.67 684.707 L1154.23 684.707 L1154.78 684.707 L1155.34 684.707 L1155.9 684.707 L1156.46 684.707 L1157.02 684.707 L1157.58 684.707 L1158.14 684.707 L1158.7 684.707 L1159.26 684.707 L1159.82 684.707 L1160.38 684.707 L1160.94 684.707 L1161.5 684.707 L1162.05 684.707 L1162.61 684.707 L1163.17 684.707 L1163.73 684.707 L1164.29 684.707 L1164.85 684.707 L1165.41 684.707 L1165.97 684.707 L1166.53 684.707 L1167.09 684.707 L1167.65 684.707 L1168.21 684.707 L1168.77 684.707 L1169.33 684.707 L1169.88 684.707 L1170.44 684.707 L1171 684.707 L1171.56 684.707 L1172.12 684.707 L1172.68 684.707 L1173.24 684.707 L1173.8 684.707 L1174.36 684.707 L1174.92 684.707 L1175.48 684.707 L1176.04 684.707 L1176.6 684.707 L1177.15 684.707 L1177.71 684.707 L1178.27 684.707 L1178.83 684.707 L1179.39 684.707 L1179.95 684.707 L1180.51 684.707 L1181.07 684.707 L1181.63 684.707 L1182.19 684.707 L1182.75 684.707 L1183.31 684.707 L1183.87 684.707 L1184.43 684.707 L1184.98 684.707 L1185.54 684.707 L1186.1 684.707 L1186.66 684.707 L1187.22 684.707 L1187.78 684.707 L1188.34 684.707 L1188.9 684.707 L1189.46 684.707 L1190.02 684.707 L1190.58 684.707 L1191.14 684.707 L1191.7 684.707 L1192.25 684.707 L1192.81 684.707 L1193.37 684.707 L1193.93 684.707 L1194.49 684.707 L1195.05 684.707 L1195.61 684.707 L1196.17 684.707 L1196.73 684.707 L1197.29 684.707 L1197.85 684.707 L1198.41 684.707 L1198.97 684.707 L1199.52 684.707 L1200.08 684.707 L1200.64 684.707 L1201.2 684.707 L1201.76 684.707 L1202.32 684.707 L1202.88 684.707 L1203.44 684.707 L1204 684.707 L1204.56 684.707 L1205.12 684.707 L1205.68 684.707 L1206.24 684.707 L1206.8 684.707 L1207.35 684.707 L1207.91 684.707 L1208.47 684.707 L1209.03 684.707 L1209.59 684.707 L1210.15 684.707 L1210.71 684.707 L1211.27 684.707 L1211.83 684.707 L1212.39 684.707 L1212.95 684.707 L1213.51 684.707 L1214.07 684.707 L1214.62 684.707 L1215.18 684.707 L1215.74 684.707 L1216.3 684.707 L1216.86 684.707 L1217.42 684.707 L1217.98 684.707 L1218.54 684.707 L1219.1 684.707 L1219.66 684.707 L1220.22 684.707 L1220.78 684.707 L1221.34 684.707 L1221.89 684.707 L1222.45 684.707 L1223.01 684.707 L1223.57 684.707 L1224.13 684.707 L1224.69 684.707 L1225.25 684.707 L1225.81 684.707 L1226.37 684.707 L1226.93 684.707 L1227.49 684.707 L1228.05 684.707 L1228.61 684.707 L1229.17 684.707 L1229.72 684.707 L1230.28 684.707 L1230.84 684.707 L1231.4 684.707 L1231.96 684.707 L1232.52 684.707 L1233.08 684.707 L1233.64 684.707 L1234.2 684.707 L1234.76 684.707 L1235.32 684.707 L1235.88 684.707 L1236.44 684.707 L1236.99 684.707 L1237.55 684.707 L1238.11 684.707 L1238.67 684.707 L1239.23 684.707 L1239.79 684.707 L1240.35 684.707 L1240.91 684.707 L1241.47 684.707 L1242.03 684.707 L1242.59 684.707 L1243.15 684.707 L1243.71 684.707 L1244.26 684.707 L1244.82 684.707 L1245.38 684.707 L1245.94 684.707 L1246.5 684.707 L1247.06 684.707 L1247.62 684.707 L1248.18 684.707 L1248.74 684.707 L1249.3 684.707 L1249.86 684.707 L1250.42 684.707 L1250.98 684.707 L1251.54 684.707 L1252.09 684.707 L1252.65 684.707 L1253.21 684.707 L1253.77 684.707 L1254.33 684.707 L1254.89 684.707 L1255.45 684.707 L1256.01 684.707 L1256.57 684.707 L1257.13 684.707 L1257.69 684.707 L1258.25 684.707 L1258.81 684.707 L1259.36 684.707 L1259.92 684.707 L1260.48 684.707 L1261.04 684.707 L1261.6 684.707 L1262.16 684.707 L1262.72 684.707 L1263.28 684.707 L1263.84 684.707 L1264.4 684.707 L1264.96 684.707 L1265.52 684.707 L1266.08 684.707 L1266.63 684.707 L1267.19 684.707 L1267.75 684.707 L1268.31 684.707 L1268.87 684.707 L1269.43 684.707 L1269.99 684.707 L1270.55 684.707 L1271.11 684.707 L1271.67 684.707 L1272.23 684.707 L1272.79 684.707 L1273.35 684.707 L1273.91 684.707 L1274.46 684.707 L1275.02 684.707 L1275.58 684.707 L1276.14 684.707 L1276.7 684.707 L1277.26 684.707 L1277.82 684.707 L1278.38 684.707 L1278.94 684.707 L1279.5 684.707 L1280.06 684.707 L1280.62 684.707 L1281.18 684.707 L1281.73 684.707 L1282.29 684.707 L1282.85 684.707 L1283.41 684.707 L1283.97 684.707 L1284.53 684.707 L1285.09 684.707 L1285.65 684.707 L1286.21 684.707 L1286.77 684.707 L1287.33 684.707 L1287.89 684.707 L1288.45 684.707 L1289 684.707 L1289.56 684.707 L1290.12 684.707 L1290.68 684.707 L1291.24 684.707 L1291.8 684.707 L1292.36 684.707 L1292.92 684.707 L1293.48 684.707 L1294.04 684.707 L1294.6 684.707 L1295.16 684.707 L1295.72 684.707 L1296.28 684.707 L1296.83 684.707 L1297.39 684.707 L1297.95 684.707 L1298.51 684.707 L1299.07 684.707 L1299.63 684.707 L1300.19 684.707 L1300.75 684.707 L1301.31 684.707 L1301.87 684.707 L1302.43 684.707 L1302.99 684.707 L1303.55 684.707 L1304.1 684.707 L1304.66 684.707 L1305.22 684.707 L1305.78 684.707 L1306.34 684.707 L1306.9 684.707 L1307.46 684.707 L1308.02 684.707 L1308.58 684.707 L1309.14 684.707 L1309.7 684.707 L1310.26 684.707 L1310.82 684.707 L1311.38 684.707 L1311.93 684.707 L1312.49 684.707 L1313.05 684.707 L1313.61 684.707 L1314.17 684.707 L1314.73 684.707 L1315.29 684.707 L1315.85 684.707 L1316.41 684.707 L1316.97 684.707 L1317.53 684.707 L1318.09 684.707 L1318.65 684.707 L1319.2 684.707 L1319.76 684.707 L1320.32 684.707 L1320.88 684.707 L1321.44 684.707 L1322 684.707 L1322.56 684.707 L1323.12 684.707 L1323.68 684.707 L1324.24 684.707 L1324.8 684.707 L1325.36 684.707 L1325.92 684.707 L1326.47 684.707 L1327.03 684.707 L1327.59 684.707 L1328.15 684.707 L1328.71 684.707 L1329.27 684.707 L1329.83 684.707 L1330.39 684.707 L1330.95 684.707 L1331.51 684.707 L1332.07 684.707 L1332.63 684.707 L1333.19 684.707 L1333.75 684.707 L1334.3 684.707 L1334.86 684.707 L1335.42 684.707 L1335.98 684.707 L1336.54 684.707 L1337.1 684.707 L1337.66 684.707 L1338.22 684.707 L1338.78 684.707 L1339.34 684.707 L1339.9 684.707 L1340.46 684.707 L1341.02 684.707 L1341.57 684.707 L1342.13 684.707 L1342.69 684.707 L1343.25 684.707 L1343.81 684.707 L1344.37 684.707 L1344.93 684.707 L1345.49 684.707 L1346.05 684.707 L1346.61 684.707 L1347.17 684.707 L1347.73 684.707 L1348.29 684.707 L1348.84 684.707 L1349.4 684.707 L1349.96 684.707 L1350.52 684.707 L1351.08 684.707 L1351.64 684.707 L1352.2 684.707 L1352.76 684.707 L1353.32 684.707 L1353.88 684.707 L1354.44 684.707 L1355 684.707 L1355.56 684.707 L1356.12 684.707 L1356.67 684.707 L1357.23 684.707 L1357.79 684.707 L1358.35 684.707 L1358.91 684.707 L1359.47 684.707 L1360.03 684.707 L1360.59 684.707 L1361.15 684.707 L1361.71 684.707 L1362.27 684.707 L1362.83 684.707 L1363.39 684.707 L1363.94 684.707 L1364.5 684.707 L1365.06 684.707 L1365.62 684.707 L1366.18 684.707 L1366.74 684.707 L1367.3 684.707 L1367.86 684.707 L1368.42 684.707 L1368.98 684.707 L1369.54 684.707 L1370.1 684.707 L1370.66 684.707 L1371.21 684.707 L1371.77 684.707 L1372.33 684.707 L1372.89 684.707 L1373.45 684.707 L1374.01 684.707 L1374.57 684.707 L1375.13 684.707 L1375.69 684.707 L1376.25 684.707 L1376.81 684.707 L1377.37 684.707 L1377.93 684.707 L1378.49 684.707 L1379.04 684.707 L1379.6 684.707 L1380.16 684.707 L1380.72 684.707 L1381.28 684.707 L1381.84 684.707 L1382.4 684.707 L1382.96 684.707 L1383.52 684.707 L1384.08 684.707 L1384.64 684.707 L1385.2 684.707 L1385.76 684.707 L1386.31 684.707 L1386.87 684.707 L1387.43 684.707 L1387.99 684.707 L1388.55 684.707 L1389.11 684.707 L1389.67 684.707 L1390.23 684.707 L1390.79 684.707 L1391.35 684.707 L1391.91 684.707 L1392.47 684.707 L1393.03 684.707 L1393.58 684.707 L1394.14 684.707 L1394.7 684.707 L1395.26 684.707 L1395.82 684.707 L1396.38 684.707 L1396.94 684.707 L1397.5 684.707 L1398.06 684.707 L1398.62 684.707 L1399.18 684.707 L1399.74 684.707 L1400.3 684.707 L1400.86 684.707 L1401.41 684.707 L1401.97 684.707 L1402.53 684.707 L1403.09 684.707 L1403.65 684.707 L1404.21 684.707 L1404.77 684.707 L1405.33 684.707 L1405.89 684.707 L1406.45 684.707 L1407.01 684.707 L1407.57 684.707 L1408.13 684.707 L1408.68 684.707 L1409.24 684.707 L1409.8 684.707 L1410.36 684.707 L1410.92 684.707 L1411.48 684.707 L1412.04 684.707 L1412.6 684.707 L1413.16 684.707 L1413.72 684.707 L1414.28 684.707 L1414.84 684.707 L1415.4 684.707 L1415.95 684.707 L1416.51 684.707 L1417.07 684.707 L1417.63 684.707 L1418.19 684.707 L1418.75 684.707 L1419.31 684.707 L1419.87 684.707 L1420.43 684.707 L1420.99 684.707 L1421.55 684.707 L1422.11 684.707 L1422.67 684.707 L1423.23 684.707 L1423.78 684.707 L1424.34 684.707 L1424.9 684.707 L1425.46 684.707 L1426.02 684.707 L1426.58 684.707 L1427.14 684.707 L1427.7 684.707 L1428.26 684.707 L1428.82 684.707 L1429.38 684.707 L1429.94 684.707 L1430.5 684.707 L1431.05 684.707 L1431.61 684.707 L1432.17 684.707 L1432.73 684.707 L1433.29 684.707 L1433.85 684.707 L1434.41 684.707 L1434.97 684.707 L1435.53 684.707 L1436.09 684.707 L1436.65 684.707 L1437.21 684.707 L1437.77 684.707 L1438.33 684.707 L1438.88 684.707 L1439.44 684.707 L1440 684.707 L1440.56 684.707 L1441.12 684.707 L1441.68 684.707 L1442.24 684.707 L1442.8 684.707 L1443.36 684.707 L1443.92 684.707 L1444.48 684.707 L1445.04 684.707 L1445.6 684.707 L1446.15 684.707 L1446.71 684.707 L1447.27 684.707 L1447.83 684.707 L1448.39 684.707 L1448.95 684.707 L1449.51 684.707 L1450.07 684.707 L1450.63 684.707 L1451.19 684.707 L1451.75 684.707 L1452.31 684.707 L1452.87 684.707 L1453.42 684.707 L1453.98 684.707 L1454.54 684.707 L1455.1 684.707 L1455.66 684.707 L1456.22 684.707 L1456.78 684.707 L1457.34 684.707 L1457.9 684.707 L1458.46 684.707 L1459.02 684.707 L1459.58 684.707 L1460.14 684.707 L1460.7 684.707 L1461.25 684.707 L1461.81 684.707 L1462.37 684.707 L1462.93 684.707 L1463.49 684.707 L1464.05 684.707 L1464.61 684.707 L1465.17 684.707 L1465.73 684.707 L1466.29 684.707 L1466.85 684.707 L1467.41 684.707 L1467.97 684.707 L1468.52 684.707 L1469.08 684.707 L1469.64 684.707 L1470.2 684.707 L1470.76 684.707 L1471.32 684.707 L1471.88 684.707 L1472.44 684.707 L1473 684.707 L1473.56 684.707 L1474.12 684.707 L1474.68 684.707 L1475.24 684.707 L1475.79 684.707 L1476.35 684.707 L1476.91 684.707 L1477.47 684.707 L1478.03 684.707 L1478.59 684.707 L1479.15 684.707 L1479.71 684.707 L1480.27 684.707 L1480.83 684.707 L1481.39 684.707 L1481.95 684.707 L1482.51 684.707 L1483.07 684.707 L1483.62 684.707 L1484.18 684.707 L1484.74 684.707 L1485.3 684.707 L1485.86 684.707 L1486.42 684.707 L1486.98 684.707 L1487.54 684.707 L1488.1 684.707 L1488.66 684.707 L1489.22 684.707 L1489.78 684.707 L1490.34 684.707 L1490.89 684.707 L1491.45 684.707 L1492.01 684.707 L1492.57 684.707 L1493.13 684.707 L1493.69 684.707 L1494.25 684.707 L1494.81 684.707 L1495.37 684.707 L1495.93 684.707 L1496.49 684.707 L1497.05 684.707 L1497.61 684.707 L1498.16 684.707 L1498.72 684.707 L1499.28 684.707 L1499.84 684.707 L1500.4 684.707 L1500.96 684.707 L1501.52 684.707 L1502.08 684.707 L1502.64 684.707 L1503.2 684.707 L1503.76 684.707 L1504.32 684.707 L1504.88 684.707 L1505.44 684.707 L1505.99 684.707 L1506.55 684.707 L1507.11 684.707 L1507.67 684.707 L1508.23 684.707 L1508.79 684.707 L1509.35 684.707 L1509.91 684.707 L1510.47 684.707 L1511.03 684.707 L1511.59 684.707 L1512.15 684.707 L1512.71 684.707 L1513.26 684.707 L1513.82 684.707 L1514.38 684.707 L1514.94 684.707 L1515.5 684.707 L1516.06 684.707 L1516.62 684.707 L1517.18 684.707 L1517.74 684.707 L1518.3 684.707 L1518.86 684.707 L1519.42 684.707 L1519.98 684.707 L1520.53 684.707 L1521.09 684.707 L1521.65 684.707 L1522.21 684.707 L1522.77 684.707 L1523.33 684.707 L1523.89 684.707 L1524.45 684.707 L1525.01 684.707 L1525.57 684.707 L1526.13 684.707 L1526.69 684.707 L1527.25 684.707 L1527.81 684.707 L1528.36 684.707 L1528.92 684.707 L1529.48 684.707 L1530.04 684.707 L1530.6 684.707 L1531.16 684.707 L1531.72 684.707 L1532.28 684.707 L1532.84 684.707 L1533.4 684.707 L1533.96 684.707 L1534.52 684.707 L1535.08 684.707 L1535.63 684.707 L1536.19 684.707 L1536.75 684.707 L1537.31 684.707 L1537.87 684.707 L1538.43 684.707 L1538.99 684.707 L1539.55 684.707 L1540.11 684.707 L1540.67 684.707 L1541.23 684.707 L1541.79 684.707 L1542.35 684.707 L1542.9 684.707 L1543.46 684.707 L1544.02 684.707 L1544.58 684.707 L1545.14 684.707 L1545.7 684.707 L1546.26 684.707 L1546.82 684.707 L1547.38 684.707 L1547.94 684.707 L1548.5 684.707 L1549.06 684.707 L1549.62 684.707 L1550.18 684.707 L1550.73 684.707 L1551.29 684.707 L1551.85 684.707 L1552.41 684.707 L1552.97 684.707 L1553.53 684.707 L1554.09 684.707 L1554.65 684.707 L1555.21 684.707 L1555.77 684.707 L1556.33 684.707 L1556.89 684.707 L1557.45 684.707 L1558 684.707 L1558.56 684.707 L1559.12 684.707 L1559.68 684.707 L1560.24 684.707 L1560.8 684.707 L1561.36 684.707 L1561.92 684.707 L1562.48 684.707 L1563.04 684.707 L1563.6 684.707 L1564.16 684.707 L1564.72 684.707 L1565.28 684.707 L1565.83 684.707 L1566.39 684.707 L1566.95 684.707 L1567.51 684.707 L1568.07 684.707 L1568.63 684.707 L1569.19 684.707 L1569.75 684.707 L1570.31 684.707 L1570.87 684.707 L1571.43 684.707 L1571.99 684.707 L1572.55 684.707 L1573.1 684.707 L1573.66 684.707 L1574.22 684.707 L1574.78 684.707 L1575.34 684.707 L1575.9 684.707 L1576.46 684.707 L1577.02 684.707 L1577.58 684.707 L1578.14 684.707 L1578.7 684.707 L1579.26 684.707 L1579.82 684.707 L1580.37 684.707 L1580.93 684.707 L1581.49 684.707 L1582.05 684.707 L1582.61 684.707 L1583.17 684.707 L1583.73 684.707 L1584.29 684.707 L1584.85 684.707 L1585.41 684.707 L1585.97 684.707 L1586.53 684.707 L1587.09 684.707 L1587.65 684.707 L1588.2 684.707 L1588.76 684.707 L1589.32 684.707 L1589.88 684.707 L1590.44 684.707 L1591 684.707 L1591.56 684.707 L1592.12 684.707 L1592.68 684.707 L1593.24 684.707 L1593.8 684.707 L1594.36 684.707 L1594.92 684.707 L1595.47 684.707 L1596.03 684.707 L1596.59 684.707 L1597.15 684.707 L1597.71 684.707 L1598.27 684.707 L1598.83 684.707 L1599.39 684.707 L1599.95 684.707 L1600.51 684.707 L1601.07 684.707 L1601.63 684.707 L1602.19 684.707 L1602.74 684.707 L1603.3 684.707 L1603.86 684.707 L1604.42 684.707 L1604.98 684.707 L1605.54 684.707 L1606.1 684.707 L1606.66 684.707 L1607.22 684.707 L1607.78 684.707 L1608.34 684.707 L1608.9 684.707 L1609.46 684.707 L1610.02 684.707 L1610.57 684.707 L1611.13 684.707 L1611.69 684.707 L1612.25 684.707 L1612.81 684.707 L1613.37 684.707 L1613.93 684.707 L1614.49 684.707 L1615.05 684.707 L1615.61 684.707 L1616.17 684.707 L1616.73 684.707 L1617.29 684.707 L1617.84 684.707 L1618.4 684.707 L1618.96 684.707 L1619.52 684.707 L1620.08 684.707 L1620.64 684.707 L1621.2 684.707 L1621.76 684.707 L1622.32 684.707 L1622.88 684.707 L1623.44 684.707 L1624 684.707 L1624.56 684.707 L1625.11 684.707 L1625.67 684.707 L1626.23 684.707 L1626.79 684.707 L1627.35 684.707 L1627.91 684.707 L1628.47 684.707 L1629.03 684.707 L1629.59 684.707 L1630.15 684.707 L1630.71 684.707 L1631.27 684.707 L1631.83 684.707 L1632.39 684.707 L1632.94 684.707 L1633.5 684.707 L1634.06 684.707 L1634.62 684.707 L1635.18 684.707 L1635.74 684.707 L1636.3 684.707 L1636.86 684.707 L1637.42 684.707 L1637.98 684.707 L1638.54 684.707 L1639.1 684.707 L1639.66 684.707 L1640.21 684.707 L1640.77 684.707 L1641.33 684.707 L1641.89 684.707 L1642.45 684.707 L1643.01 684.707 L1643.57 684.707 L1644.13 684.707 L1644.69 684.707 L1645.25 684.707 L1645.81 684.707 L1646.37 684.707 L1646.93 684.707 L1647.48 684.707 L1648.04 684.707 L1648.6 684.707 L1649.16 684.707 L1649.72 684.707 L1650.28 684.707 L1650.84 684.707 L1651.4 684.707 L1651.96 684.707 L1652.52 684.707 L1653.08 684.707 L1653.64 684.707 L1654.2 684.707 L1654.76 684.707 L1655.31 684.707 L1655.87 684.707 L1656.43 684.707 L1656.99 684.707 L1657.55 684.707 L1658.11 684.707 L1658.67 684.707 L1659.23 684.707 L1659.79 684.707 L1660.35 684.707 L1660.91 684.707 L1661.47 684.707 L1662.03 684.707 L1662.58 684.707 L1663.14 684.707 L1663.7 684.707 L1664.26 684.707 L1664.82 684.707 L1665.38 684.707 L1665.94 684.707 L1666.5 684.707 L1667.06 684.707 L1667.62 684.707 L1668.18 684.707 L1668.74 684.707 L1669.3 684.707 L1669.85 684.707 L1670.41 684.707 L1670.97 684.707 L1671.53 684.707 L1672.09 684.707 L1672.65 684.707 L1673.21 684.707 L1673.77 684.707 L1674.33 684.707 L1674.89 684.707 L1675.45 684.707 L1676.01 684.707 L1676.57 684.707 L1677.13 684.707 L1677.68 684.707 L1678.24 684.707 L1678.8 684.707 L1679.36 684.707 L1679.92 684.707 L1680.48 684.707 L1681.04 684.707 L1681.6 684.707 L1682.16 684.707 L1682.72 684.707 L1683.28 684.707 L1683.84 684.707 L1684.4 684.707 L1684.95 684.707 L1685.51 684.707 L1686.07 684.707 L1686.63 684.707 L1687.19 684.707 L1687.75 684.707 L1688.31 684.707 L1688.87 684.707 L1689.43 684.707 L1689.99 684.707 L1690.55 684.707 L1691.11 684.707 L1691.67 684.707 L1692.23 684.707 L1692.78 684.707 L1693.34 684.707 L1693.9 684.707 L1694.46 684.707 L1695.02 684.707 L1695.58 684.707 L1696.14 684.707 L1696.7 684.707 L1697.26 684.707 L1697.82 684.707 L1698.38 684.707 L1698.94 684.707 L1699.5 684.707 L1700.05 684.707 L1700.61 684.707 L1701.17 684.707 L1701.73 684.707 L1702.29 684.707 L1702.85 684.707 L1703.41 684.707 L1703.97 684.707 L1704.53 684.707 L1705.09 684.707 L1705.65 684.707 L1706.21 684.707 L1706.77 684.707 L1707.32 684.707 L1707.88 684.707 L1708.44 684.707 L1709 684.707 L1709.56 684.707 L1710.12 684.707 L1710.68 684.707 L1711.24 684.707 L1711.8 684.707 L1712.36 684.707 L1712.92 684.707 L1713.48 684.707 L1714.04 684.707 L1714.6 684.707 L1715.15 684.707 L1715.71 684.707 L1716.27 684.707 L1716.83 684.707 L1717.39 684.707 L1717.95 684.707 L1718.51 684.707 L1719.07 684.707 L1719.63 684.707 L1720.19 684.707 L1720.75 684.707 L1721.31 684.707 L1721.87 684.707 L1722.42 684.707 L1722.98 684.707 L1723.54 684.707 L1724.1 684.707 L1724.66 684.707 L1725.22 684.707 L1725.78 684.707 L1726.34 684.707 L1726.9 684.707 L1727.46 684.707 L1728.02 684.707 L1728.58 684.707 L1729.14 684.707 L1729.69 684.707 L1730.25 684.707 L1730.81 684.707 L1731.37 684.707 L1731.93 684.707 L1732.49 684.707 L1733.05 684.707 L1733.61 684.707 L1734.17 684.707 L1734.73 684.707 L1735.29 684.707 L1735.85 684.707 L1736.41 684.707 L1736.97 684.707 L1737.52 684.707 L1738.08 684.707 L1738.64 684.707 L1739.2 684.707 L1739.76 684.707 L1740.32 684.707 L1740.88 684.707 L1741.44 684.707 L1742 684.707 L1742.56 684.707 L1743.12 684.707 L1743.68 684.707 L1744.24 684.707 L1744.79 684.707 L1745.35 684.707 L1745.91 684.707 L1746.47 684.707 L1747.03 684.707 L1747.59 684.707 L1748.15 684.707 L1748.71 684.707 L1749.27 684.707 L1749.83 684.707 L1750.39 684.707 L1750.95 684.707 L1751.51 684.707 L1752.06 684.707 L1752.62 684.707 L1753.18 684.707 L1753.74 684.707 L1754.3 684.707 L1754.86 684.707 L1755.42 684.707 L1755.98 684.707 L1756.54 684.707 L1757.1 684.707 L1757.66 684.707 L1758.22 684.707 L1758.78 684.707 L1759.34 684.707 L1759.89 684.707 L1760.45 684.707 L1761.01 684.707 L1761.57 684.707 L1762.13 684.707 L1762.69 684.707 L1763.25 684.707 L1763.81 684.707 L1764.37 684.707 L1764.93 684.707 L1765.49 684.707 L1766.05 684.707 L1766.61 684.707 L1767.16 684.707 L1767.72 684.707 L1768.28 684.707 L1768.84 684.707 L1769.4 684.707 L1769.96 684.707 L1770.52 684.707 L1771.08 684.707 L1771.64 684.707 L1772.2 684.707 L1772.76 684.707 L1773.32 684.707 L1773.88 684.707 L1774.43 684.707 L1774.99 684.707 L1775.55 684.707 L1776.11 684.707 L1776.67 684.707 L1777.23 684.707 L1777.79 684.707 L1778.35 684.707 L1778.91 684.707 L1779.47 684.707 L1780.03 684.707 L1780.59 684.707 L1781.15 684.707 L1781.71 684.707 L1782.26 684.707 L1782.82 684.707 L1783.38 684.707 L1783.94 684.707 L1784.5 684.707 L1785.06 684.707 L1785.62 684.707 L1786.18 684.707 L1786.74 684.707 L1787.3 684.707 L1787.86 684.707 L1788.42 684.707 L1788.98 684.707 L1789.53 684.707 L1790.09 684.707 L1790.65 684.707 L1791.21 684.707 L1791.77 684.707 L1792.33 684.707 L1792.89 684.707 L1793.45 684.707 L1794.01 684.707 L1794.57 684.707 L1795.13 684.707 L1795.69 684.707 L1796.25 684.707 L1796.8 684.707 L1797.36 684.707 L1797.92 684.707 L1798.48 684.707 L1799.04 684.707 L1799.6 684.707 L1800.16 684.707 L1800.72 684.707 L1801.28 684.707 L1801.84 684.707 L1802.4 684.707 L1802.96 684.707 L1803.52 684.707 L1804.08 684.707 L1804.63 684.707 L1805.19 684.707 L1805.75 684.707 L1806.31 684.707 L1806.87 684.707 L1807.43 684.707 L1807.99 684.707 L1808.55 684.707 L1809.11 684.707 L1809.67 684.707 L1810.23 684.707 L1810.79 684.707 L1811.35 684.707 L1811.9 684.707 L1812.46 684.707 L1813.02 684.707 L1813.58 684.707 L1814.14 684.707 L1814.7 684.707 L1815.26 684.707 L1815.82 684.707 L1816.38 684.707 L1816.94 684.707 L1817.5 684.707 L1818.06 684.707 L1818.62 684.707 L1819.18 684.707 L1819.73 684.707 L1820.29 684.707 L1820.85 684.707 L1821.41 684.707 L1821.97 684.707 L1822.53 684.707 L1823.09 684.707 L1823.65 684.707 L1824.21 684.707 L1824.77 684.707 L1825.33 684.707 L1825.89 684.707 L1826.45 684.707 L1827 684.707 L1827.56 684.707 L1828.12 684.707 L1828.68 684.707 L1829.24 684.707 L1829.8 684.707 L1830.36 684.707 L1830.92 684.707 L1831.48 684.707 L1832.04 684.707 L1832.6 684.707 L1833.16 684.707 L1833.72 684.707 L1834.27 684.707 L1834.83 684.707 L1835.39 684.707 L1835.95 684.707 L1836.51 684.707 L1837.07 684.707 L1837.63 684.707 L1838.19 684.707 L1838.19 682.918 L1837.63 682.918 L1837.07 682.918 L1836.51 682.918 L1835.95 682.918 L1835.39 682.918 L1834.83 682.918 L1834.27 682.918 L1833.72 682.918 L1833.16 682.918 L1832.6 682.918 L1832.04 682.918 L1831.48 682.918 L1830.92 682.918 L1830.36 682.918 L1829.8 682.918 L1829.24 682.918 L1828.68 682.918 L1828.12 682.918 L1827.56 682.918 L1827 682.918 L1826.45 682.918 L1825.89 682.918 L1825.33 682.918 L1824.77 682.918 L1824.21 682.918 L1823.65 682.918 L1823.09 682.918 L1822.53 682.918 L1821.97 682.918 L1821.41 682.918 L1820.85 682.918 L1820.29 682.918 L1819.73 682.918 L1819.18 682.918 L1818.62 682.918 L1818.06 682.918 L1817.5 682.918 L1816.94 682.918 L1816.38 682.918 L1815.82 682.918 L1815.26 682.918 L1814.7 682.918 L1814.14 682.918 L1813.58 682.918 L1813.02 682.918 L1812.46 682.918 L1811.9 682.918 L1811.35 682.918 L1810.79 682.918 L1810.23 682.918 L1809.67 682.918 L1809.11 682.918 L1808.55 682.918 L1807.99 682.918 L1807.43 682.918 L1806.87 682.918 L1806.31 682.918 L1805.75 682.918 L1805.19 682.918 L1804.63 682.918 L1804.08 682.918 L1803.52 682.918 L1802.96 682.918 L1802.4 682.918 L1801.84 682.918 L1801.28 682.918 L1800.72 682.918 L1800.16 682.918 L1799.6 682.918 L1799.04 682.918 L1798.48 682.918 L1797.92 682.918 L1797.36 682.918 L1796.8 682.918 L1796.25 682.918 L1795.69 682.918 L1795.13 682.918 L1794.57 682.918 L1794.01 682.918 L1793.45 682.918 L1792.89 682.918 L1792.33 682.918 L1791.77 682.918 L1791.21 682.918 L1790.65 682.918 L1790.09 682.918 L1789.53 682.918 L1788.98 682.918 L1788.42 682.918 L1787.86 682.918 L1787.3 682.918 L1786.74 682.918 L1786.18 682.918 L1785.62 682.918 L1785.06 682.918 L1784.5 682.918 L1783.94 682.918 L1783.38 682.918 L1782.82 682.918 L1782.26 682.918 L1781.71 682.918 L1781.15 682.918 L1780.59 682.918 L1780.03 682.918 L1779.47 682.918 L1778.91 682.918 L1778.35 682.918 L1777.79 682.918 L1777.23 682.918 L1776.67 682.918 L1776.11 682.918 L1775.55 682.918 L1774.99 682.918 L1774.43 682.918 L1773.88 682.918 L1773.32 682.918 L1772.76 682.918 L1772.2 682.918 L1771.64 682.918 L1771.08 682.918 L1770.52 682.918 L1769.96 682.918 L1769.4 682.918 L1768.84 682.918 L1768.28 682.918 L1767.72 682.918 L1767.16 682.918 L1766.61 682.918 L1766.05 682.918 L1765.49 682.918 L1764.93 682.918 L1764.37 682.918 L1763.81 682.918 L1763.25 682.918 L1762.69 682.918 L1762.13 682.918 L1761.57 682.918 L1761.01 682.918 L1760.45 682.918 L1759.89 682.918 L1759.34 682.918 L1758.78 682.918 L1758.22 682.918 L1757.66 682.918 L1757.1 682.918 L1756.54 682.918 L1755.98 682.918 L1755.42 682.918 L1754.86 682.918 L1754.3 682.918 L1753.74 682.918 L1753.18 682.918 L1752.62 682.918 L1752.06 682.918 L1751.51 682.918 L1750.95 682.918 L1750.39 682.918 L1749.83 682.918 L1749.27 682.918 L1748.71 682.918 L1748.15 682.918 L1747.59 682.918 L1747.03 682.918 L1746.47 682.918 L1745.91 682.918 L1745.35 682.918 L1744.79 682.918 L1744.24 682.918 L1743.68 682.918 L1743.12 682.918 L1742.56 682.918 L1742 682.918 L1741.44 682.918 L1740.88 682.918 L1740.32 682.918 L1739.76 682.918 L1739.2 682.918 L1738.64 682.918 L1738.08 682.918 L1737.52 682.918 L1736.97 682.918 L1736.41 682.918 L1735.85 682.918 L1735.29 682.918 L1734.73 682.918 L1734.17 682.918 L1733.61 682.918 L1733.05 682.918 L1732.49 682.918 L1731.93 682.918 L1731.37 682.918 L1730.81 682.918 L1730.25 682.918 L1729.69 682.918 L1729.14 682.918 L1728.58 682.918 L1728.02 682.918 L1727.46 682.918 L1726.9 682.918 L1726.34 682.918 L1725.78 682.918 L1725.22 682.918 L1724.66 682.918 L1724.1 682.918 L1723.54 682.918 L1722.98 682.918 L1722.42 682.918 L1721.87 682.918 L1721.31 682.918 L1720.75 682.918 L1720.19 682.918 L1719.63 682.918 L1719.07 682.918 L1718.51 682.918 L1717.95 682.918 L1717.39 682.918 L1716.83 682.918 L1716.27 682.918 L1715.71 682.918 L1715.15 682.918 L1714.6 682.918 L1714.04 682.918 L1713.48 682.918 L1712.92 682.918 L1712.36 682.918 L1711.8 682.918 L1711.24 682.918 L1710.68 682.918 L1710.12 682.918 L1709.56 682.918 L1709 682.918 L1708.44 682.918 L1707.88 682.918 L1707.32 682.918 L1706.77 682.918 L1706.21 682.918 L1705.65 682.918 L1705.09 682.918 L1704.53 682.918 L1703.97 682.918 L1703.41 682.918 L1702.85 682.918 L1702.29 682.918 L1701.73 682.918 L1701.17 682.918 L1700.61 682.918 L1700.05 682.918 L1699.5 682.918 L1698.94 682.918 L1698.38 682.918 L1697.82 682.918 L1697.26 682.918 L1696.7 682.918 L1696.14 682.918 L1695.58 682.918 L1695.02 682.918 L1694.46 682.918 L1693.9 682.918 L1693.34 682.918 L1692.78 682.918 L1692.23 682.918 L1691.67 682.918 L1691.11 682.918 L1690.55 682.918 L1689.99 682.918 L1689.43 682.918 L1688.87 682.918 L1688.31 682.918 L1687.75 682.918 L1687.19 682.918 L1686.63 682.918 L1686.07 682.918 L1685.51 682.918 L1684.95 682.918 L1684.4 682.918 L1683.84 682.918 L1683.28 682.918 L1682.72 682.918 L1682.16 682.918 L1681.6 682.918 L1681.04 682.918 L1680.48 682.918 L1679.92 682.918 L1679.36 682.918 L1678.8 682.918 L1678.24 682.918 L1677.68 682.918 L1677.13 682.918 L1676.57 682.918 L1676.01 682.918 L1675.45 682.918 L1674.89 682.918 L1674.33 682.918 L1673.77 682.918 L1673.21 682.918 L1672.65 682.918 L1672.09 682.918 L1671.53 682.918 L1670.97 682.918 L1670.41 682.918 L1669.85 682.918 L1669.3 682.918 L1668.74 682.918 L1668.18 682.918 L1667.62 682.918 L1667.06 682.918 L1666.5 682.918 L1665.94 682.918 L1665.38 682.918 L1664.82 682.918 L1664.26 682.918 L1663.7 682.918 L1663.14 682.918 L1662.58 682.918 L1662.03 682.918 L1661.47 682.918 L1660.91 682.918 L1660.35 682.918 L1659.79 682.918 L1659.23 682.918 L1658.67 682.918 L1658.11 682.918 L1657.55 682.918 L1656.99 682.918 L1656.43 682.918 L1655.87 682.918 L1655.31 682.918 L1654.76 682.918 L1654.2 682.918 L1653.64 682.918 L1653.08 682.918 L1652.52 682.918 L1651.96 682.918 L1651.4 682.918 L1650.84 682.918 L1650.28 682.918 L1649.72 682.918 L1649.16 682.918 L1648.6 682.918 L1648.04 682.918 L1647.48 682.918 L1646.93 682.918 L1646.37 682.918 L1645.81 682.918 L1645.25 682.918 L1644.69 682.918 L1644.13 682.918 L1643.57 682.918 L1643.01 682.918 L1642.45 682.918 L1641.89 682.918 L1641.33 682.918 L1640.77 682.918 L1640.21 682.918 L1639.66 682.918 L1639.1 682.918 L1638.54 682.918 L1637.98 682.918 L1637.42 682.918 L1636.86 682.918 L1636.3 682.918 L1635.74 682.918 L1635.18 682.918 L1634.62 682.918 L1634.06 682.918 L1633.5 682.918 L1632.94 682.918 L1632.39 682.918 L1631.83 682.918 L1631.27 682.918 L1630.71 682.918 L1630.15 682.918 L1629.59 682.918 L1629.03 682.918 L1628.47 682.918 L1627.91 682.918 L1627.35 682.918 L1626.79 682.918 L1626.23 682.918 L1625.67 682.918 L1625.11 682.918 L1624.56 682.918 L1624 682.918 L1623.44 682.918 L1622.88 682.918 L1622.32 682.918 L1621.76 682.918 L1621.2 682.918 L1620.64 682.918 L1620.08 682.918 L1619.52 682.918 L1618.96 682.918 L1618.4 682.918 L1617.84 682.918 L1617.29 682.918 L1616.73 682.918 L1616.17 682.918 L1615.61 682.918 L1615.05 682.918 L1614.49 682.918 L1613.93 682.918 L1613.37 682.918 L1612.81 682.918 L1612.25 682.918 L1611.69 682.918 L1611.13 682.918 L1610.57 682.918 L1610.02 682.918 L1609.46 682.918 L1608.9 682.918 L1608.34 682.918 L1607.78 682.918 L1607.22 682.918 L1606.66 682.918 L1606.1 682.918 L1605.54 682.918 L1604.98 682.918 L1604.42 682.918 L1603.86 682.918 L1603.3 682.918 L1602.74 682.918 L1602.19 682.918 L1601.63 682.918 L1601.07 682.918 L1600.51 682.918 L1599.95 682.918 L1599.39 682.918 L1598.83 682.918 L1598.27 682.918 L1597.71 682.918 L1597.15 682.918 L1596.59 682.918 L1596.03 682.918 L1595.47 682.918 L1594.92 682.918 L1594.36 682.918 L1593.8 682.918 L1593.24 682.918 L1592.68 682.918 L1592.12 682.918 L1591.56 682.918 L1591 682.918 L1590.44 682.918 L1589.88 682.918 L1589.32 682.918 L1588.76 682.918 L1588.2 682.918 L1587.65 682.918 L1587.09 682.918 L1586.53 682.918 L1585.97 682.918 L1585.41 682.918 L1584.85 682.918 L1584.29 682.918 L1583.73 682.918 L1583.17 682.918 L1582.61 682.918 L1582.05 682.918 L1581.49 682.918 L1580.93 682.918 L1580.37 682.918 L1579.82 682.918 L1579.26 682.918 L1578.7 682.918 L1578.14 682.918 L1577.58 682.918 L1577.02 682.918 L1576.46 682.918 L1575.9 682.918 L1575.34 682.918 L1574.78 682.918 L1574.22 682.918 L1573.66 682.918 L1573.1 682.918 L1572.55 682.918 L1571.99 682.918 L1571.43 682.918 L1570.87 682.918 L1570.31 682.918 L1569.75 682.918 L1569.19 682.918 L1568.63 682.918 L1568.07 682.918 L1567.51 682.918 L1566.95 682.918 L1566.39 682.918 L1565.83 682.918 L1565.28 682.918 L1564.72 682.918 L1564.16 682.918 L1563.6 682.918 L1563.04 682.918 L1562.48 682.918 L1561.92 682.918 L1561.36 682.918 L1560.8 682.918 L1560.24 682.918 L1559.68 682.918 L1559.12 682.918 L1558.56 682.918 L1558 682.918 L1557.45 682.918 L1556.89 682.918 L1556.33 682.918 L1555.77 682.918 L1555.21 682.918 L1554.65 682.918 L1554.09 682.918 L1553.53 682.918 L1552.97 682.918 L1552.41 682.918 L1551.85 682.918 L1551.29 682.918 L1550.73 682.918 L1550.18 682.918 L1549.62 682.918 L1549.06 682.918 L1548.5 682.918 L1547.94 682.918 L1547.38 682.918 L1546.82 682.918 L1546.26 682.918 L1545.7 682.918 L1545.14 682.918 L1544.58 682.918 L1544.02 682.918 L1543.46 682.918 L1542.9 682.918 L1542.35 682.918 L1541.79 682.918 L1541.23 682.918 L1540.67 682.918 L1540.11 682.918 L1539.55 682.918 L1538.99 682.918 L1538.43 682.918 L1537.87 682.918 L1537.31 682.918 L1536.75 682.918 L1536.19 682.918 L1535.63 682.918 L1535.08 682.918 L1534.52 682.918 L1533.96 682.918 L1533.4 682.918 L1532.84 682.918 L1532.28 682.918 L1531.72 682.918 L1531.16 682.918 L1530.6 682.918 L1530.04 682.918 L1529.48 682.918 L1528.92 682.918 L1528.36 682.918 L1527.81 682.918 L1527.25 682.918 L1526.69 682.918 L1526.13 682.918 L1525.57 682.918 L1525.01 682.918 L1524.45 682.918 L1523.89 682.918 L1523.33 682.918 L1522.77 682.918 L1522.21 682.918 L1521.65 682.918 L1521.09 682.918 L1520.53 682.918 L1519.98 682.918 L1519.42 682.918 L1518.86 682.918 L1518.3 682.918 L1517.74 682.918 L1517.18 682.918 L1516.62 682.918 L1516.06 682.918 L1515.5 682.918 L1514.94 682.918 L1514.38 682.918 L1513.82 682.918 L1513.26 682.918 L1512.71 682.918 L1512.15 682.918 L1511.59 682.918 L1511.03 682.918 L1510.47 682.918 L1509.91 682.918 L1509.35 682.918 L1508.79 682.918 L1508.23 682.918 L1507.67 682.918 L1507.11 682.918 L1506.55 682.918 L1505.99 682.918 L1505.44 682.918 L1504.88 682.918 L1504.32 682.918 L1503.76 682.918 L1503.2 682.918 L1502.64 682.918 L1502.08 682.918 L1501.52 682.918 L1500.96 682.918 L1500.4 682.918 L1499.84 682.918 L1499.28 682.918 L1498.72 682.918 L1498.16 682.918 L1497.61 682.918 L1497.05 682.918 L1496.49 682.918 L1495.93 682.918 L1495.37 682.918 L1494.81 682.918 L1494.25 682.918 L1493.69 682.918 L1493.13 682.918 L1492.57 682.918 L1492.01 682.918 L1491.45 682.918 L1490.89 682.918 L1490.34 682.918 L1489.78 682.918 L1489.22 682.918 L1488.66 682.918 L1488.1 682.918 L1487.54 682.918 L1486.98 682.918 L1486.42 682.918 L1485.86 682.918 L1485.3 682.918 L1484.74 682.918 L1484.18 682.918 L1483.62 682.918 L1483.07 682.918 L1482.51 682.918 L1481.95 682.918 L1481.39 682.918 L1480.83 682.918 L1480.27 682.918 L1479.71 682.918 L1479.15 682.918 L1478.59 682.918 L1478.03 682.918 L1477.47 682.918 L1476.91 682.918 L1476.35 682.918 L1475.79 682.918 L1475.24 682.918 L1474.68 682.918 L1474.12 682.918 L1473.56 682.918 L1473 682.918 L1472.44 682.918 L1471.88 682.918 L1471.32 682.918 L1470.76 682.918 L1470.2 682.918 L1469.64 682.918 L1469.08 682.918 L1468.52 682.918 L1467.97 682.918 L1467.41 682.918 L1466.85 682.918 L1466.29 682.918 L1465.73 682.918 L1465.17 682.918 L1464.61 682.918 L1464.05 682.918 L1463.49 682.918 L1462.93 682.918 L1462.37 682.918 L1461.81 682.918 L1461.25 682.918 L1460.7 682.918 L1460.14 682.918 L1459.58 682.918 L1459.02 682.918 L1458.46 682.918 L1457.9 682.918 L1457.34 682.918 L1456.78 682.918 L1456.22 682.918 L1455.66 682.918 L1455.1 682.918 L1454.54 682.918 L1453.98 682.918 L1453.42 682.918 L1452.87 682.918 L1452.31 682.918 L1451.75 682.918 L1451.19 682.918 L1450.63 682.918 L1450.07 682.918 L1449.51 682.918 L1448.95 682.918 L1448.39 682.918 L1447.83 682.918 L1447.27 682.918 L1446.71 682.918 L1446.15 682.918 L1445.6 682.918 L1445.04 682.918 L1444.48 682.918 L1443.92 682.918 L1443.36 682.918 L1442.8 682.918 L1442.24 682.918 L1441.68 682.918 L1441.12 682.918 L1440.56 682.918 L1440 682.918 L1439.44 682.918 L1438.88 682.918 L1438.33 682.918 L1437.77 682.918 L1437.21 682.918 L1436.65 682.918 L1436.09 682.918 L1435.53 682.918 L1434.97 682.918 L1434.41 682.918 L1433.85 682.918 L1433.29 682.918 L1432.73 682.918 L1432.17 682.918 L1431.61 682.918 L1431.05 682.918 L1430.5 682.918 L1429.94 682.918 L1429.38 682.918 L1428.82 682.918 L1428.26 682.918 L1427.7 682.918 L1427.14 682.918 L1426.58 682.918 L1426.02 682.918 L1425.46 682.918 L1424.9 682.918 L1424.34 682.918 L1423.78 682.918 L1423.23 682.918 L1422.67 682.918 L1422.11 682.918 L1421.55 682.918 L1420.99 682.918 L1420.43 682.918 L1419.87 682.918 L1419.31 682.918 L1418.75 682.918 L1418.19 682.918 L1417.63 682.918 L1417.07 682.918 L1416.51 682.918 L1415.95 682.918 L1415.4 682.918 L1414.84 682.918 L1414.28 682.918 L1413.72 682.918 L1413.16 682.918 L1412.6 682.918 L1412.04 682.918 L1411.48 682.918 L1410.92 682.918 L1410.36 682.918 L1409.8 682.918 L1409.24 682.918 L1408.68 682.918 L1408.13 682.918 L1407.57 682.918 L1407.01 682.918 L1406.45 682.918 L1405.89 682.918 L1405.33 682.918 L1404.77 682.918 L1404.21 682.918 L1403.65 682.918 L1403.09 682.918 L1402.53 682.918 L1401.97 682.918 L1401.41 682.918 L1400.86 682.918 L1400.3 682.918 L1399.74 682.918 L1399.18 682.918 L1398.62 682.918 L1398.06 682.918 L1397.5 682.918 L1396.94 682.918 L1396.38 682.918 L1395.82 682.918 L1395.26 682.918 L1394.7 682.918 L1394.14 682.918 L1393.58 682.918 L1393.03 682.918 L1392.47 682.918 L1391.91 682.918 L1391.35 682.918 L1390.79 682.918 L1390.23 682.918 L1389.67 682.918 L1389.11 682.918 L1388.55 682.918 L1387.99 682.918 L1387.43 682.918 L1386.87 682.918 L1386.31 682.918 L1385.76 682.918 L1385.2 682.918 L1384.64 682.918 L1384.08 682.918 L1383.52 682.918 L1382.96 682.918 L1382.4 682.918 L1381.84 682.918 L1381.28 682.918 L1380.72 682.918 L1380.16 682.918 L1379.6 682.918 L1379.04 682.918 L1378.49 682.918 L1377.93 682.918 L1377.37 682.918 L1376.81 682.918 L1376.25 682.918 L1375.69 682.918 L1375.13 682.918 L1374.57 682.918 L1374.01 682.918 L1373.45 682.918 L1372.89 682.918 L1372.33 682.918 L1371.77 682.918 L1371.21 682.918 L1370.66 682.918 L1370.1 682.918 L1369.54 682.918 L1368.98 682.918 L1368.42 682.918 L1367.86 682.918 L1367.3 682.918 L1366.74 682.918 L1366.18 682.918 L1365.62 682.918 L1365.06 682.918 L1364.5 682.918 L1363.94 682.918 L1363.39 682.918 L1362.83 682.918 L1362.27 682.918 L1361.71 682.918 L1361.15 682.918 L1360.59 682.918 L1360.03 682.918 L1359.47 682.918 L1358.91 682.918 L1358.35 682.918 L1357.79 682.918 L1357.23 682.918 L1356.67 682.918 L1356.12 682.918 L1355.56 682.918 L1355 682.918 L1354.44 682.918 L1353.88 682.918 L1353.32 682.918 L1352.76 682.918 L1352.2 682.918 L1351.64 682.918 L1351.08 682.918 L1350.52 682.918 L1349.96 682.918 L1349.4 682.918 L1348.84 682.918 L1348.29 682.918 L1347.73 682.918 L1347.17 682.918 L1346.61 682.918 L1346.05 682.918 L1345.49 682.918 L1344.93 682.918 L1344.37 682.918 L1343.81 682.918 L1343.25 682.918 L1342.69 682.918 L1342.13 682.918 L1341.57 682.918 L1341.02 682.918 L1340.46 682.918 L1339.9 682.918 L1339.34 682.918 L1338.78 682.918 L1338.22 682.918 L1337.66 682.918 L1337.1 682.918 L1336.54 682.918 L1335.98 682.918 L1335.42 682.918 L1334.86 682.918 L1334.3 682.918 L1333.75 682.918 L1333.19 682.918 L1332.63 682.918 L1332.07 682.918 L1331.51 682.918 L1330.95 682.918 L1330.39 682.918 L1329.83 682.918 L1329.27 682.918 L1328.71 682.918 L1328.15 682.918 L1327.59 682.918 L1327.03 682.918 L1326.47 682.918 L1325.92 682.918 L1325.36 682.918 L1324.8 682.918 L1324.24 682.918 L1323.68 682.918 L1323.12 682.918 L1322.56 682.918 L1322 682.918 L1321.44 682.918 L1320.88 682.918 L1320.32 682.918 L1319.76 682.918 L1319.2 682.918 L1318.65 682.918 L1318.09 682.918 L1317.53 682.918 L1316.97 682.918 L1316.41 682.918 L1315.85 682.918 L1315.29 682.918 L1314.73 682.918 L1314.17 682.918 L1313.61 682.918 L1313.05 682.918 L1312.49 682.918 L1311.93 682.918 L1311.38 682.918 L1310.82 682.918 L1310.26 682.918 L1309.7 682.918 L1309.14 682.918 L1308.58 682.918 L1308.02 682.918 L1307.46 682.918 L1306.9 682.918 L1306.34 682.918 L1305.78 682.918 L1305.22 682.918 L1304.66 682.918 L1304.1 682.918 L1303.55 682.918 L1302.99 682.918 L1302.43 682.918 L1301.87 682.918 L1301.31 682.918 L1300.75 682.918 L1300.19 682.918 L1299.63 682.918 L1299.07 682.918 L1298.51 682.918 L1297.95 682.918 L1297.39 682.918 L1296.83 682.918 L1296.28 682.918 L1295.72 682.918 L1295.16 682.918 L1294.6 682.918 L1294.04 682.918 L1293.48 682.918 L1292.92 682.918 L1292.36 682.918 L1291.8 682.918 L1291.24 682.918 L1290.68 682.918 L1290.12 682.918 L1289.56 682.918 L1289 682.918 L1288.45 682.918 L1287.89 682.918 L1287.33 682.918 L1286.77 682.918 L1286.21 682.918 L1285.65 682.918 L1285.09 682.918 L1284.53 682.918 L1283.97 682.918 L1283.41 682.918 L1282.85 682.918 L1282.29 682.918 L1281.73 682.918 L1281.18 682.918 L1280.62 682.918 L1280.06 682.918 L1279.5 682.918 L1278.94 682.918 L1278.38 682.918 L1277.82 682.918 L1277.26 682.918 L1276.7 682.918 L1276.14 682.918 L1275.58 682.918 L1275.02 682.918 L1274.46 682.918 L1273.91 682.918 L1273.35 682.918 L1272.79 682.918 L1272.23 682.918 L1271.67 682.918 L1271.11 682.918 L1270.55 682.918 L1269.99 682.918 L1269.43 682.918 L1268.87 682.918 L1268.31 682.918 L1267.75 682.918 L1267.19 682.918 L1266.63 682.918 L1266.08 682.918 L1265.52 682.918 L1264.96 682.918 L1264.4 682.918 L1263.84 682.918 L1263.28 682.918 L1262.72 682.918 L1262.16 682.918 L1261.6 682.918 L1261.04 682.918 L1260.48 682.918 L1259.92 682.918 L1259.36 682.918 L1258.81 682.918 L1258.25 682.918 L1257.69 682.918 L1257.13 682.918 L1256.57 682.918 L1256.01 682.918 L1255.45 682.918 L1254.89 682.918 L1254.33 682.918 L1253.77 682.918 L1253.21 682.918 L1252.65 682.918 L1252.09 682.918 L1251.54 682.918 L1250.98 682.918 L1250.42 682.918 L1249.86 682.918 L1249.3 682.918 L1248.74 682.918 L1248.18 682.918 L1247.62 682.918 L1247.06 682.918 L1246.5 682.918 L1245.94 682.918 L1245.38 682.918 L1244.82 682.918 L1244.26 682.918 L1243.71 682.918 L1243.15 682.918 L1242.59 682.918 L1242.03 682.918 L1241.47 682.918 L1240.91 682.918 L1240.35 682.918 L1239.79 682.918 L1239.23 682.918 L1238.67 682.918 L1238.11 682.918 L1237.55 682.918 L1236.99 682.918 L1236.44 682.918 L1235.88 682.918 L1235.32 682.918 L1234.76 682.918 L1234.2 682.918 L1233.64 682.918 L1233.08 682.918 L1232.52 682.918 L1231.96 682.918 L1231.4 682.918 L1230.84 682.918 L1230.28 682.918 L1229.72 682.918 L1229.17 682.918 L1228.61 682.918 L1228.05 682.918 L1227.49 682.918 L1226.93 682.918 L1226.37 682.918 L1225.81 682.918 L1225.25 682.918 L1224.69 682.918 L1224.13 682.918 L1223.57 682.918 L1223.01 682.918 L1222.45 682.918 L1221.89 682.918 L1221.34 682.918 L1220.78 682.918 L1220.22 682.918 L1219.66 682.918 L1219.1 682.918 L1218.54 682.918 L1217.98 682.918 L1217.42 682.918 L1216.86 682.918 L1216.3 682.918 L1215.74 682.918 L1215.18 682.918 L1214.62 682.918 L1214.07 682.918 L1213.51 682.918 L1212.95 682.918 L1212.39 682.918 L1211.83 682.918 L1211.27 682.918 L1210.71 682.918 L1210.15 682.918 L1209.59 682.918 L1209.03 682.918 L1208.47 682.918 L1207.91 682.918 L1207.35 682.918 L1206.8 682.918 L1206.24 682.918 L1205.68 682.918 L1205.12 682.918 L1204.56 682.918 L1204 682.918 L1203.44 682.918 L1202.88 682.918 L1202.32 682.918 L1201.76 682.918 L1201.2 682.918 L1200.64 682.918 L1200.08 682.918 L1199.52 682.918 L1198.97 682.918 L1198.41 682.918 L1197.85 682.918 L1197.29 682.918 L1196.73 682.918 L1196.17 682.918 L1195.61 682.918 L1195.05 682.918 L1194.49 682.918 L1193.93 682.918 L1193.37 682.918 L1192.81 682.918 L1192.25 682.918 L1191.7 682.918 L1191.14 682.918 L1190.58 682.918 L1190.02 682.918 L1189.46 682.918 L1188.9 682.918 L1188.34 682.918 L1187.78 682.918 L1187.22 682.918 L1186.66 682.918 L1186.1 682.918 L1185.54 682.918 L1184.98 682.918 L1184.43 682.918 L1183.87 682.918 L1183.31 682.918 L1182.75 682.918 L1182.19 682.918 L1181.63 682.918 L1181.07 682.918 L1180.51 682.918 L1179.95 682.918 L1179.39 682.918 L1178.83 682.918 L1178.27 682.918 L1177.71 682.918 L1177.15 682.918 L1176.6 682.918 L1176.04 682.918 L1175.48 682.918 L1174.92 682.918 L1174.36 682.918 L1173.8 682.918 L1173.24 682.918 L1172.68 682.918 L1172.12 682.918 L1171.56 682.918 L1171 682.918 L1170.44 682.918 L1169.88 682.918 L1169.33 682.918 L1168.77 682.918 L1168.21 682.918 L1167.65 682.918 L1167.09 682.918 L1166.53 682.918 L1165.97 682.918 L1165.41 682.918 L1164.85 682.918 L1164.29 682.918 L1163.73 682.918 L1163.17 682.918 L1162.61 682.918 L1162.05 682.918 L1161.5 682.918 L1160.94 682.918 L1160.38 682.918 L1159.82 682.918 L1159.26 682.918 L1158.7 682.918 L1158.14 682.918 L1157.58 682.918 L1157.02 682.918 L1156.46 682.918 L1155.9 682.918 L1155.34 682.918 L1154.78 682.918 L1154.23 682.918 L1153.67 682.918 L1153.11 682.918 L1152.55 682.918 L1151.99 682.918 L1151.43 682.918 L1150.87 682.918 L1150.31 682.918 L1149.75 682.918 L1149.19 682.918 L1148.63 682.918 L1148.07 682.918 L1147.51 682.918 L1146.96 682.918 L1146.4 682.918 L1145.84 682.918 L1145.28 682.918 L1144.72 682.918 L1144.16 682.918 L1143.6 682.918 L1143.04 682.918 L1142.48 682.918 L1141.92 682.918 L1141.36 682.918 L1140.8 682.918 L1140.24 682.918 L1139.68 682.918 L1139.13 682.918 L1138.57 682.918 L1138.01 682.918 L1137.45 682.918 L1136.89 682.918 L1136.33 682.918 L1135.77 682.918 L1135.21 682.918 L1134.65 682.918 L1134.09 682.918 L1133.53 682.918 L1132.97 682.918 L1132.41 682.918 L1131.86 682.918 L1131.3 682.918 L1130.74 682.918 L1130.18 682.918 L1129.62 682.918 L1129.06 682.918 L1128.5 682.918 L1127.94 682.918 L1127.38 682.918 L1126.82 682.918 L1126.26 682.918 L1125.7 682.918 L1125.14 682.918 L1124.59 682.918 L1124.03 682.918 L1123.47 682.918 L1122.91 682.918 L1122.35 682.918 L1121.79 682.918 L1121.23 682.918 L1120.67 682.918 L1120.11 682.918 L1119.55 682.918 L1118.99 682.918 L1118.43 682.918 L1117.87 682.918 L1117.31 682.918 L1116.76 682.918 L1116.2 682.918 L1115.64 682.918 L1115.08 682.918 L1114.52 682.918 L1113.96 682.918 L1113.4 682.918 L1112.84 682.918 L1112.28 682.918 L1111.72 682.918 L1111.16 682.918 L1110.6 682.918 L1110.04 682.918 L1109.49 682.918 L1108.93 682.918 L1108.37 682.918 L1107.81 682.918 L1107.25 682.918 L1106.69 682.918 L1106.13 682.918 L1105.57 682.918 L1105.01 682.918 L1104.45 682.918 L1103.89 682.918 L1103.33 682.918 L1102.77 682.918 L1102.22 682.918 L1101.66 682.918 L1101.1 682.918 L1100.54 682.918 L1099.98 682.918 L1099.42 682.918 L1098.86 682.918 L1098.3 682.918 L1097.74 682.918 L1097.18 682.918 L1096.62 682.918 L1096.06 682.918 L1095.5 682.918 L1094.94 682.918 L1094.39 682.918 L1093.83 682.918 L1093.27 682.918 L1092.71 682.918 L1092.15 682.918 L1091.59 682.918 L1091.03 682.918 L1090.47 682.918 L1089.91 682.918 L1089.35 682.918 L1088.79 682.918 L1088.23 682.918 L1087.67 682.918 L1087.12 682.918 L1086.56 682.918 L1086 682.918 L1085.44 682.918 L1084.88 682.918 L1084.32 682.918 L1083.76 682.918 L1083.2 682.918 L1082.64 682.918 L1082.08 682.918 L1081.52 682.918 L1080.96 682.918 L1080.4 682.918 L1079.85 682.918 L1079.29 682.918 L1078.73 682.918 L1078.17 682.918 L1077.61 682.918 L1077.05 682.918 L1076.49 682.918 L1075.93 682.918 L1075.37 682.918 L1074.81 682.918 L1074.25 682.918 L1073.69 682.918 L1073.13 682.918 L1072.57 682.918 L1072.02 682.918 L1071.46 682.918 L1070.9 682.918 L1070.34 682.918 L1069.78 682.918 L1069.22 682.918 L1068.66 682.918 L1068.1 682.918 L1067.54 682.918 L1066.98 682.918 L1066.42 682.918 L1065.86 682.918 L1065.3 682.918 L1064.75 682.918 L1064.19 682.918 L1063.63 682.918 L1063.07 682.918 L1062.51 682.918 L1061.95 682.918 L1061.39 682.918 L1060.83 682.918 L1060.27 682.918 L1059.71 682.918 L1059.15 682.918 L1058.59 682.918 L1058.03 682.918 L1057.48 682.918 L1056.92 682.918 L1056.36 682.918 L1055.8 682.918 L1055.24 682.918 L1054.68 682.918 L1054.12 682.918 L1053.56 682.918 L1053 682.918 L1052.44 682.918 L1051.88 682.918 L1051.32 682.918 L1050.76 682.918 L1050.2 682.918 L1049.65 682.918 L1049.09 682.918 L1048.53 682.918 L1047.97 682.918 L1047.41 682.918 L1046.85 682.918 L1046.29 682.918 L1045.73 682.918 L1045.17 682.918 L1044.61 682.918 L1044.05 682.918 L1043.49 682.918 L1042.93 682.918 L1042.38 682.918 L1041.82 682.918 L1041.26 682.918 L1040.7 682.918 L1040.14 682.918 L1039.58 682.918 L1039.02 682.918 L1038.46 682.918 L1037.9 682.918 L1037.34 682.918 L1036.78 682.918 L1036.22 682.918 L1035.66 682.918 L1035.1 682.918 L1034.55 682.918 L1033.99 682.918 L1033.43 682.918 L1032.87 682.918 L1032.31 682.918 L1031.75 682.918 L1031.19 682.918 L1030.63 682.918 L1030.07 682.918 L1029.51 682.918 L1028.95 682.918 L1028.39 682.918 L1027.83 682.918 L1027.28 682.918 L1026.72 682.918 L1026.16 682.918 L1025.6 682.918 L1025.04 682.918 L1024.48 682.918 L1023.92 682.918 L1023.36 682.918 L1022.8 682.918 L1022.24 682.918 L1021.68 682.918 L1021.12 682.918 L1020.56 682.918 L1020.01 682.918 L1019.45 682.918 L1018.89 682.918 L1018.33 682.918 L1017.77 682.918 L1017.21 682.918 L1016.65 682.918 L1016.09 682.918 L1015.53 682.918 L1014.97 682.918 L1014.41 682.918 L1013.85 682.918 L1013.29 682.918 L1012.73 682.918 L1012.18 682.918 L1011.62 682.918 L1011.06 682.918 L1010.5 682.918 L1009.94 682.918 L1009.38 682.918 L1008.82 682.918 L1008.26 682.918 L1007.7 682.918 L1007.14 682.918 L1006.58 682.918 L1006.02 682.918 L1005.46 682.918 L1004.91 682.918 L1004.35 682.918 L1003.79 682.918 L1003.23 682.918 L1002.67 682.918 L1002.11 682.918 L1001.55 682.918 L1000.99 682.918 L1000.43 682.918 L999.872 682.918 L999.313 682.918 L998.754 682.918 L998.194 682.918 L997.635 682.918 L997.076 682.918 L996.517 682.918 L995.957 682.918 L995.398 682.918 L994.839 682.918 L994.28 682.918 L993.72 682.918 L993.161 682.918 L992.602 682.918 L992.043 682.918 L991.483 682.918 L990.924 682.918 L990.365 682.918 L989.806 682.918 L989.246 682.918 L988.687 682.918 L988.128 682.918 L987.569 682.918 L987.009 682.918 L986.45 682.918 L985.891 682.918 L985.332 682.918 L984.772 682.918 L984.213 682.918 L983.654 682.918 L983.095 682.918 L982.535 682.918 L981.976 682.918 L981.417 682.918 L980.858 682.918 L980.298 682.918 L979.739 682.918 L979.18 682.918 L978.621 682.918 L978.061 682.918 L977.502 682.918 L976.943 682.918 L976.384 682.918 L975.824 682.918 L975.265 682.918 L974.706 682.918 L974.147 682.918 L973.587 682.918 L973.028 682.918 L972.469 682.918 L971.91 682.918 L971.35 682.918 L970.791 682.918 L970.232 682.918 L969.673 682.918 L969.113 682.918 L968.554 682.918 L967.995 682.918 L967.436 682.918 L966.876 682.918 L966.317 682.918 L965.758 682.918 L965.199 682.918 L964.639 682.918 L964.08 682.918 L963.521 682.918 L962.962 682.918 L962.402 682.918 L961.843 682.918 L961.284 682.918 L960.725 682.918 L960.165 682.918 L959.606 682.918 L959.047 682.918 L958.488 682.918 L957.928 682.918 L957.369 682.918 L956.81 682.918 L956.251 682.918 L955.691 682.918 L955.132 682.918 L954.573 682.918 L954.014 682.918 L953.454 682.918 L952.895 682.918 L952.336 682.918 L951.777 682.918 L951.217 682.918 L950.658 682.918 L950.099 682.918 L949.54 682.918 L948.98 682.918 L948.421 682.918 L947.862 682.918 L947.303 682.918 L946.743 682.918 L946.184 682.918 L945.625 682.918 L945.066 682.918 L944.506 682.918 L943.947 682.918 L943.388 682.918 L942.829 682.918 L942.269 682.918 L941.71 682.918 L941.151 682.918 L940.592 682.918 L940.032 682.918 L939.473 682.918 L938.914 682.918 L938.355 682.918 L937.795 682.918 L937.236 682.918 L936.677 682.918 L936.118 682.918 L935.558 682.918 L934.999 682.918 L934.44 682.918 L933.881 682.918 L933.321 682.918 L932.762 682.918 L932.203 682.918 L931.644 682.918 L931.084 682.918 L930.525 682.918 L929.966 682.918 L929.406 682.918 L928.847 682.918 L928.288 682.918 L927.729 682.918 L927.169 682.918 L926.61 682.918 L926.051 682.918 L925.492 682.918 L924.932 682.918 L924.373 682.918 L923.814 682.918 L923.255 682.918 L922.695 682.918 L922.136 682.918 L921.577 682.918 L921.018 682.918 L920.458 682.918 L919.899 682.918 L919.34 682.918 L918.781 682.918 L918.221 682.918 L917.662 682.918 L917.103 682.918 L916.544 682.918 L915.984 682.918 L915.425 682.918 L914.866 682.918 L914.307 682.918 L913.747 682.918 L913.188 682.918 L912.629 682.918 L912.07 682.918 L911.51 682.918 L910.951 682.918 L910.392 682.918 L909.833 682.918 L909.273 682.918 L908.714 682.918 L908.155 682.918 L907.596 682.918 L907.036 682.918 L906.477 682.918 L905.918 682.918 L905.359 682.918 L904.799 682.918 L904.24 682.918 L903.681 682.918 L903.122 682.918 L902.562 682.918 L902.003 682.918 L901.444 682.918 L900.885 682.918 L900.325 682.918 L899.766 682.918 L899.207 682.918 L898.648 682.918 L898.088 682.918 L897.529 682.918 L896.97 682.918 L896.411 682.918 L895.851 682.918 L895.292 682.918 L894.733 682.918 L894.174 682.918 L893.614 682.918 L893.055 682.918 L892.496 682.918 L891.937 682.918 L891.377 682.918 L890.818 682.918 L890.259 682.918 L889.7 682.918 L889.14 682.918 L888.581 682.918 L888.022 682.918 L887.463 682.918 L886.903 682.918 L886.344 682.918 L885.785 682.918 L885.226 682.918 L884.666 682.918 L884.107 682.918 L883.548 682.918 L882.989 682.918 L882.429 682.918 L881.87 682.918 L881.311 682.918 L880.752 682.918 L880.192 682.918 L879.633 682.918 L879.074 682.918 L878.515 682.918 L877.955 682.918 L877.396 682.918 L876.837 682.918 L876.278 682.918 L875.718 682.918 L875.159 682.918 L874.6 682.918 L874.041 682.918 L873.481 682.918 L872.922 682.918 L872.363 682.918 L871.804 682.918 L871.244 682.918 L870.685 682.918 L870.126 682.918 L869.567 682.918 L869.007 682.918 L868.448 682.918 L867.889 682.918 L867.33 682.918 L866.77 682.918 L866.211 682.918 L865.652 682.918 L865.093 682.918 L864.533 682.918 L863.974 682.918 L863.415 682.918 L862.856 682.918 L862.296 682.918 L861.737 682.918 L861.178 682.918 L860.619 682.918 L860.059 682.918 L859.5 682.918 L858.941 682.918 L858.382 682.918 L857.822 682.918 L857.263 682.918 L856.704 682.918 L856.145 682.918 L855.585 682.918 L855.026 682.918 L854.467 682.918 L853.908 682.918 L853.348 682.918 L852.789 682.918 L852.23 682.918 L851.671 682.918 L851.111 682.918 L850.552 682.918 L849.993 682.918 L849.434 682.918 L848.874 682.918 L848.315 682.918 L847.756 682.918 L847.197 682.918 L846.637 682.918 L846.078 682.918 L845.519 682.918 L844.96 682.918 L844.4 682.918 L843.841 682.918 L843.282 682.918 L842.723 682.918 L842.163 682.918 L841.604 682.918 L841.045 682.918 L840.486 682.918 L839.926 682.918 L839.367 682.918 L838.808 682.918 L838.249 682.918 L837.689 682.918 L837.13 682.918 L836.571 682.918 L836.012 682.918 L835.452 682.918 L834.893 682.918 L834.334 682.918 L833.775 682.918 L833.215 682.918 L832.656 682.918 L832.097 682.918 L831.538 682.918 L830.978 682.918 L830.419 682.918 L829.86 682.918 L829.301 682.918 L828.741 682.918 L828.182 682.918 L827.623 682.918 L827.064 682.918 L826.504 682.918 L825.945 682.918 L825.386 682.918 L824.827 682.918 L824.267 682.918 L823.708 682.918 L823.149 682.918 L822.59 682.918 L822.03 682.918 L821.471 682.918 L820.912 682.918 L820.353 682.918 L819.793 682.918 L819.234 682.918 L818.675 682.918 L818.116 682.918 L817.556 682.918 L816.997 682.918 L816.438 682.918 L815.879 682.918 L815.319 682.918 L814.76 682.918 L814.201 682.918 L813.642 682.918 L813.082 682.918 L812.523 682.918 L811.964 682.918 L811.405 682.918 L810.845 682.918 L810.286 682.918 L809.727 682.918 L809.168 682.918 L808.608 682.918 L808.049 682.918 L807.49 682.918 L806.931 682.918 L806.371 682.918 L805.812 682.918 L805.253 682.918 L804.693 682.918 L804.134 682.918 L803.575 682.918 L803.016 682.918 L802.456 682.918 L801.897 682.918 L801.338 682.918 L800.779 682.918 L800.219 682.918 L799.66 682.918 L799.101 682.918 L798.542 682.918 L797.982 682.918 L797.423 682.918 L796.864 682.918 L796.305 682.918 L795.745 682.918 L795.186 682.918 L794.627 682.918 L794.068 682.918 L793.508 682.918 L792.949 682.918 L792.39 682.918 L791.831 682.918 L791.271 682.918 L790.712 682.918 L790.153 682.918 L789.594 682.918 L789.034 682.918 L788.475 682.918 L787.916 682.918 L787.357 682.918 L786.797 682.918 L786.238 682.918 L785.679 682.918 L785.12 682.918 L784.56 682.918 L784.001 682.918 L783.442 682.918 L782.883 682.918 L782.323 682.918 L781.764 682.918 L781.205 682.918 L780.646 682.918 L780.086 682.918 L779.527 682.918 L778.968 682.918 L778.409 682.918 L777.849 682.918 L777.29 682.918 L776.731 682.918 L776.172 682.918 L775.612 682.918 L775.053 682.918 L774.494 682.918 L773.935 682.918 L773.375 682.918 L772.816 682.918 L772.257 682.918 L771.698 682.918 L771.138 682.918 L770.579 682.918 L770.02 682.918 L769.461 682.918 L768.901 682.918 L768.342 682.918 L767.783 682.918 L767.224 682.918 L766.664 682.918 L766.105 682.918 L765.546 682.918 L764.987 682.918 L764.427 682.918 L763.868 682.918 L763.309 682.918 L762.75 682.918 L762.19 682.918 L761.631 682.918 L761.072 682.918 L760.513 682.918 L759.953 682.918 L759.394 682.918 L758.835 682.918 L758.276 682.918 L757.716 682.918 L757.157 682.918 L756.598 682.918 L756.039 682.918 L755.479 682.918 L754.92 682.918 L754.361 682.918 L753.802 682.918 L753.242 682.918 L752.683 682.918 L752.124 682.918 L751.565 682.918 L751.005 682.918 L750.446 682.918 L749.887 682.918 L749.328 682.918 L748.768 682.918 L748.209 682.918 L747.65 682.918 L747.091 682.918 L746.531 682.918 L745.972 682.918 L745.413 682.918 L744.854 682.918 L744.294 682.918 L743.735 682.918 L743.176 682.918 L742.617 682.918 L742.057 682.918 L741.498 682.918 L740.939 682.918 L740.38 682.918 L739.82 682.918 L739.261 682.918 L738.702 682.918 L738.143 682.918 L737.583 682.918 L737.024 682.918 L736.465 682.918 L735.906 682.918 L735.346 682.918 L734.787 682.918 L734.228 682.918 L733.669 682.918 L733.109 682.918 L732.55 682.918 L731.991 682.918 L731.432 682.918 L730.872 682.918 L730.313 682.918 L729.754 682.918 L729.195 682.918 L728.635 682.918 L728.076 682.918 L727.517 682.918 L726.958 682.918 L726.398 682.918 L725.839 682.918 L725.28 682.918 L724.721 682.918 L724.161 682.918 L723.602 682.918 L723.043 682.918 L722.484 682.918 L721.924 682.918 L721.365 682.918 L720.806 682.918 L720.247 682.918  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip323)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.816 720.806,683.816 721.365,683.816 721.924,683.816 722.484,683.816 723.043,683.816 723.602,683.816 724.161,683.816 724.721,683.816 725.28,683.816 725.839,683.816 726.398,683.816 726.958,683.816 727.517,683.816 728.076,683.816 728.635,683.816 729.195,683.816 729.754,683.816 730.313,683.816 730.872,683.816 731.432,683.816 731.991,683.816 732.55,683.816 733.109,683.816 733.669,683.816 734.228,683.816 734.787,683.816 735.346,683.816 735.906,683.816 736.465,683.816 737.024,683.816 737.583,683.816 738.143,683.816 738.702,683.816 739.261,683.816 739.82,683.816 740.38,683.816 740.939,683.816 741.498,683.816 742.057,683.816 742.617,683.816 743.176,683.816 743.735,683.816 744.294,683.816 744.854,683.816 745.413,683.816 745.972,683.816 746.531,683.816 747.091,683.816 747.65,683.816 748.209,683.816 748.768,683.816 749.328,683.816 749.887,683.816 750.446,683.816 751.005,683.816 751.565,683.816 752.124,683.816 752.683,683.816 753.242,683.816 753.802,683.816 754.361,683.816 754.92,683.816 755.479,683.816 756.039,683.816 756.598,683.816 757.157,683.816 757.716,683.816 758.276,683.816 758.835,683.816 759.394,683.816 759.953,683.816 760.513,683.816 761.072,683.816 761.631,683.816 762.19,683.816 762.75,683.816 763.309,683.816 763.868,683.816 764.427,683.816 764.987,683.816 765.546,683.816 766.105,683.816 766.664,683.816 767.224,683.816 767.783,683.816 768.342,683.816 768.901,683.816 769.461,683.816 770.02,683.816 770.579,683.816 771.138,683.816 771.698,683.816 772.257,683.816 772.816,683.816 773.375,683.816 773.935,683.816 774.494,683.816 775.053,683.816 775.612,683.816 776.172,683.816 776.731,683.816 777.29,683.816 777.849,683.816 778.409,683.816 778.968,683.816 779.527,683.816 780.086,683.816 780.646,683.816 781.205,683.816 781.764,683.816 782.323,683.816 782.883,683.816 783.442,683.816 784.001,683.816 784.56,683.816 785.12,683.816 785.679,683.816 786.238,683.816 786.797,683.816 787.357,683.816 787.916,683.816 788.475,683.816 789.034,683.816 789.594,683.816 790.153,683.816 790.712,683.816 791.271,683.816 791.831,683.816 792.39,683.816 792.949,683.816 793.508,683.816 794.068,683.816 794.627,683.816 795.186,683.816 795.745,683.816 796.305,683.816 796.864,683.816 797.423,683.816 797.982,683.816 798.542,683.816 799.101,683.816 799.66,683.816 800.219,683.816 800.779,683.816 801.338,683.816 801.897,683.816 802.456,683.816 803.016,683.816 803.575,683.816 804.134,683.816 804.693,683.816 805.253,683.816 805.812,683.816 806.371,683.816 806.931,683.816 807.49,683.816 808.049,683.816 808.608,683.816 809.168,683.816 809.727,683.816 810.286,683.816 810.845,683.816 811.405,683.816 811.964,683.816 812.523,683.816 813.082,683.816 813.642,683.816 814.201,683.816 814.76,683.816 815.319,683.816 815.879,683.816 816.438,683.816 816.997,683.816 817.556,683.816 818.116,683.816 818.675,683.816 819.234,683.816 819.793,683.816 820.353,683.816 820.912,683.816 821.471,683.816 822.03,683.816 822.59,683.816 823.149,683.816 823.708,683.816 824.267,683.816 824.827,683.816 825.386,683.816 825.945,683.816 826.504,683.816 827.064,683.816 827.623,683.816 828.182,683.816 828.741,683.816 829.301,683.816 829.86,683.816 830.419,683.816 830.978,683.816 831.538,683.816 832.097,683.816 832.656,683.816 833.215,683.816 833.775,683.816 834.334,683.816 834.893,683.816 835.452,683.816 836.012,683.816 836.571,683.816 837.13,683.816 837.689,683.816 838.249,683.816 838.808,683.816 839.367,683.816 839.926,683.816 840.486,683.816 841.045,683.816 841.604,683.816 842.163,683.816 842.723,683.816 843.282,683.816 843.841,683.816 844.4,683.816 844.96,683.816 845.519,683.816 846.078,683.816 846.637,683.816 847.197,683.816 847.756,683.816 848.315,683.816 848.874,683.816 849.434,683.816 849.993,683.816 850.552,683.816 851.111,683.816 851.671,683.816 852.23,683.816 852.789,683.816 853.348,683.816 853.908,683.816 854.467,683.816 855.026,683.816 855.585,683.816 856.145,683.816 856.704,683.816 857.263,683.816 857.822,683.816 858.382,683.816 858.941,683.816 859.5,683.816 860.059,683.816 860.619,683.816 861.178,683.816 861.737,683.816 862.296,683.816 862.856,683.816 863.415,683.816 863.974,683.816 864.533,683.816 865.093,683.816 865.652,683.816 866.211,683.816 866.77,683.816 867.33,683.816 867.889,683.816 868.448,683.816 869.007,683.816 869.567,683.816 870.126,683.816 870.685,683.816 871.244,683.816 871.804,683.816 872.363,683.816 872.922,683.816 873.481,683.816 874.041,683.816 874.6,683.816 875.159,683.816 875.718,683.816 876.278,683.816 876.837,683.816 877.396,683.816 877.955,683.816 878.515,683.816 879.074,683.816 879.633,683.816 880.192,683.816 880.752,683.816 881.311,683.816 881.87,683.816 882.429,683.816 882.989,683.816 883.548,683.816 884.107,683.816 884.666,683.816 885.226,683.816 885.785,683.816 886.344,683.816 886.903,683.816 887.463,683.816 888.022,683.816 888.581,683.816 889.14,683.816 889.7,683.816 890.259,683.816 890.818,683.816 891.377,683.816 891.937,683.816 892.496,683.816 893.055,683.816 893.614,683.816 894.174,683.816 894.733,683.816 895.292,683.816 895.851,683.816 896.411,683.816 896.97,683.816 897.529,683.816 898.088,683.816 898.648,683.816 899.207,683.816 899.766,683.816 900.325,683.816 900.885,683.816 901.444,683.816 902.003,683.816 902.562,683.816 903.122,683.816 903.681,683.816 904.24,683.816 904.799,683.816 905.359,683.816 905.918,683.816 906.477,683.816 907.036,683.816 907.596,683.816 908.155,683.816 908.714,683.816 909.273,683.816 909.833,683.816 910.392,683.816 910.951,683.816 911.51,683.816 912.07,683.816 912.629,683.816 913.188,683.816 913.747,683.816 914.307,683.816 914.866,683.816 915.425,683.816 915.984,683.816 916.544,683.816 917.103,683.816 917.662,683.816 918.221,683.816 918.781,683.816 919.34,683.816 919.899,683.816 920.458,683.816 921.018,683.816 921.577,683.816 922.136,683.816 922.695,683.816 923.255,683.816 923.814,683.816 924.373,683.816 924.932,683.816 925.492,683.816 926.051,683.816 926.61,683.816 927.169,683.816 927.729,683.816 928.288,683.816 928.847,683.816 929.406,683.816 929.966,683.816 930.525,683.816 931.084,683.816 931.644,683.816 932.203,683.816 932.762,683.816 933.321,683.816 933.881,683.816 934.44,683.816 934.999,683.816 935.558,683.816 936.118,683.816 936.677,683.816 937.236,683.816 937.795,683.816 938.355,683.816 938.914,683.816 939.473,683.816 940.032,683.816 940.592,683.816 941.151,683.816 941.71,683.816 942.269,683.816 942.829,683.816 943.388,683.816 943.947,683.816 944.506,683.816 945.066,683.816 945.625,683.816 946.184,683.816 946.743,683.816 947.303,683.816 947.862,683.816 948.421,683.816 948.98,683.816 949.54,683.816 950.099,683.816 950.658,683.816 951.217,683.816 951.777,683.816 952.336,683.816 952.895,683.816 953.454,683.816 954.014,683.816 954.573,683.816 955.132,683.816 955.691,683.816 956.251,683.816 956.81,683.816 957.369,683.816 957.928,683.816 958.488,683.816 959.047,683.816 959.606,683.816 960.165,683.816 960.725,683.816 961.284,683.816 961.843,683.816 962.402,683.816 962.962,683.816 963.521,683.816 964.08,683.816 964.639,683.816 965.199,683.816 965.758,683.816 966.317,683.816 966.876,683.816 967.436,683.816 967.995,683.816 968.554,683.816 969.113,683.816 969.673,683.816 970.232,683.816 970.791,683.816 971.35,683.816 971.91,683.816 972.469,683.816 973.028,683.816 973.587,683.816 974.147,683.816 974.706,683.816 975.265,683.816 975.824,683.816 976.384,683.816 976.943,683.816 977.502,683.816 978.061,683.816 978.621,683.816 979.18,683.816 979.739,683.816 980.298,683.816 980.858,683.816 981.417,683.816 981.976,683.816 982.535,683.816 983.095,683.816 983.654,683.816 984.213,683.816 984.772,683.816 985.332,683.816 985.891,683.816 986.45,683.816 987.009,683.816 987.569,683.816 988.128,683.816 988.687,683.816 989.246,683.816 989.806,683.816 990.365,683.816 990.924,683.816 991.483,683.816 992.043,683.816 992.602,683.816 993.161,683.816 993.72,683.816 994.28,683.816 994.839,683.816 995.398,683.816 995.957,683.816 996.517,683.816 997.076,683.816 997.635,683.816 998.194,683.816 998.754,683.816 999.313,683.816 999.872,683.816 1000.43,683.816 1000.99,683.816 1001.55,683.816 1002.11,683.816 1002.67,683.816 1003.23,683.816 1003.79,683.816 1004.35,683.816 1004.91,683.816 1005.46,683.816 1006.02,683.816 1006.58,683.816 1007.14,683.816 1007.7,683.816 1008.26,683.816 1008.82,683.816 1009.38,683.816 1009.94,683.816 1010.5,683.816 1011.06,683.816 1011.62,683.816 1012.18,683.816 1012.73,683.816 1013.29,683.816 1013.85,683.816 1014.41,683.816 1014.97,683.816 1015.53,683.816 1016.09,683.816 1016.65,683.816 1017.21,683.816 1017.77,683.816 1018.33,683.816 1018.89,683.816 1019.45,683.816 1020.01,683.816 1020.56,683.816 1021.12,683.816 1021.68,683.816 1022.24,683.816 1022.8,683.816 1023.36,683.816 1023.92,683.816 1024.48,683.816 1025.04,683.816 1025.6,683.816 1026.16,683.816 1026.72,683.816 1027.28,683.816 1027.83,683.816 1028.39,683.816 1028.95,683.816 1029.51,683.816 1030.07,683.816 1030.63,683.816 1031.19,683.816 1031.75,683.816 1032.31,683.816 1032.87,683.816 1033.43,683.816 1033.99,683.816 1034.55,683.816 1035.1,683.816 1035.66,683.816 1036.22,683.816 1036.78,683.816 1037.34,683.816 1037.9,683.816 1038.46,683.816 1039.02,683.816 1039.58,683.816 1040.14,683.816 1040.7,683.816 1041.26,683.816 1041.82,683.816 1042.38,683.816 1042.93,683.816 1043.49,683.816 1044.05,683.816 1044.61,683.816 1045.17,683.816 1045.73,683.816 1046.29,683.816 1046.85,683.816 1047.41,683.816 1047.97,683.816 1048.53,683.816 1049.09,683.816 1049.65,683.816 1050.2,683.816 1050.76,683.816 1051.32,683.816 1051.88,683.816 1052.44,683.816 1053,683.816 1053.56,683.816 1054.12,683.816 1054.68,683.816 1055.24,683.816 1055.8,683.816 1056.36,683.816 1056.92,683.816 1057.48,683.816 1058.03,683.816 1058.59,683.816 1059.15,683.816 1059.71,683.816 1060.27,683.816 1060.83,683.816 1061.39,683.816 1061.95,683.816 1062.51,683.816 1063.07,683.816 1063.63,683.816 1064.19,683.816 1064.75,683.816 1065.3,683.816 1065.86,683.816 1066.42,683.816 1066.98,683.816 1067.54,683.816 1068.1,683.816 1068.66,683.816 1069.22,683.816 1069.78,683.816 1070.34,683.816 1070.9,683.816 1071.46,683.816 1072.02,683.816 1072.57,683.816 1073.13,683.816 1073.69,683.816 1074.25,683.816 1074.81,683.816 1075.37,683.816 1075.93,683.816 1076.49,683.816 1077.05,683.816 1077.61,683.816 1078.17,683.816 1078.73,683.816 1079.29,683.816 1079.85,683.816 1080.4,683.816 1080.96,683.816 1081.52,683.816 1082.08,683.816 1082.64,683.816 1083.2,683.816 1083.76,683.816 1084.32,683.816 1084.88,683.816 1085.44,683.816 1086,683.816 1086.56,683.816 1087.12,683.816 1087.67,683.816 1088.23,683.816 1088.79,683.816 1089.35,683.816 1089.91,683.816 1090.47,683.816 1091.03,683.816 1091.59,683.816 1092.15,683.816 1092.71,683.816 1093.27,683.816 1093.83,683.816 1094.39,683.816 1094.94,683.816 1095.5,683.816 1096.06,683.816 1096.62,683.816 1097.18,683.816 1097.74,683.816 1098.3,683.816 1098.86,683.816 1099.42,683.816 1099.98,683.816 1100.54,683.816 1101.1,683.816 1101.66,683.816 1102.22,683.816 1102.77,683.816 1103.33,683.816 1103.89,683.816 1104.45,683.816 1105.01,683.816 1105.57,683.816 1106.13,683.816 1106.69,683.816 1107.25,683.816 1107.81,683.816 1108.37,683.816 1108.93,683.816 1109.49,683.816 1110.04,683.816 1110.6,683.816 1111.16,683.816 1111.72,683.816 1112.28,683.816 1112.84,683.816 1113.4,683.816 1113.96,683.816 1114.52,683.816 1115.08,683.816 1115.64,683.816 1116.2,683.816 1116.76,683.816 1117.31,683.816 1117.87,683.816 1118.43,683.816 1118.99,683.816 1119.55,683.816 1120.11,683.816 1120.67,683.816 1121.23,683.816 1121.79,683.816 1122.35,683.816 1122.91,683.816 1123.47,683.816 1124.03,683.816 1124.59,683.816 1125.14,683.816 1125.7,683.816 1126.26,683.816 1126.82,683.816 1127.38,683.816 1127.94,683.816 1128.5,683.816 1129.06,683.816 1129.62,683.816 1130.18,683.816 1130.74,683.816 1131.3,683.816 1131.86,683.816 1132.41,683.816 1132.97,683.816 1133.53,683.816 1134.09,683.816 1134.65,683.816 1135.21,683.816 1135.77,683.816 1136.33,683.816 1136.89,683.816 1137.45,683.816 1138.01,683.816 1138.57,683.816 1139.13,683.816 1139.68,683.816 1140.24,683.816 1140.8,683.816 1141.36,683.816 1141.92,683.816 1142.48,683.816 1143.04,683.816 1143.6,683.816 1144.16,683.816 1144.72,683.816 1145.28,683.816 1145.84,683.816 1146.4,683.816 1146.96,683.816 1147.51,683.816 1148.07,683.816 1148.63,683.816 1149.19,683.816 1149.75,683.816 1150.31,683.816 1150.87,683.816 1151.43,683.816 1151.99,683.816 1152.55,683.816 1153.11,683.816 1153.67,683.816 1154.23,683.816 1154.78,683.816 1155.34,683.816 1155.9,683.816 1156.46,683.816 1157.02,683.816 1157.58,683.816 1158.14,683.816 1158.7,683.816 1159.26,683.816 1159.82,683.816 1160.38,683.816 1160.94,683.816 1161.5,683.816 1162.05,683.816 1162.61,683.816 1163.17,683.816 1163.73,683.816 1164.29,683.816 1164.85,683.816 1165.41,683.816 1165.97,683.816 1166.53,683.816 1167.09,683.816 1167.65,683.816 1168.21,683.816 1168.77,683.816 1169.33,683.816 1169.88,683.816 1170.44,683.816 1171,683.816 1171.56,683.816 1172.12,683.816 1172.68,683.816 1173.24,683.816 1173.8,683.816 1174.36,683.816 1174.92,683.816 1175.48,683.816 1176.04,683.816 1176.6,683.816 1177.15,683.816 1177.71,683.816 1178.27,683.816 1178.83,683.816 1179.39,683.816 1179.95,683.816 1180.51,683.816 1181.07,683.816 1181.63,683.816 1182.19,683.816 1182.75,683.816 1183.31,683.816 1183.87,683.816 1184.43,683.816 1184.98,683.816 1185.54,683.816 1186.1,683.816 1186.66,683.816 1187.22,683.816 1187.78,683.816 1188.34,683.816 1188.9,683.816 1189.46,683.816 1190.02,683.816 1190.58,683.816 1191.14,683.816 1191.7,683.816 1192.25,683.816 1192.81,683.816 1193.37,683.816 1193.93,683.816 1194.49,683.816 1195.05,683.816 1195.61,683.816 1196.17,683.816 1196.73,683.816 1197.29,683.816 1197.85,683.816 1198.41,683.816 1198.97,683.816 1199.52,683.816 1200.08,683.816 1200.64,683.816 1201.2,683.816 1201.76,683.816 1202.32,683.816 1202.88,683.816 1203.44,683.816 1204,683.816 1204.56,683.816 1205.12,683.816 1205.68,683.816 1206.24,683.816 1206.8,683.816 1207.35,683.816 1207.91,683.816 1208.47,683.816 1209.03,683.816 1209.59,683.816 1210.15,683.816 1210.71,683.816 1211.27,683.816 1211.83,683.816 1212.39,683.816 1212.95,683.816 1213.51,683.816 1214.07,683.816 1214.62,683.816 1215.18,683.816 1215.74,683.816 1216.3,683.816 1216.86,683.816 1217.42,683.816 1217.98,683.816 1218.54,683.816 1219.1,683.816 1219.66,683.816 1220.22,683.816 1220.78,683.816 1221.34,683.816 1221.89,683.816 1222.45,683.816 1223.01,683.816 1223.57,683.816 1224.13,683.816 1224.69,683.816 1225.25,683.816 1225.81,683.816 1226.37,683.816 1226.93,683.816 1227.49,683.816 1228.05,683.816 1228.61,683.816 1229.17,683.816 1229.72,683.816 1230.28,683.816 1230.84,683.816 1231.4,683.816 1231.96,683.816 1232.52,683.816 1233.08,683.816 1233.64,683.816 1234.2,683.816 1234.76,683.816 1235.32,683.816 1235.88,683.816 1236.44,683.816 1236.99,683.816 1237.55,683.816 1238.11,683.816 1238.67,683.816 1239.23,683.816 1239.79,683.816 1240.35,683.816 1240.91,683.816 1241.47,683.816 1242.03,683.816 1242.59,683.816 1243.15,683.816 1243.71,683.816 1244.26,683.816 1244.82,683.816 1245.38,683.816 1245.94,683.816 1246.5,683.816 1247.06,683.816 1247.62,683.816 1248.18,683.816 1248.74,683.816 1249.3,683.816 1249.86,683.816 1250.42,683.816 1250.98,683.816 1251.54,683.816 1252.09,683.816 1252.65,683.816 1253.21,683.816 1253.77,683.816 1254.33,683.816 1254.89,683.816 1255.45,683.816 1256.01,683.816 1256.57,683.816 1257.13,683.816 1257.69,683.816 1258.25,683.816 1258.81,683.816 1259.36,683.816 1259.92,683.816 1260.48,683.816 1261.04,683.816 1261.6,683.816 1262.16,683.816 1262.72,683.816 1263.28,683.816 1263.84,683.816 1264.4,683.816 1264.96,683.816 1265.52,683.816 1266.08,683.816 1266.63,683.816 1267.19,683.816 1267.75,683.816 1268.31,683.816 1268.87,683.816 1269.43,683.816 1269.99,683.816 1270.55,683.816 1271.11,683.816 1271.67,683.816 1272.23,683.816 1272.79,683.816 1273.35,683.816 1273.91,683.816 1274.46,683.816 1275.02,683.816 1275.58,683.816 1276.14,683.816 1276.7,683.816 1277.26,683.816 1277.82,683.816 1278.38,683.816 1278.94,683.816 1279.5,683.816 1280.06,683.816 1280.62,683.816 1281.18,683.816 1281.73,683.816 1282.29,683.816 1282.85,683.816 1283.41,683.816 1283.97,683.816 1284.53,683.816 1285.09,683.816 1285.65,683.816 1286.21,683.816 1286.77,683.816 1287.33,683.816 1287.89,683.816 1288.45,683.816 1289,683.816 1289.56,683.816 1290.12,683.816 1290.68,683.816 1291.24,683.816 1291.8,683.816 1292.36,683.816 1292.92,683.816 1293.48,683.816 1294.04,683.816 1294.6,683.816 1295.16,683.816 1295.72,683.816 1296.28,683.816 1296.83,683.816 1297.39,683.816 1297.95,683.816 1298.51,683.816 1299.07,683.816 1299.63,683.816 1300.19,683.816 1300.75,683.816 1301.31,683.816 1301.87,683.816 1302.43,683.816 1302.99,683.816 1303.55,683.816 1304.1,683.816 1304.66,683.816 1305.22,683.816 1305.78,683.816 1306.34,683.816 1306.9,683.816 1307.46,683.816 1308.02,683.816 1308.58,683.816 1309.14,683.816 1309.7,683.816 1310.26,683.816 1310.82,683.816 1311.38,683.816 1311.93,683.816 1312.49,683.816 1313.05,683.816 1313.61,683.816 1314.17,683.816 1314.73,683.816 1315.29,683.816 1315.85,683.816 1316.41,683.816 1316.97,683.816 1317.53,683.816 1318.09,683.816 1318.65,683.816 1319.2,683.816 1319.76,683.816 1320.32,683.816 1320.88,683.816 1321.44,683.816 1322,683.816 1322.56,683.816 1323.12,683.816 1323.68,683.816 1324.24,683.816 1324.8,683.816 1325.36,683.816 1325.92,683.816 1326.47,683.816 1327.03,683.816 1327.59,683.816 1328.15,683.816 1328.71,683.816 1329.27,683.816 1329.83,683.816 1330.39,683.816 1330.95,683.816 1331.51,683.816 1332.07,683.816 1332.63,683.816 1333.19,683.816 1333.75,683.816 1334.3,683.816 1334.86,683.816 1335.42,683.816 1335.98,683.816 1336.54,683.816 1337.1,683.816 1337.66,683.816 1338.22,683.816 1338.78,683.816 1339.34,683.816 1339.9,683.816 1340.46,683.816 1341.02,683.816 1341.57,683.816 1342.13,683.816 1342.69,683.816 1343.25,683.816 1343.81,683.816 1344.37,683.816 1344.93,683.816 1345.49,683.816 1346.05,683.816 1346.61,683.816 1347.17,683.816 1347.73,683.816 1348.29,683.816 1348.84,683.816 1349.4,683.816 1349.96,683.816 1350.52,683.816 1351.08,683.816 1351.64,683.816 1352.2,683.816 1352.76,683.816 1353.32,683.816 1353.88,683.816 1354.44,683.816 1355,683.816 1355.56,683.816 1356.12,683.816 1356.67,683.816 1357.23,683.816 1357.79,683.816 1358.35,683.816 1358.91,683.816 1359.47,683.816 1360.03,683.816 1360.59,683.816 1361.15,683.816 1361.71,683.816 1362.27,683.816 1362.83,683.816 1363.39,683.816 1363.94,683.816 1364.5,683.816 1365.06,683.816 1365.62,683.816 1366.18,683.816 1366.74,683.816 1367.3,683.816 1367.86,683.816 1368.42,683.816 1368.98,683.816 1369.54,683.816 1370.1,683.816 1370.66,683.816 1371.21,683.816 1371.77,683.816 1372.33,683.816 1372.89,683.816 1373.45,683.816 1374.01,683.816 1374.57,683.816 1375.13,683.816 1375.69,683.816 1376.25,683.816 1376.81,683.816 1377.37,683.816 1377.93,683.816 1378.49,683.816 1379.04,683.816 1379.6,683.816 1380.16,683.816 1380.72,683.816 1381.28,683.816 1381.84,683.816 1382.4,683.816 1382.96,683.816 1383.52,683.816 1384.08,683.816 1384.64,683.816 1385.2,683.816 1385.76,683.816 1386.31,683.816 1386.87,683.816 1387.43,683.816 1387.99,683.816 1388.55,683.816 1389.11,683.816 1389.67,683.816 1390.23,683.816 1390.79,683.816 1391.35,683.816 1391.91,683.816 1392.47,683.816 1393.03,683.816 1393.58,683.816 1394.14,683.816 1394.7,683.816 1395.26,683.816 1395.82,683.816 1396.38,683.816 1396.94,683.816 1397.5,683.816 1398.06,683.816 1398.62,683.816 1399.18,683.816 1399.74,683.816 1400.3,683.816 1400.86,683.816 1401.41,683.816 1401.97,683.816 1402.53,683.816 1403.09,683.816 1403.65,683.816 1404.21,683.816 1404.77,683.816 1405.33,683.816 1405.89,683.816 1406.45,683.816 1407.01,683.816 1407.57,683.816 1408.13,683.816 1408.68,683.816 1409.24,683.816 1409.8,683.816 1410.36,683.816 1410.92,683.816 1411.48,683.816 1412.04,683.816 1412.6,683.816 1413.16,683.816 1413.72,683.816 1414.28,683.816 1414.84,683.816 1415.4,683.816 1415.95,683.816 1416.51,683.816 1417.07,683.816 1417.63,683.816 1418.19,683.816 1418.75,683.816 1419.31,683.816 1419.87,683.816 1420.43,683.816 1420.99,683.816 1421.55,683.816 1422.11,683.816 1422.67,683.816 1423.23,683.816 1423.78,683.816 1424.34,683.816 1424.9,683.816 1425.46,683.816 1426.02,683.816 1426.58,683.816 1427.14,683.816 1427.7,683.816 1428.26,683.816 1428.82,683.816 1429.38,683.816 1429.94,683.816 1430.5,683.816 1431.05,683.816 1431.61,683.816 1432.17,683.816 1432.73,683.816 1433.29,683.816 1433.85,683.816 1434.41,683.816 1434.97,683.816 1435.53,683.816 1436.09,683.816 1436.65,683.816 1437.21,683.816 1437.77,683.816 1438.33,683.816 1438.88,683.816 1439.44,683.816 1440,683.816 1440.56,683.816 1441.12,683.816 1441.68,683.816 1442.24,683.816 1442.8,683.816 1443.36,683.816 1443.92,683.816 1444.48,683.816 1445.04,683.816 1445.6,683.816 1446.15,683.816 1446.71,683.816 1447.27,683.816 1447.83,683.816 1448.39,683.816 1448.95,683.816 1449.51,683.816 1450.07,683.816 1450.63,683.816 1451.19,683.816 1451.75,683.816 1452.31,683.816 1452.87,683.816 1453.42,683.816 1453.98,683.816 1454.54,683.816 1455.1,683.816 1455.66,683.816 1456.22,683.816 1456.78,683.816 1457.34,683.816 1457.9,683.816 1458.46,683.816 1459.02,683.816 1459.58,683.816 1460.14,683.816 1460.7,683.816 1461.25,683.816 1461.81,683.816 1462.37,683.816 1462.93,683.816 1463.49,683.816 1464.05,683.816 1464.61,683.816 1465.17,683.816 1465.73,683.816 1466.29,683.816 1466.85,683.816 1467.41,683.816 1467.97,683.816 1468.52,683.816 1469.08,683.816 1469.64,683.816 1470.2,683.816 1470.76,683.816 1471.32,683.816 1471.88,683.816 1472.44,683.816 1473,683.816 1473.56,683.816 1474.12,683.816 1474.68,683.816 1475.24,683.816 1475.79,683.816 1476.35,683.816 1476.91,683.816 1477.47,683.816 1478.03,683.816 1478.59,683.816 1479.15,683.816 1479.71,683.816 1480.27,683.816 1480.83,683.816 1481.39,683.816 1481.95,683.816 1482.51,683.816 1483.07,683.816 1483.62,683.816 1484.18,683.816 1484.74,683.816 1485.3,683.816 1485.86,683.816 1486.42,683.816 1486.98,683.816 1487.54,683.816 1488.1,683.816 1488.66,683.816 1489.22,683.816 1489.78,683.816 1490.34,683.816 1490.89,683.816 1491.45,683.816 1492.01,683.816 1492.57,683.816 1493.13,683.816 1493.69,683.816 1494.25,683.816 1494.81,683.816 1495.37,683.816 1495.93,683.816 1496.49,683.816 1497.05,683.816 1497.61,683.816 1498.16,683.816 1498.72,683.816 1499.28,683.816 1499.84,683.816 1500.4,683.816 1500.96,683.816 1501.52,683.816 1502.08,683.816 1502.64,683.816 1503.2,683.816 1503.76,683.816 1504.32,683.816 1504.88,683.816 1505.44,683.816 1505.99,683.816 1506.55,683.816 1507.11,683.816 1507.67,683.816 1508.23,683.816 1508.79,683.816 1509.35,683.816 1509.91,683.816 1510.47,683.816 1511.03,683.816 1511.59,683.816 1512.15,683.816 1512.71,683.816 1513.26,683.816 1513.82,683.816 1514.38,683.816 1514.94,683.816 1515.5,683.816 1516.06,683.816 1516.62,683.816 1517.18,683.816 1517.74,683.816 1518.3,683.816 1518.86,683.816 1519.42,683.816 1519.98,683.816 1520.53,683.816 1521.09,683.816 1521.65,683.816 1522.21,683.816 1522.77,683.816 1523.33,683.816 1523.89,683.816 1524.45,683.816 1525.01,683.816 1525.57,683.816 1526.13,683.816 1526.69,683.816 1527.25,683.816 1527.81,683.816 1528.36,683.816 1528.92,683.816 1529.48,683.816 1530.04,683.816 1530.6,683.816 1531.16,683.816 1531.72,683.816 1532.28,683.816 1532.84,683.816 1533.4,683.816 1533.96,683.816 1534.52,683.816 1535.08,683.816 1535.63,683.816 1536.19,683.816 1536.75,683.816 1537.31,683.816 1537.87,683.816 1538.43,683.816 1538.99,683.816 1539.55,683.816 1540.11,683.816 1540.67,683.816 1541.23,683.816 1541.79,683.816 1542.35,683.816 1542.9,683.816 1543.46,683.816 1544.02,683.816 1544.58,683.816 1545.14,683.816 1545.7,683.816 1546.26,683.816 1546.82,683.816 1547.38,683.816 1547.94,683.816 1548.5,683.816 1549.06,683.816 1549.62,683.816 1550.18,683.816 1550.73,683.816 1551.29,683.816 1551.85,683.816 1552.41,683.816 1552.97,683.816 1553.53,683.816 1554.09,683.816 1554.65,683.816 1555.21,683.816 1555.77,683.816 1556.33,683.816 1556.89,683.816 1557.45,683.816 1558,683.816 1558.56,683.816 1559.12,683.816 1559.68,683.816 1560.24,683.816 1560.8,683.816 1561.36,683.816 1561.92,683.816 1562.48,683.816 1563.04,683.816 1563.6,683.816 1564.16,683.816 1564.72,683.816 1565.28,683.816 1565.83,683.816 1566.39,683.816 1566.95,683.816 1567.51,683.816 1568.07,683.816 1568.63,683.816 1569.19,683.816 1569.75,683.816 1570.31,683.816 1570.87,683.816 1571.43,683.816 1571.99,683.816 1572.55,683.816 1573.1,683.816 1573.66,683.816 1574.22,683.816 1574.78,683.816 1575.34,683.816 1575.9,683.816 1576.46,683.816 1577.02,683.816 1577.58,683.816 1578.14,683.816 1578.7,683.816 1579.26,683.816 1579.82,683.816 1580.37,683.816 1580.93,683.816 1581.49,683.816 1582.05,683.816 1582.61,683.816 1583.17,683.816 1583.73,683.816 1584.29,683.816 1584.85,683.816 1585.41,683.816 1585.97,683.816 1586.53,683.816 1587.09,683.816 1587.65,683.816 1588.2,683.816 1588.76,683.816 1589.32,683.816 1589.88,683.816 1590.44,683.816 1591,683.816 1591.56,683.816 1592.12,683.816 1592.68,683.816 1593.24,683.816 1593.8,683.816 1594.36,683.816 1594.92,683.816 1595.47,683.816 1596.03,683.816 1596.59,683.816 1597.15,683.816 1597.71,683.816 1598.27,683.816 1598.83,683.816 1599.39,683.816 1599.95,683.816 1600.51,683.816 1601.07,683.816 1601.63,683.816 1602.19,683.816 1602.74,683.816 1603.3,683.816 1603.86,683.816 1604.42,683.816 1604.98,683.816 1605.54,683.816 1606.1,683.816 1606.66,683.816 1607.22,683.816 1607.78,683.816 1608.34,683.816 1608.9,683.816 1609.46,683.816 1610.02,683.816 1610.57,683.816 1611.13,683.816 1611.69,683.816 1612.25,683.816 1612.81,683.816 1613.37,683.816 1613.93,683.816 1614.49,683.816 1615.05,683.816 1615.61,683.816 1616.17,683.816 1616.73,683.816 1617.29,683.816 1617.84,683.816 1618.4,683.816 1618.96,683.816 1619.52,683.816 1620.08,683.816 1620.64,683.816 1621.2,683.816 1621.76,683.816 1622.32,683.816 1622.88,683.816 1623.44,683.816 1624,683.816 1624.56,683.816 1625.11,683.816 1625.67,683.816 1626.23,683.816 1626.79,683.816 1627.35,683.816 1627.91,683.816 1628.47,683.816 1629.03,683.816 1629.59,683.816 1630.15,683.816 1630.71,683.816 1631.27,683.816 1631.83,683.816 1632.39,683.816 1632.94,683.816 1633.5,683.816 1634.06,683.816 1634.62,683.816 1635.18,683.816 1635.74,683.816 1636.3,683.816 1636.86,683.816 1637.42,683.816 1637.98,683.816 1638.54,683.816 1639.1,683.816 1639.66,683.816 1640.21,683.816 1640.77,683.816 1641.33,683.816 1641.89,683.816 1642.45,683.816 1643.01,683.816 1643.57,683.816 1644.13,683.816 1644.69,683.816 1645.25,683.816 1645.81,683.816 1646.37,683.816 1646.93,683.816 1647.48,683.816 1648.04,683.816 1648.6,683.816 1649.16,683.816 1649.72,683.816 1650.28,683.816 1650.84,683.816 1651.4,683.816 1651.96,683.816 1652.52,683.816 1653.08,683.816 1653.64,683.816 1654.2,683.816 1654.76,683.816 1655.31,683.816 1655.87,683.816 1656.43,683.816 1656.99,683.816 1657.55,683.816 1658.11,683.816 1658.67,683.816 1659.23,683.816 1659.79,683.816 1660.35,683.816 1660.91,683.816 1661.47,683.816 1662.03,683.816 1662.58,683.816 1663.14,683.816 1663.7,683.816 1664.26,683.816 1664.82,683.816 1665.38,683.816 1665.94,683.816 1666.5,683.816 1667.06,683.816 1667.62,683.816 1668.18,683.816 1668.74,683.816 1669.3,683.816 1669.85,683.816 1670.41,683.816 1670.97,683.816 1671.53,683.816 1672.09,683.816 1672.65,683.816 1673.21,683.816 1673.77,683.816 1674.33,683.816 1674.89,683.816 1675.45,683.816 1676.01,683.816 1676.57,683.816 1677.13,683.816 1677.68,683.816 1678.24,683.816 1678.8,683.816 1679.36,683.816 1679.92,683.816 1680.48,683.816 1681.04,683.816 1681.6,683.816 1682.16,683.816 1682.72,683.816 1683.28,683.816 1683.84,683.816 1684.4,683.816 1684.95,683.816 1685.51,683.816 1686.07,683.816 1686.63,683.816 1687.19,683.816 1687.75,683.816 1688.31,683.816 1688.87,683.816 1689.43,683.816 1689.99,683.816 1690.55,683.816 1691.11,683.816 1691.67,683.816 1692.23,683.816 1692.78,683.816 1693.34,683.816 1693.9,683.816 1694.46,683.816 1695.02,683.816 1695.58,683.816 1696.14,683.816 1696.7,683.816 1697.26,683.816 1697.82,683.816 1698.38,683.816 1698.94,683.816 1699.5,683.816 1700.05,683.816 1700.61,683.816 1701.17,683.816 1701.73,683.816 1702.29,683.816 1702.85,683.816 1703.41,683.816 1703.97,683.816 1704.53,683.816 1705.09,683.816 1705.65,683.816 1706.21,683.816 1706.77,683.816 1707.32,683.816 1707.88,683.816 1708.44,683.816 1709,683.816 1709.56,683.816 1710.12,683.816 1710.68,683.816 1711.24,683.816 1711.8,683.816 1712.36,683.816 1712.92,683.816 1713.48,683.816 1714.04,683.816 1714.6,683.816 1715.15,683.816 1715.71,683.816 1716.27,683.816 1716.83,683.816 1717.39,683.816 1717.95,683.816 1718.51,683.816 1719.07,683.816 1719.63,683.816 1720.19,683.816 1720.75,683.816 1721.31,683.816 1721.87,683.816 1722.42,683.816 1722.98,683.816 1723.54,683.816 1724.1,683.816 1724.66,683.816 1725.22,683.816 1725.78,683.816 1726.34,683.816 1726.9,683.816 1727.46,683.816 1728.02,683.816 1728.58,683.816 1729.14,683.816 1729.69,683.816 1730.25,683.816 1730.81,683.816 1731.37,683.816 1731.93,683.816 1732.49,683.816 1733.05,683.816 1733.61,683.816 1734.17,683.816 1734.73,683.816 1735.29,683.816 1735.85,683.816 1736.41,683.816 1736.97,683.816 1737.52,683.816 1738.08,683.816 1738.64,683.816 1739.2,683.816 1739.76,683.816 1740.32,683.816 1740.88,683.816 1741.44,683.816 1742,683.816 1742.56,683.816 1743.12,683.816 1743.68,683.816 1744.24,683.816 1744.79,683.816 1745.35,683.816 1745.91,683.816 1746.47,683.816 1747.03,683.816 1747.59,683.816 1748.15,683.816 1748.71,683.816 1749.27,683.816 1749.83,683.816 1750.39,683.816 1750.95,683.816 1751.51,683.816 1752.06,683.816 1752.62,683.816 1753.18,683.816 1753.74,683.816 1754.3,683.816 1754.86,683.816 1755.42,683.816 1755.98,683.816 1756.54,683.816 1757.1,683.816 1757.66,683.816 1758.22,683.816 1758.78,683.816 1759.34,683.816 1759.89,683.816 1760.45,683.816 1761.01,683.816 1761.57,683.816 1762.13,683.816 1762.69,683.816 1763.25,683.816 1763.81,683.816 1764.37,683.816 1764.93,683.816 1765.49,683.816 1766.05,683.816 1766.61,683.816 1767.16,683.816 1767.72,683.816 1768.28,683.816 1768.84,683.816 1769.4,683.816 1769.96,683.816 1770.52,683.816 1771.08,683.816 1771.64,683.816 1772.2,683.816 1772.76,683.816 1773.32,683.816 1773.88,683.816 1774.43,683.816 1774.99,683.816 1775.55,683.816 1776.11,683.816 1776.67,683.816 1777.23,683.816 1777.79,683.816 1778.35,683.816 1778.91,683.816 1779.47,683.816 1780.03,683.816 1780.59,683.816 1781.15,683.816 1781.71,683.816 1782.26,683.816 1782.82,683.816 1783.38,683.816 1783.94,683.816 1784.5,683.816 1785.06,683.816 1785.62,683.816 1786.18,683.816 1786.74,683.816 1787.3,683.816 1787.86,683.816 1788.42,683.816 1788.98,683.816 1789.53,683.816 1790.09,683.816 1790.65,683.816 1791.21,683.816 1791.77,683.816 1792.33,683.816 1792.89,683.816 1793.45,683.816 1794.01,683.816 1794.57,683.816 1795.13,683.816 1795.69,683.816 1796.25,683.816 1796.8,683.816 1797.36,683.816 1797.92,683.816 1798.48,683.816 1799.04,683.816 1799.6,683.816 1800.16,683.816 1800.72,683.816 1801.28,683.816 1801.84,683.816 1802.4,683.816 1802.96,683.816 1803.52,683.816 1804.08,683.816 1804.63,683.816 1805.19,683.816 1805.75,683.816 1806.31,683.816 1806.87,683.816 1807.43,683.816 1807.99,683.816 1808.55,683.816 1809.11,683.816 1809.67,683.816 1810.23,683.816 1810.79,683.816 1811.35,683.816 1811.9,683.816 1812.46,683.816 1813.02,683.816 1813.58,683.816 1814.14,683.816 1814.7,683.816 1815.26,683.816 1815.82,683.816 1816.38,683.816 1816.94,683.816 1817.5,683.816 1818.06,683.816 1818.62,683.816 1819.18,683.816 1819.73,683.816 1820.29,683.816 1820.85,683.816 1821.41,683.816 1821.97,683.816 1822.53,683.816 1823.09,683.816 1823.65,683.816 1824.21,683.816 1824.77,683.816 1825.33,683.816 1825.89,683.816 1826.45,683.816 1827,683.816 1827.56,683.816 1828.12,683.816 1828.68,683.816 1829.24,683.816 1829.8,683.816 1830.36,683.816 1830.92,683.816 1831.48,683.816 1832.04,683.816 1832.6,683.816 1833.16,683.816 1833.72,683.816 1834.27,683.816 1834.83,683.816 1835.39,683.816 1835.95,683.816 1836.51,683.816 1837.07,683.816 1837.63,683.816 1838.19,683.816 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.036290217865776 ± 0.022362166899274057\nProjected Energy: -4.016251262649524 ± (0.004481683737981079, 0.0045220036356461435)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.45645</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3536e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.1782e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.188e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.362e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.625e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.716e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(true),Val(false))\n(BoseFS{2,4}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(false),Val(true))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
