var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip200\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip200)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip201\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip200)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip202\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip200)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1261.88 2211.02,1261.88 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1004 2211.02,1004 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.118 2211.02,746.118 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.239 2211.02,488.239 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.361 2211.02,230.361 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1261.88 423.181,1261.88 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1004 423.181,1004 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.118 423.181,746.118 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.239 423.181,488.239 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.361 423.181,230.361 \"/>\n<path clip-path=\"url(#clip200)\" d=\"M356.339 1247.67 Q352.728 1247.67 350.899 1251.24 Q349.094 1254.78 349.094 1261.91 Q349.094 1269.02 350.899 1272.58 Q352.728 1276.12 356.339 1276.12 Q359.973 1276.12 361.779 1272.58 Q363.608 1269.02 363.608 1261.91 Q363.608 1254.78 361.779 1251.24 Q359.973 1247.67 356.339 1247.67 M356.339 1243.97 Q362.149 1243.97 365.205 1248.58 Q368.284 1253.16 368.284 1261.91 Q368.284 1270.64 365.205 1275.24 Q362.149 1279.83 356.339 1279.83 Q350.529 1279.83 347.45 1275.24 Q344.395 1270.64 344.395 1261.91 Q344.395 1253.16 347.45 1248.58 Q350.529 1243.97 356.339 1243.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M290.043 1017.34 L306.363 1017.34 L306.363 1021.28 L284.418 1021.28 L284.418 1017.34 Q287.08 1014.59 291.664 1009.96 Q296.27 1005.3 297.451 1003.96 Q299.696 1001.44 300.576 999.703 Q301.478 997.943 301.478 996.254 Q301.478 993.499 299.534 991.763 Q297.613 990.027 294.511 990.027 Q292.312 990.027 289.858 990.791 Q287.427 991.554 284.65 993.105 L284.65 988.383 Q287.474 987.249 289.927 986.67 Q292.381 986.092 294.418 986.092 Q299.789 986.092 302.983 988.777 Q306.177 991.462 306.177 995.953 Q306.177 998.082 305.367 1000 Q304.58 1001.9 302.474 1004.49 Q301.895 1005.17 298.793 1008.38 Q295.691 1011.58 290.043 1017.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M316.224 986.717 L334.58 986.717 L334.58 990.652 L320.506 990.652 L320.506 999.124 Q321.524 998.777 322.543 998.615 Q323.562 998.429 324.58 998.429 Q330.367 998.429 333.747 1001.6 Q337.126 1004.77 337.126 1010.19 Q337.126 1015.77 333.654 1018.87 Q330.182 1021.95 323.862 1021.95 Q321.687 1021.95 319.418 1021.58 Q317.173 1021.21 314.765 1020.47 L314.765 1015.77 Q316.849 1016.9 319.071 1017.46 Q321.293 1018.01 323.77 1018.01 Q327.774 1018.01 330.112 1015.91 Q332.45 1013.8 332.45 1010.19 Q332.45 1006.58 330.112 1004.47 Q327.774 1002.36 323.77 1002.36 Q321.895 1002.36 320.02 1002.78 Q318.168 1003.2 316.224 1004.08 L316.224 986.717 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M356.339 989.795 Q352.728 989.795 350.899 993.36 Q349.094 996.902 349.094 1004.03 Q349.094 1011.14 350.899 1014.7 Q352.728 1018.24 356.339 1018.24 Q359.973 1018.24 361.779 1014.7 Q363.608 1011.14 363.608 1004.03 Q363.608 996.902 361.779 993.36 Q359.973 989.795 356.339 989.795 M356.339 986.092 Q362.149 986.092 365.205 990.698 Q368.284 995.281 368.284 1004.03 Q368.284 1012.76 365.205 1017.36 Q362.149 1021.95 356.339 1021.95 Q350.529 1021.95 347.45 1017.36 Q344.395 1012.76 344.395 1004.03 Q344.395 995.281 347.45 990.698 Q350.529 986.092 356.339 986.092 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M286.062 728.838 L304.418 728.838 L304.418 732.773 L290.344 732.773 L290.344 741.245 Q291.363 740.898 292.381 740.736 Q293.4 740.551 294.418 740.551 Q300.205 740.551 303.585 743.722 Q306.964 746.893 306.964 752.31 Q306.964 757.889 303.492 760.99 Q300.02 764.069 293.701 764.069 Q291.525 764.069 289.256 763.699 Q287.011 763.328 284.603 762.588 L284.603 757.889 Q286.687 759.023 288.909 759.578 Q291.131 760.134 293.608 760.134 Q297.613 760.134 299.951 758.028 Q302.288 755.921 302.288 752.31 Q302.288 748.699 299.951 746.592 Q297.613 744.486 293.608 744.486 Q291.733 744.486 289.858 744.903 Q288.006 745.319 286.062 746.199 L286.062 728.838 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M326.177 731.917 Q322.566 731.917 320.737 735.481 Q318.932 739.023 318.932 746.153 Q318.932 753.259 320.737 756.824 Q322.566 760.365 326.177 760.365 Q329.811 760.365 331.617 756.824 Q333.446 753.259 333.446 746.153 Q333.446 739.023 331.617 735.481 Q329.811 731.917 326.177 731.917 M326.177 728.213 Q331.987 728.213 335.043 732.819 Q338.122 737.403 338.122 746.153 Q338.122 754.879 335.043 759.486 Q331.987 764.069 326.177 764.069 Q320.367 764.069 317.288 759.486 Q314.233 754.879 314.233 746.153 Q314.233 737.403 317.288 732.819 Q320.367 728.213 326.177 728.213 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M356.339 731.917 Q352.728 731.917 350.899 735.481 Q349.094 739.023 349.094 746.153 Q349.094 753.259 350.899 756.824 Q352.728 760.365 356.339 760.365 Q359.973 760.365 361.779 756.824 Q363.608 753.259 363.608 746.153 Q363.608 739.023 361.779 735.481 Q359.973 731.917 356.339 731.917 M356.339 728.213 Q362.149 728.213 365.205 732.819 Q368.284 737.403 368.284 746.153 Q368.284 754.879 365.205 759.486 Q362.149 764.069 356.339 764.069 Q350.529 764.069 347.45 759.486 Q344.395 754.879 344.395 746.153 Q344.395 737.403 347.45 732.819 Q350.529 728.213 356.339 728.213 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M284.835 470.959 L307.057 470.959 L307.057 472.95 L294.511 505.519 L289.627 505.519 L301.432 474.894 L284.835 474.894 L284.835 470.959 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M316.224 470.959 L334.58 470.959 L334.58 474.894 L320.506 474.894 L320.506 483.367 Q321.524 483.019 322.543 482.857 Q323.562 482.672 324.58 482.672 Q330.367 482.672 333.747 485.843 Q337.126 489.015 337.126 494.431 Q337.126 500.01 333.654 503.112 Q330.182 506.191 323.862 506.191 Q321.687 506.191 319.418 505.82 Q317.173 505.45 314.765 504.709 L314.765 500.01 Q316.849 501.144 319.071 501.7 Q321.293 502.255 323.77 502.255 Q327.774 502.255 330.112 500.149 Q332.45 498.042 332.45 494.431 Q332.45 490.82 330.112 488.714 Q327.774 486.607 323.77 486.607 Q321.895 486.607 320.02 487.024 Q318.168 487.441 316.224 488.32 L316.224 470.959 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M356.339 474.038 Q352.728 474.038 350.899 477.603 Q349.094 481.144 349.094 488.274 Q349.094 495.38 350.899 498.945 Q352.728 502.487 356.339 502.487 Q359.973 502.487 361.779 498.945 Q363.608 495.38 363.608 488.274 Q363.608 481.144 361.779 477.603 Q359.973 474.038 356.339 474.038 M356.339 470.334 Q362.149 470.334 365.205 474.941 Q368.284 479.524 368.284 488.274 Q368.284 497.001 365.205 501.607 Q362.149 506.191 356.339 506.191 Q350.529 506.191 347.45 501.607 Q344.395 497.001 344.395 488.274 Q344.395 479.524 347.45 474.941 Q350.529 470.334 356.339 470.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M256.664 243.705 L264.303 243.705 L264.303 217.34 L255.992 219.006 L255.992 214.747 L264.256 213.081 L268.932 213.081 L268.932 243.705 L276.571 243.705 L276.571 247.641 L256.664 247.641 L256.664 243.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M296.015 216.159 Q292.404 216.159 290.576 219.724 Q288.77 223.266 288.77 230.395 Q288.77 237.502 290.576 241.067 Q292.404 244.608 296.015 244.608 Q299.65 244.608 301.455 241.067 Q303.284 237.502 303.284 230.395 Q303.284 223.266 301.455 219.724 Q299.65 216.159 296.015 216.159 M296.015 212.456 Q301.826 212.456 304.881 217.062 Q307.96 221.645 307.96 230.395 Q307.96 239.122 304.881 243.729 Q301.826 248.312 296.015 248.312 Q290.205 248.312 287.127 243.729 Q284.071 239.122 284.071 230.395 Q284.071 221.645 287.127 217.062 Q290.205 212.456 296.015 212.456 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M326.177 216.159 Q322.566 216.159 320.737 219.724 Q318.932 223.266 318.932 230.395 Q318.932 237.502 320.737 241.067 Q322.566 244.608 326.177 244.608 Q329.811 244.608 331.617 241.067 Q333.446 237.502 333.446 230.395 Q333.446 223.266 331.617 219.724 Q329.811 216.159 326.177 216.159 M326.177 212.456 Q331.987 212.456 335.043 217.062 Q338.122 221.645 338.122 230.395 Q338.122 239.122 335.043 243.729 Q331.987 248.312 326.177 248.312 Q320.367 248.312 317.288 243.729 Q314.233 239.122 314.233 230.395 Q314.233 221.645 317.288 217.062 Q320.367 212.456 326.177 212.456 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M356.339 216.159 Q352.728 216.159 350.899 219.724 Q349.094 223.266 349.094 230.395 Q349.094 237.502 350.899 241.067 Q352.728 244.608 356.339 244.608 Q359.973 244.608 361.779 241.067 Q363.608 237.502 363.608 230.395 Q363.608 223.266 361.779 219.724 Q359.973 216.159 356.339 216.159 M356.339 212.456 Q362.149 212.456 365.205 217.062 Q368.284 221.645 368.284 230.395 Q368.284 239.122 365.205 243.729 Q362.149 248.312 356.339 248.312 Q350.529 248.312 347.45 243.729 Q344.395 239.122 344.395 230.395 Q344.395 221.645 347.45 217.062 Q350.529 212.456 356.339 212.456 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip202)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.361 4017.76,230.361 \"/>\n<polyline clip-path=\"url(#clip202)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.52 456.554,1250.43 457.123,1250.29 457.691,1250.03 458.259,1249.74 458.828,1248.32 459.396,1246.88 459.964,1246.44 460.533,1245.96 461.101,1245.34 461.669,1244.67 462.238,1243.9 462.806,1243.05 463.375,1242.11 463.943,1241.08 464.511,1239.94 465.08,1237.67 465.648,1236.37 466.216,1234.95 466.785,1232.35 467.353,1229.66 467.921,1227.87 468.49,1225.93 469.058,1223.84 469.626,1221.58 470.195,1219.21 470.763,1216.66 471.331,1213.93 471.9,1209.96 472.468,1206.9 473.036,1203.59 473.605,1200.09 474.173,1195.41 474.741,1191.52 475.31,1186.37 475.878,1180 476.446,1174.49 477.015,1168.72 477.583,1162.82 478.152,1155.69 478.72,1149.33 479.288,1141.75 479.857,1136.01 480.425,1128.96 480.993,1122.76 481.562,1114.39 482.13,1104.71 482.698,1097.86 483.267,1089.84 483.835,1082.54 484.403,1075.1 484.972,1066.44 485.54,1057.59 486.108,1049.62 486.677,1040.58 487.245,1031.3 487.813,1019.82 488.382,1010.41 488.95,1001.92 489.518,991.114 490.087,982.389 490.655,973.488 491.224,964.552 491.792,955.389 492.36,944.013 492.929,931.637 493.497,920.31 494.065,910.979 494.634,898.283 495.202,886.889 495.77,875.456 496.339,865.19 496.907,854.901 497.475,844.616 498.044,833.258 498.612,821.015 499.18,811.899 499.749,800.738 500.317,788.697 500.885,778.783 501.454,769.895 502.022,759.928 502.59,751.042 503.159,740.001 503.727,729.112 504.295,719.48 504.864,710.039 505.432,701.711 506.001,691.175 506.569,681.868 507.137,670.509 507.706,661.514 508.274,651.532 508.842,642.687 509.411,632.883 509.979,623.286 510.547,612.807 511.116,605.636 511.684,595.573 512.252,588.607 512.821,579.85 513.389,572.168 513.957,563.549 514.526,555.176 515.094,549.072 515.662,542.905 516.231,534.828 516.799,528.846 517.367,521.977 517.936,510.993 518.504,504.357 519.072,500.988 519.641,494.535 520.209,485.15 520.778,475.814 521.346,468.949 521.914,463.161 522.483,457.402 523.051,451.851 523.619,447.476 524.188,442.061 524.756,437.801 525.324,433.676 525.893,429.519 526.461,425.618 527.029,419.655 527.598,414.862 528.166,407.896 528.734,404.275 529.303,399.552 529.871,395.225 530.439,390.681 531.008,385.276 531.576,382.252 532.144,374.25 532.713,369.513 533.281,368.031 533.85,365.513 534.418,361.978 534.986,357.483 535.555,355.212 536.123,353.041 536.691,350.816 537.26,348.459 537.828,346.363 538.396,345.265 538.965,342.795 539.533,340.675 540.101,338.385 540.67,336.136 541.238,331.998 541.806,329.093 542.375,327.163 542.943,323.262 543.511,322.555 544.08,318.612 544.648,316.024 545.216,313.41 545.785,313.127 546.353,311.693 546.921,310.364 547.49,306.963 548.058,303.58 548.627,303.361 549.195,299.03 549.763,297.941 550.332,294.963 550.9,293.161 551.468,292.378 552.037,289.701 552.605,283.997 553.173,284.722 553.742,284.237 554.31,283.71 554.878,283.305 555.447,283.775 556.015,283.389 556.583,283.705 557.152,280.021 557.72,278.45 558.288,276.917 558.857,274.395 559.425,276.252 559.993,273.851 560.562,273.448 561.13,272.958 561.698,273.493 562.267,273.165 562.835,271.714 563.404,269.349 563.972,268.982 564.54,268.772 565.109,268.458 565.677,266.916 566.245,265.58 566.814,264.313 567.382,264.384 567.95,264.054 568.519,262.653 569.087,262.422 569.655,262.28 570.224,265.198 570.792,266.894 571.36,264.059 571.929,264.655 572.497,261.866 573.065,260.551 573.634,261.295 574.202,258.918 574.77,257.47 575.339,257.278 575.907,256.175 576.476,255.207 577.044,254.053 577.612,254.221 578.181,254.138 578.749,252 579.317,252.095 579.886,250.999 580.454,250.994 581.022,251.222 581.591,253.538 582.159,252.535 582.727,253.394 583.296,252.332 583.864,252.313 584.432,253.008 585.001,251.829 585.569,249.947 586.137,251.07 586.706,249.804 587.274,248.897 587.842,246.923 588.411,243.925 588.979,247.434 589.547,244.375 590.116,243.709 590.684,244.042 591.253,244.266 591.821,243.435 592.389,241.615 592.958,240.909 593.526,240.354 594.094,242.106 594.663,242.707 595.231,245.016 595.799,244.008 596.368,243.187 596.936,243.43 597.504,243.7 598.073,243.901 598.641,243.005 599.209,245.179 599.778,244.969 600.346,244.95 600.914,244.897 601.483,245.101 602.051,244.1 602.619,243.307 603.188,243.093 603.756,243.189 604.325,244.587 604.893,244.224 605.461,242.223 606.03,242.341 606.598,242.645 607.166,242.117 607.735,242.378 608.303,243.608 608.871,245.702 609.44,245.534 610.008,245.269 610.576,244.012 611.145,246.05 611.713,245.871 612.281,244.533 612.85,245.425 613.418,244.311 613.986,244.097 614.555,242.791 615.123,243.908 615.691,243.91 616.26,243.61 616.828,246.622 617.396,246.288 617.965,245.866 618.533,244.511 619.102,244.334 619.67,243.163 620.238,243.934 620.807,242.62 621.375,242.377 621.943,242.103 622.512,239.828 623.08,240.866 623.648,239.541 624.217,238.401 624.785,239.596 625.353,240.644 625.922,240.563 626.49,242.375 627.058,243.123 627.627,241.724 628.195,241.273 628.763,242.107 629.332,241.916 629.9,239.456 630.468,241.397 631.037,240.068 631.605,239.1 632.173,237.942 632.742,238.981 633.31,237.884 633.879,236.636 634.447,236.878 635.015,236.663 635.584,235.611 636.152,236.543 636.72,237.676 637.289,237.704 637.857,237.737 638.425,238.721 638.994,238.71 639.562,238.468 640.13,236.499 640.699,237.756 641.267,238.912 641.835,236.816 642.404,238.123 642.972,239.052 643.54,238.86 644.109,239.559 644.677,237.067 645.245,237.1 645.814,236.011 646.382,232.758 646.951,231.886 647.519,230.142 648.087,229.386 648.656,227.748 649.224,230.492 649.792,231.892 650.361,232.162 650.929,233.482 651.497,233.623 652.066,233.857 652.634,236.316 653.202,235.988 653.771,236.085 654.339,236.883 654.907,235.689 655.476,234.623 656.044,234.753 656.612,233.82 657.181,235.973 657.749,234.674 658.317,231.526 658.886,230.706 659.454,228.925 660.022,230.492 660.591,230.909 661.159,231.158 661.728,229.433 662.296,227.885 662.864,228.38 663.433,227.028 664.001,228.533 664.569,231.239 665.138,231.683 665.706,230.934 666.274,231.251 666.843,228.647 667.411,227.101 667.979,225.792 668.548,225.553 669.116,225.444 669.684,226.48 670.253,228.25 670.821,227.772 671.389,227.572 671.958,227.224 672.526,227.991 673.094,228.795 673.663,228.211 674.231,228.426 674.799,226.771 675.368,225.586 675.936,226.444 676.505,228.03 677.073,231.81 677.641,230.046 678.21,230.514 678.778,229.987 679.346,231.668 679.915,228.814 680.483,230.523 681.051,231.044 681.62,230.348 682.188,231.69 682.756,232.114 683.325,233.367 683.893,230.562 684.461,233.3 685.03,233.709 685.598,232.914 686.166,233.291 686.735,235.7 687.303,234.803 687.871,234.913 688.44,237.1 689.008,239.383 689.577,239.322 690.145,240.345 690.713,238.072 691.282,237.137 691.85,236.149 692.418,236.421 692.987,235.401 693.555,235.38 694.123,233.282 694.692,234.883 695.26,235.013 695.828,236.107 696.397,236.433 696.965,236.281 697.533,236.096 698.102,236.018 698.67,234.91 699.238,237.276 699.807,236.267 700.375,235.08 700.943,232.454 701.512,232.703 702.08,234.885 702.648,233.882 703.217,234.949 703.785,235.084 704.354,235.094 704.922,236.076 705.49,236.985 706.059,237.957 706.627,237.971 707.195,241.691 707.764,240.046 708.332,240.475 708.9,241.023 709.469,241.529 710.037,240.074 710.605,239.737 711.174,239.319 711.742,237.969 712.31,235.638 712.879,234.598 713.447,234.757 714.015,234.662 714.584,236.671 715.152,236.296 715.72,232.905 716.289,233.979 716.857,231.825 717.425,231.937 717.994,231.212 718.562,230.251 719.131,228.536 719.699,227.795 720.267,228.184 720.836,227.515 721.404,225.714 721.972,225.365 722.541,225.899 723.109,226.23 723.677,225.79 724.246,224.077 724.814,223.856 725.382,225.706 725.951,226.456 726.519,227.975 727.087,228.475 727.656,229.95 728.224,232.4 728.792,234.682 729.361,235.969 729.929,238.873 730.497,237.669 731.066,237.449 731.634,237.22 732.203,234.941 732.771,237.038 733.339,238.149 733.908,236.866 734.476,236.651 735.044,235.677 735.613,237.599 736.181,237.186 736.749,233.838 737.318,234.861 737.886,235.736 738.454,236.331 739.023,237.135 739.591,234.791 740.159,234.504 740.728,232.451 741.296,231.493 741.864,232.491 742.433,231.886 743.001,232.918 743.569,232.95 744.138,232.13 744.706,231.306 745.274,230.697 745.843,230.871 746.411,233.269 746.98,233.303 747.548,233.372 748.116,231.544 748.685,232.636 749.253,232.468 749.821,231.504 750.39,232.495 750.958,231.762 751.526,230.867 752.095,232.897 752.663,235.009 753.231,233.962 753.8,235.884 754.368,235.673 754.936,236.424 755.505,235.07 756.073,236.034 756.641,234.789 757.21,235.703 757.778,235.512 758.346,235.212 758.915,233.902 759.483,232.875 760.052,233.73 760.62,233.583 761.188,232.517 761.757,232.638 762.325,234.558 762.893,233.347 763.462,234.311 764.03,234.262 764.598,233.139 765.167,233.111 765.735,233.869 766.303,233.307 766.872,235.003 767.44,233.625 768.008,233.483 768.577,232.174 769.145,232.193 769.713,234.214 770.282,233.76 770.85,233.807 771.418,235.677 771.987,233.956 772.555,232.626 773.123,232.279 773.692,229.874 774.26,229.935 774.829,227.732 775.397,229.096 775.965,228.205 776.534,227.459 777.102,227.679 777.67,227.867 778.239,228.222 778.807,227.167 779.375,227.411 779.944,225.524 780.512,225.843 781.08,224.07 781.649,224.764 782.217,228.309 782.785,228.474 783.354,229.748 783.922,224.831 784.49,224.325 785.059,228.144 785.627,227.451 786.195,226.869 786.764,227.056 787.332,228.479 787.9,228.74 788.469,230.952 789.037,230.058 789.606,229.356 790.174,228.558 790.742,229.064 791.311,229.469 791.879,228.791 792.447,227.947 793.016,228.35 793.584,227.675 794.152,227.92 794.721,228.175 795.289,228.537 795.857,230.031 796.426,229.103 796.994,231.347 797.562,231.2 798.131,230.297 798.699,227.403 799.267,227.733 799.836,228.361 800.404,228.743 800.972,232.118 801.541,232.356 802.109,230.372 802.678,226.461 803.246,228.202 803.814,228.655 804.383,228.849 804.951,229.132 805.519,228.36 806.088,230.713 806.656,229.897 807.224,234.325 807.793,236.379 808.361,234.239 808.929,235.161 809.498,236.053 810.066,235.901 810.634,234.617 811.203,234.466 811.771,233.521 812.339,234.617 812.908,234.57 813.476,234.391 814.044,235.446 814.613,236.308 815.181,235.009 815.749,234.635 816.318,235.607 816.886,236.567 817.455,237.301 818.023,239.864 818.591,237.139 819.16,236.454 819.728,236.05 820.296,235.68 820.865,234.286 821.433,235.163 822.001,233.901 822.57,233.793 823.138,234.756 823.706,233.58 824.275,234.309 824.843,234.137 825.411,234.213 825.98,229.828 826.548,231.871 827.116,232.941 827.685,230.739 828.253,230.759 828.821,230.747 829.39,230.804 829.958,232.128 830.526,231.103 831.095,229.96 831.663,230.158 832.232,230.356 832.8,233.423 833.368,234.167 833.937,232.939 834.505,234.705 835.073,233.478 835.642,232.478 836.21,232.32 836.778,232.203 837.347,232.074 837.915,231.935 838.483,231.7 839.052,232.635 839.62,232.552 840.188,233.639 840.757,234.273 841.325,235.18 841.893,233.019 842.462,232.557 843.03,232.626 843.598,231.595 844.167,231.589 844.735,230.491 845.304,230.485 845.872,231.468 846.44,231.478 847.009,231.585 847.577,231.104 848.145,231.106 848.714,230.863 849.282,230.84 849.85,228.626 850.419,228.659 850.987,227.83 851.555,230.203 852.124,230.296 852.692,231.219 853.26,232.176 853.829,231.087 854.397,231.279 854.965,231.246 855.534,232.354 856.102,232.286 856.67,232.181 857.239,232.136 857.807,232.049 858.375,231.865 858.944,231.801 859.512,231.622 860.081,229.546 860.649,230.601 861.217,230.755 861.786,230.752 862.354,228.803 862.922,229.871 863.491,232.213 864.059,233.047 864.627,233.923 865.196,233.554 865.764,234.28 866.332,234.077 866.901,233.794 867.469,232.568 868.037,233.214 868.606,232.849 869.174,232.657 869.742,233.662 870.311,232.489 870.879,231.18 871.447,230.009 872.016,229.868 872.584,229.647 873.152,231.768 873.721,230.751 874.289,230.72 874.858,231.741 875.426,231.39 875.994,231.302 876.563,230.025 877.131,228.947 877.699,227.967 878.268,228.288 878.836,228.25 879.404,228.352 879.973,226.426 880.541,226.006 881.109,224.998 881.678,227.343 882.246,227.677 882.814,226.947 883.383,226.201 883.951,226.424 884.519,224.731 885.088,225.171 885.656,226.511 886.224,227.929 886.793,227.096 887.361,227.473 887.93,227.592 888.498,228.756 889.066,226.775 889.635,226.927 890.203,227.229 890.771,225.361 891.34,224.729 891.908,225.274 892.476,224.932 893.045,223.196 893.613,223.868 894.181,226.463 894.75,229.035 895.318,229.102 895.886,228.18 896.455,229.486 897.023,229.634 897.591,227.816 898.16,229.096 898.728,229.302 899.296,230.666 899.865,229.837 900.433,228.971 901.001,229.125 901.57,229.231 902.138,229.413 902.707,227.605 903.275,226.7 903.843,227.146 904.412,228.593 904.98,227.66 905.548,226.756 906.117,229.062 906.685,228.147 907.253,230.523 907.822,231.658 908.39,232.666 908.958,233.657 909.527,234.601 910.095,233.828 910.663,230.854 911.232,230.967 911.8,229.143 912.368,230.491 912.937,230.576 913.505,233.811 914.073,232.652 914.642,233.586 915.21,232.465 915.779,231.751 916.347,230.75 916.915,233.89 917.484,235.746 918.052,235.585 918.62,235.466 919.189,232.297 919.757,232.258 920.325,234.524 920.894,234.339 921.462,235.239 922.03,234.089 922.599,233.07 923.167,232.018 923.735,234.08 924.304,234.883 924.872,233.588 925.44,236.733 926.009,236.165 926.577,233.819 927.145,232.849 927.714,233.998 928.282,232.927 928.85,234.846 929.419,235.505 929.987,237.299 930.556,233.772 931.124,233.736 931.692,233.624 932.261,234.473 932.829,237.208 933.397,236.567 933.966,234.99 934.534,232.427 935.102,232.229 935.671,231.009 936.239,229.858 936.807,228.882 937.376,228.8 937.944,229.891 938.512,227.892 939.081,228.203 939.649,228.182 940.217,227.274 940.786,227.282 941.354,224.393 941.922,223.705 942.491,223.204 943.059,225.679 943.627,226.183 944.196,227.522 944.764,226.717 945.333,228.192 945.901,228.462 946.469,227.606 947.038,228.79 947.606,230.042 948.174,231.346 948.743,231.354 949.311,231.253 949.879,226.308 950.448,228.682 951.016,226.927 951.584,228.432 952.153,228.533 952.721,228.797 953.289,230.231 953.858,230.238 954.426,230.454 954.994,230.578 955.563,230.589 956.131,229.65 956.699,227.833 957.268,228.049 957.836,230.318 958.405,230.584 958.973,229.528 959.541,230.908 960.11,230.775 960.678,232.809 961.246,234.745 961.815,233.535 962.383,234.161 962.951,234.772 963.52,233.498 964.088,231.095 964.656,231.108 965.225,231.233 965.793,231.225 966.361,231.247 966.93,231.063 967.498,231.086 968.066,231.116 968.635,228.771 969.203,225.745 969.771,225.158 970.34,225.624 970.908,225.228 971.476,226.96 972.045,228.498 972.613,227.778 973.182,227.083 973.75,229.567 974.318,228.811 974.887,227.08 975.455,228.36 976.023,227.558 976.592,226.598 977.16,226.136 977.728,227.792 978.297,227.94 978.865,227.079 979.433,228.729 980.002,229.023 980.57,230.245 981.138,228.269 981.707,230.768 982.275,231.951 982.843,229.917 983.412,231.254 983.98,232.66 984.548,234.617 985.117,234.303 985.685,235.104 986.253,234.984 986.822,236.809 987.39,237.681 987.959,238.219 988.527,236.648 989.095,238.274 989.664,235.885 990.232,236.559 990.8,235.177 991.369,234.065 991.937,235.058 992.505,234.996 993.074,234.68 993.642,235.523 994.21,234.324 994.779,235.777 995.347,233.323 995.915,232.194 996.484,230.166 997.052,232.356 997.62,234.198 998.189,234.236 998.757,231.842 999.325,232.796 999.894,233.847 1000.46,234.469 1001.03,234.291 1001.6,235.188 1002.17,235.782 1002.74,235.75 1003.3,235.466 1003.87,233.715 1004.44,231.189 1005.01,230.045 1005.58,230.062 1006.15,229.073 1006.71,229.241 1007.28,229.375 1007.85,229.623 1008.42,228.412 1008.99,226.484 1009.56,226.61 1010.12,226.89 1010.69,227.319 1011.26,226.773 1011.83,227.033 1012.4,227.231 1012.97,227.315 1013.53,230.699 1014.1,230.882 1014.67,231.926 1015.24,230.814 1015.81,230.671 1016.38,232.742 1016.94,232.607 1017.51,230.551 1018.08,228.39 1018.65,231.425 1019.22,232.218 1019.79,233.91 1020.35,233.865 1020.92,233.506 1021.49,232.244 1022.06,233.006 1022.63,232.682 1023.2,233.74 1023.76,232.575 1024.33,232.527 1024.9,232.363 1025.47,233.346 1026.04,233.159 1026.61,231.907 1027.17,230.835 1027.74,230.849 1028.31,230.595 1028.88,229.694 1029.45,229.724 1030.02,228.683 1030.58,226.713 1031.15,227.008 1031.72,227.348 1032.29,228.744 1032.86,230.909 1033.43,232.685 1033.99,232.27 1034.56,232.968 1035.13,234.711 1035.7,233.451 1036.27,234.165 1036.84,232.901 1037.4,232.631 1037.97,232.423 1038.54,231.2 1039.11,232.394 1039.68,231.499 1040.25,231.42 1040.81,231.246 1041.38,233.122 1041.95,234.903 1042.52,231.25 1043.09,230.255 1043.66,229.139 1044.22,229.328 1044.79,230.382 1045.36,231.299 1045.93,228.17 1046.5,227.331 1047.07,226.476 1047.63,230.593 1048.2,227.483 1048.77,229.591 1049.34,228.53 1049.91,226.363 1050.48,225.635 1051.05,226.947 1051.61,230.385 1052.18,229.364 1052.75,229.576 1053.32,228.457 1053.89,227.592 1054.46,227.775 1055.02,228.782 1055.59,227.955 1056.16,228.319 1056.73,227.418 1057.3,228.683 1057.87,226.886 1058.43,229.082 1059,227.356 1059.57,225.519 1060.14,225.899 1060.71,222.035 1061.28,221.461 1061.84,222.158 1062.41,226.874 1062.98,227.081 1063.55,227.414 1064.12,229.793 1064.69,232.069 1065.25,232.094 1065.82,229.193 1066.39,230.455 1066.96,231.79 1067.53,231.646 1068.1,233.648 1068.66,233.676 1069.23,233.373 1069.8,233.339 1070.37,232.174 1070.94,232.203 1071.51,234.129 1072.07,231.945 1072.64,231.93 1073.21,229.741 1073.78,231.78 1074.35,233.857 1074.92,234.622 1075.48,235.446 1076.05,235.261 1076.62,232.796 1077.19,231.677 1077.76,233.738 1078.33,234.686 1078.89,236.555 1079.46,237.1 1080.03,236.504 1080.6,235.114 1081.17,233.863 1081.74,232.584 1082.3,232.586 1082.87,232.223 1083.44,234.108 1084.01,234.73 1084.58,235.464 1085.15,235.987 1085.71,236.49 1086.28,234.817 1086.85,232.318 1087.42,232.119 1087.99,233.027 1088.56,231.978 1089.12,232.972 1089.69,231.698 1090.26,231.555 1090.83,232.608 1091.4,232.183 1091.97,233.105 1092.53,233.697 1093.1,232.187 1093.67,232.045 1094.24,229.675 1094.81,229.423 1095.38,230.196 1095.94,229.03 1096.51,225.948 1097.08,225.107 1097.65,225.602 1098.22,225.688 1098.79,223.826 1099.35,224.353 1099.92,226.554 1100.49,225.616 1101.06,226.956 1101.63,226.194 1102.2,227.512 1102.76,227.364 1103.33,226.626 1103.9,224.573 1104.47,226.035 1105.04,227.377 1105.61,226.602 1106.17,227.962 1106.74,229.078 1107.31,226.276 1107.88,227.573 1108.45,226.743 1109.02,226.027 1109.58,225.23 1110.15,226.815 1110.72,227.003 1111.29,228.315 1111.86,227.372 1112.43,229.694 1112.99,230.847 1113.56,230.692 1114.13,231.719 1114.7,228.573 1115.27,229.589 1115.84,230.624 1116.4,229.669 1116.97,229.837 1117.54,229.982 1118.11,229.092 1118.68,225.074 1119.25,226.604 1119.81,228.91 1120.38,229.949 1120.95,230.153 1121.52,231.293 1122.09,230.235 1122.66,231.148 1123.23,231.137 1123.79,230.042 1124.36,230.109 1124.93,232.027 1125.5,231.063 1126.07,230.887 1126.64,229.026 1127.2,231.197 1127.77,231.118 1128.34,233.229 1128.91,231.957 1129.48,233.943 1130.05,233.823 1130.61,233.692 1131.18,232.44 1131.75,232.155 1132.32,231.045 1132.89,228.142 1133.46,228.385 1134.02,232.715 1134.59,232.63 1135.16,232.544 1135.73,233.56 1136.3,233.456 1136.87,233.446 1137.43,233.147 1138,231.965 1138.57,231.834 1139.14,232.63 1139.71,233.464 1140.28,233.146 1140.84,232.956 1141.41,231.595 1141.98,229.086 1142.55,230.344 1143.12,230.375 1143.69,230.359 1144.25,230.354 1144.82,228.361 1145.39,228.327 1145.96,229.421 1146.53,229.462 1147.1,227.823 1147.66,229.164 1148.23,232.345 1148.8,230.341 1149.37,229.32 1149.94,228.527 1150.51,228.628 1151.07,227.631 1151.64,230.82 1152.21,233.028 1152.78,231.745 1153.35,232.67 1153.92,231.638 1154.48,229.353 1155.05,228.329 1155.62,229.484 1156.19,229.745 1156.76,229.739 1157.33,228.639 1157.89,229.783 1158.46,229.72 1159.03,229.624 1159.6,228.769 1160.17,229.891 1160.74,228.873 1161.3,227.876 1161.87,231.236 1162.44,231.177 1163.01,232.126 1163.58,231.108 1164.15,231.177 1164.71,227.968 1165.28,227.208 1165.85,226.442 1166.42,225.574 1166.99,226.002 1167.56,226.619 1168.12,228.039 1168.69,228.15 1169.26,228.133 1169.83,229.256 1170.4,229.23 1170.97,228.1 1171.53,228.272 1172.1,230.617 1172.67,230.505 1173.24,230.416 1173.81,230.213 1174.38,230.365 1174.94,232.591 1175.51,232.365 1176.08,231.594 1176.65,230.715 1177.22,229.684 1177.79,231.983 1178.35,230.87 1178.92,230.906 1179.49,230.813 1180.06,230.828 1180.63,232.084 1181.2,229.766 1181.76,230.966 1182.33,229.848 1182.9,231.288 1183.47,231.43 1184.04,229.241 1184.61,229.352 1185.17,230.717 1185.74,230.685 1186.31,232.651 1186.88,231.531 1187.45,232.523 1188.02,230.267 1188.58,229.425 1189.15,229.45 1189.72,229.497 1190.29,228.467 1190.86,231.759 1191.43,229.837 1192,228.893 1192.56,228.94 1193.13,227.728 1193.7,228.976 1194.27,226.985 1194.84,226.55 1195.41,226.948 1195.97,226.231 1196.54,227.764 1197.11,229.956 1197.68,228.988 1198.25,228.982 1198.82,230.135 1199.38,228.203 1199.95,229.235 1200.52,230.545 1201.09,232.558 1201.66,233.521 1202.23,233.169 1202.79,231.935 1203.36,231.971 1203.93,232.828 1204.5,231.666 1205.07,231.695 1205.64,229.614 1206.2,230.65 1206.77,232.833 1207.34,233.731 1207.91,233.69 1208.48,232.401 1209.05,233.238 1209.61,231.959 1210.18,232.754 1210.75,234.522 1211.32,234.389 1211.89,235.11 1212.46,233.759 1213.02,232.48 1213.59,232.292 1214.16,236.173 1214.73,237.723 1215.3,238.336 1215.87,237.914 1216.43,235.385 1217,232.01 1217.57,232.794 1218.14,232.748 1218.71,232.647 1219.28,232.515 1219.84,229.378 1220.41,229.395 1220.98,229.312 1221.55,230.254 1222.12,230.364 1222.69,231.635 1223.25,232.475 1223.82,229.141 1224.39,228.149 1224.96,229.406 1225.53,228.514 1226.1,228.485 1226.66,230.569 1227.23,229.56 1227.8,228.628 1228.37,228.667 1228.94,229.932 1229.51,229.927 1230.07,229.982 1230.64,229.091 1231.21,226.677 1231.78,228.985 1232.35,227.932 1232.92,228.157 1233.48,228.201 1234.05,226.268 1234.62,228.69 1235.19,229.828 1235.76,231.148 1236.33,230.997 1236.89,229.865 1237.46,227.899 1238.03,230.316 1238.6,231.3 1239.17,230.437 1239.74,230.516 1240.3,231.565 1240.87,230.473 1241.44,231.519 1242.01,231.236 1242.58,232.353 1243.15,236.321 1243.71,235.73 1244.28,236.396 1244.85,238.907 1245.42,236.057 1245.99,236.45 1246.56,236.007 1247.12,234.366 1247.69,235.001 1248.26,234.424 1248.83,234.315 1249.4,235.874 1249.97,236.276 1250.53,235.935 1251.1,234.212 1251.67,232.892 1252.24,232.417 1252.81,233.044 1253.38,233.867 1253.94,233.565 1254.51,232.005 1255.08,231.743 1255.65,231.464 1256.22,231.458 1256.79,230.387 1257.35,230.227 1257.92,229.255 1258.49,228.151 1259.06,228.437 1259.63,227.46 1260.2,229.59 1260.76,231.622 1261.33,229.737 1261.9,230.799 1262.47,230.728 1263.04,234.687 1263.61,234.166 1264.18,235.924 1264.74,235.518 1265.31,235.916 1265.88,235.482 1266.45,235.09 1267.02,236.508 1267.59,236.102 1268.15,237.628 1268.72,237.035 1269.29,237.474 1269.86,236.856 1270.43,236.299 1271,235.606 1271.56,235.74 1272.13,236.109 1272.7,237.599 1273.27,235.791 1273.84,232.099 1274.41,230.596 1274.97,229.343 1275.54,227.952 1276.11,226.98 1276.68,224.871 1277.25,222.084 1277.82,223.406 1278.38,222.731 1278.95,222.904 1279.52,224.396 1280.09,222.685 1280.66,223.09 1281.23,224.116 1281.79,222.387 1282.36,222.893 1282.93,224.407 1283.5,224.678 1284.07,223.87 1284.64,223.249 1285.2,222.641 1285.77,222.168 1286.34,222.659 1286.91,220.033 1287.48,221.608 1288.05,223.267 1288.61,226.98 1289.18,229.391 1289.75,229.255 1290.32,229.253 1290.89,231.658 1291.46,229.366 1292.02,229.458 1292.59,228.378 1293.16,229.612 1293.73,230.883 1294.3,230.794 1294.87,230.799 1295.43,232.64 1296,234.494 1296.57,235.2 1297.14,235.859 1297.71,236.491 1298.28,237.068 1298.84,237.55 1299.41,237.008 1299.98,236.751 1300.55,235.141 1301.12,231.839 1301.69,231.569 1302.25,232.337 1302.82,231.143 1303.39,231.013 1303.96,229.878 1304.53,228.693 1305.1,226.536 1305.66,225.621 1306.23,225.65 1306.8,225.792 1307.37,225.756 1307.94,224.944 1308.51,226.379 1309.07,225.734 1309.64,226.109 1310.21,227.497 1310.78,228.628 1311.35,227.882 1311.92,228.036 1312.48,225.251 1313.05,223.495 1313.62,223.117 1314.19,222.835 1314.76,222.579 1315.33,224.194 1315.89,225.776 1316.46,225.256 1317.03,225.609 1317.6,225.102 1318.17,225.493 1318.74,225.83 1319.3,225.166 1319.87,224.609 1320.44,224.904 1321.01,225.273 1321.58,224.416 1322.15,223.632 1322.71,223.171 1323.28,223.745 1323.85,225.409 1324.42,225.815 1324.99,226.131 1325.56,226.453 1326.12,226.91 1326.69,226.056 1327.26,227.506 1327.83,231.873 1328.4,233.948 1328.97,232.797 1329.53,233.867 1330.1,234.892 1330.67,233.538 1331.24,235.361 1331.81,232.947 1332.38,232.646 1332.94,234.686 1333.51,233.635 1334.08,232.355 1334.65,231.283 1335.22,229.493 1335.79,229.52 1336.36,231.726 1336.92,232.754 1337.49,232.847 1338.06,234.893 1338.63,234.829 1339.2,234.663 1339.77,234.496 1340.33,234.423 1340.9,237.509 1341.47,237.281 1342.04,236.863 1342.61,235.485 1343.18,235.123 1343.74,234.874 1344.31,235.54 1344.88,235.216 1345.45,233.81 1346.02,230.669 1346.59,230.589 1347.15,229.749 1347.72,230.706 1348.29,229.721 1348.86,231.709 1349.43,231.811 1350,230.71 1350.56,230.693 1351.13,229.69 1351.7,229.867 1352.27,230.014 1352.84,230.823 1353.41,232.002 1353.97,228.864 1354.54,226 1355.11,228.378 1355.68,229.402 1356.25,227.557 1356.82,227.682 1357.38,226.769 1357.95,227.136 1358.52,227.403 1359.09,227.789 1359.66,226.193 1360.23,227.607 1360.79,228.897 1361.36,229.021 1361.93,231.301 1362.5,231.557 1363.07,231.548 1363.64,232.631 1364.2,233.371 1364.77,234.169 1365.34,234.793 1365.91,237.667 1366.48,237.071 1367.05,236.836 1367.61,237.153 1368.18,235.537 1368.75,235.185 1369.32,237.957 1369.89,235.293 1370.46,236.799 1371.02,234.474 1371.59,232.153 1372.16,231.983 1372.73,235.709 1373.3,233.014 1373.87,232.697 1374.43,233.45 1375,231.018 1375.57,230.938 1376.14,229.979 1376.71,232.053 1377.28,231.89 1377.84,230.692 1378.41,230.353 1378.98,229.331 1379.55,230.346 1380.12,230.244 1380.69,229.259 1381.25,228.04 1381.82,230.343 1382.39,230.239 1382.96,229.979 1383.53,228.819 1384.1,229.874 1384.66,229.837 1385.23,229.654 1385.8,228.596 1386.37,227.424 1386.94,229.691 1387.51,230.741 1388.07,227.596 1388.64,226.753 1389.21,225.863 1389.78,225.942 1390.35,226.498 1390.92,225.753 1391.48,225.031 1392.05,227.442 1392.62,227.633 1393.19,226.654 1393.76,225.963 1394.33,224.251 1394.89,224.828 1395.46,224.42 1396.03,224.961 1396.6,226.456 1397.17,228.747 1397.74,227.658 1398.3,227.765 1398.87,228.888 1399.44,227.876 1400.01,227.25 1400.58,225.308 1401.15,224.754 1401.71,225.307 1402.28,227.871 1402.85,227.025 1403.42,226.267 1403.99,228.665 1404.56,227.823 1405.13,228.015 1405.69,228.051 1406.26,230.348 1406.83,230.305 1407.4,230.529 1407.97,229.403 1408.54,229.466 1409.1,230.802 1409.67,230.839 1410.24,230.706 1410.81,232.808 1411.38,231.623 1411.95,232.546 1412.51,232.466 1413.08,231.353 1413.65,231.628 1414.22,233.5 1414.79,234.331 1415.36,235.111 1415.92,234.76 1416.49,234.516 1417.06,234.336 1417.63,233.199 1418.2,232.998 1418.77,231.76 1419.33,230.673 1419.9,229.382 1420.47,229.473 1421.04,229.782 1421.61,230.854 1422.18,230.95 1422.74,232.126 1423.31,232.058 1423.88,233.091 1424.45,235.93 1425.02,235.37 1425.59,236.371 1426.15,237.041 1426.72,235.704 1427.29,237.356 1427.86,236.945 1428.43,238.257 1429,236.58 1429.56,235.914 1430.13,235.339 1430.7,232.796 1431.27,232.436 1431.84,229.223 1432.41,231.434 1432.97,231.509 1433.54,231.152 1434.11,232.133 1434.68,231.986 1435.25,231.772 1435.82,230.615 1436.38,230.621 1436.95,230.495 1437.52,229.471 1438.09,229.394 1438.66,229.476 1439.23,229.341 1439.79,228.283 1440.36,228.244 1440.93,227.172 1441.5,228.38 1442.07,229.621 1442.64,227.679 1443.2,228.974 1443.77,227.835 1444.34,227.893 1444.91,227.014 1445.48,227.262 1446.05,226.349 1446.61,225.763 1447.18,222.946 1447.75,223.55 1448.32,224.026 1448.89,225.368 1449.46,224.926 1450.02,224.333 1450.59,221.621 1451.16,223.282 1451.73,223.794 1452.3,225.599 1452.87,227.346 1453.43,228.623 1454,228.983 1454.57,230.26 1455.14,230.375 1455.71,231.514 1456.28,233.574 1456.84,234.382 1457.41,235.192 1457.98,234.893 1458.55,235.763 1459.12,234.41 1459.69,235.274 1460.25,235.031 1460.82,238.933 1461.39,239.502 1461.96,239.901 1462.53,239.142 1463.1,240.293 1463.66,239.488 1464.23,236.851 1464.8,236.444 1465.37,236.658 1465.94,233.007 1466.51,231.767 1467.07,232.744 1467.64,233.667 1468.21,233.409 1468.78,231.946 1469.35,229.634 1469.92,229.675 1470.48,229.502 1471.05,228.45 1471.62,229.526 1472.19,230.586 1472.76,232.547 1473.33,233.235 1473.89,233.96 1474.46,233.733 1475.03,233.255 1475.6,233.94 1476.17,232.706 1476.74,234.4 1477.31,234.988 1477.87,235.816 1478.44,234.202 1479.01,233.844 1479.58,232.306 1480.15,231.006 1480.72,229.954 1481.28,229.784 1481.85,229.702 1482.42,229.538 1482.99,228.31 1483.56,228.115 1484.13,228.305 1484.69,228.468 1485.26,228.341 1485.83,229.501 1486.4,228.479 1486.97,229.694 1487.54,228.606 1488.1,228.525 1488.67,227.453 1489.24,227.544 1489.81,228.673 1490.38,229.521 1490.95,229.334 1491.51,227.176 1492.08,227.405 1492.65,227.429 1493.22,226.379 1493.79,227.678 1494.36,227.643 1494.92,230.68 1495.49,228.634 1496.06,227.785 1496.63,225.953 1497.2,225.178 1497.77,225.541 1498.33,226.818 1498.9,225.938 1499.47,226.464 1500.04,225.606 1500.61,226.129 1501.18,225.213 1501.74,225.566 1502.31,227.061 1502.88,227.963 1503.45,228.31 1504.02,228.331 1504.59,227.409 1505.15,227.453 1505.72,226.749 1506.29,228.031 1506.86,224.437 1507.43,222.024 1508,222.563 1508.56,222.18 1509.13,222.935 1509.7,224.702 1510.27,226.022 1510.84,225.328 1511.41,222.812 1511.97,224.436 1512.54,227.035 1513.11,226.227 1513.68,225.668 1514.25,226.187 1514.82,225.632 1515.38,225.143 1515.95,223.566 1516.52,225.29 1517.09,225.985 1517.66,225.423 1518.23,225.048 1518.79,225.492 1519.36,226.071 1519.93,223.268 1520.5,223.984 1521.07,224.618 1521.64,223.259 1522.2,225.244 1522.77,225.802 1523.34,225.387 1523.91,224.971 1524.48,224.41 1525.05,225.21 1525.61,225.89 1526.18,226.566 1526.75,226.953 1527.32,229.615 1527.89,230.71 1528.46,227.771 1529.02,227.077 1529.59,224.441 1530.16,226.009 1530.73,227.608 1531.3,228.029 1531.87,227.13 1532.43,228.346 1533,228.926 1533.57,230.304 1534.14,232.555 1534.71,232.604 1535.28,234.885 1535.84,234.871 1536.41,236.041 1536.98,237.704 1537.55,237.435 1538.12,237.325 1538.69,237.954 1539.25,237.407 1539.82,239.263 1540.39,238.804 1540.96,237.472 1541.53,238.363 1542.1,237.019 1542.66,233.577 1543.23,232.488 1543.8,234.392 1544.37,233.203 1544.94,230.955 1545.51,232.007 1546.08,231.877 1546.64,232.97 1547.21,235.836 1547.78,230.319 1548.35,229.391 1548.92,229.726 1549.49,226.757 1550.05,226.904 1550.62,227.366 1551.19,230.801 1551.76,229.791 1552.33,231.983 1552.9,232.054 1553.46,228.994 1554.03,228.089 1554.6,228.26 1555.17,231.779 1555.74,232.923 1556.31,235.883 1556.87,236.612 1557.44,238.245 1558.01,236.814 1558.58,236.486 1559.15,236.303 1559.72,234.896 1560.28,234.726 1560.85,237.234 1561.42,236.775 1561.99,238.496 1562.56,237.034 1563.13,234.225 1563.69,238.35 1564.26,237.844 1564.83,238.381 1565.4,238.042 1565.97,235.814 1566.54,236.43 1567.1,238.22 1567.67,237.787 1568.24,237.107 1568.81,237.499 1569.38,235.837 1569.95,236.351 1570.51,235.971 1571.08,233.647 1571.65,234.312 1572.22,233.899 1572.79,233.548 1573.36,233.221 1573.92,235.016 1574.49,236.658 1575.06,235.05 1575.63,235.564 1576.2,234.893 1576.77,232.573 1577.33,233.388 1577.9,232.966 1578.47,234.752 1579.04,232.009 1579.61,232.621 1580.18,231.152 1580.74,229.942 1581.31,229.876 1581.88,227.797 1582.45,227.838 1583.02,228.738 1583.59,229.706 1584.15,229.36 1584.72,230.212 1585.29,232.005 1585.86,232.785 1586.43,228.523 1587,227.37 1587.56,227.684 1588.13,227.716 1588.7,227.538 1589.27,226.578 1589.84,228.648 1590.41,225.634 1590.97,225.737 1591.54,226.943 1592.11,227.072 1592.68,226.234 1593.25,225.599 1593.82,224.767 1594.38,224.201 1594.95,224.385 1595.52,224.545 1596.09,228.154 1596.66,228.199 1597.23,230.252 1597.79,229.082 1598.36,230.041 1598.93,231.726 1599.5,232.595 1600.07,231.452 1600.64,231.468 1601.2,229.252 1601.77,228.114 1602.34,229.235 1602.91,230.561 1603.48,232.623 1604.05,231.324 1604.61,230.192 1605.18,231.166 1605.75,232.111 1606.32,232.178 1606.89,230.078 1607.46,231.082 1608.02,231.035 1608.59,232.053 1609.16,229.821 1609.73,229.81 1610.3,227.637 1610.87,225.68 1611.43,224.989 1612,224.446 1612.57,225.037 1613.14,224.098 1613.71,224.587 1614.28,222.78 1614.84,223.365 1615.41,224.014 1615.98,221.6 1616.55,224.473 1617.12,226.267 1617.69,225.616 1618.26,226.166 1618.82,226.455 1619.39,226.915 1619.96,229.11 1620.53,230.304 1621.1,232.627 1621.67,232.485 1622.23,233.564 1622.8,234.422 1623.37,234.268 1623.94,235.326 1624.51,237.065 1625.08,235.556 1625.64,233.322 1626.21,231.275 1626.78,230.289 1627.35,231.184 1627.92,229.122 1628.49,230.178 1629.05,229.319 1629.62,228.426 1630.19,227.419 1630.76,228.822 1631.33,228.973 1631.9,228.011 1632.46,230.205 1633.03,229.304 1633.6,229.564 1634.17,233.851 1634.74,231.653 1635.31,231.884 1635.87,230.925 1636.44,228.718 1637.01,226.689 1637.58,230.002 1638.15,228.998 1638.72,229.291 1639.28,229.54 1639.85,228.508 1640.42,229.804 1640.99,230.072 1641.56,230.169 1642.13,232.223 1642.69,231.003 1643.26,232.007 1643.83,234.104 1644.4,232.91 1644.97,230.92 1645.54,230.099 1646.1,229.151 1646.67,227.298 1647.24,227.695 1647.81,226.597 1648.38,228.807 1648.95,227.861 1649.51,227.218 1650.08,228.697 1650.65,227.956 1651.22,227.173 1651.79,228.519 1652.36,227.539 1652.92,231.017 1653.49,229.951 1654.06,232.346 1654.63,232.202 1655.2,229.095 1655.77,229.233 1656.33,230.395 1656.9,232.708 1657.47,233.734 1658.04,232.535 1658.61,232.454 1659.18,233.421 1659.74,234.428 1660.31,233.917 1660.88,234.858 1661.45,234.699 1662.02,235.478 1662.59,237.116 1663.15,238.841 1663.72,237.226 1664.29,235.674 1664.86,233.058 1665.43,233.869 1666,237.899 1666.56,235.356 1667.13,236.071 1667.7,234.482 1668.27,233.873 1668.84,232.502 1669.41,233.366 1669.97,232.081 1670.54,232.041 1671.11,231.758 1671.68,231.693 1672.25,233.451 1672.82,233.237 1673.38,235.048 1673.95,234.63 1674.52,232.327 1675.09,231.023 1675.66,230.53 1676.23,228.473 1676.79,226.536 1677.36,225.87 1677.93,228.088 1678.5,228.18 1679.07,227.158 1679.64,227.16 1680.2,228.219 1680.77,228.219 1681.34,231.338 1681.91,233.07 1682.48,231.773 1683.05,231.366 1683.61,231.264 1684.18,230.992 1684.75,230.832 1685.32,230.492 1685.89,230.338 1686.46,229.486 1687.02,229.233 1687.59,231.303 1688.16,231.189 1688.73,229.839 1689.3,230.685 1689.87,230.671 1690.44,231.775 1691,232.664 1691.57,232.704 1692.14,232.25 1692.71,231.108 1693.28,231.966 1693.85,229.698 1694.41,227.615 1694.98,225.891 1695.55,224.956 1696.12,222.964 1696.69,220.407 1697.26,219.895 1697.82,220.703 1698.39,220.306 1698.96,221.154 1699.53,220.746 1700.1,223.685 1700.67,222.206 1701.23,224.83 1701.8,223.152 1702.37,225.809 1702.94,227.32 1703.51,226.437 1704.08,225.663 1704.64,223.786 1705.21,224.394 1705.78,224.952 1706.35,223.444 1706.92,226.009 1707.49,225.524 1708.05,224.965 1708.62,225.413 1709.19,226.817 1709.76,226.145 1710.33,223.597 1710.9,225.284 1711.46,224.705 1712.03,226.151 1712.6,226.822 1713.17,230.249 1713.74,231.11 1714.31,233.346 1714.87,233.332 1715.44,232.345 1716.01,232.538 1716.58,232.733 1717.15,231.689 1717.72,232.83 1718.28,231.736 1718.85,231.765 1719.42,229.592 1719.99,228.63 1720.56,227.759 1721.13,231.334 1721.69,230.372 1722.26,230.285 1722.83,231.522 1723.4,233.508 1723.97,234.47 1724.54,234.383 1725.1,233.329 1725.67,233.117 1726.24,234.047 1726.81,234.863 1727.38,235.657 1727.95,236.413 1728.51,235.151 1729.08,237.055 1729.65,236.787 1730.22,237.418 1730.79,233.967 1731.36,236.669 1731.92,237.226 1732.49,235.834 1733.06,235.631 1733.63,235.239 1734.2,235.769 1734.77,236.437 1735.33,234.019 1735.9,234.993 1736.47,233.526 1737.04,231.21 1737.61,233.23 1738.18,231.95 1738.74,228.716 1739.31,232.035 1739.88,231.019 1740.45,232.993 1741.02,234.06 1741.59,232.983 1742.15,231.879 1742.72,232.755 1743.29,231.473 1743.86,231.368 1744.43,231.913 1745,231.663 1745.56,231.48 1746.13,230.388 1746.7,233.524 1747.27,232.316 1747.84,231.091 1748.41,231.157 1748.97,229.903 1749.54,227.772 1750.11,227.813 1750.68,227.692 1751.25,226.114 1751.82,226.296 1752.38,227.385 1752.95,226.514 1753.52,228.849 1754.09,225.985 1754.66,225.249 1755.23,227.628 1755.79,227.805 1756.36,226.745 1756.93,227.963 1757.5,230.535 1758.07,229.372 1758.64,231.563 1759.21,231.477 1759.77,232.56 1760.34,233.417 1760.91,233.126 1761.48,230.87 1762.05,232.759 1762.62,230.429 1763.18,233.463 1763.75,232.41 1764.32,231.282 1764.89,231.977 1765.46,229.746 1766.03,230.636 1766.59,230.394 1767.16,229.259 1767.73,230.359 1768.3,230.264 1768.87,229.069 1769.44,229.411 1770,229.328 1770.57,230.508 1771.14,229.546 1771.71,228.251 1772.28,229.39 1772.85,229.383 1773.41,229.332 1773.98,226.104 1774.55,227.301 1775.12,227.186 1775.69,229.468 1776.26,232.643 1776.82,232.607 1777.39,231.211 1777.96,231.418 1778.53,233.139 1779.1,232.854 1779.67,234.664 1780.23,236.492 1780.8,236.022 1781.37,234.479 1781.94,232.98 1782.51,233.851 1783.08,233.441 1783.64,231.839 1784.21,230.847 1784.78,231.664 1785.35,231.47 1785.92,231.537 1786.49,231.223 1787.05,231.126 1787.62,231.967 1788.19,231.673 1788.76,229.543 1789.33,229.288 1789.9,229.196 1790.46,228.213 1791.03,228.385 1791.6,228.453 1792.17,229.72 1792.74,230.818 1793.31,232.618 1793.87,232.541 1794.44,234.381 1795.01,233.008 1795.58,229.702 1796.15,229.377 1796.72,230.291 1797.28,233.322 1797.85,233.165 1798.42,233.909 1798.99,234.488 1799.56,234.069 1800.13,235.964 1800.69,235.452 1801.26,233.909 1801.83,236.499 1802.4,237.094 1802.97,235.3 1803.54,233.683 1804.1,232.593 1804.67,233.409 1805.24,234.286 1805.81,232.511 1806.38,230.134 1806.95,229.879 1807.51,230.043 1808.08,230.074 1808.65,231.148 1809.22,228.816 1809.79,226.866 1810.36,227.084 1810.92,226.458 1811.49,227.541 1812.06,225.658 1812.63,226.036 1813.2,227.425 1813.77,227.583 1814.33,223.707 1814.9,226.389 1815.47,225.516 1816.04,224.64 1816.61,225.867 1817.18,227.249 1817.74,225.399 1818.31,228.582 1818.88,227.626 1819.45,228.936 1820.02,232.227 1820.59,233.155 1821.15,230.855 1821.72,229.462 1822.29,231.67 1822.86,232.374 1823.43,231.158 1824,234.126 1824.56,233.939 1825.13,233.815 1825.7,233.423 1826.27,231.953 1826.84,231.838 1827.41,231.814 1827.97,230.746 1828.54,230.7 1829.11,229.49 1829.68,227.458 1830.25,227.829 1830.82,225.984 1831.39,226.416 1831.95,225.528 1832.52,224.795 1833.09,228.322 1833.66,229.499 1834.23,230.614 1834.8,231.683 1835.36,230.281 1835.93,231.395 1836.5,231.243 1837.07,231.542 1837.64,228.504 1838.21,229.835 1838.77,230.094 1839.34,230.14 1839.91,229.133 1840.48,230.311 1841.05,229.208 1841.62,227.228 1842.18,226.456 1842.75,226.711 1843.32,225.982 1843.89,225.269 1844.46,225.555 1845.03,226.934 1845.59,227.248 1846.16,226.151 1846.73,227.481 1847.3,228.003 1847.87,228.368 1848.44,228.59 1849,225.574 1849.57,226.12 1850.14,226.41 1850.71,225.65 1851.28,226.263 1851.85,226.309 1852.41,227.666 1852.98,229.986 1853.55,230.09 1854.12,227.014 1854.69,229.436 1855.26,231.509 1855.82,229.508 1856.39,226.483 1856.96,226.587 1857.53,228.086 1858.1,228.424 1858.67,229.725 1859.23,228.622 1859.8,228.914 1860.37,230.091 1860.94,230.214 1861.51,232.392 1862.08,231.411 1862.64,230.328 1863.21,229.39 1863.78,231.691 1864.35,233.755 1864.92,230.377 1865.49,230.335 1866.05,230.515 1866.62,230.694 1867.19,230.69 1867.76,231.656 1868.33,231.68 1868.9,230.684 1869.46,230.664 1870.03,230.961 1870.6,231.165 1871.17,231.172 1871.74,232.239 1872.31,233.278 1872.87,231.042 1873.44,231.125 1874.01,232.218 1874.58,231.968 1875.15,231.626 1875.72,231.588 1876.28,232.579 1876.85,232.575 1877.42,232.481 1877.99,232.196 1878.56,234.037 1879.13,234.739 1879.69,235.441 1880.26,235.101 1880.83,236.941 1881.4,236.235 1881.97,236.929 1882.54,238.454 1883.1,238.863 1883.67,237.083 1884.24,234.609 1884.81,233.373 1885.38,233.139 1885.95,231.739 1886.51,230.489 1887.08,226.482 1887.65,226.762 1888.22,227.01 1888.79,226.995 1889.36,227.047 1889.92,226.232 1890.49,226.449 1891.06,228.834 1891.63,229.764 1892.2,227.714 1892.77,227.866 1893.33,228.883 1893.9,227.937 1894.47,228.163 1895.04,229.354 1895.61,228.42 1896.18,231.533 1896.74,234.341 1897.31,234.056 1897.88,231.793 1898.45,231.456 1899.02,230.338 1899.59,231.282 1900.16,235.268 1900.72,236.949 1901.29,234.498 1901.86,233.11 1902.43,230.728 1903,228.464 1903.57,228.539 1904.13,228.643 1904.7,230.75 1905.27,232.846 1905.84,231.733 1906.41,231.572 1906.98,232.274 1907.54,233.265 1908.11,235.013 1908.68,233.554 1909.25,234.267 1909.82,230.919 1910.39,230.79 1910.95,230.78 1911.52,229.415 1912.09,229.522 1912.66,229.514 1913.23,226.581 1913.8,227.85 1914.36,228.099 1914.93,229.998 1915.5,232.245 1916.07,233.132 1916.64,232.938 1917.21,232.903 1917.77,232.862 1918.34,232.747 1918.91,232.357 1919.48,232.15 1920.05,231.113 1920.62,232.071 1921.18,230.768 1921.75,231.844 1922.32,231.679 1922.89,231.568 1923.46,233.381 1924.03,232.14 1924.59,231.993 1925.16,232.652 1925.73,233.409 1926.3,233.037 1926.87,231.635 1927.44,233.692 1928,233.643 1928.57,234.489 1929.14,233.144 1929.71,231.686 1930.28,229.37 1930.85,230.385 1931.41,231.217 1931.98,229.948 1932.55,229.993 1933.12,229.993 1933.69,228.767 1934.26,230.852 1934.82,231.739 1935.39,231.713 1935.96,231.394 1936.53,232.264 1937.1,232.071 1937.67,232.882 1938.23,231.785 1938.8,231.765 1939.37,231.416 1939.94,230.187 1940.51,228.978 1941.08,229.921 1941.64,230.787 1942.21,227.588 1942.78,226.544 1943.35,224.733 1943.92,225.825 1944.49,224.134 1945.05,224.527 1945.62,227.085 1946.19,225.948 1946.76,226.339 1947.33,226.577 1947.9,226.945 1948.46,227.182 1949.03,225.272 1949.6,223.843 1950.17,223.001 1950.74,222.415 1951.31,224.142 1951.87,222.373 1952.44,223.839 1953.01,223.733 1953.58,224.275 1954.15,224.68 1954.72,226.021 1955.28,225.43 1955.85,224.761 1956.42,224.133 1956.99,224.654 1957.56,224.032 1958.13,226.47 1958.69,228.448 1959.26,230.698 1959.83,228.818 1960.4,229.032 1960.97,229.099 1961.54,229.371 1962.1,229.661 1962.67,229.821 1963.24,233.045 1963.81,232.909 1964.38,234.655 1964.95,233.231 1965.51,236.152 1966.08,233.773 1966.65,233.561 1967.22,234.489 1967.79,233.303 1968.36,235.063 1968.92,232.804 1969.49,234.696 1970.06,231.287 1970.63,230.18 1971.2,229.721 1971.77,229.632 1972.34,230.718 1972.9,229.804 1973.47,231.907 1974.04,231.618 1974.61,230.539 1975.18,231.602 1975.75,231.529 1976.31,232.473 1976.88,232.217 1977.45,232.122 1978.02,230.972 1978.59,229.947 1979.16,227.828 1979.72,227.786 1980.29,227.006 1980.86,228.404 1981.43,227.615 1982,225.726 1982.57,225.137 1983.13,224.54 1983.7,227.981 1984.27,225.066 1984.84,226.575 1985.41,224.828 1985.98,225.279 1986.54,226.726 1987.11,227.902 1987.68,227.078 1988.25,227.366 1988.82,226.44 1989.39,226.883 1989.95,227.346 1990.52,228.589 1991.09,229.773 1991.66,231.126 1992.23,229.137 1992.8,227.127 1993.36,227.548 1993.93,228.988 1994.5,229.29 1995.07,229.34 1995.64,228.178 1996.21,230.437 1996.77,232.542 1997.34,232.449 1997.91,231.274 1998.48,231.224 1999.05,231.118 1999.62,232.325 2000.18,232.145 2000.75,231.986 2001.32,231.039 2001.89,232.256 2002.46,234.193 2003.03,230.871 2003.59,229.949 2004.16,232.017 2004.73,233.057 2005.3,232.982 2005.87,233.037 2006.44,233.763 2007,235.87 2007.57,235.506 2008.14,236.196 2008.71,234.803 2009.28,234.49 2009.85,236.233 2010.41,236.859 2010.98,236.357 2011.55,235.925 2012.12,236.519 2012.69,237.051 2013.26,235.638 2013.82,235.188 2014.39,234.988 2014.96,235.725 2015.53,237.654 2016.1,236.981 2016.67,235.254 2017.23,232.881 2017.8,231.707 2018.37,230.407 2018.94,230.277 2019.51,230.068 2020.08,231.128 2020.64,230.897 2021.21,230.526 2021.78,230.528 2022.35,229.51 2022.92,230.777 2023.49,229.68 2024.05,228.752 2024.62,229.978 2025.19,229.996 2025.76,226.838 2026.33,227.141 2026.9,227.296 2027.46,226.445 2028.03,225.614 2028.6,226.118 2029.17,225.415 2029.74,224.803 2030.31,223.16 2030.87,227.73 2031.44,228.866 2032.01,227.987 2032.58,227.23 2033.15,228.24 2033.72,229.404 2034.28,224.184 2034.85,227.848 2035.42,228.05 2035.99,229.264 2036.56,229.457 2037.13,229.639 2037.69,230.72 2038.26,231.788 2038.83,230.679 2039.4,231.391 2039.97,233.318 2040.54,234.163 2041.11,233.114 2041.67,234.152 2042.24,233.996 2042.81,233.68 2043.38,232.336 2043.95,232.946 2044.52,232.771 2045.08,229.506 2045.65,229.636 2046.22,228.72 2046.79,226.808 2047.36,225.939 2047.93,227.159 2048.49,226.349 2049.06,226.853 2049.63,229.192 2050.2,228.455 2050.77,229.568 2051.34,228.771 2051.9,228.977 2052.47,226.995 2053.04,229.391 2053.61,228.637 2054.18,231.989 2054.75,232.07 2055.31,228.795 2055.88,230.912 2056.45,231.979 2057.02,230.764 2057.59,231.703 2058.16,229.664 2058.72,227.769 2059.29,227.975 2059.86,228.197 2060.43,228.62 2061,227.698 2061.57,227.78 2062.13,230.201 2062.7,230.284 2063.27,231.346 2063.84,232.54 2064.41,233.375 2064.98,235.259 2065.54,234.862 2066.11,235.606 2066.68,234.145 2067.25,233.867 2067.82,232.447 2068.39,233.45 2068.95,234.165 2069.52,234.792 2070.09,235.559 2070.66,236.114 2071.23,235.726 2071.8,235.252 2072.36,232.843 2072.93,232.62 2073.5,228.473 2074.07,228.555 2074.64,229.67 2075.21,228.835 2075.77,229.853 2076.34,227.972 2076.91,228.234 2077.48,228.502 2078.05,228.545 2078.62,227.866 2079.18,228.074 2079.75,229.413 2080.32,232.476 2080.89,232.611 2081.46,232.614 2082.03,232.309 2082.59,232.188 2083.16,232.098 2083.73,233.103 2084.3,230.769 2084.87,232.576 2085.44,232.583 2086,232.443 2086.57,235.318 2087.14,231.785 2087.71,230.546 2088.28,233.51 2088.85,233.173 2089.41,231.866 2089.98,232.711 2090.55,233.592 2091.12,233.316 2091.69,234.032 2092.26,232.621 2092.82,230.264 2093.39,230.343 2093.96,231.442 2094.53,230.182 2095.1,229.304 2095.67,228.23 2096.23,229.444 2096.8,230.372 2097.37,231.26 2097.94,232.103 2098.51,231.836 2099.08,231.697 2099.64,229.423 2100.21,228.373 2100.78,229.397 2101.35,230.494 2101.92,232.545 2102.49,232.389 2103.05,232.214 2103.62,231.929 2104.19,231.708 2104.76,231.292 2105.33,231.236 2105.9,231.095 2106.46,230.922 2107.03,228.673 2107.6,224.694 2108.17,225.101 2108.74,226.362 2109.31,226.654 2109.87,226.878 2110.44,226.049 2111.01,228.463 2111.58,227.371 2112.15,227.513 2112.72,228.403 2113.29,228.629 2113.85,227.949 2114.42,227.968 2114.99,228.074 2115.56,228.295 2116.13,228.362 2116.7,228.28 2117.26,228.152 2117.83,228.298 2118.4,229.449 2118.97,228.485 2119.54,230.587 2120.11,231.681 2120.67,228.509 2121.24,232.683 2121.81,230.384 2122.38,230.352 2122.95,231.514 2123.52,231.525 2124.08,232.488 2124.65,231.165 2125.22,229.872 2125.79,228.962 2126.36,227.012 2126.93,230.24 2127.49,232.149 2128.06,230.938 2128.63,230.805 2129.2,230.617 2129.77,231.608 2130.34,231.679 2130.9,232.41 2131.47,231.305 2132.04,230.023 2132.61,229.153 2133.18,229.315 2133.75,229.223 2134.31,230.265 2134.88,230.275 2135.45,229.305 2136.02,228.415 2136.59,228.537 2137.16,230.656 2137.72,231.588 2138.29,231.291 2138.86,231.109 2139.43,228.897 2140,227.984 2140.57,231.435 2141.13,230.558 2141.7,230.361 2142.27,233.664 2142.84,232.448 2143.41,231.389 2143.98,228.415 2144.54,228.703 2145.11,228.194 2145.68,228.531 2146.25,228.472 2146.82,227.641 2147.39,227.913 2147.95,228.039 2148.52,232.22 2149.09,233.08 2149.66,232.006 2150.23,230.995 2150.8,229.871 2151.36,229.841 2151.93,231.108 2152.5,231.144 2153.07,229.975 2153.64,228.885 2154.21,228.95 2154.77,230.995 2155.34,228.75 2155.91,226.715 2156.48,227.99 2157.05,228.114 2157.62,228.32 2158.18,229.581 2158.75,229.841 2159.32,230.909 2159.89,232.94 \"/>\n<path clip-path=\"url(#clip200)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip200)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip200)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip200)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip200)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip200)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.021 ± 0.026\n  with uncertainty of ± 0.0023724574049281072\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01216 ± (0.00178772, 0.00170548) (MC)\n  95% confidence interval: [-4.01563, -4.0087]) (MC)\n  linear error propagation: -4.01214 ± 0.00178595\n  |δ_y| = |0.00135538| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.0121649941938715, val_l = 0.0034639574506423187, val_u = 0.003462244545618276)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip230\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip230)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip231\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip230)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip232\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1150.24 2211.02,1150.24 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,987.989 2211.02,987.989 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,825.734 2211.02,825.734 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,663.48 2211.02,663.48 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,501.225 2211.02,501.225 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,338.971 2211.02,338.971 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1150.24 365.751,1150.24 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,987.989 365.751,987.989 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,825.734 365.751,825.734 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,663.48 365.751,663.48 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,501.225 365.751,501.225 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,338.971 365.751,338.971 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M298.909 1136.04 Q295.298 1136.04 293.469 1139.61 Q291.664 1143.15 291.664 1150.28 Q291.664 1157.38 293.469 1160.95 Q295.298 1164.49 298.909 1164.49 Q302.543 1164.49 304.349 1160.95 Q306.177 1157.38 306.177 1150.28 Q306.177 1143.15 304.349 1139.61 Q302.543 1136.04 298.909 1136.04 M298.909 1132.34 Q304.719 1132.34 307.775 1136.94 Q310.853 1141.53 310.853 1150.28 Q310.853 1159 307.775 1163.61 Q304.719 1168.19 298.909 1168.19 Q293.099 1168.19 290.02 1163.61 Q286.964 1159 286.964 1150.28 Q286.964 1141.53 290.02 1136.94 Q293.099 1132.34 298.909 1132.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M259.557 1001.33 L267.196 1001.33 L267.196 974.968 L258.886 976.635 L258.886 972.376 L267.15 970.709 L271.826 970.709 L271.826 1001.33 L279.465 1001.33 L279.465 1005.27 L259.557 1005.27 L259.557 1001.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M298.909 973.788 Q295.298 973.788 293.469 977.352 Q291.664 980.894 291.664 988.024 Q291.664 995.13 293.469 998.695 Q295.298 1002.24 298.909 1002.24 Q302.543 1002.24 304.349 998.695 Q306.177 995.13 306.177 988.024 Q306.177 980.894 304.349 977.352 Q302.543 973.788 298.909 973.788 M298.909 970.084 Q304.719 970.084 307.775 974.69 Q310.853 979.274 310.853 988.024 Q310.853 996.75 307.775 1001.36 Q304.719 1005.94 298.909 1005.94 Q293.099 1005.94 290.02 1001.36 Q286.964 996.75 286.964 988.024 Q286.964 979.274 290.02 974.69 Q293.099 970.084 298.909 970.084 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M262.775 839.079 L279.094 839.079 L279.094 843.014 L257.15 843.014 L257.15 839.079 Q259.812 836.325 264.395 831.695 Q269.002 827.042 270.182 825.7 Q272.428 823.176 273.307 821.44 Q274.21 819.681 274.21 817.991 Q274.21 815.237 272.266 813.501 Q270.344 811.764 267.242 811.764 Q265.043 811.764 262.59 812.528 Q260.159 813.292 257.381 814.843 L257.381 810.121 Q260.205 808.987 262.659 808.408 Q265.113 807.829 267.15 807.829 Q272.52 807.829 275.715 810.514 Q278.909 813.2 278.909 817.69 Q278.909 819.82 278.099 821.741 Q277.312 823.639 275.205 826.232 Q274.627 826.903 271.525 830.121 Q268.423 833.315 262.775 839.079 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M298.909 811.533 Q295.298 811.533 293.469 815.098 Q291.664 818.639 291.664 825.769 Q291.664 832.875 293.469 836.44 Q295.298 839.982 298.909 839.982 Q302.543 839.982 304.349 836.44 Q306.177 832.875 306.177 825.769 Q306.177 818.639 304.349 815.098 Q302.543 811.533 298.909 811.533 M298.909 807.829 Q304.719 807.829 307.775 812.436 Q310.853 817.019 310.853 825.769 Q310.853 834.496 307.775 839.102 Q304.719 843.686 298.909 843.686 Q293.099 843.686 290.02 839.102 Q286.964 834.496 286.964 825.769 Q286.964 817.019 290.02 812.436 Q293.099 807.829 298.909 807.829 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M272.914 662.126 Q276.27 662.843 278.145 665.112 Q280.043 667.38 280.043 670.713 Q280.043 675.829 276.525 678.63 Q273.006 681.431 266.525 681.431 Q264.349 681.431 262.034 680.991 Q259.742 680.575 257.289 679.718 L257.289 675.204 Q259.233 676.338 261.548 676.917 Q263.863 677.496 266.386 677.496 Q270.784 677.496 273.076 675.76 Q275.39 674.024 275.39 670.713 Q275.39 667.658 273.238 665.945 Q271.108 664.209 267.289 664.209 L263.261 664.209 L263.261 660.366 L267.474 660.366 Q270.923 660.366 272.752 659.001 Q274.58 657.612 274.58 655.019 Q274.58 652.357 272.682 650.945 Q270.807 649.51 267.289 649.51 Q265.367 649.51 263.168 649.927 Q260.969 650.343 258.33 651.223 L258.33 647.056 Q260.992 646.315 263.307 645.945 Q265.645 645.575 267.705 645.575 Q273.029 645.575 276.131 648.005 Q279.233 650.413 279.233 654.533 Q279.233 657.403 277.59 659.394 Q275.946 661.362 272.914 662.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M298.909 649.278 Q295.298 649.278 293.469 652.843 Q291.664 656.385 291.664 663.514 Q291.664 670.621 293.469 674.186 Q295.298 677.727 298.909 677.727 Q302.543 677.727 304.349 674.186 Q306.177 670.621 306.177 663.514 Q306.177 656.385 304.349 652.843 Q302.543 649.278 298.909 649.278 M298.909 645.575 Q304.719 645.575 307.775 650.181 Q310.853 654.764 310.853 663.514 Q310.853 672.241 307.775 676.848 Q304.719 681.431 298.909 681.431 Q293.099 681.431 290.02 676.848 Q286.964 672.241 286.964 663.514 Q286.964 654.764 290.02 650.181 Q293.099 645.575 298.909 645.575 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M271.594 488.019 L259.789 506.468 L271.594 506.468 L271.594 488.019 M270.367 483.945 L276.247 483.945 L276.247 506.468 L281.177 506.468 L281.177 510.357 L276.247 510.357 L276.247 518.505 L271.594 518.505 L271.594 510.357 L255.992 510.357 L255.992 505.843 L270.367 483.945 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M298.909 487.024 Q295.298 487.024 293.469 490.589 Q291.664 494.13 291.664 501.26 Q291.664 508.366 293.469 511.931 Q295.298 515.473 298.909 515.473 Q302.543 515.473 304.349 511.931 Q306.177 508.366 306.177 501.26 Q306.177 494.13 304.349 490.589 Q302.543 487.024 298.909 487.024 M298.909 483.32 Q304.719 483.32 307.775 487.927 Q310.853 492.51 310.853 501.26 Q310.853 509.987 307.775 514.593 Q304.719 519.176 298.909 519.176 Q293.099 519.176 290.02 514.593 Q286.964 509.987 286.964 501.26 Q286.964 492.51 290.02 487.927 Q293.099 483.32 298.909 483.32 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M258.793 321.691 L277.15 321.691 L277.15 325.626 L263.076 325.626 L263.076 334.098 Q264.094 333.751 265.113 333.589 Q266.131 333.403 267.15 333.403 Q272.937 333.403 276.316 336.575 Q279.696 339.746 279.696 345.163 Q279.696 350.741 276.224 353.843 Q272.752 356.922 266.432 356.922 Q264.256 356.922 261.988 356.551 Q259.742 356.181 257.335 355.44 L257.335 350.741 Q259.418 351.876 261.641 352.431 Q263.863 352.987 266.34 352.987 Q270.344 352.987 272.682 350.88 Q275.02 348.774 275.02 345.163 Q275.02 341.552 272.682 339.445 Q270.344 337.339 266.34 337.339 Q264.465 337.339 262.59 337.755 Q260.738 338.172 258.793 339.052 L258.793 321.691 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M298.909 324.769 Q295.298 324.769 293.469 328.334 Q291.664 331.876 291.664 339.005 Q291.664 346.112 293.469 349.676 Q295.298 353.218 298.909 353.218 Q302.543 353.218 304.349 349.676 Q306.177 346.112 306.177 339.005 Q306.177 331.876 304.349 328.334 Q302.543 324.769 298.909 324.769 M298.909 321.066 Q304.719 321.066 307.775 325.672 Q310.853 330.255 310.853 339.005 Q310.853 347.732 307.775 352.338 Q304.719 356.922 298.909 356.922 Q293.099 356.922 290.02 352.338 Q286.964 347.732 286.964 339.005 Q286.964 330.255 290.02 325.672 Q293.099 321.066 298.909 321.066 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip232)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1156.88 400.199,1040.58 400.786,933.961 401.372,833.906 401.958,746.218 402.545,662.085 403.131,693.968 403.718,714.95 404.304,643.062 404.891,574.518 405.477,516.721 406.063,462.569 406.65,413.678 407.236,369.708 407.823,330.342 408.409,295.28 408.995,264.242 409.582,294.634 410.168,266.807 410.755,242.49 411.341,269.807 411.927,293.061 412.514,274.569 413.1,259.462 413.687,247.057 414.273,237.751 414.86,229.25 415.446,223.48 416.032,219.895 416.619,245.576 417.205,243.886 417.792,245.023 418.378,247.702 418.964,271.324 419.551,275.493 420.137,299.203 420.724,338.698 421.31,359.073 421.896,379.609 422.483,398.494 423.069,429.724 423.656,447.765 424.242,476.486 424.829,482.485 425.415,500.085 426.001,507.197 426.588,532.58 427.174,566.229 427.761,573.874 428.347,589.373 428.933,597.896 429.52,606.24 430.106,621.89 430.693,637.381 431.279,646.02 431.865,660.202 432.452,674.628 433.038,700.016 433.625,712.889 434.211,720.232 434.798,738.364 435.384,745.631 435.97,753.24 436.557,760.558 437.143,768.449 437.73,785.195 438.316,805.209 438.902,820.29 439.489,827.281 440.075,846.348 440.662,860.129 441.248,873.623 441.835,882.851 442.421,891.945 443.007,900.844 443.594,912.906 444.18,927.394 444.767,932.426 445.353,943.329 445.939,956.554 446.526,963.776 447.112,968.221 447.699,975.555 448.285,980.091 448.871,990.159 449.458,999.812 450.044,1006.38 450.631,1012.54 451.217,1016.14 451.804,1024.96 452.39,1031.01 452.976,1041.74 453.563,1047.28 454.149,1055.07 454.736,1060.49 455.322,1068.04 455.908,1075.25 456.495,1084.35 457.081,1086.87 457.668,1095.28 458.254,1097.7 458.84,1103.74 459.427,1107.82 460.013,1113.82 460.6,1119.47 461.186,1121.04 461.773,1122.85 462.359,1128.27 462.945,1130.04 463.532,1133.52 464.118,1144.41 464.705,1147.81 465.291,1145.67 465.877,1148.95 466.464,1157.37 467.05,1165.82 467.637,1170.28 468.223,1173.08 468.809,1175.95 469.396,1178.6 469.982,1179.46 470.569,1182.1 471.155,1183 471.742,1183.78 472.328,1184.71 472.914,1185.33 473.501,1189.29 474.087,1191.54 474.674,1197.27 475.26,1197.97 475.846,1200.44 476.433,1202.42 477.019,1204.82 477.606,1208.63 478.192,1208.96 478.778,1216.82 479.365,1219.96 479.951,1218.4 480.538,1218.4 481.124,1219.97 481.711,1223.02 482.297,1222.93 482.883,1222.75 483.47,1222.7 484.056,1222.89 484.643,1222.77 485.229,1221.26 485.815,1221.76 486.402,1221.81 486.988,1222.16 487.575,1222.51 488.161,1225.61 488.748,1227.05 489.334,1227.17 489.92,1230.13 490.507,1228.67 491.093,1231.79 491.68,1233.09 492.266,1234.5 492.852,1232.71 493.439,1232.54 494.025,1232.26 494.612,1234.89 495.198,1237.57 495.784,1235.96 496.371,1240.02 496.957,1239.73 497.544,1242.05 498.13,1242.84 498.717,1242.28 499.303,1244.32 499.889,1250.53 500.476,1248.16 501.062,1247.41 501.649,1246.73 502.235,1245.9 502.821,1243.9 503.408,1243.04 503.994,1241.24 504.581,1244.84 505.167,1245.68 505.753,1246.5 506.34,1248.69 506.926,1245.06 507.513,1247.1 508.099,1246.52 508.686,1246.07 509.272,1244.26 509.858,1243.59 510.445,1244.43 511.031,1246.53 511.618,1246.02 512.204,1245.31 512.79,1244.74 513.377,1245.82 513.963,1246.66 514.55,1247.44 515.136,1246.47 515.722,1246.04 516.309,1247.04 516.895,1246.52 517.482,1245.89 518.068,1241.2 518.655,1238.05 519.241,1240.88 519.827,1239.23 520.414,1242.05 521,1242.99 521.587,1241.23 522.173,1243.58 522.759,1244.76 523.346,1244.32 523.932,1245.09 524.519,1245.71 525.105,1246.59 525.691,1245.77 526.278,1245.27 526.864,1247.47 527.451,1246.79 528.037,1247.68 528.624,1247.16 529.21,1246.34 529.796,1242.77 530.383,1243.49 530.969,1241.8 531.556,1242.61 532.142,1242.07 532.728,1240.61 533.315,1241.58 533.901,1243.49 534.488,1241.53 535.074,1242.66 535.661,1243.35 536.247,1245.46 536.833,1248.94 537.42,1244.03 538.006,1247.58 538.593,1248.09 539.179,1247.32 539.765,1246.68 540.352,1247.41 540.938,1249.44 541.525,1250.07 542.111,1250.53 542.697,1248 543.284,1246.92 543.87,1243.61 544.457,1244.55 545.043,1245.27 545.63,1244.63 546.216,1243.95 546.802,1243.35 547.389,1244.17 547.975,1241.02 548.562,1240.92 549.148,1240.57 549.734,1240.27 550.321,1239.64 550.907,1240.57 551.494,1241.25 552.08,1241.2 552.666,1240.75 553.253,1238.61 553.839,1238.72 554.426,1240.97 555.012,1240.52 555.599,1239.82 556.185,1240.19 556.771,1239.56 557.358,1237.65 557.944,1234.59 558.531,1234.42 559.117,1234.38 559.703,1235.64 560.29,1232.64 560.876,1232.48 561.463,1233.83 562.049,1232.31 562.635,1233.37 563.222,1233.3 563.808,1234.65 564.395,1232.88 564.981,1232.54 565.568,1232.58 566.154,1228.33 566.74,1228.35 567.327,1228.5 567.913,1229.87 568.5,1229.74 569.086,1230.91 569.672,1229.58 570.259,1230.94 570.845,1230.95 571.432,1231 572.018,1233.65 572.605,1232.07 573.191,1233.52 573.777,1234.76 574.364,1233.01 574.95,1231.42 575.537,1231.27 576.123,1228.66 576.709,1227.38 577.296,1228.88 577.882,1229.17 578.469,1227.82 579.055,1227.77 579.641,1230.66 580.228,1227.92 580.814,1229.36 581.401,1230.37 581.987,1231.65 582.574,1230.11 583.16,1231.31 583.746,1232.74 584.333,1232.26 584.919,1232.38 585.506,1233.58 586.092,1232.24 586.678,1230.62 587.265,1230.4 587.851,1230.17 588.438,1228.71 589.024,1228.52 589.61,1228.62 590.197,1230.96 590.783,1229.18 591.37,1227.5 591.956,1229.99 592.543,1228.14 593.129,1226.74 593.715,1226.77 594.302,1225.65 594.888,1228.64 595.475,1228.43 596.061,1229.66 596.647,1233.71 597.234,1234.77 597.82,1236.98 598.407,1237.95 598.993,1240.07 599.579,1236.62 600.166,1234.82 600.752,1234.43 601.339,1232.69 601.925,1232.43 602.512,1232.05 603.098,1228.79 603.684,1229.06 604.271,1228.79 604.857,1227.62 605.444,1229 606.03,1230.24 606.616,1229.96 607.203,1231.05 607.789,1228.19 608.376,1229.72 608.962,1233.67 609.548,1234.69 610.135,1236.97 610.721,1234.99 611.308,1234.45 611.894,1234.12 612.481,1236.31 613.067,1238.32 613.653,1237.75 614.24,1239.53 614.826,1237.69 615.413,1234.26 615.999,1233.67 616.585,1234.6 617.172,1234.18 617.758,1237.49 618.345,1239.52 618.931,1241.27 619.518,1241.69 620.104,1241.95 620.69,1240.75 621.277,1238.58 621.863,1239.25 622.45,1239.57 623.036,1240.09 623.622,1239.18 624.209,1238.21 624.795,1239 625.382,1238.78 625.968,1240.95 626.554,1242.55 627.141,1241.57 627.727,1239.64 628.314,1234.85 628.9,1237.08 629.487,1236.49 630.073,1237.16 630.659,1235.01 631.246,1238.64 631.832,1236.49 632.419,1235.81 633.005,1236.69 633.591,1234.97 634.178,1234.39 634.764,1232.73 635.351,1236.26 635.937,1232.74 636.523,1232.14 637.11,1233.08 637.696,1232.53 638.283,1229.35 638.869,1230.37 639.456,1230.12 640.042,1227.18 640.628,1224.06 641.215,1223.91 641.801,1222.36 642.388,1225.05 642.974,1226.06 643.56,1227.16 644.147,1226.67 644.733,1227.83 645.32,1227.73 645.906,1230.31 646.492,1228.17 647.079,1227.89 647.665,1226.36 648.252,1225.8 648.838,1225.84 649.425,1225.93 650.011,1225.88 650.597,1227.17 651.184,1224 651.77,1225.13 652.357,1226.51 652.943,1229.77 653.529,1229.4 654.116,1226.53 654.702,1227.71 655.289,1226.25 655.875,1225.96 656.462,1225.83 657.048,1224.44 657.634,1223.12 658.221,1221.7 658.807,1221.49 659.394,1216.48 659.98,1218.32 660.566,1217.52 661.153,1216.56 661.739,1215.63 662.326,1217.23 662.912,1217.42 663.498,1217.73 664.085,1219.25 664.671,1222.07 665.258,1223.28 665.844,1222.96 666.431,1222.98 667.017,1220.27 667.603,1220.6 668.19,1224.82 668.776,1223.37 669.363,1226.05 669.949,1225.87 670.535,1226.76 671.122,1227.98 671.708,1230.18 672.295,1231.17 672.881,1230.74 673.467,1231.65 674.054,1234.03 674.64,1234.59 675.227,1234.03 675.813,1233.72 676.4,1234.39 676.986,1236.69 677.572,1237.13 678.159,1234.93 678.745,1234.09 679.332,1232.24 679.918,1231.66 680.504,1229.82 681.091,1226.68 681.677,1223.69 682.264,1221.92 682.85,1218.03 683.436,1219.37 684.023,1219.47 684.609,1219.59 685.196,1222.36 685.782,1219.53 686.369,1217.93 686.955,1219.39 687.541,1219.5 688.128,1220.6 688.714,1217.99 689.301,1218.34 689.887,1222.48 690.473,1221.08 691.06,1219.84 691.646,1218.93 692.233,1217.74 692.819,1220.6 693.405,1220.86 693.992,1223.39 694.578,1224.57 695.165,1223.26 695.751,1223.99 696.338,1222.62 696.924,1222.51 697.51,1223.5 698.097,1224.52 698.683,1225.28 699.27,1225.04 699.856,1221.95 700.442,1221.83 701.029,1221.67 701.615,1223.94 702.202,1222.51 702.788,1222.67 703.375,1223.86 703.961,1222.55 704.547,1223.44 705.134,1224.56 705.72,1221.93 706.307,1219.15 706.893,1220.38 707.479,1217.81 708.066,1217.95 708.652,1216.84 709.239,1218.44 709.825,1217.07 710.411,1218.54 710.998,1217.25 711.584,1217.36 712.171,1217.61 712.757,1219.18 713.344,1220.41 713.93,1219.25 714.516,1219.35 715.103,1220.64 715.689,1220.43 716.276,1217.9 716.862,1219.36 717.448,1218.04 718.035,1218.01 718.621,1219.35 719.208,1219.32 719.794,1218.27 720.38,1218.91 720.967,1216.65 721.553,1218.31 722.14,1218.41 722.726,1220.01 723.313,1219.94 723.899,1217.3 724.485,1217.78 725.072,1217.64 725.658,1215.14 726.245,1217.23 726.831,1218.85 727.417,1219.24 728.004,1222.28 728.59,1222.21 729.177,1225.05 729.763,1223.36 730.349,1224.54 730.936,1225.55 731.522,1225.34 732.109,1225.16 732.695,1224.77 733.282,1226.18 733.868,1225.95 734.454,1228.43 735.041,1228.15 735.627,1230.52 736.214,1229.8 736.8,1225.4 737.386,1225.24 737.973,1223.66 738.559,1229.96 739.146,1230.75 739.732,1226.02 740.318,1226.96 740.905,1227.78 741.491,1227.63 742.078,1225.89 742.664,1225.6 743.251,1222.8 743.837,1223.94 744.423,1224.85 745.01,1225.89 745.596,1225.29 746.183,1224.8 746.769,1225.7 747.355,1226.82 747.942,1226.36 748.528,1227.28 749.115,1227.03 749.701,1226.76 750.288,1226.36 750.874,1224.49 751.46,1225.68 752.047,1222.84 752.633,1223 753.22,1224.14 753.806,1227.85 754.392,1227.5 754.979,1226.76 755.565,1226.32 756.152,1222.03 756.738,1221.68 757.324,1224.18 757.911,1229.19 758.497,1227.06 759.084,1226.53 759.67,1226.33 760.257,1226 760.843,1227.02 761.429,1224.06 762.016,1225.1 762.602,1219.41 763.189,1216.66 763.775,1219.27 764.361,1217.99 764.948,1216.71 765.534,1216.77 766.121,1218.28 766.707,1218.37 767.293,1219.48 767.88,1217.99 768.466,1217.95 769.053,1218.07 769.639,1216.61 770.226,1215.37 770.812,1216.89 771.398,1217.26 771.985,1215.9 772.571,1214.53 773.158,1213.42 773.744,1209.93 774.33,1213.21 774.917,1213.93 775.503,1214.3 776.09,1214.63 776.676,1216.29 777.262,1215.06 777.849,1216.57 778.435,1216.62 779.022,1215.29 779.608,1216.7 780.195,1215.68 780.781,1215.8 781.367,1215.6 781.954,1221.14 782.54,1218.53 783.127,1217.12 783.713,1219.89 784.299,1219.85 784.886,1219.86 785.472,1219.77 786.059,1218.06 786.645,1219.33 787.232,1220.78 787.818,1220.54 788.404,1220.29 788.991,1216.35 789.577,1215.31 790.164,1216.8 790.75,1214.46 791.336,1215.93 791.923,1217.14 792.509,1217.29 793.096,1217.39 793.682,1217.51 794.268,1217.64 794.855,1217.9 795.441,1216.67 796.028,1216.72 796.614,1215.26 797.201,1214.36 797.787,1213.1 798.373,1215.76 798.96,1216.29 799.546,1216.14 800.133,1217.41 800.719,1217.39 801.305,1218.77 801.892,1218.77 802.478,1217.51 803.065,1217.47 803.651,1217.3 804.237,1217.89 804.824,1217.86 805.41,1218.16 805.997,1218.18 806.583,1221 807.17,1221 807.756,1222.11 808.342,1219.13 808.929,1219.02 809.515,1217.83 810.102,1216.58 810.688,1217.93 811.274,1217.67 811.861,1217.69 812.447,1216.24 813.034,1216.28 813.62,1216.37 814.206,1216.38 814.793,1216.44 815.379,1216.64 815.966,1216.68 816.552,1216.88 817.139,1219.51 817.725,1218.18 818.311,1217.97 818.898,1217.97 819.484,1220.46 820.071,1219.13 820.657,1216.13 821.243,1215.01 821.83,1213.82 822.416,1214.2 823.003,1213.19 823.589,1213.35 824.175,1213.62 824.762,1215.11 825.348,1214.22 825.935,1214.62 826.521,1214.81 827.108,1213.46 827.694,1214.88 828.28,1216.51 828.867,1217.99 829.453,1218.18 830.04,1218.48 830.626,1215.77 831.212,1217.04 831.799,1217.08 832.385,1215.75 832.972,1216.17 833.558,1216.26 834.145,1217.87 834.731,1219.26 835.317,1220.56 835.904,1220.2 836.49,1220.31 837.077,1220.23 837.663,1222.74 838.249,1223.38 838.836,1224.78 839.422,1221.91 840.009,1221.56 840.595,1222.56 841.181,1223.6 841.768,1223.42 842.354,1225.68 842.941,1225.26 843.527,1223.68 844.114,1221.96 844.7,1223.09 845.286,1222.69 845.873,1222.61 846.459,1221.19 847.046,1223.77 847.632,1223.66 848.218,1223.36 848.805,1225.83 849.391,1226.76 849.978,1226.21 850.564,1226.77 851.15,1229.12 851.737,1228.44 852.323,1225.29 852.91,1222.1 853.496,1222.05 854.083,1223.26 854.669,1221.64 855.255,1221.47 855.842,1223.82 856.428,1222.24 857.015,1222.01 857.601,1220.29 858.187,1221.35 858.774,1222.47 859.36,1222.31 859.947,1222.2 860.533,1222 861.119,1224.34 861.706,1225.56 862.292,1225.09 862.879,1223.31 863.465,1224.55 864.052,1225.78 864.638,1222.92 865.224,1224.12 865.811,1221.13 866.397,1219.67 866.984,1218.34 867.57,1217.01 868.156,1215.71 868.743,1216.59 869.329,1220.33 869.916,1220.17 870.502,1222.5 871.089,1220.8 871.675,1220.69 872.261,1216.52 872.848,1217.93 873.434,1216.67 874.021,1218.03 874.607,1218.9 875.193,1220.15 875.78,1216.1 876.366,1213.62 876.953,1213.69 877.539,1213.71 878.125,1217.66 878.712,1217.66 879.298,1214.7 879.885,1214.83 880.471,1213.57 881.058,1214.93 881.644,1216.15 882.23,1217.43 882.817,1214.74 883.403,1213.61 883.99,1215.16 884.576,1211.03 885.162,1211.6 885.749,1214.48 886.335,1215.64 886.922,1214.1 887.508,1215.38 888.094,1212.85 888.681,1211.89 889.267,1209.44 889.854,1213.81 890.44,1213.77 891.027,1213.83 891.613,1212.66 892.199,1209.03 892.786,1209.68 893.372,1211.56 893.959,1214.74 894.545,1214.94 895.131,1216.47 895.718,1217.93 896.304,1219.19 896.891,1219.33 897.477,1217.97 898.063,1220.55 898.65,1220.21 899.236,1220.29 899.823,1221.51 900.409,1221.58 900.996,1225.35 901.582,1226.37 902.168,1227.18 902.755,1224.2 903.341,1223.67 903.928,1222.07 904.514,1223.17 905.1,1221.37 905.687,1221.08 906.273,1222.22 906.86,1220.78 907.446,1219.21 908.032,1217.54 908.619,1217.51 909.205,1217.61 909.792,1223.93 910.378,1220.99 910.965,1223.28 911.551,1221.44 912.137,1221.36 912.724,1221.07 913.31,1219.27 913.897,1219.26 914.483,1218.99 915.069,1218.82 915.656,1218.81 916.242,1220.01 916.829,1222.35 917.415,1222.14 918.002,1219.29 918.588,1218.95 919.174,1220.3 919.761,1218.55 920.347,1218.7 920.934,1216.08 921.52,1213.52 922.106,1214.97 922.693,1214.09 923.279,1213.2 923.866,1214.73 924.452,1217.74 925.038,1217.71 925.625,1217.53 926.211,1217.52 926.798,1217.47 927.384,1217.68 927.971,1217.63 928.557,1217.58 929.143,1220.57 929.73,1224.48 930.316,1225.35 930.903,1224.88 931.489,1225.5 932.075,1223.42 932.662,1221.54 933.248,1222.5 933.835,1223.46 934.421,1220.36 935.007,1221.35 935.594,1223.6 936.18,1222.05 936.767,1223.13 937.353,1224.42 937.94,1225.11 938.526,1223.1 939.112,1222.97 939.699,1224.13 940.285,1222.1 940.872,1221.77 941.458,1220.24 942.044,1222.77 942.631,1219.62 943.217,1218.09 943.804,1220.66 944.39,1218.96 944.976,1217.13 945.563,1214.55 946.149,1214.85 946.736,1213.71 947.322,1213.75 947.909,1211.28 948.495,1209.99 949.081,1209.11 949.668,1210.94 950.254,1208.68 950.841,1211.57 951.427,1210.56 952.013,1212.18 952.6,1213.49 953.186,1212.12 953.773,1212.08 954.359,1212.37 954.945,1211.18 955.532,1212.59 956.118,1210.62 956.705,1213.65 957.291,1215.02 957.878,1217.58 958.464,1214.77 959.05,1212.35 959.637,1212.21 960.223,1215.19 960.81,1213.93 961.396,1212.51 961.982,1211.62 962.569,1211.75 963.155,1210.49 963.742,1209.6 964.328,1209.51 964.915,1209.74 965.501,1211.87 966.087,1215.03 966.674,1216.48 967.26,1216.47 967.847,1217.74 968.433,1217.56 969.019,1217.42 969.606,1217.12 970.192,1218.69 970.779,1221.21 971.365,1221.15 971.951,1220.88 972.538,1220.42 973.124,1221.2 973.711,1220.95 974.297,1220.78 974.884,1220.75 975.47,1216.49 976.056,1216.25 976.643,1214.89 977.229,1216.28 977.816,1216.46 978.402,1213.79 978.988,1213.9 979.575,1216.48 980.161,1219.25 980.748,1215.41 981.334,1214.36 981.92,1212.14 982.507,1212.11 983.093,1212.48 983.68,1214.03 984.266,1213 984.853,1213.35 985.439,1211.93 986.025,1213.34 986.612,1213.35 987.198,1213.5 987.785,1212.19 988.371,1212.35 988.957,1213.89 989.544,1215.23 990.13,1215.2 990.717,1215.52 991.303,1216.67 991.889,1216.64 992.476,1217.99 993.062,1220.56 993.649,1220.27 994.235,1219.92 994.822,1218.21 995.408,1215.47 995.994,1213.18 996.581,1213.65 997.167,1212.71 997.754,1210.4 998.34,1211.91 998.926,1210.91 999.513,1212.44 1000.1,1212.73 1000.69,1212.94 1001.27,1214.46 1001.86,1212.9 1002.44,1214 1003.03,1214.07 1003.62,1214.27 1004.2,1211.84 1004.79,1209.47 1005.38,1214.06 1005.96,1215.31 1006.55,1216.75 1007.14,1216.54 1007.72,1215.21 1008.31,1214.03 1008.9,1218.02 1009.48,1219.15 1010.07,1220.32 1010.65,1215.14 1011.24,1219.12 1011.83,1216.5 1012.41,1217.88 1013,1220.7 1013.59,1221.73 1014.17,1220.17 1014.76,1215.85 1015.35,1217.16 1015.93,1216.91 1016.52,1218.36 1017.11,1219.52 1017.69,1219.36 1018.28,1218.13 1018.86,1219.23 1019.45,1218.82 1020.04,1220.03 1020.62,1218.48 1021.21,1220.83 1021.8,1218.1 1022.38,1220.34 1022.97,1222.77 1023.56,1222.4 1024.14,1227.45 1024.73,1228.38 1025.32,1227.72 1025.9,1221.91 1026.49,1221.73 1027.07,1221.39 1027.66,1218.41 1028.25,1215.5 1028.83,1215.43 1029.42,1219.11 1030.01,1217.52 1030.59,1215.8 1031.18,1215.95 1031.77,1213.34 1032.35,1213.22 1032.94,1213.53 1033.52,1213.5 1034.11,1214.92 1034.7,1214.84 1035.28,1212.31 1035.87,1215.03 1036.46,1215.01 1037.04,1217.78 1037.63,1215.18 1038.22,1212.47 1038.8,1211.4 1039.39,1210.23 1039.98,1210.34 1040.56,1213.39 1041.15,1214.77 1041.73,1212.08 1042.32,1210.77 1042.91,1208.25 1043.49,1207.39 1044.08,1207.99 1044.67,1209.63 1045.25,1211.12 1045.84,1212.68 1046.43,1212.62 1047.01,1213.03 1047.6,1210.56 1048.19,1209.67 1048.77,1208.61 1049.36,1207.81 1049.94,1207.01 1050.53,1209.02 1051.12,1212.12 1051.7,1212.33 1052.29,1211.12 1052.88,1212.4 1053.46,1211.08 1054.05,1212.65 1054.64,1212.8 1055.22,1211.42 1055.81,1211.91 1056.39,1210.68 1056.98,1209.85 1057.57,1211.7 1058.15,1211.84 1058.74,1214.84 1059.33,1215.18 1059.91,1214.21 1060.5,1215.71 1061.09,1219.69 1061.67,1220.88 1062.26,1220.38 1062.85,1220.39 1063.43,1222.88 1064.02,1222.37 1064.6,1219.71 1065.19,1221.01 1065.78,1219.41 1066.36,1220.47 1066.95,1218.89 1067.54,1219.15 1068.12,1220.17 1068.71,1222.89 1069.3,1221.17 1069.88,1219.56 1070.47,1220.63 1071.06,1218.98 1071.64,1217.61 1072.23,1221.23 1072.81,1219.67 1073.4,1220.8 1073.99,1221.81 1074.57,1222.94 1075.16,1221.04 1075.75,1220.89 1076.33,1219.29 1076.92,1220.55 1077.51,1217.65 1078.09,1216.19 1078.68,1216.38 1079.26,1215.05 1079.85,1219.05 1080.44,1217.79 1081.02,1216.49 1081.61,1217.7 1082.2,1217.51 1082.78,1217.33 1083.37,1218.49 1083.96,1223.66 1084.54,1221.84 1085.13,1218.98 1085.72,1217.68 1086.3,1217.43 1086.89,1215.97 1087.47,1217.31 1088.06,1216.14 1088.65,1216.13 1089.23,1217.52 1089.82,1217.44 1090.41,1214.98 1090.99,1216.18 1091.58,1216.39 1092.17,1218.76 1092.75,1216.01 1093.34,1216.09 1093.93,1213.36 1094.51,1214.92 1095.1,1212.32 1095.68,1212.39 1096.27,1212.47 1096.86,1214 1097.44,1214.31 1098.03,1215.69 1098.62,1219.4 1099.2,1219.14 1099.79,1213.63 1100.38,1213.68 1100.96,1213.74 1101.55,1212.38 1102.14,1212.43 1102.72,1212.36 1103.31,1212.67 1103.89,1214.12 1104.48,1214.25 1105.07,1213.19 1105.65,1212.06 1106.24,1212.39 1106.83,1212.56 1107.41,1214.25 1108,1217.44 1108.59,1215.86 1109.17,1215.82 1109.76,1215.84 1110.34,1215.84 1110.93,1218.4 1111.52,1218.49 1112.1,1217.14 1112.69,1217.11 1113.28,1219.23 1113.86,1217.58 1114.45,1213.53 1115.04,1216.05 1115.62,1217.36 1116.21,1218.4 1116.8,1218.32 1117.38,1219.64 1117.97,1215.62 1118.55,1212.77 1119.14,1214.35 1119.73,1213.13 1120.31,1214.4 1120.9,1217.3 1121.49,1218.64 1122.07,1217.21 1122.66,1216.9 1123.25,1216.92 1123.83,1218.34 1124.42,1216.92 1125.01,1217.02 1125.59,1217.16 1126.18,1218.27 1126.76,1216.87 1127.35,1218.19 1127.94,1219.5 1128.52,1215.26 1129.11,1215.31 1129.7,1214.07 1130.28,1215.33 1130.87,1215.23 1131.46,1219.32 1132.04,1220.35 1132.63,1221.41 1133.21,1222.62 1133.8,1222.2 1134.39,1221.52 1134.97,1219.79 1135.56,1219.71 1136.15,1219.79 1136.73,1218.4 1137.32,1218.46 1137.91,1219.94 1138.49,1219.78 1139.08,1216.82 1139.67,1216.96 1140.25,1217.07 1140.84,1217.33 1141.42,1217.14 1142.01,1214.28 1142.6,1214.51 1143.18,1215.45 1143.77,1216.55 1144.36,1217.86 1144.94,1214.93 1145.53,1216.32 1146.12,1216.26 1146.7,1216.37 1147.29,1216.33 1147.88,1214.71 1148.46,1217.64 1149.05,1216.12 1149.63,1217.54 1150.22,1215.7 1150.81,1215.5 1151.39,1218.28 1151.98,1218.16 1152.57,1216.44 1153.15,1216.47 1153.74,1213.94 1154.33,1215.32 1154.91,1214.01 1155.5,1216.86 1156.09,1217.94 1156.67,1217.93 1157.26,1217.89 1157.84,1219.24 1158.43,1215.06 1159.02,1217.49 1159.6,1218.71 1160.19,1218.69 1160.78,1220.28 1161.36,1218.75 1161.95,1221.33 1162.54,1221.97 1163.12,1221.56 1163.71,1222.56 1164.29,1220.71 1164.88,1217.96 1165.47,1219.21 1166.05,1219.26 1166.64,1217.81 1167.23,1220.29 1167.81,1219.03 1168.4,1217.37 1168.99,1214.78 1169.57,1213.49 1170.16,1213.86 1170.75,1215.38 1171.33,1215.29 1171.92,1214.15 1172.5,1215.58 1173.09,1215.51 1173.68,1218.15 1174.26,1216.84 1174.85,1214.02 1175.44,1212.81 1176.02,1212.77 1176.61,1214.35 1177.2,1213.22 1177.78,1214.79 1178.37,1213.73 1178.96,1211.39 1179.54,1211.46 1180.13,1210.43 1180.71,1212.05 1181.3,1213.61 1181.89,1213.8 1182.47,1208.75 1183.06,1206.6 1183.65,1205.62 1184.23,1205.97 1184.82,1209.04 1185.41,1213.26 1185.99,1212.21 1186.58,1212.21 1187.16,1212.28 1187.75,1212.39 1188.34,1216.37 1188.92,1216.37 1189.51,1216.5 1190.1,1215.32 1190.68,1215.18 1191.27,1213.55 1191.86,1212.43 1192.44,1216.66 1193.03,1217.96 1193.62,1216.41 1194.2,1217.58 1194.79,1217.66 1195.37,1215.03 1195.96,1216.32 1196.55,1217.54 1197.13,1217.53 1197.72,1215.95 1198.31,1215.97 1198.89,1215.91 1199.48,1217.06 1200.07,1220.19 1200.65,1217.32 1201.24,1218.71 1201.83,1218.48 1202.41,1218.48 1203,1221.01 1203.58,1218.01 1204.17,1216.59 1204.76,1214.91 1205.34,1215.08 1205.93,1216.52 1206.52,1219.05 1207.1,1216.02 1207.69,1214.76 1208.28,1215.84 1208.86,1215.74 1209.45,1214.39 1210.03,1215.76 1210.62,1214.41 1211.21,1214.75 1211.79,1213.29 1212.38,1208.13 1212.97,1208.74 1213.55,1207.74 1214.14,1204.34 1214.73,1207.81 1215.31,1207.16 1215.9,1207.58 1216.49,1209.55 1217.07,1208.63 1217.66,1209.26 1218.24,1209.3 1218.83,1207.19 1219.42,1206.53 1220,1206.82 1220.59,1208.9 1221.18,1210.5 1221.76,1211.05 1222.35,1210.19 1222.94,1209.06 1223.52,1209.37 1224.11,1211.29 1224.7,1211.59 1225.28,1211.91 1225.87,1211.89 1226.45,1213.24 1227.04,1213.44 1227.63,1214.69 1228.21,1216.14 1228.8,1215.83 1229.39,1217.12 1229.97,1214.47 1230.56,1211.88 1231.15,1214.27 1231.73,1212.92 1232.32,1213 1232.91,1207.9 1233.49,1208.46 1234.08,1206.1 1234.66,1206.48 1235.25,1205.84 1235.84,1206.26 1236.42,1206.63 1237.01,1204.69 1237.6,1205.05 1238.18,1202.94 1238.77,1203.52 1239.36,1202.78 1239.94,1203.4 1240.53,1203.96 1241.11,1204.7 1241.7,1204.4 1242.29,1203.79 1242.87,1201.72 1243.46,1203.87 1244.05,1208.49 1244.63,1210.37 1245.22,1211.98 1245.81,1213.78 1246.39,1215.09 1246.98,1217.87 1247.57,1221.56 1248.15,1220.08 1248.74,1221.12 1249.32,1221.09 1249.91,1219.37 1250.5,1221.71 1251.08,1221.38 1251.67,1220.26 1252.26,1222.62 1252.84,1222.17 1253.43,1220.43 1254.02,1220.23 1254.6,1221.41 1255.19,1222.36 1255.78,1223.31 1256.36,1224.11 1256.95,1223.69 1257.53,1227.22 1258.12,1225.48 1258.71,1223.59 1259.29,1219.02 1259.88,1216.02 1260.47,1216.22 1261.05,1216.25 1261.64,1213.19 1262.23,1216.1 1262.81,1216 1263.4,1217.41 1263.98,1215.88 1264.57,1214.27 1265.16,1214.37 1265.74,1214.35 1266.33,1211.97 1266.92,1209.53 1267.5,1208.51 1268.09,1207.54 1268.68,1206.59 1269.26,1205.69 1269.85,1204.9 1270.44,1205.41 1271.02,1205.58 1271.61,1207.5 1272.19,1211.63 1272.78,1211.94 1273.37,1210.92 1273.95,1212.4 1274.54,1212.55 1275.13,1213.99 1275.71,1215.52 1276.3,1218.32 1276.89,1219.59 1277.47,1219.67 1278.06,1219.61 1278.65,1219.77 1279.23,1220.92 1279.82,1219.23 1280.4,1220.15 1280.99,1219.79 1281.58,1218.12 1282.16,1216.74 1282.75,1217.74 1283.34,1217.61 1283.92,1221.23 1284.51,1223.6 1285.1,1224.25 1285.68,1224.79 1286.27,1225.31 1286.86,1223.44 1287.44,1221.58 1288.03,1222.36 1288.61,1222.03 1289.2,1222.8 1289.79,1222.43 1290.37,1222.12 1290.96,1223.09 1291.55,1223.93 1292.13,1223.7 1292.72,1223.36 1293.31,1224.58 1293.89,1225.73 1294.48,1226.49 1295.06,1225.94 1295.65,1223.98 1296.24,1223.58 1296.82,1223.3 1297.41,1222.99 1298,1222.5 1298.58,1223.68 1299.17,1221.94 1299.76,1216.41 1300.34,1213.7 1300.93,1215.09 1301.52,1213.65 1302.1,1212.24 1302.69,1213.87 1303.27,1211.44 1303.86,1214.43 1304.45,1214.75 1305.03,1212.06 1305.62,1213.31 1306.21,1214.87 1306.79,1216.2 1307.38,1218.48 1307.97,1218.46 1308.55,1215.65 1309.14,1214.29 1309.73,1214.12 1310.31,1211.42 1310.9,1211.39 1311.48,1211.49 1312.07,1211.59 1312.66,1211.58 1313.24,1207.5 1313.83,1207.61 1314.42,1207.98 1315,1209.59 1315.59,1209.93 1316.18,1210.13 1316.76,1209.16 1317.35,1209.44 1317.93,1211.13 1318.52,1215.09 1319.11,1215.18 1319.69,1216.25 1320.28,1215.04 1320.87,1216.3 1321.45,1213.76 1322.04,1213.59 1322.63,1214.97 1323.21,1214.99 1323.8,1216.26 1324.39,1216.05 1324.97,1215.88 1325.56,1214.85 1326.14,1213.32 1326.73,1217.31 1327.32,1221.01 1327.9,1218.08 1328.49,1216.82 1329.08,1219.2 1329.66,1219.11 1330.25,1220.35 1330.84,1219.97 1331.42,1219.71 1332.01,1219.29 1332.6,1221.4 1333.18,1219.69 1333.77,1218.11 1334.35,1217.99 1334.94,1215.1 1335.53,1214.74 1336.11,1214.72 1336.7,1213.3 1337.29,1212.29 1337.87,1211.19 1338.46,1210.29 1339.05,1206.47 1339.63,1207.05 1340.22,1207.19 1340.8,1206.61 1341.39,1208.53 1341.98,1208.85 1342.56,1205.15 1343.15,1208.4 1343.74,1206.33 1344.32,1209.17 1344.91,1212.05 1345.5,1212.23 1346.08,1207.39 1346.67,1210.72 1347.26,1211.06 1347.84,1210.04 1348.43,1213.08 1349.01,1213.17 1349.6,1214.39 1350.19,1211.73 1350.77,1211.9 1351.36,1213.4 1351.95,1213.83 1352.53,1215.14 1353.12,1213.86 1353.71,1213.99 1354.29,1215.26 1354.88,1216.85 1355.47,1213.96 1356.05,1214.09 1356.64,1214.43 1357.22,1215.92 1357.81,1214.61 1358.4,1214.67 1358.98,1214.92 1359.57,1216.29 1360.16,1217.84 1360.74,1215.01 1361.33,1213.68 1361.92,1217.7 1362.5,1218.85 1363.09,1220.07 1363.68,1220.09 1364.26,1219.49 1364.85,1220.54 1365.43,1221.57 1366.02,1218.63 1366.61,1218.45 1367.19,1219.78 1367.78,1220.75 1368.37,1223.05 1368.95,1222.47 1369.54,1223.13 1370.13,1222.58 1370.71,1220.81 1371.3,1217.98 1371.88,1219.41 1372.47,1219.34 1373.06,1217.97 1373.64,1219.3 1374.23,1220.17 1374.82,1222.73 1375.4,1223.56 1375.99,1223 1376.58,1219.84 1377.16,1220.99 1377.75,1222.04 1378.34,1219.08 1378.92,1220.2 1379.51,1220.01 1380.09,1220.03 1380.68,1217.14 1381.27,1217.2 1381.85,1216.91 1382.44,1218.35 1383.03,1218.29 1383.61,1216.6 1384.2,1216.54 1384.79,1216.7 1385.37,1213.99 1385.96,1215.45 1386.55,1214.23 1387.13,1214.28 1387.72,1215.66 1388.3,1215.28 1388.89,1212.84 1389.48,1211.69 1390.06,1210.59 1390.65,1210.92 1391.24,1211.12 1391.82,1211.25 1392.41,1212.61 1393,1212.8 1393.58,1214.33 1394.17,1215.69 1394.75,1217.34 1395.34,1217.24 1395.93,1216.87 1396.51,1215.51 1397.1,1215.37 1397.69,1213.85 1398.27,1213.89 1398.86,1212.52 1399.45,1208.79 1400.03,1209.37 1400.62,1207.96 1401.21,1206.94 1401.79,1208.5 1402.38,1206.23 1402.96,1206.58 1403.55,1204.72 1404.14,1206.69 1404.72,1207.39 1405.31,1207.99 1405.9,1211.14 1406.48,1211.54 1407.07,1215.62 1407.66,1212.81 1408.24,1212.69 1408.83,1213.11 1409.42,1211.83 1410,1211.98 1410.59,1212.21 1411.17,1213.66 1411.76,1213.65 1412.35,1213.8 1412.93,1215.11 1413.52,1215.24 1414.11,1215.15 1414.69,1215.35 1415.28,1216.73 1415.87,1216.84 1416.45,1218.26 1417.04,1216.79 1417.63,1215.25 1418.21,1217.76 1418.8,1216.17 1419.38,1217.66 1419.97,1217.65 1420.56,1218.84 1421.14,1218.61 1421.73,1219.85 1422.32,1220.7 1422.9,1224.41 1423.49,1223.83 1424.08,1223.39 1424.66,1221.84 1425.25,1222.53 1425.83,1223.42 1426.42,1227.03 1427.01,1225.13 1427.59,1224.66 1428.18,1222.52 1428.77,1220.4 1429.35,1218.84 1429.94,1218.42 1430.53,1216.82 1431.11,1216.68 1431.7,1215.21 1432.29,1212.53 1432.87,1211.41 1433.46,1210.27 1434.04,1210.53 1434.63,1209.29 1435.22,1210.9 1435.8,1209.69 1436.39,1209.88 1436.98,1204.72 1437.56,1203.76 1438.15,1203.02 1438.74,1203.76 1439.32,1202.05 1439.91,1202.84 1440.5,1206.02 1441.08,1206.38 1441.67,1205.95 1442.25,1210.5 1442.84,1212.02 1443.43,1210.73 1444.01,1209.48 1444.6,1209.73 1445.19,1211.54 1445.77,1214.47 1446.36,1214.43 1446.95,1214.67 1447.53,1216.04 1448.12,1214.71 1448.7,1213.37 1449.29,1210.85 1449.88,1209.91 1450.46,1208.9 1451.05,1209.1 1451.64,1209.63 1452.22,1208.68 1452.81,1210.17 1453.4,1207.93 1453.98,1207.08 1454.57,1205.89 1455.16,1207.83 1455.74,1208.2 1456.33,1210.09 1456.91,1211.71 1457.5,1213.05 1458.09,1213.27 1458.67,1213.39 1459.26,1213.62 1459.85,1215.22 1460.43,1215.52 1461.02,1215.33 1461.61,1215.17 1462.19,1215.38 1462.78,1213.95 1463.37,1215.28 1463.95,1213.77 1464.54,1215.18 1465.12,1215.33 1465.71,1216.75 1466.3,1216.7 1466.88,1215.33 1467.47,1214.28 1468.06,1214.54 1468.64,1217.33 1469.23,1217.12 1469.82,1217.16 1470.4,1218.58 1470.99,1217.02 1471.57,1217.13 1472.16,1213.31 1472.75,1215.92 1473.33,1217.05 1473.92,1219.46 1474.51,1220.56 1475.09,1220.23 1475.68,1218.72 1476.27,1219.93 1476.85,1219.37 1477.44,1220.57 1478.03,1220.02 1478.61,1221.29 1479.2,1220.97 1479.78,1219.18 1480.37,1218.11 1480.96,1217.72 1481.54,1217.75 1482.13,1218.98 1482.72,1219 1483.3,1219.97 1483.89,1218.42 1484.48,1223.08 1485.06,1226.3 1485.65,1225.82 1486.24,1226.51 1486.82,1225.75 1487.41,1223.68 1487.99,1222.14 1488.58,1223.13 1489.17,1226.47 1489.75,1224.59 1490.34,1221.41 1490.93,1222.53 1491.51,1223.35 1492.1,1222.81 1492.69,1223.62 1493.27,1224.36 1493.86,1226.51 1494.45,1224.48 1495.03,1223.72 1495.62,1224.54 1496.2,1225.15 1496.79,1224.71 1497.38,1224.09 1497.96,1227.78 1498.55,1227.05 1499.14,1226.4 1499.72,1228.27 1500.31,1225.92 1500.9,1225.34 1501.48,1225.98 1502.07,1226.64 1502.65,1227.49 1503.24,1226.62 1503.83,1225.88 1504.41,1225.12 1505,1224.72 1505.59,1221.4 1506.17,1220.01 1506.76,1223.77 1507.35,1224.73 1507.93,1228.18 1508.52,1226.32 1509.11,1224.39 1509.69,1223.92 1510.28,1225.13 1510.86,1223.65 1511.45,1222.96 1512.04,1221.23 1512.62,1218.34 1513.21,1218.22 1513.8,1215.22 1514.38,1215.13 1514.97,1213.5 1515.56,1211.21 1516.14,1211.38 1516.73,1211.34 1517.32,1210.35 1517.9,1210.87 1518.49,1208.29 1519.07,1208.66 1519.66,1210.17 1520.25,1208.83 1520.83,1210.37 1521.42,1214.64 1522.01,1215.96 1522.59,1213.46 1523.18,1214.89 1523.77,1217.7 1524.35,1216.34 1524.94,1216.46 1525.52,1215.02 1526.11,1211.26 1526.7,1218.22 1527.28,1219.41 1527.87,1219.01 1528.46,1222.83 1529.04,1222.73 1529.63,1222.23 1530.22,1217.9 1530.8,1219.18 1531.39,1216.38 1531.98,1216.25 1532.56,1220.13 1533.15,1221.33 1533.73,1221.17 1534.32,1216.7 1534.91,1215.2 1535.49,1211.32 1536.08,1210.24 1536.67,1207.97 1537.25,1209.62 1537.84,1209.88 1538.43,1209.96 1539.01,1211.63 1539.6,1211.73 1540.19,1208.39 1540.77,1208.81 1541.36,1206.42 1541.94,1208.1 1542.53,1211.56 1543.12,1206.14 1543.7,1206.59 1544.29,1205.7 1544.88,1205.94 1545.46,1208.62 1546.05,1207.69 1546.64,1205.23 1547.22,1205.59 1547.81,1206.28 1548.4,1205.6 1548.98,1207.57 1549.57,1206.77 1550.15,1207.11 1550.74,1209.96 1551.33,1209.02 1551.91,1209.45 1552.5,1209.81 1553.09,1210.16 1553.67,1207.77 1554.26,1205.54 1554.85,1207.45 1555.43,1206.67 1556.02,1207.4 1556.6,1210.28 1557.19,1209.17 1557.78,1209.64 1558.36,1207.27 1558.95,1210.69 1559.54,1209.87 1560.12,1211.7 1560.71,1213.23 1561.3,1213.33 1561.88,1216 1562.47,1216.01 1563.06,1214.92 1563.64,1213.72 1564.23,1214.18 1564.81,1213.12 1565.4,1210.82 1565.99,1209.77 1566.57,1215.18 1567.16,1216.71 1567.75,1216.38 1568.33,1216.41 1568.92,1216.7 1569.51,1218 1570.09,1215.45 1570.68,1219.34 1571.27,1219.33 1571.85,1217.91 1572.44,1217.83 1573.02,1218.98 1573.61,1219.9 1574.2,1221.08 1574.78,1221.94 1575.37,1221.86 1575.96,1221.81 1576.54,1217.34 1577.13,1217.34 1577.72,1214.76 1578.3,1216.26 1578.89,1215.06 1579.47,1212.91 1580.06,1211.76 1580.65,1213.17 1581.23,1213.12 1581.82,1215.94 1582.41,1217.42 1582.99,1216.04 1583.58,1214.37 1584.17,1211.72 1584.75,1213.33 1585.34,1214.76 1585.93,1213.51 1586.51,1212.28 1587.1,1212.15 1587.68,1214.8 1588.27,1213.52 1588.86,1213.56 1589.44,1212.23 1590.03,1215.06 1590.62,1215.09 1591.2,1217.88 1591.79,1220.45 1592.38,1221.46 1592.96,1222.28 1593.55,1221.68 1594.14,1223.01 1594.72,1222.54 1595.31,1224.99 1595.89,1224.44 1596.48,1223.78 1597.07,1227.02 1597.65,1223.58 1598.24,1221.43 1598.83,1222.37 1599.41,1221.78 1600,1221.52 1600.59,1221.03 1601.17,1218.31 1601.76,1216.81 1602.34,1213.82 1602.93,1213.95 1603.52,1212.51 1604.1,1211.32 1604.69,1211.42 1605.28,1209.95 1605.86,1207.58 1606.45,1209.36 1607.04,1212.11 1607.62,1214.67 1608.21,1215.91 1608.8,1214.76 1609.38,1217.39 1609.97,1216.06 1610.55,1217.17 1611.14,1218.34 1611.73,1219.68 1612.31,1217.96 1612.9,1217.8 1613.49,1219.07 1614.07,1216.32 1614.66,1217.48 1615.25,1217.17 1615.83,1211.68 1616.42,1214.42 1617.01,1214.09 1617.59,1215.28 1618.18,1218.1 1618.76,1220.74 1619.35,1216.59 1619.94,1217.89 1620.52,1217.54 1621.11,1217.25 1621.7,1218.59 1622.28,1216.98 1622.87,1216.65 1623.46,1216.53 1624.04,1213.9 1624.63,1215.42 1625.22,1214.11 1625.8,1211.37 1626.39,1212.82 1626.97,1215.31 1627.56,1216.35 1628.15,1217.57 1628.73,1219.98 1629.32,1219.55 1629.91,1221.02 1630.49,1218.28 1631.08,1219.53 1631.67,1220.42 1632.25,1218.6 1632.84,1219.6 1633.42,1220.66 1634.01,1219.01 1634.6,1220.32 1635.18,1215.93 1635.77,1217.28 1636.36,1214.21 1636.94,1214.35 1637.53,1218.29 1638.12,1218.15 1638.7,1216.68 1639.29,1213.71 1639.88,1212.33 1640.46,1213.79 1641.05,1213.84 1641.63,1212.54 1642.22,1211.17 1642.81,1211.72 1643.39,1210.42 1643.98,1210.51 1644.57,1209.4 1645.15,1207.16 1645.74,1204.75 1646.33,1206.63 1646.91,1208.46 1647.5,1211.69 1648.09,1210.58 1648.67,1205.29 1649.26,1208.39 1649.84,1207.34 1650.43,1209.24 1651.02,1209.92 1651.6,1211.6 1652.19,1210.44 1652.78,1212.01 1653.36,1212.02 1653.95,1212.34 1654.54,1212.39 1655.12,1210.09 1655.71,1210.29 1656.29,1207.89 1656.88,1208.31 1657.47,1211.17 1658.05,1212.79 1658.64,1213.41 1659.23,1216.04 1659.81,1218.57 1660.4,1219.52 1660.99,1216.79 1661.57,1216.73 1662.16,1218.09 1662.75,1218.17 1663.33,1216.9 1663.92,1216.95 1664.5,1213 1665.09,1210.75 1665.68,1212.35 1666.26,1212.84 1666.85,1212.94 1667.44,1213.27 1668.02,1213.46 1668.61,1213.89 1669.2,1214.08 1669.78,1215.17 1670.37,1215.52 1670.96,1212.89 1671.54,1213.01 1672.13,1214.73 1672.71,1213.65 1673.3,1213.66 1673.89,1212.24 1674.47,1211.06 1675.06,1210.95 1675.65,1211.47 1676.23,1212.89 1676.82,1211.77 1677.41,1214.64 1677.99,1217.33 1678.58,1219.6 1679.17,1220.91 1679.75,1223.59 1680.34,1227.03 1680.92,1227.93 1681.51,1227.16 1682.1,1227.91 1682.68,1227.08 1683.27,1227.83 1683.86,1224.33 1684.44,1226.38 1685.03,1223.24 1685.62,1225.52 1686.2,1222.31 1686.79,1220.49 1687.37,1221.7 1687.96,1222.79 1688.55,1225.3 1689.13,1224.69 1689.72,1224.13 1690.31,1226.19 1690.89,1223.09 1691.48,1223.82 1692.07,1224.65 1692.65,1224.21 1693.24,1222.54 1693.83,1223.49 1694.41,1226.85 1695,1224.87 1695.58,1225.73 1696.17,1224.03 1696.76,1223.28 1697.34,1218.97 1697.93,1217.87 1698.52,1214.98 1699.1,1214.92 1699.69,1216.12 1700.28,1215.82 1700.86,1215.51 1701.45,1216.79 1702.04,1215.29 1702.62,1216.64 1703.21,1216.57 1703.79,1219.32 1704.38,1220.57 1704.97,1221.73 1705.55,1217.21 1706.14,1218.42 1706.73,1218.54 1707.31,1216.95 1707.9,1214.37 1708.49,1213.05 1709.07,1213.06 1709.66,1214.31 1710.24,1214.51 1710.83,1213.24 1711.42,1212.1 1712,1210.96 1712.59,1209.85 1713.18,1211.33 1713.76,1208.75 1714.35,1208.93 1714.94,1207.95 1715.52,1212.22 1716.11,1208.65 1716.7,1207.77 1717.28,1209.39 1717.87,1209.52 1718.45,1209.89 1719.04,1209.08 1719.63,1208.08 1720.21,1211.05 1720.8,1209.7 1721.39,1211.47 1721.97,1214.37 1722.56,1211.75 1723.15,1213.33 1723.73,1217.44 1724.32,1213.22 1724.91,1214.48 1725.49,1211.93 1726.08,1210.49 1726.66,1211.78 1727.25,1213.14 1727.84,1211.97 1728.42,1213.56 1729.01,1213.67 1729.6,1212.94 1730.18,1213.22 1730.77,1213.42 1731.36,1214.8 1731.94,1210.77 1732.53,1212.24 1733.11,1213.77 1733.7,1213.66 1734.29,1215.25 1734.87,1218 1735.46,1218.01 1736.05,1218.23 1736.63,1220.31 1737.22,1220.19 1737.81,1218.9 1738.39,1220.09 1738.98,1217.19 1739.57,1220.9 1740.15,1221.95 1740.74,1219.03 1741.32,1218.87 1741.91,1220.3 1742.5,1218.83 1743.08,1215.59 1743.67,1217.08 1744.26,1214.29 1744.84,1214.37 1745.43,1212.95 1746.02,1211.79 1746.6,1212.09 1747.19,1214.92 1747.78,1212.48 1748.36,1215.41 1748.95,1211.51 1749.53,1212.79 1750.12,1214.19 1750.71,1213.27 1751.29,1216.09 1751.88,1214.97 1752.47,1215.27 1753.05,1216.73 1753.64,1215.34 1754.23,1215.46 1754.81,1217 1755.4,1216.59 1755.99,1216.72 1756.57,1215.24 1757.16,1216.47 1757.74,1218.15 1758.33,1216.74 1758.92,1216.77 1759.5,1216.86 1760.09,1221.02 1760.68,1219.6 1761.26,1219.82 1761.85,1216.98 1762.44,1212.92 1763.02,1212.91 1763.61,1214.65 1764.19,1214.36 1764.78,1212.12 1765.37,1212.42 1765.95,1210.03 1766.54,1207.56 1767.13,1208.01 1767.71,1209.86 1768.3,1211.69 1768.89,1210.5 1769.47,1210.94 1770.06,1212.92 1770.65,1214.16 1771.23,1213.1 1771.82,1213.31 1772.4,1213.2 1772.99,1213.57 1773.58,1213.68 1774.16,1212.58 1774.75,1212.91 1775.34,1215.61 1775.92,1215.96 1776.51,1216.11 1777.1,1217.4 1777.68,1217.23 1778.27,1217.19 1778.86,1215.62 1779.44,1214.22 1780.03,1211.9 1780.61,1211.94 1781.2,1209.52 1781.79,1211.18 1782.37,1215.36 1782.96,1215.8 1783.55,1214.65 1784.13,1210.75 1784.72,1210.88 1785.31,1209.85 1785.89,1209.02 1786.48,1209.45 1787.06,1206.92 1787.65,1207.44 1788.24,1209.3 1788.82,1205.87 1789.41,1204.94 1790,1207.09 1790.58,1209.05 1791.17,1210.37 1791.76,1209.26 1792.34,1208.06 1792.93,1210.24 1793.52,1213.24 1794.1,1213.57 1794.69,1213.38 1795.27,1213.34 1795.86,1211.97 1796.45,1214.94 1797.03,1217.48 1797.62,1217.29 1798.21,1218.17 1798.79,1216.88 1799.38,1219.36 1799.97,1219 1800.55,1217.33 1801.14,1217.2 1801.73,1222.22 1802.31,1218.97 1802.9,1220.18 1803.48,1221.42 1804.07,1220 1804.66,1218.34 1805.24,1220.79 1805.83,1216.84 1806.42,1218.11 1807,1216.5 1807.59,1212.31 1808.18,1211.07 1808.76,1213.96 1809.35,1215.73 1809.94,1212.92 1810.52,1211.98 1811.11,1213.49 1811.69,1209.66 1812.28,1209.8 1812.87,1209.87 1813.45,1210.29 1814.04,1212.1 1814.63,1212.21 1815.21,1212.2 1815.8,1213.54 1816.39,1213.59 1816.97,1215.13 1817.56,1217.76 1818.14,1217.36 1818.73,1219.78 1819.32,1219.34 1819.9,1220.57 1820.49,1221.63 1821.08,1217.26 1821.66,1215.8 1822.25,1214.39 1822.84,1213.01 1823.42,1214.78 1824.01,1213.35 1824.6,1213.52 1825.18,1213.11 1825.77,1216.98 1826.35,1215.32 1826.94,1215 1827.53,1214.95 1828.11,1216.25 1828.7,1214.77 1829.29,1216.18 1829.87,1218.75 1830.46,1219.82 1831.05,1219.59 1831.63,1220.61 1832.22,1221.63 1832.81,1221.39 1833.39,1219.75 1833.98,1219.44 1834.56,1220.92 1835.15,1219.32 1835.74,1218.73 1836.32,1218.32 1836.91,1218.08 1837.5,1221.99 1838.08,1221.41 1838.67,1221.15 1839.26,1222.22 1839.84,1221.55 1840.43,1221.59 1841.01,1219.96 1841.6,1217.06 1842.19,1216.93 1842.77,1220.88 1843.36,1217.86 1843.95,1215.22 1844.53,1217.76 1845.12,1221.66 1845.71,1221.62 1846.29,1219.8 1846.88,1219.42 1847.47,1217.8 1848.05,1219.23 1848.64,1218.9 1849.22,1217.43 1849.81,1217.28 1850.4,1214.49 1850.98,1215.69 1851.57,1217.06 1852.16,1218.26 1852.74,1215.33 1853.33,1212.65 1853.92,1216.9 1854.5,1216.96 1855.09,1216.73 1855.68,1216.49 1856.26,1216.49 1856.85,1215.24 1857.43,1215.18 1858.02,1216.42 1858.61,1216.44 1859.19,1216.05 1859.78,1215.77 1860.37,1215.75 1860.95,1214.35 1861.54,1212.97 1862.13,1215.77 1862.71,1215.65 1863.3,1214.22 1863.88,1214.5 1864.47,1214.9 1865.06,1214.91 1865.64,1213.61 1866.23,1213.56 1866.82,1213.62 1867.4,1213.94 1867.99,1211.52 1868.58,1210.52 1869.16,1209.51 1869.75,1209.82 1870.34,1207.32 1870.92,1208.07 1871.51,1207.02 1872.09,1204.89 1872.68,1204.15 1873.27,1206.24 1873.85,1209.26 1874.44,1210.75 1875.03,1210.97 1875.61,1212.7 1876.2,1214.27 1876.79,1219.4 1877.37,1219.14 1877.96,1218.92 1878.55,1219.02 1879.13,1219.04 1879.72,1220.16 1880.3,1219.99 1880.89,1217.04 1881.48,1215.88 1882.06,1218.52 1882.65,1218.4 1883.24,1217.16 1883.82,1218.4 1884.41,1218.18 1885,1216.71 1885.58,1217.93 1886.17,1213.98 1886.76,1210.34 1887.34,1210.61 1887.93,1213.43 1888.51,1213.82 1889.1,1215.23 1889.69,1214.02 1890.27,1208.86 1890.86,1206.57 1891.45,1209.57 1892.03,1211.25 1892.62,1214.24 1893.21,1217.14 1893.79,1217.09 1894.38,1217 1894.96,1214.34 1895.55,1211.64 1896.14,1213.01 1896.72,1213.18 1897.31,1212.25 1897.9,1210.92 1898.48,1208.6 1899.07,1210.36 1899.66,1209.36 1900.24,1213.57 1900.83,1213.72 1901.42,1213.72 1902,1215.47 1902.59,1215.35 1903.17,1215.38 1903.76,1219.16 1904.35,1217.63 1904.93,1217.38 1905.52,1215 1906.11,1212.12 1906.69,1210.93 1907.28,1211.11 1907.87,1211.09 1908.45,1211.08 1909.04,1211.17 1909.63,1211.61 1910.21,1211.82 1910.8,1213.11 1911.38,1211.86 1911.97,1213.49 1912.56,1212.1 1913.14,1212.27 1913.73,1212.38 1914.32,1210.02 1914.9,1211.54 1915.49,1211.69 1916.08,1210.8 1916.66,1209.77 1917.25,1210.17 1917.83,1211.9 1918.42,1209.22 1919.01,1209.2 1919.59,1208.03 1920.18,1209.66 1920.77,1211.46 1921.35,1214.4 1921.94,1213.13 1922.53,1212.06 1923.11,1213.67 1923.7,1213.62 1924.29,1213.63 1924.87,1215.21 1925.46,1212.57 1926.04,1211.42 1926.63,1211.42 1927.22,1211.8 1927.8,1210.65 1928.39,1210.85 1928.98,1209.77 1929.56,1211.11 1930.15,1211.1 1930.74,1211.52 1931.32,1213.07 1931.91,1214.62 1932.5,1213.45 1933.08,1212.35 1933.67,1216.44 1934.25,1217.84 1934.84,1220.25 1935.43,1219 1936.01,1221.27 1936.6,1220.93 1937.19,1217.81 1937.77,1219.34 1938.36,1218.95 1938.95,1218.75 1939.53,1218.37 1940.12,1218.16 1940.71,1220.68 1941.29,1222.63 1941.88,1223.87 1942.46,1224.8 1943.05,1222.8 1943.64,1225.21 1944.22,1223.54 1944.81,1223.84 1945.4,1223.31 1945.98,1222.95 1946.57,1221.38 1947.16,1222.24 1947.74,1223.22 1948.33,1224.16 1948.91,1223.65 1949.5,1224.59 1950.09,1221.64 1950.67,1219.2 1951.26,1216.36 1951.85,1218.77 1952.43,1218.53 1953.02,1218.48 1953.61,1218.16 1954.19,1217.81 1954.78,1217.63 1955.37,1213.5 1955.95,1213.61 1956.54,1211.29 1957.12,1213.02 1957.71,1209.18 1958.3,1212.1 1958.88,1212.29 1959.47,1211.01 1960.06,1212.44 1960.64,1210.1 1961.23,1212.89 1961.82,1210.39 1962.4,1214.66 1962.99,1216.06 1963.58,1216.66 1964.16,1216.79 1964.75,1215.41 1965.33,1216.58 1965.92,1213.89 1966.51,1214.22 1967.09,1215.58 1967.68,1214.21 1968.27,1214.27 1968.85,1213.03 1969.44,1213.3 1970.03,1213.38 1970.61,1214.81 1971.2,1216.11 1971.78,1218.84 1972.37,1218.95 1972.96,1220.02 1973.54,1218.31 1974.13,1219.37 1974.72,1221.86 1975.3,1222.73 1975.89,1223.62 1976.48,1219.37 1977.06,1223.15 1977.65,1221.36 1978.24,1223.69 1978.82,1223.25 1979.41,1221.53 1979.99,1220.11 1980.58,1221.23 1981.17,1220.94 1981.75,1222.2 1982.34,1221.74 1982.93,1221.23 1983.51,1219.71 1984.1,1218.24 1984.69,1216.52 1985.27,1219.05 1985.86,1221.66 1986.45,1221.2 1987.03,1219.42 1987.62,1219.07 1988.2,1219.03 1988.79,1220.55 1989.38,1217.71 1989.96,1215 1990.55,1215.07 1991.14,1216.52 1991.72,1216.57 1992.31,1216.68 1992.9,1215.11 1993.48,1215.29 1994.07,1215.45 1994.65,1216.63 1995.24,1215.05 1995.83,1212.51 1996.41,1216.68 1997,1217.85 1997.59,1215.21 1998.17,1213.83 1998.76,1213.86 1999.35,1213.72 1999.93,1212.72 2000.52,1209.91 2001.11,1210.25 2001.69,1209.22 2002.28,1210.87 2002.86,1211.17 2003.45,1208.81 2004.04,1207.86 2004.62,1208.34 2005.21,1208.75 2005.8,1207.84 2006.38,1207 2006.97,1208.65 2007.56,1209.1 2008.14,1209.24 2008.73,1208.17 2009.32,1205.54 2009.9,1206.23 2010.49,1208.29 2011.07,1211.22 2011.66,1212.67 2012.25,1214.3 2012.83,1214.47 2013.42,1214.74 2014.01,1213.39 2014.59,1213.67 2015.18,1214.13 2015.77,1214.12 2016.35,1215.42 2016.94,1213.82 2017.53,1215.22 2018.11,1216.42 2018.7,1214.89 2019.28,1214.88 2019.87,1218.93 2020.46,1218.63 2021.04,1218.52 2021.63,1219.68 2022.22,1220.84 2022.8,1220.32 2023.39,1221.32 2023.98,1222.23 2024.56,1224.46 2025.15,1218.81 2025.73,1217.42 2026.32,1218.58 2026.91,1219.61 2027.49,1218.39 2028.08,1216.96 2028.67,1223.66 2029.25,1219.13 2029.84,1218.93 2030.43,1217.44 2031.01,1217.22 2031.6,1217.01 2032.19,1215.64 2032.77,1214.26 2033.36,1215.64 2033.94,1214.72 2034.53,1212.22 2035.12,1211.05 2035.7,1212.31 2036.29,1210.9 2036.88,1211.01 2037.46,1211.32 2038.05,1212.97 2038.64,1212.14 2039.22,1212.3 2039.81,1216.43 2040.4,1216.28 2040.98,1217.48 2041.57,1219.97 2042.15,1221.17 2042.74,1219.72 2043.33,1220.83 2043.91,1220.29 2044.5,1217.38 2045.09,1218.36 2045.67,1216.98 2046.26,1218.02 2046.85,1217.8 2047.43,1220.37 2048.02,1217.38 2048.6,1218.38 2049.19,1214.12 2049.78,1213.97 2050.36,1218.13 2050.95,1215.46 2051.54,1214.07 2052.12,1215.59 2052.71,1214.37 2053.3,1216.96 2053.88,1219.4 2054.47,1219.21 2055.06,1218.98 2055.64,1218.49 2056.23,1219.72 2056.81,1219.68 2057.4,1216.64 2057.99,1216.54 2058.57,1215.18 2059.16,1213.62 2059.75,1212.49 2060.33,1209.98 2060.92,1210.37 2061.51,1209.3 2062.09,1211.05 2062.68,1211.31 2063.27,1213.05 2063.85,1211.71 2064.44,1210.71 2065.02,1209.81 2065.61,1208.71 2066.2,1207.86 2066.78,1208.21 2067.37,1208.69 2067.96,1211.67 2068.54,1211.89 2069.13,1217.16 2069.72,1217.1 2070.3,1215.72 2070.89,1216.81 2071.48,1215.54 2072.06,1217.96 2072.65,1217.69 2073.23,1217.4 2073.82,1217.39 2074.41,1218.31 2074.99,1218.1 2075.58,1216.44 2076.17,1212.53 2076.75,1212.31 2077.34,1212.25 2077.93,1212.58 2078.51,1212.69 2079.1,1212.76 2079.68,1211.42 2080.27,1214.35 2080.86,1212.02 2081.44,1211.96 2082.03,1212.08 2082.62,1208.32 2083.2,1212.75 2083.79,1214.3 2084.38,1210.49 2084.96,1210.84 2085.55,1212.45 2086.14,1211.33 2086.72,1210.14 2087.31,1210.41 2087.89,1209.41 2088.48,1211.14 2089.07,1214.11 2089.65,1214.01 2090.24,1212.6 2090.83,1214.19 2091.41,1215.32 2092,1216.72 2092.59,1215.22 2093.17,1214.05 2093.76,1212.91 2094.35,1211.81 2094.93,1212.11 2095.52,1212.25 2096.1,1215.13 2096.69,1216.5 2097.28,1215.24 2097.86,1213.86 2098.45,1211.22 2099.04,1211.36 2099.62,1211.54 2100.21,1211.86 2100.8,1212.1 2101.38,1212.6 2101.97,1212.65 2102.55,1212.81 2103.14,1213.01 2103.73,1215.89 2104.31,1221.02 2104.9,1220.64 2105.49,1219.16 2106.07,1218.89 2106.66,1218.69 2107.25,1219.84 2107.83,1216.86 2108.42,1218.31 2109.01,1218.2 2109.59,1217.13 2110.18,1216.89 2110.76,1217.81 2111.35,1217.84 2111.94,1217.77 2112.52,1217.54 2113.11,1217.51 2113.7,1217.66 2114.28,1217.88 2114.87,1217.75 2115.46,1216.32 2116.04,1217.58 2116.63,1214.93 2117.22,1213.52 2117.8,1217.56 2118.39,1212.25 2118.97,1215.14 2119.56,1215.18 2120.15,1213.69 2120.73,1213.65 2121.32,1212.38 2121.91,1214.03 2122.49,1215.67 2123.08,1216.85 2123.67,1219.38 2124.25,1215.33 2124.84,1212.88 2125.42,1214.39 2126.01,1214.55 2126.6,1214.78 2127.18,1213.5 2127.77,1213.37 2128.36,1212.4 2128.94,1213.77 2129.53,1215.39 2130.12,1216.51 2130.7,1216.34 2131.29,1216.48 2131.88,1215.17 2132.46,1215.16 2133.05,1216.41 2133.63,1217.58 2134.22,1217.47 2134.81,1214.8 2135.39,1213.59 2135.98,1213.94 2136.57,1214.15 2137.15,1216.97 2137.74,1218.18 2138.33,1213.81 2138.91,1214.91 2139.5,1215.16 2140.09,1210.91 2140.67,1212.4 2141.26,1213.7 2141.84,1217.49 2142.43,1217.17 2143.02,1217.87 2143.6,1217.49 2144.19,1217.61 2144.78,1218.72 2145.36,1218.44 2145.95,1218.34 2146.54,1213.04 2147.12,1211.88 2147.71,1213.2 2148.3,1214.45 2148.88,1215.88 2149.47,1215.93 2150.05,1214.32 2150.64,1214.25 2151.23,1215.74 2151.81,1217.14 2152.4,1217.1 2152.99,1214.51 2153.57,1217.37 2154.16,1220.02 2154.75,1218.48 2155.33,1218.38 2155.92,1218.17 2156.5,1216.61 2157.09,1216.29 2157.68,1214.93 2158.26,1212.31 \"/>\n<path clip-path=\"url(#clip232)\" d=\"M986.025 1215.92 L986.612 1215.92 L987.198 1215.92 L987.785 1215.92 L988.371 1215.92 L988.957 1215.92 L989.544 1215.92 L990.13 1215.92 L990.717 1215.92 L991.303 1215.92 L991.889 1215.92 L992.476 1215.92 L993.062 1215.92 L993.649 1215.92 L994.235 1215.92 L994.822 1215.92 L995.408 1215.92 L995.994 1215.92 L996.581 1215.92 L997.167 1215.92 L997.754 1215.92 L998.34 1215.92 L998.926 1215.92 L999.513 1215.92 L1000.1 1215.92 L1000.69 1215.92 L1001.27 1215.92 L1001.86 1215.92 L1002.44 1215.92 L1003.03 1215.92 L1003.62 1215.92 L1004.2 1215.92 L1004.79 1215.92 L1005.38 1215.92 L1005.96 1215.92 L1006.55 1215.92 L1007.14 1215.92 L1007.72 1215.92 L1008.31 1215.92 L1008.9 1215.92 L1009.48 1215.92 L1010.07 1215.92 L1010.65 1215.92 L1011.24 1215.92 L1011.83 1215.92 L1012.41 1215.92 L1013 1215.92 L1013.59 1215.92 L1014.17 1215.92 L1014.76 1215.92 L1015.35 1215.92 L1015.93 1215.92 L1016.52 1215.92 L1017.11 1215.92 L1017.69 1215.92 L1018.28 1215.92 L1018.86 1215.92 L1019.45 1215.92 L1020.04 1215.92 L1020.62 1215.92 L1021.21 1215.92 L1021.8 1215.92 L1022.38 1215.92 L1022.97 1215.92 L1023.56 1215.92 L1024.14 1215.92 L1024.73 1215.92 L1025.32 1215.92 L1025.9 1215.92 L1026.49 1215.92 L1027.07 1215.92 L1027.66 1215.92 L1028.25 1215.92 L1028.83 1215.92 L1029.42 1215.92 L1030.01 1215.92 L1030.59 1215.92 L1031.18 1215.92 L1031.77 1215.92 L1032.35 1215.92 L1032.94 1215.92 L1033.52 1215.92 L1034.11 1215.92 L1034.7 1215.92 L1035.28 1215.92 L1035.87 1215.92 L1036.46 1215.92 L1037.04 1215.92 L1037.63 1215.92 L1038.22 1215.92 L1038.8 1215.92 L1039.39 1215.92 L1039.98 1215.92 L1040.56 1215.92 L1041.15 1215.92 L1041.73 1215.92 L1042.32 1215.92 L1042.91 1215.92 L1043.49 1215.92 L1044.08 1215.92 L1044.67 1215.92 L1045.25 1215.92 L1045.84 1215.92 L1046.43 1215.92 L1047.01 1215.92 L1047.6 1215.92 L1048.19 1215.92 L1048.77 1215.92 L1049.36 1215.92 L1049.94 1215.92 L1050.53 1215.92 L1051.12 1215.92 L1051.7 1215.92 L1052.29 1215.92 L1052.88 1215.92 L1053.46 1215.92 L1054.05 1215.92 L1054.64 1215.92 L1055.22 1215.92 L1055.81 1215.92 L1056.39 1215.92 L1056.98 1215.92 L1057.57 1215.92 L1058.15 1215.92 L1058.74 1215.92 L1059.33 1215.92 L1059.91 1215.92 L1060.5 1215.92 L1061.09 1215.92 L1061.67 1215.92 L1062.26 1215.92 L1062.85 1215.92 L1063.43 1215.92 L1064.02 1215.92 L1064.6 1215.92 L1065.19 1215.92 L1065.78 1215.92 L1066.36 1215.92 L1066.95 1215.92 L1067.54 1215.92 L1068.12 1215.92 L1068.71 1215.92 L1069.3 1215.92 L1069.88 1215.92 L1070.47 1215.92 L1071.06 1215.92 L1071.64 1215.92 L1072.23 1215.92 L1072.81 1215.92 L1073.4 1215.92 L1073.99 1215.92 L1074.57 1215.92 L1075.16 1215.92 L1075.75 1215.92 L1076.33 1215.92 L1076.92 1215.92 L1077.51 1215.92 L1078.09 1215.92 L1078.68 1215.92 L1079.26 1215.92 L1079.85 1215.92 L1080.44 1215.92 L1081.02 1215.92 L1081.61 1215.92 L1082.2 1215.92 L1082.78 1215.92 L1083.37 1215.92 L1083.96 1215.92 L1084.54 1215.92 L1085.13 1215.92 L1085.72 1215.92 L1086.3 1215.92 L1086.89 1215.92 L1087.47 1215.92 L1088.06 1215.92 L1088.65 1215.92 L1089.23 1215.92 L1089.82 1215.92 L1090.41 1215.92 L1090.99 1215.92 L1091.58 1215.92 L1092.17 1215.92 L1092.75 1215.92 L1093.34 1215.92 L1093.93 1215.92 L1094.51 1215.92 L1095.1 1215.92 L1095.68 1215.92 L1096.27 1215.92 L1096.86 1215.92 L1097.44 1215.92 L1098.03 1215.92 L1098.62 1215.92 L1099.2 1215.92 L1099.79 1215.92 L1100.38 1215.92 L1100.96 1215.92 L1101.55 1215.92 L1102.14 1215.92 L1102.72 1215.92 L1103.31 1215.92 L1103.89 1215.92 L1104.48 1215.92 L1105.07 1215.92 L1105.65 1215.92 L1106.24 1215.92 L1106.83 1215.92 L1107.41 1215.92 L1108 1215.92 L1108.59 1215.92 L1109.17 1215.92 L1109.76 1215.92 L1110.34 1215.92 L1110.93 1215.92 L1111.52 1215.92 L1112.1 1215.92 L1112.69 1215.92 L1113.28 1215.92 L1113.86 1215.92 L1114.45 1215.92 L1115.04 1215.92 L1115.62 1215.92 L1116.21 1215.92 L1116.8 1215.92 L1117.38 1215.92 L1117.97 1215.92 L1118.55 1215.92 L1119.14 1215.92 L1119.73 1215.92 L1120.31 1215.92 L1120.9 1215.92 L1121.49 1215.92 L1122.07 1215.92 L1122.66 1215.92 L1123.25 1215.92 L1123.83 1215.92 L1124.42 1215.92 L1125.01 1215.92 L1125.59 1215.92 L1126.18 1215.92 L1126.76 1215.92 L1127.35 1215.92 L1127.94 1215.92 L1128.52 1215.92 L1129.11 1215.92 L1129.7 1215.92 L1130.28 1215.92 L1130.87 1215.92 L1131.46 1215.92 L1132.04 1215.92 L1132.63 1215.92 L1133.21 1215.92 L1133.8 1215.92 L1134.39 1215.92 L1134.97 1215.92 L1135.56 1215.92 L1136.15 1215.92 L1136.73 1215.92 L1137.32 1215.92 L1137.91 1215.92 L1138.49 1215.92 L1139.08 1215.92 L1139.67 1215.92 L1140.25 1215.92 L1140.84 1215.92 L1141.42 1215.92 L1142.01 1215.92 L1142.6 1215.92 L1143.18 1215.92 L1143.77 1215.92 L1144.36 1215.92 L1144.94 1215.92 L1145.53 1215.92 L1146.12 1215.92 L1146.7 1215.92 L1147.29 1215.92 L1147.88 1215.92 L1148.46 1215.92 L1149.05 1215.92 L1149.63 1215.92 L1150.22 1215.92 L1150.81 1215.92 L1151.39 1215.92 L1151.98 1215.92 L1152.57 1215.92 L1153.15 1215.92 L1153.74 1215.92 L1154.33 1215.92 L1154.91 1215.92 L1155.5 1215.92 L1156.09 1215.92 L1156.67 1215.92 L1157.26 1215.92 L1157.84 1215.92 L1158.43 1215.92 L1159.02 1215.92 L1159.6 1215.92 L1160.19 1215.92 L1160.78 1215.92 L1161.36 1215.92 L1161.95 1215.92 L1162.54 1215.92 L1163.12 1215.92 L1163.71 1215.92 L1164.29 1215.92 L1164.88 1215.92 L1165.47 1215.92 L1166.05 1215.92 L1166.64 1215.92 L1167.23 1215.92 L1167.81 1215.92 L1168.4 1215.92 L1168.99 1215.92 L1169.57 1215.92 L1170.16 1215.92 L1170.75 1215.92 L1171.33 1215.92 L1171.92 1215.92 L1172.5 1215.92 L1173.09 1215.92 L1173.68 1215.92 L1174.26 1215.92 L1174.85 1215.92 L1175.44 1215.92 L1176.02 1215.92 L1176.61 1215.92 L1177.2 1215.92 L1177.78 1215.92 L1178.37 1215.92 L1178.96 1215.92 L1179.54 1215.92 L1180.13 1215.92 L1180.71 1215.92 L1181.3 1215.92 L1181.89 1215.92 L1182.47 1215.92 L1183.06 1215.92 L1183.65 1215.92 L1184.23 1215.92 L1184.82 1215.92 L1185.41 1215.92 L1185.99 1215.92 L1186.58 1215.92 L1187.16 1215.92 L1187.75 1215.92 L1188.34 1215.92 L1188.92 1215.92 L1189.51 1215.92 L1190.1 1215.92 L1190.68 1215.92 L1191.27 1215.92 L1191.86 1215.92 L1192.44 1215.92 L1193.03 1215.92 L1193.62 1215.92 L1194.2 1215.92 L1194.79 1215.92 L1195.37 1215.92 L1195.96 1215.92 L1196.55 1215.92 L1197.13 1215.92 L1197.72 1215.92 L1198.31 1215.92 L1198.89 1215.92 L1199.48 1215.92 L1200.07 1215.92 L1200.65 1215.92 L1201.24 1215.92 L1201.83 1215.92 L1202.41 1215.92 L1203 1215.92 L1203.58 1215.92 L1204.17 1215.92 L1204.76 1215.92 L1205.34 1215.92 L1205.93 1215.92 L1206.52 1215.92 L1207.1 1215.92 L1207.69 1215.92 L1208.28 1215.92 L1208.86 1215.92 L1209.45 1215.92 L1210.03 1215.92 L1210.62 1215.92 L1211.21 1215.92 L1211.79 1215.92 L1212.38 1215.92 L1212.97 1215.92 L1213.55 1215.92 L1214.14 1215.92 L1214.73 1215.92 L1215.31 1215.92 L1215.9 1215.92 L1216.49 1215.92 L1217.07 1215.92 L1217.66 1215.92 L1218.24 1215.92 L1218.83 1215.92 L1219.42 1215.92 L1220 1215.92 L1220.59 1215.92 L1221.18 1215.92 L1221.76 1215.92 L1222.35 1215.92 L1222.94 1215.92 L1223.52 1215.92 L1224.11 1215.92 L1224.7 1215.92 L1225.28 1215.92 L1225.87 1215.92 L1226.45 1215.92 L1227.04 1215.92 L1227.63 1215.92 L1228.21 1215.92 L1228.8 1215.92 L1229.39 1215.92 L1229.97 1215.92 L1230.56 1215.92 L1231.15 1215.92 L1231.73 1215.92 L1232.32 1215.92 L1232.91 1215.92 L1233.49 1215.92 L1234.08 1215.92 L1234.66 1215.92 L1235.25 1215.92 L1235.84 1215.92 L1236.42 1215.92 L1237.01 1215.92 L1237.6 1215.92 L1238.18 1215.92 L1238.77 1215.92 L1239.36 1215.92 L1239.94 1215.92 L1240.53 1215.92 L1241.11 1215.92 L1241.7 1215.92 L1242.29 1215.92 L1242.87 1215.92 L1243.46 1215.92 L1244.05 1215.92 L1244.63 1215.92 L1245.22 1215.92 L1245.81 1215.92 L1246.39 1215.92 L1246.98 1215.92 L1247.57 1215.92 L1248.15 1215.92 L1248.74 1215.92 L1249.32 1215.92 L1249.91 1215.92 L1250.5 1215.92 L1251.08 1215.92 L1251.67 1215.92 L1252.26 1215.92 L1252.84 1215.92 L1253.43 1215.92 L1254.02 1215.92 L1254.6 1215.92 L1255.19 1215.92 L1255.78 1215.92 L1256.36 1215.92 L1256.95 1215.92 L1257.53 1215.92 L1258.12 1215.92 L1258.71 1215.92 L1259.29 1215.92 L1259.88 1215.92 L1260.47 1215.92 L1261.05 1215.92 L1261.64 1215.92 L1262.23 1215.92 L1262.81 1215.92 L1263.4 1215.92 L1263.98 1215.92 L1264.57 1215.92 L1265.16 1215.92 L1265.74 1215.92 L1266.33 1215.92 L1266.92 1215.92 L1267.5 1215.92 L1268.09 1215.92 L1268.68 1215.92 L1269.26 1215.92 L1269.85 1215.92 L1270.44 1215.92 L1271.02 1215.92 L1271.61 1215.92 L1272.19 1215.92 L1272.78 1215.92 L1273.37 1215.92 L1273.95 1215.92 L1274.54 1215.92 L1275.13 1215.92 L1275.71 1215.92 L1276.3 1215.92 L1276.89 1215.92 L1277.47 1215.92 L1278.06 1215.92 L1278.65 1215.92 L1279.23 1215.92 L1279.82 1215.92 L1280.4 1215.92 L1280.99 1215.92 L1281.58 1215.92 L1282.16 1215.92 L1282.75 1215.92 L1283.34 1215.92 L1283.92 1215.92 L1284.51 1215.92 L1285.1 1215.92 L1285.68 1215.92 L1286.27 1215.92 L1286.86 1215.92 L1287.44 1215.92 L1288.03 1215.92 L1288.61 1215.92 L1289.2 1215.92 L1289.79 1215.92 L1290.37 1215.92 L1290.96 1215.92 L1291.55 1215.92 L1292.13 1215.92 L1292.72 1215.92 L1293.31 1215.92 L1293.89 1215.92 L1294.48 1215.92 L1295.06 1215.92 L1295.65 1215.92 L1296.24 1215.92 L1296.82 1215.92 L1297.41 1215.92 L1298 1215.92 L1298.58 1215.92 L1299.17 1215.92 L1299.76 1215.92 L1300.34 1215.92 L1300.93 1215.92 L1301.52 1215.92 L1302.1 1215.92 L1302.69 1215.92 L1303.27 1215.92 L1303.86 1215.92 L1304.45 1215.92 L1305.03 1215.92 L1305.62 1215.92 L1306.21 1215.92 L1306.79 1215.92 L1307.38 1215.92 L1307.97 1215.92 L1308.55 1215.92 L1309.14 1215.92 L1309.73 1215.92 L1310.31 1215.92 L1310.9 1215.92 L1311.48 1215.92 L1312.07 1215.92 L1312.66 1215.92 L1313.24 1215.92 L1313.83 1215.92 L1314.42 1215.92 L1315 1215.92 L1315.59 1215.92 L1316.18 1215.92 L1316.76 1215.92 L1317.35 1215.92 L1317.93 1215.92 L1318.52 1215.92 L1319.11 1215.92 L1319.69 1215.92 L1320.28 1215.92 L1320.87 1215.92 L1321.45 1215.92 L1322.04 1215.92 L1322.63 1215.92 L1323.21 1215.92 L1323.8 1215.92 L1324.39 1215.92 L1324.97 1215.92 L1325.56 1215.92 L1326.14 1215.92 L1326.73 1215.92 L1327.32 1215.92 L1327.9 1215.92 L1328.49 1215.92 L1329.08 1215.92 L1329.66 1215.92 L1330.25 1215.92 L1330.84 1215.92 L1331.42 1215.92 L1332.01 1215.92 L1332.6 1215.92 L1333.18 1215.92 L1333.77 1215.92 L1334.35 1215.92 L1334.94 1215.92 L1335.53 1215.92 L1336.11 1215.92 L1336.7 1215.92 L1337.29 1215.92 L1337.87 1215.92 L1338.46 1215.92 L1339.05 1215.92 L1339.63 1215.92 L1340.22 1215.92 L1340.8 1215.92 L1341.39 1215.92 L1341.98 1215.92 L1342.56 1215.92 L1343.15 1215.92 L1343.74 1215.92 L1344.32 1215.92 L1344.91 1215.92 L1345.5 1215.92 L1346.08 1215.92 L1346.67 1215.92 L1347.26 1215.92 L1347.84 1215.92 L1348.43 1215.92 L1349.01 1215.92 L1349.6 1215.92 L1350.19 1215.92 L1350.77 1215.92 L1351.36 1215.92 L1351.95 1215.92 L1352.53 1215.92 L1353.12 1215.92 L1353.71 1215.92 L1354.29 1215.92 L1354.88 1215.92 L1355.47 1215.92 L1356.05 1215.92 L1356.64 1215.92 L1357.22 1215.92 L1357.81 1215.92 L1358.4 1215.92 L1358.98 1215.92 L1359.57 1215.92 L1360.16 1215.92 L1360.74 1215.92 L1361.33 1215.92 L1361.92 1215.92 L1362.5 1215.92 L1363.09 1215.92 L1363.68 1215.92 L1364.26 1215.92 L1364.85 1215.92 L1365.43 1215.92 L1366.02 1215.92 L1366.61 1215.92 L1367.19 1215.92 L1367.78 1215.92 L1368.37 1215.92 L1368.95 1215.92 L1369.54 1215.92 L1370.13 1215.92 L1370.71 1215.92 L1371.3 1215.92 L1371.88 1215.92 L1372.47 1215.92 L1373.06 1215.92 L1373.64 1215.92 L1374.23 1215.92 L1374.82 1215.92 L1375.4 1215.92 L1375.99 1215.92 L1376.58 1215.92 L1377.16 1215.92 L1377.75 1215.92 L1378.34 1215.92 L1378.92 1215.92 L1379.51 1215.92 L1380.09 1215.92 L1380.68 1215.92 L1381.27 1215.92 L1381.85 1215.92 L1382.44 1215.92 L1383.03 1215.92 L1383.61 1215.92 L1384.2 1215.92 L1384.79 1215.92 L1385.37 1215.92 L1385.96 1215.92 L1386.55 1215.92 L1387.13 1215.92 L1387.72 1215.92 L1388.3 1215.92 L1388.89 1215.92 L1389.48 1215.92 L1390.06 1215.92 L1390.65 1215.92 L1391.24 1215.92 L1391.82 1215.92 L1392.41 1215.92 L1393 1215.92 L1393.58 1215.92 L1394.17 1215.92 L1394.75 1215.92 L1395.34 1215.92 L1395.93 1215.92 L1396.51 1215.92 L1397.1 1215.92 L1397.69 1215.92 L1398.27 1215.92 L1398.86 1215.92 L1399.45 1215.92 L1400.03 1215.92 L1400.62 1215.92 L1401.21 1215.92 L1401.79 1215.92 L1402.38 1215.92 L1402.96 1215.92 L1403.55 1215.92 L1404.14 1215.92 L1404.72 1215.92 L1405.31 1215.92 L1405.9 1215.92 L1406.48 1215.92 L1407.07 1215.92 L1407.66 1215.92 L1408.24 1215.92 L1408.83 1215.92 L1409.42 1215.92 L1410 1215.92 L1410.59 1215.92 L1411.17 1215.92 L1411.76 1215.92 L1412.35 1215.92 L1412.93 1215.92 L1413.52 1215.92 L1414.11 1215.92 L1414.69 1215.92 L1415.28 1215.92 L1415.87 1215.92 L1416.45 1215.92 L1417.04 1215.92 L1417.63 1215.92 L1418.21 1215.92 L1418.8 1215.92 L1419.38 1215.92 L1419.97 1215.92 L1420.56 1215.92 L1421.14 1215.92 L1421.73 1215.92 L1422.32 1215.92 L1422.9 1215.92 L1423.49 1215.92 L1424.08 1215.92 L1424.66 1215.92 L1425.25 1215.92 L1425.83 1215.92 L1426.42 1215.92 L1427.01 1215.92 L1427.59 1215.92 L1428.18 1215.92 L1428.77 1215.92 L1429.35 1215.92 L1429.94 1215.92 L1430.53 1215.92 L1431.11 1215.92 L1431.7 1215.92 L1432.29 1215.92 L1432.87 1215.92 L1433.46 1215.92 L1434.04 1215.92 L1434.63 1215.92 L1435.22 1215.92 L1435.8 1215.92 L1436.39 1215.92 L1436.98 1215.92 L1437.56 1215.92 L1438.15 1215.92 L1438.74 1215.92 L1439.32 1215.92 L1439.91 1215.92 L1440.5 1215.92 L1441.08 1215.92 L1441.67 1215.92 L1442.25 1215.92 L1442.84 1215.92 L1443.43 1215.92 L1444.01 1215.92 L1444.6 1215.92 L1445.19 1215.92 L1445.77 1215.92 L1446.36 1215.92 L1446.95 1215.92 L1447.53 1215.92 L1448.12 1215.92 L1448.7 1215.92 L1449.29 1215.92 L1449.88 1215.92 L1450.46 1215.92 L1451.05 1215.92 L1451.64 1215.92 L1452.22 1215.92 L1452.81 1215.92 L1453.4 1215.92 L1453.98 1215.92 L1454.57 1215.92 L1455.16 1215.92 L1455.74 1215.92 L1456.33 1215.92 L1456.91 1215.92 L1457.5 1215.92 L1458.09 1215.92 L1458.67 1215.92 L1459.26 1215.92 L1459.85 1215.92 L1460.43 1215.92 L1461.02 1215.92 L1461.61 1215.92 L1462.19 1215.92 L1462.78 1215.92 L1463.37 1215.92 L1463.95 1215.92 L1464.54 1215.92 L1465.12 1215.92 L1465.71 1215.92 L1466.3 1215.92 L1466.88 1215.92 L1467.47 1215.92 L1468.06 1215.92 L1468.64 1215.92 L1469.23 1215.92 L1469.82 1215.92 L1470.4 1215.92 L1470.99 1215.92 L1471.57 1215.92 L1472.16 1215.92 L1472.75 1215.92 L1473.33 1215.92 L1473.92 1215.92 L1474.51 1215.92 L1475.09 1215.92 L1475.68 1215.92 L1476.27 1215.92 L1476.85 1215.92 L1477.44 1215.92 L1478.03 1215.92 L1478.61 1215.92 L1479.2 1215.92 L1479.78 1215.92 L1480.37 1215.92 L1480.96 1215.92 L1481.54 1215.92 L1482.13 1215.92 L1482.72 1215.92 L1483.3 1215.92 L1483.89 1215.92 L1484.48 1215.92 L1485.06 1215.92 L1485.65 1215.92 L1486.24 1215.92 L1486.82 1215.92 L1487.41 1215.92 L1487.99 1215.92 L1488.58 1215.92 L1489.17 1215.92 L1489.75 1215.92 L1490.34 1215.92 L1490.93 1215.92 L1491.51 1215.92 L1492.1 1215.92 L1492.69 1215.92 L1493.27 1215.92 L1493.86 1215.92 L1494.45 1215.92 L1495.03 1215.92 L1495.62 1215.92 L1496.2 1215.92 L1496.79 1215.92 L1497.38 1215.92 L1497.96 1215.92 L1498.55 1215.92 L1499.14 1215.92 L1499.72 1215.92 L1500.31 1215.92 L1500.9 1215.92 L1501.48 1215.92 L1502.07 1215.92 L1502.65 1215.92 L1503.24 1215.92 L1503.83 1215.92 L1504.41 1215.92 L1505 1215.92 L1505.59 1215.92 L1506.17 1215.92 L1506.76 1215.92 L1507.35 1215.92 L1507.93 1215.92 L1508.52 1215.92 L1509.11 1215.92 L1509.69 1215.92 L1510.28 1215.92 L1510.86 1215.92 L1511.45 1215.92 L1512.04 1215.92 L1512.62 1215.92 L1513.21 1215.92 L1513.8 1215.92 L1514.38 1215.92 L1514.97 1215.92 L1515.56 1215.92 L1516.14 1215.92 L1516.73 1215.92 L1517.32 1215.92 L1517.9 1215.92 L1518.49 1215.92 L1519.07 1215.92 L1519.66 1215.92 L1520.25 1215.92 L1520.83 1215.92 L1521.42 1215.92 L1522.01 1215.92 L1522.59 1215.92 L1523.18 1215.92 L1523.77 1215.92 L1524.35 1215.92 L1524.94 1215.92 L1525.52 1215.92 L1526.11 1215.92 L1526.7 1215.92 L1527.28 1215.92 L1527.87 1215.92 L1528.46 1215.92 L1529.04 1215.92 L1529.63 1215.92 L1530.22 1215.92 L1530.8 1215.92 L1531.39 1215.92 L1531.98 1215.92 L1532.56 1215.92 L1533.15 1215.92 L1533.73 1215.92 L1534.32 1215.92 L1534.91 1215.92 L1535.49 1215.92 L1536.08 1215.92 L1536.67 1215.92 L1537.25 1215.92 L1537.84 1215.92 L1538.43 1215.92 L1539.01 1215.92 L1539.6 1215.92 L1540.19 1215.92 L1540.77 1215.92 L1541.36 1215.92 L1541.94 1215.92 L1542.53 1215.92 L1543.12 1215.92 L1543.7 1215.92 L1544.29 1215.92 L1544.88 1215.92 L1545.46 1215.92 L1546.05 1215.92 L1546.64 1215.92 L1547.22 1215.92 L1547.81 1215.92 L1548.4 1215.92 L1548.98 1215.92 L1549.57 1215.92 L1550.15 1215.92 L1550.74 1215.92 L1551.33 1215.92 L1551.91 1215.92 L1552.5 1215.92 L1553.09 1215.92 L1553.67 1215.92 L1554.26 1215.92 L1554.85 1215.92 L1555.43 1215.92 L1556.02 1215.92 L1556.6 1215.92 L1557.19 1215.92 L1557.78 1215.92 L1558.36 1215.92 L1558.95 1215.92 L1559.54 1215.92 L1560.12 1215.92 L1560.71 1215.92 L1561.3 1215.92 L1561.88 1215.92 L1562.47 1215.92 L1563.06 1215.92 L1563.64 1215.92 L1564.23 1215.92 L1564.81 1215.92 L1565.4 1215.92 L1565.99 1215.92 L1566.57 1215.92 L1567.16 1215.92 L1567.75 1215.92 L1568.33 1215.92 L1568.92 1215.92 L1569.51 1215.92 L1570.09 1215.92 L1570.68 1215.92 L1571.27 1215.92 L1571.85 1215.92 L1572.44 1215.92 L1573.02 1215.92 L1573.61 1215.92 L1574.2 1215.92 L1574.78 1215.92 L1575.37 1215.92 L1575.96 1215.92 L1576.54 1215.92 L1577.13 1215.92 L1577.72 1215.92 L1578.3 1215.92 L1578.89 1215.92 L1579.47 1215.92 L1580.06 1215.92 L1580.65 1215.92 L1581.23 1215.92 L1581.82 1215.92 L1582.41 1215.92 L1582.99 1215.92 L1583.58 1215.92 L1584.17 1215.92 L1584.75 1215.92 L1585.34 1215.92 L1585.93 1215.92 L1586.51 1215.92 L1587.1 1215.92 L1587.68 1215.92 L1588.27 1215.92 L1588.86 1215.92 L1589.44 1215.92 L1590.03 1215.92 L1590.62 1215.92 L1591.2 1215.92 L1591.79 1215.92 L1592.38 1215.92 L1592.96 1215.92 L1593.55 1215.92 L1594.14 1215.92 L1594.72 1215.92 L1595.31 1215.92 L1595.89 1215.92 L1596.48 1215.92 L1597.07 1215.92 L1597.65 1215.92 L1598.24 1215.92 L1598.83 1215.92 L1599.41 1215.92 L1600 1215.92 L1600.59 1215.92 L1601.17 1215.92 L1601.76 1215.92 L1602.34 1215.92 L1602.93 1215.92 L1603.52 1215.92 L1604.1 1215.92 L1604.69 1215.92 L1605.28 1215.92 L1605.86 1215.92 L1606.45 1215.92 L1607.04 1215.92 L1607.62 1215.92 L1608.21 1215.92 L1608.8 1215.92 L1609.38 1215.92 L1609.97 1215.92 L1610.55 1215.92 L1611.14 1215.92 L1611.73 1215.92 L1612.31 1215.92 L1612.9 1215.92 L1613.49 1215.92 L1614.07 1215.92 L1614.66 1215.92 L1615.25 1215.92 L1615.83 1215.92 L1616.42 1215.92 L1617.01 1215.92 L1617.59 1215.92 L1618.18 1215.92 L1618.76 1215.92 L1619.35 1215.92 L1619.94 1215.92 L1620.52 1215.92 L1621.11 1215.92 L1621.7 1215.92 L1622.28 1215.92 L1622.87 1215.92 L1623.46 1215.92 L1624.04 1215.92 L1624.63 1215.92 L1625.22 1215.92 L1625.8 1215.92 L1626.39 1215.92 L1626.97 1215.92 L1627.56 1215.92 L1628.15 1215.92 L1628.73 1215.92 L1629.32 1215.92 L1629.91 1215.92 L1630.49 1215.92 L1631.08 1215.92 L1631.67 1215.92 L1632.25 1215.92 L1632.84 1215.92 L1633.42 1215.92 L1634.01 1215.92 L1634.6 1215.92 L1635.18 1215.92 L1635.77 1215.92 L1636.36 1215.92 L1636.94 1215.92 L1637.53 1215.92 L1638.12 1215.92 L1638.7 1215.92 L1639.29 1215.92 L1639.88 1215.92 L1640.46 1215.92 L1641.05 1215.92 L1641.63 1215.92 L1642.22 1215.92 L1642.81 1215.92 L1643.39 1215.92 L1643.98 1215.92 L1644.57 1215.92 L1645.15 1215.92 L1645.74 1215.92 L1646.33 1215.92 L1646.91 1215.92 L1647.5 1215.92 L1648.09 1215.92 L1648.67 1215.92 L1649.26 1215.92 L1649.84 1215.92 L1650.43 1215.92 L1651.02 1215.92 L1651.6 1215.92 L1652.19 1215.92 L1652.78 1215.92 L1653.36 1215.92 L1653.95 1215.92 L1654.54 1215.92 L1655.12 1215.92 L1655.71 1215.92 L1656.29 1215.92 L1656.88 1215.92 L1657.47 1215.92 L1658.05 1215.92 L1658.64 1215.92 L1659.23 1215.92 L1659.81 1215.92 L1660.4 1215.92 L1660.99 1215.92 L1661.57 1215.92 L1662.16 1215.92 L1662.75 1215.92 L1663.33 1215.92 L1663.92 1215.92 L1664.5 1215.92 L1665.09 1215.92 L1665.68 1215.92 L1666.26 1215.92 L1666.85 1215.92 L1667.44 1215.92 L1668.02 1215.92 L1668.61 1215.92 L1669.2 1215.92 L1669.78 1215.92 L1670.37 1215.92 L1670.96 1215.92 L1671.54 1215.92 L1672.13 1215.92 L1672.71 1215.92 L1673.3 1215.92 L1673.89 1215.92 L1674.47 1215.92 L1675.06 1215.92 L1675.65 1215.92 L1676.23 1215.92 L1676.82 1215.92 L1677.41 1215.92 L1677.99 1215.92 L1678.58 1215.92 L1679.17 1215.92 L1679.75 1215.92 L1680.34 1215.92 L1680.92 1215.92 L1681.51 1215.92 L1682.1 1215.92 L1682.68 1215.92 L1683.27 1215.92 L1683.86 1215.92 L1684.44 1215.92 L1685.03 1215.92 L1685.62 1215.92 L1686.2 1215.92 L1686.79 1215.92 L1687.37 1215.92 L1687.96 1215.92 L1688.55 1215.92 L1689.13 1215.92 L1689.72 1215.92 L1690.31 1215.92 L1690.89 1215.92 L1691.48 1215.92 L1692.07 1215.92 L1692.65 1215.92 L1693.24 1215.92 L1693.83 1215.92 L1694.41 1215.92 L1695 1215.92 L1695.58 1215.92 L1696.17 1215.92 L1696.76 1215.92 L1697.34 1215.92 L1697.93 1215.92 L1698.52 1215.92 L1699.1 1215.92 L1699.69 1215.92 L1700.28 1215.92 L1700.86 1215.92 L1701.45 1215.92 L1702.04 1215.92 L1702.62 1215.92 L1703.21 1215.92 L1703.79 1215.92 L1704.38 1215.92 L1704.97 1215.92 L1705.55 1215.92 L1706.14 1215.92 L1706.73 1215.92 L1707.31 1215.92 L1707.9 1215.92 L1708.49 1215.92 L1709.07 1215.92 L1709.66 1215.92 L1710.24 1215.92 L1710.83 1215.92 L1711.42 1215.92 L1712 1215.92 L1712.59 1215.92 L1713.18 1215.92 L1713.76 1215.92 L1714.35 1215.92 L1714.94 1215.92 L1715.52 1215.92 L1716.11 1215.92 L1716.7 1215.92 L1717.28 1215.92 L1717.87 1215.92 L1718.45 1215.92 L1719.04 1215.92 L1719.63 1215.92 L1720.21 1215.92 L1720.8 1215.92 L1721.39 1215.92 L1721.97 1215.92 L1722.56 1215.92 L1723.15 1215.92 L1723.73 1215.92 L1724.32 1215.92 L1724.91 1215.92 L1725.49 1215.92 L1726.08 1215.92 L1726.66 1215.92 L1727.25 1215.92 L1727.84 1215.92 L1728.42 1215.92 L1729.01 1215.92 L1729.6 1215.92 L1730.18 1215.92 L1730.77 1215.92 L1731.36 1215.92 L1731.94 1215.92 L1732.53 1215.92 L1733.11 1215.92 L1733.7 1215.92 L1734.29 1215.92 L1734.87 1215.92 L1735.46 1215.92 L1736.05 1215.92 L1736.63 1215.92 L1737.22 1215.92 L1737.81 1215.92 L1738.39 1215.92 L1738.98 1215.92 L1739.57 1215.92 L1740.15 1215.92 L1740.74 1215.92 L1741.32 1215.92 L1741.91 1215.92 L1742.5 1215.92 L1743.08 1215.92 L1743.67 1215.92 L1744.26 1215.92 L1744.84 1215.92 L1745.43 1215.92 L1746.02 1215.92 L1746.6 1215.92 L1747.19 1215.92 L1747.78 1215.92 L1748.36 1215.92 L1748.95 1215.92 L1749.53 1215.92 L1750.12 1215.92 L1750.71 1215.92 L1751.29 1215.92 L1751.88 1215.92 L1752.47 1215.92 L1753.05 1215.92 L1753.64 1215.92 L1754.23 1215.92 L1754.81 1215.92 L1755.4 1215.92 L1755.99 1215.92 L1756.57 1215.92 L1757.16 1215.92 L1757.74 1215.92 L1758.33 1215.92 L1758.92 1215.92 L1759.5 1215.92 L1760.09 1215.92 L1760.68 1215.92 L1761.26 1215.92 L1761.85 1215.92 L1762.44 1215.92 L1763.02 1215.92 L1763.61 1215.92 L1764.19 1215.92 L1764.78 1215.92 L1765.37 1215.92 L1765.95 1215.92 L1766.54 1215.92 L1767.13 1215.92 L1767.71 1215.92 L1768.3 1215.92 L1768.89 1215.92 L1769.47 1215.92 L1770.06 1215.92 L1770.65 1215.92 L1771.23 1215.92 L1771.82 1215.92 L1772.4 1215.92 L1772.99 1215.92 L1773.58 1215.92 L1774.16 1215.92 L1774.75 1215.92 L1775.34 1215.92 L1775.92 1215.92 L1776.51 1215.92 L1777.1 1215.92 L1777.68 1215.92 L1778.27 1215.92 L1778.86 1215.92 L1779.44 1215.92 L1780.03 1215.92 L1780.61 1215.92 L1781.2 1215.92 L1781.79 1215.92 L1782.37 1215.92 L1782.96 1215.92 L1783.55 1215.92 L1784.13 1215.92 L1784.72 1215.92 L1785.31 1215.92 L1785.89 1215.92 L1786.48 1215.92 L1787.06 1215.92 L1787.65 1215.92 L1788.24 1215.92 L1788.82 1215.92 L1789.41 1215.92 L1790 1215.92 L1790.58 1215.92 L1791.17 1215.92 L1791.76 1215.92 L1792.34 1215.92 L1792.93 1215.92 L1793.52 1215.92 L1794.1 1215.92 L1794.69 1215.92 L1795.27 1215.92 L1795.86 1215.92 L1796.45 1215.92 L1797.03 1215.92 L1797.62 1215.92 L1798.21 1215.92 L1798.79 1215.92 L1799.38 1215.92 L1799.97 1215.92 L1800.55 1215.92 L1801.14 1215.92 L1801.73 1215.92 L1802.31 1215.92 L1802.9 1215.92 L1803.48 1215.92 L1804.07 1215.92 L1804.66 1215.92 L1805.24 1215.92 L1805.83 1215.92 L1806.42 1215.92 L1807 1215.92 L1807.59 1215.92 L1808.18 1215.92 L1808.76 1215.92 L1809.35 1215.92 L1809.94 1215.92 L1810.52 1215.92 L1811.11 1215.92 L1811.69 1215.92 L1812.28 1215.92 L1812.87 1215.92 L1813.45 1215.92 L1814.04 1215.92 L1814.63 1215.92 L1815.21 1215.92 L1815.8 1215.92 L1816.39 1215.92 L1816.97 1215.92 L1817.56 1215.92 L1818.14 1215.92 L1818.73 1215.92 L1819.32 1215.92 L1819.9 1215.92 L1820.49 1215.92 L1821.08 1215.92 L1821.66 1215.92 L1822.25 1215.92 L1822.84 1215.92 L1823.42 1215.92 L1824.01 1215.92 L1824.6 1215.92 L1825.18 1215.92 L1825.77 1215.92 L1826.35 1215.92 L1826.94 1215.92 L1827.53 1215.92 L1828.11 1215.92 L1828.7 1215.92 L1829.29 1215.92 L1829.87 1215.92 L1830.46 1215.92 L1831.05 1215.92 L1831.63 1215.92 L1832.22 1215.92 L1832.81 1215.92 L1833.39 1215.92 L1833.98 1215.92 L1834.56 1215.92 L1835.15 1215.92 L1835.74 1215.92 L1836.32 1215.92 L1836.91 1215.92 L1837.5 1215.92 L1838.08 1215.92 L1838.67 1215.92 L1839.26 1215.92 L1839.84 1215.92 L1840.43 1215.92 L1841.01 1215.92 L1841.6 1215.92 L1842.19 1215.92 L1842.77 1215.92 L1843.36 1215.92 L1843.95 1215.92 L1844.53 1215.92 L1845.12 1215.92 L1845.71 1215.92 L1846.29 1215.92 L1846.88 1215.92 L1847.47 1215.92 L1848.05 1215.92 L1848.64 1215.92 L1849.22 1215.92 L1849.81 1215.92 L1850.4 1215.92 L1850.98 1215.92 L1851.57 1215.92 L1852.16 1215.92 L1852.74 1215.92 L1853.33 1215.92 L1853.92 1215.92 L1854.5 1215.92 L1855.09 1215.92 L1855.68 1215.92 L1856.26 1215.92 L1856.85 1215.92 L1857.43 1215.92 L1858.02 1215.92 L1858.61 1215.92 L1859.19 1215.92 L1859.78 1215.92 L1860.37 1215.92 L1860.95 1215.92 L1861.54 1215.92 L1862.13 1215.92 L1862.71 1215.92 L1863.3 1215.92 L1863.88 1215.92 L1864.47 1215.92 L1865.06 1215.92 L1865.64 1215.92 L1866.23 1215.92 L1866.82 1215.92 L1867.4 1215.92 L1867.99 1215.92 L1868.58 1215.92 L1869.16 1215.92 L1869.75 1215.92 L1870.34 1215.92 L1870.92 1215.92 L1871.51 1215.92 L1872.09 1215.92 L1872.68 1215.92 L1873.27 1215.92 L1873.85 1215.92 L1874.44 1215.92 L1875.03 1215.92 L1875.61 1215.92 L1876.2 1215.92 L1876.79 1215.92 L1877.37 1215.92 L1877.96 1215.92 L1878.55 1215.92 L1879.13 1215.92 L1879.72 1215.92 L1880.3 1215.92 L1880.89 1215.92 L1881.48 1215.92 L1882.06 1215.92 L1882.65 1215.92 L1883.24 1215.92 L1883.82 1215.92 L1884.41 1215.92 L1885 1215.92 L1885.58 1215.92 L1886.17 1215.92 L1886.76 1215.92 L1887.34 1215.92 L1887.93 1215.92 L1888.51 1215.92 L1889.1 1215.92 L1889.69 1215.92 L1890.27 1215.92 L1890.86 1215.92 L1891.45 1215.92 L1892.03 1215.92 L1892.62 1215.92 L1893.21 1215.92 L1893.79 1215.92 L1894.38 1215.92 L1894.96 1215.92 L1895.55 1215.92 L1896.14 1215.92 L1896.72 1215.92 L1897.31 1215.92 L1897.9 1215.92 L1898.48 1215.92 L1899.07 1215.92 L1899.66 1215.92 L1900.24 1215.92 L1900.83 1215.92 L1901.42 1215.92 L1902 1215.92 L1902.59 1215.92 L1903.17 1215.92 L1903.76 1215.92 L1904.35 1215.92 L1904.93 1215.92 L1905.52 1215.92 L1906.11 1215.92 L1906.69 1215.92 L1907.28 1215.92 L1907.87 1215.92 L1908.45 1215.92 L1909.04 1215.92 L1909.63 1215.92 L1910.21 1215.92 L1910.8 1215.92 L1911.38 1215.92 L1911.97 1215.92 L1912.56 1215.92 L1913.14 1215.92 L1913.73 1215.92 L1914.32 1215.92 L1914.9 1215.92 L1915.49 1215.92 L1916.08 1215.92 L1916.66 1215.92 L1917.25 1215.92 L1917.83 1215.92 L1918.42 1215.92 L1919.01 1215.92 L1919.59 1215.92 L1920.18 1215.92 L1920.77 1215.92 L1921.35 1215.92 L1921.94 1215.92 L1922.53 1215.92 L1923.11 1215.92 L1923.7 1215.92 L1924.29 1215.92 L1924.87 1215.92 L1925.46 1215.92 L1926.04 1215.92 L1926.63 1215.92 L1927.22 1215.92 L1927.8 1215.92 L1928.39 1215.92 L1928.98 1215.92 L1929.56 1215.92 L1930.15 1215.92 L1930.74 1215.92 L1931.32 1215.92 L1931.91 1215.92 L1932.5 1215.92 L1933.08 1215.92 L1933.67 1215.92 L1934.25 1215.92 L1934.84 1215.92 L1935.43 1215.92 L1936.01 1215.92 L1936.6 1215.92 L1937.19 1215.92 L1937.77 1215.92 L1938.36 1215.92 L1938.95 1215.92 L1939.53 1215.92 L1940.12 1215.92 L1940.71 1215.92 L1941.29 1215.92 L1941.88 1215.92 L1942.46 1215.92 L1943.05 1215.92 L1943.64 1215.92 L1944.22 1215.92 L1944.81 1215.92 L1945.4 1215.92 L1945.98 1215.92 L1946.57 1215.92 L1947.16 1215.92 L1947.74 1215.92 L1948.33 1215.92 L1948.91 1215.92 L1949.5 1215.92 L1950.09 1215.92 L1950.67 1215.92 L1951.26 1215.92 L1951.85 1215.92 L1952.43 1215.92 L1953.02 1215.92 L1953.61 1215.92 L1954.19 1215.92 L1954.78 1215.92 L1955.37 1215.92 L1955.95 1215.92 L1956.54 1215.92 L1957.12 1215.92 L1957.71 1215.92 L1958.3 1215.92 L1958.88 1215.92 L1959.47 1215.92 L1960.06 1215.92 L1960.64 1215.92 L1961.23 1215.92 L1961.82 1215.92 L1962.4 1215.92 L1962.99 1215.92 L1963.58 1215.92 L1964.16 1215.92 L1964.75 1215.92 L1965.33 1215.92 L1965.92 1215.92 L1966.51 1215.92 L1967.09 1215.92 L1967.68 1215.92 L1968.27 1215.92 L1968.85 1215.92 L1969.44 1215.92 L1970.03 1215.92 L1970.61 1215.92 L1971.2 1215.92 L1971.78 1215.92 L1972.37 1215.92 L1972.96 1215.92 L1973.54 1215.92 L1974.13 1215.92 L1974.72 1215.92 L1975.3 1215.92 L1975.89 1215.92 L1976.48 1215.92 L1977.06 1215.92 L1977.65 1215.92 L1978.24 1215.92 L1978.82 1215.92 L1979.41 1215.92 L1979.99 1215.92 L1980.58 1215.92 L1981.17 1215.92 L1981.75 1215.92 L1982.34 1215.92 L1982.93 1215.92 L1983.51 1215.92 L1984.1 1215.92 L1984.69 1215.92 L1985.27 1215.92 L1985.86 1215.92 L1986.45 1215.92 L1987.03 1215.92 L1987.62 1215.92 L1988.2 1215.92 L1988.79 1215.92 L1989.38 1215.92 L1989.96 1215.92 L1990.55 1215.92 L1991.14 1215.92 L1991.72 1215.92 L1992.31 1215.92 L1992.9 1215.92 L1993.48 1215.92 L1994.07 1215.92 L1994.65 1215.92 L1995.24 1215.92 L1995.83 1215.92 L1996.41 1215.92 L1997 1215.92 L1997.59 1215.92 L1998.17 1215.92 L1998.76 1215.92 L1999.35 1215.92 L1999.93 1215.92 L2000.52 1215.92 L2001.11 1215.92 L2001.69 1215.92 L2002.28 1215.92 L2002.86 1215.92 L2003.45 1215.92 L2004.04 1215.92 L2004.62 1215.92 L2005.21 1215.92 L2005.8 1215.92 L2006.38 1215.92 L2006.97 1215.92 L2007.56 1215.92 L2008.14 1215.92 L2008.73 1215.92 L2009.32 1215.92 L2009.9 1215.92 L2010.49 1215.92 L2011.07 1215.92 L2011.66 1215.92 L2012.25 1215.92 L2012.83 1215.92 L2013.42 1215.92 L2014.01 1215.92 L2014.59 1215.92 L2015.18 1215.92 L2015.77 1215.92 L2016.35 1215.92 L2016.94 1215.92 L2017.53 1215.92 L2018.11 1215.92 L2018.7 1215.92 L2019.28 1215.92 L2019.87 1215.92 L2020.46 1215.92 L2021.04 1215.92 L2021.63 1215.92 L2022.22 1215.92 L2022.8 1215.92 L2023.39 1215.92 L2023.98 1215.92 L2024.56 1215.92 L2025.15 1215.92 L2025.73 1215.92 L2026.32 1215.92 L2026.91 1215.92 L2027.49 1215.92 L2028.08 1215.92 L2028.67 1215.92 L2029.25 1215.92 L2029.84 1215.92 L2030.43 1215.92 L2031.01 1215.92 L2031.6 1215.92 L2032.19 1215.92 L2032.77 1215.92 L2033.36 1215.92 L2033.94 1215.92 L2034.53 1215.92 L2035.12 1215.92 L2035.7 1215.92 L2036.29 1215.92 L2036.88 1215.92 L2037.46 1215.92 L2038.05 1215.92 L2038.64 1215.92 L2039.22 1215.92 L2039.81 1215.92 L2040.4 1215.92 L2040.98 1215.92 L2041.57 1215.92 L2042.15 1215.92 L2042.74 1215.92 L2043.33 1215.92 L2043.91 1215.92 L2044.5 1215.92 L2045.09 1215.92 L2045.67 1215.92 L2046.26 1215.92 L2046.85 1215.92 L2047.43 1215.92 L2048.02 1215.92 L2048.6 1215.92 L2049.19 1215.92 L2049.78 1215.92 L2050.36 1215.92 L2050.95 1215.92 L2051.54 1215.92 L2052.12 1215.92 L2052.71 1215.92 L2053.3 1215.92 L2053.88 1215.92 L2054.47 1215.92 L2055.06 1215.92 L2055.64 1215.92 L2056.23 1215.92 L2056.81 1215.92 L2057.4 1215.92 L2057.99 1215.92 L2058.57 1215.92 L2059.16 1215.92 L2059.75 1215.92 L2060.33 1215.92 L2060.92 1215.92 L2061.51 1215.92 L2062.09 1215.92 L2062.68 1215.92 L2063.27 1215.92 L2063.85 1215.92 L2064.44 1215.92 L2065.02 1215.92 L2065.61 1215.92 L2066.2 1215.92 L2066.78 1215.92 L2067.37 1215.92 L2067.96 1215.92 L2068.54 1215.92 L2069.13 1215.92 L2069.72 1215.92 L2070.3 1215.92 L2070.89 1215.92 L2071.48 1215.92 L2072.06 1215.92 L2072.65 1215.92 L2073.23 1215.92 L2073.82 1215.92 L2074.41 1215.92 L2074.99 1215.92 L2075.58 1215.92 L2076.17 1215.92 L2076.75 1215.92 L2077.34 1215.92 L2077.93 1215.92 L2078.51 1215.92 L2079.1 1215.92 L2079.68 1215.92 L2080.27 1215.92 L2080.86 1215.92 L2081.44 1215.92 L2082.03 1215.92 L2082.62 1215.92 L2083.2 1215.92 L2083.79 1215.92 L2084.38 1215.92 L2084.96 1215.92 L2085.55 1215.92 L2086.14 1215.92 L2086.72 1215.92 L2087.31 1215.92 L2087.89 1215.92 L2088.48 1215.92 L2089.07 1215.92 L2089.65 1215.92 L2090.24 1215.92 L2090.83 1215.92 L2091.41 1215.92 L2092 1215.92 L2092.59 1215.92 L2093.17 1215.92 L2093.76 1215.92 L2094.35 1215.92 L2094.93 1215.92 L2095.52 1215.92 L2096.1 1215.92 L2096.69 1215.92 L2097.28 1215.92 L2097.86 1215.92 L2098.45 1215.92 L2099.04 1215.92 L2099.62 1215.92 L2100.21 1215.92 L2100.8 1215.92 L2101.38 1215.92 L2101.97 1215.92 L2102.55 1215.92 L2103.14 1215.92 L2103.73 1215.92 L2104.31 1215.92 L2104.9 1215.92 L2105.49 1215.92 L2106.07 1215.92 L2106.66 1215.92 L2107.25 1215.92 L2107.83 1215.92 L2108.42 1215.92 L2109.01 1215.92 L2109.59 1215.92 L2110.18 1215.92 L2110.76 1215.92 L2111.35 1215.92 L2111.94 1215.92 L2112.52 1215.92 L2113.11 1215.92 L2113.7 1215.92 L2114.28 1215.92 L2114.87 1215.92 L2115.46 1215.92 L2116.04 1215.92 L2116.63 1215.92 L2117.22 1215.92 L2117.8 1215.92 L2118.39 1215.92 L2118.97 1215.92 L2119.56 1215.92 L2120.15 1215.92 L2120.73 1215.92 L2121.32 1215.92 L2121.91 1215.92 L2122.49 1215.92 L2123.08 1215.92 L2123.67 1215.92 L2124.25 1215.92 L2124.84 1215.92 L2125.42 1215.92 L2126.01 1215.92 L2126.6 1215.92 L2127.18 1215.92 L2127.77 1215.92 L2128.36 1215.92 L2128.94 1215.92 L2129.53 1215.92 L2130.12 1215.92 L2130.7 1215.92 L2131.29 1215.92 L2131.88 1215.92 L2132.46 1215.92 L2133.05 1215.92 L2133.63 1215.92 L2134.22 1215.92 L2134.81 1215.92 L2135.39 1215.92 L2135.98 1215.92 L2136.57 1215.92 L2137.15 1215.92 L2137.74 1215.92 L2138.33 1215.92 L2138.91 1215.92 L2139.5 1215.92 L2140.09 1215.92 L2140.67 1215.92 L2141.26 1215.92 L2141.84 1215.92 L2142.43 1215.92 L2143.02 1215.92 L2143.6 1215.92 L2144.19 1215.92 L2144.78 1215.92 L2145.36 1215.92 L2145.95 1215.92 L2146.54 1215.92 L2147.12 1215.92 L2147.71 1215.92 L2148.3 1215.92 L2148.88 1215.92 L2149.47 1215.92 L2150.05 1215.92 L2150.64 1215.92 L2151.23 1215.92 L2151.81 1215.92 L2152.4 1215.92 L2152.99 1215.92 L2153.57 1215.92 L2154.16 1215.92 L2154.75 1215.92 L2155.33 1215.92 L2155.92 1215.92 L2156.5 1215.92 L2157.09 1215.92 L2157.68 1215.92 L2158.26 1215.92 L2158.26 1215.07 L2157.68 1215.07 L2157.09 1215.07 L2156.5 1215.07 L2155.92 1215.07 L2155.33 1215.07 L2154.75 1215.07 L2154.16 1215.07 L2153.57 1215.07 L2152.99 1215.07 L2152.4 1215.07 L2151.81 1215.07 L2151.23 1215.07 L2150.64 1215.07 L2150.05 1215.07 L2149.47 1215.07 L2148.88 1215.07 L2148.3 1215.07 L2147.71 1215.07 L2147.12 1215.07 L2146.54 1215.07 L2145.95 1215.07 L2145.36 1215.07 L2144.78 1215.07 L2144.19 1215.07 L2143.6 1215.07 L2143.02 1215.07 L2142.43 1215.07 L2141.84 1215.07 L2141.26 1215.07 L2140.67 1215.07 L2140.09 1215.07 L2139.5 1215.07 L2138.91 1215.07 L2138.33 1215.07 L2137.74 1215.07 L2137.15 1215.07 L2136.57 1215.07 L2135.98 1215.07 L2135.39 1215.07 L2134.81 1215.07 L2134.22 1215.07 L2133.63 1215.07 L2133.05 1215.07 L2132.46 1215.07 L2131.88 1215.07 L2131.29 1215.07 L2130.7 1215.07 L2130.12 1215.07 L2129.53 1215.07 L2128.94 1215.07 L2128.36 1215.07 L2127.77 1215.07 L2127.18 1215.07 L2126.6 1215.07 L2126.01 1215.07 L2125.42 1215.07 L2124.84 1215.07 L2124.25 1215.07 L2123.67 1215.07 L2123.08 1215.07 L2122.49 1215.07 L2121.91 1215.07 L2121.32 1215.07 L2120.73 1215.07 L2120.15 1215.07 L2119.56 1215.07 L2118.97 1215.07 L2118.39 1215.07 L2117.8 1215.07 L2117.22 1215.07 L2116.63 1215.07 L2116.04 1215.07 L2115.46 1215.07 L2114.87 1215.07 L2114.28 1215.07 L2113.7 1215.07 L2113.11 1215.07 L2112.52 1215.07 L2111.94 1215.07 L2111.35 1215.07 L2110.76 1215.07 L2110.18 1215.07 L2109.59 1215.07 L2109.01 1215.07 L2108.42 1215.07 L2107.83 1215.07 L2107.25 1215.07 L2106.66 1215.07 L2106.07 1215.07 L2105.49 1215.07 L2104.9 1215.07 L2104.31 1215.07 L2103.73 1215.07 L2103.14 1215.07 L2102.55 1215.07 L2101.97 1215.07 L2101.38 1215.07 L2100.8 1215.07 L2100.21 1215.07 L2099.62 1215.07 L2099.04 1215.07 L2098.45 1215.07 L2097.86 1215.07 L2097.28 1215.07 L2096.69 1215.07 L2096.1 1215.07 L2095.52 1215.07 L2094.93 1215.07 L2094.35 1215.07 L2093.76 1215.07 L2093.17 1215.07 L2092.59 1215.07 L2092 1215.07 L2091.41 1215.07 L2090.83 1215.07 L2090.24 1215.07 L2089.65 1215.07 L2089.07 1215.07 L2088.48 1215.07 L2087.89 1215.07 L2087.31 1215.07 L2086.72 1215.07 L2086.14 1215.07 L2085.55 1215.07 L2084.96 1215.07 L2084.38 1215.07 L2083.79 1215.07 L2083.2 1215.07 L2082.62 1215.07 L2082.03 1215.07 L2081.44 1215.07 L2080.86 1215.07 L2080.27 1215.07 L2079.68 1215.07 L2079.1 1215.07 L2078.51 1215.07 L2077.93 1215.07 L2077.34 1215.07 L2076.75 1215.07 L2076.17 1215.07 L2075.58 1215.07 L2074.99 1215.07 L2074.41 1215.07 L2073.82 1215.07 L2073.23 1215.07 L2072.65 1215.07 L2072.06 1215.07 L2071.48 1215.07 L2070.89 1215.07 L2070.3 1215.07 L2069.72 1215.07 L2069.13 1215.07 L2068.54 1215.07 L2067.96 1215.07 L2067.37 1215.07 L2066.78 1215.07 L2066.2 1215.07 L2065.61 1215.07 L2065.02 1215.07 L2064.44 1215.07 L2063.85 1215.07 L2063.27 1215.07 L2062.68 1215.07 L2062.09 1215.07 L2061.51 1215.07 L2060.92 1215.07 L2060.33 1215.07 L2059.75 1215.07 L2059.16 1215.07 L2058.57 1215.07 L2057.99 1215.07 L2057.4 1215.07 L2056.81 1215.07 L2056.23 1215.07 L2055.64 1215.07 L2055.06 1215.07 L2054.47 1215.07 L2053.88 1215.07 L2053.3 1215.07 L2052.71 1215.07 L2052.12 1215.07 L2051.54 1215.07 L2050.95 1215.07 L2050.36 1215.07 L2049.78 1215.07 L2049.19 1215.07 L2048.6 1215.07 L2048.02 1215.07 L2047.43 1215.07 L2046.85 1215.07 L2046.26 1215.07 L2045.67 1215.07 L2045.09 1215.07 L2044.5 1215.07 L2043.91 1215.07 L2043.33 1215.07 L2042.74 1215.07 L2042.15 1215.07 L2041.57 1215.07 L2040.98 1215.07 L2040.4 1215.07 L2039.81 1215.07 L2039.22 1215.07 L2038.64 1215.07 L2038.05 1215.07 L2037.46 1215.07 L2036.88 1215.07 L2036.29 1215.07 L2035.7 1215.07 L2035.12 1215.07 L2034.53 1215.07 L2033.94 1215.07 L2033.36 1215.07 L2032.77 1215.07 L2032.19 1215.07 L2031.6 1215.07 L2031.01 1215.07 L2030.43 1215.07 L2029.84 1215.07 L2029.25 1215.07 L2028.67 1215.07 L2028.08 1215.07 L2027.49 1215.07 L2026.91 1215.07 L2026.32 1215.07 L2025.73 1215.07 L2025.15 1215.07 L2024.56 1215.07 L2023.98 1215.07 L2023.39 1215.07 L2022.8 1215.07 L2022.22 1215.07 L2021.63 1215.07 L2021.04 1215.07 L2020.46 1215.07 L2019.87 1215.07 L2019.28 1215.07 L2018.7 1215.07 L2018.11 1215.07 L2017.53 1215.07 L2016.94 1215.07 L2016.35 1215.07 L2015.77 1215.07 L2015.18 1215.07 L2014.59 1215.07 L2014.01 1215.07 L2013.42 1215.07 L2012.83 1215.07 L2012.25 1215.07 L2011.66 1215.07 L2011.07 1215.07 L2010.49 1215.07 L2009.9 1215.07 L2009.32 1215.07 L2008.73 1215.07 L2008.14 1215.07 L2007.56 1215.07 L2006.97 1215.07 L2006.38 1215.07 L2005.8 1215.07 L2005.21 1215.07 L2004.62 1215.07 L2004.04 1215.07 L2003.45 1215.07 L2002.86 1215.07 L2002.28 1215.07 L2001.69 1215.07 L2001.11 1215.07 L2000.52 1215.07 L1999.93 1215.07 L1999.35 1215.07 L1998.76 1215.07 L1998.17 1215.07 L1997.59 1215.07 L1997 1215.07 L1996.41 1215.07 L1995.83 1215.07 L1995.24 1215.07 L1994.65 1215.07 L1994.07 1215.07 L1993.48 1215.07 L1992.9 1215.07 L1992.31 1215.07 L1991.72 1215.07 L1991.14 1215.07 L1990.55 1215.07 L1989.96 1215.07 L1989.38 1215.07 L1988.79 1215.07 L1988.2 1215.07 L1987.62 1215.07 L1987.03 1215.07 L1986.45 1215.07 L1985.86 1215.07 L1985.27 1215.07 L1984.69 1215.07 L1984.1 1215.07 L1983.51 1215.07 L1982.93 1215.07 L1982.34 1215.07 L1981.75 1215.07 L1981.17 1215.07 L1980.58 1215.07 L1979.99 1215.07 L1979.41 1215.07 L1978.82 1215.07 L1978.24 1215.07 L1977.65 1215.07 L1977.06 1215.07 L1976.48 1215.07 L1975.89 1215.07 L1975.3 1215.07 L1974.72 1215.07 L1974.13 1215.07 L1973.54 1215.07 L1972.96 1215.07 L1972.37 1215.07 L1971.78 1215.07 L1971.2 1215.07 L1970.61 1215.07 L1970.03 1215.07 L1969.44 1215.07 L1968.85 1215.07 L1968.27 1215.07 L1967.68 1215.07 L1967.09 1215.07 L1966.51 1215.07 L1965.92 1215.07 L1965.33 1215.07 L1964.75 1215.07 L1964.16 1215.07 L1963.58 1215.07 L1962.99 1215.07 L1962.4 1215.07 L1961.82 1215.07 L1961.23 1215.07 L1960.64 1215.07 L1960.06 1215.07 L1959.47 1215.07 L1958.88 1215.07 L1958.3 1215.07 L1957.71 1215.07 L1957.12 1215.07 L1956.54 1215.07 L1955.95 1215.07 L1955.37 1215.07 L1954.78 1215.07 L1954.19 1215.07 L1953.61 1215.07 L1953.02 1215.07 L1952.43 1215.07 L1951.85 1215.07 L1951.26 1215.07 L1950.67 1215.07 L1950.09 1215.07 L1949.5 1215.07 L1948.91 1215.07 L1948.33 1215.07 L1947.74 1215.07 L1947.16 1215.07 L1946.57 1215.07 L1945.98 1215.07 L1945.4 1215.07 L1944.81 1215.07 L1944.22 1215.07 L1943.64 1215.07 L1943.05 1215.07 L1942.46 1215.07 L1941.88 1215.07 L1941.29 1215.07 L1940.71 1215.07 L1940.12 1215.07 L1939.53 1215.07 L1938.95 1215.07 L1938.36 1215.07 L1937.77 1215.07 L1937.19 1215.07 L1936.6 1215.07 L1936.01 1215.07 L1935.43 1215.07 L1934.84 1215.07 L1934.25 1215.07 L1933.67 1215.07 L1933.08 1215.07 L1932.5 1215.07 L1931.91 1215.07 L1931.32 1215.07 L1930.74 1215.07 L1930.15 1215.07 L1929.56 1215.07 L1928.98 1215.07 L1928.39 1215.07 L1927.8 1215.07 L1927.22 1215.07 L1926.63 1215.07 L1926.04 1215.07 L1925.46 1215.07 L1924.87 1215.07 L1924.29 1215.07 L1923.7 1215.07 L1923.11 1215.07 L1922.53 1215.07 L1921.94 1215.07 L1921.35 1215.07 L1920.77 1215.07 L1920.18 1215.07 L1919.59 1215.07 L1919.01 1215.07 L1918.42 1215.07 L1917.83 1215.07 L1917.25 1215.07 L1916.66 1215.07 L1916.08 1215.07 L1915.49 1215.07 L1914.9 1215.07 L1914.32 1215.07 L1913.73 1215.07 L1913.14 1215.07 L1912.56 1215.07 L1911.97 1215.07 L1911.38 1215.07 L1910.8 1215.07 L1910.21 1215.07 L1909.63 1215.07 L1909.04 1215.07 L1908.45 1215.07 L1907.87 1215.07 L1907.28 1215.07 L1906.69 1215.07 L1906.11 1215.07 L1905.52 1215.07 L1904.93 1215.07 L1904.35 1215.07 L1903.76 1215.07 L1903.17 1215.07 L1902.59 1215.07 L1902 1215.07 L1901.42 1215.07 L1900.83 1215.07 L1900.24 1215.07 L1899.66 1215.07 L1899.07 1215.07 L1898.48 1215.07 L1897.9 1215.07 L1897.31 1215.07 L1896.72 1215.07 L1896.14 1215.07 L1895.55 1215.07 L1894.96 1215.07 L1894.38 1215.07 L1893.79 1215.07 L1893.21 1215.07 L1892.62 1215.07 L1892.03 1215.07 L1891.45 1215.07 L1890.86 1215.07 L1890.27 1215.07 L1889.69 1215.07 L1889.1 1215.07 L1888.51 1215.07 L1887.93 1215.07 L1887.34 1215.07 L1886.76 1215.07 L1886.17 1215.07 L1885.58 1215.07 L1885 1215.07 L1884.41 1215.07 L1883.82 1215.07 L1883.24 1215.07 L1882.65 1215.07 L1882.06 1215.07 L1881.48 1215.07 L1880.89 1215.07 L1880.3 1215.07 L1879.72 1215.07 L1879.13 1215.07 L1878.55 1215.07 L1877.96 1215.07 L1877.37 1215.07 L1876.79 1215.07 L1876.2 1215.07 L1875.61 1215.07 L1875.03 1215.07 L1874.44 1215.07 L1873.85 1215.07 L1873.27 1215.07 L1872.68 1215.07 L1872.09 1215.07 L1871.51 1215.07 L1870.92 1215.07 L1870.34 1215.07 L1869.75 1215.07 L1869.16 1215.07 L1868.58 1215.07 L1867.99 1215.07 L1867.4 1215.07 L1866.82 1215.07 L1866.23 1215.07 L1865.64 1215.07 L1865.06 1215.07 L1864.47 1215.07 L1863.88 1215.07 L1863.3 1215.07 L1862.71 1215.07 L1862.13 1215.07 L1861.54 1215.07 L1860.95 1215.07 L1860.37 1215.07 L1859.78 1215.07 L1859.19 1215.07 L1858.61 1215.07 L1858.02 1215.07 L1857.43 1215.07 L1856.85 1215.07 L1856.26 1215.07 L1855.68 1215.07 L1855.09 1215.07 L1854.5 1215.07 L1853.92 1215.07 L1853.33 1215.07 L1852.74 1215.07 L1852.16 1215.07 L1851.57 1215.07 L1850.98 1215.07 L1850.4 1215.07 L1849.81 1215.07 L1849.22 1215.07 L1848.64 1215.07 L1848.05 1215.07 L1847.47 1215.07 L1846.88 1215.07 L1846.29 1215.07 L1845.71 1215.07 L1845.12 1215.07 L1844.53 1215.07 L1843.95 1215.07 L1843.36 1215.07 L1842.77 1215.07 L1842.19 1215.07 L1841.6 1215.07 L1841.01 1215.07 L1840.43 1215.07 L1839.84 1215.07 L1839.26 1215.07 L1838.67 1215.07 L1838.08 1215.07 L1837.5 1215.07 L1836.91 1215.07 L1836.32 1215.07 L1835.74 1215.07 L1835.15 1215.07 L1834.56 1215.07 L1833.98 1215.07 L1833.39 1215.07 L1832.81 1215.07 L1832.22 1215.07 L1831.63 1215.07 L1831.05 1215.07 L1830.46 1215.07 L1829.87 1215.07 L1829.29 1215.07 L1828.7 1215.07 L1828.11 1215.07 L1827.53 1215.07 L1826.94 1215.07 L1826.35 1215.07 L1825.77 1215.07 L1825.18 1215.07 L1824.6 1215.07 L1824.01 1215.07 L1823.42 1215.07 L1822.84 1215.07 L1822.25 1215.07 L1821.66 1215.07 L1821.08 1215.07 L1820.49 1215.07 L1819.9 1215.07 L1819.32 1215.07 L1818.73 1215.07 L1818.14 1215.07 L1817.56 1215.07 L1816.97 1215.07 L1816.39 1215.07 L1815.8 1215.07 L1815.21 1215.07 L1814.63 1215.07 L1814.04 1215.07 L1813.45 1215.07 L1812.87 1215.07 L1812.28 1215.07 L1811.69 1215.07 L1811.11 1215.07 L1810.52 1215.07 L1809.94 1215.07 L1809.35 1215.07 L1808.76 1215.07 L1808.18 1215.07 L1807.59 1215.07 L1807 1215.07 L1806.42 1215.07 L1805.83 1215.07 L1805.24 1215.07 L1804.66 1215.07 L1804.07 1215.07 L1803.48 1215.07 L1802.9 1215.07 L1802.31 1215.07 L1801.73 1215.07 L1801.14 1215.07 L1800.55 1215.07 L1799.97 1215.07 L1799.38 1215.07 L1798.79 1215.07 L1798.21 1215.07 L1797.62 1215.07 L1797.03 1215.07 L1796.45 1215.07 L1795.86 1215.07 L1795.27 1215.07 L1794.69 1215.07 L1794.1 1215.07 L1793.52 1215.07 L1792.93 1215.07 L1792.34 1215.07 L1791.76 1215.07 L1791.17 1215.07 L1790.58 1215.07 L1790 1215.07 L1789.41 1215.07 L1788.82 1215.07 L1788.24 1215.07 L1787.65 1215.07 L1787.06 1215.07 L1786.48 1215.07 L1785.89 1215.07 L1785.31 1215.07 L1784.72 1215.07 L1784.13 1215.07 L1783.55 1215.07 L1782.96 1215.07 L1782.37 1215.07 L1781.79 1215.07 L1781.2 1215.07 L1780.61 1215.07 L1780.03 1215.07 L1779.44 1215.07 L1778.86 1215.07 L1778.27 1215.07 L1777.68 1215.07 L1777.1 1215.07 L1776.51 1215.07 L1775.92 1215.07 L1775.34 1215.07 L1774.75 1215.07 L1774.16 1215.07 L1773.58 1215.07 L1772.99 1215.07 L1772.4 1215.07 L1771.82 1215.07 L1771.23 1215.07 L1770.65 1215.07 L1770.06 1215.07 L1769.47 1215.07 L1768.89 1215.07 L1768.3 1215.07 L1767.71 1215.07 L1767.13 1215.07 L1766.54 1215.07 L1765.95 1215.07 L1765.37 1215.07 L1764.78 1215.07 L1764.19 1215.07 L1763.61 1215.07 L1763.02 1215.07 L1762.44 1215.07 L1761.85 1215.07 L1761.26 1215.07 L1760.68 1215.07 L1760.09 1215.07 L1759.5 1215.07 L1758.92 1215.07 L1758.33 1215.07 L1757.74 1215.07 L1757.16 1215.07 L1756.57 1215.07 L1755.99 1215.07 L1755.4 1215.07 L1754.81 1215.07 L1754.23 1215.07 L1753.64 1215.07 L1753.05 1215.07 L1752.47 1215.07 L1751.88 1215.07 L1751.29 1215.07 L1750.71 1215.07 L1750.12 1215.07 L1749.53 1215.07 L1748.95 1215.07 L1748.36 1215.07 L1747.78 1215.07 L1747.19 1215.07 L1746.6 1215.07 L1746.02 1215.07 L1745.43 1215.07 L1744.84 1215.07 L1744.26 1215.07 L1743.67 1215.07 L1743.08 1215.07 L1742.5 1215.07 L1741.91 1215.07 L1741.32 1215.07 L1740.74 1215.07 L1740.15 1215.07 L1739.57 1215.07 L1738.98 1215.07 L1738.39 1215.07 L1737.81 1215.07 L1737.22 1215.07 L1736.63 1215.07 L1736.05 1215.07 L1735.46 1215.07 L1734.87 1215.07 L1734.29 1215.07 L1733.7 1215.07 L1733.11 1215.07 L1732.53 1215.07 L1731.94 1215.07 L1731.36 1215.07 L1730.77 1215.07 L1730.18 1215.07 L1729.6 1215.07 L1729.01 1215.07 L1728.42 1215.07 L1727.84 1215.07 L1727.25 1215.07 L1726.66 1215.07 L1726.08 1215.07 L1725.49 1215.07 L1724.91 1215.07 L1724.32 1215.07 L1723.73 1215.07 L1723.15 1215.07 L1722.56 1215.07 L1721.97 1215.07 L1721.39 1215.07 L1720.8 1215.07 L1720.21 1215.07 L1719.63 1215.07 L1719.04 1215.07 L1718.45 1215.07 L1717.87 1215.07 L1717.28 1215.07 L1716.7 1215.07 L1716.11 1215.07 L1715.52 1215.07 L1714.94 1215.07 L1714.35 1215.07 L1713.76 1215.07 L1713.18 1215.07 L1712.59 1215.07 L1712 1215.07 L1711.42 1215.07 L1710.83 1215.07 L1710.24 1215.07 L1709.66 1215.07 L1709.07 1215.07 L1708.49 1215.07 L1707.9 1215.07 L1707.31 1215.07 L1706.73 1215.07 L1706.14 1215.07 L1705.55 1215.07 L1704.97 1215.07 L1704.38 1215.07 L1703.79 1215.07 L1703.21 1215.07 L1702.62 1215.07 L1702.04 1215.07 L1701.45 1215.07 L1700.86 1215.07 L1700.28 1215.07 L1699.69 1215.07 L1699.1 1215.07 L1698.52 1215.07 L1697.93 1215.07 L1697.34 1215.07 L1696.76 1215.07 L1696.17 1215.07 L1695.58 1215.07 L1695 1215.07 L1694.41 1215.07 L1693.83 1215.07 L1693.24 1215.07 L1692.65 1215.07 L1692.07 1215.07 L1691.48 1215.07 L1690.89 1215.07 L1690.31 1215.07 L1689.72 1215.07 L1689.13 1215.07 L1688.55 1215.07 L1687.96 1215.07 L1687.37 1215.07 L1686.79 1215.07 L1686.2 1215.07 L1685.62 1215.07 L1685.03 1215.07 L1684.44 1215.07 L1683.86 1215.07 L1683.27 1215.07 L1682.68 1215.07 L1682.1 1215.07 L1681.51 1215.07 L1680.92 1215.07 L1680.34 1215.07 L1679.75 1215.07 L1679.17 1215.07 L1678.58 1215.07 L1677.99 1215.07 L1677.41 1215.07 L1676.82 1215.07 L1676.23 1215.07 L1675.65 1215.07 L1675.06 1215.07 L1674.47 1215.07 L1673.89 1215.07 L1673.3 1215.07 L1672.71 1215.07 L1672.13 1215.07 L1671.54 1215.07 L1670.96 1215.07 L1670.37 1215.07 L1669.78 1215.07 L1669.2 1215.07 L1668.61 1215.07 L1668.02 1215.07 L1667.44 1215.07 L1666.85 1215.07 L1666.26 1215.07 L1665.68 1215.07 L1665.09 1215.07 L1664.5 1215.07 L1663.92 1215.07 L1663.33 1215.07 L1662.75 1215.07 L1662.16 1215.07 L1661.57 1215.07 L1660.99 1215.07 L1660.4 1215.07 L1659.81 1215.07 L1659.23 1215.07 L1658.64 1215.07 L1658.05 1215.07 L1657.47 1215.07 L1656.88 1215.07 L1656.29 1215.07 L1655.71 1215.07 L1655.12 1215.07 L1654.54 1215.07 L1653.95 1215.07 L1653.36 1215.07 L1652.78 1215.07 L1652.19 1215.07 L1651.6 1215.07 L1651.02 1215.07 L1650.43 1215.07 L1649.84 1215.07 L1649.26 1215.07 L1648.67 1215.07 L1648.09 1215.07 L1647.5 1215.07 L1646.91 1215.07 L1646.33 1215.07 L1645.74 1215.07 L1645.15 1215.07 L1644.57 1215.07 L1643.98 1215.07 L1643.39 1215.07 L1642.81 1215.07 L1642.22 1215.07 L1641.63 1215.07 L1641.05 1215.07 L1640.46 1215.07 L1639.88 1215.07 L1639.29 1215.07 L1638.7 1215.07 L1638.12 1215.07 L1637.53 1215.07 L1636.94 1215.07 L1636.36 1215.07 L1635.77 1215.07 L1635.18 1215.07 L1634.6 1215.07 L1634.01 1215.07 L1633.42 1215.07 L1632.84 1215.07 L1632.25 1215.07 L1631.67 1215.07 L1631.08 1215.07 L1630.49 1215.07 L1629.91 1215.07 L1629.32 1215.07 L1628.73 1215.07 L1628.15 1215.07 L1627.56 1215.07 L1626.97 1215.07 L1626.39 1215.07 L1625.8 1215.07 L1625.22 1215.07 L1624.63 1215.07 L1624.04 1215.07 L1623.46 1215.07 L1622.87 1215.07 L1622.28 1215.07 L1621.7 1215.07 L1621.11 1215.07 L1620.52 1215.07 L1619.94 1215.07 L1619.35 1215.07 L1618.76 1215.07 L1618.18 1215.07 L1617.59 1215.07 L1617.01 1215.07 L1616.42 1215.07 L1615.83 1215.07 L1615.25 1215.07 L1614.66 1215.07 L1614.07 1215.07 L1613.49 1215.07 L1612.9 1215.07 L1612.31 1215.07 L1611.73 1215.07 L1611.14 1215.07 L1610.55 1215.07 L1609.97 1215.07 L1609.38 1215.07 L1608.8 1215.07 L1608.21 1215.07 L1607.62 1215.07 L1607.04 1215.07 L1606.45 1215.07 L1605.86 1215.07 L1605.28 1215.07 L1604.69 1215.07 L1604.1 1215.07 L1603.52 1215.07 L1602.93 1215.07 L1602.34 1215.07 L1601.76 1215.07 L1601.17 1215.07 L1600.59 1215.07 L1600 1215.07 L1599.41 1215.07 L1598.83 1215.07 L1598.24 1215.07 L1597.65 1215.07 L1597.07 1215.07 L1596.48 1215.07 L1595.89 1215.07 L1595.31 1215.07 L1594.72 1215.07 L1594.14 1215.07 L1593.55 1215.07 L1592.96 1215.07 L1592.38 1215.07 L1591.79 1215.07 L1591.2 1215.07 L1590.62 1215.07 L1590.03 1215.07 L1589.44 1215.07 L1588.86 1215.07 L1588.27 1215.07 L1587.68 1215.07 L1587.1 1215.07 L1586.51 1215.07 L1585.93 1215.07 L1585.34 1215.07 L1584.75 1215.07 L1584.17 1215.07 L1583.58 1215.07 L1582.99 1215.07 L1582.41 1215.07 L1581.82 1215.07 L1581.23 1215.07 L1580.65 1215.07 L1580.06 1215.07 L1579.47 1215.07 L1578.89 1215.07 L1578.3 1215.07 L1577.72 1215.07 L1577.13 1215.07 L1576.54 1215.07 L1575.96 1215.07 L1575.37 1215.07 L1574.78 1215.07 L1574.2 1215.07 L1573.61 1215.07 L1573.02 1215.07 L1572.44 1215.07 L1571.85 1215.07 L1571.27 1215.07 L1570.68 1215.07 L1570.09 1215.07 L1569.51 1215.07 L1568.92 1215.07 L1568.33 1215.07 L1567.75 1215.07 L1567.16 1215.07 L1566.57 1215.07 L1565.99 1215.07 L1565.4 1215.07 L1564.81 1215.07 L1564.23 1215.07 L1563.64 1215.07 L1563.06 1215.07 L1562.47 1215.07 L1561.88 1215.07 L1561.3 1215.07 L1560.71 1215.07 L1560.12 1215.07 L1559.54 1215.07 L1558.95 1215.07 L1558.36 1215.07 L1557.78 1215.07 L1557.19 1215.07 L1556.6 1215.07 L1556.02 1215.07 L1555.43 1215.07 L1554.85 1215.07 L1554.26 1215.07 L1553.67 1215.07 L1553.09 1215.07 L1552.5 1215.07 L1551.91 1215.07 L1551.33 1215.07 L1550.74 1215.07 L1550.15 1215.07 L1549.57 1215.07 L1548.98 1215.07 L1548.4 1215.07 L1547.81 1215.07 L1547.22 1215.07 L1546.64 1215.07 L1546.05 1215.07 L1545.46 1215.07 L1544.88 1215.07 L1544.29 1215.07 L1543.7 1215.07 L1543.12 1215.07 L1542.53 1215.07 L1541.94 1215.07 L1541.36 1215.07 L1540.77 1215.07 L1540.19 1215.07 L1539.6 1215.07 L1539.01 1215.07 L1538.43 1215.07 L1537.84 1215.07 L1537.25 1215.07 L1536.67 1215.07 L1536.08 1215.07 L1535.49 1215.07 L1534.91 1215.07 L1534.32 1215.07 L1533.73 1215.07 L1533.15 1215.07 L1532.56 1215.07 L1531.98 1215.07 L1531.39 1215.07 L1530.8 1215.07 L1530.22 1215.07 L1529.63 1215.07 L1529.04 1215.07 L1528.46 1215.07 L1527.87 1215.07 L1527.28 1215.07 L1526.7 1215.07 L1526.11 1215.07 L1525.52 1215.07 L1524.94 1215.07 L1524.35 1215.07 L1523.77 1215.07 L1523.18 1215.07 L1522.59 1215.07 L1522.01 1215.07 L1521.42 1215.07 L1520.83 1215.07 L1520.25 1215.07 L1519.66 1215.07 L1519.07 1215.07 L1518.49 1215.07 L1517.9 1215.07 L1517.32 1215.07 L1516.73 1215.07 L1516.14 1215.07 L1515.56 1215.07 L1514.97 1215.07 L1514.38 1215.07 L1513.8 1215.07 L1513.21 1215.07 L1512.62 1215.07 L1512.04 1215.07 L1511.45 1215.07 L1510.86 1215.07 L1510.28 1215.07 L1509.69 1215.07 L1509.11 1215.07 L1508.52 1215.07 L1507.93 1215.07 L1507.35 1215.07 L1506.76 1215.07 L1506.17 1215.07 L1505.59 1215.07 L1505 1215.07 L1504.41 1215.07 L1503.83 1215.07 L1503.24 1215.07 L1502.65 1215.07 L1502.07 1215.07 L1501.48 1215.07 L1500.9 1215.07 L1500.31 1215.07 L1499.72 1215.07 L1499.14 1215.07 L1498.55 1215.07 L1497.96 1215.07 L1497.38 1215.07 L1496.79 1215.07 L1496.2 1215.07 L1495.62 1215.07 L1495.03 1215.07 L1494.45 1215.07 L1493.86 1215.07 L1493.27 1215.07 L1492.69 1215.07 L1492.1 1215.07 L1491.51 1215.07 L1490.93 1215.07 L1490.34 1215.07 L1489.75 1215.07 L1489.17 1215.07 L1488.58 1215.07 L1487.99 1215.07 L1487.41 1215.07 L1486.82 1215.07 L1486.24 1215.07 L1485.65 1215.07 L1485.06 1215.07 L1484.48 1215.07 L1483.89 1215.07 L1483.3 1215.07 L1482.72 1215.07 L1482.13 1215.07 L1481.54 1215.07 L1480.96 1215.07 L1480.37 1215.07 L1479.78 1215.07 L1479.2 1215.07 L1478.61 1215.07 L1478.03 1215.07 L1477.44 1215.07 L1476.85 1215.07 L1476.27 1215.07 L1475.68 1215.07 L1475.09 1215.07 L1474.51 1215.07 L1473.92 1215.07 L1473.33 1215.07 L1472.75 1215.07 L1472.16 1215.07 L1471.57 1215.07 L1470.99 1215.07 L1470.4 1215.07 L1469.82 1215.07 L1469.23 1215.07 L1468.64 1215.07 L1468.06 1215.07 L1467.47 1215.07 L1466.88 1215.07 L1466.3 1215.07 L1465.71 1215.07 L1465.12 1215.07 L1464.54 1215.07 L1463.95 1215.07 L1463.37 1215.07 L1462.78 1215.07 L1462.19 1215.07 L1461.61 1215.07 L1461.02 1215.07 L1460.43 1215.07 L1459.85 1215.07 L1459.26 1215.07 L1458.67 1215.07 L1458.09 1215.07 L1457.5 1215.07 L1456.91 1215.07 L1456.33 1215.07 L1455.74 1215.07 L1455.16 1215.07 L1454.57 1215.07 L1453.98 1215.07 L1453.4 1215.07 L1452.81 1215.07 L1452.22 1215.07 L1451.64 1215.07 L1451.05 1215.07 L1450.46 1215.07 L1449.88 1215.07 L1449.29 1215.07 L1448.7 1215.07 L1448.12 1215.07 L1447.53 1215.07 L1446.95 1215.07 L1446.36 1215.07 L1445.77 1215.07 L1445.19 1215.07 L1444.6 1215.07 L1444.01 1215.07 L1443.43 1215.07 L1442.84 1215.07 L1442.25 1215.07 L1441.67 1215.07 L1441.08 1215.07 L1440.5 1215.07 L1439.91 1215.07 L1439.32 1215.07 L1438.74 1215.07 L1438.15 1215.07 L1437.56 1215.07 L1436.98 1215.07 L1436.39 1215.07 L1435.8 1215.07 L1435.22 1215.07 L1434.63 1215.07 L1434.04 1215.07 L1433.46 1215.07 L1432.87 1215.07 L1432.29 1215.07 L1431.7 1215.07 L1431.11 1215.07 L1430.53 1215.07 L1429.94 1215.07 L1429.35 1215.07 L1428.77 1215.07 L1428.18 1215.07 L1427.59 1215.07 L1427.01 1215.07 L1426.42 1215.07 L1425.83 1215.07 L1425.25 1215.07 L1424.66 1215.07 L1424.08 1215.07 L1423.49 1215.07 L1422.9 1215.07 L1422.32 1215.07 L1421.73 1215.07 L1421.14 1215.07 L1420.56 1215.07 L1419.97 1215.07 L1419.38 1215.07 L1418.8 1215.07 L1418.21 1215.07 L1417.63 1215.07 L1417.04 1215.07 L1416.45 1215.07 L1415.87 1215.07 L1415.28 1215.07 L1414.69 1215.07 L1414.11 1215.07 L1413.52 1215.07 L1412.93 1215.07 L1412.35 1215.07 L1411.76 1215.07 L1411.17 1215.07 L1410.59 1215.07 L1410 1215.07 L1409.42 1215.07 L1408.83 1215.07 L1408.24 1215.07 L1407.66 1215.07 L1407.07 1215.07 L1406.48 1215.07 L1405.9 1215.07 L1405.31 1215.07 L1404.72 1215.07 L1404.14 1215.07 L1403.55 1215.07 L1402.96 1215.07 L1402.38 1215.07 L1401.79 1215.07 L1401.21 1215.07 L1400.62 1215.07 L1400.03 1215.07 L1399.45 1215.07 L1398.86 1215.07 L1398.27 1215.07 L1397.69 1215.07 L1397.1 1215.07 L1396.51 1215.07 L1395.93 1215.07 L1395.34 1215.07 L1394.75 1215.07 L1394.17 1215.07 L1393.58 1215.07 L1393 1215.07 L1392.41 1215.07 L1391.82 1215.07 L1391.24 1215.07 L1390.65 1215.07 L1390.06 1215.07 L1389.48 1215.07 L1388.89 1215.07 L1388.3 1215.07 L1387.72 1215.07 L1387.13 1215.07 L1386.55 1215.07 L1385.96 1215.07 L1385.37 1215.07 L1384.79 1215.07 L1384.2 1215.07 L1383.61 1215.07 L1383.03 1215.07 L1382.44 1215.07 L1381.85 1215.07 L1381.27 1215.07 L1380.68 1215.07 L1380.09 1215.07 L1379.51 1215.07 L1378.92 1215.07 L1378.34 1215.07 L1377.75 1215.07 L1377.16 1215.07 L1376.58 1215.07 L1375.99 1215.07 L1375.4 1215.07 L1374.82 1215.07 L1374.23 1215.07 L1373.64 1215.07 L1373.06 1215.07 L1372.47 1215.07 L1371.88 1215.07 L1371.3 1215.07 L1370.71 1215.07 L1370.13 1215.07 L1369.54 1215.07 L1368.95 1215.07 L1368.37 1215.07 L1367.78 1215.07 L1367.19 1215.07 L1366.61 1215.07 L1366.02 1215.07 L1365.43 1215.07 L1364.85 1215.07 L1364.26 1215.07 L1363.68 1215.07 L1363.09 1215.07 L1362.5 1215.07 L1361.92 1215.07 L1361.33 1215.07 L1360.74 1215.07 L1360.16 1215.07 L1359.57 1215.07 L1358.98 1215.07 L1358.4 1215.07 L1357.81 1215.07 L1357.22 1215.07 L1356.64 1215.07 L1356.05 1215.07 L1355.47 1215.07 L1354.88 1215.07 L1354.29 1215.07 L1353.71 1215.07 L1353.12 1215.07 L1352.53 1215.07 L1351.95 1215.07 L1351.36 1215.07 L1350.77 1215.07 L1350.19 1215.07 L1349.6 1215.07 L1349.01 1215.07 L1348.43 1215.07 L1347.84 1215.07 L1347.26 1215.07 L1346.67 1215.07 L1346.08 1215.07 L1345.5 1215.07 L1344.91 1215.07 L1344.32 1215.07 L1343.74 1215.07 L1343.15 1215.07 L1342.56 1215.07 L1341.98 1215.07 L1341.39 1215.07 L1340.8 1215.07 L1340.22 1215.07 L1339.63 1215.07 L1339.05 1215.07 L1338.46 1215.07 L1337.87 1215.07 L1337.29 1215.07 L1336.7 1215.07 L1336.11 1215.07 L1335.53 1215.07 L1334.94 1215.07 L1334.35 1215.07 L1333.77 1215.07 L1333.18 1215.07 L1332.6 1215.07 L1332.01 1215.07 L1331.42 1215.07 L1330.84 1215.07 L1330.25 1215.07 L1329.66 1215.07 L1329.08 1215.07 L1328.49 1215.07 L1327.9 1215.07 L1327.32 1215.07 L1326.73 1215.07 L1326.14 1215.07 L1325.56 1215.07 L1324.97 1215.07 L1324.39 1215.07 L1323.8 1215.07 L1323.21 1215.07 L1322.63 1215.07 L1322.04 1215.07 L1321.45 1215.07 L1320.87 1215.07 L1320.28 1215.07 L1319.69 1215.07 L1319.11 1215.07 L1318.52 1215.07 L1317.93 1215.07 L1317.35 1215.07 L1316.76 1215.07 L1316.18 1215.07 L1315.59 1215.07 L1315 1215.07 L1314.42 1215.07 L1313.83 1215.07 L1313.24 1215.07 L1312.66 1215.07 L1312.07 1215.07 L1311.48 1215.07 L1310.9 1215.07 L1310.31 1215.07 L1309.73 1215.07 L1309.14 1215.07 L1308.55 1215.07 L1307.97 1215.07 L1307.38 1215.07 L1306.79 1215.07 L1306.21 1215.07 L1305.62 1215.07 L1305.03 1215.07 L1304.45 1215.07 L1303.86 1215.07 L1303.27 1215.07 L1302.69 1215.07 L1302.1 1215.07 L1301.52 1215.07 L1300.93 1215.07 L1300.34 1215.07 L1299.76 1215.07 L1299.17 1215.07 L1298.58 1215.07 L1298 1215.07 L1297.41 1215.07 L1296.82 1215.07 L1296.24 1215.07 L1295.65 1215.07 L1295.06 1215.07 L1294.48 1215.07 L1293.89 1215.07 L1293.31 1215.07 L1292.72 1215.07 L1292.13 1215.07 L1291.55 1215.07 L1290.96 1215.07 L1290.37 1215.07 L1289.79 1215.07 L1289.2 1215.07 L1288.61 1215.07 L1288.03 1215.07 L1287.44 1215.07 L1286.86 1215.07 L1286.27 1215.07 L1285.68 1215.07 L1285.1 1215.07 L1284.51 1215.07 L1283.92 1215.07 L1283.34 1215.07 L1282.75 1215.07 L1282.16 1215.07 L1281.58 1215.07 L1280.99 1215.07 L1280.4 1215.07 L1279.82 1215.07 L1279.23 1215.07 L1278.65 1215.07 L1278.06 1215.07 L1277.47 1215.07 L1276.89 1215.07 L1276.3 1215.07 L1275.71 1215.07 L1275.13 1215.07 L1274.54 1215.07 L1273.95 1215.07 L1273.37 1215.07 L1272.78 1215.07 L1272.19 1215.07 L1271.61 1215.07 L1271.02 1215.07 L1270.44 1215.07 L1269.85 1215.07 L1269.26 1215.07 L1268.68 1215.07 L1268.09 1215.07 L1267.5 1215.07 L1266.92 1215.07 L1266.33 1215.07 L1265.74 1215.07 L1265.16 1215.07 L1264.57 1215.07 L1263.98 1215.07 L1263.4 1215.07 L1262.81 1215.07 L1262.23 1215.07 L1261.64 1215.07 L1261.05 1215.07 L1260.47 1215.07 L1259.88 1215.07 L1259.29 1215.07 L1258.71 1215.07 L1258.12 1215.07 L1257.53 1215.07 L1256.95 1215.07 L1256.36 1215.07 L1255.78 1215.07 L1255.19 1215.07 L1254.6 1215.07 L1254.02 1215.07 L1253.43 1215.07 L1252.84 1215.07 L1252.26 1215.07 L1251.67 1215.07 L1251.08 1215.07 L1250.5 1215.07 L1249.91 1215.07 L1249.32 1215.07 L1248.74 1215.07 L1248.15 1215.07 L1247.57 1215.07 L1246.98 1215.07 L1246.39 1215.07 L1245.81 1215.07 L1245.22 1215.07 L1244.63 1215.07 L1244.05 1215.07 L1243.46 1215.07 L1242.87 1215.07 L1242.29 1215.07 L1241.7 1215.07 L1241.11 1215.07 L1240.53 1215.07 L1239.94 1215.07 L1239.36 1215.07 L1238.77 1215.07 L1238.18 1215.07 L1237.6 1215.07 L1237.01 1215.07 L1236.42 1215.07 L1235.84 1215.07 L1235.25 1215.07 L1234.66 1215.07 L1234.08 1215.07 L1233.49 1215.07 L1232.91 1215.07 L1232.32 1215.07 L1231.73 1215.07 L1231.15 1215.07 L1230.56 1215.07 L1229.97 1215.07 L1229.39 1215.07 L1228.8 1215.07 L1228.21 1215.07 L1227.63 1215.07 L1227.04 1215.07 L1226.45 1215.07 L1225.87 1215.07 L1225.28 1215.07 L1224.7 1215.07 L1224.11 1215.07 L1223.52 1215.07 L1222.94 1215.07 L1222.35 1215.07 L1221.76 1215.07 L1221.18 1215.07 L1220.59 1215.07 L1220 1215.07 L1219.42 1215.07 L1218.83 1215.07 L1218.24 1215.07 L1217.66 1215.07 L1217.07 1215.07 L1216.49 1215.07 L1215.9 1215.07 L1215.31 1215.07 L1214.73 1215.07 L1214.14 1215.07 L1213.55 1215.07 L1212.97 1215.07 L1212.38 1215.07 L1211.79 1215.07 L1211.21 1215.07 L1210.62 1215.07 L1210.03 1215.07 L1209.45 1215.07 L1208.86 1215.07 L1208.28 1215.07 L1207.69 1215.07 L1207.1 1215.07 L1206.52 1215.07 L1205.93 1215.07 L1205.34 1215.07 L1204.76 1215.07 L1204.17 1215.07 L1203.58 1215.07 L1203 1215.07 L1202.41 1215.07 L1201.83 1215.07 L1201.24 1215.07 L1200.65 1215.07 L1200.07 1215.07 L1199.48 1215.07 L1198.89 1215.07 L1198.31 1215.07 L1197.72 1215.07 L1197.13 1215.07 L1196.55 1215.07 L1195.96 1215.07 L1195.37 1215.07 L1194.79 1215.07 L1194.2 1215.07 L1193.62 1215.07 L1193.03 1215.07 L1192.44 1215.07 L1191.86 1215.07 L1191.27 1215.07 L1190.68 1215.07 L1190.1 1215.07 L1189.51 1215.07 L1188.92 1215.07 L1188.34 1215.07 L1187.75 1215.07 L1187.16 1215.07 L1186.58 1215.07 L1185.99 1215.07 L1185.41 1215.07 L1184.82 1215.07 L1184.23 1215.07 L1183.65 1215.07 L1183.06 1215.07 L1182.47 1215.07 L1181.89 1215.07 L1181.3 1215.07 L1180.71 1215.07 L1180.13 1215.07 L1179.54 1215.07 L1178.96 1215.07 L1178.37 1215.07 L1177.78 1215.07 L1177.2 1215.07 L1176.61 1215.07 L1176.02 1215.07 L1175.44 1215.07 L1174.85 1215.07 L1174.26 1215.07 L1173.68 1215.07 L1173.09 1215.07 L1172.5 1215.07 L1171.92 1215.07 L1171.33 1215.07 L1170.75 1215.07 L1170.16 1215.07 L1169.57 1215.07 L1168.99 1215.07 L1168.4 1215.07 L1167.81 1215.07 L1167.23 1215.07 L1166.64 1215.07 L1166.05 1215.07 L1165.47 1215.07 L1164.88 1215.07 L1164.29 1215.07 L1163.71 1215.07 L1163.12 1215.07 L1162.54 1215.07 L1161.95 1215.07 L1161.36 1215.07 L1160.78 1215.07 L1160.19 1215.07 L1159.6 1215.07 L1159.02 1215.07 L1158.43 1215.07 L1157.84 1215.07 L1157.26 1215.07 L1156.67 1215.07 L1156.09 1215.07 L1155.5 1215.07 L1154.91 1215.07 L1154.33 1215.07 L1153.74 1215.07 L1153.15 1215.07 L1152.57 1215.07 L1151.98 1215.07 L1151.39 1215.07 L1150.81 1215.07 L1150.22 1215.07 L1149.63 1215.07 L1149.05 1215.07 L1148.46 1215.07 L1147.88 1215.07 L1147.29 1215.07 L1146.7 1215.07 L1146.12 1215.07 L1145.53 1215.07 L1144.94 1215.07 L1144.36 1215.07 L1143.77 1215.07 L1143.18 1215.07 L1142.6 1215.07 L1142.01 1215.07 L1141.42 1215.07 L1140.84 1215.07 L1140.25 1215.07 L1139.67 1215.07 L1139.08 1215.07 L1138.49 1215.07 L1137.91 1215.07 L1137.32 1215.07 L1136.73 1215.07 L1136.15 1215.07 L1135.56 1215.07 L1134.97 1215.07 L1134.39 1215.07 L1133.8 1215.07 L1133.21 1215.07 L1132.63 1215.07 L1132.04 1215.07 L1131.46 1215.07 L1130.87 1215.07 L1130.28 1215.07 L1129.7 1215.07 L1129.11 1215.07 L1128.52 1215.07 L1127.94 1215.07 L1127.35 1215.07 L1126.76 1215.07 L1126.18 1215.07 L1125.59 1215.07 L1125.01 1215.07 L1124.42 1215.07 L1123.83 1215.07 L1123.25 1215.07 L1122.66 1215.07 L1122.07 1215.07 L1121.49 1215.07 L1120.9 1215.07 L1120.31 1215.07 L1119.73 1215.07 L1119.14 1215.07 L1118.55 1215.07 L1117.97 1215.07 L1117.38 1215.07 L1116.8 1215.07 L1116.21 1215.07 L1115.62 1215.07 L1115.04 1215.07 L1114.45 1215.07 L1113.86 1215.07 L1113.28 1215.07 L1112.69 1215.07 L1112.1 1215.07 L1111.52 1215.07 L1110.93 1215.07 L1110.34 1215.07 L1109.76 1215.07 L1109.17 1215.07 L1108.59 1215.07 L1108 1215.07 L1107.41 1215.07 L1106.83 1215.07 L1106.24 1215.07 L1105.65 1215.07 L1105.07 1215.07 L1104.48 1215.07 L1103.89 1215.07 L1103.31 1215.07 L1102.72 1215.07 L1102.14 1215.07 L1101.55 1215.07 L1100.96 1215.07 L1100.38 1215.07 L1099.79 1215.07 L1099.2 1215.07 L1098.62 1215.07 L1098.03 1215.07 L1097.44 1215.07 L1096.86 1215.07 L1096.27 1215.07 L1095.68 1215.07 L1095.1 1215.07 L1094.51 1215.07 L1093.93 1215.07 L1093.34 1215.07 L1092.75 1215.07 L1092.17 1215.07 L1091.58 1215.07 L1090.99 1215.07 L1090.41 1215.07 L1089.82 1215.07 L1089.23 1215.07 L1088.65 1215.07 L1088.06 1215.07 L1087.47 1215.07 L1086.89 1215.07 L1086.3 1215.07 L1085.72 1215.07 L1085.13 1215.07 L1084.54 1215.07 L1083.96 1215.07 L1083.37 1215.07 L1082.78 1215.07 L1082.2 1215.07 L1081.61 1215.07 L1081.02 1215.07 L1080.44 1215.07 L1079.85 1215.07 L1079.26 1215.07 L1078.68 1215.07 L1078.09 1215.07 L1077.51 1215.07 L1076.92 1215.07 L1076.33 1215.07 L1075.75 1215.07 L1075.16 1215.07 L1074.57 1215.07 L1073.99 1215.07 L1073.4 1215.07 L1072.81 1215.07 L1072.23 1215.07 L1071.64 1215.07 L1071.06 1215.07 L1070.47 1215.07 L1069.88 1215.07 L1069.3 1215.07 L1068.71 1215.07 L1068.12 1215.07 L1067.54 1215.07 L1066.95 1215.07 L1066.36 1215.07 L1065.78 1215.07 L1065.19 1215.07 L1064.6 1215.07 L1064.02 1215.07 L1063.43 1215.07 L1062.85 1215.07 L1062.26 1215.07 L1061.67 1215.07 L1061.09 1215.07 L1060.5 1215.07 L1059.91 1215.07 L1059.33 1215.07 L1058.74 1215.07 L1058.15 1215.07 L1057.57 1215.07 L1056.98 1215.07 L1056.39 1215.07 L1055.81 1215.07 L1055.22 1215.07 L1054.64 1215.07 L1054.05 1215.07 L1053.46 1215.07 L1052.88 1215.07 L1052.29 1215.07 L1051.7 1215.07 L1051.12 1215.07 L1050.53 1215.07 L1049.94 1215.07 L1049.36 1215.07 L1048.77 1215.07 L1048.19 1215.07 L1047.6 1215.07 L1047.01 1215.07 L1046.43 1215.07 L1045.84 1215.07 L1045.25 1215.07 L1044.67 1215.07 L1044.08 1215.07 L1043.49 1215.07 L1042.91 1215.07 L1042.32 1215.07 L1041.73 1215.07 L1041.15 1215.07 L1040.56 1215.07 L1039.98 1215.07 L1039.39 1215.07 L1038.8 1215.07 L1038.22 1215.07 L1037.63 1215.07 L1037.04 1215.07 L1036.46 1215.07 L1035.87 1215.07 L1035.28 1215.07 L1034.7 1215.07 L1034.11 1215.07 L1033.52 1215.07 L1032.94 1215.07 L1032.35 1215.07 L1031.77 1215.07 L1031.18 1215.07 L1030.59 1215.07 L1030.01 1215.07 L1029.42 1215.07 L1028.83 1215.07 L1028.25 1215.07 L1027.66 1215.07 L1027.07 1215.07 L1026.49 1215.07 L1025.9 1215.07 L1025.32 1215.07 L1024.73 1215.07 L1024.14 1215.07 L1023.56 1215.07 L1022.97 1215.07 L1022.38 1215.07 L1021.8 1215.07 L1021.21 1215.07 L1020.62 1215.07 L1020.04 1215.07 L1019.45 1215.07 L1018.86 1215.07 L1018.28 1215.07 L1017.69 1215.07 L1017.11 1215.07 L1016.52 1215.07 L1015.93 1215.07 L1015.35 1215.07 L1014.76 1215.07 L1014.17 1215.07 L1013.59 1215.07 L1013 1215.07 L1012.41 1215.07 L1011.83 1215.07 L1011.24 1215.07 L1010.65 1215.07 L1010.07 1215.07 L1009.48 1215.07 L1008.9 1215.07 L1008.31 1215.07 L1007.72 1215.07 L1007.14 1215.07 L1006.55 1215.07 L1005.96 1215.07 L1005.38 1215.07 L1004.79 1215.07 L1004.2 1215.07 L1003.62 1215.07 L1003.03 1215.07 L1002.44 1215.07 L1001.86 1215.07 L1001.27 1215.07 L1000.69 1215.07 L1000.1 1215.07 L999.513 1215.07 L998.926 1215.07 L998.34 1215.07 L997.754 1215.07 L997.167 1215.07 L996.581 1215.07 L995.994 1215.07 L995.408 1215.07 L994.822 1215.07 L994.235 1215.07 L993.649 1215.07 L993.062 1215.07 L992.476 1215.07 L991.889 1215.07 L991.303 1215.07 L990.717 1215.07 L990.13 1215.07 L989.544 1215.07 L988.957 1215.07 L988.371 1215.07 L987.785 1215.07 L987.198 1215.07 L986.612 1215.07 L986.025 1215.07  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1215.49 986.612,1215.49 987.198,1215.49 987.785,1215.49 988.371,1215.49 988.957,1215.49 989.544,1215.49 990.13,1215.49 990.717,1215.49 991.303,1215.49 991.889,1215.49 992.476,1215.49 993.062,1215.49 993.649,1215.49 994.235,1215.49 994.822,1215.49 995.408,1215.49 995.994,1215.49 996.581,1215.49 997.167,1215.49 997.754,1215.49 998.34,1215.49 998.926,1215.49 999.513,1215.49 1000.1,1215.49 1000.69,1215.49 1001.27,1215.49 1001.86,1215.49 1002.44,1215.49 1003.03,1215.49 1003.62,1215.49 1004.2,1215.49 1004.79,1215.49 1005.38,1215.49 1005.96,1215.49 1006.55,1215.49 1007.14,1215.49 1007.72,1215.49 1008.31,1215.49 1008.9,1215.49 1009.48,1215.49 1010.07,1215.49 1010.65,1215.49 1011.24,1215.49 1011.83,1215.49 1012.41,1215.49 1013,1215.49 1013.59,1215.49 1014.17,1215.49 1014.76,1215.49 1015.35,1215.49 1015.93,1215.49 1016.52,1215.49 1017.11,1215.49 1017.69,1215.49 1018.28,1215.49 1018.86,1215.49 1019.45,1215.49 1020.04,1215.49 1020.62,1215.49 1021.21,1215.49 1021.8,1215.49 1022.38,1215.49 1022.97,1215.49 1023.56,1215.49 1024.14,1215.49 1024.73,1215.49 1025.32,1215.49 1025.9,1215.49 1026.49,1215.49 1027.07,1215.49 1027.66,1215.49 1028.25,1215.49 1028.83,1215.49 1029.42,1215.49 1030.01,1215.49 1030.59,1215.49 1031.18,1215.49 1031.77,1215.49 1032.35,1215.49 1032.94,1215.49 1033.52,1215.49 1034.11,1215.49 1034.7,1215.49 1035.28,1215.49 1035.87,1215.49 1036.46,1215.49 1037.04,1215.49 1037.63,1215.49 1038.22,1215.49 1038.8,1215.49 1039.39,1215.49 1039.98,1215.49 1040.56,1215.49 1041.15,1215.49 1041.73,1215.49 1042.32,1215.49 1042.91,1215.49 1043.49,1215.49 1044.08,1215.49 1044.67,1215.49 1045.25,1215.49 1045.84,1215.49 1046.43,1215.49 1047.01,1215.49 1047.6,1215.49 1048.19,1215.49 1048.77,1215.49 1049.36,1215.49 1049.94,1215.49 1050.53,1215.49 1051.12,1215.49 1051.7,1215.49 1052.29,1215.49 1052.88,1215.49 1053.46,1215.49 1054.05,1215.49 1054.64,1215.49 1055.22,1215.49 1055.81,1215.49 1056.39,1215.49 1056.98,1215.49 1057.57,1215.49 1058.15,1215.49 1058.74,1215.49 1059.33,1215.49 1059.91,1215.49 1060.5,1215.49 1061.09,1215.49 1061.67,1215.49 1062.26,1215.49 1062.85,1215.49 1063.43,1215.49 1064.02,1215.49 1064.6,1215.49 1065.19,1215.49 1065.78,1215.49 1066.36,1215.49 1066.95,1215.49 1067.54,1215.49 1068.12,1215.49 1068.71,1215.49 1069.3,1215.49 1069.88,1215.49 1070.47,1215.49 1071.06,1215.49 1071.64,1215.49 1072.23,1215.49 1072.81,1215.49 1073.4,1215.49 1073.99,1215.49 1074.57,1215.49 1075.16,1215.49 1075.75,1215.49 1076.33,1215.49 1076.92,1215.49 1077.51,1215.49 1078.09,1215.49 1078.68,1215.49 1079.26,1215.49 1079.85,1215.49 1080.44,1215.49 1081.02,1215.49 1081.61,1215.49 1082.2,1215.49 1082.78,1215.49 1083.37,1215.49 1083.96,1215.49 1084.54,1215.49 1085.13,1215.49 1085.72,1215.49 1086.3,1215.49 1086.89,1215.49 1087.47,1215.49 1088.06,1215.49 1088.65,1215.49 1089.23,1215.49 1089.82,1215.49 1090.41,1215.49 1090.99,1215.49 1091.58,1215.49 1092.17,1215.49 1092.75,1215.49 1093.34,1215.49 1093.93,1215.49 1094.51,1215.49 1095.1,1215.49 1095.68,1215.49 1096.27,1215.49 1096.86,1215.49 1097.44,1215.49 1098.03,1215.49 1098.62,1215.49 1099.2,1215.49 1099.79,1215.49 1100.38,1215.49 1100.96,1215.49 1101.55,1215.49 1102.14,1215.49 1102.72,1215.49 1103.31,1215.49 1103.89,1215.49 1104.48,1215.49 1105.07,1215.49 1105.65,1215.49 1106.24,1215.49 1106.83,1215.49 1107.41,1215.49 1108,1215.49 1108.59,1215.49 1109.17,1215.49 1109.76,1215.49 1110.34,1215.49 1110.93,1215.49 1111.52,1215.49 1112.1,1215.49 1112.69,1215.49 1113.28,1215.49 1113.86,1215.49 1114.45,1215.49 1115.04,1215.49 1115.62,1215.49 1116.21,1215.49 1116.8,1215.49 1117.38,1215.49 1117.97,1215.49 1118.55,1215.49 1119.14,1215.49 1119.73,1215.49 1120.31,1215.49 1120.9,1215.49 1121.49,1215.49 1122.07,1215.49 1122.66,1215.49 1123.25,1215.49 1123.83,1215.49 1124.42,1215.49 1125.01,1215.49 1125.59,1215.49 1126.18,1215.49 1126.76,1215.49 1127.35,1215.49 1127.94,1215.49 1128.52,1215.49 1129.11,1215.49 1129.7,1215.49 1130.28,1215.49 1130.87,1215.49 1131.46,1215.49 1132.04,1215.49 1132.63,1215.49 1133.21,1215.49 1133.8,1215.49 1134.39,1215.49 1134.97,1215.49 1135.56,1215.49 1136.15,1215.49 1136.73,1215.49 1137.32,1215.49 1137.91,1215.49 1138.49,1215.49 1139.08,1215.49 1139.67,1215.49 1140.25,1215.49 1140.84,1215.49 1141.42,1215.49 1142.01,1215.49 1142.6,1215.49 1143.18,1215.49 1143.77,1215.49 1144.36,1215.49 1144.94,1215.49 1145.53,1215.49 1146.12,1215.49 1146.7,1215.49 1147.29,1215.49 1147.88,1215.49 1148.46,1215.49 1149.05,1215.49 1149.63,1215.49 1150.22,1215.49 1150.81,1215.49 1151.39,1215.49 1151.98,1215.49 1152.57,1215.49 1153.15,1215.49 1153.74,1215.49 1154.33,1215.49 1154.91,1215.49 1155.5,1215.49 1156.09,1215.49 1156.67,1215.49 1157.26,1215.49 1157.84,1215.49 1158.43,1215.49 1159.02,1215.49 1159.6,1215.49 1160.19,1215.49 1160.78,1215.49 1161.36,1215.49 1161.95,1215.49 1162.54,1215.49 1163.12,1215.49 1163.71,1215.49 1164.29,1215.49 1164.88,1215.49 1165.47,1215.49 1166.05,1215.49 1166.64,1215.49 1167.23,1215.49 1167.81,1215.49 1168.4,1215.49 1168.99,1215.49 1169.57,1215.49 1170.16,1215.49 1170.75,1215.49 1171.33,1215.49 1171.92,1215.49 1172.5,1215.49 1173.09,1215.49 1173.68,1215.49 1174.26,1215.49 1174.85,1215.49 1175.44,1215.49 1176.02,1215.49 1176.61,1215.49 1177.2,1215.49 1177.78,1215.49 1178.37,1215.49 1178.96,1215.49 1179.54,1215.49 1180.13,1215.49 1180.71,1215.49 1181.3,1215.49 1181.89,1215.49 1182.47,1215.49 1183.06,1215.49 1183.65,1215.49 1184.23,1215.49 1184.82,1215.49 1185.41,1215.49 1185.99,1215.49 1186.58,1215.49 1187.16,1215.49 1187.75,1215.49 1188.34,1215.49 1188.92,1215.49 1189.51,1215.49 1190.1,1215.49 1190.68,1215.49 1191.27,1215.49 1191.86,1215.49 1192.44,1215.49 1193.03,1215.49 1193.62,1215.49 1194.2,1215.49 1194.79,1215.49 1195.37,1215.49 1195.96,1215.49 1196.55,1215.49 1197.13,1215.49 1197.72,1215.49 1198.31,1215.49 1198.89,1215.49 1199.48,1215.49 1200.07,1215.49 1200.65,1215.49 1201.24,1215.49 1201.83,1215.49 1202.41,1215.49 1203,1215.49 1203.58,1215.49 1204.17,1215.49 1204.76,1215.49 1205.34,1215.49 1205.93,1215.49 1206.52,1215.49 1207.1,1215.49 1207.69,1215.49 1208.28,1215.49 1208.86,1215.49 1209.45,1215.49 1210.03,1215.49 1210.62,1215.49 1211.21,1215.49 1211.79,1215.49 1212.38,1215.49 1212.97,1215.49 1213.55,1215.49 1214.14,1215.49 1214.73,1215.49 1215.31,1215.49 1215.9,1215.49 1216.49,1215.49 1217.07,1215.49 1217.66,1215.49 1218.24,1215.49 1218.83,1215.49 1219.42,1215.49 1220,1215.49 1220.59,1215.49 1221.18,1215.49 1221.76,1215.49 1222.35,1215.49 1222.94,1215.49 1223.52,1215.49 1224.11,1215.49 1224.7,1215.49 1225.28,1215.49 1225.87,1215.49 1226.45,1215.49 1227.04,1215.49 1227.63,1215.49 1228.21,1215.49 1228.8,1215.49 1229.39,1215.49 1229.97,1215.49 1230.56,1215.49 1231.15,1215.49 1231.73,1215.49 1232.32,1215.49 1232.91,1215.49 1233.49,1215.49 1234.08,1215.49 1234.66,1215.49 1235.25,1215.49 1235.84,1215.49 1236.42,1215.49 1237.01,1215.49 1237.6,1215.49 1238.18,1215.49 1238.77,1215.49 1239.36,1215.49 1239.94,1215.49 1240.53,1215.49 1241.11,1215.49 1241.7,1215.49 1242.29,1215.49 1242.87,1215.49 1243.46,1215.49 1244.05,1215.49 1244.63,1215.49 1245.22,1215.49 1245.81,1215.49 1246.39,1215.49 1246.98,1215.49 1247.57,1215.49 1248.15,1215.49 1248.74,1215.49 1249.32,1215.49 1249.91,1215.49 1250.5,1215.49 1251.08,1215.49 1251.67,1215.49 1252.26,1215.49 1252.84,1215.49 1253.43,1215.49 1254.02,1215.49 1254.6,1215.49 1255.19,1215.49 1255.78,1215.49 1256.36,1215.49 1256.95,1215.49 1257.53,1215.49 1258.12,1215.49 1258.71,1215.49 1259.29,1215.49 1259.88,1215.49 1260.47,1215.49 1261.05,1215.49 1261.64,1215.49 1262.23,1215.49 1262.81,1215.49 1263.4,1215.49 1263.98,1215.49 1264.57,1215.49 1265.16,1215.49 1265.74,1215.49 1266.33,1215.49 1266.92,1215.49 1267.5,1215.49 1268.09,1215.49 1268.68,1215.49 1269.26,1215.49 1269.85,1215.49 1270.44,1215.49 1271.02,1215.49 1271.61,1215.49 1272.19,1215.49 1272.78,1215.49 1273.37,1215.49 1273.95,1215.49 1274.54,1215.49 1275.13,1215.49 1275.71,1215.49 1276.3,1215.49 1276.89,1215.49 1277.47,1215.49 1278.06,1215.49 1278.65,1215.49 1279.23,1215.49 1279.82,1215.49 1280.4,1215.49 1280.99,1215.49 1281.58,1215.49 1282.16,1215.49 1282.75,1215.49 1283.34,1215.49 1283.92,1215.49 1284.51,1215.49 1285.1,1215.49 1285.68,1215.49 1286.27,1215.49 1286.86,1215.49 1287.44,1215.49 1288.03,1215.49 1288.61,1215.49 1289.2,1215.49 1289.79,1215.49 1290.37,1215.49 1290.96,1215.49 1291.55,1215.49 1292.13,1215.49 1292.72,1215.49 1293.31,1215.49 1293.89,1215.49 1294.48,1215.49 1295.06,1215.49 1295.65,1215.49 1296.24,1215.49 1296.82,1215.49 1297.41,1215.49 1298,1215.49 1298.58,1215.49 1299.17,1215.49 1299.76,1215.49 1300.34,1215.49 1300.93,1215.49 1301.52,1215.49 1302.1,1215.49 1302.69,1215.49 1303.27,1215.49 1303.86,1215.49 1304.45,1215.49 1305.03,1215.49 1305.62,1215.49 1306.21,1215.49 1306.79,1215.49 1307.38,1215.49 1307.97,1215.49 1308.55,1215.49 1309.14,1215.49 1309.73,1215.49 1310.31,1215.49 1310.9,1215.49 1311.48,1215.49 1312.07,1215.49 1312.66,1215.49 1313.24,1215.49 1313.83,1215.49 1314.42,1215.49 1315,1215.49 1315.59,1215.49 1316.18,1215.49 1316.76,1215.49 1317.35,1215.49 1317.93,1215.49 1318.52,1215.49 1319.11,1215.49 1319.69,1215.49 1320.28,1215.49 1320.87,1215.49 1321.45,1215.49 1322.04,1215.49 1322.63,1215.49 1323.21,1215.49 1323.8,1215.49 1324.39,1215.49 1324.97,1215.49 1325.56,1215.49 1326.14,1215.49 1326.73,1215.49 1327.32,1215.49 1327.9,1215.49 1328.49,1215.49 1329.08,1215.49 1329.66,1215.49 1330.25,1215.49 1330.84,1215.49 1331.42,1215.49 1332.01,1215.49 1332.6,1215.49 1333.18,1215.49 1333.77,1215.49 1334.35,1215.49 1334.94,1215.49 1335.53,1215.49 1336.11,1215.49 1336.7,1215.49 1337.29,1215.49 1337.87,1215.49 1338.46,1215.49 1339.05,1215.49 1339.63,1215.49 1340.22,1215.49 1340.8,1215.49 1341.39,1215.49 1341.98,1215.49 1342.56,1215.49 1343.15,1215.49 1343.74,1215.49 1344.32,1215.49 1344.91,1215.49 1345.5,1215.49 1346.08,1215.49 1346.67,1215.49 1347.26,1215.49 1347.84,1215.49 1348.43,1215.49 1349.01,1215.49 1349.6,1215.49 1350.19,1215.49 1350.77,1215.49 1351.36,1215.49 1351.95,1215.49 1352.53,1215.49 1353.12,1215.49 1353.71,1215.49 1354.29,1215.49 1354.88,1215.49 1355.47,1215.49 1356.05,1215.49 1356.64,1215.49 1357.22,1215.49 1357.81,1215.49 1358.4,1215.49 1358.98,1215.49 1359.57,1215.49 1360.16,1215.49 1360.74,1215.49 1361.33,1215.49 1361.92,1215.49 1362.5,1215.49 1363.09,1215.49 1363.68,1215.49 1364.26,1215.49 1364.85,1215.49 1365.43,1215.49 1366.02,1215.49 1366.61,1215.49 1367.19,1215.49 1367.78,1215.49 1368.37,1215.49 1368.95,1215.49 1369.54,1215.49 1370.13,1215.49 1370.71,1215.49 1371.3,1215.49 1371.88,1215.49 1372.47,1215.49 1373.06,1215.49 1373.64,1215.49 1374.23,1215.49 1374.82,1215.49 1375.4,1215.49 1375.99,1215.49 1376.58,1215.49 1377.16,1215.49 1377.75,1215.49 1378.34,1215.49 1378.92,1215.49 1379.51,1215.49 1380.09,1215.49 1380.68,1215.49 1381.27,1215.49 1381.85,1215.49 1382.44,1215.49 1383.03,1215.49 1383.61,1215.49 1384.2,1215.49 1384.79,1215.49 1385.37,1215.49 1385.96,1215.49 1386.55,1215.49 1387.13,1215.49 1387.72,1215.49 1388.3,1215.49 1388.89,1215.49 1389.48,1215.49 1390.06,1215.49 1390.65,1215.49 1391.24,1215.49 1391.82,1215.49 1392.41,1215.49 1393,1215.49 1393.58,1215.49 1394.17,1215.49 1394.75,1215.49 1395.34,1215.49 1395.93,1215.49 1396.51,1215.49 1397.1,1215.49 1397.69,1215.49 1398.27,1215.49 1398.86,1215.49 1399.45,1215.49 1400.03,1215.49 1400.62,1215.49 1401.21,1215.49 1401.79,1215.49 1402.38,1215.49 1402.96,1215.49 1403.55,1215.49 1404.14,1215.49 1404.72,1215.49 1405.31,1215.49 1405.9,1215.49 1406.48,1215.49 1407.07,1215.49 1407.66,1215.49 1408.24,1215.49 1408.83,1215.49 1409.42,1215.49 1410,1215.49 1410.59,1215.49 1411.17,1215.49 1411.76,1215.49 1412.35,1215.49 1412.93,1215.49 1413.52,1215.49 1414.11,1215.49 1414.69,1215.49 1415.28,1215.49 1415.87,1215.49 1416.45,1215.49 1417.04,1215.49 1417.63,1215.49 1418.21,1215.49 1418.8,1215.49 1419.38,1215.49 1419.97,1215.49 1420.56,1215.49 1421.14,1215.49 1421.73,1215.49 1422.32,1215.49 1422.9,1215.49 1423.49,1215.49 1424.08,1215.49 1424.66,1215.49 1425.25,1215.49 1425.83,1215.49 1426.42,1215.49 1427.01,1215.49 1427.59,1215.49 1428.18,1215.49 1428.77,1215.49 1429.35,1215.49 1429.94,1215.49 1430.53,1215.49 1431.11,1215.49 1431.7,1215.49 1432.29,1215.49 1432.87,1215.49 1433.46,1215.49 1434.04,1215.49 1434.63,1215.49 1435.22,1215.49 1435.8,1215.49 1436.39,1215.49 1436.98,1215.49 1437.56,1215.49 1438.15,1215.49 1438.74,1215.49 1439.32,1215.49 1439.91,1215.49 1440.5,1215.49 1441.08,1215.49 1441.67,1215.49 1442.25,1215.49 1442.84,1215.49 1443.43,1215.49 1444.01,1215.49 1444.6,1215.49 1445.19,1215.49 1445.77,1215.49 1446.36,1215.49 1446.95,1215.49 1447.53,1215.49 1448.12,1215.49 1448.7,1215.49 1449.29,1215.49 1449.88,1215.49 1450.46,1215.49 1451.05,1215.49 1451.64,1215.49 1452.22,1215.49 1452.81,1215.49 1453.4,1215.49 1453.98,1215.49 1454.57,1215.49 1455.16,1215.49 1455.74,1215.49 1456.33,1215.49 1456.91,1215.49 1457.5,1215.49 1458.09,1215.49 1458.67,1215.49 1459.26,1215.49 1459.85,1215.49 1460.43,1215.49 1461.02,1215.49 1461.61,1215.49 1462.19,1215.49 1462.78,1215.49 1463.37,1215.49 1463.95,1215.49 1464.54,1215.49 1465.12,1215.49 1465.71,1215.49 1466.3,1215.49 1466.88,1215.49 1467.47,1215.49 1468.06,1215.49 1468.64,1215.49 1469.23,1215.49 1469.82,1215.49 1470.4,1215.49 1470.99,1215.49 1471.57,1215.49 1472.16,1215.49 1472.75,1215.49 1473.33,1215.49 1473.92,1215.49 1474.51,1215.49 1475.09,1215.49 1475.68,1215.49 1476.27,1215.49 1476.85,1215.49 1477.44,1215.49 1478.03,1215.49 1478.61,1215.49 1479.2,1215.49 1479.78,1215.49 1480.37,1215.49 1480.96,1215.49 1481.54,1215.49 1482.13,1215.49 1482.72,1215.49 1483.3,1215.49 1483.89,1215.49 1484.48,1215.49 1485.06,1215.49 1485.65,1215.49 1486.24,1215.49 1486.82,1215.49 1487.41,1215.49 1487.99,1215.49 1488.58,1215.49 1489.17,1215.49 1489.75,1215.49 1490.34,1215.49 1490.93,1215.49 1491.51,1215.49 1492.1,1215.49 1492.69,1215.49 1493.27,1215.49 1493.86,1215.49 1494.45,1215.49 1495.03,1215.49 1495.62,1215.49 1496.2,1215.49 1496.79,1215.49 1497.38,1215.49 1497.96,1215.49 1498.55,1215.49 1499.14,1215.49 1499.72,1215.49 1500.31,1215.49 1500.9,1215.49 1501.48,1215.49 1502.07,1215.49 1502.65,1215.49 1503.24,1215.49 1503.83,1215.49 1504.41,1215.49 1505,1215.49 1505.59,1215.49 1506.17,1215.49 1506.76,1215.49 1507.35,1215.49 1507.93,1215.49 1508.52,1215.49 1509.11,1215.49 1509.69,1215.49 1510.28,1215.49 1510.86,1215.49 1511.45,1215.49 1512.04,1215.49 1512.62,1215.49 1513.21,1215.49 1513.8,1215.49 1514.38,1215.49 1514.97,1215.49 1515.56,1215.49 1516.14,1215.49 1516.73,1215.49 1517.32,1215.49 1517.9,1215.49 1518.49,1215.49 1519.07,1215.49 1519.66,1215.49 1520.25,1215.49 1520.83,1215.49 1521.42,1215.49 1522.01,1215.49 1522.59,1215.49 1523.18,1215.49 1523.77,1215.49 1524.35,1215.49 1524.94,1215.49 1525.52,1215.49 1526.11,1215.49 1526.7,1215.49 1527.28,1215.49 1527.87,1215.49 1528.46,1215.49 1529.04,1215.49 1529.63,1215.49 1530.22,1215.49 1530.8,1215.49 1531.39,1215.49 1531.98,1215.49 1532.56,1215.49 1533.15,1215.49 1533.73,1215.49 1534.32,1215.49 1534.91,1215.49 1535.49,1215.49 1536.08,1215.49 1536.67,1215.49 1537.25,1215.49 1537.84,1215.49 1538.43,1215.49 1539.01,1215.49 1539.6,1215.49 1540.19,1215.49 1540.77,1215.49 1541.36,1215.49 1541.94,1215.49 1542.53,1215.49 1543.12,1215.49 1543.7,1215.49 1544.29,1215.49 1544.88,1215.49 1545.46,1215.49 1546.05,1215.49 1546.64,1215.49 1547.22,1215.49 1547.81,1215.49 1548.4,1215.49 1548.98,1215.49 1549.57,1215.49 1550.15,1215.49 1550.74,1215.49 1551.33,1215.49 1551.91,1215.49 1552.5,1215.49 1553.09,1215.49 1553.67,1215.49 1554.26,1215.49 1554.85,1215.49 1555.43,1215.49 1556.02,1215.49 1556.6,1215.49 1557.19,1215.49 1557.78,1215.49 1558.36,1215.49 1558.95,1215.49 1559.54,1215.49 1560.12,1215.49 1560.71,1215.49 1561.3,1215.49 1561.88,1215.49 1562.47,1215.49 1563.06,1215.49 1563.64,1215.49 1564.23,1215.49 1564.81,1215.49 1565.4,1215.49 1565.99,1215.49 1566.57,1215.49 1567.16,1215.49 1567.75,1215.49 1568.33,1215.49 1568.92,1215.49 1569.51,1215.49 1570.09,1215.49 1570.68,1215.49 1571.27,1215.49 1571.85,1215.49 1572.44,1215.49 1573.02,1215.49 1573.61,1215.49 1574.2,1215.49 1574.78,1215.49 1575.37,1215.49 1575.96,1215.49 1576.54,1215.49 1577.13,1215.49 1577.72,1215.49 1578.3,1215.49 1578.89,1215.49 1579.47,1215.49 1580.06,1215.49 1580.65,1215.49 1581.23,1215.49 1581.82,1215.49 1582.41,1215.49 1582.99,1215.49 1583.58,1215.49 1584.17,1215.49 1584.75,1215.49 1585.34,1215.49 1585.93,1215.49 1586.51,1215.49 1587.1,1215.49 1587.68,1215.49 1588.27,1215.49 1588.86,1215.49 1589.44,1215.49 1590.03,1215.49 1590.62,1215.49 1591.2,1215.49 1591.79,1215.49 1592.38,1215.49 1592.96,1215.49 1593.55,1215.49 1594.14,1215.49 1594.72,1215.49 1595.31,1215.49 1595.89,1215.49 1596.48,1215.49 1597.07,1215.49 1597.65,1215.49 1598.24,1215.49 1598.83,1215.49 1599.41,1215.49 1600,1215.49 1600.59,1215.49 1601.17,1215.49 1601.76,1215.49 1602.34,1215.49 1602.93,1215.49 1603.52,1215.49 1604.1,1215.49 1604.69,1215.49 1605.28,1215.49 1605.86,1215.49 1606.45,1215.49 1607.04,1215.49 1607.62,1215.49 1608.21,1215.49 1608.8,1215.49 1609.38,1215.49 1609.97,1215.49 1610.55,1215.49 1611.14,1215.49 1611.73,1215.49 1612.31,1215.49 1612.9,1215.49 1613.49,1215.49 1614.07,1215.49 1614.66,1215.49 1615.25,1215.49 1615.83,1215.49 1616.42,1215.49 1617.01,1215.49 1617.59,1215.49 1618.18,1215.49 1618.76,1215.49 1619.35,1215.49 1619.94,1215.49 1620.52,1215.49 1621.11,1215.49 1621.7,1215.49 1622.28,1215.49 1622.87,1215.49 1623.46,1215.49 1624.04,1215.49 1624.63,1215.49 1625.22,1215.49 1625.8,1215.49 1626.39,1215.49 1626.97,1215.49 1627.56,1215.49 1628.15,1215.49 1628.73,1215.49 1629.32,1215.49 1629.91,1215.49 1630.49,1215.49 1631.08,1215.49 1631.67,1215.49 1632.25,1215.49 1632.84,1215.49 1633.42,1215.49 1634.01,1215.49 1634.6,1215.49 1635.18,1215.49 1635.77,1215.49 1636.36,1215.49 1636.94,1215.49 1637.53,1215.49 1638.12,1215.49 1638.7,1215.49 1639.29,1215.49 1639.88,1215.49 1640.46,1215.49 1641.05,1215.49 1641.63,1215.49 1642.22,1215.49 1642.81,1215.49 1643.39,1215.49 1643.98,1215.49 1644.57,1215.49 1645.15,1215.49 1645.74,1215.49 1646.33,1215.49 1646.91,1215.49 1647.5,1215.49 1648.09,1215.49 1648.67,1215.49 1649.26,1215.49 1649.84,1215.49 1650.43,1215.49 1651.02,1215.49 1651.6,1215.49 1652.19,1215.49 1652.78,1215.49 1653.36,1215.49 1653.95,1215.49 1654.54,1215.49 1655.12,1215.49 1655.71,1215.49 1656.29,1215.49 1656.88,1215.49 1657.47,1215.49 1658.05,1215.49 1658.64,1215.49 1659.23,1215.49 1659.81,1215.49 1660.4,1215.49 1660.99,1215.49 1661.57,1215.49 1662.16,1215.49 1662.75,1215.49 1663.33,1215.49 1663.92,1215.49 1664.5,1215.49 1665.09,1215.49 1665.68,1215.49 1666.26,1215.49 1666.85,1215.49 1667.44,1215.49 1668.02,1215.49 1668.61,1215.49 1669.2,1215.49 1669.78,1215.49 1670.37,1215.49 1670.96,1215.49 1671.54,1215.49 1672.13,1215.49 1672.71,1215.49 1673.3,1215.49 1673.89,1215.49 1674.47,1215.49 1675.06,1215.49 1675.65,1215.49 1676.23,1215.49 1676.82,1215.49 1677.41,1215.49 1677.99,1215.49 1678.58,1215.49 1679.17,1215.49 1679.75,1215.49 1680.34,1215.49 1680.92,1215.49 1681.51,1215.49 1682.1,1215.49 1682.68,1215.49 1683.27,1215.49 1683.86,1215.49 1684.44,1215.49 1685.03,1215.49 1685.62,1215.49 1686.2,1215.49 1686.79,1215.49 1687.37,1215.49 1687.96,1215.49 1688.55,1215.49 1689.13,1215.49 1689.72,1215.49 1690.31,1215.49 1690.89,1215.49 1691.48,1215.49 1692.07,1215.49 1692.65,1215.49 1693.24,1215.49 1693.83,1215.49 1694.41,1215.49 1695,1215.49 1695.58,1215.49 1696.17,1215.49 1696.76,1215.49 1697.34,1215.49 1697.93,1215.49 1698.52,1215.49 1699.1,1215.49 1699.69,1215.49 1700.28,1215.49 1700.86,1215.49 1701.45,1215.49 1702.04,1215.49 1702.62,1215.49 1703.21,1215.49 1703.79,1215.49 1704.38,1215.49 1704.97,1215.49 1705.55,1215.49 1706.14,1215.49 1706.73,1215.49 1707.31,1215.49 1707.9,1215.49 1708.49,1215.49 1709.07,1215.49 1709.66,1215.49 1710.24,1215.49 1710.83,1215.49 1711.42,1215.49 1712,1215.49 1712.59,1215.49 1713.18,1215.49 1713.76,1215.49 1714.35,1215.49 1714.94,1215.49 1715.52,1215.49 1716.11,1215.49 1716.7,1215.49 1717.28,1215.49 1717.87,1215.49 1718.45,1215.49 1719.04,1215.49 1719.63,1215.49 1720.21,1215.49 1720.8,1215.49 1721.39,1215.49 1721.97,1215.49 1722.56,1215.49 1723.15,1215.49 1723.73,1215.49 1724.32,1215.49 1724.91,1215.49 1725.49,1215.49 1726.08,1215.49 1726.66,1215.49 1727.25,1215.49 1727.84,1215.49 1728.42,1215.49 1729.01,1215.49 1729.6,1215.49 1730.18,1215.49 1730.77,1215.49 1731.36,1215.49 1731.94,1215.49 1732.53,1215.49 1733.11,1215.49 1733.7,1215.49 1734.29,1215.49 1734.87,1215.49 1735.46,1215.49 1736.05,1215.49 1736.63,1215.49 1737.22,1215.49 1737.81,1215.49 1738.39,1215.49 1738.98,1215.49 1739.57,1215.49 1740.15,1215.49 1740.74,1215.49 1741.32,1215.49 1741.91,1215.49 1742.5,1215.49 1743.08,1215.49 1743.67,1215.49 1744.26,1215.49 1744.84,1215.49 1745.43,1215.49 1746.02,1215.49 1746.6,1215.49 1747.19,1215.49 1747.78,1215.49 1748.36,1215.49 1748.95,1215.49 1749.53,1215.49 1750.12,1215.49 1750.71,1215.49 1751.29,1215.49 1751.88,1215.49 1752.47,1215.49 1753.05,1215.49 1753.64,1215.49 1754.23,1215.49 1754.81,1215.49 1755.4,1215.49 1755.99,1215.49 1756.57,1215.49 1757.16,1215.49 1757.74,1215.49 1758.33,1215.49 1758.92,1215.49 1759.5,1215.49 1760.09,1215.49 1760.68,1215.49 1761.26,1215.49 1761.85,1215.49 1762.44,1215.49 1763.02,1215.49 1763.61,1215.49 1764.19,1215.49 1764.78,1215.49 1765.37,1215.49 1765.95,1215.49 1766.54,1215.49 1767.13,1215.49 1767.71,1215.49 1768.3,1215.49 1768.89,1215.49 1769.47,1215.49 1770.06,1215.49 1770.65,1215.49 1771.23,1215.49 1771.82,1215.49 1772.4,1215.49 1772.99,1215.49 1773.58,1215.49 1774.16,1215.49 1774.75,1215.49 1775.34,1215.49 1775.92,1215.49 1776.51,1215.49 1777.1,1215.49 1777.68,1215.49 1778.27,1215.49 1778.86,1215.49 1779.44,1215.49 1780.03,1215.49 1780.61,1215.49 1781.2,1215.49 1781.79,1215.49 1782.37,1215.49 1782.96,1215.49 1783.55,1215.49 1784.13,1215.49 1784.72,1215.49 1785.31,1215.49 1785.89,1215.49 1786.48,1215.49 1787.06,1215.49 1787.65,1215.49 1788.24,1215.49 1788.82,1215.49 1789.41,1215.49 1790,1215.49 1790.58,1215.49 1791.17,1215.49 1791.76,1215.49 1792.34,1215.49 1792.93,1215.49 1793.52,1215.49 1794.1,1215.49 1794.69,1215.49 1795.27,1215.49 1795.86,1215.49 1796.45,1215.49 1797.03,1215.49 1797.62,1215.49 1798.21,1215.49 1798.79,1215.49 1799.38,1215.49 1799.97,1215.49 1800.55,1215.49 1801.14,1215.49 1801.73,1215.49 1802.31,1215.49 1802.9,1215.49 1803.48,1215.49 1804.07,1215.49 1804.66,1215.49 1805.24,1215.49 1805.83,1215.49 1806.42,1215.49 1807,1215.49 1807.59,1215.49 1808.18,1215.49 1808.76,1215.49 1809.35,1215.49 1809.94,1215.49 1810.52,1215.49 1811.11,1215.49 1811.69,1215.49 1812.28,1215.49 1812.87,1215.49 1813.45,1215.49 1814.04,1215.49 1814.63,1215.49 1815.21,1215.49 1815.8,1215.49 1816.39,1215.49 1816.97,1215.49 1817.56,1215.49 1818.14,1215.49 1818.73,1215.49 1819.32,1215.49 1819.9,1215.49 1820.49,1215.49 1821.08,1215.49 1821.66,1215.49 1822.25,1215.49 1822.84,1215.49 1823.42,1215.49 1824.01,1215.49 1824.6,1215.49 1825.18,1215.49 1825.77,1215.49 1826.35,1215.49 1826.94,1215.49 1827.53,1215.49 1828.11,1215.49 1828.7,1215.49 1829.29,1215.49 1829.87,1215.49 1830.46,1215.49 1831.05,1215.49 1831.63,1215.49 1832.22,1215.49 1832.81,1215.49 1833.39,1215.49 1833.98,1215.49 1834.56,1215.49 1835.15,1215.49 1835.74,1215.49 1836.32,1215.49 1836.91,1215.49 1837.5,1215.49 1838.08,1215.49 1838.67,1215.49 1839.26,1215.49 1839.84,1215.49 1840.43,1215.49 1841.01,1215.49 1841.6,1215.49 1842.19,1215.49 1842.77,1215.49 1843.36,1215.49 1843.95,1215.49 1844.53,1215.49 1845.12,1215.49 1845.71,1215.49 1846.29,1215.49 1846.88,1215.49 1847.47,1215.49 1848.05,1215.49 1848.64,1215.49 1849.22,1215.49 1849.81,1215.49 1850.4,1215.49 1850.98,1215.49 1851.57,1215.49 1852.16,1215.49 1852.74,1215.49 1853.33,1215.49 1853.92,1215.49 1854.5,1215.49 1855.09,1215.49 1855.68,1215.49 1856.26,1215.49 1856.85,1215.49 1857.43,1215.49 1858.02,1215.49 1858.61,1215.49 1859.19,1215.49 1859.78,1215.49 1860.37,1215.49 1860.95,1215.49 1861.54,1215.49 1862.13,1215.49 1862.71,1215.49 1863.3,1215.49 1863.88,1215.49 1864.47,1215.49 1865.06,1215.49 1865.64,1215.49 1866.23,1215.49 1866.82,1215.49 1867.4,1215.49 1867.99,1215.49 1868.58,1215.49 1869.16,1215.49 1869.75,1215.49 1870.34,1215.49 1870.92,1215.49 1871.51,1215.49 1872.09,1215.49 1872.68,1215.49 1873.27,1215.49 1873.85,1215.49 1874.44,1215.49 1875.03,1215.49 1875.61,1215.49 1876.2,1215.49 1876.79,1215.49 1877.37,1215.49 1877.96,1215.49 1878.55,1215.49 1879.13,1215.49 1879.72,1215.49 1880.3,1215.49 1880.89,1215.49 1881.48,1215.49 1882.06,1215.49 1882.65,1215.49 1883.24,1215.49 1883.82,1215.49 1884.41,1215.49 1885,1215.49 1885.58,1215.49 1886.17,1215.49 1886.76,1215.49 1887.34,1215.49 1887.93,1215.49 1888.51,1215.49 1889.1,1215.49 1889.69,1215.49 1890.27,1215.49 1890.86,1215.49 1891.45,1215.49 1892.03,1215.49 1892.62,1215.49 1893.21,1215.49 1893.79,1215.49 1894.38,1215.49 1894.96,1215.49 1895.55,1215.49 1896.14,1215.49 1896.72,1215.49 1897.31,1215.49 1897.9,1215.49 1898.48,1215.49 1899.07,1215.49 1899.66,1215.49 1900.24,1215.49 1900.83,1215.49 1901.42,1215.49 1902,1215.49 1902.59,1215.49 1903.17,1215.49 1903.76,1215.49 1904.35,1215.49 1904.93,1215.49 1905.52,1215.49 1906.11,1215.49 1906.69,1215.49 1907.28,1215.49 1907.87,1215.49 1908.45,1215.49 1909.04,1215.49 1909.63,1215.49 1910.21,1215.49 1910.8,1215.49 1911.38,1215.49 1911.97,1215.49 1912.56,1215.49 1913.14,1215.49 1913.73,1215.49 1914.32,1215.49 1914.9,1215.49 1915.49,1215.49 1916.08,1215.49 1916.66,1215.49 1917.25,1215.49 1917.83,1215.49 1918.42,1215.49 1919.01,1215.49 1919.59,1215.49 1920.18,1215.49 1920.77,1215.49 1921.35,1215.49 1921.94,1215.49 1922.53,1215.49 1923.11,1215.49 1923.7,1215.49 1924.29,1215.49 1924.87,1215.49 1925.46,1215.49 1926.04,1215.49 1926.63,1215.49 1927.22,1215.49 1927.8,1215.49 1928.39,1215.49 1928.98,1215.49 1929.56,1215.49 1930.15,1215.49 1930.74,1215.49 1931.32,1215.49 1931.91,1215.49 1932.5,1215.49 1933.08,1215.49 1933.67,1215.49 1934.25,1215.49 1934.84,1215.49 1935.43,1215.49 1936.01,1215.49 1936.6,1215.49 1937.19,1215.49 1937.77,1215.49 1938.36,1215.49 1938.95,1215.49 1939.53,1215.49 1940.12,1215.49 1940.71,1215.49 1941.29,1215.49 1941.88,1215.49 1942.46,1215.49 1943.05,1215.49 1943.64,1215.49 1944.22,1215.49 1944.81,1215.49 1945.4,1215.49 1945.98,1215.49 1946.57,1215.49 1947.16,1215.49 1947.74,1215.49 1948.33,1215.49 1948.91,1215.49 1949.5,1215.49 1950.09,1215.49 1950.67,1215.49 1951.26,1215.49 1951.85,1215.49 1952.43,1215.49 1953.02,1215.49 1953.61,1215.49 1954.19,1215.49 1954.78,1215.49 1955.37,1215.49 1955.95,1215.49 1956.54,1215.49 1957.12,1215.49 1957.71,1215.49 1958.3,1215.49 1958.88,1215.49 1959.47,1215.49 1960.06,1215.49 1960.64,1215.49 1961.23,1215.49 1961.82,1215.49 1962.4,1215.49 1962.99,1215.49 1963.58,1215.49 1964.16,1215.49 1964.75,1215.49 1965.33,1215.49 1965.92,1215.49 1966.51,1215.49 1967.09,1215.49 1967.68,1215.49 1968.27,1215.49 1968.85,1215.49 1969.44,1215.49 1970.03,1215.49 1970.61,1215.49 1971.2,1215.49 1971.78,1215.49 1972.37,1215.49 1972.96,1215.49 1973.54,1215.49 1974.13,1215.49 1974.72,1215.49 1975.3,1215.49 1975.89,1215.49 1976.48,1215.49 1977.06,1215.49 1977.65,1215.49 1978.24,1215.49 1978.82,1215.49 1979.41,1215.49 1979.99,1215.49 1980.58,1215.49 1981.17,1215.49 1981.75,1215.49 1982.34,1215.49 1982.93,1215.49 1983.51,1215.49 1984.1,1215.49 1984.69,1215.49 1985.27,1215.49 1985.86,1215.49 1986.45,1215.49 1987.03,1215.49 1987.62,1215.49 1988.2,1215.49 1988.79,1215.49 1989.38,1215.49 1989.96,1215.49 1990.55,1215.49 1991.14,1215.49 1991.72,1215.49 1992.31,1215.49 1992.9,1215.49 1993.48,1215.49 1994.07,1215.49 1994.65,1215.49 1995.24,1215.49 1995.83,1215.49 1996.41,1215.49 1997,1215.49 1997.59,1215.49 1998.17,1215.49 1998.76,1215.49 1999.35,1215.49 1999.93,1215.49 2000.52,1215.49 2001.11,1215.49 2001.69,1215.49 2002.28,1215.49 2002.86,1215.49 2003.45,1215.49 2004.04,1215.49 2004.62,1215.49 2005.21,1215.49 2005.8,1215.49 2006.38,1215.49 2006.97,1215.49 2007.56,1215.49 2008.14,1215.49 2008.73,1215.49 2009.32,1215.49 2009.9,1215.49 2010.49,1215.49 2011.07,1215.49 2011.66,1215.49 2012.25,1215.49 2012.83,1215.49 2013.42,1215.49 2014.01,1215.49 2014.59,1215.49 2015.18,1215.49 2015.77,1215.49 2016.35,1215.49 2016.94,1215.49 2017.53,1215.49 2018.11,1215.49 2018.7,1215.49 2019.28,1215.49 2019.87,1215.49 2020.46,1215.49 2021.04,1215.49 2021.63,1215.49 2022.22,1215.49 2022.8,1215.49 2023.39,1215.49 2023.98,1215.49 2024.56,1215.49 2025.15,1215.49 2025.73,1215.49 2026.32,1215.49 2026.91,1215.49 2027.49,1215.49 2028.08,1215.49 2028.67,1215.49 2029.25,1215.49 2029.84,1215.49 2030.43,1215.49 2031.01,1215.49 2031.6,1215.49 2032.19,1215.49 2032.77,1215.49 2033.36,1215.49 2033.94,1215.49 2034.53,1215.49 2035.12,1215.49 2035.7,1215.49 2036.29,1215.49 2036.88,1215.49 2037.46,1215.49 2038.05,1215.49 2038.64,1215.49 2039.22,1215.49 2039.81,1215.49 2040.4,1215.49 2040.98,1215.49 2041.57,1215.49 2042.15,1215.49 2042.74,1215.49 2043.33,1215.49 2043.91,1215.49 2044.5,1215.49 2045.09,1215.49 2045.67,1215.49 2046.26,1215.49 2046.85,1215.49 2047.43,1215.49 2048.02,1215.49 2048.6,1215.49 2049.19,1215.49 2049.78,1215.49 2050.36,1215.49 2050.95,1215.49 2051.54,1215.49 2052.12,1215.49 2052.71,1215.49 2053.3,1215.49 2053.88,1215.49 2054.47,1215.49 2055.06,1215.49 2055.64,1215.49 2056.23,1215.49 2056.81,1215.49 2057.4,1215.49 2057.99,1215.49 2058.57,1215.49 2059.16,1215.49 2059.75,1215.49 2060.33,1215.49 2060.92,1215.49 2061.51,1215.49 2062.09,1215.49 2062.68,1215.49 2063.27,1215.49 2063.85,1215.49 2064.44,1215.49 2065.02,1215.49 2065.61,1215.49 2066.2,1215.49 2066.78,1215.49 2067.37,1215.49 2067.96,1215.49 2068.54,1215.49 2069.13,1215.49 2069.72,1215.49 2070.3,1215.49 2070.89,1215.49 2071.48,1215.49 2072.06,1215.49 2072.65,1215.49 2073.23,1215.49 2073.82,1215.49 2074.41,1215.49 2074.99,1215.49 2075.58,1215.49 2076.17,1215.49 2076.75,1215.49 2077.34,1215.49 2077.93,1215.49 2078.51,1215.49 2079.1,1215.49 2079.68,1215.49 2080.27,1215.49 2080.86,1215.49 2081.44,1215.49 2082.03,1215.49 2082.62,1215.49 2083.2,1215.49 2083.79,1215.49 2084.38,1215.49 2084.96,1215.49 2085.55,1215.49 2086.14,1215.49 2086.72,1215.49 2087.31,1215.49 2087.89,1215.49 2088.48,1215.49 2089.07,1215.49 2089.65,1215.49 2090.24,1215.49 2090.83,1215.49 2091.41,1215.49 2092,1215.49 2092.59,1215.49 2093.17,1215.49 2093.76,1215.49 2094.35,1215.49 2094.93,1215.49 2095.52,1215.49 2096.1,1215.49 2096.69,1215.49 2097.28,1215.49 2097.86,1215.49 2098.45,1215.49 2099.04,1215.49 2099.62,1215.49 2100.21,1215.49 2100.8,1215.49 2101.38,1215.49 2101.97,1215.49 2102.55,1215.49 2103.14,1215.49 2103.73,1215.49 2104.31,1215.49 2104.9,1215.49 2105.49,1215.49 2106.07,1215.49 2106.66,1215.49 2107.25,1215.49 2107.83,1215.49 2108.42,1215.49 2109.01,1215.49 2109.59,1215.49 2110.18,1215.49 2110.76,1215.49 2111.35,1215.49 2111.94,1215.49 2112.52,1215.49 2113.11,1215.49 2113.7,1215.49 2114.28,1215.49 2114.87,1215.49 2115.46,1215.49 2116.04,1215.49 2116.63,1215.49 2117.22,1215.49 2117.8,1215.49 2118.39,1215.49 2118.97,1215.49 2119.56,1215.49 2120.15,1215.49 2120.73,1215.49 2121.32,1215.49 2121.91,1215.49 2122.49,1215.49 2123.08,1215.49 2123.67,1215.49 2124.25,1215.49 2124.84,1215.49 2125.42,1215.49 2126.01,1215.49 2126.6,1215.49 2127.18,1215.49 2127.77,1215.49 2128.36,1215.49 2128.94,1215.49 2129.53,1215.49 2130.12,1215.49 2130.7,1215.49 2131.29,1215.49 2131.88,1215.49 2132.46,1215.49 2133.05,1215.49 2133.63,1215.49 2134.22,1215.49 2134.81,1215.49 2135.39,1215.49 2135.98,1215.49 2136.57,1215.49 2137.15,1215.49 2137.74,1215.49 2138.33,1215.49 2138.91,1215.49 2139.5,1215.49 2140.09,1215.49 2140.67,1215.49 2141.26,1215.49 2141.84,1215.49 2142.43,1215.49 2143.02,1215.49 2143.6,1215.49 2144.19,1215.49 2144.78,1215.49 2145.36,1215.49 2145.95,1215.49 2146.54,1215.49 2147.12,1215.49 2147.71,1215.49 2148.3,1215.49 2148.88,1215.49 2149.47,1215.49 2150.05,1215.49 2150.64,1215.49 2151.23,1215.49 2151.81,1215.49 2152.4,1215.49 2152.99,1215.49 2153.57,1215.49 2154.16,1215.49 2154.75,1215.49 2155.33,1215.49 2155.92,1215.49 2156.5,1215.49 2157.09,1215.49 2157.68,1215.49 2158.26,1215.49 \"/>\n<path clip-path=\"url(#clip232)\" d=\"M986.025 1215.4 L986.612 1215.4 L987.198 1215.4 L987.785 1215.4 L988.371 1215.4 L988.957 1215.4 L989.544 1215.4 L990.13 1215.4 L990.717 1215.4 L991.303 1215.4 L991.889 1215.4 L992.476 1215.4 L993.062 1215.4 L993.649 1215.4 L994.235 1215.4 L994.822 1215.4 L995.408 1215.4 L995.994 1215.4 L996.581 1215.4 L997.167 1215.4 L997.754 1215.4 L998.34 1215.4 L998.926 1215.4 L999.513 1215.4 L1000.1 1215.4 L1000.69 1215.4 L1001.27 1215.4 L1001.86 1215.4 L1002.44 1215.4 L1003.03 1215.4 L1003.62 1215.4 L1004.2 1215.4 L1004.79 1215.4 L1005.38 1215.4 L1005.96 1215.4 L1006.55 1215.4 L1007.14 1215.4 L1007.72 1215.4 L1008.31 1215.4 L1008.9 1215.4 L1009.48 1215.4 L1010.07 1215.4 L1010.65 1215.4 L1011.24 1215.4 L1011.83 1215.4 L1012.41 1215.4 L1013 1215.4 L1013.59 1215.4 L1014.17 1215.4 L1014.76 1215.4 L1015.35 1215.4 L1015.93 1215.4 L1016.52 1215.4 L1017.11 1215.4 L1017.69 1215.4 L1018.28 1215.4 L1018.86 1215.4 L1019.45 1215.4 L1020.04 1215.4 L1020.62 1215.4 L1021.21 1215.4 L1021.8 1215.4 L1022.38 1215.4 L1022.97 1215.4 L1023.56 1215.4 L1024.14 1215.4 L1024.73 1215.4 L1025.32 1215.4 L1025.9 1215.4 L1026.49 1215.4 L1027.07 1215.4 L1027.66 1215.4 L1028.25 1215.4 L1028.83 1215.4 L1029.42 1215.4 L1030.01 1215.4 L1030.59 1215.4 L1031.18 1215.4 L1031.77 1215.4 L1032.35 1215.4 L1032.94 1215.4 L1033.52 1215.4 L1034.11 1215.4 L1034.7 1215.4 L1035.28 1215.4 L1035.87 1215.4 L1036.46 1215.4 L1037.04 1215.4 L1037.63 1215.4 L1038.22 1215.4 L1038.8 1215.4 L1039.39 1215.4 L1039.98 1215.4 L1040.56 1215.4 L1041.15 1215.4 L1041.73 1215.4 L1042.32 1215.4 L1042.91 1215.4 L1043.49 1215.4 L1044.08 1215.4 L1044.67 1215.4 L1045.25 1215.4 L1045.84 1215.4 L1046.43 1215.4 L1047.01 1215.4 L1047.6 1215.4 L1048.19 1215.4 L1048.77 1215.4 L1049.36 1215.4 L1049.94 1215.4 L1050.53 1215.4 L1051.12 1215.4 L1051.7 1215.4 L1052.29 1215.4 L1052.88 1215.4 L1053.46 1215.4 L1054.05 1215.4 L1054.64 1215.4 L1055.22 1215.4 L1055.81 1215.4 L1056.39 1215.4 L1056.98 1215.4 L1057.57 1215.4 L1058.15 1215.4 L1058.74 1215.4 L1059.33 1215.4 L1059.91 1215.4 L1060.5 1215.4 L1061.09 1215.4 L1061.67 1215.4 L1062.26 1215.4 L1062.85 1215.4 L1063.43 1215.4 L1064.02 1215.4 L1064.6 1215.4 L1065.19 1215.4 L1065.78 1215.4 L1066.36 1215.4 L1066.95 1215.4 L1067.54 1215.4 L1068.12 1215.4 L1068.71 1215.4 L1069.3 1215.4 L1069.88 1215.4 L1070.47 1215.4 L1071.06 1215.4 L1071.64 1215.4 L1072.23 1215.4 L1072.81 1215.4 L1073.4 1215.4 L1073.99 1215.4 L1074.57 1215.4 L1075.16 1215.4 L1075.75 1215.4 L1076.33 1215.4 L1076.92 1215.4 L1077.51 1215.4 L1078.09 1215.4 L1078.68 1215.4 L1079.26 1215.4 L1079.85 1215.4 L1080.44 1215.4 L1081.02 1215.4 L1081.61 1215.4 L1082.2 1215.4 L1082.78 1215.4 L1083.37 1215.4 L1083.96 1215.4 L1084.54 1215.4 L1085.13 1215.4 L1085.72 1215.4 L1086.3 1215.4 L1086.89 1215.4 L1087.47 1215.4 L1088.06 1215.4 L1088.65 1215.4 L1089.23 1215.4 L1089.82 1215.4 L1090.41 1215.4 L1090.99 1215.4 L1091.58 1215.4 L1092.17 1215.4 L1092.75 1215.4 L1093.34 1215.4 L1093.93 1215.4 L1094.51 1215.4 L1095.1 1215.4 L1095.68 1215.4 L1096.27 1215.4 L1096.86 1215.4 L1097.44 1215.4 L1098.03 1215.4 L1098.62 1215.4 L1099.2 1215.4 L1099.79 1215.4 L1100.38 1215.4 L1100.96 1215.4 L1101.55 1215.4 L1102.14 1215.4 L1102.72 1215.4 L1103.31 1215.4 L1103.89 1215.4 L1104.48 1215.4 L1105.07 1215.4 L1105.65 1215.4 L1106.24 1215.4 L1106.83 1215.4 L1107.41 1215.4 L1108 1215.4 L1108.59 1215.4 L1109.17 1215.4 L1109.76 1215.4 L1110.34 1215.4 L1110.93 1215.4 L1111.52 1215.4 L1112.1 1215.4 L1112.69 1215.4 L1113.28 1215.4 L1113.86 1215.4 L1114.45 1215.4 L1115.04 1215.4 L1115.62 1215.4 L1116.21 1215.4 L1116.8 1215.4 L1117.38 1215.4 L1117.97 1215.4 L1118.55 1215.4 L1119.14 1215.4 L1119.73 1215.4 L1120.31 1215.4 L1120.9 1215.4 L1121.49 1215.4 L1122.07 1215.4 L1122.66 1215.4 L1123.25 1215.4 L1123.83 1215.4 L1124.42 1215.4 L1125.01 1215.4 L1125.59 1215.4 L1126.18 1215.4 L1126.76 1215.4 L1127.35 1215.4 L1127.94 1215.4 L1128.52 1215.4 L1129.11 1215.4 L1129.7 1215.4 L1130.28 1215.4 L1130.87 1215.4 L1131.46 1215.4 L1132.04 1215.4 L1132.63 1215.4 L1133.21 1215.4 L1133.8 1215.4 L1134.39 1215.4 L1134.97 1215.4 L1135.56 1215.4 L1136.15 1215.4 L1136.73 1215.4 L1137.32 1215.4 L1137.91 1215.4 L1138.49 1215.4 L1139.08 1215.4 L1139.67 1215.4 L1140.25 1215.4 L1140.84 1215.4 L1141.42 1215.4 L1142.01 1215.4 L1142.6 1215.4 L1143.18 1215.4 L1143.77 1215.4 L1144.36 1215.4 L1144.94 1215.4 L1145.53 1215.4 L1146.12 1215.4 L1146.7 1215.4 L1147.29 1215.4 L1147.88 1215.4 L1148.46 1215.4 L1149.05 1215.4 L1149.63 1215.4 L1150.22 1215.4 L1150.81 1215.4 L1151.39 1215.4 L1151.98 1215.4 L1152.57 1215.4 L1153.15 1215.4 L1153.74 1215.4 L1154.33 1215.4 L1154.91 1215.4 L1155.5 1215.4 L1156.09 1215.4 L1156.67 1215.4 L1157.26 1215.4 L1157.84 1215.4 L1158.43 1215.4 L1159.02 1215.4 L1159.6 1215.4 L1160.19 1215.4 L1160.78 1215.4 L1161.36 1215.4 L1161.95 1215.4 L1162.54 1215.4 L1163.12 1215.4 L1163.71 1215.4 L1164.29 1215.4 L1164.88 1215.4 L1165.47 1215.4 L1166.05 1215.4 L1166.64 1215.4 L1167.23 1215.4 L1167.81 1215.4 L1168.4 1215.4 L1168.99 1215.4 L1169.57 1215.4 L1170.16 1215.4 L1170.75 1215.4 L1171.33 1215.4 L1171.92 1215.4 L1172.5 1215.4 L1173.09 1215.4 L1173.68 1215.4 L1174.26 1215.4 L1174.85 1215.4 L1175.44 1215.4 L1176.02 1215.4 L1176.61 1215.4 L1177.2 1215.4 L1177.78 1215.4 L1178.37 1215.4 L1178.96 1215.4 L1179.54 1215.4 L1180.13 1215.4 L1180.71 1215.4 L1181.3 1215.4 L1181.89 1215.4 L1182.47 1215.4 L1183.06 1215.4 L1183.65 1215.4 L1184.23 1215.4 L1184.82 1215.4 L1185.41 1215.4 L1185.99 1215.4 L1186.58 1215.4 L1187.16 1215.4 L1187.75 1215.4 L1188.34 1215.4 L1188.92 1215.4 L1189.51 1215.4 L1190.1 1215.4 L1190.68 1215.4 L1191.27 1215.4 L1191.86 1215.4 L1192.44 1215.4 L1193.03 1215.4 L1193.62 1215.4 L1194.2 1215.4 L1194.79 1215.4 L1195.37 1215.4 L1195.96 1215.4 L1196.55 1215.4 L1197.13 1215.4 L1197.72 1215.4 L1198.31 1215.4 L1198.89 1215.4 L1199.48 1215.4 L1200.07 1215.4 L1200.65 1215.4 L1201.24 1215.4 L1201.83 1215.4 L1202.41 1215.4 L1203 1215.4 L1203.58 1215.4 L1204.17 1215.4 L1204.76 1215.4 L1205.34 1215.4 L1205.93 1215.4 L1206.52 1215.4 L1207.1 1215.4 L1207.69 1215.4 L1208.28 1215.4 L1208.86 1215.4 L1209.45 1215.4 L1210.03 1215.4 L1210.62 1215.4 L1211.21 1215.4 L1211.79 1215.4 L1212.38 1215.4 L1212.97 1215.4 L1213.55 1215.4 L1214.14 1215.4 L1214.73 1215.4 L1215.31 1215.4 L1215.9 1215.4 L1216.49 1215.4 L1217.07 1215.4 L1217.66 1215.4 L1218.24 1215.4 L1218.83 1215.4 L1219.42 1215.4 L1220 1215.4 L1220.59 1215.4 L1221.18 1215.4 L1221.76 1215.4 L1222.35 1215.4 L1222.94 1215.4 L1223.52 1215.4 L1224.11 1215.4 L1224.7 1215.4 L1225.28 1215.4 L1225.87 1215.4 L1226.45 1215.4 L1227.04 1215.4 L1227.63 1215.4 L1228.21 1215.4 L1228.8 1215.4 L1229.39 1215.4 L1229.97 1215.4 L1230.56 1215.4 L1231.15 1215.4 L1231.73 1215.4 L1232.32 1215.4 L1232.91 1215.4 L1233.49 1215.4 L1234.08 1215.4 L1234.66 1215.4 L1235.25 1215.4 L1235.84 1215.4 L1236.42 1215.4 L1237.01 1215.4 L1237.6 1215.4 L1238.18 1215.4 L1238.77 1215.4 L1239.36 1215.4 L1239.94 1215.4 L1240.53 1215.4 L1241.11 1215.4 L1241.7 1215.4 L1242.29 1215.4 L1242.87 1215.4 L1243.46 1215.4 L1244.05 1215.4 L1244.63 1215.4 L1245.22 1215.4 L1245.81 1215.4 L1246.39 1215.4 L1246.98 1215.4 L1247.57 1215.4 L1248.15 1215.4 L1248.74 1215.4 L1249.32 1215.4 L1249.91 1215.4 L1250.5 1215.4 L1251.08 1215.4 L1251.67 1215.4 L1252.26 1215.4 L1252.84 1215.4 L1253.43 1215.4 L1254.02 1215.4 L1254.6 1215.4 L1255.19 1215.4 L1255.78 1215.4 L1256.36 1215.4 L1256.95 1215.4 L1257.53 1215.4 L1258.12 1215.4 L1258.71 1215.4 L1259.29 1215.4 L1259.88 1215.4 L1260.47 1215.4 L1261.05 1215.4 L1261.64 1215.4 L1262.23 1215.4 L1262.81 1215.4 L1263.4 1215.4 L1263.98 1215.4 L1264.57 1215.4 L1265.16 1215.4 L1265.74 1215.4 L1266.33 1215.4 L1266.92 1215.4 L1267.5 1215.4 L1268.09 1215.4 L1268.68 1215.4 L1269.26 1215.4 L1269.85 1215.4 L1270.44 1215.4 L1271.02 1215.4 L1271.61 1215.4 L1272.19 1215.4 L1272.78 1215.4 L1273.37 1215.4 L1273.95 1215.4 L1274.54 1215.4 L1275.13 1215.4 L1275.71 1215.4 L1276.3 1215.4 L1276.89 1215.4 L1277.47 1215.4 L1278.06 1215.4 L1278.65 1215.4 L1279.23 1215.4 L1279.82 1215.4 L1280.4 1215.4 L1280.99 1215.4 L1281.58 1215.4 L1282.16 1215.4 L1282.75 1215.4 L1283.34 1215.4 L1283.92 1215.4 L1284.51 1215.4 L1285.1 1215.4 L1285.68 1215.4 L1286.27 1215.4 L1286.86 1215.4 L1287.44 1215.4 L1288.03 1215.4 L1288.61 1215.4 L1289.2 1215.4 L1289.79 1215.4 L1290.37 1215.4 L1290.96 1215.4 L1291.55 1215.4 L1292.13 1215.4 L1292.72 1215.4 L1293.31 1215.4 L1293.89 1215.4 L1294.48 1215.4 L1295.06 1215.4 L1295.65 1215.4 L1296.24 1215.4 L1296.82 1215.4 L1297.41 1215.4 L1298 1215.4 L1298.58 1215.4 L1299.17 1215.4 L1299.76 1215.4 L1300.34 1215.4 L1300.93 1215.4 L1301.52 1215.4 L1302.1 1215.4 L1302.69 1215.4 L1303.27 1215.4 L1303.86 1215.4 L1304.45 1215.4 L1305.03 1215.4 L1305.62 1215.4 L1306.21 1215.4 L1306.79 1215.4 L1307.38 1215.4 L1307.97 1215.4 L1308.55 1215.4 L1309.14 1215.4 L1309.73 1215.4 L1310.31 1215.4 L1310.9 1215.4 L1311.48 1215.4 L1312.07 1215.4 L1312.66 1215.4 L1313.24 1215.4 L1313.83 1215.4 L1314.42 1215.4 L1315 1215.4 L1315.59 1215.4 L1316.18 1215.4 L1316.76 1215.4 L1317.35 1215.4 L1317.93 1215.4 L1318.52 1215.4 L1319.11 1215.4 L1319.69 1215.4 L1320.28 1215.4 L1320.87 1215.4 L1321.45 1215.4 L1322.04 1215.4 L1322.63 1215.4 L1323.21 1215.4 L1323.8 1215.4 L1324.39 1215.4 L1324.97 1215.4 L1325.56 1215.4 L1326.14 1215.4 L1326.73 1215.4 L1327.32 1215.4 L1327.9 1215.4 L1328.49 1215.4 L1329.08 1215.4 L1329.66 1215.4 L1330.25 1215.4 L1330.84 1215.4 L1331.42 1215.4 L1332.01 1215.4 L1332.6 1215.4 L1333.18 1215.4 L1333.77 1215.4 L1334.35 1215.4 L1334.94 1215.4 L1335.53 1215.4 L1336.11 1215.4 L1336.7 1215.4 L1337.29 1215.4 L1337.87 1215.4 L1338.46 1215.4 L1339.05 1215.4 L1339.63 1215.4 L1340.22 1215.4 L1340.8 1215.4 L1341.39 1215.4 L1341.98 1215.4 L1342.56 1215.4 L1343.15 1215.4 L1343.74 1215.4 L1344.32 1215.4 L1344.91 1215.4 L1345.5 1215.4 L1346.08 1215.4 L1346.67 1215.4 L1347.26 1215.4 L1347.84 1215.4 L1348.43 1215.4 L1349.01 1215.4 L1349.6 1215.4 L1350.19 1215.4 L1350.77 1215.4 L1351.36 1215.4 L1351.95 1215.4 L1352.53 1215.4 L1353.12 1215.4 L1353.71 1215.4 L1354.29 1215.4 L1354.88 1215.4 L1355.47 1215.4 L1356.05 1215.4 L1356.64 1215.4 L1357.22 1215.4 L1357.81 1215.4 L1358.4 1215.4 L1358.98 1215.4 L1359.57 1215.4 L1360.16 1215.4 L1360.74 1215.4 L1361.33 1215.4 L1361.92 1215.4 L1362.5 1215.4 L1363.09 1215.4 L1363.68 1215.4 L1364.26 1215.4 L1364.85 1215.4 L1365.43 1215.4 L1366.02 1215.4 L1366.61 1215.4 L1367.19 1215.4 L1367.78 1215.4 L1368.37 1215.4 L1368.95 1215.4 L1369.54 1215.4 L1370.13 1215.4 L1370.71 1215.4 L1371.3 1215.4 L1371.88 1215.4 L1372.47 1215.4 L1373.06 1215.4 L1373.64 1215.4 L1374.23 1215.4 L1374.82 1215.4 L1375.4 1215.4 L1375.99 1215.4 L1376.58 1215.4 L1377.16 1215.4 L1377.75 1215.4 L1378.34 1215.4 L1378.92 1215.4 L1379.51 1215.4 L1380.09 1215.4 L1380.68 1215.4 L1381.27 1215.4 L1381.85 1215.4 L1382.44 1215.4 L1383.03 1215.4 L1383.61 1215.4 L1384.2 1215.4 L1384.79 1215.4 L1385.37 1215.4 L1385.96 1215.4 L1386.55 1215.4 L1387.13 1215.4 L1387.72 1215.4 L1388.3 1215.4 L1388.89 1215.4 L1389.48 1215.4 L1390.06 1215.4 L1390.65 1215.4 L1391.24 1215.4 L1391.82 1215.4 L1392.41 1215.4 L1393 1215.4 L1393.58 1215.4 L1394.17 1215.4 L1394.75 1215.4 L1395.34 1215.4 L1395.93 1215.4 L1396.51 1215.4 L1397.1 1215.4 L1397.69 1215.4 L1398.27 1215.4 L1398.86 1215.4 L1399.45 1215.4 L1400.03 1215.4 L1400.62 1215.4 L1401.21 1215.4 L1401.79 1215.4 L1402.38 1215.4 L1402.96 1215.4 L1403.55 1215.4 L1404.14 1215.4 L1404.72 1215.4 L1405.31 1215.4 L1405.9 1215.4 L1406.48 1215.4 L1407.07 1215.4 L1407.66 1215.4 L1408.24 1215.4 L1408.83 1215.4 L1409.42 1215.4 L1410 1215.4 L1410.59 1215.4 L1411.17 1215.4 L1411.76 1215.4 L1412.35 1215.4 L1412.93 1215.4 L1413.52 1215.4 L1414.11 1215.4 L1414.69 1215.4 L1415.28 1215.4 L1415.87 1215.4 L1416.45 1215.4 L1417.04 1215.4 L1417.63 1215.4 L1418.21 1215.4 L1418.8 1215.4 L1419.38 1215.4 L1419.97 1215.4 L1420.56 1215.4 L1421.14 1215.4 L1421.73 1215.4 L1422.32 1215.4 L1422.9 1215.4 L1423.49 1215.4 L1424.08 1215.4 L1424.66 1215.4 L1425.25 1215.4 L1425.83 1215.4 L1426.42 1215.4 L1427.01 1215.4 L1427.59 1215.4 L1428.18 1215.4 L1428.77 1215.4 L1429.35 1215.4 L1429.94 1215.4 L1430.53 1215.4 L1431.11 1215.4 L1431.7 1215.4 L1432.29 1215.4 L1432.87 1215.4 L1433.46 1215.4 L1434.04 1215.4 L1434.63 1215.4 L1435.22 1215.4 L1435.8 1215.4 L1436.39 1215.4 L1436.98 1215.4 L1437.56 1215.4 L1438.15 1215.4 L1438.74 1215.4 L1439.32 1215.4 L1439.91 1215.4 L1440.5 1215.4 L1441.08 1215.4 L1441.67 1215.4 L1442.25 1215.4 L1442.84 1215.4 L1443.43 1215.4 L1444.01 1215.4 L1444.6 1215.4 L1445.19 1215.4 L1445.77 1215.4 L1446.36 1215.4 L1446.95 1215.4 L1447.53 1215.4 L1448.12 1215.4 L1448.7 1215.4 L1449.29 1215.4 L1449.88 1215.4 L1450.46 1215.4 L1451.05 1215.4 L1451.64 1215.4 L1452.22 1215.4 L1452.81 1215.4 L1453.4 1215.4 L1453.98 1215.4 L1454.57 1215.4 L1455.16 1215.4 L1455.74 1215.4 L1456.33 1215.4 L1456.91 1215.4 L1457.5 1215.4 L1458.09 1215.4 L1458.67 1215.4 L1459.26 1215.4 L1459.85 1215.4 L1460.43 1215.4 L1461.02 1215.4 L1461.61 1215.4 L1462.19 1215.4 L1462.78 1215.4 L1463.37 1215.4 L1463.95 1215.4 L1464.54 1215.4 L1465.12 1215.4 L1465.71 1215.4 L1466.3 1215.4 L1466.88 1215.4 L1467.47 1215.4 L1468.06 1215.4 L1468.64 1215.4 L1469.23 1215.4 L1469.82 1215.4 L1470.4 1215.4 L1470.99 1215.4 L1471.57 1215.4 L1472.16 1215.4 L1472.75 1215.4 L1473.33 1215.4 L1473.92 1215.4 L1474.51 1215.4 L1475.09 1215.4 L1475.68 1215.4 L1476.27 1215.4 L1476.85 1215.4 L1477.44 1215.4 L1478.03 1215.4 L1478.61 1215.4 L1479.2 1215.4 L1479.78 1215.4 L1480.37 1215.4 L1480.96 1215.4 L1481.54 1215.4 L1482.13 1215.4 L1482.72 1215.4 L1483.3 1215.4 L1483.89 1215.4 L1484.48 1215.4 L1485.06 1215.4 L1485.65 1215.4 L1486.24 1215.4 L1486.82 1215.4 L1487.41 1215.4 L1487.99 1215.4 L1488.58 1215.4 L1489.17 1215.4 L1489.75 1215.4 L1490.34 1215.4 L1490.93 1215.4 L1491.51 1215.4 L1492.1 1215.4 L1492.69 1215.4 L1493.27 1215.4 L1493.86 1215.4 L1494.45 1215.4 L1495.03 1215.4 L1495.62 1215.4 L1496.2 1215.4 L1496.79 1215.4 L1497.38 1215.4 L1497.96 1215.4 L1498.55 1215.4 L1499.14 1215.4 L1499.72 1215.4 L1500.31 1215.4 L1500.9 1215.4 L1501.48 1215.4 L1502.07 1215.4 L1502.65 1215.4 L1503.24 1215.4 L1503.83 1215.4 L1504.41 1215.4 L1505 1215.4 L1505.59 1215.4 L1506.17 1215.4 L1506.76 1215.4 L1507.35 1215.4 L1507.93 1215.4 L1508.52 1215.4 L1509.11 1215.4 L1509.69 1215.4 L1510.28 1215.4 L1510.86 1215.4 L1511.45 1215.4 L1512.04 1215.4 L1512.62 1215.4 L1513.21 1215.4 L1513.8 1215.4 L1514.38 1215.4 L1514.97 1215.4 L1515.56 1215.4 L1516.14 1215.4 L1516.73 1215.4 L1517.32 1215.4 L1517.9 1215.4 L1518.49 1215.4 L1519.07 1215.4 L1519.66 1215.4 L1520.25 1215.4 L1520.83 1215.4 L1521.42 1215.4 L1522.01 1215.4 L1522.59 1215.4 L1523.18 1215.4 L1523.77 1215.4 L1524.35 1215.4 L1524.94 1215.4 L1525.52 1215.4 L1526.11 1215.4 L1526.7 1215.4 L1527.28 1215.4 L1527.87 1215.4 L1528.46 1215.4 L1529.04 1215.4 L1529.63 1215.4 L1530.22 1215.4 L1530.8 1215.4 L1531.39 1215.4 L1531.98 1215.4 L1532.56 1215.4 L1533.15 1215.4 L1533.73 1215.4 L1534.32 1215.4 L1534.91 1215.4 L1535.49 1215.4 L1536.08 1215.4 L1536.67 1215.4 L1537.25 1215.4 L1537.84 1215.4 L1538.43 1215.4 L1539.01 1215.4 L1539.6 1215.4 L1540.19 1215.4 L1540.77 1215.4 L1541.36 1215.4 L1541.94 1215.4 L1542.53 1215.4 L1543.12 1215.4 L1543.7 1215.4 L1544.29 1215.4 L1544.88 1215.4 L1545.46 1215.4 L1546.05 1215.4 L1546.64 1215.4 L1547.22 1215.4 L1547.81 1215.4 L1548.4 1215.4 L1548.98 1215.4 L1549.57 1215.4 L1550.15 1215.4 L1550.74 1215.4 L1551.33 1215.4 L1551.91 1215.4 L1552.5 1215.4 L1553.09 1215.4 L1553.67 1215.4 L1554.26 1215.4 L1554.85 1215.4 L1555.43 1215.4 L1556.02 1215.4 L1556.6 1215.4 L1557.19 1215.4 L1557.78 1215.4 L1558.36 1215.4 L1558.95 1215.4 L1559.54 1215.4 L1560.12 1215.4 L1560.71 1215.4 L1561.3 1215.4 L1561.88 1215.4 L1562.47 1215.4 L1563.06 1215.4 L1563.64 1215.4 L1564.23 1215.4 L1564.81 1215.4 L1565.4 1215.4 L1565.99 1215.4 L1566.57 1215.4 L1567.16 1215.4 L1567.75 1215.4 L1568.33 1215.4 L1568.92 1215.4 L1569.51 1215.4 L1570.09 1215.4 L1570.68 1215.4 L1571.27 1215.4 L1571.85 1215.4 L1572.44 1215.4 L1573.02 1215.4 L1573.61 1215.4 L1574.2 1215.4 L1574.78 1215.4 L1575.37 1215.4 L1575.96 1215.4 L1576.54 1215.4 L1577.13 1215.4 L1577.72 1215.4 L1578.3 1215.4 L1578.89 1215.4 L1579.47 1215.4 L1580.06 1215.4 L1580.65 1215.4 L1581.23 1215.4 L1581.82 1215.4 L1582.41 1215.4 L1582.99 1215.4 L1583.58 1215.4 L1584.17 1215.4 L1584.75 1215.4 L1585.34 1215.4 L1585.93 1215.4 L1586.51 1215.4 L1587.1 1215.4 L1587.68 1215.4 L1588.27 1215.4 L1588.86 1215.4 L1589.44 1215.4 L1590.03 1215.4 L1590.62 1215.4 L1591.2 1215.4 L1591.79 1215.4 L1592.38 1215.4 L1592.96 1215.4 L1593.55 1215.4 L1594.14 1215.4 L1594.72 1215.4 L1595.31 1215.4 L1595.89 1215.4 L1596.48 1215.4 L1597.07 1215.4 L1597.65 1215.4 L1598.24 1215.4 L1598.83 1215.4 L1599.41 1215.4 L1600 1215.4 L1600.59 1215.4 L1601.17 1215.4 L1601.76 1215.4 L1602.34 1215.4 L1602.93 1215.4 L1603.52 1215.4 L1604.1 1215.4 L1604.69 1215.4 L1605.28 1215.4 L1605.86 1215.4 L1606.45 1215.4 L1607.04 1215.4 L1607.62 1215.4 L1608.21 1215.4 L1608.8 1215.4 L1609.38 1215.4 L1609.97 1215.4 L1610.55 1215.4 L1611.14 1215.4 L1611.73 1215.4 L1612.31 1215.4 L1612.9 1215.4 L1613.49 1215.4 L1614.07 1215.4 L1614.66 1215.4 L1615.25 1215.4 L1615.83 1215.4 L1616.42 1215.4 L1617.01 1215.4 L1617.59 1215.4 L1618.18 1215.4 L1618.76 1215.4 L1619.35 1215.4 L1619.94 1215.4 L1620.52 1215.4 L1621.11 1215.4 L1621.7 1215.4 L1622.28 1215.4 L1622.87 1215.4 L1623.46 1215.4 L1624.04 1215.4 L1624.63 1215.4 L1625.22 1215.4 L1625.8 1215.4 L1626.39 1215.4 L1626.97 1215.4 L1627.56 1215.4 L1628.15 1215.4 L1628.73 1215.4 L1629.32 1215.4 L1629.91 1215.4 L1630.49 1215.4 L1631.08 1215.4 L1631.67 1215.4 L1632.25 1215.4 L1632.84 1215.4 L1633.42 1215.4 L1634.01 1215.4 L1634.6 1215.4 L1635.18 1215.4 L1635.77 1215.4 L1636.36 1215.4 L1636.94 1215.4 L1637.53 1215.4 L1638.12 1215.4 L1638.7 1215.4 L1639.29 1215.4 L1639.88 1215.4 L1640.46 1215.4 L1641.05 1215.4 L1641.63 1215.4 L1642.22 1215.4 L1642.81 1215.4 L1643.39 1215.4 L1643.98 1215.4 L1644.57 1215.4 L1645.15 1215.4 L1645.74 1215.4 L1646.33 1215.4 L1646.91 1215.4 L1647.5 1215.4 L1648.09 1215.4 L1648.67 1215.4 L1649.26 1215.4 L1649.84 1215.4 L1650.43 1215.4 L1651.02 1215.4 L1651.6 1215.4 L1652.19 1215.4 L1652.78 1215.4 L1653.36 1215.4 L1653.95 1215.4 L1654.54 1215.4 L1655.12 1215.4 L1655.71 1215.4 L1656.29 1215.4 L1656.88 1215.4 L1657.47 1215.4 L1658.05 1215.4 L1658.64 1215.4 L1659.23 1215.4 L1659.81 1215.4 L1660.4 1215.4 L1660.99 1215.4 L1661.57 1215.4 L1662.16 1215.4 L1662.75 1215.4 L1663.33 1215.4 L1663.92 1215.4 L1664.5 1215.4 L1665.09 1215.4 L1665.68 1215.4 L1666.26 1215.4 L1666.85 1215.4 L1667.44 1215.4 L1668.02 1215.4 L1668.61 1215.4 L1669.2 1215.4 L1669.78 1215.4 L1670.37 1215.4 L1670.96 1215.4 L1671.54 1215.4 L1672.13 1215.4 L1672.71 1215.4 L1673.3 1215.4 L1673.89 1215.4 L1674.47 1215.4 L1675.06 1215.4 L1675.65 1215.4 L1676.23 1215.4 L1676.82 1215.4 L1677.41 1215.4 L1677.99 1215.4 L1678.58 1215.4 L1679.17 1215.4 L1679.75 1215.4 L1680.34 1215.4 L1680.92 1215.4 L1681.51 1215.4 L1682.1 1215.4 L1682.68 1215.4 L1683.27 1215.4 L1683.86 1215.4 L1684.44 1215.4 L1685.03 1215.4 L1685.62 1215.4 L1686.2 1215.4 L1686.79 1215.4 L1687.37 1215.4 L1687.96 1215.4 L1688.55 1215.4 L1689.13 1215.4 L1689.72 1215.4 L1690.31 1215.4 L1690.89 1215.4 L1691.48 1215.4 L1692.07 1215.4 L1692.65 1215.4 L1693.24 1215.4 L1693.83 1215.4 L1694.41 1215.4 L1695 1215.4 L1695.58 1215.4 L1696.17 1215.4 L1696.76 1215.4 L1697.34 1215.4 L1697.93 1215.4 L1698.52 1215.4 L1699.1 1215.4 L1699.69 1215.4 L1700.28 1215.4 L1700.86 1215.4 L1701.45 1215.4 L1702.04 1215.4 L1702.62 1215.4 L1703.21 1215.4 L1703.79 1215.4 L1704.38 1215.4 L1704.97 1215.4 L1705.55 1215.4 L1706.14 1215.4 L1706.73 1215.4 L1707.31 1215.4 L1707.9 1215.4 L1708.49 1215.4 L1709.07 1215.4 L1709.66 1215.4 L1710.24 1215.4 L1710.83 1215.4 L1711.42 1215.4 L1712 1215.4 L1712.59 1215.4 L1713.18 1215.4 L1713.76 1215.4 L1714.35 1215.4 L1714.94 1215.4 L1715.52 1215.4 L1716.11 1215.4 L1716.7 1215.4 L1717.28 1215.4 L1717.87 1215.4 L1718.45 1215.4 L1719.04 1215.4 L1719.63 1215.4 L1720.21 1215.4 L1720.8 1215.4 L1721.39 1215.4 L1721.97 1215.4 L1722.56 1215.4 L1723.15 1215.4 L1723.73 1215.4 L1724.32 1215.4 L1724.91 1215.4 L1725.49 1215.4 L1726.08 1215.4 L1726.66 1215.4 L1727.25 1215.4 L1727.84 1215.4 L1728.42 1215.4 L1729.01 1215.4 L1729.6 1215.4 L1730.18 1215.4 L1730.77 1215.4 L1731.36 1215.4 L1731.94 1215.4 L1732.53 1215.4 L1733.11 1215.4 L1733.7 1215.4 L1734.29 1215.4 L1734.87 1215.4 L1735.46 1215.4 L1736.05 1215.4 L1736.63 1215.4 L1737.22 1215.4 L1737.81 1215.4 L1738.39 1215.4 L1738.98 1215.4 L1739.57 1215.4 L1740.15 1215.4 L1740.74 1215.4 L1741.32 1215.4 L1741.91 1215.4 L1742.5 1215.4 L1743.08 1215.4 L1743.67 1215.4 L1744.26 1215.4 L1744.84 1215.4 L1745.43 1215.4 L1746.02 1215.4 L1746.6 1215.4 L1747.19 1215.4 L1747.78 1215.4 L1748.36 1215.4 L1748.95 1215.4 L1749.53 1215.4 L1750.12 1215.4 L1750.71 1215.4 L1751.29 1215.4 L1751.88 1215.4 L1752.47 1215.4 L1753.05 1215.4 L1753.64 1215.4 L1754.23 1215.4 L1754.81 1215.4 L1755.4 1215.4 L1755.99 1215.4 L1756.57 1215.4 L1757.16 1215.4 L1757.74 1215.4 L1758.33 1215.4 L1758.92 1215.4 L1759.5 1215.4 L1760.09 1215.4 L1760.68 1215.4 L1761.26 1215.4 L1761.85 1215.4 L1762.44 1215.4 L1763.02 1215.4 L1763.61 1215.4 L1764.19 1215.4 L1764.78 1215.4 L1765.37 1215.4 L1765.95 1215.4 L1766.54 1215.4 L1767.13 1215.4 L1767.71 1215.4 L1768.3 1215.4 L1768.89 1215.4 L1769.47 1215.4 L1770.06 1215.4 L1770.65 1215.4 L1771.23 1215.4 L1771.82 1215.4 L1772.4 1215.4 L1772.99 1215.4 L1773.58 1215.4 L1774.16 1215.4 L1774.75 1215.4 L1775.34 1215.4 L1775.92 1215.4 L1776.51 1215.4 L1777.1 1215.4 L1777.68 1215.4 L1778.27 1215.4 L1778.86 1215.4 L1779.44 1215.4 L1780.03 1215.4 L1780.61 1215.4 L1781.2 1215.4 L1781.79 1215.4 L1782.37 1215.4 L1782.96 1215.4 L1783.55 1215.4 L1784.13 1215.4 L1784.72 1215.4 L1785.31 1215.4 L1785.89 1215.4 L1786.48 1215.4 L1787.06 1215.4 L1787.65 1215.4 L1788.24 1215.4 L1788.82 1215.4 L1789.41 1215.4 L1790 1215.4 L1790.58 1215.4 L1791.17 1215.4 L1791.76 1215.4 L1792.34 1215.4 L1792.93 1215.4 L1793.52 1215.4 L1794.1 1215.4 L1794.69 1215.4 L1795.27 1215.4 L1795.86 1215.4 L1796.45 1215.4 L1797.03 1215.4 L1797.62 1215.4 L1798.21 1215.4 L1798.79 1215.4 L1799.38 1215.4 L1799.97 1215.4 L1800.55 1215.4 L1801.14 1215.4 L1801.73 1215.4 L1802.31 1215.4 L1802.9 1215.4 L1803.48 1215.4 L1804.07 1215.4 L1804.66 1215.4 L1805.24 1215.4 L1805.83 1215.4 L1806.42 1215.4 L1807 1215.4 L1807.59 1215.4 L1808.18 1215.4 L1808.76 1215.4 L1809.35 1215.4 L1809.94 1215.4 L1810.52 1215.4 L1811.11 1215.4 L1811.69 1215.4 L1812.28 1215.4 L1812.87 1215.4 L1813.45 1215.4 L1814.04 1215.4 L1814.63 1215.4 L1815.21 1215.4 L1815.8 1215.4 L1816.39 1215.4 L1816.97 1215.4 L1817.56 1215.4 L1818.14 1215.4 L1818.73 1215.4 L1819.32 1215.4 L1819.9 1215.4 L1820.49 1215.4 L1821.08 1215.4 L1821.66 1215.4 L1822.25 1215.4 L1822.84 1215.4 L1823.42 1215.4 L1824.01 1215.4 L1824.6 1215.4 L1825.18 1215.4 L1825.77 1215.4 L1826.35 1215.4 L1826.94 1215.4 L1827.53 1215.4 L1828.11 1215.4 L1828.7 1215.4 L1829.29 1215.4 L1829.87 1215.4 L1830.46 1215.4 L1831.05 1215.4 L1831.63 1215.4 L1832.22 1215.4 L1832.81 1215.4 L1833.39 1215.4 L1833.98 1215.4 L1834.56 1215.4 L1835.15 1215.4 L1835.74 1215.4 L1836.32 1215.4 L1836.91 1215.4 L1837.5 1215.4 L1838.08 1215.4 L1838.67 1215.4 L1839.26 1215.4 L1839.84 1215.4 L1840.43 1215.4 L1841.01 1215.4 L1841.6 1215.4 L1842.19 1215.4 L1842.77 1215.4 L1843.36 1215.4 L1843.95 1215.4 L1844.53 1215.4 L1845.12 1215.4 L1845.71 1215.4 L1846.29 1215.4 L1846.88 1215.4 L1847.47 1215.4 L1848.05 1215.4 L1848.64 1215.4 L1849.22 1215.4 L1849.81 1215.4 L1850.4 1215.4 L1850.98 1215.4 L1851.57 1215.4 L1852.16 1215.4 L1852.74 1215.4 L1853.33 1215.4 L1853.92 1215.4 L1854.5 1215.4 L1855.09 1215.4 L1855.68 1215.4 L1856.26 1215.4 L1856.85 1215.4 L1857.43 1215.4 L1858.02 1215.4 L1858.61 1215.4 L1859.19 1215.4 L1859.78 1215.4 L1860.37 1215.4 L1860.95 1215.4 L1861.54 1215.4 L1862.13 1215.4 L1862.71 1215.4 L1863.3 1215.4 L1863.88 1215.4 L1864.47 1215.4 L1865.06 1215.4 L1865.64 1215.4 L1866.23 1215.4 L1866.82 1215.4 L1867.4 1215.4 L1867.99 1215.4 L1868.58 1215.4 L1869.16 1215.4 L1869.75 1215.4 L1870.34 1215.4 L1870.92 1215.4 L1871.51 1215.4 L1872.09 1215.4 L1872.68 1215.4 L1873.27 1215.4 L1873.85 1215.4 L1874.44 1215.4 L1875.03 1215.4 L1875.61 1215.4 L1876.2 1215.4 L1876.79 1215.4 L1877.37 1215.4 L1877.96 1215.4 L1878.55 1215.4 L1879.13 1215.4 L1879.72 1215.4 L1880.3 1215.4 L1880.89 1215.4 L1881.48 1215.4 L1882.06 1215.4 L1882.65 1215.4 L1883.24 1215.4 L1883.82 1215.4 L1884.41 1215.4 L1885 1215.4 L1885.58 1215.4 L1886.17 1215.4 L1886.76 1215.4 L1887.34 1215.4 L1887.93 1215.4 L1888.51 1215.4 L1889.1 1215.4 L1889.69 1215.4 L1890.27 1215.4 L1890.86 1215.4 L1891.45 1215.4 L1892.03 1215.4 L1892.62 1215.4 L1893.21 1215.4 L1893.79 1215.4 L1894.38 1215.4 L1894.96 1215.4 L1895.55 1215.4 L1896.14 1215.4 L1896.72 1215.4 L1897.31 1215.4 L1897.9 1215.4 L1898.48 1215.4 L1899.07 1215.4 L1899.66 1215.4 L1900.24 1215.4 L1900.83 1215.4 L1901.42 1215.4 L1902 1215.4 L1902.59 1215.4 L1903.17 1215.4 L1903.76 1215.4 L1904.35 1215.4 L1904.93 1215.4 L1905.52 1215.4 L1906.11 1215.4 L1906.69 1215.4 L1907.28 1215.4 L1907.87 1215.4 L1908.45 1215.4 L1909.04 1215.4 L1909.63 1215.4 L1910.21 1215.4 L1910.8 1215.4 L1911.38 1215.4 L1911.97 1215.4 L1912.56 1215.4 L1913.14 1215.4 L1913.73 1215.4 L1914.32 1215.4 L1914.9 1215.4 L1915.49 1215.4 L1916.08 1215.4 L1916.66 1215.4 L1917.25 1215.4 L1917.83 1215.4 L1918.42 1215.4 L1919.01 1215.4 L1919.59 1215.4 L1920.18 1215.4 L1920.77 1215.4 L1921.35 1215.4 L1921.94 1215.4 L1922.53 1215.4 L1923.11 1215.4 L1923.7 1215.4 L1924.29 1215.4 L1924.87 1215.4 L1925.46 1215.4 L1926.04 1215.4 L1926.63 1215.4 L1927.22 1215.4 L1927.8 1215.4 L1928.39 1215.4 L1928.98 1215.4 L1929.56 1215.4 L1930.15 1215.4 L1930.74 1215.4 L1931.32 1215.4 L1931.91 1215.4 L1932.5 1215.4 L1933.08 1215.4 L1933.67 1215.4 L1934.25 1215.4 L1934.84 1215.4 L1935.43 1215.4 L1936.01 1215.4 L1936.6 1215.4 L1937.19 1215.4 L1937.77 1215.4 L1938.36 1215.4 L1938.95 1215.4 L1939.53 1215.4 L1940.12 1215.4 L1940.71 1215.4 L1941.29 1215.4 L1941.88 1215.4 L1942.46 1215.4 L1943.05 1215.4 L1943.64 1215.4 L1944.22 1215.4 L1944.81 1215.4 L1945.4 1215.4 L1945.98 1215.4 L1946.57 1215.4 L1947.16 1215.4 L1947.74 1215.4 L1948.33 1215.4 L1948.91 1215.4 L1949.5 1215.4 L1950.09 1215.4 L1950.67 1215.4 L1951.26 1215.4 L1951.85 1215.4 L1952.43 1215.4 L1953.02 1215.4 L1953.61 1215.4 L1954.19 1215.4 L1954.78 1215.4 L1955.37 1215.4 L1955.95 1215.4 L1956.54 1215.4 L1957.12 1215.4 L1957.71 1215.4 L1958.3 1215.4 L1958.88 1215.4 L1959.47 1215.4 L1960.06 1215.4 L1960.64 1215.4 L1961.23 1215.4 L1961.82 1215.4 L1962.4 1215.4 L1962.99 1215.4 L1963.58 1215.4 L1964.16 1215.4 L1964.75 1215.4 L1965.33 1215.4 L1965.92 1215.4 L1966.51 1215.4 L1967.09 1215.4 L1967.68 1215.4 L1968.27 1215.4 L1968.85 1215.4 L1969.44 1215.4 L1970.03 1215.4 L1970.61 1215.4 L1971.2 1215.4 L1971.78 1215.4 L1972.37 1215.4 L1972.96 1215.4 L1973.54 1215.4 L1974.13 1215.4 L1974.72 1215.4 L1975.3 1215.4 L1975.89 1215.4 L1976.48 1215.4 L1977.06 1215.4 L1977.65 1215.4 L1978.24 1215.4 L1978.82 1215.4 L1979.41 1215.4 L1979.99 1215.4 L1980.58 1215.4 L1981.17 1215.4 L1981.75 1215.4 L1982.34 1215.4 L1982.93 1215.4 L1983.51 1215.4 L1984.1 1215.4 L1984.69 1215.4 L1985.27 1215.4 L1985.86 1215.4 L1986.45 1215.4 L1987.03 1215.4 L1987.62 1215.4 L1988.2 1215.4 L1988.79 1215.4 L1989.38 1215.4 L1989.96 1215.4 L1990.55 1215.4 L1991.14 1215.4 L1991.72 1215.4 L1992.31 1215.4 L1992.9 1215.4 L1993.48 1215.4 L1994.07 1215.4 L1994.65 1215.4 L1995.24 1215.4 L1995.83 1215.4 L1996.41 1215.4 L1997 1215.4 L1997.59 1215.4 L1998.17 1215.4 L1998.76 1215.4 L1999.35 1215.4 L1999.93 1215.4 L2000.52 1215.4 L2001.11 1215.4 L2001.69 1215.4 L2002.28 1215.4 L2002.86 1215.4 L2003.45 1215.4 L2004.04 1215.4 L2004.62 1215.4 L2005.21 1215.4 L2005.8 1215.4 L2006.38 1215.4 L2006.97 1215.4 L2007.56 1215.4 L2008.14 1215.4 L2008.73 1215.4 L2009.32 1215.4 L2009.9 1215.4 L2010.49 1215.4 L2011.07 1215.4 L2011.66 1215.4 L2012.25 1215.4 L2012.83 1215.4 L2013.42 1215.4 L2014.01 1215.4 L2014.59 1215.4 L2015.18 1215.4 L2015.77 1215.4 L2016.35 1215.4 L2016.94 1215.4 L2017.53 1215.4 L2018.11 1215.4 L2018.7 1215.4 L2019.28 1215.4 L2019.87 1215.4 L2020.46 1215.4 L2021.04 1215.4 L2021.63 1215.4 L2022.22 1215.4 L2022.8 1215.4 L2023.39 1215.4 L2023.98 1215.4 L2024.56 1215.4 L2025.15 1215.4 L2025.73 1215.4 L2026.32 1215.4 L2026.91 1215.4 L2027.49 1215.4 L2028.08 1215.4 L2028.67 1215.4 L2029.25 1215.4 L2029.84 1215.4 L2030.43 1215.4 L2031.01 1215.4 L2031.6 1215.4 L2032.19 1215.4 L2032.77 1215.4 L2033.36 1215.4 L2033.94 1215.4 L2034.53 1215.4 L2035.12 1215.4 L2035.7 1215.4 L2036.29 1215.4 L2036.88 1215.4 L2037.46 1215.4 L2038.05 1215.4 L2038.64 1215.4 L2039.22 1215.4 L2039.81 1215.4 L2040.4 1215.4 L2040.98 1215.4 L2041.57 1215.4 L2042.15 1215.4 L2042.74 1215.4 L2043.33 1215.4 L2043.91 1215.4 L2044.5 1215.4 L2045.09 1215.4 L2045.67 1215.4 L2046.26 1215.4 L2046.85 1215.4 L2047.43 1215.4 L2048.02 1215.4 L2048.6 1215.4 L2049.19 1215.4 L2049.78 1215.4 L2050.36 1215.4 L2050.95 1215.4 L2051.54 1215.4 L2052.12 1215.4 L2052.71 1215.4 L2053.3 1215.4 L2053.88 1215.4 L2054.47 1215.4 L2055.06 1215.4 L2055.64 1215.4 L2056.23 1215.4 L2056.81 1215.4 L2057.4 1215.4 L2057.99 1215.4 L2058.57 1215.4 L2059.16 1215.4 L2059.75 1215.4 L2060.33 1215.4 L2060.92 1215.4 L2061.51 1215.4 L2062.09 1215.4 L2062.68 1215.4 L2063.27 1215.4 L2063.85 1215.4 L2064.44 1215.4 L2065.02 1215.4 L2065.61 1215.4 L2066.2 1215.4 L2066.78 1215.4 L2067.37 1215.4 L2067.96 1215.4 L2068.54 1215.4 L2069.13 1215.4 L2069.72 1215.4 L2070.3 1215.4 L2070.89 1215.4 L2071.48 1215.4 L2072.06 1215.4 L2072.65 1215.4 L2073.23 1215.4 L2073.82 1215.4 L2074.41 1215.4 L2074.99 1215.4 L2075.58 1215.4 L2076.17 1215.4 L2076.75 1215.4 L2077.34 1215.4 L2077.93 1215.4 L2078.51 1215.4 L2079.1 1215.4 L2079.68 1215.4 L2080.27 1215.4 L2080.86 1215.4 L2081.44 1215.4 L2082.03 1215.4 L2082.62 1215.4 L2083.2 1215.4 L2083.79 1215.4 L2084.38 1215.4 L2084.96 1215.4 L2085.55 1215.4 L2086.14 1215.4 L2086.72 1215.4 L2087.31 1215.4 L2087.89 1215.4 L2088.48 1215.4 L2089.07 1215.4 L2089.65 1215.4 L2090.24 1215.4 L2090.83 1215.4 L2091.41 1215.4 L2092 1215.4 L2092.59 1215.4 L2093.17 1215.4 L2093.76 1215.4 L2094.35 1215.4 L2094.93 1215.4 L2095.52 1215.4 L2096.1 1215.4 L2096.69 1215.4 L2097.28 1215.4 L2097.86 1215.4 L2098.45 1215.4 L2099.04 1215.4 L2099.62 1215.4 L2100.21 1215.4 L2100.8 1215.4 L2101.38 1215.4 L2101.97 1215.4 L2102.55 1215.4 L2103.14 1215.4 L2103.73 1215.4 L2104.31 1215.4 L2104.9 1215.4 L2105.49 1215.4 L2106.07 1215.4 L2106.66 1215.4 L2107.25 1215.4 L2107.83 1215.4 L2108.42 1215.4 L2109.01 1215.4 L2109.59 1215.4 L2110.18 1215.4 L2110.76 1215.4 L2111.35 1215.4 L2111.94 1215.4 L2112.52 1215.4 L2113.11 1215.4 L2113.7 1215.4 L2114.28 1215.4 L2114.87 1215.4 L2115.46 1215.4 L2116.04 1215.4 L2116.63 1215.4 L2117.22 1215.4 L2117.8 1215.4 L2118.39 1215.4 L2118.97 1215.4 L2119.56 1215.4 L2120.15 1215.4 L2120.73 1215.4 L2121.32 1215.4 L2121.91 1215.4 L2122.49 1215.4 L2123.08 1215.4 L2123.67 1215.4 L2124.25 1215.4 L2124.84 1215.4 L2125.42 1215.4 L2126.01 1215.4 L2126.6 1215.4 L2127.18 1215.4 L2127.77 1215.4 L2128.36 1215.4 L2128.94 1215.4 L2129.53 1215.4 L2130.12 1215.4 L2130.7 1215.4 L2131.29 1215.4 L2131.88 1215.4 L2132.46 1215.4 L2133.05 1215.4 L2133.63 1215.4 L2134.22 1215.4 L2134.81 1215.4 L2135.39 1215.4 L2135.98 1215.4 L2136.57 1215.4 L2137.15 1215.4 L2137.74 1215.4 L2138.33 1215.4 L2138.91 1215.4 L2139.5 1215.4 L2140.09 1215.4 L2140.67 1215.4 L2141.26 1215.4 L2141.84 1215.4 L2142.43 1215.4 L2143.02 1215.4 L2143.6 1215.4 L2144.19 1215.4 L2144.78 1215.4 L2145.36 1215.4 L2145.95 1215.4 L2146.54 1215.4 L2147.12 1215.4 L2147.71 1215.4 L2148.3 1215.4 L2148.88 1215.4 L2149.47 1215.4 L2150.05 1215.4 L2150.64 1215.4 L2151.23 1215.4 L2151.81 1215.4 L2152.4 1215.4 L2152.99 1215.4 L2153.57 1215.4 L2154.16 1215.4 L2154.75 1215.4 L2155.33 1215.4 L2155.92 1215.4 L2156.5 1215.4 L2157.09 1215.4 L2157.68 1215.4 L2158.26 1215.4 L2158.26 1215.29 L2157.68 1215.29 L2157.09 1215.29 L2156.5 1215.29 L2155.92 1215.29 L2155.33 1215.29 L2154.75 1215.29 L2154.16 1215.29 L2153.57 1215.29 L2152.99 1215.29 L2152.4 1215.29 L2151.81 1215.29 L2151.23 1215.29 L2150.64 1215.29 L2150.05 1215.29 L2149.47 1215.29 L2148.88 1215.29 L2148.3 1215.29 L2147.71 1215.29 L2147.12 1215.29 L2146.54 1215.29 L2145.95 1215.29 L2145.36 1215.29 L2144.78 1215.29 L2144.19 1215.29 L2143.6 1215.29 L2143.02 1215.29 L2142.43 1215.29 L2141.84 1215.29 L2141.26 1215.29 L2140.67 1215.29 L2140.09 1215.29 L2139.5 1215.29 L2138.91 1215.29 L2138.33 1215.29 L2137.74 1215.29 L2137.15 1215.29 L2136.57 1215.29 L2135.98 1215.29 L2135.39 1215.29 L2134.81 1215.29 L2134.22 1215.29 L2133.63 1215.29 L2133.05 1215.29 L2132.46 1215.29 L2131.88 1215.29 L2131.29 1215.29 L2130.7 1215.29 L2130.12 1215.29 L2129.53 1215.29 L2128.94 1215.29 L2128.36 1215.29 L2127.77 1215.29 L2127.18 1215.29 L2126.6 1215.29 L2126.01 1215.29 L2125.42 1215.29 L2124.84 1215.29 L2124.25 1215.29 L2123.67 1215.29 L2123.08 1215.29 L2122.49 1215.29 L2121.91 1215.29 L2121.32 1215.29 L2120.73 1215.29 L2120.15 1215.29 L2119.56 1215.29 L2118.97 1215.29 L2118.39 1215.29 L2117.8 1215.29 L2117.22 1215.29 L2116.63 1215.29 L2116.04 1215.29 L2115.46 1215.29 L2114.87 1215.29 L2114.28 1215.29 L2113.7 1215.29 L2113.11 1215.29 L2112.52 1215.29 L2111.94 1215.29 L2111.35 1215.29 L2110.76 1215.29 L2110.18 1215.29 L2109.59 1215.29 L2109.01 1215.29 L2108.42 1215.29 L2107.83 1215.29 L2107.25 1215.29 L2106.66 1215.29 L2106.07 1215.29 L2105.49 1215.29 L2104.9 1215.29 L2104.31 1215.29 L2103.73 1215.29 L2103.14 1215.29 L2102.55 1215.29 L2101.97 1215.29 L2101.38 1215.29 L2100.8 1215.29 L2100.21 1215.29 L2099.62 1215.29 L2099.04 1215.29 L2098.45 1215.29 L2097.86 1215.29 L2097.28 1215.29 L2096.69 1215.29 L2096.1 1215.29 L2095.52 1215.29 L2094.93 1215.29 L2094.35 1215.29 L2093.76 1215.29 L2093.17 1215.29 L2092.59 1215.29 L2092 1215.29 L2091.41 1215.29 L2090.83 1215.29 L2090.24 1215.29 L2089.65 1215.29 L2089.07 1215.29 L2088.48 1215.29 L2087.89 1215.29 L2087.31 1215.29 L2086.72 1215.29 L2086.14 1215.29 L2085.55 1215.29 L2084.96 1215.29 L2084.38 1215.29 L2083.79 1215.29 L2083.2 1215.29 L2082.62 1215.29 L2082.03 1215.29 L2081.44 1215.29 L2080.86 1215.29 L2080.27 1215.29 L2079.68 1215.29 L2079.1 1215.29 L2078.51 1215.29 L2077.93 1215.29 L2077.34 1215.29 L2076.75 1215.29 L2076.17 1215.29 L2075.58 1215.29 L2074.99 1215.29 L2074.41 1215.29 L2073.82 1215.29 L2073.23 1215.29 L2072.65 1215.29 L2072.06 1215.29 L2071.48 1215.29 L2070.89 1215.29 L2070.3 1215.29 L2069.72 1215.29 L2069.13 1215.29 L2068.54 1215.29 L2067.96 1215.29 L2067.37 1215.29 L2066.78 1215.29 L2066.2 1215.29 L2065.61 1215.29 L2065.02 1215.29 L2064.44 1215.29 L2063.85 1215.29 L2063.27 1215.29 L2062.68 1215.29 L2062.09 1215.29 L2061.51 1215.29 L2060.92 1215.29 L2060.33 1215.29 L2059.75 1215.29 L2059.16 1215.29 L2058.57 1215.29 L2057.99 1215.29 L2057.4 1215.29 L2056.81 1215.29 L2056.23 1215.29 L2055.64 1215.29 L2055.06 1215.29 L2054.47 1215.29 L2053.88 1215.29 L2053.3 1215.29 L2052.71 1215.29 L2052.12 1215.29 L2051.54 1215.29 L2050.95 1215.29 L2050.36 1215.29 L2049.78 1215.29 L2049.19 1215.29 L2048.6 1215.29 L2048.02 1215.29 L2047.43 1215.29 L2046.85 1215.29 L2046.26 1215.29 L2045.67 1215.29 L2045.09 1215.29 L2044.5 1215.29 L2043.91 1215.29 L2043.33 1215.29 L2042.74 1215.29 L2042.15 1215.29 L2041.57 1215.29 L2040.98 1215.29 L2040.4 1215.29 L2039.81 1215.29 L2039.22 1215.29 L2038.64 1215.29 L2038.05 1215.29 L2037.46 1215.29 L2036.88 1215.29 L2036.29 1215.29 L2035.7 1215.29 L2035.12 1215.29 L2034.53 1215.29 L2033.94 1215.29 L2033.36 1215.29 L2032.77 1215.29 L2032.19 1215.29 L2031.6 1215.29 L2031.01 1215.29 L2030.43 1215.29 L2029.84 1215.29 L2029.25 1215.29 L2028.67 1215.29 L2028.08 1215.29 L2027.49 1215.29 L2026.91 1215.29 L2026.32 1215.29 L2025.73 1215.29 L2025.15 1215.29 L2024.56 1215.29 L2023.98 1215.29 L2023.39 1215.29 L2022.8 1215.29 L2022.22 1215.29 L2021.63 1215.29 L2021.04 1215.29 L2020.46 1215.29 L2019.87 1215.29 L2019.28 1215.29 L2018.7 1215.29 L2018.11 1215.29 L2017.53 1215.29 L2016.94 1215.29 L2016.35 1215.29 L2015.77 1215.29 L2015.18 1215.29 L2014.59 1215.29 L2014.01 1215.29 L2013.42 1215.29 L2012.83 1215.29 L2012.25 1215.29 L2011.66 1215.29 L2011.07 1215.29 L2010.49 1215.29 L2009.9 1215.29 L2009.32 1215.29 L2008.73 1215.29 L2008.14 1215.29 L2007.56 1215.29 L2006.97 1215.29 L2006.38 1215.29 L2005.8 1215.29 L2005.21 1215.29 L2004.62 1215.29 L2004.04 1215.29 L2003.45 1215.29 L2002.86 1215.29 L2002.28 1215.29 L2001.69 1215.29 L2001.11 1215.29 L2000.52 1215.29 L1999.93 1215.29 L1999.35 1215.29 L1998.76 1215.29 L1998.17 1215.29 L1997.59 1215.29 L1997 1215.29 L1996.41 1215.29 L1995.83 1215.29 L1995.24 1215.29 L1994.65 1215.29 L1994.07 1215.29 L1993.48 1215.29 L1992.9 1215.29 L1992.31 1215.29 L1991.72 1215.29 L1991.14 1215.29 L1990.55 1215.29 L1989.96 1215.29 L1989.38 1215.29 L1988.79 1215.29 L1988.2 1215.29 L1987.62 1215.29 L1987.03 1215.29 L1986.45 1215.29 L1985.86 1215.29 L1985.27 1215.29 L1984.69 1215.29 L1984.1 1215.29 L1983.51 1215.29 L1982.93 1215.29 L1982.34 1215.29 L1981.75 1215.29 L1981.17 1215.29 L1980.58 1215.29 L1979.99 1215.29 L1979.41 1215.29 L1978.82 1215.29 L1978.24 1215.29 L1977.65 1215.29 L1977.06 1215.29 L1976.48 1215.29 L1975.89 1215.29 L1975.3 1215.29 L1974.72 1215.29 L1974.13 1215.29 L1973.54 1215.29 L1972.96 1215.29 L1972.37 1215.29 L1971.78 1215.29 L1971.2 1215.29 L1970.61 1215.29 L1970.03 1215.29 L1969.44 1215.29 L1968.85 1215.29 L1968.27 1215.29 L1967.68 1215.29 L1967.09 1215.29 L1966.51 1215.29 L1965.92 1215.29 L1965.33 1215.29 L1964.75 1215.29 L1964.16 1215.29 L1963.58 1215.29 L1962.99 1215.29 L1962.4 1215.29 L1961.82 1215.29 L1961.23 1215.29 L1960.64 1215.29 L1960.06 1215.29 L1959.47 1215.29 L1958.88 1215.29 L1958.3 1215.29 L1957.71 1215.29 L1957.12 1215.29 L1956.54 1215.29 L1955.95 1215.29 L1955.37 1215.29 L1954.78 1215.29 L1954.19 1215.29 L1953.61 1215.29 L1953.02 1215.29 L1952.43 1215.29 L1951.85 1215.29 L1951.26 1215.29 L1950.67 1215.29 L1950.09 1215.29 L1949.5 1215.29 L1948.91 1215.29 L1948.33 1215.29 L1947.74 1215.29 L1947.16 1215.29 L1946.57 1215.29 L1945.98 1215.29 L1945.4 1215.29 L1944.81 1215.29 L1944.22 1215.29 L1943.64 1215.29 L1943.05 1215.29 L1942.46 1215.29 L1941.88 1215.29 L1941.29 1215.29 L1940.71 1215.29 L1940.12 1215.29 L1939.53 1215.29 L1938.95 1215.29 L1938.36 1215.29 L1937.77 1215.29 L1937.19 1215.29 L1936.6 1215.29 L1936.01 1215.29 L1935.43 1215.29 L1934.84 1215.29 L1934.25 1215.29 L1933.67 1215.29 L1933.08 1215.29 L1932.5 1215.29 L1931.91 1215.29 L1931.32 1215.29 L1930.74 1215.29 L1930.15 1215.29 L1929.56 1215.29 L1928.98 1215.29 L1928.39 1215.29 L1927.8 1215.29 L1927.22 1215.29 L1926.63 1215.29 L1926.04 1215.29 L1925.46 1215.29 L1924.87 1215.29 L1924.29 1215.29 L1923.7 1215.29 L1923.11 1215.29 L1922.53 1215.29 L1921.94 1215.29 L1921.35 1215.29 L1920.77 1215.29 L1920.18 1215.29 L1919.59 1215.29 L1919.01 1215.29 L1918.42 1215.29 L1917.83 1215.29 L1917.25 1215.29 L1916.66 1215.29 L1916.08 1215.29 L1915.49 1215.29 L1914.9 1215.29 L1914.32 1215.29 L1913.73 1215.29 L1913.14 1215.29 L1912.56 1215.29 L1911.97 1215.29 L1911.38 1215.29 L1910.8 1215.29 L1910.21 1215.29 L1909.63 1215.29 L1909.04 1215.29 L1908.45 1215.29 L1907.87 1215.29 L1907.28 1215.29 L1906.69 1215.29 L1906.11 1215.29 L1905.52 1215.29 L1904.93 1215.29 L1904.35 1215.29 L1903.76 1215.29 L1903.17 1215.29 L1902.59 1215.29 L1902 1215.29 L1901.42 1215.29 L1900.83 1215.29 L1900.24 1215.29 L1899.66 1215.29 L1899.07 1215.29 L1898.48 1215.29 L1897.9 1215.29 L1897.31 1215.29 L1896.72 1215.29 L1896.14 1215.29 L1895.55 1215.29 L1894.96 1215.29 L1894.38 1215.29 L1893.79 1215.29 L1893.21 1215.29 L1892.62 1215.29 L1892.03 1215.29 L1891.45 1215.29 L1890.86 1215.29 L1890.27 1215.29 L1889.69 1215.29 L1889.1 1215.29 L1888.51 1215.29 L1887.93 1215.29 L1887.34 1215.29 L1886.76 1215.29 L1886.17 1215.29 L1885.58 1215.29 L1885 1215.29 L1884.41 1215.29 L1883.82 1215.29 L1883.24 1215.29 L1882.65 1215.29 L1882.06 1215.29 L1881.48 1215.29 L1880.89 1215.29 L1880.3 1215.29 L1879.72 1215.29 L1879.13 1215.29 L1878.55 1215.29 L1877.96 1215.29 L1877.37 1215.29 L1876.79 1215.29 L1876.2 1215.29 L1875.61 1215.29 L1875.03 1215.29 L1874.44 1215.29 L1873.85 1215.29 L1873.27 1215.29 L1872.68 1215.29 L1872.09 1215.29 L1871.51 1215.29 L1870.92 1215.29 L1870.34 1215.29 L1869.75 1215.29 L1869.16 1215.29 L1868.58 1215.29 L1867.99 1215.29 L1867.4 1215.29 L1866.82 1215.29 L1866.23 1215.29 L1865.64 1215.29 L1865.06 1215.29 L1864.47 1215.29 L1863.88 1215.29 L1863.3 1215.29 L1862.71 1215.29 L1862.13 1215.29 L1861.54 1215.29 L1860.95 1215.29 L1860.37 1215.29 L1859.78 1215.29 L1859.19 1215.29 L1858.61 1215.29 L1858.02 1215.29 L1857.43 1215.29 L1856.85 1215.29 L1856.26 1215.29 L1855.68 1215.29 L1855.09 1215.29 L1854.5 1215.29 L1853.92 1215.29 L1853.33 1215.29 L1852.74 1215.29 L1852.16 1215.29 L1851.57 1215.29 L1850.98 1215.29 L1850.4 1215.29 L1849.81 1215.29 L1849.22 1215.29 L1848.64 1215.29 L1848.05 1215.29 L1847.47 1215.29 L1846.88 1215.29 L1846.29 1215.29 L1845.71 1215.29 L1845.12 1215.29 L1844.53 1215.29 L1843.95 1215.29 L1843.36 1215.29 L1842.77 1215.29 L1842.19 1215.29 L1841.6 1215.29 L1841.01 1215.29 L1840.43 1215.29 L1839.84 1215.29 L1839.26 1215.29 L1838.67 1215.29 L1838.08 1215.29 L1837.5 1215.29 L1836.91 1215.29 L1836.32 1215.29 L1835.74 1215.29 L1835.15 1215.29 L1834.56 1215.29 L1833.98 1215.29 L1833.39 1215.29 L1832.81 1215.29 L1832.22 1215.29 L1831.63 1215.29 L1831.05 1215.29 L1830.46 1215.29 L1829.87 1215.29 L1829.29 1215.29 L1828.7 1215.29 L1828.11 1215.29 L1827.53 1215.29 L1826.94 1215.29 L1826.35 1215.29 L1825.77 1215.29 L1825.18 1215.29 L1824.6 1215.29 L1824.01 1215.29 L1823.42 1215.29 L1822.84 1215.29 L1822.25 1215.29 L1821.66 1215.29 L1821.08 1215.29 L1820.49 1215.29 L1819.9 1215.29 L1819.32 1215.29 L1818.73 1215.29 L1818.14 1215.29 L1817.56 1215.29 L1816.97 1215.29 L1816.39 1215.29 L1815.8 1215.29 L1815.21 1215.29 L1814.63 1215.29 L1814.04 1215.29 L1813.45 1215.29 L1812.87 1215.29 L1812.28 1215.29 L1811.69 1215.29 L1811.11 1215.29 L1810.52 1215.29 L1809.94 1215.29 L1809.35 1215.29 L1808.76 1215.29 L1808.18 1215.29 L1807.59 1215.29 L1807 1215.29 L1806.42 1215.29 L1805.83 1215.29 L1805.24 1215.29 L1804.66 1215.29 L1804.07 1215.29 L1803.48 1215.29 L1802.9 1215.29 L1802.31 1215.29 L1801.73 1215.29 L1801.14 1215.29 L1800.55 1215.29 L1799.97 1215.29 L1799.38 1215.29 L1798.79 1215.29 L1798.21 1215.29 L1797.62 1215.29 L1797.03 1215.29 L1796.45 1215.29 L1795.86 1215.29 L1795.27 1215.29 L1794.69 1215.29 L1794.1 1215.29 L1793.52 1215.29 L1792.93 1215.29 L1792.34 1215.29 L1791.76 1215.29 L1791.17 1215.29 L1790.58 1215.29 L1790 1215.29 L1789.41 1215.29 L1788.82 1215.29 L1788.24 1215.29 L1787.65 1215.29 L1787.06 1215.29 L1786.48 1215.29 L1785.89 1215.29 L1785.31 1215.29 L1784.72 1215.29 L1784.13 1215.29 L1783.55 1215.29 L1782.96 1215.29 L1782.37 1215.29 L1781.79 1215.29 L1781.2 1215.29 L1780.61 1215.29 L1780.03 1215.29 L1779.44 1215.29 L1778.86 1215.29 L1778.27 1215.29 L1777.68 1215.29 L1777.1 1215.29 L1776.51 1215.29 L1775.92 1215.29 L1775.34 1215.29 L1774.75 1215.29 L1774.16 1215.29 L1773.58 1215.29 L1772.99 1215.29 L1772.4 1215.29 L1771.82 1215.29 L1771.23 1215.29 L1770.65 1215.29 L1770.06 1215.29 L1769.47 1215.29 L1768.89 1215.29 L1768.3 1215.29 L1767.71 1215.29 L1767.13 1215.29 L1766.54 1215.29 L1765.95 1215.29 L1765.37 1215.29 L1764.78 1215.29 L1764.19 1215.29 L1763.61 1215.29 L1763.02 1215.29 L1762.44 1215.29 L1761.85 1215.29 L1761.26 1215.29 L1760.68 1215.29 L1760.09 1215.29 L1759.5 1215.29 L1758.92 1215.29 L1758.33 1215.29 L1757.74 1215.29 L1757.16 1215.29 L1756.57 1215.29 L1755.99 1215.29 L1755.4 1215.29 L1754.81 1215.29 L1754.23 1215.29 L1753.64 1215.29 L1753.05 1215.29 L1752.47 1215.29 L1751.88 1215.29 L1751.29 1215.29 L1750.71 1215.29 L1750.12 1215.29 L1749.53 1215.29 L1748.95 1215.29 L1748.36 1215.29 L1747.78 1215.29 L1747.19 1215.29 L1746.6 1215.29 L1746.02 1215.29 L1745.43 1215.29 L1744.84 1215.29 L1744.26 1215.29 L1743.67 1215.29 L1743.08 1215.29 L1742.5 1215.29 L1741.91 1215.29 L1741.32 1215.29 L1740.74 1215.29 L1740.15 1215.29 L1739.57 1215.29 L1738.98 1215.29 L1738.39 1215.29 L1737.81 1215.29 L1737.22 1215.29 L1736.63 1215.29 L1736.05 1215.29 L1735.46 1215.29 L1734.87 1215.29 L1734.29 1215.29 L1733.7 1215.29 L1733.11 1215.29 L1732.53 1215.29 L1731.94 1215.29 L1731.36 1215.29 L1730.77 1215.29 L1730.18 1215.29 L1729.6 1215.29 L1729.01 1215.29 L1728.42 1215.29 L1727.84 1215.29 L1727.25 1215.29 L1726.66 1215.29 L1726.08 1215.29 L1725.49 1215.29 L1724.91 1215.29 L1724.32 1215.29 L1723.73 1215.29 L1723.15 1215.29 L1722.56 1215.29 L1721.97 1215.29 L1721.39 1215.29 L1720.8 1215.29 L1720.21 1215.29 L1719.63 1215.29 L1719.04 1215.29 L1718.45 1215.29 L1717.87 1215.29 L1717.28 1215.29 L1716.7 1215.29 L1716.11 1215.29 L1715.52 1215.29 L1714.94 1215.29 L1714.35 1215.29 L1713.76 1215.29 L1713.18 1215.29 L1712.59 1215.29 L1712 1215.29 L1711.42 1215.29 L1710.83 1215.29 L1710.24 1215.29 L1709.66 1215.29 L1709.07 1215.29 L1708.49 1215.29 L1707.9 1215.29 L1707.31 1215.29 L1706.73 1215.29 L1706.14 1215.29 L1705.55 1215.29 L1704.97 1215.29 L1704.38 1215.29 L1703.79 1215.29 L1703.21 1215.29 L1702.62 1215.29 L1702.04 1215.29 L1701.45 1215.29 L1700.86 1215.29 L1700.28 1215.29 L1699.69 1215.29 L1699.1 1215.29 L1698.52 1215.29 L1697.93 1215.29 L1697.34 1215.29 L1696.76 1215.29 L1696.17 1215.29 L1695.58 1215.29 L1695 1215.29 L1694.41 1215.29 L1693.83 1215.29 L1693.24 1215.29 L1692.65 1215.29 L1692.07 1215.29 L1691.48 1215.29 L1690.89 1215.29 L1690.31 1215.29 L1689.72 1215.29 L1689.13 1215.29 L1688.55 1215.29 L1687.96 1215.29 L1687.37 1215.29 L1686.79 1215.29 L1686.2 1215.29 L1685.62 1215.29 L1685.03 1215.29 L1684.44 1215.29 L1683.86 1215.29 L1683.27 1215.29 L1682.68 1215.29 L1682.1 1215.29 L1681.51 1215.29 L1680.92 1215.29 L1680.34 1215.29 L1679.75 1215.29 L1679.17 1215.29 L1678.58 1215.29 L1677.99 1215.29 L1677.41 1215.29 L1676.82 1215.29 L1676.23 1215.29 L1675.65 1215.29 L1675.06 1215.29 L1674.47 1215.29 L1673.89 1215.29 L1673.3 1215.29 L1672.71 1215.29 L1672.13 1215.29 L1671.54 1215.29 L1670.96 1215.29 L1670.37 1215.29 L1669.78 1215.29 L1669.2 1215.29 L1668.61 1215.29 L1668.02 1215.29 L1667.44 1215.29 L1666.85 1215.29 L1666.26 1215.29 L1665.68 1215.29 L1665.09 1215.29 L1664.5 1215.29 L1663.92 1215.29 L1663.33 1215.29 L1662.75 1215.29 L1662.16 1215.29 L1661.57 1215.29 L1660.99 1215.29 L1660.4 1215.29 L1659.81 1215.29 L1659.23 1215.29 L1658.64 1215.29 L1658.05 1215.29 L1657.47 1215.29 L1656.88 1215.29 L1656.29 1215.29 L1655.71 1215.29 L1655.12 1215.29 L1654.54 1215.29 L1653.95 1215.29 L1653.36 1215.29 L1652.78 1215.29 L1652.19 1215.29 L1651.6 1215.29 L1651.02 1215.29 L1650.43 1215.29 L1649.84 1215.29 L1649.26 1215.29 L1648.67 1215.29 L1648.09 1215.29 L1647.5 1215.29 L1646.91 1215.29 L1646.33 1215.29 L1645.74 1215.29 L1645.15 1215.29 L1644.57 1215.29 L1643.98 1215.29 L1643.39 1215.29 L1642.81 1215.29 L1642.22 1215.29 L1641.63 1215.29 L1641.05 1215.29 L1640.46 1215.29 L1639.88 1215.29 L1639.29 1215.29 L1638.7 1215.29 L1638.12 1215.29 L1637.53 1215.29 L1636.94 1215.29 L1636.36 1215.29 L1635.77 1215.29 L1635.18 1215.29 L1634.6 1215.29 L1634.01 1215.29 L1633.42 1215.29 L1632.84 1215.29 L1632.25 1215.29 L1631.67 1215.29 L1631.08 1215.29 L1630.49 1215.29 L1629.91 1215.29 L1629.32 1215.29 L1628.73 1215.29 L1628.15 1215.29 L1627.56 1215.29 L1626.97 1215.29 L1626.39 1215.29 L1625.8 1215.29 L1625.22 1215.29 L1624.63 1215.29 L1624.04 1215.29 L1623.46 1215.29 L1622.87 1215.29 L1622.28 1215.29 L1621.7 1215.29 L1621.11 1215.29 L1620.52 1215.29 L1619.94 1215.29 L1619.35 1215.29 L1618.76 1215.29 L1618.18 1215.29 L1617.59 1215.29 L1617.01 1215.29 L1616.42 1215.29 L1615.83 1215.29 L1615.25 1215.29 L1614.66 1215.29 L1614.07 1215.29 L1613.49 1215.29 L1612.9 1215.29 L1612.31 1215.29 L1611.73 1215.29 L1611.14 1215.29 L1610.55 1215.29 L1609.97 1215.29 L1609.38 1215.29 L1608.8 1215.29 L1608.21 1215.29 L1607.62 1215.29 L1607.04 1215.29 L1606.45 1215.29 L1605.86 1215.29 L1605.28 1215.29 L1604.69 1215.29 L1604.1 1215.29 L1603.52 1215.29 L1602.93 1215.29 L1602.34 1215.29 L1601.76 1215.29 L1601.17 1215.29 L1600.59 1215.29 L1600 1215.29 L1599.41 1215.29 L1598.83 1215.29 L1598.24 1215.29 L1597.65 1215.29 L1597.07 1215.29 L1596.48 1215.29 L1595.89 1215.29 L1595.31 1215.29 L1594.72 1215.29 L1594.14 1215.29 L1593.55 1215.29 L1592.96 1215.29 L1592.38 1215.29 L1591.79 1215.29 L1591.2 1215.29 L1590.62 1215.29 L1590.03 1215.29 L1589.44 1215.29 L1588.86 1215.29 L1588.27 1215.29 L1587.68 1215.29 L1587.1 1215.29 L1586.51 1215.29 L1585.93 1215.29 L1585.34 1215.29 L1584.75 1215.29 L1584.17 1215.29 L1583.58 1215.29 L1582.99 1215.29 L1582.41 1215.29 L1581.82 1215.29 L1581.23 1215.29 L1580.65 1215.29 L1580.06 1215.29 L1579.47 1215.29 L1578.89 1215.29 L1578.3 1215.29 L1577.72 1215.29 L1577.13 1215.29 L1576.54 1215.29 L1575.96 1215.29 L1575.37 1215.29 L1574.78 1215.29 L1574.2 1215.29 L1573.61 1215.29 L1573.02 1215.29 L1572.44 1215.29 L1571.85 1215.29 L1571.27 1215.29 L1570.68 1215.29 L1570.09 1215.29 L1569.51 1215.29 L1568.92 1215.29 L1568.33 1215.29 L1567.75 1215.29 L1567.16 1215.29 L1566.57 1215.29 L1565.99 1215.29 L1565.4 1215.29 L1564.81 1215.29 L1564.23 1215.29 L1563.64 1215.29 L1563.06 1215.29 L1562.47 1215.29 L1561.88 1215.29 L1561.3 1215.29 L1560.71 1215.29 L1560.12 1215.29 L1559.54 1215.29 L1558.95 1215.29 L1558.36 1215.29 L1557.78 1215.29 L1557.19 1215.29 L1556.6 1215.29 L1556.02 1215.29 L1555.43 1215.29 L1554.85 1215.29 L1554.26 1215.29 L1553.67 1215.29 L1553.09 1215.29 L1552.5 1215.29 L1551.91 1215.29 L1551.33 1215.29 L1550.74 1215.29 L1550.15 1215.29 L1549.57 1215.29 L1548.98 1215.29 L1548.4 1215.29 L1547.81 1215.29 L1547.22 1215.29 L1546.64 1215.29 L1546.05 1215.29 L1545.46 1215.29 L1544.88 1215.29 L1544.29 1215.29 L1543.7 1215.29 L1543.12 1215.29 L1542.53 1215.29 L1541.94 1215.29 L1541.36 1215.29 L1540.77 1215.29 L1540.19 1215.29 L1539.6 1215.29 L1539.01 1215.29 L1538.43 1215.29 L1537.84 1215.29 L1537.25 1215.29 L1536.67 1215.29 L1536.08 1215.29 L1535.49 1215.29 L1534.91 1215.29 L1534.32 1215.29 L1533.73 1215.29 L1533.15 1215.29 L1532.56 1215.29 L1531.98 1215.29 L1531.39 1215.29 L1530.8 1215.29 L1530.22 1215.29 L1529.63 1215.29 L1529.04 1215.29 L1528.46 1215.29 L1527.87 1215.29 L1527.28 1215.29 L1526.7 1215.29 L1526.11 1215.29 L1525.52 1215.29 L1524.94 1215.29 L1524.35 1215.29 L1523.77 1215.29 L1523.18 1215.29 L1522.59 1215.29 L1522.01 1215.29 L1521.42 1215.29 L1520.83 1215.29 L1520.25 1215.29 L1519.66 1215.29 L1519.07 1215.29 L1518.49 1215.29 L1517.9 1215.29 L1517.32 1215.29 L1516.73 1215.29 L1516.14 1215.29 L1515.56 1215.29 L1514.97 1215.29 L1514.38 1215.29 L1513.8 1215.29 L1513.21 1215.29 L1512.62 1215.29 L1512.04 1215.29 L1511.45 1215.29 L1510.86 1215.29 L1510.28 1215.29 L1509.69 1215.29 L1509.11 1215.29 L1508.52 1215.29 L1507.93 1215.29 L1507.35 1215.29 L1506.76 1215.29 L1506.17 1215.29 L1505.59 1215.29 L1505 1215.29 L1504.41 1215.29 L1503.83 1215.29 L1503.24 1215.29 L1502.65 1215.29 L1502.07 1215.29 L1501.48 1215.29 L1500.9 1215.29 L1500.31 1215.29 L1499.72 1215.29 L1499.14 1215.29 L1498.55 1215.29 L1497.96 1215.29 L1497.38 1215.29 L1496.79 1215.29 L1496.2 1215.29 L1495.62 1215.29 L1495.03 1215.29 L1494.45 1215.29 L1493.86 1215.29 L1493.27 1215.29 L1492.69 1215.29 L1492.1 1215.29 L1491.51 1215.29 L1490.93 1215.29 L1490.34 1215.29 L1489.75 1215.29 L1489.17 1215.29 L1488.58 1215.29 L1487.99 1215.29 L1487.41 1215.29 L1486.82 1215.29 L1486.24 1215.29 L1485.65 1215.29 L1485.06 1215.29 L1484.48 1215.29 L1483.89 1215.29 L1483.3 1215.29 L1482.72 1215.29 L1482.13 1215.29 L1481.54 1215.29 L1480.96 1215.29 L1480.37 1215.29 L1479.78 1215.29 L1479.2 1215.29 L1478.61 1215.29 L1478.03 1215.29 L1477.44 1215.29 L1476.85 1215.29 L1476.27 1215.29 L1475.68 1215.29 L1475.09 1215.29 L1474.51 1215.29 L1473.92 1215.29 L1473.33 1215.29 L1472.75 1215.29 L1472.16 1215.29 L1471.57 1215.29 L1470.99 1215.29 L1470.4 1215.29 L1469.82 1215.29 L1469.23 1215.29 L1468.64 1215.29 L1468.06 1215.29 L1467.47 1215.29 L1466.88 1215.29 L1466.3 1215.29 L1465.71 1215.29 L1465.12 1215.29 L1464.54 1215.29 L1463.95 1215.29 L1463.37 1215.29 L1462.78 1215.29 L1462.19 1215.29 L1461.61 1215.29 L1461.02 1215.29 L1460.43 1215.29 L1459.85 1215.29 L1459.26 1215.29 L1458.67 1215.29 L1458.09 1215.29 L1457.5 1215.29 L1456.91 1215.29 L1456.33 1215.29 L1455.74 1215.29 L1455.16 1215.29 L1454.57 1215.29 L1453.98 1215.29 L1453.4 1215.29 L1452.81 1215.29 L1452.22 1215.29 L1451.64 1215.29 L1451.05 1215.29 L1450.46 1215.29 L1449.88 1215.29 L1449.29 1215.29 L1448.7 1215.29 L1448.12 1215.29 L1447.53 1215.29 L1446.95 1215.29 L1446.36 1215.29 L1445.77 1215.29 L1445.19 1215.29 L1444.6 1215.29 L1444.01 1215.29 L1443.43 1215.29 L1442.84 1215.29 L1442.25 1215.29 L1441.67 1215.29 L1441.08 1215.29 L1440.5 1215.29 L1439.91 1215.29 L1439.32 1215.29 L1438.74 1215.29 L1438.15 1215.29 L1437.56 1215.29 L1436.98 1215.29 L1436.39 1215.29 L1435.8 1215.29 L1435.22 1215.29 L1434.63 1215.29 L1434.04 1215.29 L1433.46 1215.29 L1432.87 1215.29 L1432.29 1215.29 L1431.7 1215.29 L1431.11 1215.29 L1430.53 1215.29 L1429.94 1215.29 L1429.35 1215.29 L1428.77 1215.29 L1428.18 1215.29 L1427.59 1215.29 L1427.01 1215.29 L1426.42 1215.29 L1425.83 1215.29 L1425.25 1215.29 L1424.66 1215.29 L1424.08 1215.29 L1423.49 1215.29 L1422.9 1215.29 L1422.32 1215.29 L1421.73 1215.29 L1421.14 1215.29 L1420.56 1215.29 L1419.97 1215.29 L1419.38 1215.29 L1418.8 1215.29 L1418.21 1215.29 L1417.63 1215.29 L1417.04 1215.29 L1416.45 1215.29 L1415.87 1215.29 L1415.28 1215.29 L1414.69 1215.29 L1414.11 1215.29 L1413.52 1215.29 L1412.93 1215.29 L1412.35 1215.29 L1411.76 1215.29 L1411.17 1215.29 L1410.59 1215.29 L1410 1215.29 L1409.42 1215.29 L1408.83 1215.29 L1408.24 1215.29 L1407.66 1215.29 L1407.07 1215.29 L1406.48 1215.29 L1405.9 1215.29 L1405.31 1215.29 L1404.72 1215.29 L1404.14 1215.29 L1403.55 1215.29 L1402.96 1215.29 L1402.38 1215.29 L1401.79 1215.29 L1401.21 1215.29 L1400.62 1215.29 L1400.03 1215.29 L1399.45 1215.29 L1398.86 1215.29 L1398.27 1215.29 L1397.69 1215.29 L1397.1 1215.29 L1396.51 1215.29 L1395.93 1215.29 L1395.34 1215.29 L1394.75 1215.29 L1394.17 1215.29 L1393.58 1215.29 L1393 1215.29 L1392.41 1215.29 L1391.82 1215.29 L1391.24 1215.29 L1390.65 1215.29 L1390.06 1215.29 L1389.48 1215.29 L1388.89 1215.29 L1388.3 1215.29 L1387.72 1215.29 L1387.13 1215.29 L1386.55 1215.29 L1385.96 1215.29 L1385.37 1215.29 L1384.79 1215.29 L1384.2 1215.29 L1383.61 1215.29 L1383.03 1215.29 L1382.44 1215.29 L1381.85 1215.29 L1381.27 1215.29 L1380.68 1215.29 L1380.09 1215.29 L1379.51 1215.29 L1378.92 1215.29 L1378.34 1215.29 L1377.75 1215.29 L1377.16 1215.29 L1376.58 1215.29 L1375.99 1215.29 L1375.4 1215.29 L1374.82 1215.29 L1374.23 1215.29 L1373.64 1215.29 L1373.06 1215.29 L1372.47 1215.29 L1371.88 1215.29 L1371.3 1215.29 L1370.71 1215.29 L1370.13 1215.29 L1369.54 1215.29 L1368.95 1215.29 L1368.37 1215.29 L1367.78 1215.29 L1367.19 1215.29 L1366.61 1215.29 L1366.02 1215.29 L1365.43 1215.29 L1364.85 1215.29 L1364.26 1215.29 L1363.68 1215.29 L1363.09 1215.29 L1362.5 1215.29 L1361.92 1215.29 L1361.33 1215.29 L1360.74 1215.29 L1360.16 1215.29 L1359.57 1215.29 L1358.98 1215.29 L1358.4 1215.29 L1357.81 1215.29 L1357.22 1215.29 L1356.64 1215.29 L1356.05 1215.29 L1355.47 1215.29 L1354.88 1215.29 L1354.29 1215.29 L1353.71 1215.29 L1353.12 1215.29 L1352.53 1215.29 L1351.95 1215.29 L1351.36 1215.29 L1350.77 1215.29 L1350.19 1215.29 L1349.6 1215.29 L1349.01 1215.29 L1348.43 1215.29 L1347.84 1215.29 L1347.26 1215.29 L1346.67 1215.29 L1346.08 1215.29 L1345.5 1215.29 L1344.91 1215.29 L1344.32 1215.29 L1343.74 1215.29 L1343.15 1215.29 L1342.56 1215.29 L1341.98 1215.29 L1341.39 1215.29 L1340.8 1215.29 L1340.22 1215.29 L1339.63 1215.29 L1339.05 1215.29 L1338.46 1215.29 L1337.87 1215.29 L1337.29 1215.29 L1336.7 1215.29 L1336.11 1215.29 L1335.53 1215.29 L1334.94 1215.29 L1334.35 1215.29 L1333.77 1215.29 L1333.18 1215.29 L1332.6 1215.29 L1332.01 1215.29 L1331.42 1215.29 L1330.84 1215.29 L1330.25 1215.29 L1329.66 1215.29 L1329.08 1215.29 L1328.49 1215.29 L1327.9 1215.29 L1327.32 1215.29 L1326.73 1215.29 L1326.14 1215.29 L1325.56 1215.29 L1324.97 1215.29 L1324.39 1215.29 L1323.8 1215.29 L1323.21 1215.29 L1322.63 1215.29 L1322.04 1215.29 L1321.45 1215.29 L1320.87 1215.29 L1320.28 1215.29 L1319.69 1215.29 L1319.11 1215.29 L1318.52 1215.29 L1317.93 1215.29 L1317.35 1215.29 L1316.76 1215.29 L1316.18 1215.29 L1315.59 1215.29 L1315 1215.29 L1314.42 1215.29 L1313.83 1215.29 L1313.24 1215.29 L1312.66 1215.29 L1312.07 1215.29 L1311.48 1215.29 L1310.9 1215.29 L1310.31 1215.29 L1309.73 1215.29 L1309.14 1215.29 L1308.55 1215.29 L1307.97 1215.29 L1307.38 1215.29 L1306.79 1215.29 L1306.21 1215.29 L1305.62 1215.29 L1305.03 1215.29 L1304.45 1215.29 L1303.86 1215.29 L1303.27 1215.29 L1302.69 1215.29 L1302.1 1215.29 L1301.52 1215.29 L1300.93 1215.29 L1300.34 1215.29 L1299.76 1215.29 L1299.17 1215.29 L1298.58 1215.29 L1298 1215.29 L1297.41 1215.29 L1296.82 1215.29 L1296.24 1215.29 L1295.65 1215.29 L1295.06 1215.29 L1294.48 1215.29 L1293.89 1215.29 L1293.31 1215.29 L1292.72 1215.29 L1292.13 1215.29 L1291.55 1215.29 L1290.96 1215.29 L1290.37 1215.29 L1289.79 1215.29 L1289.2 1215.29 L1288.61 1215.29 L1288.03 1215.29 L1287.44 1215.29 L1286.86 1215.29 L1286.27 1215.29 L1285.68 1215.29 L1285.1 1215.29 L1284.51 1215.29 L1283.92 1215.29 L1283.34 1215.29 L1282.75 1215.29 L1282.16 1215.29 L1281.58 1215.29 L1280.99 1215.29 L1280.4 1215.29 L1279.82 1215.29 L1279.23 1215.29 L1278.65 1215.29 L1278.06 1215.29 L1277.47 1215.29 L1276.89 1215.29 L1276.3 1215.29 L1275.71 1215.29 L1275.13 1215.29 L1274.54 1215.29 L1273.95 1215.29 L1273.37 1215.29 L1272.78 1215.29 L1272.19 1215.29 L1271.61 1215.29 L1271.02 1215.29 L1270.44 1215.29 L1269.85 1215.29 L1269.26 1215.29 L1268.68 1215.29 L1268.09 1215.29 L1267.5 1215.29 L1266.92 1215.29 L1266.33 1215.29 L1265.74 1215.29 L1265.16 1215.29 L1264.57 1215.29 L1263.98 1215.29 L1263.4 1215.29 L1262.81 1215.29 L1262.23 1215.29 L1261.64 1215.29 L1261.05 1215.29 L1260.47 1215.29 L1259.88 1215.29 L1259.29 1215.29 L1258.71 1215.29 L1258.12 1215.29 L1257.53 1215.29 L1256.95 1215.29 L1256.36 1215.29 L1255.78 1215.29 L1255.19 1215.29 L1254.6 1215.29 L1254.02 1215.29 L1253.43 1215.29 L1252.84 1215.29 L1252.26 1215.29 L1251.67 1215.29 L1251.08 1215.29 L1250.5 1215.29 L1249.91 1215.29 L1249.32 1215.29 L1248.74 1215.29 L1248.15 1215.29 L1247.57 1215.29 L1246.98 1215.29 L1246.39 1215.29 L1245.81 1215.29 L1245.22 1215.29 L1244.63 1215.29 L1244.05 1215.29 L1243.46 1215.29 L1242.87 1215.29 L1242.29 1215.29 L1241.7 1215.29 L1241.11 1215.29 L1240.53 1215.29 L1239.94 1215.29 L1239.36 1215.29 L1238.77 1215.29 L1238.18 1215.29 L1237.6 1215.29 L1237.01 1215.29 L1236.42 1215.29 L1235.84 1215.29 L1235.25 1215.29 L1234.66 1215.29 L1234.08 1215.29 L1233.49 1215.29 L1232.91 1215.29 L1232.32 1215.29 L1231.73 1215.29 L1231.15 1215.29 L1230.56 1215.29 L1229.97 1215.29 L1229.39 1215.29 L1228.8 1215.29 L1228.21 1215.29 L1227.63 1215.29 L1227.04 1215.29 L1226.45 1215.29 L1225.87 1215.29 L1225.28 1215.29 L1224.7 1215.29 L1224.11 1215.29 L1223.52 1215.29 L1222.94 1215.29 L1222.35 1215.29 L1221.76 1215.29 L1221.18 1215.29 L1220.59 1215.29 L1220 1215.29 L1219.42 1215.29 L1218.83 1215.29 L1218.24 1215.29 L1217.66 1215.29 L1217.07 1215.29 L1216.49 1215.29 L1215.9 1215.29 L1215.31 1215.29 L1214.73 1215.29 L1214.14 1215.29 L1213.55 1215.29 L1212.97 1215.29 L1212.38 1215.29 L1211.79 1215.29 L1211.21 1215.29 L1210.62 1215.29 L1210.03 1215.29 L1209.45 1215.29 L1208.86 1215.29 L1208.28 1215.29 L1207.69 1215.29 L1207.1 1215.29 L1206.52 1215.29 L1205.93 1215.29 L1205.34 1215.29 L1204.76 1215.29 L1204.17 1215.29 L1203.58 1215.29 L1203 1215.29 L1202.41 1215.29 L1201.83 1215.29 L1201.24 1215.29 L1200.65 1215.29 L1200.07 1215.29 L1199.48 1215.29 L1198.89 1215.29 L1198.31 1215.29 L1197.72 1215.29 L1197.13 1215.29 L1196.55 1215.29 L1195.96 1215.29 L1195.37 1215.29 L1194.79 1215.29 L1194.2 1215.29 L1193.62 1215.29 L1193.03 1215.29 L1192.44 1215.29 L1191.86 1215.29 L1191.27 1215.29 L1190.68 1215.29 L1190.1 1215.29 L1189.51 1215.29 L1188.92 1215.29 L1188.34 1215.29 L1187.75 1215.29 L1187.16 1215.29 L1186.58 1215.29 L1185.99 1215.29 L1185.41 1215.29 L1184.82 1215.29 L1184.23 1215.29 L1183.65 1215.29 L1183.06 1215.29 L1182.47 1215.29 L1181.89 1215.29 L1181.3 1215.29 L1180.71 1215.29 L1180.13 1215.29 L1179.54 1215.29 L1178.96 1215.29 L1178.37 1215.29 L1177.78 1215.29 L1177.2 1215.29 L1176.61 1215.29 L1176.02 1215.29 L1175.44 1215.29 L1174.85 1215.29 L1174.26 1215.29 L1173.68 1215.29 L1173.09 1215.29 L1172.5 1215.29 L1171.92 1215.29 L1171.33 1215.29 L1170.75 1215.29 L1170.16 1215.29 L1169.57 1215.29 L1168.99 1215.29 L1168.4 1215.29 L1167.81 1215.29 L1167.23 1215.29 L1166.64 1215.29 L1166.05 1215.29 L1165.47 1215.29 L1164.88 1215.29 L1164.29 1215.29 L1163.71 1215.29 L1163.12 1215.29 L1162.54 1215.29 L1161.95 1215.29 L1161.36 1215.29 L1160.78 1215.29 L1160.19 1215.29 L1159.6 1215.29 L1159.02 1215.29 L1158.43 1215.29 L1157.84 1215.29 L1157.26 1215.29 L1156.67 1215.29 L1156.09 1215.29 L1155.5 1215.29 L1154.91 1215.29 L1154.33 1215.29 L1153.74 1215.29 L1153.15 1215.29 L1152.57 1215.29 L1151.98 1215.29 L1151.39 1215.29 L1150.81 1215.29 L1150.22 1215.29 L1149.63 1215.29 L1149.05 1215.29 L1148.46 1215.29 L1147.88 1215.29 L1147.29 1215.29 L1146.7 1215.29 L1146.12 1215.29 L1145.53 1215.29 L1144.94 1215.29 L1144.36 1215.29 L1143.77 1215.29 L1143.18 1215.29 L1142.6 1215.29 L1142.01 1215.29 L1141.42 1215.29 L1140.84 1215.29 L1140.25 1215.29 L1139.67 1215.29 L1139.08 1215.29 L1138.49 1215.29 L1137.91 1215.29 L1137.32 1215.29 L1136.73 1215.29 L1136.15 1215.29 L1135.56 1215.29 L1134.97 1215.29 L1134.39 1215.29 L1133.8 1215.29 L1133.21 1215.29 L1132.63 1215.29 L1132.04 1215.29 L1131.46 1215.29 L1130.87 1215.29 L1130.28 1215.29 L1129.7 1215.29 L1129.11 1215.29 L1128.52 1215.29 L1127.94 1215.29 L1127.35 1215.29 L1126.76 1215.29 L1126.18 1215.29 L1125.59 1215.29 L1125.01 1215.29 L1124.42 1215.29 L1123.83 1215.29 L1123.25 1215.29 L1122.66 1215.29 L1122.07 1215.29 L1121.49 1215.29 L1120.9 1215.29 L1120.31 1215.29 L1119.73 1215.29 L1119.14 1215.29 L1118.55 1215.29 L1117.97 1215.29 L1117.38 1215.29 L1116.8 1215.29 L1116.21 1215.29 L1115.62 1215.29 L1115.04 1215.29 L1114.45 1215.29 L1113.86 1215.29 L1113.28 1215.29 L1112.69 1215.29 L1112.1 1215.29 L1111.52 1215.29 L1110.93 1215.29 L1110.34 1215.29 L1109.76 1215.29 L1109.17 1215.29 L1108.59 1215.29 L1108 1215.29 L1107.41 1215.29 L1106.83 1215.29 L1106.24 1215.29 L1105.65 1215.29 L1105.07 1215.29 L1104.48 1215.29 L1103.89 1215.29 L1103.31 1215.29 L1102.72 1215.29 L1102.14 1215.29 L1101.55 1215.29 L1100.96 1215.29 L1100.38 1215.29 L1099.79 1215.29 L1099.2 1215.29 L1098.62 1215.29 L1098.03 1215.29 L1097.44 1215.29 L1096.86 1215.29 L1096.27 1215.29 L1095.68 1215.29 L1095.1 1215.29 L1094.51 1215.29 L1093.93 1215.29 L1093.34 1215.29 L1092.75 1215.29 L1092.17 1215.29 L1091.58 1215.29 L1090.99 1215.29 L1090.41 1215.29 L1089.82 1215.29 L1089.23 1215.29 L1088.65 1215.29 L1088.06 1215.29 L1087.47 1215.29 L1086.89 1215.29 L1086.3 1215.29 L1085.72 1215.29 L1085.13 1215.29 L1084.54 1215.29 L1083.96 1215.29 L1083.37 1215.29 L1082.78 1215.29 L1082.2 1215.29 L1081.61 1215.29 L1081.02 1215.29 L1080.44 1215.29 L1079.85 1215.29 L1079.26 1215.29 L1078.68 1215.29 L1078.09 1215.29 L1077.51 1215.29 L1076.92 1215.29 L1076.33 1215.29 L1075.75 1215.29 L1075.16 1215.29 L1074.57 1215.29 L1073.99 1215.29 L1073.4 1215.29 L1072.81 1215.29 L1072.23 1215.29 L1071.64 1215.29 L1071.06 1215.29 L1070.47 1215.29 L1069.88 1215.29 L1069.3 1215.29 L1068.71 1215.29 L1068.12 1215.29 L1067.54 1215.29 L1066.95 1215.29 L1066.36 1215.29 L1065.78 1215.29 L1065.19 1215.29 L1064.6 1215.29 L1064.02 1215.29 L1063.43 1215.29 L1062.85 1215.29 L1062.26 1215.29 L1061.67 1215.29 L1061.09 1215.29 L1060.5 1215.29 L1059.91 1215.29 L1059.33 1215.29 L1058.74 1215.29 L1058.15 1215.29 L1057.57 1215.29 L1056.98 1215.29 L1056.39 1215.29 L1055.81 1215.29 L1055.22 1215.29 L1054.64 1215.29 L1054.05 1215.29 L1053.46 1215.29 L1052.88 1215.29 L1052.29 1215.29 L1051.7 1215.29 L1051.12 1215.29 L1050.53 1215.29 L1049.94 1215.29 L1049.36 1215.29 L1048.77 1215.29 L1048.19 1215.29 L1047.6 1215.29 L1047.01 1215.29 L1046.43 1215.29 L1045.84 1215.29 L1045.25 1215.29 L1044.67 1215.29 L1044.08 1215.29 L1043.49 1215.29 L1042.91 1215.29 L1042.32 1215.29 L1041.73 1215.29 L1041.15 1215.29 L1040.56 1215.29 L1039.98 1215.29 L1039.39 1215.29 L1038.8 1215.29 L1038.22 1215.29 L1037.63 1215.29 L1037.04 1215.29 L1036.46 1215.29 L1035.87 1215.29 L1035.28 1215.29 L1034.7 1215.29 L1034.11 1215.29 L1033.52 1215.29 L1032.94 1215.29 L1032.35 1215.29 L1031.77 1215.29 L1031.18 1215.29 L1030.59 1215.29 L1030.01 1215.29 L1029.42 1215.29 L1028.83 1215.29 L1028.25 1215.29 L1027.66 1215.29 L1027.07 1215.29 L1026.49 1215.29 L1025.9 1215.29 L1025.32 1215.29 L1024.73 1215.29 L1024.14 1215.29 L1023.56 1215.29 L1022.97 1215.29 L1022.38 1215.29 L1021.8 1215.29 L1021.21 1215.29 L1020.62 1215.29 L1020.04 1215.29 L1019.45 1215.29 L1018.86 1215.29 L1018.28 1215.29 L1017.69 1215.29 L1017.11 1215.29 L1016.52 1215.29 L1015.93 1215.29 L1015.35 1215.29 L1014.76 1215.29 L1014.17 1215.29 L1013.59 1215.29 L1013 1215.29 L1012.41 1215.29 L1011.83 1215.29 L1011.24 1215.29 L1010.65 1215.29 L1010.07 1215.29 L1009.48 1215.29 L1008.9 1215.29 L1008.31 1215.29 L1007.72 1215.29 L1007.14 1215.29 L1006.55 1215.29 L1005.96 1215.29 L1005.38 1215.29 L1004.79 1215.29 L1004.2 1215.29 L1003.62 1215.29 L1003.03 1215.29 L1002.44 1215.29 L1001.86 1215.29 L1001.27 1215.29 L1000.69 1215.29 L1000.1 1215.29 L999.513 1215.29 L998.926 1215.29 L998.34 1215.29 L997.754 1215.29 L997.167 1215.29 L996.581 1215.29 L995.994 1215.29 L995.408 1215.29 L994.822 1215.29 L994.235 1215.29 L993.649 1215.29 L993.062 1215.29 L992.476 1215.29 L991.889 1215.29 L991.303 1215.29 L990.717 1215.29 L990.13 1215.29 L989.544 1215.29 L988.957 1215.29 L988.371 1215.29 L987.785 1215.29 L987.198 1215.29 L986.612 1215.29 L986.025 1215.29  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1215.34 986.612,1215.34 987.198,1215.34 987.785,1215.34 988.371,1215.34 988.957,1215.34 989.544,1215.34 990.13,1215.34 990.717,1215.34 991.303,1215.34 991.889,1215.34 992.476,1215.34 993.062,1215.34 993.649,1215.34 994.235,1215.34 994.822,1215.34 995.408,1215.34 995.994,1215.34 996.581,1215.34 997.167,1215.34 997.754,1215.34 998.34,1215.34 998.926,1215.34 999.513,1215.34 1000.1,1215.34 1000.69,1215.34 1001.27,1215.34 1001.86,1215.34 1002.44,1215.34 1003.03,1215.34 1003.62,1215.34 1004.2,1215.34 1004.79,1215.34 1005.38,1215.34 1005.96,1215.34 1006.55,1215.34 1007.14,1215.34 1007.72,1215.34 1008.31,1215.34 1008.9,1215.34 1009.48,1215.34 1010.07,1215.34 1010.65,1215.34 1011.24,1215.34 1011.83,1215.34 1012.41,1215.34 1013,1215.34 1013.59,1215.34 1014.17,1215.34 1014.76,1215.34 1015.35,1215.34 1015.93,1215.34 1016.52,1215.34 1017.11,1215.34 1017.69,1215.34 1018.28,1215.34 1018.86,1215.34 1019.45,1215.34 1020.04,1215.34 1020.62,1215.34 1021.21,1215.34 1021.8,1215.34 1022.38,1215.34 1022.97,1215.34 1023.56,1215.34 1024.14,1215.34 1024.73,1215.34 1025.32,1215.34 1025.9,1215.34 1026.49,1215.34 1027.07,1215.34 1027.66,1215.34 1028.25,1215.34 1028.83,1215.34 1029.42,1215.34 1030.01,1215.34 1030.59,1215.34 1031.18,1215.34 1031.77,1215.34 1032.35,1215.34 1032.94,1215.34 1033.52,1215.34 1034.11,1215.34 1034.7,1215.34 1035.28,1215.34 1035.87,1215.34 1036.46,1215.34 1037.04,1215.34 1037.63,1215.34 1038.22,1215.34 1038.8,1215.34 1039.39,1215.34 1039.98,1215.34 1040.56,1215.34 1041.15,1215.34 1041.73,1215.34 1042.32,1215.34 1042.91,1215.34 1043.49,1215.34 1044.08,1215.34 1044.67,1215.34 1045.25,1215.34 1045.84,1215.34 1046.43,1215.34 1047.01,1215.34 1047.6,1215.34 1048.19,1215.34 1048.77,1215.34 1049.36,1215.34 1049.94,1215.34 1050.53,1215.34 1051.12,1215.34 1051.7,1215.34 1052.29,1215.34 1052.88,1215.34 1053.46,1215.34 1054.05,1215.34 1054.64,1215.34 1055.22,1215.34 1055.81,1215.34 1056.39,1215.34 1056.98,1215.34 1057.57,1215.34 1058.15,1215.34 1058.74,1215.34 1059.33,1215.34 1059.91,1215.34 1060.5,1215.34 1061.09,1215.34 1061.67,1215.34 1062.26,1215.34 1062.85,1215.34 1063.43,1215.34 1064.02,1215.34 1064.6,1215.34 1065.19,1215.34 1065.78,1215.34 1066.36,1215.34 1066.95,1215.34 1067.54,1215.34 1068.12,1215.34 1068.71,1215.34 1069.3,1215.34 1069.88,1215.34 1070.47,1215.34 1071.06,1215.34 1071.64,1215.34 1072.23,1215.34 1072.81,1215.34 1073.4,1215.34 1073.99,1215.34 1074.57,1215.34 1075.16,1215.34 1075.75,1215.34 1076.33,1215.34 1076.92,1215.34 1077.51,1215.34 1078.09,1215.34 1078.68,1215.34 1079.26,1215.34 1079.85,1215.34 1080.44,1215.34 1081.02,1215.34 1081.61,1215.34 1082.2,1215.34 1082.78,1215.34 1083.37,1215.34 1083.96,1215.34 1084.54,1215.34 1085.13,1215.34 1085.72,1215.34 1086.3,1215.34 1086.89,1215.34 1087.47,1215.34 1088.06,1215.34 1088.65,1215.34 1089.23,1215.34 1089.82,1215.34 1090.41,1215.34 1090.99,1215.34 1091.58,1215.34 1092.17,1215.34 1092.75,1215.34 1093.34,1215.34 1093.93,1215.34 1094.51,1215.34 1095.1,1215.34 1095.68,1215.34 1096.27,1215.34 1096.86,1215.34 1097.44,1215.34 1098.03,1215.34 1098.62,1215.34 1099.2,1215.34 1099.79,1215.34 1100.38,1215.34 1100.96,1215.34 1101.55,1215.34 1102.14,1215.34 1102.72,1215.34 1103.31,1215.34 1103.89,1215.34 1104.48,1215.34 1105.07,1215.34 1105.65,1215.34 1106.24,1215.34 1106.83,1215.34 1107.41,1215.34 1108,1215.34 1108.59,1215.34 1109.17,1215.34 1109.76,1215.34 1110.34,1215.34 1110.93,1215.34 1111.52,1215.34 1112.1,1215.34 1112.69,1215.34 1113.28,1215.34 1113.86,1215.34 1114.45,1215.34 1115.04,1215.34 1115.62,1215.34 1116.21,1215.34 1116.8,1215.34 1117.38,1215.34 1117.97,1215.34 1118.55,1215.34 1119.14,1215.34 1119.73,1215.34 1120.31,1215.34 1120.9,1215.34 1121.49,1215.34 1122.07,1215.34 1122.66,1215.34 1123.25,1215.34 1123.83,1215.34 1124.42,1215.34 1125.01,1215.34 1125.59,1215.34 1126.18,1215.34 1126.76,1215.34 1127.35,1215.34 1127.94,1215.34 1128.52,1215.34 1129.11,1215.34 1129.7,1215.34 1130.28,1215.34 1130.87,1215.34 1131.46,1215.34 1132.04,1215.34 1132.63,1215.34 1133.21,1215.34 1133.8,1215.34 1134.39,1215.34 1134.97,1215.34 1135.56,1215.34 1136.15,1215.34 1136.73,1215.34 1137.32,1215.34 1137.91,1215.34 1138.49,1215.34 1139.08,1215.34 1139.67,1215.34 1140.25,1215.34 1140.84,1215.34 1141.42,1215.34 1142.01,1215.34 1142.6,1215.34 1143.18,1215.34 1143.77,1215.34 1144.36,1215.34 1144.94,1215.34 1145.53,1215.34 1146.12,1215.34 1146.7,1215.34 1147.29,1215.34 1147.88,1215.34 1148.46,1215.34 1149.05,1215.34 1149.63,1215.34 1150.22,1215.34 1150.81,1215.34 1151.39,1215.34 1151.98,1215.34 1152.57,1215.34 1153.15,1215.34 1153.74,1215.34 1154.33,1215.34 1154.91,1215.34 1155.5,1215.34 1156.09,1215.34 1156.67,1215.34 1157.26,1215.34 1157.84,1215.34 1158.43,1215.34 1159.02,1215.34 1159.6,1215.34 1160.19,1215.34 1160.78,1215.34 1161.36,1215.34 1161.95,1215.34 1162.54,1215.34 1163.12,1215.34 1163.71,1215.34 1164.29,1215.34 1164.88,1215.34 1165.47,1215.34 1166.05,1215.34 1166.64,1215.34 1167.23,1215.34 1167.81,1215.34 1168.4,1215.34 1168.99,1215.34 1169.57,1215.34 1170.16,1215.34 1170.75,1215.34 1171.33,1215.34 1171.92,1215.34 1172.5,1215.34 1173.09,1215.34 1173.68,1215.34 1174.26,1215.34 1174.85,1215.34 1175.44,1215.34 1176.02,1215.34 1176.61,1215.34 1177.2,1215.34 1177.78,1215.34 1178.37,1215.34 1178.96,1215.34 1179.54,1215.34 1180.13,1215.34 1180.71,1215.34 1181.3,1215.34 1181.89,1215.34 1182.47,1215.34 1183.06,1215.34 1183.65,1215.34 1184.23,1215.34 1184.82,1215.34 1185.41,1215.34 1185.99,1215.34 1186.58,1215.34 1187.16,1215.34 1187.75,1215.34 1188.34,1215.34 1188.92,1215.34 1189.51,1215.34 1190.1,1215.34 1190.68,1215.34 1191.27,1215.34 1191.86,1215.34 1192.44,1215.34 1193.03,1215.34 1193.62,1215.34 1194.2,1215.34 1194.79,1215.34 1195.37,1215.34 1195.96,1215.34 1196.55,1215.34 1197.13,1215.34 1197.72,1215.34 1198.31,1215.34 1198.89,1215.34 1199.48,1215.34 1200.07,1215.34 1200.65,1215.34 1201.24,1215.34 1201.83,1215.34 1202.41,1215.34 1203,1215.34 1203.58,1215.34 1204.17,1215.34 1204.76,1215.34 1205.34,1215.34 1205.93,1215.34 1206.52,1215.34 1207.1,1215.34 1207.69,1215.34 1208.28,1215.34 1208.86,1215.34 1209.45,1215.34 1210.03,1215.34 1210.62,1215.34 1211.21,1215.34 1211.79,1215.34 1212.38,1215.34 1212.97,1215.34 1213.55,1215.34 1214.14,1215.34 1214.73,1215.34 1215.31,1215.34 1215.9,1215.34 1216.49,1215.34 1217.07,1215.34 1217.66,1215.34 1218.24,1215.34 1218.83,1215.34 1219.42,1215.34 1220,1215.34 1220.59,1215.34 1221.18,1215.34 1221.76,1215.34 1222.35,1215.34 1222.94,1215.34 1223.52,1215.34 1224.11,1215.34 1224.7,1215.34 1225.28,1215.34 1225.87,1215.34 1226.45,1215.34 1227.04,1215.34 1227.63,1215.34 1228.21,1215.34 1228.8,1215.34 1229.39,1215.34 1229.97,1215.34 1230.56,1215.34 1231.15,1215.34 1231.73,1215.34 1232.32,1215.34 1232.91,1215.34 1233.49,1215.34 1234.08,1215.34 1234.66,1215.34 1235.25,1215.34 1235.84,1215.34 1236.42,1215.34 1237.01,1215.34 1237.6,1215.34 1238.18,1215.34 1238.77,1215.34 1239.36,1215.34 1239.94,1215.34 1240.53,1215.34 1241.11,1215.34 1241.7,1215.34 1242.29,1215.34 1242.87,1215.34 1243.46,1215.34 1244.05,1215.34 1244.63,1215.34 1245.22,1215.34 1245.81,1215.34 1246.39,1215.34 1246.98,1215.34 1247.57,1215.34 1248.15,1215.34 1248.74,1215.34 1249.32,1215.34 1249.91,1215.34 1250.5,1215.34 1251.08,1215.34 1251.67,1215.34 1252.26,1215.34 1252.84,1215.34 1253.43,1215.34 1254.02,1215.34 1254.6,1215.34 1255.19,1215.34 1255.78,1215.34 1256.36,1215.34 1256.95,1215.34 1257.53,1215.34 1258.12,1215.34 1258.71,1215.34 1259.29,1215.34 1259.88,1215.34 1260.47,1215.34 1261.05,1215.34 1261.64,1215.34 1262.23,1215.34 1262.81,1215.34 1263.4,1215.34 1263.98,1215.34 1264.57,1215.34 1265.16,1215.34 1265.74,1215.34 1266.33,1215.34 1266.92,1215.34 1267.5,1215.34 1268.09,1215.34 1268.68,1215.34 1269.26,1215.34 1269.85,1215.34 1270.44,1215.34 1271.02,1215.34 1271.61,1215.34 1272.19,1215.34 1272.78,1215.34 1273.37,1215.34 1273.95,1215.34 1274.54,1215.34 1275.13,1215.34 1275.71,1215.34 1276.3,1215.34 1276.89,1215.34 1277.47,1215.34 1278.06,1215.34 1278.65,1215.34 1279.23,1215.34 1279.82,1215.34 1280.4,1215.34 1280.99,1215.34 1281.58,1215.34 1282.16,1215.34 1282.75,1215.34 1283.34,1215.34 1283.92,1215.34 1284.51,1215.34 1285.1,1215.34 1285.68,1215.34 1286.27,1215.34 1286.86,1215.34 1287.44,1215.34 1288.03,1215.34 1288.61,1215.34 1289.2,1215.34 1289.79,1215.34 1290.37,1215.34 1290.96,1215.34 1291.55,1215.34 1292.13,1215.34 1292.72,1215.34 1293.31,1215.34 1293.89,1215.34 1294.48,1215.34 1295.06,1215.34 1295.65,1215.34 1296.24,1215.34 1296.82,1215.34 1297.41,1215.34 1298,1215.34 1298.58,1215.34 1299.17,1215.34 1299.76,1215.34 1300.34,1215.34 1300.93,1215.34 1301.52,1215.34 1302.1,1215.34 1302.69,1215.34 1303.27,1215.34 1303.86,1215.34 1304.45,1215.34 1305.03,1215.34 1305.62,1215.34 1306.21,1215.34 1306.79,1215.34 1307.38,1215.34 1307.97,1215.34 1308.55,1215.34 1309.14,1215.34 1309.73,1215.34 1310.31,1215.34 1310.9,1215.34 1311.48,1215.34 1312.07,1215.34 1312.66,1215.34 1313.24,1215.34 1313.83,1215.34 1314.42,1215.34 1315,1215.34 1315.59,1215.34 1316.18,1215.34 1316.76,1215.34 1317.35,1215.34 1317.93,1215.34 1318.52,1215.34 1319.11,1215.34 1319.69,1215.34 1320.28,1215.34 1320.87,1215.34 1321.45,1215.34 1322.04,1215.34 1322.63,1215.34 1323.21,1215.34 1323.8,1215.34 1324.39,1215.34 1324.97,1215.34 1325.56,1215.34 1326.14,1215.34 1326.73,1215.34 1327.32,1215.34 1327.9,1215.34 1328.49,1215.34 1329.08,1215.34 1329.66,1215.34 1330.25,1215.34 1330.84,1215.34 1331.42,1215.34 1332.01,1215.34 1332.6,1215.34 1333.18,1215.34 1333.77,1215.34 1334.35,1215.34 1334.94,1215.34 1335.53,1215.34 1336.11,1215.34 1336.7,1215.34 1337.29,1215.34 1337.87,1215.34 1338.46,1215.34 1339.05,1215.34 1339.63,1215.34 1340.22,1215.34 1340.8,1215.34 1341.39,1215.34 1341.98,1215.34 1342.56,1215.34 1343.15,1215.34 1343.74,1215.34 1344.32,1215.34 1344.91,1215.34 1345.5,1215.34 1346.08,1215.34 1346.67,1215.34 1347.26,1215.34 1347.84,1215.34 1348.43,1215.34 1349.01,1215.34 1349.6,1215.34 1350.19,1215.34 1350.77,1215.34 1351.36,1215.34 1351.95,1215.34 1352.53,1215.34 1353.12,1215.34 1353.71,1215.34 1354.29,1215.34 1354.88,1215.34 1355.47,1215.34 1356.05,1215.34 1356.64,1215.34 1357.22,1215.34 1357.81,1215.34 1358.4,1215.34 1358.98,1215.34 1359.57,1215.34 1360.16,1215.34 1360.74,1215.34 1361.33,1215.34 1361.92,1215.34 1362.5,1215.34 1363.09,1215.34 1363.68,1215.34 1364.26,1215.34 1364.85,1215.34 1365.43,1215.34 1366.02,1215.34 1366.61,1215.34 1367.19,1215.34 1367.78,1215.34 1368.37,1215.34 1368.95,1215.34 1369.54,1215.34 1370.13,1215.34 1370.71,1215.34 1371.3,1215.34 1371.88,1215.34 1372.47,1215.34 1373.06,1215.34 1373.64,1215.34 1374.23,1215.34 1374.82,1215.34 1375.4,1215.34 1375.99,1215.34 1376.58,1215.34 1377.16,1215.34 1377.75,1215.34 1378.34,1215.34 1378.92,1215.34 1379.51,1215.34 1380.09,1215.34 1380.68,1215.34 1381.27,1215.34 1381.85,1215.34 1382.44,1215.34 1383.03,1215.34 1383.61,1215.34 1384.2,1215.34 1384.79,1215.34 1385.37,1215.34 1385.96,1215.34 1386.55,1215.34 1387.13,1215.34 1387.72,1215.34 1388.3,1215.34 1388.89,1215.34 1389.48,1215.34 1390.06,1215.34 1390.65,1215.34 1391.24,1215.34 1391.82,1215.34 1392.41,1215.34 1393,1215.34 1393.58,1215.34 1394.17,1215.34 1394.75,1215.34 1395.34,1215.34 1395.93,1215.34 1396.51,1215.34 1397.1,1215.34 1397.69,1215.34 1398.27,1215.34 1398.86,1215.34 1399.45,1215.34 1400.03,1215.34 1400.62,1215.34 1401.21,1215.34 1401.79,1215.34 1402.38,1215.34 1402.96,1215.34 1403.55,1215.34 1404.14,1215.34 1404.72,1215.34 1405.31,1215.34 1405.9,1215.34 1406.48,1215.34 1407.07,1215.34 1407.66,1215.34 1408.24,1215.34 1408.83,1215.34 1409.42,1215.34 1410,1215.34 1410.59,1215.34 1411.17,1215.34 1411.76,1215.34 1412.35,1215.34 1412.93,1215.34 1413.52,1215.34 1414.11,1215.34 1414.69,1215.34 1415.28,1215.34 1415.87,1215.34 1416.45,1215.34 1417.04,1215.34 1417.63,1215.34 1418.21,1215.34 1418.8,1215.34 1419.38,1215.34 1419.97,1215.34 1420.56,1215.34 1421.14,1215.34 1421.73,1215.34 1422.32,1215.34 1422.9,1215.34 1423.49,1215.34 1424.08,1215.34 1424.66,1215.34 1425.25,1215.34 1425.83,1215.34 1426.42,1215.34 1427.01,1215.34 1427.59,1215.34 1428.18,1215.34 1428.77,1215.34 1429.35,1215.34 1429.94,1215.34 1430.53,1215.34 1431.11,1215.34 1431.7,1215.34 1432.29,1215.34 1432.87,1215.34 1433.46,1215.34 1434.04,1215.34 1434.63,1215.34 1435.22,1215.34 1435.8,1215.34 1436.39,1215.34 1436.98,1215.34 1437.56,1215.34 1438.15,1215.34 1438.74,1215.34 1439.32,1215.34 1439.91,1215.34 1440.5,1215.34 1441.08,1215.34 1441.67,1215.34 1442.25,1215.34 1442.84,1215.34 1443.43,1215.34 1444.01,1215.34 1444.6,1215.34 1445.19,1215.34 1445.77,1215.34 1446.36,1215.34 1446.95,1215.34 1447.53,1215.34 1448.12,1215.34 1448.7,1215.34 1449.29,1215.34 1449.88,1215.34 1450.46,1215.34 1451.05,1215.34 1451.64,1215.34 1452.22,1215.34 1452.81,1215.34 1453.4,1215.34 1453.98,1215.34 1454.57,1215.34 1455.16,1215.34 1455.74,1215.34 1456.33,1215.34 1456.91,1215.34 1457.5,1215.34 1458.09,1215.34 1458.67,1215.34 1459.26,1215.34 1459.85,1215.34 1460.43,1215.34 1461.02,1215.34 1461.61,1215.34 1462.19,1215.34 1462.78,1215.34 1463.37,1215.34 1463.95,1215.34 1464.54,1215.34 1465.12,1215.34 1465.71,1215.34 1466.3,1215.34 1466.88,1215.34 1467.47,1215.34 1468.06,1215.34 1468.64,1215.34 1469.23,1215.34 1469.82,1215.34 1470.4,1215.34 1470.99,1215.34 1471.57,1215.34 1472.16,1215.34 1472.75,1215.34 1473.33,1215.34 1473.92,1215.34 1474.51,1215.34 1475.09,1215.34 1475.68,1215.34 1476.27,1215.34 1476.85,1215.34 1477.44,1215.34 1478.03,1215.34 1478.61,1215.34 1479.2,1215.34 1479.78,1215.34 1480.37,1215.34 1480.96,1215.34 1481.54,1215.34 1482.13,1215.34 1482.72,1215.34 1483.3,1215.34 1483.89,1215.34 1484.48,1215.34 1485.06,1215.34 1485.65,1215.34 1486.24,1215.34 1486.82,1215.34 1487.41,1215.34 1487.99,1215.34 1488.58,1215.34 1489.17,1215.34 1489.75,1215.34 1490.34,1215.34 1490.93,1215.34 1491.51,1215.34 1492.1,1215.34 1492.69,1215.34 1493.27,1215.34 1493.86,1215.34 1494.45,1215.34 1495.03,1215.34 1495.62,1215.34 1496.2,1215.34 1496.79,1215.34 1497.38,1215.34 1497.96,1215.34 1498.55,1215.34 1499.14,1215.34 1499.72,1215.34 1500.31,1215.34 1500.9,1215.34 1501.48,1215.34 1502.07,1215.34 1502.65,1215.34 1503.24,1215.34 1503.83,1215.34 1504.41,1215.34 1505,1215.34 1505.59,1215.34 1506.17,1215.34 1506.76,1215.34 1507.35,1215.34 1507.93,1215.34 1508.52,1215.34 1509.11,1215.34 1509.69,1215.34 1510.28,1215.34 1510.86,1215.34 1511.45,1215.34 1512.04,1215.34 1512.62,1215.34 1513.21,1215.34 1513.8,1215.34 1514.38,1215.34 1514.97,1215.34 1515.56,1215.34 1516.14,1215.34 1516.73,1215.34 1517.32,1215.34 1517.9,1215.34 1518.49,1215.34 1519.07,1215.34 1519.66,1215.34 1520.25,1215.34 1520.83,1215.34 1521.42,1215.34 1522.01,1215.34 1522.59,1215.34 1523.18,1215.34 1523.77,1215.34 1524.35,1215.34 1524.94,1215.34 1525.52,1215.34 1526.11,1215.34 1526.7,1215.34 1527.28,1215.34 1527.87,1215.34 1528.46,1215.34 1529.04,1215.34 1529.63,1215.34 1530.22,1215.34 1530.8,1215.34 1531.39,1215.34 1531.98,1215.34 1532.56,1215.34 1533.15,1215.34 1533.73,1215.34 1534.32,1215.34 1534.91,1215.34 1535.49,1215.34 1536.08,1215.34 1536.67,1215.34 1537.25,1215.34 1537.84,1215.34 1538.43,1215.34 1539.01,1215.34 1539.6,1215.34 1540.19,1215.34 1540.77,1215.34 1541.36,1215.34 1541.94,1215.34 1542.53,1215.34 1543.12,1215.34 1543.7,1215.34 1544.29,1215.34 1544.88,1215.34 1545.46,1215.34 1546.05,1215.34 1546.64,1215.34 1547.22,1215.34 1547.81,1215.34 1548.4,1215.34 1548.98,1215.34 1549.57,1215.34 1550.15,1215.34 1550.74,1215.34 1551.33,1215.34 1551.91,1215.34 1552.5,1215.34 1553.09,1215.34 1553.67,1215.34 1554.26,1215.34 1554.85,1215.34 1555.43,1215.34 1556.02,1215.34 1556.6,1215.34 1557.19,1215.34 1557.78,1215.34 1558.36,1215.34 1558.95,1215.34 1559.54,1215.34 1560.12,1215.34 1560.71,1215.34 1561.3,1215.34 1561.88,1215.34 1562.47,1215.34 1563.06,1215.34 1563.64,1215.34 1564.23,1215.34 1564.81,1215.34 1565.4,1215.34 1565.99,1215.34 1566.57,1215.34 1567.16,1215.34 1567.75,1215.34 1568.33,1215.34 1568.92,1215.34 1569.51,1215.34 1570.09,1215.34 1570.68,1215.34 1571.27,1215.34 1571.85,1215.34 1572.44,1215.34 1573.02,1215.34 1573.61,1215.34 1574.2,1215.34 1574.78,1215.34 1575.37,1215.34 1575.96,1215.34 1576.54,1215.34 1577.13,1215.34 1577.72,1215.34 1578.3,1215.34 1578.89,1215.34 1579.47,1215.34 1580.06,1215.34 1580.65,1215.34 1581.23,1215.34 1581.82,1215.34 1582.41,1215.34 1582.99,1215.34 1583.58,1215.34 1584.17,1215.34 1584.75,1215.34 1585.34,1215.34 1585.93,1215.34 1586.51,1215.34 1587.1,1215.34 1587.68,1215.34 1588.27,1215.34 1588.86,1215.34 1589.44,1215.34 1590.03,1215.34 1590.62,1215.34 1591.2,1215.34 1591.79,1215.34 1592.38,1215.34 1592.96,1215.34 1593.55,1215.34 1594.14,1215.34 1594.72,1215.34 1595.31,1215.34 1595.89,1215.34 1596.48,1215.34 1597.07,1215.34 1597.65,1215.34 1598.24,1215.34 1598.83,1215.34 1599.41,1215.34 1600,1215.34 1600.59,1215.34 1601.17,1215.34 1601.76,1215.34 1602.34,1215.34 1602.93,1215.34 1603.52,1215.34 1604.1,1215.34 1604.69,1215.34 1605.28,1215.34 1605.86,1215.34 1606.45,1215.34 1607.04,1215.34 1607.62,1215.34 1608.21,1215.34 1608.8,1215.34 1609.38,1215.34 1609.97,1215.34 1610.55,1215.34 1611.14,1215.34 1611.73,1215.34 1612.31,1215.34 1612.9,1215.34 1613.49,1215.34 1614.07,1215.34 1614.66,1215.34 1615.25,1215.34 1615.83,1215.34 1616.42,1215.34 1617.01,1215.34 1617.59,1215.34 1618.18,1215.34 1618.76,1215.34 1619.35,1215.34 1619.94,1215.34 1620.52,1215.34 1621.11,1215.34 1621.7,1215.34 1622.28,1215.34 1622.87,1215.34 1623.46,1215.34 1624.04,1215.34 1624.63,1215.34 1625.22,1215.34 1625.8,1215.34 1626.39,1215.34 1626.97,1215.34 1627.56,1215.34 1628.15,1215.34 1628.73,1215.34 1629.32,1215.34 1629.91,1215.34 1630.49,1215.34 1631.08,1215.34 1631.67,1215.34 1632.25,1215.34 1632.84,1215.34 1633.42,1215.34 1634.01,1215.34 1634.6,1215.34 1635.18,1215.34 1635.77,1215.34 1636.36,1215.34 1636.94,1215.34 1637.53,1215.34 1638.12,1215.34 1638.7,1215.34 1639.29,1215.34 1639.88,1215.34 1640.46,1215.34 1641.05,1215.34 1641.63,1215.34 1642.22,1215.34 1642.81,1215.34 1643.39,1215.34 1643.98,1215.34 1644.57,1215.34 1645.15,1215.34 1645.74,1215.34 1646.33,1215.34 1646.91,1215.34 1647.5,1215.34 1648.09,1215.34 1648.67,1215.34 1649.26,1215.34 1649.84,1215.34 1650.43,1215.34 1651.02,1215.34 1651.6,1215.34 1652.19,1215.34 1652.78,1215.34 1653.36,1215.34 1653.95,1215.34 1654.54,1215.34 1655.12,1215.34 1655.71,1215.34 1656.29,1215.34 1656.88,1215.34 1657.47,1215.34 1658.05,1215.34 1658.64,1215.34 1659.23,1215.34 1659.81,1215.34 1660.4,1215.34 1660.99,1215.34 1661.57,1215.34 1662.16,1215.34 1662.75,1215.34 1663.33,1215.34 1663.92,1215.34 1664.5,1215.34 1665.09,1215.34 1665.68,1215.34 1666.26,1215.34 1666.85,1215.34 1667.44,1215.34 1668.02,1215.34 1668.61,1215.34 1669.2,1215.34 1669.78,1215.34 1670.37,1215.34 1670.96,1215.34 1671.54,1215.34 1672.13,1215.34 1672.71,1215.34 1673.3,1215.34 1673.89,1215.34 1674.47,1215.34 1675.06,1215.34 1675.65,1215.34 1676.23,1215.34 1676.82,1215.34 1677.41,1215.34 1677.99,1215.34 1678.58,1215.34 1679.17,1215.34 1679.75,1215.34 1680.34,1215.34 1680.92,1215.34 1681.51,1215.34 1682.1,1215.34 1682.68,1215.34 1683.27,1215.34 1683.86,1215.34 1684.44,1215.34 1685.03,1215.34 1685.62,1215.34 1686.2,1215.34 1686.79,1215.34 1687.37,1215.34 1687.96,1215.34 1688.55,1215.34 1689.13,1215.34 1689.72,1215.34 1690.31,1215.34 1690.89,1215.34 1691.48,1215.34 1692.07,1215.34 1692.65,1215.34 1693.24,1215.34 1693.83,1215.34 1694.41,1215.34 1695,1215.34 1695.58,1215.34 1696.17,1215.34 1696.76,1215.34 1697.34,1215.34 1697.93,1215.34 1698.52,1215.34 1699.1,1215.34 1699.69,1215.34 1700.28,1215.34 1700.86,1215.34 1701.45,1215.34 1702.04,1215.34 1702.62,1215.34 1703.21,1215.34 1703.79,1215.34 1704.38,1215.34 1704.97,1215.34 1705.55,1215.34 1706.14,1215.34 1706.73,1215.34 1707.31,1215.34 1707.9,1215.34 1708.49,1215.34 1709.07,1215.34 1709.66,1215.34 1710.24,1215.34 1710.83,1215.34 1711.42,1215.34 1712,1215.34 1712.59,1215.34 1713.18,1215.34 1713.76,1215.34 1714.35,1215.34 1714.94,1215.34 1715.52,1215.34 1716.11,1215.34 1716.7,1215.34 1717.28,1215.34 1717.87,1215.34 1718.45,1215.34 1719.04,1215.34 1719.63,1215.34 1720.21,1215.34 1720.8,1215.34 1721.39,1215.34 1721.97,1215.34 1722.56,1215.34 1723.15,1215.34 1723.73,1215.34 1724.32,1215.34 1724.91,1215.34 1725.49,1215.34 1726.08,1215.34 1726.66,1215.34 1727.25,1215.34 1727.84,1215.34 1728.42,1215.34 1729.01,1215.34 1729.6,1215.34 1730.18,1215.34 1730.77,1215.34 1731.36,1215.34 1731.94,1215.34 1732.53,1215.34 1733.11,1215.34 1733.7,1215.34 1734.29,1215.34 1734.87,1215.34 1735.46,1215.34 1736.05,1215.34 1736.63,1215.34 1737.22,1215.34 1737.81,1215.34 1738.39,1215.34 1738.98,1215.34 1739.57,1215.34 1740.15,1215.34 1740.74,1215.34 1741.32,1215.34 1741.91,1215.34 1742.5,1215.34 1743.08,1215.34 1743.67,1215.34 1744.26,1215.34 1744.84,1215.34 1745.43,1215.34 1746.02,1215.34 1746.6,1215.34 1747.19,1215.34 1747.78,1215.34 1748.36,1215.34 1748.95,1215.34 1749.53,1215.34 1750.12,1215.34 1750.71,1215.34 1751.29,1215.34 1751.88,1215.34 1752.47,1215.34 1753.05,1215.34 1753.64,1215.34 1754.23,1215.34 1754.81,1215.34 1755.4,1215.34 1755.99,1215.34 1756.57,1215.34 1757.16,1215.34 1757.74,1215.34 1758.33,1215.34 1758.92,1215.34 1759.5,1215.34 1760.09,1215.34 1760.68,1215.34 1761.26,1215.34 1761.85,1215.34 1762.44,1215.34 1763.02,1215.34 1763.61,1215.34 1764.19,1215.34 1764.78,1215.34 1765.37,1215.34 1765.95,1215.34 1766.54,1215.34 1767.13,1215.34 1767.71,1215.34 1768.3,1215.34 1768.89,1215.34 1769.47,1215.34 1770.06,1215.34 1770.65,1215.34 1771.23,1215.34 1771.82,1215.34 1772.4,1215.34 1772.99,1215.34 1773.58,1215.34 1774.16,1215.34 1774.75,1215.34 1775.34,1215.34 1775.92,1215.34 1776.51,1215.34 1777.1,1215.34 1777.68,1215.34 1778.27,1215.34 1778.86,1215.34 1779.44,1215.34 1780.03,1215.34 1780.61,1215.34 1781.2,1215.34 1781.79,1215.34 1782.37,1215.34 1782.96,1215.34 1783.55,1215.34 1784.13,1215.34 1784.72,1215.34 1785.31,1215.34 1785.89,1215.34 1786.48,1215.34 1787.06,1215.34 1787.65,1215.34 1788.24,1215.34 1788.82,1215.34 1789.41,1215.34 1790,1215.34 1790.58,1215.34 1791.17,1215.34 1791.76,1215.34 1792.34,1215.34 1792.93,1215.34 1793.52,1215.34 1794.1,1215.34 1794.69,1215.34 1795.27,1215.34 1795.86,1215.34 1796.45,1215.34 1797.03,1215.34 1797.62,1215.34 1798.21,1215.34 1798.79,1215.34 1799.38,1215.34 1799.97,1215.34 1800.55,1215.34 1801.14,1215.34 1801.73,1215.34 1802.31,1215.34 1802.9,1215.34 1803.48,1215.34 1804.07,1215.34 1804.66,1215.34 1805.24,1215.34 1805.83,1215.34 1806.42,1215.34 1807,1215.34 1807.59,1215.34 1808.18,1215.34 1808.76,1215.34 1809.35,1215.34 1809.94,1215.34 1810.52,1215.34 1811.11,1215.34 1811.69,1215.34 1812.28,1215.34 1812.87,1215.34 1813.45,1215.34 1814.04,1215.34 1814.63,1215.34 1815.21,1215.34 1815.8,1215.34 1816.39,1215.34 1816.97,1215.34 1817.56,1215.34 1818.14,1215.34 1818.73,1215.34 1819.32,1215.34 1819.9,1215.34 1820.49,1215.34 1821.08,1215.34 1821.66,1215.34 1822.25,1215.34 1822.84,1215.34 1823.42,1215.34 1824.01,1215.34 1824.6,1215.34 1825.18,1215.34 1825.77,1215.34 1826.35,1215.34 1826.94,1215.34 1827.53,1215.34 1828.11,1215.34 1828.7,1215.34 1829.29,1215.34 1829.87,1215.34 1830.46,1215.34 1831.05,1215.34 1831.63,1215.34 1832.22,1215.34 1832.81,1215.34 1833.39,1215.34 1833.98,1215.34 1834.56,1215.34 1835.15,1215.34 1835.74,1215.34 1836.32,1215.34 1836.91,1215.34 1837.5,1215.34 1838.08,1215.34 1838.67,1215.34 1839.26,1215.34 1839.84,1215.34 1840.43,1215.34 1841.01,1215.34 1841.6,1215.34 1842.19,1215.34 1842.77,1215.34 1843.36,1215.34 1843.95,1215.34 1844.53,1215.34 1845.12,1215.34 1845.71,1215.34 1846.29,1215.34 1846.88,1215.34 1847.47,1215.34 1848.05,1215.34 1848.64,1215.34 1849.22,1215.34 1849.81,1215.34 1850.4,1215.34 1850.98,1215.34 1851.57,1215.34 1852.16,1215.34 1852.74,1215.34 1853.33,1215.34 1853.92,1215.34 1854.5,1215.34 1855.09,1215.34 1855.68,1215.34 1856.26,1215.34 1856.85,1215.34 1857.43,1215.34 1858.02,1215.34 1858.61,1215.34 1859.19,1215.34 1859.78,1215.34 1860.37,1215.34 1860.95,1215.34 1861.54,1215.34 1862.13,1215.34 1862.71,1215.34 1863.3,1215.34 1863.88,1215.34 1864.47,1215.34 1865.06,1215.34 1865.64,1215.34 1866.23,1215.34 1866.82,1215.34 1867.4,1215.34 1867.99,1215.34 1868.58,1215.34 1869.16,1215.34 1869.75,1215.34 1870.34,1215.34 1870.92,1215.34 1871.51,1215.34 1872.09,1215.34 1872.68,1215.34 1873.27,1215.34 1873.85,1215.34 1874.44,1215.34 1875.03,1215.34 1875.61,1215.34 1876.2,1215.34 1876.79,1215.34 1877.37,1215.34 1877.96,1215.34 1878.55,1215.34 1879.13,1215.34 1879.72,1215.34 1880.3,1215.34 1880.89,1215.34 1881.48,1215.34 1882.06,1215.34 1882.65,1215.34 1883.24,1215.34 1883.82,1215.34 1884.41,1215.34 1885,1215.34 1885.58,1215.34 1886.17,1215.34 1886.76,1215.34 1887.34,1215.34 1887.93,1215.34 1888.51,1215.34 1889.1,1215.34 1889.69,1215.34 1890.27,1215.34 1890.86,1215.34 1891.45,1215.34 1892.03,1215.34 1892.62,1215.34 1893.21,1215.34 1893.79,1215.34 1894.38,1215.34 1894.96,1215.34 1895.55,1215.34 1896.14,1215.34 1896.72,1215.34 1897.31,1215.34 1897.9,1215.34 1898.48,1215.34 1899.07,1215.34 1899.66,1215.34 1900.24,1215.34 1900.83,1215.34 1901.42,1215.34 1902,1215.34 1902.59,1215.34 1903.17,1215.34 1903.76,1215.34 1904.35,1215.34 1904.93,1215.34 1905.52,1215.34 1906.11,1215.34 1906.69,1215.34 1907.28,1215.34 1907.87,1215.34 1908.45,1215.34 1909.04,1215.34 1909.63,1215.34 1910.21,1215.34 1910.8,1215.34 1911.38,1215.34 1911.97,1215.34 1912.56,1215.34 1913.14,1215.34 1913.73,1215.34 1914.32,1215.34 1914.9,1215.34 1915.49,1215.34 1916.08,1215.34 1916.66,1215.34 1917.25,1215.34 1917.83,1215.34 1918.42,1215.34 1919.01,1215.34 1919.59,1215.34 1920.18,1215.34 1920.77,1215.34 1921.35,1215.34 1921.94,1215.34 1922.53,1215.34 1923.11,1215.34 1923.7,1215.34 1924.29,1215.34 1924.87,1215.34 1925.46,1215.34 1926.04,1215.34 1926.63,1215.34 1927.22,1215.34 1927.8,1215.34 1928.39,1215.34 1928.98,1215.34 1929.56,1215.34 1930.15,1215.34 1930.74,1215.34 1931.32,1215.34 1931.91,1215.34 1932.5,1215.34 1933.08,1215.34 1933.67,1215.34 1934.25,1215.34 1934.84,1215.34 1935.43,1215.34 1936.01,1215.34 1936.6,1215.34 1937.19,1215.34 1937.77,1215.34 1938.36,1215.34 1938.95,1215.34 1939.53,1215.34 1940.12,1215.34 1940.71,1215.34 1941.29,1215.34 1941.88,1215.34 1942.46,1215.34 1943.05,1215.34 1943.64,1215.34 1944.22,1215.34 1944.81,1215.34 1945.4,1215.34 1945.98,1215.34 1946.57,1215.34 1947.16,1215.34 1947.74,1215.34 1948.33,1215.34 1948.91,1215.34 1949.5,1215.34 1950.09,1215.34 1950.67,1215.34 1951.26,1215.34 1951.85,1215.34 1952.43,1215.34 1953.02,1215.34 1953.61,1215.34 1954.19,1215.34 1954.78,1215.34 1955.37,1215.34 1955.95,1215.34 1956.54,1215.34 1957.12,1215.34 1957.71,1215.34 1958.3,1215.34 1958.88,1215.34 1959.47,1215.34 1960.06,1215.34 1960.64,1215.34 1961.23,1215.34 1961.82,1215.34 1962.4,1215.34 1962.99,1215.34 1963.58,1215.34 1964.16,1215.34 1964.75,1215.34 1965.33,1215.34 1965.92,1215.34 1966.51,1215.34 1967.09,1215.34 1967.68,1215.34 1968.27,1215.34 1968.85,1215.34 1969.44,1215.34 1970.03,1215.34 1970.61,1215.34 1971.2,1215.34 1971.78,1215.34 1972.37,1215.34 1972.96,1215.34 1973.54,1215.34 1974.13,1215.34 1974.72,1215.34 1975.3,1215.34 1975.89,1215.34 1976.48,1215.34 1977.06,1215.34 1977.65,1215.34 1978.24,1215.34 1978.82,1215.34 1979.41,1215.34 1979.99,1215.34 1980.58,1215.34 1981.17,1215.34 1981.75,1215.34 1982.34,1215.34 1982.93,1215.34 1983.51,1215.34 1984.1,1215.34 1984.69,1215.34 1985.27,1215.34 1985.86,1215.34 1986.45,1215.34 1987.03,1215.34 1987.62,1215.34 1988.2,1215.34 1988.79,1215.34 1989.38,1215.34 1989.96,1215.34 1990.55,1215.34 1991.14,1215.34 1991.72,1215.34 1992.31,1215.34 1992.9,1215.34 1993.48,1215.34 1994.07,1215.34 1994.65,1215.34 1995.24,1215.34 1995.83,1215.34 1996.41,1215.34 1997,1215.34 1997.59,1215.34 1998.17,1215.34 1998.76,1215.34 1999.35,1215.34 1999.93,1215.34 2000.52,1215.34 2001.11,1215.34 2001.69,1215.34 2002.28,1215.34 2002.86,1215.34 2003.45,1215.34 2004.04,1215.34 2004.62,1215.34 2005.21,1215.34 2005.8,1215.34 2006.38,1215.34 2006.97,1215.34 2007.56,1215.34 2008.14,1215.34 2008.73,1215.34 2009.32,1215.34 2009.9,1215.34 2010.49,1215.34 2011.07,1215.34 2011.66,1215.34 2012.25,1215.34 2012.83,1215.34 2013.42,1215.34 2014.01,1215.34 2014.59,1215.34 2015.18,1215.34 2015.77,1215.34 2016.35,1215.34 2016.94,1215.34 2017.53,1215.34 2018.11,1215.34 2018.7,1215.34 2019.28,1215.34 2019.87,1215.34 2020.46,1215.34 2021.04,1215.34 2021.63,1215.34 2022.22,1215.34 2022.8,1215.34 2023.39,1215.34 2023.98,1215.34 2024.56,1215.34 2025.15,1215.34 2025.73,1215.34 2026.32,1215.34 2026.91,1215.34 2027.49,1215.34 2028.08,1215.34 2028.67,1215.34 2029.25,1215.34 2029.84,1215.34 2030.43,1215.34 2031.01,1215.34 2031.6,1215.34 2032.19,1215.34 2032.77,1215.34 2033.36,1215.34 2033.94,1215.34 2034.53,1215.34 2035.12,1215.34 2035.7,1215.34 2036.29,1215.34 2036.88,1215.34 2037.46,1215.34 2038.05,1215.34 2038.64,1215.34 2039.22,1215.34 2039.81,1215.34 2040.4,1215.34 2040.98,1215.34 2041.57,1215.34 2042.15,1215.34 2042.74,1215.34 2043.33,1215.34 2043.91,1215.34 2044.5,1215.34 2045.09,1215.34 2045.67,1215.34 2046.26,1215.34 2046.85,1215.34 2047.43,1215.34 2048.02,1215.34 2048.6,1215.34 2049.19,1215.34 2049.78,1215.34 2050.36,1215.34 2050.95,1215.34 2051.54,1215.34 2052.12,1215.34 2052.71,1215.34 2053.3,1215.34 2053.88,1215.34 2054.47,1215.34 2055.06,1215.34 2055.64,1215.34 2056.23,1215.34 2056.81,1215.34 2057.4,1215.34 2057.99,1215.34 2058.57,1215.34 2059.16,1215.34 2059.75,1215.34 2060.33,1215.34 2060.92,1215.34 2061.51,1215.34 2062.09,1215.34 2062.68,1215.34 2063.27,1215.34 2063.85,1215.34 2064.44,1215.34 2065.02,1215.34 2065.61,1215.34 2066.2,1215.34 2066.78,1215.34 2067.37,1215.34 2067.96,1215.34 2068.54,1215.34 2069.13,1215.34 2069.72,1215.34 2070.3,1215.34 2070.89,1215.34 2071.48,1215.34 2072.06,1215.34 2072.65,1215.34 2073.23,1215.34 2073.82,1215.34 2074.41,1215.34 2074.99,1215.34 2075.58,1215.34 2076.17,1215.34 2076.75,1215.34 2077.34,1215.34 2077.93,1215.34 2078.51,1215.34 2079.1,1215.34 2079.68,1215.34 2080.27,1215.34 2080.86,1215.34 2081.44,1215.34 2082.03,1215.34 2082.62,1215.34 2083.2,1215.34 2083.79,1215.34 2084.38,1215.34 2084.96,1215.34 2085.55,1215.34 2086.14,1215.34 2086.72,1215.34 2087.31,1215.34 2087.89,1215.34 2088.48,1215.34 2089.07,1215.34 2089.65,1215.34 2090.24,1215.34 2090.83,1215.34 2091.41,1215.34 2092,1215.34 2092.59,1215.34 2093.17,1215.34 2093.76,1215.34 2094.35,1215.34 2094.93,1215.34 2095.52,1215.34 2096.1,1215.34 2096.69,1215.34 2097.28,1215.34 2097.86,1215.34 2098.45,1215.34 2099.04,1215.34 2099.62,1215.34 2100.21,1215.34 2100.8,1215.34 2101.38,1215.34 2101.97,1215.34 2102.55,1215.34 2103.14,1215.34 2103.73,1215.34 2104.31,1215.34 2104.9,1215.34 2105.49,1215.34 2106.07,1215.34 2106.66,1215.34 2107.25,1215.34 2107.83,1215.34 2108.42,1215.34 2109.01,1215.34 2109.59,1215.34 2110.18,1215.34 2110.76,1215.34 2111.35,1215.34 2111.94,1215.34 2112.52,1215.34 2113.11,1215.34 2113.7,1215.34 2114.28,1215.34 2114.87,1215.34 2115.46,1215.34 2116.04,1215.34 2116.63,1215.34 2117.22,1215.34 2117.8,1215.34 2118.39,1215.34 2118.97,1215.34 2119.56,1215.34 2120.15,1215.34 2120.73,1215.34 2121.32,1215.34 2121.91,1215.34 2122.49,1215.34 2123.08,1215.34 2123.67,1215.34 2124.25,1215.34 2124.84,1215.34 2125.42,1215.34 2126.01,1215.34 2126.6,1215.34 2127.18,1215.34 2127.77,1215.34 2128.36,1215.34 2128.94,1215.34 2129.53,1215.34 2130.12,1215.34 2130.7,1215.34 2131.29,1215.34 2131.88,1215.34 2132.46,1215.34 2133.05,1215.34 2133.63,1215.34 2134.22,1215.34 2134.81,1215.34 2135.39,1215.34 2135.98,1215.34 2136.57,1215.34 2137.15,1215.34 2137.74,1215.34 2138.33,1215.34 2138.91,1215.34 2139.5,1215.34 2140.09,1215.34 2140.67,1215.34 2141.26,1215.34 2141.84,1215.34 2142.43,1215.34 2143.02,1215.34 2143.6,1215.34 2144.19,1215.34 2144.78,1215.34 2145.36,1215.34 2145.95,1215.34 2146.54,1215.34 2147.12,1215.34 2147.71,1215.34 2148.3,1215.34 2148.88,1215.34 2149.47,1215.34 2150.05,1215.34 2150.64,1215.34 2151.23,1215.34 2151.81,1215.34 2152.4,1215.34 2152.99,1215.34 2153.57,1215.34 2154.16,1215.34 2154.75,1215.34 2155.33,1215.34 2155.92,1215.34 2156.5,1215.34 2157.09,1215.34 2157.68,1215.34 2158.26,1215.34 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.07,1197.3 1398.66,899.083 \"/>\n<polyline clip-path=\"url(#clip232)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1232.99 985.439,1197.3 2158.26,1197.3 2158.26,1232.99 985.439,1232.99 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip230)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip230)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip233\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip230)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip230)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip230)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip233)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-32.6883 161.555,-1456.43 162.114,-2761.65 162.673,-3986.53 163.232,-5060 163.792,-6089.95 164.351,-5699.63 164.91,-5442.77 165.469,-6322.82 166.029,-7161.94 166.588,-7869.48 167.147,-8532.41 167.706,-9130.93 168.266,-9669.2 168.825,-10151.1 169.384,-10580.3 169.943,-10960.3 170.503,-10588.3 171.062,-10928.9 171.621,-11226.6 172.18,-10892.2 172.74,-10607.5 173.299,-10833.9 173.858,-11018.8 174.417,-11170.7 174.977,-11284.6 175.536,-11388.7 176.095,-11459.3 176.655,-11503.2 177.214,-11188.8 177.773,-11209.5 178.332,-11195.6 178.892,-11162.8 179.451,-10873.6 180.01,-10822.6 180.569,-10532.3 181.129,-10048.8 181.688,-9799.4 182.247,-9548 182.806,-9316.81 183.366,-8934.49 183.925,-8713.63 184.484,-8362.04 185.043,-8288.6 185.603,-8073.14 186.162,-7986.07 186.721,-7675.34 187.28,-7263.41 187.84,-7169.82 188.399,-6980.08 188.958,-6875.75 189.517,-6773.6 190.077,-6582.01 190.636,-6392.37 191.195,-6286.61 191.754,-6113 192.314,-5936.39 192.873,-5625.6 193.432,-5468.01 193.991,-5378.11 194.551,-5156.14 195.11,-5067.18 195.669,-4974.03 196.228,-4884.44 196.788,-4787.84 197.347,-4582.83 197.906,-4337.83 198.465,-4153.2 199.025,-4067.63 199.584,-3834.21 200.143,-3665.5 200.702,-3500.31 201.262,-3387.34 201.821,-3276.01 202.38,-3167.07 202.939,-3019.41 203.499,-2842.05 204.058,-2780.45 204.617,-2646.97 205.176,-2485.08 205.736,-2396.65 206.295,-2342.24 206.854,-2252.46 207.413,-2196.93 207.973,-2073.68 208.532,-1955.5 209.091,-1875.08 209.65,-1799.67 210.21,-1755.67 210.769,-1647.7 211.328,-1573.62 211.887,-1442.23 212.447,-1374.38 213.006,-1279.1 213.565,-1212.68 214.124,-1120.27 214.684,-1032.04 215.243,-920.61 215.802,-889.747 216.361,-786.836 216.921,-757.158 217.48,-683.281 218.039,-633.234 218.598,-559.854 219.158,-490.65 219.717,-471.451 220.276,-449.263 220.835,-382.922 221.395,-361.268 221.954,-318.656 222.513,-185.403 223.072,-143.719 223.632,-169.906 224.191,-129.74 224.75,-26.717 225.309,76.7623 225.869,131.35 226.428,165.631 226.987,200.782 227.546,233.23 228.106,243.712 228.665,276.028 229.224,287.035 229.783,296.605 230.343,307.992 230.902,315.593 231.461,364.072 232.02,391.606 232.58,461.74 233.139,470.299 233.698,500.622 234.257,524.811 234.817,554.231 235.376,600.788 235.935,604.886 236.494,701.052 237.054,739.571 237.613,720.414 238.172,720.483 238.731,739.646 239.291,777.023 239.85,775.874 240.409,773.632 240.968,773.032 241.528,775.45 242.087,773.955 242.646,755.457 243.205,761.539 243.765,762.215 244.324,766.506 244.883,770.781 245.442,808.684 246.002,826.276 246.561,827.804 247.12,863.985 247.679,846.188 248.239,884.328 248.798,900.317 249.357,917.492 249.916,895.648 250.476,893.554 251.035,890.108 251.594,922.28 252.153,955.072 252.713,935.374 253.272,985.124 253.831,981.544 254.39,1010.01 254.95,1019.64 255.509,1012.78 256.068,1037.75 256.627,1113.75 257.187,1084.75 257.746,1075.59 258.305,1067.27 258.864,1057.11 259.424,1032.58 259.983,1022.08 260.542,1000.06 261.101,1044.11 261.661,1054.35 262.22,1064.43 262.779,1091.2 263.338,1046.82 263.898,1071.8 264.457,1064.72 265.016,1059.18 265.575,1037.01 266.135,1028.82 266.694,1039.11 267.253,1064.78 267.812,1058.53 268.372,1049.83 268.931,1042.89 269.49,1056.08 270.049,1066.35 270.609,1075.92 271.168,1064.12 271.727,1058.82 272.286,1071.01 272.846,1064.65 273.405,1056.92 273.964,999.537 274.523,961.016 275.083,995.669 275.642,975.441 276.201,1009.95 276.76,1021.4 277.32,999.902 277.879,1028.69 278.438,1043.16 278.997,1037.79 279.557,1047.17 280.116,1054.72 280.675,1065.54 281.234,1055.45 281.794,1049.35 282.353,1076.28 282.912,1068.01 283.471,1078.83 284.031,1072.49 284.59,1062.41 285.149,1018.73 285.708,1027.62 286.268,1006.92 286.827,1016.8 287.386,1010.26 287.945,992.27 288.505,1004.14 289.064,1027.62 289.623,1003.53 290.182,1017.37 290.742,1025.85 291.301,1051.64 291.86,1094.31 292.419,1034.13 292.979,1077.63 293.538,1083.89 294.097,1074.44 294.656,1066.63 295.216,1075.55 295.775,1100.43 296.334,1108.16 296.893,1113.71 297.453,1082.78 298.012,1069.58 298.571,1029 299.13,1040.51 299.69,1049.34 300.249,1041.51 300.808,1033.16 301.368,1025.82 301.927,1035.88 302.486,997.337 303.045,996.082 303.605,991.86 304.164,988.172 304.723,980.415 305.282,991.781 305.842,1000.14 306.401,999.533 306.96,994.058 307.519,967.825 308.079,969.196 308.638,996.742 309.197,991.189 309.756,982.641 310.316,987.228 310.875,979.427 311.434,956.137 311.993,918.666 312.553,916.58 313.112,916.099 313.671,931.505 314.23,894.784 314.79,892.76 315.349,909.276 315.908,890.664 316.467,903.739 317.027,902.824 317.586,919.352 318.145,897.731 318.704,893.492 319.264,894.069 319.823,841.945 320.382,842.218 320.941,844.016 321.501,860.798 322.06,859.222 322.619,873.54 323.178,857.298 323.738,873.991 324.297,874.05 324.856,874.688 325.415,907.166 325.975,887.763 326.534,905.535 327.093,920.758 327.652,899.336 328.212,879.85 328.771,877.96 329.33,846.02 329.889,830.399 330.449,848.674 331.008,852.319 331.567,835.697 332.126,835.087 332.686,870.549 333.245,836.945 333.804,854.609 334.363,866.95 334.923,882.599 335.482,863.79 336.041,878.499 336.6,895.922 337.16,890.154 337.719,891.537 338.278,906.204 338.837,889.87 339.397,870.028 339.956,867.334 340.515,864.532 341.074,846.666 341.634,844.262 342.193,845.508 342.752,874.164 343.311,852.376 343.871,831.786 344.43,862.314 344.989,839.645 345.548,822.523 346.108,822.872 346.667,809.178 347.226,845.787 347.785,843.196 348.345,858.328 348.904,907.889 349.463,920.878 350.022,947.838 350.582,959.768 351.141,985.763 351.7,943.496 352.259,921.445 352.819,916.725 353.378,895.373 353.937,892.189 354.496,887.498 355.056,847.596 355.615,850.941 356.174,847.672 356.733,833.29 357.293,850.15 357.852,865.321 358.411,861.966 358.97,875.323 359.53,840.273 360.089,859.045 360.648,907.309 361.207,919.851 361.767,947.72 362.326,923.554 362.885,916.956 363.444,912.865 364.004,939.724 364.563,964.298 365.122,957.303 365.681,979.088 366.241,956.527 366.8,914.586 367.359,907.334 367.918,918.718 368.478,913.55 369.037,954.172 369.596,978.932 370.155,1000.43 370.715,1005.57 371.274,1008.76 371.833,994.063 372.392,967.521 372.952,975.655 373.511,979.593 374.07,985.905 374.629,974.849 375.189,962.973 375.748,972.615 376.307,969.901 376.866,996.434 377.426,1016.08 377.985,1004.12 378.544,980.477 379.103,921.824 379.663,949.121 380.222,941.86 380.781,950.093 381.34,923.779 381.9,968.215 382.459,941.852 383.018,933.617 383.577,944.355 384.137,923.251 384.696,916.162 385.255,895.887 385.814,939.109 386.374,895.967 386.933,888.613 387.492,900.103 388.051,893.372 388.611,854.471 389.17,866.978 389.729,863.863 390.288,827.913 390.848,789.677 391.407,787.86 391.966,768.861 392.525,801.788 393.085,814.2 393.644,827.729 394.203,821.639 394.762,835.876 395.322,834.649 395.881,866.203 396.44,840.042 396.999,836.597 397.559,817.883 398.118,810.965 398.677,811.491 399.236,812.575 399.796,812.032 400.355,827.785 400.914,788.991 401.473,802.813 402.033,819.731 402.592,859.671 403.151,855.115 403.71,819.992 404.27,834.417 404.829,816.498 405.388,812.951 405.947,811.336 406.507,794.361 407.066,778.229 407.625,760.803 408.184,758.224 408.744,696.877 409.303,719.492 409.862,709.686 410.421,697.848 410.981,686.516 411.54,706.148 412.099,708.489 412.658,712.21 413.218,730.819 413.777,765.326 414.336,780.117 414.895,776.295 415.455,776.439 416.014,743.378 416.573,747.355 417.132,799.03 417.692,781.318 418.251,814.125 418.81,811.915 419.369,822.827 419.929,837.683 420.488,864.629 421.047,876.815 421.606,871.51 422.166,882.667 422.725,911.728 423.284,918.621 423.843,911.799 424.403,907.996 424.962,916.147 425.521,944.324 426.08,949.709 426.64,922.793 427.199,912.488 427.758,889.892 428.318,882.788 428.877,860.22 429.436,821.811 429.995,785.222 430.555,763.568 431.114,715.885 431.673,732.315 432.232,733.539 432.792,734.969 433.351,768.854 433.91,734.31 434.469,714.674 435.029,732.571 435.588,733.949 436.147,747.399 436.706,715.368 437.266,719.668 437.825,770.43 438.384,753.215 438.943,738.013 439.503,726.948 440.062,712.4 440.621,747.328 441.18,750.496 441.74,781.579 442.299,796.007 442.858,779.945 443.417,788.816 443.977,772.098 444.536,770.804 445.095,782.914 445.654,795.34 446.214,804.617 446.773,801.779 447.332,763.875 447.891,762.444 448.451,760.447 449.01,788.312 449.569,770.754 450.128,772.69 450.688,787.221 451.247,771.271 451.806,782.147 452.365,795.786 452.925,763.693 453.484,729.605 454.043,744.684 454.602,713.248 455.162,714.874 455.721,701.357 456.28,720.868 456.839,704.191 457.399,722.107 457.958,706.306 458.517,707.675 459.076,710.814 459.636,729.982 460.195,745.073 460.754,730.824 461.313,732.102 461.873,747.915 462.432,745.342 462.991,714.363 463.55,732.174 464.11,716.049 464.669,715.604 465.228,732.095 465.787,731.68 466.347,718.887 466.906,726.664 467.465,699.013 468.024,719.319 468.584,720.545 469.143,740.189 469.702,739.339 470.261,706.931 470.821,712.897 471.38,711.104 471.939,680.531 472.498,706.061 473.058,725.906 473.617,730.661 474.176,767.89 474.735,767.081 475.295,801.785 475.854,781.193 476.413,795.558 476.972,807.914 477.532,805.356 478.091,803.248 478.65,798.442 479.209,815.634 479.769,812.803 480.328,843.245 480.887,839.733 481.446,868.835 482.006,859.93 482.565,806.162 483.124,804.191 483.683,784.777 484.243,862.001 484.802,871.616 485.361,813.702 485.92,825.237 486.48,835.258 487.039,833.4 487.598,812.115 488.157,808.6 488.717,774.347 489.276,788.219 489.835,799.339 490.394,812.177 490.954,804.787 491.513,798.83 492.072,809.738 492.631,823.467 493.191,817.893 493.75,829.094 494.309,826.072 494.868,822.821 495.428,817.823 495.987,794.93 496.546,809.601 497.105,774.73 497.665,776.751 498.224,790.679 498.783,836.108 499.342,831.843 499.902,822.808 500.461,817.436 501.02,764.887 501.579,760.6 502.139,791.197 502.698,852.537 503.257,826.448 503.816,820.015 504.376,817.492 504.935,813.518 505.494,826.002 506.053,789.683 506.613,802.398 507.172,732.845 507.731,699.191 508.29,731.12 508.85,715.361 509.409,699.791 509.968,700.436 510.527,719.003 511.087,720.061 511.646,733.701 512.205,715.44 512.764,714.875 513.324,716.39 513.883,698.499 514.442,683.308 515.001,701.99 515.561,706.456 516.12,689.799 516.679,673.01 517.238,659.482 517.798,616.742 518.357,656.953 518.916,665.686 519.475,670.189 520.035,674.282 520.594,694.639 521.153,679.585 521.712,698.008 522.272,698.627 522.831,682.374 523.39,699.566 523.949,687.076 524.509,688.578 525.068,686.205 525.627,754.026 526.186,722.076 526.746,704.762 527.305,738.626 527.864,738.197 528.423,738.249 528.983,737.237 529.542,716.283 530.101,731.859 530.66,749.593 531.22,746.604 531.779,743.559 532.338,695.292 532.897,682.627 533.457,700.797 534.016,672.159 534.575,690.172 535.134,704.969 535.694,706.794 536.253,708.033 536.812,709.504 537.371,711.161 537.931,714.364 538.49,699.238 539.049,699.841 539.608,682.037 540.168,671.027 540.727,655.521 541.286,688.103 541.845,694.562 542.405,692.802 542.964,708.326 543.523,708.04 544.082,724.919 544.642,724.985 545.201,709.482 545.76,708.991 546.319,706.964 546.879,714.145 547.438,713.881 547.997,717.469 548.556,717.686 549.116,752.304 549.675,752.32 550.234,765.839 550.793,729.382 551.353,727.968 551.912,713.476 552.471,698.164 553.031,714.73 553.59,711.484 554.149,711.719 554.708,694.018 555.268,694.467 555.827,695.537 556.386,695.686 556.945,696.494 557.505,698.883 558.064,699.421 558.623,701.795 559.182,734.033 559.742,717.704 560.301,715.214 560.86,715.146 561.419,745.62 561.979,729.334 562.538,692.665 563.097,678.963 563.656,664.335 564.216,669.042 564.775,656.609 565.334,658.611 565.893,661.918 566.453,680.173 567.012,669.32 567.571,674.197 568.13,676.453 568.69,659.898 569.249,677.364 569.808,697.304 570.367,715.452 570.927,717.78 571.486,721.395 572.045,688.285 572.604,703.839 573.164,704.214 573.723,688.047 574.282,693.132 574.841,694.209 575.401,713.99 575.96,731.013 576.519,746.825 577.078,742.529 577.638,743.757 578.197,742.806 578.756,773.607 579.315,781.389 579.875,798.487 580.434,763.437 580.993,759.129 581.552,771.402 582.112,784.122 582.671,781.916 583.23,809.609 583.789,804.452 584.349,785.08 584.908,764.055 585.467,777.853 586.026,772.951 586.586,771.983 587.145,754.574 587.704,786.13 588.263,784.84 588.823,781.17 589.382,811.37 589.941,822.784 590.5,816.008 591.06,822.915 591.619,851.69 592.178,843.4 592.737,804.826 593.297,765.718 593.856,765.071 594.415,779.922 594.974,760.093 595.534,758.037 596.093,786.787 596.652,767.497 597.211,764.644 597.771,743.545 598.33,756.486 598.889,770.241 599.448,768.253 600.008,766.964 600.567,764.453 601.126,793.109 601.685,808.128 602.245,802.276 602.804,780.577 603.363,795.746 603.922,810.741 604.482,775.711 605.041,790.461 605.6,753.839 606.159,735.944 606.719,719.683 607.278,703.36 607.837,687.445 608.396,698.33 608.956,744.079 609.515,742.158 610.074,770.623 610.633,749.826 611.193,748.455 611.752,697.461 612.311,714.659 612.87,699.233 613.43,715.899 613.989,726.495 614.548,741.809 615.107,692.244 615.667,661.871 616.226,662.741 616.785,663.008 617.344,711.399 617.904,711.414 618.463,675.122 619.022,676.75 619.581,661.329 620.141,677.963 620.7,692.875 621.259,708.603 621.818,675.613 622.378,661.799 622.937,680.828 623.496,630.178 624.055,637.187 624.615,672.419 625.174,686.634 625.733,667.767 626.292,683.516 626.852,652.474 627.411,640.677 627.97,610.731 628.529,664.299 629.089,663.808 629.648,664.53 630.207,650.144 630.766,605.668 631.326,613.685 631.885,636.674 632.444,675.645 633.003,678.132 633.563,696.746 634.122,714.631 634.681,730.11 635.24,731.846 635.8,715.206 636.359,746.714 636.918,742.6 637.477,743.587 638.037,758.501 638.596,759.315 639.155,805.464 639.714,818.045 640.274,827.909 640.833,791.432 641.392,784.992 641.951,765.303 642.511,778.787 643.07,756.789 643.629,753.234 644.188,767.236 644.748,749.512 645.307,730.342 645.866,709.938 646.425,709.518 646.985,710.792 647.544,788.103 648.103,752.158 648.662,780.171 649.222,757.639 649.781,756.651 650.34,753.082 650.899,731.047 651.459,730.971 652.018,727.618 652.577,725.633 653.136,725.4 653.696,740.086 654.255,768.802 654.814,766.19 655.373,731.295 655.933,727.133 656.492,743.655 657.051,722.227 657.61,724.141 658.17,692.014 658.729,660.735 659.288,678.473 659.847,667.612 660.407,656.804 660.966,675.535 661.525,712.401 662.084,711.967 662.644,709.772 663.203,709.625 663.762,709.011 664.321,711.641 664.881,711.055 665.44,710.367 665.999,746.954 666.558,794.86 667.118,805.454 667.677,799.767 668.236,807.41 668.795,781.883 669.355,758.826 669.914,770.685 670.473,782.379 671.032,744.423 671.592,756.531 672.151,784.146 672.71,765.101 673.269,778.288 673.829,794.18 674.388,802.573 674.947,777.943 675.506,776.41 676.066,790.638 676.625,765.788 677.184,761.673 677.743,742.909 678.303,773.955 678.862,735.371 679.421,716.629 679.981,748.113 680.54,727.236 681.099,704.842 681.658,673.286 682.218,676.919 682.777,663.07 683.336,663.495 683.895,633.242 684.455,617.444 685.014,606.669 685.573,629.094 686.132,601.43 686.692,636.768 687.251,624.41 687.81,644.319 688.369,660.379 688.929,643.57 689.488,643.104 690.047,646.65 690.606,632.006 691.166,649.334 691.725,625.184 692.284,662.229 692.843,679.086 693.403,710.425 693.962,676.043 694.521,646.4 695.08,644.615 695.64,681.139 696.199,665.658 696.758,648.337 697.317,637.458 697.877,638.999 698.436,623.625 698.995,612.76 699.554,611.593 700.114,614.406 700.673,640.455 701.232,679.19 701.791,696.914 702.351,696.75 702.91,712.376 703.469,710.124 704.028,708.375 704.588,704.78 705.147,724.013 705.706,754.826 706.265,754.041 706.825,750.816 707.384,745.158 707.943,754.653 708.502,751.676 709.062,749.606 709.621,749.251 710.18,697.08 710.739,694.096 711.299,677.514 711.858,694.532 712.417,696.638 712.976,663.947 713.536,665.343 714.095,696.989 714.654,730.863 715.213,683.797 715.773,671.004 716.332,643.759 716.891,643.382 717.45,647.952 718.01,666.874 718.569,654.29 719.128,658.576 719.687,641.18 720.247,658.493 720.806,658.573 721.365,660.482 721.924,644.388 722.484,646.412 723.043,665.266 723.602,681.638 724.161,681.277 724.721,685.125 725.28,699.198 725.839,698.931 726.398,715.466 726.958,746.869 727.517,743.369 728.076,739.07 728.635,718.115 729.195,684.602 729.754,656.487 730.313,662.304 730.872,650.733 731.432,622.443 731.991,640.97 732.55,628.76 733.109,647.517 733.669,650.977 734.228,653.559 734.787,672.169 735.346,653.113 735.906,666.574 736.465,667.46 737.024,669.88 737.583,640.078 738.143,611.142 738.702,667.28 739.261,682.652 739.82,700.211 740.38,697.621 740.939,681.388 741.498,666.964 742.057,715.809 742.617,729.632 743.176,743.959 743.735,680.57 744.294,729.306 744.854,697.132 745.413,714.018 745.972,748.534 746.531,761.147 747.091,742.069 747.65,689.18 748.209,705.221 748.768,702.186 749.328,719.991 749.887,734.145 750.446,732.13 751.005,717.136 751.565,730.591 752.124,725.611 752.683,740.366 753.242,721.441 753.802,750.126 754.361,716.764 754.92,744.229 755.479,773.9 756.039,769.455 756.598,831.165 757.157,842.657 757.716,834.529 758.276,763.361 758.835,761.194 759.394,756.988 759.953,720.571 760.513,684.959 761.072,684.048 761.631,729.111 762.19,709.647 762.75,688.626 763.309,690.453 763.868,658.52 764.427,657.065 764.987,660.819 765.546,660.425 766.105,677.852 766.664,676.84 767.224,645.933 767.783,679.178 768.342,678.922 768.901,712.851 769.461,680.984 770.02,647.838 770.579,634.695 771.138,620.367 771.698,621.719 772.257,659.078 772.816,675.933 773.375,643.082 773.935,627.075 774.494,596.228 775.053,585.694 775.612,593.035 776.172,613.101 776.731,631.357 777.29,650.438 777.849,649.716 778.409,654.749 778.968,624.475 779.527,613.507 780.086,600.568 780.646,590.738 781.205,581.045 781.764,605.572 782.323,643.586 782.883,646.121 783.442,631.273 784.001,646.964 784.56,630.815 785.12,650.076 785.679,651.903 786.238,634.961 786.797,640.965 787.357,625.878 787.916,615.709 788.475,638.457 789.034,640.138 789.594,676.867 790.153,681.037 790.712,669.19 791.271,687.557 791.831,736.26 792.39,750.76 792.949,744.642 793.508,744.755 794.068,775.29 794.627,769.072 795.186,736.486 795.745,752.339 796.305,732.822 796.864,745.809 797.423,726.447 797.982,729.636 798.542,742.122 799.101,775.383 799.66,754.302 800.219,734.611 800.779,747.675 801.338,727.514 801.897,710.757 802.456,755.067 803.016,736.005 803.575,749.858 804.134,762.183 804.693,775.988 805.253,752.767 805.812,750.909 806.371,731.376 806.931,746.786 807.49,711.286 808.049,693.379 808.608,695.664 809.168,679.407 809.727,728.407 810.286,713.023 810.845,696.998 811.405,711.922 811.964,709.496 812.523,707.375 813.082,721.475 813.642,784.798 814.201,762.489 814.76,727.498 815.319,711.631 815.879,708.557 816.438,690.691 816.997,707.035 817.556,692.734 818.116,692.665 818.675,709.636 819.234,708.672 819.793,678.597 820.353,693.24 820.912,695.792 821.471,724.867 822.03,691.172 822.59,692.156 823.149,658.688 823.708,677.832 824.267,646.058 824.827,646.851 825.386,647.84 825.945,666.545 826.504,670.384 827.064,687.287 827.623,732.672 828.182,729.537 828.741,662.088 829.301,662.701 829.86,663.369 830.419,646.683 830.978,647.339 831.538,646.531 832.097,650.294 832.656,668.054 833.215,669.61 833.775,656.631 834.334,642.79 834.893,646.848 835.452,648.972 836.012,669.607 836.571,708.643 837.13,689.292 837.689,688.81 838.249,689.042 838.808,689.134 839.367,720.418 839.926,721.561 840.486,705.032 841.045,704.671 841.604,730.652 842.163,710.399 842.723,660.775 843.282,691.684 843.841,707.717 844.4,720.486 844.96,719.458 845.519,735.625 846.078,686.414 846.637,651.532 847.197,670.898 847.756,655.919 848.315,671.441 848.874,706.961 849.434,723.347 849.993,705.839 850.552,702.016 851.111,702.291 851.671,719.746 852.23,702.334 852.789,703.491 853.348,705.201 853.908,718.843 854.467,701.718 855.026,717.842 855.585,733.939 856.145,681.949 856.704,682.611 857.263,667.422 857.822,682.903 858.382,681.577 858.941,731.72 859.5,744.359 860.059,757.321 860.619,772.116 861.178,766.893 861.737,758.581 862.296,737.475 862.856,736.458 863.415,737.392 863.974,720.463 864.533,721.214 865.093,739.297 865.652,737.294 866.211,701.119 866.77,702.803 867.33,704.156 867.889,707.331 868.448,704.982 869.007,669.964 869.567,672.836 870.126,684.353 870.685,697.792 871.244,713.876 871.804,677.95 872.363,694.956 872.922,694.235 873.481,695.524 874.041,695.152 874.6,675.253 875.159,711.158 875.718,692.495 876.278,709.873 876.837,687.399 877.396,684.884 877.955,718.943 878.515,717.546 879.074,696.414 879.633,696.806 880.192,665.775 880.752,682.695 881.311,666.729 881.87,701.549 882.429,714.789 882.989,714.693 883.548,714.236 884.107,730.669 884.666,679.527 885.226,709.315 885.785,724.287 886.344,723.999 886.903,743.456 887.463,724.693 888.022,756.336 888.581,764.186 889.14,759.115 889.7,771.391 890.259,748.652 890.818,715.055 891.377,730.387 891.937,730.899 892.496,713.216 893.055,743.605 893.614,728.091 894.174,707.861 894.733,676.136 895.292,660.289 895.851,664.862 896.411,683.414 896.97,682.376 897.529,668.376 898.088,685.907 898.648,685.055 899.207,717.35 899.766,701.296 900.325,666.864 900.885,651.956 901.444,651.562 902.003,670.846 902.562,657.033 903.122,676.277 903.681,663.275 904.24,634.657 904.799,635.469 905.359,622.86 905.918,642.698 906.477,661.797 907.036,664.103 907.596,602.294 908.155,575.997 908.714,564.008 909.273,568.233 909.833,605.873 910.392,657.53 910.951,644.672 911.51,644.654 912.07,645.502 912.629,646.871 913.188,695.532 913.747,695.571 914.307,697.174 914.866,682.703 915.425,681.003 915.984,661.008 916.544,647.408 917.103,699.154 917.662,715.098 918.221,696.054 918.781,710.345 919.34,711.37 919.899,679.234 920.458,695.013 921.018,709.889 921.577,709.815 922.136,690.476 922.695,690.685 923.255,689.952 923.814,704.062 924.373,742.298 924.932,707.247 925.492,724.185 926.051,721.402 926.61,721.395 927.169,752.348 927.729,715.647 928.288,698.294 928.847,677.716 929.406,679.845 929.966,697.438 930.525,728.441 931.084,691.275 931.644,675.813 932.203,689.092 932.762,687.822 933.321,671.289 933.881,688.08 934.44,671.602 934.999,675.698 935.558,657.855 936.118,594.651 936.677,602.142 937.236,589.963 937.795,548.356 938.355,590.812 938.914,582.833 939.473,587.956 940.032,612.123 940.592,600.858 941.151,608.538 941.71,608.999 942.269,583.166 942.829,575.111 943.388,578.674 943.947,604.156 944.506,623.766 945.066,630.47 945.625,619.957 946.184,606.151 946.743,609.835 947.303,633.418 947.862,637.039 948.421,640.993 948.98,640.753 949.54,657.257 950.099,659.76 950.658,675.07 951.217,692.73 951.777,688.922 952.336,704.822 952.895,672.315 953.454,640.606 954.014,669.851 954.573,653.356 955.132,654.331 955.691,591.872 956.251,598.755 956.81,569.838 957.369,574.525 957.928,566.65 958.488,571.79 959.047,576.385 959.606,552.536 960.165,557.045 960.725,531.147 961.284,538.286 961.843,529.274 962.402,536.852 962.962,543.638 963.521,552.765 964.08,549.019 964.639,541.536 965.199,516.19 965.758,542.546 966.317,599.076 966.876,622.178 967.436,641.785 967.995,663.92 968.554,679.895 969.113,713.926 969.673,759.117 970.232,741.036 970.791,753.709 971.35,753.354 971.91,732.348 972.469,760.897 973.028,756.926 973.587,743.141 974.147,772.046 974.706,766.601 975.265,745.259 975.824,742.849 976.384,757.222 976.943,768.904 977.502,780.569 978.061,790.325 978.621,785.176 979.18,828.441 979.739,807.092 980.298,783.908 980.858,728.038 981.417,691.276 981.976,693.703 982.535,694.083 983.095,656.62 983.654,692.25 984.213,691.1 984.772,708.324 985.332,689.574 985.891,669.845 986.45,671.073 987.009,670.859 987.569,641.769 988.128,611.832 988.687,599.419 989.246,587.519 989.806,575.834 990.365,564.819 990.924,555.118 991.483,561.46 992.043,563.473 992.602,586.939 993.161,637.502 993.72,641.299 994.28,628.838 994.839,647.017 995.398,648.811 995.957,666.456 996.517,685.204 997.076,719.514 997.635,735.004 998.194,736.014 998.754,735.241 999.313,737.204 999.872,751.317 1000.43,730.54 1000.99,741.859 1001.55,737.407 1002.11,716.991 1002.67,700.133 1003.23,712.367 1003.79,710.709 1004.35,755.029 1004.91,784.032 1005.46,792.043 1006.02,798.663 1006.58,804.965 1007.14,782.149 1007.7,759.314 1008.26,768.853 1008.82,764.903 1009.38,774.296 1009.94,769.797 1010.5,766.024 1011.06,777.802 1011.62,788.106 1012.18,785.261 1012.73,781.172 1013.29,796.128 1013.85,810.203 1014.41,819.451 1014.97,812.709 1015.53,788.732 1016.09,783.903 1016.65,780.367 1017.21,776.624 1017.77,770.668 1018.33,785.103 1018.89,763.718 1019.45,696.024 1020.01,662.877 1020.56,679.907 1021.12,662.281 1021.68,645.029 1022.24,664.99 1022.8,635.249 1023.36,671.784 1023.92,675.727 1024.48,642.857 1025.04,658.102 1025.6,677.254 1026.16,693.502 1026.72,721.356 1027.28,721.193 1027.83,686.782 1028.39,670.178 1028.95,667.977 1029.51,634.951 1030.07,634.56 1030.63,635.8 1031.19,637.102 1031.75,636.977 1032.31,586.977 1032.87,588.366 1033.43,592.844 1033.99,612.599 1034.55,616.735 1035.1,619.196 1035.66,607.285 1036.22,610.805 1036.78,631.493 1037.34,679.862 1037.9,681.036 1038.46,694.157 1039.02,679.306 1039.58,694.682 1040.14,663.634 1040.7,661.607 1041.26,678.471 1041.82,678.639 1042.38,694.293 1042.93,691.713 1043.49,689.563 1044.05,676.954 1044.61,658.267 1045.17,707.074 1045.73,752.409 1046.29,716.496 1046.85,701.044 1047.41,730.269 1047.97,729.174 1048.53,744.297 1049.09,739.664 1049.65,736.466 1050.2,731.323 1050.76,757.12 1051.32,736.247 1051.88,716.866 1052.44,715.376 1053,679.975 1053.56,675.657 1054.12,675.434 1054.68,658.022 1055.24,645.662 1055.8,632.143 1056.36,621.131 1056.92,574.346 1057.48,581.511 1058.03,583.161 1058.59,576.141 1059.15,599.578 1059.71,603.536 1060.27,558.231 1060.83,597.997 1061.39,572.672 1061.95,607.415 1062.51,642.714 1063.07,644.838 1063.63,585.592 1064.19,626.454 1064.75,630.631 1065.3,618.043 1065.86,655.365 1066.42,656.425 1066.98,671.315 1067.54,638.826 1068.1,640.87 1068.66,659.235 1069.22,664.469 1069.78,680.518 1070.34,664.887 1070.9,666.496 1071.46,682.012 1072.02,701.46 1072.57,666.033 1073.13,667.679 1073.69,671.795 1074.25,690.12 1074.81,674.042 1075.37,674.762 1075.93,677.809 1076.49,694.628 1077.05,713.547 1077.61,678.888 1078.17,662.604 1078.73,711.835 1079.29,725.894 1079.85,740.929 1080.4,741.087 1080.96,733.735 1081.52,746.585 1082.08,759.291 1082.64,723.191 1083.2,721.101 1083.76,737.272 1084.32,749.234 1084.88,777.341 1085.44,770.202 1086,778.287 1086.56,771.657 1087.12,749.925 1087.67,715.23 1088.23,732.799 1088.79,731.96 1089.35,715.136 1089.91,731.468 1090.47,742.044 1091.03,773.386 1091.59,783.6 1092.15,776.69 1092.71,738.089 1093.27,752.122 1093.83,765.008 1094.39,728.697 1094.94,742.426 1095.5,740.189 1096.06,740.345 1096.62,705.007 1097.18,705.693 1097.74,702.181 1098.3,719.812 1098.86,719.118 1099.42,698.411 1099.98,697.698 1100.54,699.63 1101.1,666.46 1101.66,684.354 1102.22,669.437 1102.77,670.024 1103.33,686.896 1103.89,682.257 1104.45,652.389 1105.01,638.312 1105.57,624.786 1106.13,628.858 1106.69,631.351 1107.25,632.899 1107.81,649.603 1108.37,651.901 1108.93,670.575 1109.49,687.229 1110.04,707.418 1110.6,706.284 1111.16,701.71 1111.72,685.039 1112.28,683.387 1112.84,664.706 1113.4,665.222 1113.96,648.432 1114.52,602.803 1115.08,609.936 1115.64,592.575 1116.2,580.113 1116.76,599.187 1117.31,571.424 1117.87,575.763 1118.43,552.961 1118.99,577.056 1119.55,585.651 1120.11,593.014 1120.67,631.583 1121.23,636.501 1121.79,686.367 1122.35,651.991 1122.91,650.472 1123.47,655.726 1124.03,640.051 1124.59,641.819 1125.14,644.696 1125.7,662.454 1126.26,662.269 1126.82,664.174 1127.38,680.211 1127.94,681.7 1128.5,680.705 1129.06,683.11 1129.62,700.015 1130.18,701.276 1130.74,718.728 1131.3,700.775 1131.86,681.907 1132.41,712.602 1132.97,693.112 1133.53,711.41 1134.09,711.264 1134.65,725.806 1135.21,722.945 1135.77,738.203 1136.33,748.596 1136.89,794.022 1137.45,786.87 1138.01,781.536 1138.57,762.508 1139.13,770.948 1139.68,781.888 1140.24,826.056 1140.8,802.828 1141.36,797.018 1141.92,770.82 1142.48,744.938 1143.04,725.838 1143.6,720.725 1144.16,701.107 1144.72,699.327 1145.28,681.412 1145.84,648.615 1146.4,634.885 1146.96,620.873 1147.51,624.099 1148.07,608.956 1148.63,628.641 1149.19,613.757 1149.75,616.073 1150.31,552.929 1150.87,541.258 1151.43,532.103 1151.99,541.175 1152.55,520.215 1153.11,529.912 1153.67,568.836 1154.23,573.266 1154.78,568.004 1155.34,623.676 1155.9,642.378 1156.46,626.558 1157.02,611.279 1157.58,614.331 1158.14,636.427 1158.7,672.284 1159.26,671.873 1159.82,674.796 1160.38,691.573 1160.94,675.266 1161.5,658.874 1162.05,627.964 1162.61,616.445 1163.17,604.136 1163.73,606.606 1164.29,613.088 1164.85,601.4 1165.41,619.735 1165.97,592.311 1166.53,581.796 1167.09,567.284 1167.65,591.077 1168.21,595.543 1168.77,618.698 1169.33,638.554 1169.88,654.88 1170.44,657.677 1171,659.142 1171.56,661.925 1172.12,681.443 1172.68,685.133 1173.24,682.844 1173.8,680.91 1174.36,683.494 1174.92,665.907 1175.48,682.213 1176.04,663.721 1176.6,681.009 1177.15,682.823 1177.71,700.187 1178.27,699.654 1178.83,682.817 1179.39,670.033 1179.95,673.22 1180.51,707.375 1181.07,704.772 1181.63,705.309 1182.19,722.647 1182.75,703.536 1183.31,704.913 1183.87,658.08 1184.43,690.103 1184.98,703.954 1185.54,733.424 1186.1,746.903 1186.66,742.825 1187.22,724.328 1187.78,739.192 1188.34,732.321 1188.9,746.936 1189.46,740.221 1190.02,755.841 1190.58,751.915 1191.14,729.989 1191.7,716.861 1192.25,712.164 1192.81,712.468 1193.37,727.546 1193.93,727.754 1194.49,739.685 1195.05,720.701 1195.61,777.67 1196.17,817.143 1196.73,811.295 1197.29,819.672 1197.85,810.394 1198.41,785.087 1198.97,766.184 1199.52,778.374 1200.08,819.221 1200.64,796.181 1201.2,757.34 1201.76,771.022 1202.32,781.044 1202.88,774.359 1203.44,784.325 1204,793.431 1204.56,819.667 1205.12,794.815 1205.68,785.512 1206.24,795.641 1206.8,803.027 1207.35,797.719 1207.91,790.146 1208.47,835.28 1209.03,826.273 1209.59,818.321 1210.15,841.316 1210.71,812.481 1211.27,805.332 1211.83,813.221 1212.39,821.258 1212.95,831.681 1213.51,821 1214.07,811.955 1214.62,802.749 1215.18,797.861 1215.74,757.164 1216.3,740.188 1216.86,786.213 1217.42,797.888 1217.98,840.122 1218.54,817.422 1219.1,793.73 1219.66,787.968 1220.22,802.781 1220.78,784.72 1221.34,776.233 1221.89,755.048 1222.45,719.648 1223.01,718.206 1223.57,681.56 1224.13,680.382 1224.69,660.507 1225.25,632.45 1225.81,634.441 1226.37,633.999 1226.93,621.882 1227.49,628.192 1228.05,596.622 1228.61,601.15 1229.17,619.625 1229.72,603.317 1230.28,622.11 1230.84,674.395 1231.4,690.566 1231.96,659.898 1232.52,677.406 1233.08,711.912 1233.64,695.181 1234.2,696.719 1234.76,679.032 1235.32,633.029 1235.88,718.247 1236.44,732.839 1236.99,727.869 1237.55,774.622 1238.11,773.43 1238.67,767.265 1239.23,714.273 1239.79,730.014 1240.35,695.718 1240.91,694.097 1241.47,741.67 1242.03,756.286 1242.59,754.301 1243.15,699.68 1243.71,681.232 1244.26,633.739 1244.82,620.51 1245.38,592.751 1245.94,612.953 1246.5,616.142 1247.06,617.144 1247.62,637.536 1248.18,638.818 1248.74,597.838 1249.3,602.98 1249.86,573.762 1250.42,594.381 1250.98,636.683 1251.54,570.304 1252.09,575.839 1252.65,565.014 1253.21,567.901 1253.77,600.763 1254.33,589.348 1254.89,559.159 1255.45,563.575 1256.01,572.032 1256.57,563.759 1257.13,587.824 1257.69,578.003 1258.25,582.164 1258.81,617.097 1259.36,605.599 1259.92,610.904 1260.48,615.334 1261.04,619.501 1261.6,590.318 1262.16,562.945 1262.72,586.403 1263.28,576.834 1263.84,585.818 1264.4,620.989 1264.96,607.479 1265.52,613.18 1266.08,584.227 1266.63,626.094 1267.19,615.949 1267.75,638.38 1268.31,657.148 1268.87,658.309 1269.43,691.074 1269.99,691.222 1270.55,677.886 1271.11,663.189 1271.67,668.827 1272.23,655.758 1272.79,627.609 1273.35,614.827 1273.91,681.065 1274.46,699.702 1275.02,695.705 1275.58,696.02 1276.14,699.63 1276.7,715.525 1277.26,684.261 1277.82,731.988 1278.38,731.84 1278.94,714.387 1279.5,713.406 1280.06,727.539 1280.62,738.746 1281.18,753.223 1281.73,763.781 1282.29,762.799 1282.85,762.128 1283.41,707.432 1283.97,707.401 1284.53,675.841 1285.09,694.245 1285.65,679.586 1286.21,653.195 1286.77,639.092 1287.33,656.399 1287.89,655.809 1288.45,690.296 1289,708.482 1289.56,691.586 1290.12,671.111 1290.68,638.607 1291.24,658.357 1291.8,675.844 1292.36,660.589 1292.92,645.47 1293.48,643.886 1294.04,676.341 1294.6,660.652 1295.16,661.163 1295.72,644.952 1296.28,679.515 1296.83,679.863 1297.39,714.11 1297.95,745.587 1298.51,757.838 1299.07,767.966 1299.63,760.549 1300.19,776.857 1300.75,771.14 1301.31,801.129 1301.87,794.325 1302.43,786.344 1302.99,825.945 1303.55,783.814 1304.1,757.567 1304.66,769.01 1305.22,761.868 1305.78,758.634 1306.34,752.631 1306.9,719.287 1307.46,700.915 1308.02,664.385 1308.58,665.926 1309.14,648.278 1309.7,633.765 1310.26,634.94 1310.82,617.03 1311.38,588.014 1311.93,609.795 1312.49,643.425 1313.05,674.748 1313.61,689.957 1314.17,675.916 1314.73,708.06 1315.29,691.846 1315.85,705.392 1316.41,719.725 1316.97,736.116 1317.53,715.027 1318.09,713.122 1318.65,728.639 1319.2,694.929 1319.76,709.121 1320.32,705.368 1320.88,638.168 1321.44,671.711 1322,667.68 1322.56,682.295 1323.12,716.768 1323.68,749.076 1324.24,698.255 1324.8,714.13 1325.36,709.95 1325.92,706.367 1326.47,722.808 1327.03,703.044 1327.59,699.011 1328.15,697.58 1328.71,665.323 1329.27,683.951 1329.83,667.957 1330.39,634.42 1330.95,652.074 1331.51,682.613 1332.07,695.335 1332.63,710.303 1333.19,739.73 1333.75,734.449 1334.3,752.477 1334.86,718.999 1335.42,734.301 1335.98,745.152 1336.54,722.939 1337.1,735.064 1337.66,748.07 1338.22,727.952 1338.78,743.882 1339.34,690.172 1339.9,706.712 1340.46,669.179 1341.02,670.84 1341.57,719.103 1342.13,717.318 1342.69,699.426 1343.25,663.022 1343.81,646.141 1344.37,663.981 1344.93,664.581 1345.49,648.707 1346.05,631.881 1346.61,638.686 1347.17,622.747 1347.73,623.867 1348.29,610.235 1348.84,582.773 1349.4,553.366 1349.96,576.313 1350.52,598.728 1351.08,638.341 1351.64,624.731 1352.2,559.992 1352.76,597.855 1353.32,585.015 1353.88,608.337 1354.44,616.672 1355,637.198 1355.56,622.93 1356.12,642.229 1356.67,642.333 1357.23,646.269 1357.79,646.866 1358.35,618.762 1358.91,621.181 1359.47,591.741 1360.03,596.885 1360.59,631.868 1361.15,651.78 1361.71,659.326 1362.27,691.564 1362.83,722.49 1363.39,734.095 1363.94,700.739 1364.5,699.995 1365.06,716.679 1365.62,717.635 1366.18,702.026 1366.74,702.68 1367.3,654.356 1367.86,626.798 1368.42,646.378 1368.98,652.342 1369.54,653.646 1370.1,657.644 1370.66,659.964 1371.21,665.166 1371.77,667.537 1372.33,680.936 1372.89,685.17 1373.45,652.999 1374.01,654.503 1374.57,675.451 1375.13,662.319 1375.69,662.449 1376.25,644.995 1376.81,630.552 1377.37,629.214 1377.93,635.646 1378.49,653.032 1379.04,639.296 1379.6,674.462 1380.16,707.341 1380.72,735.176 1381.28,751.174 1381.84,783.937 1382.4,826.059 1382.96,837.069 1383.52,827.717 1384.08,836.858 1384.64,826.732 1385.2,835.907 1385.76,793.034 1386.31,818.159 1386.87,779.709 1387.43,807.614 1387.99,768.303 1388.55,746.053 1389.11,760.816 1389.67,774.134 1390.23,804.918 1390.79,797.438 1391.35,790.547 1391.91,815.771 1392.47,777.8 1393.03,786.729 1393.58,796.96 1394.14,791.614 1394.7,771.154 1395.26,782.768 1395.82,823.886 1396.38,799.617 1396.94,810.218 1397.5,789.343 1398.06,780.144 1398.62,727.47 1399.18,713.97 1399.74,678.537 1400.3,677.836 1400.86,692.468 1401.41,688.819 1401.97,685.076 1402.53,700.777 1403.09,682.406 1403.65,698.868 1404.21,697.996 1404.77,731.707 1405.33,747.048 1405.89,761.232 1406.45,705.913 1407.01,720.733 1407.57,722.095 1408.13,702.664 1408.68,671.044 1409.24,654.902 1409.8,655.001 1410.36,670.382 1410.92,672.809 1411.48,657.295 1412.04,643.279 1412.6,629.351 1413.16,615.781 1413.72,633.841 1414.28,602.272 1414.84,604.446 1415.4,592.483 1415.95,644.797 1416.51,601.024 1417.07,590.279 1417.63,610.151 1418.19,611.675 1418.75,616.231 1419.31,606.359 1419.87,594.135 1420.43,630.43 1420.99,613.933 1421.55,635.646 1422.11,671.124 1422.67,639.063 1423.23,658.342 1423.78,708.667 1424.34,657.014 1424.9,672.476 1425.46,641.213 1426.02,623.585 1426.58,639.41 1427.14,655.991 1427.7,641.726 1428.26,661.175 1428.82,662.482 1429.38,653.589 1429.94,657.042 1430.5,659.52 1431.05,676.352 1431.61,626.991 1432.17,645.033 1432.73,663.716 1433.29,662.442 1433.85,681.916 1434.41,715.489 1434.97,715.637 1435.53,718.315 1436.09,743.859 1436.65,742.317 1437.21,726.5 1437.77,741.065 1438.33,705.645 1438.88,750.996 1439.44,763.845 1440,728.184 1440.56,726.242 1441.12,743.633 1441.68,725.673 1442.24,686.035 1442.8,704.252 1443.36,670.117 1443.92,671.106 1444.48,653.716 1445.04,639.537 1445.6,643.171 1446.15,677.827 1446.71,647.948 1447.27,683.867 1447.83,636.091 1448.39,651.719 1448.95,668.843 1449.51,657.624 1450.07,692.195 1450.63,678.41 1451.19,682.119 1451.75,699.945 1452.31,683.002 1452.87,684.496 1453.42,703.286 1453.98,698.318 1454.54,699.92 1455.1,681.7 1455.66,696.771 1456.22,717.332 1456.78,700.114 1457.34,700.52 1457.9,701.629 1458.46,752.539 1459.02,735.109 1459.58,737.847 1460.14,703.033 1460.7,653.39 1461.25,653.254 1461.81,674.522 1462.37,671.004 1462.93,643.588 1463.49,647.225 1464.05,617.916 1464.61,587.715 1465.17,593.26 1465.73,615.87 1466.29,638.229 1466.85,623.69 1467.41,629.081 1467.97,653.358 1468.52,668.496 1469.08,655.508 1469.64,658.143 1470.2,656.761 1470.76,661.338 1471.32,662.592 1471.88,649.124 1472.44,653.262 1473,686.334 1473.56,690.583 1474.12,692.355 1474.68,708.134 1475.24,706.107 1475.79,705.643 1476.35,686.342 1476.91,669.284 1477.47,640.825 1478.03,641.338 1478.59,611.679 1479.15,632.075 1479.71,683.265 1480.27,688.561 1480.83,674.512 1481.39,626.841 1481.95,628.403 1482.51,615.808 1483.07,605.585 1483.62,610.922 1484.18,579.863 1484.74,586.221 1485.3,608.991 1485.86,567.005 1486.42,555.703 1486.98,581.971 1487.54,605.954 1488.1,622.099 1488.66,608.558 1489.22,593.792 1489.78,620.551 1490.34,657.277 1490.89,661.357 1491.45,658.925 1492.01,658.531 1492.57,641.735 1493.13,678.125 1493.69,709.173 1494.25,706.832 1494.81,717.634 1495.37,701.873 1495.93,732.222 1496.49,727.752 1497.05,707.343 1497.61,705.765 1498.16,767.251 1498.72,727.36 1499.28,742.24 1499.84,757.435 1500.4,739.999 1500.96,719.749 1501.52,749.664 1502.08,701.337 1502.64,716.863 1503.2,697.171 1503.76,645.887 1504.32,630.7 1504.88,666.022 1505.44,687.754 1505.99,653.329 1506.55,641.853 1507.11,660.367 1507.67,613.379 1508.23,615.161 1508.79,616.013 1509.35,621.131 1509.91,643.337 1510.47,644.659 1511.03,644.574 1511.59,660.926 1512.15,661.533 1512.71,680.43 1513.26,712.57 1513.82,707.649 1514.38,737.32 1514.94,731.915 1515.5,747.021 1516.06,759.961 1516.62,706.459 1517.18,688.618 1517.74,671.368 1518.3,654.467 1518.86,676.113 1519.42,658.625 1519.98,660.688 1520.53,655.712 1521.09,703.081 1521.65,682.75 1522.21,678.849 1522.77,678.212 1523.33,694.083 1523.89,675.976 1524.45,693.305 1525.01,724.711 1525.57,737.759 1526.13,734.971 1526.69,747.51 1527.25,760.008 1527.81,757.096 1528.36,736.996 1528.92,733.126 1529.48,751.263 1530.04,731.73 1530.6,724.428 1531.16,719.432 1531.72,716.562 1532.28,764.354 1532.84,757.287 1533.4,754.043 1533.96,767.149 1534.52,759.008 1535.08,759.545 1535.63,739.546 1536.19,703.969 1536.75,702.451 1537.31,750.788 1537.87,713.84 1538.43,681.539 1538.99,712.63 1539.55,760.322 1540.11,759.884 1540.67,737.553 1541.23,732.954 1541.79,713.136 1542.35,730.64 1542.9,726.603 1543.46,708.568 1544.02,706.713 1544.58,672.508 1545.14,687.314 1545.7,704.019 1546.26,718.759 1546.82,682.897 1547.38,649.988 1547.94,702.1 1548.5,702.764 1549.06,699.943 1549.62,697.078 1550.18,697.041 1550.73,681.739 1551.29,680.973 1551.85,696.224 1552.41,696.436 1552.97,691.677 1553.53,688.287 1554.09,687.932 1554.65,670.888 1555.21,653.945 1555.77,688.235 1556.33,686.718 1556.89,669.293 1557.45,672.649 1558,677.54 1558.56,677.751 1559.12,661.768 1559.68,661.152 1560.24,661.952 1560.8,665.777 1561.36,636.207 1561.92,623.994 1562.48,611.572 1563.04,615.369 1563.6,584.831 1564.16,593.963 1564.72,581.163 1565.28,555 1565.83,546.024 1566.39,571.573 1566.95,608.583 1567.51,626.749 1568.07,629.515 1568.63,650.692 1569.19,669.933 1569.75,732.735 1570.31,729.552 1570.87,726.771 1571.43,728.033 1571.99,728.254 1572.55,742.033 1573.1,739.9 1573.66,703.731 1574.22,689.597 1574.78,721.954 1575.34,720.376 1575.9,705.201 1576.46,720.484 1577.02,717.698 1577.58,699.689 1578.14,714.645 1578.7,666.348 1579.26,621.76 1579.82,625.021 1580.37,659.535 1580.93,664.382 1581.49,681.621 1582.05,666.792 1582.61,603.697 1583.17,575.624 1583.73,612.306 1584.29,632.907 1584.85,669.543 1585.41,704.972 1585.97,704.387 1586.53,703.318 1587.09,670.761 1587.65,637.655 1588.2,654.415 1588.76,656.519 1589.32,645.106 1589.88,628.9 1590.44,600.441 1591,622.01 1591.56,609.786 1592.12,661.304 1592.68,663.152 1593.24,663.178 1593.8,684.505 1594.36,683.11 1594.92,683.498 1595.47,729.735 1596.03,711.013 1596.59,707.886 1597.15,678.778 1597.71,643.565 1598.27,629.019 1598.83,631.208 1599.39,630.967 1599.95,630.824 1600.51,631.87 1601.07,637.277 1601.63,639.924 1602.19,655.679 1602.74,640.382 1603.3,660.343 1603.86,643.291 1604.42,645.432 1604.98,646.771 1605.54,617.851 1606.1,636.473 1606.66,638.24 1607.22,627.359 1607.78,614.731 1608.34,619.639 1608.9,640.892 1609.46,608.104 1610.02,607.848 1610.57,593.503 1611.13,613.42 1611.69,635.519 1612.25,671.514 1612.81,655.871 1613.37,642.784 1613.93,662.475 1614.49,661.896 1615.05,662.002 1615.61,681.369 1616.17,649.109 1616.73,635.004 1617.29,634.997 1617.84,639.588 1618.4,625.584 1618.96,628.033 1619.52,614.742 1620.08,631.224 1620.64,631.111 1621.2,636.164 1621.76,655.163 1622.32,674.195 1622.88,659.815 1623.44,646.336 1624,696.42 1624.56,713.622 1625.11,743.132 1625.67,727.774 1626.23,755.612 1626.79,751.385 1627.35,713.154 1627.91,731.962 1628.47,727.206 1629.03,724.713 1629.59,720.121 1630.15,717.448 1630.71,748.32 1631.27,772.213 1631.83,787.359 1632.39,798.752 1632.94,774.242 1633.5,803.759 1634.06,783.341 1634.62,786.993 1635.18,780.572 1635.74,776.104 1636.3,756.884 1636.86,767.471 1637.42,779.436 1637.98,790.975 1638.54,784.748 1639.1,796.206 1639.66,760.046 1640.21,730.241 1640.77,695.504 1641.33,724.916 1641.89,722.043 1642.45,721.402 1643.01,717.515 1643.57,713.262 1644.13,710.976 1644.69,660.425 1645.25,661.734 1645.81,633.428 1646.37,654.556 1646.93,607.579 1647.48,643.335 1648.04,645.618 1648.6,630.008 1649.16,647.433 1649.72,618.768 1650.28,652.936 1650.84,622.344 1651.4,674.708 1651.96,691.824 1652.52,699.09 1653.08,700.683 1653.64,683.847 1654.2,698.094 1654.76,665.216 1655.31,669.286 1655.87,685.869 1656.43,669.1 1656.99,669.865 1657.55,654.638 1658.11,658.014 1658.67,658.944 1659.23,676.485 1659.79,692.402 1660.35,725.792 1660.91,727.221 1661.47,740.231 1662.03,719.351 1662.58,732.33 1663.14,762.746 1663.7,773.39 1664.26,784.317 1664.82,732.261 1665.38,778.627 1665.94,756.636 1666.5,785.136 1667.06,779.785 1667.62,758.699 1668.18,741.39 1668.74,755.065 1669.3,751.556 1669.85,766.987 1670.41,761.261 1670.97,755.068 1671.53,736.513 1672.09,718.484 1672.65,697.39 1673.21,728.4 1673.77,760.291 1674.33,754.695 1674.89,732.975 1675.45,728.66 1676.01,728.201 1676.57,746.759 1677.13,711.965 1677.68,678.822 1678.24,679.623 1678.8,697.461 1679.36,697.974 1679.92,699.369 1680.48,680.141 1681.04,682.368 1681.6,684.326 1682.16,698.721 1682.72,679.374 1683.28,648.266 1683.84,699.382 1684.4,713.721 1684.95,681.328 1685.51,664.444 1686.07,664.796 1686.63,663.119 1687.19,650.855 1687.75,616.548 1688.31,620.6 1688.87,608.112 1689.43,628.304 1689.99,631.867 1690.55,603.071 1691.11,591.369 1691.67,597.286 1692.23,602.257 1692.78,591.155 1693.34,580.846 1693.9,601.102 1694.46,606.576 1695.02,608.25 1695.58,595.182 1696.14,563.03 1696.7,571.424 1697.26,596.657 1697.82,632.569 1698.38,650.278 1698.94,670.3 1699.5,672.324 1700.05,675.639 1700.61,659.069 1701.17,662.469 1701.73,668.127 1702.29,668.046 1702.85,683.993 1703.41,664.349 1703.97,681.451 1704.53,696.226 1705.09,677.471 1705.65,677.316 1706.21,726.961 1706.77,723.295 1707.32,721.847 1707.88,736.129 1708.44,750.328 1709,743.906 1709.56,756.212 1710.12,767.295 1710.68,794.66 1711.24,725.395 1711.8,708.395 1712.36,722.646 1712.92,735.239 1713.48,720.37 1714.04,702.768 1714.6,784.799 1715.15,729.366 1715.71,726.963 1716.27,708.642 1716.83,705.947 1717.39,703.358 1717.95,686.601 1718.51,669.689 1719.07,686.691 1719.63,675.4 1720.19,644.742 1720.75,630.511 1721.31,645.88 1721.87,628.662 1722.42,629.958 1722.98,633.808 1723.54,653.961 1724.1,643.748 1724.66,645.706 1725.22,696.307 1725.78,694.53 1726.34,709.133 1726.9,739.6 1727.46,754.294 1728.02,736.559 1728.58,750.226 1729.14,743.56 1729.69,707.976 1730.25,719.903 1730.81,703.013 1731.37,715.769 1731.93,713.026 1732.49,744.521 1733.05,707.998 1733.61,720.13 1734.17,667.987 1734.73,666.201 1735.29,717.138 1735.85,684.382 1736.41,667.419 1736.97,686.031 1737.52,671.137 1738.08,702.783 1738.64,732.716 1739.2,730.295 1739.76,727.541 1740.32,721.569 1740.88,736.567 1741.44,736.099 1742,698.911 1742.56,697.654 1743.12,680.982 1743.68,661.891 1744.24,648.06 1744.79,617.409 1745.35,622.165 1745.91,609.024 1746.47,630.469 1747.03,633.677 1747.59,654.98 1748.15,638.538 1748.71,626.302 1749.27,615.237 1749.83,601.766 1750.39,591.389 1750.95,595.736 1751.51,601.563 1752.06,638.055 1752.62,640.791 1753.18,705.268 1753.74,704.571 1754.3,687.624 1754.86,700.94 1755.42,685.425 1755.98,715.099 1756.54,711.725 1757.1,708.177 1757.66,708.078 1758.22,719.282 1758.78,716.786 1759.34,696.489 1759.89,648.626 1760.45,645.845 1761.01,645.099 1761.57,649.214 1762.13,650.514 1762.69,651.37 1763.25,635.005 1763.81,670.897 1764.37,642.341 1764.93,641.534 1765.49,643.056 1766.05,597.089 1766.61,651.243 1767.16,670.289 1767.72,623.583 1768.28,627.926 1768.84,647.626 1769.4,633.873 1769.96,619.254 1770.52,622.617 1771.08,610.415 1771.64,631.518 1772.2,667.89 1772.76,666.679 1773.32,649.41 1773.88,668.878 1774.43,682.72 1774.99,699.896 1775.55,681.513 1776.11,667.212 1776.67,653.25 1777.23,639.721 1777.79,643.381 1778.35,645.106 1778.91,680.439 1779.47,697.207 1780.03,681.749 1780.59,664.818 1781.15,632.513 1781.71,634.291 1782.26,636.42 1782.82,640.34 1783.38,643.334 1783.94,649.453 1784.5,650.043 1785.06,651.992 1785.62,654.492 1786.18,689.645 1786.74,752.464 1787.3,747.84 1787.86,729.734 1788.42,726.391 1788.98,724.016 1789.53,738.073 1790.09,701.578 1790.65,719.27 1791.21,717.979 1791.77,704.899 1792.33,701.953 1792.89,713.15 1793.45,713.602 1794.01,712.672 1794.57,709.906 1795.13,709.499 1795.69,711.389 1796.25,714.036 1796.8,712.432 1797.36,695.012 1797.92,710.412 1798.48,677.991 1799.04,660.722 1799.6,710.141 1800.16,645.112 1800.72,680.56 1801.28,681.049 1801.84,662.791 1802.4,662.257 1802.96,646.737 1803.52,666.91 1804.08,686.981 1804.63,701.416 1805.19,732.419 1805.75,682.806 1806.31,652.821 1806.87,671.324 1807.43,673.24 1807.99,676.059 1808.55,660.387 1809.11,658.882 1809.67,646.975 1810.23,663.733 1810.79,683.591 1811.35,697.354 1811.9,695.193 1812.46,696.952 1813.02,680.945 1813.58,680.819 1814.14,696.069 1814.7,710.356 1815.26,709.048 1815.82,676.344 1816.38,661.593 1816.94,665.876 1817.5,668.458 1818.06,702.971 1818.62,717.746 1819.18,664.275 1819.73,677.739 1820.29,680.772 1820.85,628.799 1821.41,646.93 1821.97,662.944 1822.53,709.341 1823.09,705.427 1823.65,713.925 1824.21,709.3 1824.77,710.787 1825.33,724.399 1825.89,720.966 1826.45,719.755 1827,654.777 1827.56,640.658 1828.12,656.741 1828.68,672.128 1829.24,689.598 1829.8,690.221 1830.36,670.467 1830.92,669.672 1831.48,687.812 1832.04,705.034 1832.6,704.478 1833.16,672.789 1833.72,707.856 1834.27,740.238 1834.83,721.391 1835.39,720.166 1835.95,717.635 1836.51,698.473 1837.07,694.626 1837.63,678 1838.19,645.881 \"/>\n<path clip-path=\"url(#clip233)\" d=\"M720.247 690.047 L720.806 690.047 L721.365 690.047 L721.924 690.047 L722.484 690.047 L723.043 690.047 L723.602 690.047 L724.161 690.047 L724.721 690.047 L725.28 690.047 L725.839 690.047 L726.398 690.047 L726.958 690.047 L727.517 690.047 L728.076 690.047 L728.635 690.047 L729.195 690.047 L729.754 690.047 L730.313 690.047 L730.872 690.047 L731.432 690.047 L731.991 690.047 L732.55 690.047 L733.109 690.047 L733.669 690.047 L734.228 690.047 L734.787 690.047 L735.346 690.047 L735.906 690.047 L736.465 690.047 L737.024 690.047 L737.583 690.047 L738.143 690.047 L738.702 690.047 L739.261 690.047 L739.82 690.047 L740.38 690.047 L740.939 690.047 L741.498 690.047 L742.057 690.047 L742.617 690.047 L743.176 690.047 L743.735 690.047 L744.294 690.047 L744.854 690.047 L745.413 690.047 L745.972 690.047 L746.531 690.047 L747.091 690.047 L747.65 690.047 L748.209 690.047 L748.768 690.047 L749.328 690.047 L749.887 690.047 L750.446 690.047 L751.005 690.047 L751.565 690.047 L752.124 690.047 L752.683 690.047 L753.242 690.047 L753.802 690.047 L754.361 690.047 L754.92 690.047 L755.479 690.047 L756.039 690.047 L756.598 690.047 L757.157 690.047 L757.716 690.047 L758.276 690.047 L758.835 690.047 L759.394 690.047 L759.953 690.047 L760.513 690.047 L761.072 690.047 L761.631 690.047 L762.19 690.047 L762.75 690.047 L763.309 690.047 L763.868 690.047 L764.427 690.047 L764.987 690.047 L765.546 690.047 L766.105 690.047 L766.664 690.047 L767.224 690.047 L767.783 690.047 L768.342 690.047 L768.901 690.047 L769.461 690.047 L770.02 690.047 L770.579 690.047 L771.138 690.047 L771.698 690.047 L772.257 690.047 L772.816 690.047 L773.375 690.047 L773.935 690.047 L774.494 690.047 L775.053 690.047 L775.612 690.047 L776.172 690.047 L776.731 690.047 L777.29 690.047 L777.849 690.047 L778.409 690.047 L778.968 690.047 L779.527 690.047 L780.086 690.047 L780.646 690.047 L781.205 690.047 L781.764 690.047 L782.323 690.047 L782.883 690.047 L783.442 690.047 L784.001 690.047 L784.56 690.047 L785.12 690.047 L785.679 690.047 L786.238 690.047 L786.797 690.047 L787.357 690.047 L787.916 690.047 L788.475 690.047 L789.034 690.047 L789.594 690.047 L790.153 690.047 L790.712 690.047 L791.271 690.047 L791.831 690.047 L792.39 690.047 L792.949 690.047 L793.508 690.047 L794.068 690.047 L794.627 690.047 L795.186 690.047 L795.745 690.047 L796.305 690.047 L796.864 690.047 L797.423 690.047 L797.982 690.047 L798.542 690.047 L799.101 690.047 L799.66 690.047 L800.219 690.047 L800.779 690.047 L801.338 690.047 L801.897 690.047 L802.456 690.047 L803.016 690.047 L803.575 690.047 L804.134 690.047 L804.693 690.047 L805.253 690.047 L805.812 690.047 L806.371 690.047 L806.931 690.047 L807.49 690.047 L808.049 690.047 L808.608 690.047 L809.168 690.047 L809.727 690.047 L810.286 690.047 L810.845 690.047 L811.405 690.047 L811.964 690.047 L812.523 690.047 L813.082 690.047 L813.642 690.047 L814.201 690.047 L814.76 690.047 L815.319 690.047 L815.879 690.047 L816.438 690.047 L816.997 690.047 L817.556 690.047 L818.116 690.047 L818.675 690.047 L819.234 690.047 L819.793 690.047 L820.353 690.047 L820.912 690.047 L821.471 690.047 L822.03 690.047 L822.59 690.047 L823.149 690.047 L823.708 690.047 L824.267 690.047 L824.827 690.047 L825.386 690.047 L825.945 690.047 L826.504 690.047 L827.064 690.047 L827.623 690.047 L828.182 690.047 L828.741 690.047 L829.301 690.047 L829.86 690.047 L830.419 690.047 L830.978 690.047 L831.538 690.047 L832.097 690.047 L832.656 690.047 L833.215 690.047 L833.775 690.047 L834.334 690.047 L834.893 690.047 L835.452 690.047 L836.012 690.047 L836.571 690.047 L837.13 690.047 L837.689 690.047 L838.249 690.047 L838.808 690.047 L839.367 690.047 L839.926 690.047 L840.486 690.047 L841.045 690.047 L841.604 690.047 L842.163 690.047 L842.723 690.047 L843.282 690.047 L843.841 690.047 L844.4 690.047 L844.96 690.047 L845.519 690.047 L846.078 690.047 L846.637 690.047 L847.197 690.047 L847.756 690.047 L848.315 690.047 L848.874 690.047 L849.434 690.047 L849.993 690.047 L850.552 690.047 L851.111 690.047 L851.671 690.047 L852.23 690.047 L852.789 690.047 L853.348 690.047 L853.908 690.047 L854.467 690.047 L855.026 690.047 L855.585 690.047 L856.145 690.047 L856.704 690.047 L857.263 690.047 L857.822 690.047 L858.382 690.047 L858.941 690.047 L859.5 690.047 L860.059 690.047 L860.619 690.047 L861.178 690.047 L861.737 690.047 L862.296 690.047 L862.856 690.047 L863.415 690.047 L863.974 690.047 L864.533 690.047 L865.093 690.047 L865.652 690.047 L866.211 690.047 L866.77 690.047 L867.33 690.047 L867.889 690.047 L868.448 690.047 L869.007 690.047 L869.567 690.047 L870.126 690.047 L870.685 690.047 L871.244 690.047 L871.804 690.047 L872.363 690.047 L872.922 690.047 L873.481 690.047 L874.041 690.047 L874.6 690.047 L875.159 690.047 L875.718 690.047 L876.278 690.047 L876.837 690.047 L877.396 690.047 L877.955 690.047 L878.515 690.047 L879.074 690.047 L879.633 690.047 L880.192 690.047 L880.752 690.047 L881.311 690.047 L881.87 690.047 L882.429 690.047 L882.989 690.047 L883.548 690.047 L884.107 690.047 L884.666 690.047 L885.226 690.047 L885.785 690.047 L886.344 690.047 L886.903 690.047 L887.463 690.047 L888.022 690.047 L888.581 690.047 L889.14 690.047 L889.7 690.047 L890.259 690.047 L890.818 690.047 L891.377 690.047 L891.937 690.047 L892.496 690.047 L893.055 690.047 L893.614 690.047 L894.174 690.047 L894.733 690.047 L895.292 690.047 L895.851 690.047 L896.411 690.047 L896.97 690.047 L897.529 690.047 L898.088 690.047 L898.648 690.047 L899.207 690.047 L899.766 690.047 L900.325 690.047 L900.885 690.047 L901.444 690.047 L902.003 690.047 L902.562 690.047 L903.122 690.047 L903.681 690.047 L904.24 690.047 L904.799 690.047 L905.359 690.047 L905.918 690.047 L906.477 690.047 L907.036 690.047 L907.596 690.047 L908.155 690.047 L908.714 690.047 L909.273 690.047 L909.833 690.047 L910.392 690.047 L910.951 690.047 L911.51 690.047 L912.07 690.047 L912.629 690.047 L913.188 690.047 L913.747 690.047 L914.307 690.047 L914.866 690.047 L915.425 690.047 L915.984 690.047 L916.544 690.047 L917.103 690.047 L917.662 690.047 L918.221 690.047 L918.781 690.047 L919.34 690.047 L919.899 690.047 L920.458 690.047 L921.018 690.047 L921.577 690.047 L922.136 690.047 L922.695 690.047 L923.255 690.047 L923.814 690.047 L924.373 690.047 L924.932 690.047 L925.492 690.047 L926.051 690.047 L926.61 690.047 L927.169 690.047 L927.729 690.047 L928.288 690.047 L928.847 690.047 L929.406 690.047 L929.966 690.047 L930.525 690.047 L931.084 690.047 L931.644 690.047 L932.203 690.047 L932.762 690.047 L933.321 690.047 L933.881 690.047 L934.44 690.047 L934.999 690.047 L935.558 690.047 L936.118 690.047 L936.677 690.047 L937.236 690.047 L937.795 690.047 L938.355 690.047 L938.914 690.047 L939.473 690.047 L940.032 690.047 L940.592 690.047 L941.151 690.047 L941.71 690.047 L942.269 690.047 L942.829 690.047 L943.388 690.047 L943.947 690.047 L944.506 690.047 L945.066 690.047 L945.625 690.047 L946.184 690.047 L946.743 690.047 L947.303 690.047 L947.862 690.047 L948.421 690.047 L948.98 690.047 L949.54 690.047 L950.099 690.047 L950.658 690.047 L951.217 690.047 L951.777 690.047 L952.336 690.047 L952.895 690.047 L953.454 690.047 L954.014 690.047 L954.573 690.047 L955.132 690.047 L955.691 690.047 L956.251 690.047 L956.81 690.047 L957.369 690.047 L957.928 690.047 L958.488 690.047 L959.047 690.047 L959.606 690.047 L960.165 690.047 L960.725 690.047 L961.284 690.047 L961.843 690.047 L962.402 690.047 L962.962 690.047 L963.521 690.047 L964.08 690.047 L964.639 690.047 L965.199 690.047 L965.758 690.047 L966.317 690.047 L966.876 690.047 L967.436 690.047 L967.995 690.047 L968.554 690.047 L969.113 690.047 L969.673 690.047 L970.232 690.047 L970.791 690.047 L971.35 690.047 L971.91 690.047 L972.469 690.047 L973.028 690.047 L973.587 690.047 L974.147 690.047 L974.706 690.047 L975.265 690.047 L975.824 690.047 L976.384 690.047 L976.943 690.047 L977.502 690.047 L978.061 690.047 L978.621 690.047 L979.18 690.047 L979.739 690.047 L980.298 690.047 L980.858 690.047 L981.417 690.047 L981.976 690.047 L982.535 690.047 L983.095 690.047 L983.654 690.047 L984.213 690.047 L984.772 690.047 L985.332 690.047 L985.891 690.047 L986.45 690.047 L987.009 690.047 L987.569 690.047 L988.128 690.047 L988.687 690.047 L989.246 690.047 L989.806 690.047 L990.365 690.047 L990.924 690.047 L991.483 690.047 L992.043 690.047 L992.602 690.047 L993.161 690.047 L993.72 690.047 L994.28 690.047 L994.839 690.047 L995.398 690.047 L995.957 690.047 L996.517 690.047 L997.076 690.047 L997.635 690.047 L998.194 690.047 L998.754 690.047 L999.313 690.047 L999.872 690.047 L1000.43 690.047 L1000.99 690.047 L1001.55 690.047 L1002.11 690.047 L1002.67 690.047 L1003.23 690.047 L1003.79 690.047 L1004.35 690.047 L1004.91 690.047 L1005.46 690.047 L1006.02 690.047 L1006.58 690.047 L1007.14 690.047 L1007.7 690.047 L1008.26 690.047 L1008.82 690.047 L1009.38 690.047 L1009.94 690.047 L1010.5 690.047 L1011.06 690.047 L1011.62 690.047 L1012.18 690.047 L1012.73 690.047 L1013.29 690.047 L1013.85 690.047 L1014.41 690.047 L1014.97 690.047 L1015.53 690.047 L1016.09 690.047 L1016.65 690.047 L1017.21 690.047 L1017.77 690.047 L1018.33 690.047 L1018.89 690.047 L1019.45 690.047 L1020.01 690.047 L1020.56 690.047 L1021.12 690.047 L1021.68 690.047 L1022.24 690.047 L1022.8 690.047 L1023.36 690.047 L1023.92 690.047 L1024.48 690.047 L1025.04 690.047 L1025.6 690.047 L1026.16 690.047 L1026.72 690.047 L1027.28 690.047 L1027.83 690.047 L1028.39 690.047 L1028.95 690.047 L1029.51 690.047 L1030.07 690.047 L1030.63 690.047 L1031.19 690.047 L1031.75 690.047 L1032.31 690.047 L1032.87 690.047 L1033.43 690.047 L1033.99 690.047 L1034.55 690.047 L1035.1 690.047 L1035.66 690.047 L1036.22 690.047 L1036.78 690.047 L1037.34 690.047 L1037.9 690.047 L1038.46 690.047 L1039.02 690.047 L1039.58 690.047 L1040.14 690.047 L1040.7 690.047 L1041.26 690.047 L1041.82 690.047 L1042.38 690.047 L1042.93 690.047 L1043.49 690.047 L1044.05 690.047 L1044.61 690.047 L1045.17 690.047 L1045.73 690.047 L1046.29 690.047 L1046.85 690.047 L1047.41 690.047 L1047.97 690.047 L1048.53 690.047 L1049.09 690.047 L1049.65 690.047 L1050.2 690.047 L1050.76 690.047 L1051.32 690.047 L1051.88 690.047 L1052.44 690.047 L1053 690.047 L1053.56 690.047 L1054.12 690.047 L1054.68 690.047 L1055.24 690.047 L1055.8 690.047 L1056.36 690.047 L1056.92 690.047 L1057.48 690.047 L1058.03 690.047 L1058.59 690.047 L1059.15 690.047 L1059.71 690.047 L1060.27 690.047 L1060.83 690.047 L1061.39 690.047 L1061.95 690.047 L1062.51 690.047 L1063.07 690.047 L1063.63 690.047 L1064.19 690.047 L1064.75 690.047 L1065.3 690.047 L1065.86 690.047 L1066.42 690.047 L1066.98 690.047 L1067.54 690.047 L1068.1 690.047 L1068.66 690.047 L1069.22 690.047 L1069.78 690.047 L1070.34 690.047 L1070.9 690.047 L1071.46 690.047 L1072.02 690.047 L1072.57 690.047 L1073.13 690.047 L1073.69 690.047 L1074.25 690.047 L1074.81 690.047 L1075.37 690.047 L1075.93 690.047 L1076.49 690.047 L1077.05 690.047 L1077.61 690.047 L1078.17 690.047 L1078.73 690.047 L1079.29 690.047 L1079.85 690.047 L1080.4 690.047 L1080.96 690.047 L1081.52 690.047 L1082.08 690.047 L1082.64 690.047 L1083.2 690.047 L1083.76 690.047 L1084.32 690.047 L1084.88 690.047 L1085.44 690.047 L1086 690.047 L1086.56 690.047 L1087.12 690.047 L1087.67 690.047 L1088.23 690.047 L1088.79 690.047 L1089.35 690.047 L1089.91 690.047 L1090.47 690.047 L1091.03 690.047 L1091.59 690.047 L1092.15 690.047 L1092.71 690.047 L1093.27 690.047 L1093.83 690.047 L1094.39 690.047 L1094.94 690.047 L1095.5 690.047 L1096.06 690.047 L1096.62 690.047 L1097.18 690.047 L1097.74 690.047 L1098.3 690.047 L1098.86 690.047 L1099.42 690.047 L1099.98 690.047 L1100.54 690.047 L1101.1 690.047 L1101.66 690.047 L1102.22 690.047 L1102.77 690.047 L1103.33 690.047 L1103.89 690.047 L1104.45 690.047 L1105.01 690.047 L1105.57 690.047 L1106.13 690.047 L1106.69 690.047 L1107.25 690.047 L1107.81 690.047 L1108.37 690.047 L1108.93 690.047 L1109.49 690.047 L1110.04 690.047 L1110.6 690.047 L1111.16 690.047 L1111.72 690.047 L1112.28 690.047 L1112.84 690.047 L1113.4 690.047 L1113.96 690.047 L1114.52 690.047 L1115.08 690.047 L1115.64 690.047 L1116.2 690.047 L1116.76 690.047 L1117.31 690.047 L1117.87 690.047 L1118.43 690.047 L1118.99 690.047 L1119.55 690.047 L1120.11 690.047 L1120.67 690.047 L1121.23 690.047 L1121.79 690.047 L1122.35 690.047 L1122.91 690.047 L1123.47 690.047 L1124.03 690.047 L1124.59 690.047 L1125.14 690.047 L1125.7 690.047 L1126.26 690.047 L1126.82 690.047 L1127.38 690.047 L1127.94 690.047 L1128.5 690.047 L1129.06 690.047 L1129.62 690.047 L1130.18 690.047 L1130.74 690.047 L1131.3 690.047 L1131.86 690.047 L1132.41 690.047 L1132.97 690.047 L1133.53 690.047 L1134.09 690.047 L1134.65 690.047 L1135.21 690.047 L1135.77 690.047 L1136.33 690.047 L1136.89 690.047 L1137.45 690.047 L1138.01 690.047 L1138.57 690.047 L1139.13 690.047 L1139.68 690.047 L1140.24 690.047 L1140.8 690.047 L1141.36 690.047 L1141.92 690.047 L1142.48 690.047 L1143.04 690.047 L1143.6 690.047 L1144.16 690.047 L1144.72 690.047 L1145.28 690.047 L1145.84 690.047 L1146.4 690.047 L1146.96 690.047 L1147.51 690.047 L1148.07 690.047 L1148.63 690.047 L1149.19 690.047 L1149.75 690.047 L1150.31 690.047 L1150.87 690.047 L1151.43 690.047 L1151.99 690.047 L1152.55 690.047 L1153.11 690.047 L1153.67 690.047 L1154.23 690.047 L1154.78 690.047 L1155.34 690.047 L1155.9 690.047 L1156.46 690.047 L1157.02 690.047 L1157.58 690.047 L1158.14 690.047 L1158.7 690.047 L1159.26 690.047 L1159.82 690.047 L1160.38 690.047 L1160.94 690.047 L1161.5 690.047 L1162.05 690.047 L1162.61 690.047 L1163.17 690.047 L1163.73 690.047 L1164.29 690.047 L1164.85 690.047 L1165.41 690.047 L1165.97 690.047 L1166.53 690.047 L1167.09 690.047 L1167.65 690.047 L1168.21 690.047 L1168.77 690.047 L1169.33 690.047 L1169.88 690.047 L1170.44 690.047 L1171 690.047 L1171.56 690.047 L1172.12 690.047 L1172.68 690.047 L1173.24 690.047 L1173.8 690.047 L1174.36 690.047 L1174.92 690.047 L1175.48 690.047 L1176.04 690.047 L1176.6 690.047 L1177.15 690.047 L1177.71 690.047 L1178.27 690.047 L1178.83 690.047 L1179.39 690.047 L1179.95 690.047 L1180.51 690.047 L1181.07 690.047 L1181.63 690.047 L1182.19 690.047 L1182.75 690.047 L1183.31 690.047 L1183.87 690.047 L1184.43 690.047 L1184.98 690.047 L1185.54 690.047 L1186.1 690.047 L1186.66 690.047 L1187.22 690.047 L1187.78 690.047 L1188.34 690.047 L1188.9 690.047 L1189.46 690.047 L1190.02 690.047 L1190.58 690.047 L1191.14 690.047 L1191.7 690.047 L1192.25 690.047 L1192.81 690.047 L1193.37 690.047 L1193.93 690.047 L1194.49 690.047 L1195.05 690.047 L1195.61 690.047 L1196.17 690.047 L1196.73 690.047 L1197.29 690.047 L1197.85 690.047 L1198.41 690.047 L1198.97 690.047 L1199.52 690.047 L1200.08 690.047 L1200.64 690.047 L1201.2 690.047 L1201.76 690.047 L1202.32 690.047 L1202.88 690.047 L1203.44 690.047 L1204 690.047 L1204.56 690.047 L1205.12 690.047 L1205.68 690.047 L1206.24 690.047 L1206.8 690.047 L1207.35 690.047 L1207.91 690.047 L1208.47 690.047 L1209.03 690.047 L1209.59 690.047 L1210.15 690.047 L1210.71 690.047 L1211.27 690.047 L1211.83 690.047 L1212.39 690.047 L1212.95 690.047 L1213.51 690.047 L1214.07 690.047 L1214.62 690.047 L1215.18 690.047 L1215.74 690.047 L1216.3 690.047 L1216.86 690.047 L1217.42 690.047 L1217.98 690.047 L1218.54 690.047 L1219.1 690.047 L1219.66 690.047 L1220.22 690.047 L1220.78 690.047 L1221.34 690.047 L1221.89 690.047 L1222.45 690.047 L1223.01 690.047 L1223.57 690.047 L1224.13 690.047 L1224.69 690.047 L1225.25 690.047 L1225.81 690.047 L1226.37 690.047 L1226.93 690.047 L1227.49 690.047 L1228.05 690.047 L1228.61 690.047 L1229.17 690.047 L1229.72 690.047 L1230.28 690.047 L1230.84 690.047 L1231.4 690.047 L1231.96 690.047 L1232.52 690.047 L1233.08 690.047 L1233.64 690.047 L1234.2 690.047 L1234.76 690.047 L1235.32 690.047 L1235.88 690.047 L1236.44 690.047 L1236.99 690.047 L1237.55 690.047 L1238.11 690.047 L1238.67 690.047 L1239.23 690.047 L1239.79 690.047 L1240.35 690.047 L1240.91 690.047 L1241.47 690.047 L1242.03 690.047 L1242.59 690.047 L1243.15 690.047 L1243.71 690.047 L1244.26 690.047 L1244.82 690.047 L1245.38 690.047 L1245.94 690.047 L1246.5 690.047 L1247.06 690.047 L1247.62 690.047 L1248.18 690.047 L1248.74 690.047 L1249.3 690.047 L1249.86 690.047 L1250.42 690.047 L1250.98 690.047 L1251.54 690.047 L1252.09 690.047 L1252.65 690.047 L1253.21 690.047 L1253.77 690.047 L1254.33 690.047 L1254.89 690.047 L1255.45 690.047 L1256.01 690.047 L1256.57 690.047 L1257.13 690.047 L1257.69 690.047 L1258.25 690.047 L1258.81 690.047 L1259.36 690.047 L1259.92 690.047 L1260.48 690.047 L1261.04 690.047 L1261.6 690.047 L1262.16 690.047 L1262.72 690.047 L1263.28 690.047 L1263.84 690.047 L1264.4 690.047 L1264.96 690.047 L1265.52 690.047 L1266.08 690.047 L1266.63 690.047 L1267.19 690.047 L1267.75 690.047 L1268.31 690.047 L1268.87 690.047 L1269.43 690.047 L1269.99 690.047 L1270.55 690.047 L1271.11 690.047 L1271.67 690.047 L1272.23 690.047 L1272.79 690.047 L1273.35 690.047 L1273.91 690.047 L1274.46 690.047 L1275.02 690.047 L1275.58 690.047 L1276.14 690.047 L1276.7 690.047 L1277.26 690.047 L1277.82 690.047 L1278.38 690.047 L1278.94 690.047 L1279.5 690.047 L1280.06 690.047 L1280.62 690.047 L1281.18 690.047 L1281.73 690.047 L1282.29 690.047 L1282.85 690.047 L1283.41 690.047 L1283.97 690.047 L1284.53 690.047 L1285.09 690.047 L1285.65 690.047 L1286.21 690.047 L1286.77 690.047 L1287.33 690.047 L1287.89 690.047 L1288.45 690.047 L1289 690.047 L1289.56 690.047 L1290.12 690.047 L1290.68 690.047 L1291.24 690.047 L1291.8 690.047 L1292.36 690.047 L1292.92 690.047 L1293.48 690.047 L1294.04 690.047 L1294.6 690.047 L1295.16 690.047 L1295.72 690.047 L1296.28 690.047 L1296.83 690.047 L1297.39 690.047 L1297.95 690.047 L1298.51 690.047 L1299.07 690.047 L1299.63 690.047 L1300.19 690.047 L1300.75 690.047 L1301.31 690.047 L1301.87 690.047 L1302.43 690.047 L1302.99 690.047 L1303.55 690.047 L1304.1 690.047 L1304.66 690.047 L1305.22 690.047 L1305.78 690.047 L1306.34 690.047 L1306.9 690.047 L1307.46 690.047 L1308.02 690.047 L1308.58 690.047 L1309.14 690.047 L1309.7 690.047 L1310.26 690.047 L1310.82 690.047 L1311.38 690.047 L1311.93 690.047 L1312.49 690.047 L1313.05 690.047 L1313.61 690.047 L1314.17 690.047 L1314.73 690.047 L1315.29 690.047 L1315.85 690.047 L1316.41 690.047 L1316.97 690.047 L1317.53 690.047 L1318.09 690.047 L1318.65 690.047 L1319.2 690.047 L1319.76 690.047 L1320.32 690.047 L1320.88 690.047 L1321.44 690.047 L1322 690.047 L1322.56 690.047 L1323.12 690.047 L1323.68 690.047 L1324.24 690.047 L1324.8 690.047 L1325.36 690.047 L1325.92 690.047 L1326.47 690.047 L1327.03 690.047 L1327.59 690.047 L1328.15 690.047 L1328.71 690.047 L1329.27 690.047 L1329.83 690.047 L1330.39 690.047 L1330.95 690.047 L1331.51 690.047 L1332.07 690.047 L1332.63 690.047 L1333.19 690.047 L1333.75 690.047 L1334.3 690.047 L1334.86 690.047 L1335.42 690.047 L1335.98 690.047 L1336.54 690.047 L1337.1 690.047 L1337.66 690.047 L1338.22 690.047 L1338.78 690.047 L1339.34 690.047 L1339.9 690.047 L1340.46 690.047 L1341.02 690.047 L1341.57 690.047 L1342.13 690.047 L1342.69 690.047 L1343.25 690.047 L1343.81 690.047 L1344.37 690.047 L1344.93 690.047 L1345.49 690.047 L1346.05 690.047 L1346.61 690.047 L1347.17 690.047 L1347.73 690.047 L1348.29 690.047 L1348.84 690.047 L1349.4 690.047 L1349.96 690.047 L1350.52 690.047 L1351.08 690.047 L1351.64 690.047 L1352.2 690.047 L1352.76 690.047 L1353.32 690.047 L1353.88 690.047 L1354.44 690.047 L1355 690.047 L1355.56 690.047 L1356.12 690.047 L1356.67 690.047 L1357.23 690.047 L1357.79 690.047 L1358.35 690.047 L1358.91 690.047 L1359.47 690.047 L1360.03 690.047 L1360.59 690.047 L1361.15 690.047 L1361.71 690.047 L1362.27 690.047 L1362.83 690.047 L1363.39 690.047 L1363.94 690.047 L1364.5 690.047 L1365.06 690.047 L1365.62 690.047 L1366.18 690.047 L1366.74 690.047 L1367.3 690.047 L1367.86 690.047 L1368.42 690.047 L1368.98 690.047 L1369.54 690.047 L1370.1 690.047 L1370.66 690.047 L1371.21 690.047 L1371.77 690.047 L1372.33 690.047 L1372.89 690.047 L1373.45 690.047 L1374.01 690.047 L1374.57 690.047 L1375.13 690.047 L1375.69 690.047 L1376.25 690.047 L1376.81 690.047 L1377.37 690.047 L1377.93 690.047 L1378.49 690.047 L1379.04 690.047 L1379.6 690.047 L1380.16 690.047 L1380.72 690.047 L1381.28 690.047 L1381.84 690.047 L1382.4 690.047 L1382.96 690.047 L1383.52 690.047 L1384.08 690.047 L1384.64 690.047 L1385.2 690.047 L1385.76 690.047 L1386.31 690.047 L1386.87 690.047 L1387.43 690.047 L1387.99 690.047 L1388.55 690.047 L1389.11 690.047 L1389.67 690.047 L1390.23 690.047 L1390.79 690.047 L1391.35 690.047 L1391.91 690.047 L1392.47 690.047 L1393.03 690.047 L1393.58 690.047 L1394.14 690.047 L1394.7 690.047 L1395.26 690.047 L1395.82 690.047 L1396.38 690.047 L1396.94 690.047 L1397.5 690.047 L1398.06 690.047 L1398.62 690.047 L1399.18 690.047 L1399.74 690.047 L1400.3 690.047 L1400.86 690.047 L1401.41 690.047 L1401.97 690.047 L1402.53 690.047 L1403.09 690.047 L1403.65 690.047 L1404.21 690.047 L1404.77 690.047 L1405.33 690.047 L1405.89 690.047 L1406.45 690.047 L1407.01 690.047 L1407.57 690.047 L1408.13 690.047 L1408.68 690.047 L1409.24 690.047 L1409.8 690.047 L1410.36 690.047 L1410.92 690.047 L1411.48 690.047 L1412.04 690.047 L1412.6 690.047 L1413.16 690.047 L1413.72 690.047 L1414.28 690.047 L1414.84 690.047 L1415.4 690.047 L1415.95 690.047 L1416.51 690.047 L1417.07 690.047 L1417.63 690.047 L1418.19 690.047 L1418.75 690.047 L1419.31 690.047 L1419.87 690.047 L1420.43 690.047 L1420.99 690.047 L1421.55 690.047 L1422.11 690.047 L1422.67 690.047 L1423.23 690.047 L1423.78 690.047 L1424.34 690.047 L1424.9 690.047 L1425.46 690.047 L1426.02 690.047 L1426.58 690.047 L1427.14 690.047 L1427.7 690.047 L1428.26 690.047 L1428.82 690.047 L1429.38 690.047 L1429.94 690.047 L1430.5 690.047 L1431.05 690.047 L1431.61 690.047 L1432.17 690.047 L1432.73 690.047 L1433.29 690.047 L1433.85 690.047 L1434.41 690.047 L1434.97 690.047 L1435.53 690.047 L1436.09 690.047 L1436.65 690.047 L1437.21 690.047 L1437.77 690.047 L1438.33 690.047 L1438.88 690.047 L1439.44 690.047 L1440 690.047 L1440.56 690.047 L1441.12 690.047 L1441.68 690.047 L1442.24 690.047 L1442.8 690.047 L1443.36 690.047 L1443.92 690.047 L1444.48 690.047 L1445.04 690.047 L1445.6 690.047 L1446.15 690.047 L1446.71 690.047 L1447.27 690.047 L1447.83 690.047 L1448.39 690.047 L1448.95 690.047 L1449.51 690.047 L1450.07 690.047 L1450.63 690.047 L1451.19 690.047 L1451.75 690.047 L1452.31 690.047 L1452.87 690.047 L1453.42 690.047 L1453.98 690.047 L1454.54 690.047 L1455.1 690.047 L1455.66 690.047 L1456.22 690.047 L1456.78 690.047 L1457.34 690.047 L1457.9 690.047 L1458.46 690.047 L1459.02 690.047 L1459.58 690.047 L1460.14 690.047 L1460.7 690.047 L1461.25 690.047 L1461.81 690.047 L1462.37 690.047 L1462.93 690.047 L1463.49 690.047 L1464.05 690.047 L1464.61 690.047 L1465.17 690.047 L1465.73 690.047 L1466.29 690.047 L1466.85 690.047 L1467.41 690.047 L1467.97 690.047 L1468.52 690.047 L1469.08 690.047 L1469.64 690.047 L1470.2 690.047 L1470.76 690.047 L1471.32 690.047 L1471.88 690.047 L1472.44 690.047 L1473 690.047 L1473.56 690.047 L1474.12 690.047 L1474.68 690.047 L1475.24 690.047 L1475.79 690.047 L1476.35 690.047 L1476.91 690.047 L1477.47 690.047 L1478.03 690.047 L1478.59 690.047 L1479.15 690.047 L1479.71 690.047 L1480.27 690.047 L1480.83 690.047 L1481.39 690.047 L1481.95 690.047 L1482.51 690.047 L1483.07 690.047 L1483.62 690.047 L1484.18 690.047 L1484.74 690.047 L1485.3 690.047 L1485.86 690.047 L1486.42 690.047 L1486.98 690.047 L1487.54 690.047 L1488.1 690.047 L1488.66 690.047 L1489.22 690.047 L1489.78 690.047 L1490.34 690.047 L1490.89 690.047 L1491.45 690.047 L1492.01 690.047 L1492.57 690.047 L1493.13 690.047 L1493.69 690.047 L1494.25 690.047 L1494.81 690.047 L1495.37 690.047 L1495.93 690.047 L1496.49 690.047 L1497.05 690.047 L1497.61 690.047 L1498.16 690.047 L1498.72 690.047 L1499.28 690.047 L1499.84 690.047 L1500.4 690.047 L1500.96 690.047 L1501.52 690.047 L1502.08 690.047 L1502.64 690.047 L1503.2 690.047 L1503.76 690.047 L1504.32 690.047 L1504.88 690.047 L1505.44 690.047 L1505.99 690.047 L1506.55 690.047 L1507.11 690.047 L1507.67 690.047 L1508.23 690.047 L1508.79 690.047 L1509.35 690.047 L1509.91 690.047 L1510.47 690.047 L1511.03 690.047 L1511.59 690.047 L1512.15 690.047 L1512.71 690.047 L1513.26 690.047 L1513.82 690.047 L1514.38 690.047 L1514.94 690.047 L1515.5 690.047 L1516.06 690.047 L1516.62 690.047 L1517.18 690.047 L1517.74 690.047 L1518.3 690.047 L1518.86 690.047 L1519.42 690.047 L1519.98 690.047 L1520.53 690.047 L1521.09 690.047 L1521.65 690.047 L1522.21 690.047 L1522.77 690.047 L1523.33 690.047 L1523.89 690.047 L1524.45 690.047 L1525.01 690.047 L1525.57 690.047 L1526.13 690.047 L1526.69 690.047 L1527.25 690.047 L1527.81 690.047 L1528.36 690.047 L1528.92 690.047 L1529.48 690.047 L1530.04 690.047 L1530.6 690.047 L1531.16 690.047 L1531.72 690.047 L1532.28 690.047 L1532.84 690.047 L1533.4 690.047 L1533.96 690.047 L1534.52 690.047 L1535.08 690.047 L1535.63 690.047 L1536.19 690.047 L1536.75 690.047 L1537.31 690.047 L1537.87 690.047 L1538.43 690.047 L1538.99 690.047 L1539.55 690.047 L1540.11 690.047 L1540.67 690.047 L1541.23 690.047 L1541.79 690.047 L1542.35 690.047 L1542.9 690.047 L1543.46 690.047 L1544.02 690.047 L1544.58 690.047 L1545.14 690.047 L1545.7 690.047 L1546.26 690.047 L1546.82 690.047 L1547.38 690.047 L1547.94 690.047 L1548.5 690.047 L1549.06 690.047 L1549.62 690.047 L1550.18 690.047 L1550.73 690.047 L1551.29 690.047 L1551.85 690.047 L1552.41 690.047 L1552.97 690.047 L1553.53 690.047 L1554.09 690.047 L1554.65 690.047 L1555.21 690.047 L1555.77 690.047 L1556.33 690.047 L1556.89 690.047 L1557.45 690.047 L1558 690.047 L1558.56 690.047 L1559.12 690.047 L1559.68 690.047 L1560.24 690.047 L1560.8 690.047 L1561.36 690.047 L1561.92 690.047 L1562.48 690.047 L1563.04 690.047 L1563.6 690.047 L1564.16 690.047 L1564.72 690.047 L1565.28 690.047 L1565.83 690.047 L1566.39 690.047 L1566.95 690.047 L1567.51 690.047 L1568.07 690.047 L1568.63 690.047 L1569.19 690.047 L1569.75 690.047 L1570.31 690.047 L1570.87 690.047 L1571.43 690.047 L1571.99 690.047 L1572.55 690.047 L1573.1 690.047 L1573.66 690.047 L1574.22 690.047 L1574.78 690.047 L1575.34 690.047 L1575.9 690.047 L1576.46 690.047 L1577.02 690.047 L1577.58 690.047 L1578.14 690.047 L1578.7 690.047 L1579.26 690.047 L1579.82 690.047 L1580.37 690.047 L1580.93 690.047 L1581.49 690.047 L1582.05 690.047 L1582.61 690.047 L1583.17 690.047 L1583.73 690.047 L1584.29 690.047 L1584.85 690.047 L1585.41 690.047 L1585.97 690.047 L1586.53 690.047 L1587.09 690.047 L1587.65 690.047 L1588.2 690.047 L1588.76 690.047 L1589.32 690.047 L1589.88 690.047 L1590.44 690.047 L1591 690.047 L1591.56 690.047 L1592.12 690.047 L1592.68 690.047 L1593.24 690.047 L1593.8 690.047 L1594.36 690.047 L1594.92 690.047 L1595.47 690.047 L1596.03 690.047 L1596.59 690.047 L1597.15 690.047 L1597.71 690.047 L1598.27 690.047 L1598.83 690.047 L1599.39 690.047 L1599.95 690.047 L1600.51 690.047 L1601.07 690.047 L1601.63 690.047 L1602.19 690.047 L1602.74 690.047 L1603.3 690.047 L1603.86 690.047 L1604.42 690.047 L1604.98 690.047 L1605.54 690.047 L1606.1 690.047 L1606.66 690.047 L1607.22 690.047 L1607.78 690.047 L1608.34 690.047 L1608.9 690.047 L1609.46 690.047 L1610.02 690.047 L1610.57 690.047 L1611.13 690.047 L1611.69 690.047 L1612.25 690.047 L1612.81 690.047 L1613.37 690.047 L1613.93 690.047 L1614.49 690.047 L1615.05 690.047 L1615.61 690.047 L1616.17 690.047 L1616.73 690.047 L1617.29 690.047 L1617.84 690.047 L1618.4 690.047 L1618.96 690.047 L1619.52 690.047 L1620.08 690.047 L1620.64 690.047 L1621.2 690.047 L1621.76 690.047 L1622.32 690.047 L1622.88 690.047 L1623.44 690.047 L1624 690.047 L1624.56 690.047 L1625.11 690.047 L1625.67 690.047 L1626.23 690.047 L1626.79 690.047 L1627.35 690.047 L1627.91 690.047 L1628.47 690.047 L1629.03 690.047 L1629.59 690.047 L1630.15 690.047 L1630.71 690.047 L1631.27 690.047 L1631.83 690.047 L1632.39 690.047 L1632.94 690.047 L1633.5 690.047 L1634.06 690.047 L1634.62 690.047 L1635.18 690.047 L1635.74 690.047 L1636.3 690.047 L1636.86 690.047 L1637.42 690.047 L1637.98 690.047 L1638.54 690.047 L1639.1 690.047 L1639.66 690.047 L1640.21 690.047 L1640.77 690.047 L1641.33 690.047 L1641.89 690.047 L1642.45 690.047 L1643.01 690.047 L1643.57 690.047 L1644.13 690.047 L1644.69 690.047 L1645.25 690.047 L1645.81 690.047 L1646.37 690.047 L1646.93 690.047 L1647.48 690.047 L1648.04 690.047 L1648.6 690.047 L1649.16 690.047 L1649.72 690.047 L1650.28 690.047 L1650.84 690.047 L1651.4 690.047 L1651.96 690.047 L1652.52 690.047 L1653.08 690.047 L1653.64 690.047 L1654.2 690.047 L1654.76 690.047 L1655.31 690.047 L1655.87 690.047 L1656.43 690.047 L1656.99 690.047 L1657.55 690.047 L1658.11 690.047 L1658.67 690.047 L1659.23 690.047 L1659.79 690.047 L1660.35 690.047 L1660.91 690.047 L1661.47 690.047 L1662.03 690.047 L1662.58 690.047 L1663.14 690.047 L1663.7 690.047 L1664.26 690.047 L1664.82 690.047 L1665.38 690.047 L1665.94 690.047 L1666.5 690.047 L1667.06 690.047 L1667.62 690.047 L1668.18 690.047 L1668.74 690.047 L1669.3 690.047 L1669.85 690.047 L1670.41 690.047 L1670.97 690.047 L1671.53 690.047 L1672.09 690.047 L1672.65 690.047 L1673.21 690.047 L1673.77 690.047 L1674.33 690.047 L1674.89 690.047 L1675.45 690.047 L1676.01 690.047 L1676.57 690.047 L1677.13 690.047 L1677.68 690.047 L1678.24 690.047 L1678.8 690.047 L1679.36 690.047 L1679.92 690.047 L1680.48 690.047 L1681.04 690.047 L1681.6 690.047 L1682.16 690.047 L1682.72 690.047 L1683.28 690.047 L1683.84 690.047 L1684.4 690.047 L1684.95 690.047 L1685.51 690.047 L1686.07 690.047 L1686.63 690.047 L1687.19 690.047 L1687.75 690.047 L1688.31 690.047 L1688.87 690.047 L1689.43 690.047 L1689.99 690.047 L1690.55 690.047 L1691.11 690.047 L1691.67 690.047 L1692.23 690.047 L1692.78 690.047 L1693.34 690.047 L1693.9 690.047 L1694.46 690.047 L1695.02 690.047 L1695.58 690.047 L1696.14 690.047 L1696.7 690.047 L1697.26 690.047 L1697.82 690.047 L1698.38 690.047 L1698.94 690.047 L1699.5 690.047 L1700.05 690.047 L1700.61 690.047 L1701.17 690.047 L1701.73 690.047 L1702.29 690.047 L1702.85 690.047 L1703.41 690.047 L1703.97 690.047 L1704.53 690.047 L1705.09 690.047 L1705.65 690.047 L1706.21 690.047 L1706.77 690.047 L1707.32 690.047 L1707.88 690.047 L1708.44 690.047 L1709 690.047 L1709.56 690.047 L1710.12 690.047 L1710.68 690.047 L1711.24 690.047 L1711.8 690.047 L1712.36 690.047 L1712.92 690.047 L1713.48 690.047 L1714.04 690.047 L1714.6 690.047 L1715.15 690.047 L1715.71 690.047 L1716.27 690.047 L1716.83 690.047 L1717.39 690.047 L1717.95 690.047 L1718.51 690.047 L1719.07 690.047 L1719.63 690.047 L1720.19 690.047 L1720.75 690.047 L1721.31 690.047 L1721.87 690.047 L1722.42 690.047 L1722.98 690.047 L1723.54 690.047 L1724.1 690.047 L1724.66 690.047 L1725.22 690.047 L1725.78 690.047 L1726.34 690.047 L1726.9 690.047 L1727.46 690.047 L1728.02 690.047 L1728.58 690.047 L1729.14 690.047 L1729.69 690.047 L1730.25 690.047 L1730.81 690.047 L1731.37 690.047 L1731.93 690.047 L1732.49 690.047 L1733.05 690.047 L1733.61 690.047 L1734.17 690.047 L1734.73 690.047 L1735.29 690.047 L1735.85 690.047 L1736.41 690.047 L1736.97 690.047 L1737.52 690.047 L1738.08 690.047 L1738.64 690.047 L1739.2 690.047 L1739.76 690.047 L1740.32 690.047 L1740.88 690.047 L1741.44 690.047 L1742 690.047 L1742.56 690.047 L1743.12 690.047 L1743.68 690.047 L1744.24 690.047 L1744.79 690.047 L1745.35 690.047 L1745.91 690.047 L1746.47 690.047 L1747.03 690.047 L1747.59 690.047 L1748.15 690.047 L1748.71 690.047 L1749.27 690.047 L1749.83 690.047 L1750.39 690.047 L1750.95 690.047 L1751.51 690.047 L1752.06 690.047 L1752.62 690.047 L1753.18 690.047 L1753.74 690.047 L1754.3 690.047 L1754.86 690.047 L1755.42 690.047 L1755.98 690.047 L1756.54 690.047 L1757.1 690.047 L1757.66 690.047 L1758.22 690.047 L1758.78 690.047 L1759.34 690.047 L1759.89 690.047 L1760.45 690.047 L1761.01 690.047 L1761.57 690.047 L1762.13 690.047 L1762.69 690.047 L1763.25 690.047 L1763.81 690.047 L1764.37 690.047 L1764.93 690.047 L1765.49 690.047 L1766.05 690.047 L1766.61 690.047 L1767.16 690.047 L1767.72 690.047 L1768.28 690.047 L1768.84 690.047 L1769.4 690.047 L1769.96 690.047 L1770.52 690.047 L1771.08 690.047 L1771.64 690.047 L1772.2 690.047 L1772.76 690.047 L1773.32 690.047 L1773.88 690.047 L1774.43 690.047 L1774.99 690.047 L1775.55 690.047 L1776.11 690.047 L1776.67 690.047 L1777.23 690.047 L1777.79 690.047 L1778.35 690.047 L1778.91 690.047 L1779.47 690.047 L1780.03 690.047 L1780.59 690.047 L1781.15 690.047 L1781.71 690.047 L1782.26 690.047 L1782.82 690.047 L1783.38 690.047 L1783.94 690.047 L1784.5 690.047 L1785.06 690.047 L1785.62 690.047 L1786.18 690.047 L1786.74 690.047 L1787.3 690.047 L1787.86 690.047 L1788.42 690.047 L1788.98 690.047 L1789.53 690.047 L1790.09 690.047 L1790.65 690.047 L1791.21 690.047 L1791.77 690.047 L1792.33 690.047 L1792.89 690.047 L1793.45 690.047 L1794.01 690.047 L1794.57 690.047 L1795.13 690.047 L1795.69 690.047 L1796.25 690.047 L1796.8 690.047 L1797.36 690.047 L1797.92 690.047 L1798.48 690.047 L1799.04 690.047 L1799.6 690.047 L1800.16 690.047 L1800.72 690.047 L1801.28 690.047 L1801.84 690.047 L1802.4 690.047 L1802.96 690.047 L1803.52 690.047 L1804.08 690.047 L1804.63 690.047 L1805.19 690.047 L1805.75 690.047 L1806.31 690.047 L1806.87 690.047 L1807.43 690.047 L1807.99 690.047 L1808.55 690.047 L1809.11 690.047 L1809.67 690.047 L1810.23 690.047 L1810.79 690.047 L1811.35 690.047 L1811.9 690.047 L1812.46 690.047 L1813.02 690.047 L1813.58 690.047 L1814.14 690.047 L1814.7 690.047 L1815.26 690.047 L1815.82 690.047 L1816.38 690.047 L1816.94 690.047 L1817.5 690.047 L1818.06 690.047 L1818.62 690.047 L1819.18 690.047 L1819.73 690.047 L1820.29 690.047 L1820.85 690.047 L1821.41 690.047 L1821.97 690.047 L1822.53 690.047 L1823.09 690.047 L1823.65 690.047 L1824.21 690.047 L1824.77 690.047 L1825.33 690.047 L1825.89 690.047 L1826.45 690.047 L1827 690.047 L1827.56 690.047 L1828.12 690.047 L1828.68 690.047 L1829.24 690.047 L1829.8 690.047 L1830.36 690.047 L1830.92 690.047 L1831.48 690.047 L1832.04 690.047 L1832.6 690.047 L1833.16 690.047 L1833.72 690.047 L1834.27 690.047 L1834.83 690.047 L1835.39 690.047 L1835.95 690.047 L1836.51 690.047 L1837.07 690.047 L1837.63 690.047 L1838.19 690.047 L1838.19 679.637 L1837.63 679.637 L1837.07 679.637 L1836.51 679.637 L1835.95 679.637 L1835.39 679.637 L1834.83 679.637 L1834.27 679.637 L1833.72 679.637 L1833.16 679.637 L1832.6 679.637 L1832.04 679.637 L1831.48 679.637 L1830.92 679.637 L1830.36 679.637 L1829.8 679.637 L1829.24 679.637 L1828.68 679.637 L1828.12 679.637 L1827.56 679.637 L1827 679.637 L1826.45 679.637 L1825.89 679.637 L1825.33 679.637 L1824.77 679.637 L1824.21 679.637 L1823.65 679.637 L1823.09 679.637 L1822.53 679.637 L1821.97 679.637 L1821.41 679.637 L1820.85 679.637 L1820.29 679.637 L1819.73 679.637 L1819.18 679.637 L1818.62 679.637 L1818.06 679.637 L1817.5 679.637 L1816.94 679.637 L1816.38 679.637 L1815.82 679.637 L1815.26 679.637 L1814.7 679.637 L1814.14 679.637 L1813.58 679.637 L1813.02 679.637 L1812.46 679.637 L1811.9 679.637 L1811.35 679.637 L1810.79 679.637 L1810.23 679.637 L1809.67 679.637 L1809.11 679.637 L1808.55 679.637 L1807.99 679.637 L1807.43 679.637 L1806.87 679.637 L1806.31 679.637 L1805.75 679.637 L1805.19 679.637 L1804.63 679.637 L1804.08 679.637 L1803.52 679.637 L1802.96 679.637 L1802.4 679.637 L1801.84 679.637 L1801.28 679.637 L1800.72 679.637 L1800.16 679.637 L1799.6 679.637 L1799.04 679.637 L1798.48 679.637 L1797.92 679.637 L1797.36 679.637 L1796.8 679.637 L1796.25 679.637 L1795.69 679.637 L1795.13 679.637 L1794.57 679.637 L1794.01 679.637 L1793.45 679.637 L1792.89 679.637 L1792.33 679.637 L1791.77 679.637 L1791.21 679.637 L1790.65 679.637 L1790.09 679.637 L1789.53 679.637 L1788.98 679.637 L1788.42 679.637 L1787.86 679.637 L1787.3 679.637 L1786.74 679.637 L1786.18 679.637 L1785.62 679.637 L1785.06 679.637 L1784.5 679.637 L1783.94 679.637 L1783.38 679.637 L1782.82 679.637 L1782.26 679.637 L1781.71 679.637 L1781.15 679.637 L1780.59 679.637 L1780.03 679.637 L1779.47 679.637 L1778.91 679.637 L1778.35 679.637 L1777.79 679.637 L1777.23 679.637 L1776.67 679.637 L1776.11 679.637 L1775.55 679.637 L1774.99 679.637 L1774.43 679.637 L1773.88 679.637 L1773.32 679.637 L1772.76 679.637 L1772.2 679.637 L1771.64 679.637 L1771.08 679.637 L1770.52 679.637 L1769.96 679.637 L1769.4 679.637 L1768.84 679.637 L1768.28 679.637 L1767.72 679.637 L1767.16 679.637 L1766.61 679.637 L1766.05 679.637 L1765.49 679.637 L1764.93 679.637 L1764.37 679.637 L1763.81 679.637 L1763.25 679.637 L1762.69 679.637 L1762.13 679.637 L1761.57 679.637 L1761.01 679.637 L1760.45 679.637 L1759.89 679.637 L1759.34 679.637 L1758.78 679.637 L1758.22 679.637 L1757.66 679.637 L1757.1 679.637 L1756.54 679.637 L1755.98 679.637 L1755.42 679.637 L1754.86 679.637 L1754.3 679.637 L1753.74 679.637 L1753.18 679.637 L1752.62 679.637 L1752.06 679.637 L1751.51 679.637 L1750.95 679.637 L1750.39 679.637 L1749.83 679.637 L1749.27 679.637 L1748.71 679.637 L1748.15 679.637 L1747.59 679.637 L1747.03 679.637 L1746.47 679.637 L1745.91 679.637 L1745.35 679.637 L1744.79 679.637 L1744.24 679.637 L1743.68 679.637 L1743.12 679.637 L1742.56 679.637 L1742 679.637 L1741.44 679.637 L1740.88 679.637 L1740.32 679.637 L1739.76 679.637 L1739.2 679.637 L1738.64 679.637 L1738.08 679.637 L1737.52 679.637 L1736.97 679.637 L1736.41 679.637 L1735.85 679.637 L1735.29 679.637 L1734.73 679.637 L1734.17 679.637 L1733.61 679.637 L1733.05 679.637 L1732.49 679.637 L1731.93 679.637 L1731.37 679.637 L1730.81 679.637 L1730.25 679.637 L1729.69 679.637 L1729.14 679.637 L1728.58 679.637 L1728.02 679.637 L1727.46 679.637 L1726.9 679.637 L1726.34 679.637 L1725.78 679.637 L1725.22 679.637 L1724.66 679.637 L1724.1 679.637 L1723.54 679.637 L1722.98 679.637 L1722.42 679.637 L1721.87 679.637 L1721.31 679.637 L1720.75 679.637 L1720.19 679.637 L1719.63 679.637 L1719.07 679.637 L1718.51 679.637 L1717.95 679.637 L1717.39 679.637 L1716.83 679.637 L1716.27 679.637 L1715.71 679.637 L1715.15 679.637 L1714.6 679.637 L1714.04 679.637 L1713.48 679.637 L1712.92 679.637 L1712.36 679.637 L1711.8 679.637 L1711.24 679.637 L1710.68 679.637 L1710.12 679.637 L1709.56 679.637 L1709 679.637 L1708.44 679.637 L1707.88 679.637 L1707.32 679.637 L1706.77 679.637 L1706.21 679.637 L1705.65 679.637 L1705.09 679.637 L1704.53 679.637 L1703.97 679.637 L1703.41 679.637 L1702.85 679.637 L1702.29 679.637 L1701.73 679.637 L1701.17 679.637 L1700.61 679.637 L1700.05 679.637 L1699.5 679.637 L1698.94 679.637 L1698.38 679.637 L1697.82 679.637 L1697.26 679.637 L1696.7 679.637 L1696.14 679.637 L1695.58 679.637 L1695.02 679.637 L1694.46 679.637 L1693.9 679.637 L1693.34 679.637 L1692.78 679.637 L1692.23 679.637 L1691.67 679.637 L1691.11 679.637 L1690.55 679.637 L1689.99 679.637 L1689.43 679.637 L1688.87 679.637 L1688.31 679.637 L1687.75 679.637 L1687.19 679.637 L1686.63 679.637 L1686.07 679.637 L1685.51 679.637 L1684.95 679.637 L1684.4 679.637 L1683.84 679.637 L1683.28 679.637 L1682.72 679.637 L1682.16 679.637 L1681.6 679.637 L1681.04 679.637 L1680.48 679.637 L1679.92 679.637 L1679.36 679.637 L1678.8 679.637 L1678.24 679.637 L1677.68 679.637 L1677.13 679.637 L1676.57 679.637 L1676.01 679.637 L1675.45 679.637 L1674.89 679.637 L1674.33 679.637 L1673.77 679.637 L1673.21 679.637 L1672.65 679.637 L1672.09 679.637 L1671.53 679.637 L1670.97 679.637 L1670.41 679.637 L1669.85 679.637 L1669.3 679.637 L1668.74 679.637 L1668.18 679.637 L1667.62 679.637 L1667.06 679.637 L1666.5 679.637 L1665.94 679.637 L1665.38 679.637 L1664.82 679.637 L1664.26 679.637 L1663.7 679.637 L1663.14 679.637 L1662.58 679.637 L1662.03 679.637 L1661.47 679.637 L1660.91 679.637 L1660.35 679.637 L1659.79 679.637 L1659.23 679.637 L1658.67 679.637 L1658.11 679.637 L1657.55 679.637 L1656.99 679.637 L1656.43 679.637 L1655.87 679.637 L1655.31 679.637 L1654.76 679.637 L1654.2 679.637 L1653.64 679.637 L1653.08 679.637 L1652.52 679.637 L1651.96 679.637 L1651.4 679.637 L1650.84 679.637 L1650.28 679.637 L1649.72 679.637 L1649.16 679.637 L1648.6 679.637 L1648.04 679.637 L1647.48 679.637 L1646.93 679.637 L1646.37 679.637 L1645.81 679.637 L1645.25 679.637 L1644.69 679.637 L1644.13 679.637 L1643.57 679.637 L1643.01 679.637 L1642.45 679.637 L1641.89 679.637 L1641.33 679.637 L1640.77 679.637 L1640.21 679.637 L1639.66 679.637 L1639.1 679.637 L1638.54 679.637 L1637.98 679.637 L1637.42 679.637 L1636.86 679.637 L1636.3 679.637 L1635.74 679.637 L1635.18 679.637 L1634.62 679.637 L1634.06 679.637 L1633.5 679.637 L1632.94 679.637 L1632.39 679.637 L1631.83 679.637 L1631.27 679.637 L1630.71 679.637 L1630.15 679.637 L1629.59 679.637 L1629.03 679.637 L1628.47 679.637 L1627.91 679.637 L1627.35 679.637 L1626.79 679.637 L1626.23 679.637 L1625.67 679.637 L1625.11 679.637 L1624.56 679.637 L1624 679.637 L1623.44 679.637 L1622.88 679.637 L1622.32 679.637 L1621.76 679.637 L1621.2 679.637 L1620.64 679.637 L1620.08 679.637 L1619.52 679.637 L1618.96 679.637 L1618.4 679.637 L1617.84 679.637 L1617.29 679.637 L1616.73 679.637 L1616.17 679.637 L1615.61 679.637 L1615.05 679.637 L1614.49 679.637 L1613.93 679.637 L1613.37 679.637 L1612.81 679.637 L1612.25 679.637 L1611.69 679.637 L1611.13 679.637 L1610.57 679.637 L1610.02 679.637 L1609.46 679.637 L1608.9 679.637 L1608.34 679.637 L1607.78 679.637 L1607.22 679.637 L1606.66 679.637 L1606.1 679.637 L1605.54 679.637 L1604.98 679.637 L1604.42 679.637 L1603.86 679.637 L1603.3 679.637 L1602.74 679.637 L1602.19 679.637 L1601.63 679.637 L1601.07 679.637 L1600.51 679.637 L1599.95 679.637 L1599.39 679.637 L1598.83 679.637 L1598.27 679.637 L1597.71 679.637 L1597.15 679.637 L1596.59 679.637 L1596.03 679.637 L1595.47 679.637 L1594.92 679.637 L1594.36 679.637 L1593.8 679.637 L1593.24 679.637 L1592.68 679.637 L1592.12 679.637 L1591.56 679.637 L1591 679.637 L1590.44 679.637 L1589.88 679.637 L1589.32 679.637 L1588.76 679.637 L1588.2 679.637 L1587.65 679.637 L1587.09 679.637 L1586.53 679.637 L1585.97 679.637 L1585.41 679.637 L1584.85 679.637 L1584.29 679.637 L1583.73 679.637 L1583.17 679.637 L1582.61 679.637 L1582.05 679.637 L1581.49 679.637 L1580.93 679.637 L1580.37 679.637 L1579.82 679.637 L1579.26 679.637 L1578.7 679.637 L1578.14 679.637 L1577.58 679.637 L1577.02 679.637 L1576.46 679.637 L1575.9 679.637 L1575.34 679.637 L1574.78 679.637 L1574.22 679.637 L1573.66 679.637 L1573.1 679.637 L1572.55 679.637 L1571.99 679.637 L1571.43 679.637 L1570.87 679.637 L1570.31 679.637 L1569.75 679.637 L1569.19 679.637 L1568.63 679.637 L1568.07 679.637 L1567.51 679.637 L1566.95 679.637 L1566.39 679.637 L1565.83 679.637 L1565.28 679.637 L1564.72 679.637 L1564.16 679.637 L1563.6 679.637 L1563.04 679.637 L1562.48 679.637 L1561.92 679.637 L1561.36 679.637 L1560.8 679.637 L1560.24 679.637 L1559.68 679.637 L1559.12 679.637 L1558.56 679.637 L1558 679.637 L1557.45 679.637 L1556.89 679.637 L1556.33 679.637 L1555.77 679.637 L1555.21 679.637 L1554.65 679.637 L1554.09 679.637 L1553.53 679.637 L1552.97 679.637 L1552.41 679.637 L1551.85 679.637 L1551.29 679.637 L1550.73 679.637 L1550.18 679.637 L1549.62 679.637 L1549.06 679.637 L1548.5 679.637 L1547.94 679.637 L1547.38 679.637 L1546.82 679.637 L1546.26 679.637 L1545.7 679.637 L1545.14 679.637 L1544.58 679.637 L1544.02 679.637 L1543.46 679.637 L1542.9 679.637 L1542.35 679.637 L1541.79 679.637 L1541.23 679.637 L1540.67 679.637 L1540.11 679.637 L1539.55 679.637 L1538.99 679.637 L1538.43 679.637 L1537.87 679.637 L1537.31 679.637 L1536.75 679.637 L1536.19 679.637 L1535.63 679.637 L1535.08 679.637 L1534.52 679.637 L1533.96 679.637 L1533.4 679.637 L1532.84 679.637 L1532.28 679.637 L1531.72 679.637 L1531.16 679.637 L1530.6 679.637 L1530.04 679.637 L1529.48 679.637 L1528.92 679.637 L1528.36 679.637 L1527.81 679.637 L1527.25 679.637 L1526.69 679.637 L1526.13 679.637 L1525.57 679.637 L1525.01 679.637 L1524.45 679.637 L1523.89 679.637 L1523.33 679.637 L1522.77 679.637 L1522.21 679.637 L1521.65 679.637 L1521.09 679.637 L1520.53 679.637 L1519.98 679.637 L1519.42 679.637 L1518.86 679.637 L1518.3 679.637 L1517.74 679.637 L1517.18 679.637 L1516.62 679.637 L1516.06 679.637 L1515.5 679.637 L1514.94 679.637 L1514.38 679.637 L1513.82 679.637 L1513.26 679.637 L1512.71 679.637 L1512.15 679.637 L1511.59 679.637 L1511.03 679.637 L1510.47 679.637 L1509.91 679.637 L1509.35 679.637 L1508.79 679.637 L1508.23 679.637 L1507.67 679.637 L1507.11 679.637 L1506.55 679.637 L1505.99 679.637 L1505.44 679.637 L1504.88 679.637 L1504.32 679.637 L1503.76 679.637 L1503.2 679.637 L1502.64 679.637 L1502.08 679.637 L1501.52 679.637 L1500.96 679.637 L1500.4 679.637 L1499.84 679.637 L1499.28 679.637 L1498.72 679.637 L1498.16 679.637 L1497.61 679.637 L1497.05 679.637 L1496.49 679.637 L1495.93 679.637 L1495.37 679.637 L1494.81 679.637 L1494.25 679.637 L1493.69 679.637 L1493.13 679.637 L1492.57 679.637 L1492.01 679.637 L1491.45 679.637 L1490.89 679.637 L1490.34 679.637 L1489.78 679.637 L1489.22 679.637 L1488.66 679.637 L1488.1 679.637 L1487.54 679.637 L1486.98 679.637 L1486.42 679.637 L1485.86 679.637 L1485.3 679.637 L1484.74 679.637 L1484.18 679.637 L1483.62 679.637 L1483.07 679.637 L1482.51 679.637 L1481.95 679.637 L1481.39 679.637 L1480.83 679.637 L1480.27 679.637 L1479.71 679.637 L1479.15 679.637 L1478.59 679.637 L1478.03 679.637 L1477.47 679.637 L1476.91 679.637 L1476.35 679.637 L1475.79 679.637 L1475.24 679.637 L1474.68 679.637 L1474.12 679.637 L1473.56 679.637 L1473 679.637 L1472.44 679.637 L1471.88 679.637 L1471.32 679.637 L1470.76 679.637 L1470.2 679.637 L1469.64 679.637 L1469.08 679.637 L1468.52 679.637 L1467.97 679.637 L1467.41 679.637 L1466.85 679.637 L1466.29 679.637 L1465.73 679.637 L1465.17 679.637 L1464.61 679.637 L1464.05 679.637 L1463.49 679.637 L1462.93 679.637 L1462.37 679.637 L1461.81 679.637 L1461.25 679.637 L1460.7 679.637 L1460.14 679.637 L1459.58 679.637 L1459.02 679.637 L1458.46 679.637 L1457.9 679.637 L1457.34 679.637 L1456.78 679.637 L1456.22 679.637 L1455.66 679.637 L1455.1 679.637 L1454.54 679.637 L1453.98 679.637 L1453.42 679.637 L1452.87 679.637 L1452.31 679.637 L1451.75 679.637 L1451.19 679.637 L1450.63 679.637 L1450.07 679.637 L1449.51 679.637 L1448.95 679.637 L1448.39 679.637 L1447.83 679.637 L1447.27 679.637 L1446.71 679.637 L1446.15 679.637 L1445.6 679.637 L1445.04 679.637 L1444.48 679.637 L1443.92 679.637 L1443.36 679.637 L1442.8 679.637 L1442.24 679.637 L1441.68 679.637 L1441.12 679.637 L1440.56 679.637 L1440 679.637 L1439.44 679.637 L1438.88 679.637 L1438.33 679.637 L1437.77 679.637 L1437.21 679.637 L1436.65 679.637 L1436.09 679.637 L1435.53 679.637 L1434.97 679.637 L1434.41 679.637 L1433.85 679.637 L1433.29 679.637 L1432.73 679.637 L1432.17 679.637 L1431.61 679.637 L1431.05 679.637 L1430.5 679.637 L1429.94 679.637 L1429.38 679.637 L1428.82 679.637 L1428.26 679.637 L1427.7 679.637 L1427.14 679.637 L1426.58 679.637 L1426.02 679.637 L1425.46 679.637 L1424.9 679.637 L1424.34 679.637 L1423.78 679.637 L1423.23 679.637 L1422.67 679.637 L1422.11 679.637 L1421.55 679.637 L1420.99 679.637 L1420.43 679.637 L1419.87 679.637 L1419.31 679.637 L1418.75 679.637 L1418.19 679.637 L1417.63 679.637 L1417.07 679.637 L1416.51 679.637 L1415.95 679.637 L1415.4 679.637 L1414.84 679.637 L1414.28 679.637 L1413.72 679.637 L1413.16 679.637 L1412.6 679.637 L1412.04 679.637 L1411.48 679.637 L1410.92 679.637 L1410.36 679.637 L1409.8 679.637 L1409.24 679.637 L1408.68 679.637 L1408.13 679.637 L1407.57 679.637 L1407.01 679.637 L1406.45 679.637 L1405.89 679.637 L1405.33 679.637 L1404.77 679.637 L1404.21 679.637 L1403.65 679.637 L1403.09 679.637 L1402.53 679.637 L1401.97 679.637 L1401.41 679.637 L1400.86 679.637 L1400.3 679.637 L1399.74 679.637 L1399.18 679.637 L1398.62 679.637 L1398.06 679.637 L1397.5 679.637 L1396.94 679.637 L1396.38 679.637 L1395.82 679.637 L1395.26 679.637 L1394.7 679.637 L1394.14 679.637 L1393.58 679.637 L1393.03 679.637 L1392.47 679.637 L1391.91 679.637 L1391.35 679.637 L1390.79 679.637 L1390.23 679.637 L1389.67 679.637 L1389.11 679.637 L1388.55 679.637 L1387.99 679.637 L1387.43 679.637 L1386.87 679.637 L1386.31 679.637 L1385.76 679.637 L1385.2 679.637 L1384.64 679.637 L1384.08 679.637 L1383.52 679.637 L1382.96 679.637 L1382.4 679.637 L1381.84 679.637 L1381.28 679.637 L1380.72 679.637 L1380.16 679.637 L1379.6 679.637 L1379.04 679.637 L1378.49 679.637 L1377.93 679.637 L1377.37 679.637 L1376.81 679.637 L1376.25 679.637 L1375.69 679.637 L1375.13 679.637 L1374.57 679.637 L1374.01 679.637 L1373.45 679.637 L1372.89 679.637 L1372.33 679.637 L1371.77 679.637 L1371.21 679.637 L1370.66 679.637 L1370.1 679.637 L1369.54 679.637 L1368.98 679.637 L1368.42 679.637 L1367.86 679.637 L1367.3 679.637 L1366.74 679.637 L1366.18 679.637 L1365.62 679.637 L1365.06 679.637 L1364.5 679.637 L1363.94 679.637 L1363.39 679.637 L1362.83 679.637 L1362.27 679.637 L1361.71 679.637 L1361.15 679.637 L1360.59 679.637 L1360.03 679.637 L1359.47 679.637 L1358.91 679.637 L1358.35 679.637 L1357.79 679.637 L1357.23 679.637 L1356.67 679.637 L1356.12 679.637 L1355.56 679.637 L1355 679.637 L1354.44 679.637 L1353.88 679.637 L1353.32 679.637 L1352.76 679.637 L1352.2 679.637 L1351.64 679.637 L1351.08 679.637 L1350.52 679.637 L1349.96 679.637 L1349.4 679.637 L1348.84 679.637 L1348.29 679.637 L1347.73 679.637 L1347.17 679.637 L1346.61 679.637 L1346.05 679.637 L1345.49 679.637 L1344.93 679.637 L1344.37 679.637 L1343.81 679.637 L1343.25 679.637 L1342.69 679.637 L1342.13 679.637 L1341.57 679.637 L1341.02 679.637 L1340.46 679.637 L1339.9 679.637 L1339.34 679.637 L1338.78 679.637 L1338.22 679.637 L1337.66 679.637 L1337.1 679.637 L1336.54 679.637 L1335.98 679.637 L1335.42 679.637 L1334.86 679.637 L1334.3 679.637 L1333.75 679.637 L1333.19 679.637 L1332.63 679.637 L1332.07 679.637 L1331.51 679.637 L1330.95 679.637 L1330.39 679.637 L1329.83 679.637 L1329.27 679.637 L1328.71 679.637 L1328.15 679.637 L1327.59 679.637 L1327.03 679.637 L1326.47 679.637 L1325.92 679.637 L1325.36 679.637 L1324.8 679.637 L1324.24 679.637 L1323.68 679.637 L1323.12 679.637 L1322.56 679.637 L1322 679.637 L1321.44 679.637 L1320.88 679.637 L1320.32 679.637 L1319.76 679.637 L1319.2 679.637 L1318.65 679.637 L1318.09 679.637 L1317.53 679.637 L1316.97 679.637 L1316.41 679.637 L1315.85 679.637 L1315.29 679.637 L1314.73 679.637 L1314.17 679.637 L1313.61 679.637 L1313.05 679.637 L1312.49 679.637 L1311.93 679.637 L1311.38 679.637 L1310.82 679.637 L1310.26 679.637 L1309.7 679.637 L1309.14 679.637 L1308.58 679.637 L1308.02 679.637 L1307.46 679.637 L1306.9 679.637 L1306.34 679.637 L1305.78 679.637 L1305.22 679.637 L1304.66 679.637 L1304.1 679.637 L1303.55 679.637 L1302.99 679.637 L1302.43 679.637 L1301.87 679.637 L1301.31 679.637 L1300.75 679.637 L1300.19 679.637 L1299.63 679.637 L1299.07 679.637 L1298.51 679.637 L1297.95 679.637 L1297.39 679.637 L1296.83 679.637 L1296.28 679.637 L1295.72 679.637 L1295.16 679.637 L1294.6 679.637 L1294.04 679.637 L1293.48 679.637 L1292.92 679.637 L1292.36 679.637 L1291.8 679.637 L1291.24 679.637 L1290.68 679.637 L1290.12 679.637 L1289.56 679.637 L1289 679.637 L1288.45 679.637 L1287.89 679.637 L1287.33 679.637 L1286.77 679.637 L1286.21 679.637 L1285.65 679.637 L1285.09 679.637 L1284.53 679.637 L1283.97 679.637 L1283.41 679.637 L1282.85 679.637 L1282.29 679.637 L1281.73 679.637 L1281.18 679.637 L1280.62 679.637 L1280.06 679.637 L1279.5 679.637 L1278.94 679.637 L1278.38 679.637 L1277.82 679.637 L1277.26 679.637 L1276.7 679.637 L1276.14 679.637 L1275.58 679.637 L1275.02 679.637 L1274.46 679.637 L1273.91 679.637 L1273.35 679.637 L1272.79 679.637 L1272.23 679.637 L1271.67 679.637 L1271.11 679.637 L1270.55 679.637 L1269.99 679.637 L1269.43 679.637 L1268.87 679.637 L1268.31 679.637 L1267.75 679.637 L1267.19 679.637 L1266.63 679.637 L1266.08 679.637 L1265.52 679.637 L1264.96 679.637 L1264.4 679.637 L1263.84 679.637 L1263.28 679.637 L1262.72 679.637 L1262.16 679.637 L1261.6 679.637 L1261.04 679.637 L1260.48 679.637 L1259.92 679.637 L1259.36 679.637 L1258.81 679.637 L1258.25 679.637 L1257.69 679.637 L1257.13 679.637 L1256.57 679.637 L1256.01 679.637 L1255.45 679.637 L1254.89 679.637 L1254.33 679.637 L1253.77 679.637 L1253.21 679.637 L1252.65 679.637 L1252.09 679.637 L1251.54 679.637 L1250.98 679.637 L1250.42 679.637 L1249.86 679.637 L1249.3 679.637 L1248.74 679.637 L1248.18 679.637 L1247.62 679.637 L1247.06 679.637 L1246.5 679.637 L1245.94 679.637 L1245.38 679.637 L1244.82 679.637 L1244.26 679.637 L1243.71 679.637 L1243.15 679.637 L1242.59 679.637 L1242.03 679.637 L1241.47 679.637 L1240.91 679.637 L1240.35 679.637 L1239.79 679.637 L1239.23 679.637 L1238.67 679.637 L1238.11 679.637 L1237.55 679.637 L1236.99 679.637 L1236.44 679.637 L1235.88 679.637 L1235.32 679.637 L1234.76 679.637 L1234.2 679.637 L1233.64 679.637 L1233.08 679.637 L1232.52 679.637 L1231.96 679.637 L1231.4 679.637 L1230.84 679.637 L1230.28 679.637 L1229.72 679.637 L1229.17 679.637 L1228.61 679.637 L1228.05 679.637 L1227.49 679.637 L1226.93 679.637 L1226.37 679.637 L1225.81 679.637 L1225.25 679.637 L1224.69 679.637 L1224.13 679.637 L1223.57 679.637 L1223.01 679.637 L1222.45 679.637 L1221.89 679.637 L1221.34 679.637 L1220.78 679.637 L1220.22 679.637 L1219.66 679.637 L1219.1 679.637 L1218.54 679.637 L1217.98 679.637 L1217.42 679.637 L1216.86 679.637 L1216.3 679.637 L1215.74 679.637 L1215.18 679.637 L1214.62 679.637 L1214.07 679.637 L1213.51 679.637 L1212.95 679.637 L1212.39 679.637 L1211.83 679.637 L1211.27 679.637 L1210.71 679.637 L1210.15 679.637 L1209.59 679.637 L1209.03 679.637 L1208.47 679.637 L1207.91 679.637 L1207.35 679.637 L1206.8 679.637 L1206.24 679.637 L1205.68 679.637 L1205.12 679.637 L1204.56 679.637 L1204 679.637 L1203.44 679.637 L1202.88 679.637 L1202.32 679.637 L1201.76 679.637 L1201.2 679.637 L1200.64 679.637 L1200.08 679.637 L1199.52 679.637 L1198.97 679.637 L1198.41 679.637 L1197.85 679.637 L1197.29 679.637 L1196.73 679.637 L1196.17 679.637 L1195.61 679.637 L1195.05 679.637 L1194.49 679.637 L1193.93 679.637 L1193.37 679.637 L1192.81 679.637 L1192.25 679.637 L1191.7 679.637 L1191.14 679.637 L1190.58 679.637 L1190.02 679.637 L1189.46 679.637 L1188.9 679.637 L1188.34 679.637 L1187.78 679.637 L1187.22 679.637 L1186.66 679.637 L1186.1 679.637 L1185.54 679.637 L1184.98 679.637 L1184.43 679.637 L1183.87 679.637 L1183.31 679.637 L1182.75 679.637 L1182.19 679.637 L1181.63 679.637 L1181.07 679.637 L1180.51 679.637 L1179.95 679.637 L1179.39 679.637 L1178.83 679.637 L1178.27 679.637 L1177.71 679.637 L1177.15 679.637 L1176.6 679.637 L1176.04 679.637 L1175.48 679.637 L1174.92 679.637 L1174.36 679.637 L1173.8 679.637 L1173.24 679.637 L1172.68 679.637 L1172.12 679.637 L1171.56 679.637 L1171 679.637 L1170.44 679.637 L1169.88 679.637 L1169.33 679.637 L1168.77 679.637 L1168.21 679.637 L1167.65 679.637 L1167.09 679.637 L1166.53 679.637 L1165.97 679.637 L1165.41 679.637 L1164.85 679.637 L1164.29 679.637 L1163.73 679.637 L1163.17 679.637 L1162.61 679.637 L1162.05 679.637 L1161.5 679.637 L1160.94 679.637 L1160.38 679.637 L1159.82 679.637 L1159.26 679.637 L1158.7 679.637 L1158.14 679.637 L1157.58 679.637 L1157.02 679.637 L1156.46 679.637 L1155.9 679.637 L1155.34 679.637 L1154.78 679.637 L1154.23 679.637 L1153.67 679.637 L1153.11 679.637 L1152.55 679.637 L1151.99 679.637 L1151.43 679.637 L1150.87 679.637 L1150.31 679.637 L1149.75 679.637 L1149.19 679.637 L1148.63 679.637 L1148.07 679.637 L1147.51 679.637 L1146.96 679.637 L1146.4 679.637 L1145.84 679.637 L1145.28 679.637 L1144.72 679.637 L1144.16 679.637 L1143.6 679.637 L1143.04 679.637 L1142.48 679.637 L1141.92 679.637 L1141.36 679.637 L1140.8 679.637 L1140.24 679.637 L1139.68 679.637 L1139.13 679.637 L1138.57 679.637 L1138.01 679.637 L1137.45 679.637 L1136.89 679.637 L1136.33 679.637 L1135.77 679.637 L1135.21 679.637 L1134.65 679.637 L1134.09 679.637 L1133.53 679.637 L1132.97 679.637 L1132.41 679.637 L1131.86 679.637 L1131.3 679.637 L1130.74 679.637 L1130.18 679.637 L1129.62 679.637 L1129.06 679.637 L1128.5 679.637 L1127.94 679.637 L1127.38 679.637 L1126.82 679.637 L1126.26 679.637 L1125.7 679.637 L1125.14 679.637 L1124.59 679.637 L1124.03 679.637 L1123.47 679.637 L1122.91 679.637 L1122.35 679.637 L1121.79 679.637 L1121.23 679.637 L1120.67 679.637 L1120.11 679.637 L1119.55 679.637 L1118.99 679.637 L1118.43 679.637 L1117.87 679.637 L1117.31 679.637 L1116.76 679.637 L1116.2 679.637 L1115.64 679.637 L1115.08 679.637 L1114.52 679.637 L1113.96 679.637 L1113.4 679.637 L1112.84 679.637 L1112.28 679.637 L1111.72 679.637 L1111.16 679.637 L1110.6 679.637 L1110.04 679.637 L1109.49 679.637 L1108.93 679.637 L1108.37 679.637 L1107.81 679.637 L1107.25 679.637 L1106.69 679.637 L1106.13 679.637 L1105.57 679.637 L1105.01 679.637 L1104.45 679.637 L1103.89 679.637 L1103.33 679.637 L1102.77 679.637 L1102.22 679.637 L1101.66 679.637 L1101.1 679.637 L1100.54 679.637 L1099.98 679.637 L1099.42 679.637 L1098.86 679.637 L1098.3 679.637 L1097.74 679.637 L1097.18 679.637 L1096.62 679.637 L1096.06 679.637 L1095.5 679.637 L1094.94 679.637 L1094.39 679.637 L1093.83 679.637 L1093.27 679.637 L1092.71 679.637 L1092.15 679.637 L1091.59 679.637 L1091.03 679.637 L1090.47 679.637 L1089.91 679.637 L1089.35 679.637 L1088.79 679.637 L1088.23 679.637 L1087.67 679.637 L1087.12 679.637 L1086.56 679.637 L1086 679.637 L1085.44 679.637 L1084.88 679.637 L1084.32 679.637 L1083.76 679.637 L1083.2 679.637 L1082.64 679.637 L1082.08 679.637 L1081.52 679.637 L1080.96 679.637 L1080.4 679.637 L1079.85 679.637 L1079.29 679.637 L1078.73 679.637 L1078.17 679.637 L1077.61 679.637 L1077.05 679.637 L1076.49 679.637 L1075.93 679.637 L1075.37 679.637 L1074.81 679.637 L1074.25 679.637 L1073.69 679.637 L1073.13 679.637 L1072.57 679.637 L1072.02 679.637 L1071.46 679.637 L1070.9 679.637 L1070.34 679.637 L1069.78 679.637 L1069.22 679.637 L1068.66 679.637 L1068.1 679.637 L1067.54 679.637 L1066.98 679.637 L1066.42 679.637 L1065.86 679.637 L1065.3 679.637 L1064.75 679.637 L1064.19 679.637 L1063.63 679.637 L1063.07 679.637 L1062.51 679.637 L1061.95 679.637 L1061.39 679.637 L1060.83 679.637 L1060.27 679.637 L1059.71 679.637 L1059.15 679.637 L1058.59 679.637 L1058.03 679.637 L1057.48 679.637 L1056.92 679.637 L1056.36 679.637 L1055.8 679.637 L1055.24 679.637 L1054.68 679.637 L1054.12 679.637 L1053.56 679.637 L1053 679.637 L1052.44 679.637 L1051.88 679.637 L1051.32 679.637 L1050.76 679.637 L1050.2 679.637 L1049.65 679.637 L1049.09 679.637 L1048.53 679.637 L1047.97 679.637 L1047.41 679.637 L1046.85 679.637 L1046.29 679.637 L1045.73 679.637 L1045.17 679.637 L1044.61 679.637 L1044.05 679.637 L1043.49 679.637 L1042.93 679.637 L1042.38 679.637 L1041.82 679.637 L1041.26 679.637 L1040.7 679.637 L1040.14 679.637 L1039.58 679.637 L1039.02 679.637 L1038.46 679.637 L1037.9 679.637 L1037.34 679.637 L1036.78 679.637 L1036.22 679.637 L1035.66 679.637 L1035.1 679.637 L1034.55 679.637 L1033.99 679.637 L1033.43 679.637 L1032.87 679.637 L1032.31 679.637 L1031.75 679.637 L1031.19 679.637 L1030.63 679.637 L1030.07 679.637 L1029.51 679.637 L1028.95 679.637 L1028.39 679.637 L1027.83 679.637 L1027.28 679.637 L1026.72 679.637 L1026.16 679.637 L1025.6 679.637 L1025.04 679.637 L1024.48 679.637 L1023.92 679.637 L1023.36 679.637 L1022.8 679.637 L1022.24 679.637 L1021.68 679.637 L1021.12 679.637 L1020.56 679.637 L1020.01 679.637 L1019.45 679.637 L1018.89 679.637 L1018.33 679.637 L1017.77 679.637 L1017.21 679.637 L1016.65 679.637 L1016.09 679.637 L1015.53 679.637 L1014.97 679.637 L1014.41 679.637 L1013.85 679.637 L1013.29 679.637 L1012.73 679.637 L1012.18 679.637 L1011.62 679.637 L1011.06 679.637 L1010.5 679.637 L1009.94 679.637 L1009.38 679.637 L1008.82 679.637 L1008.26 679.637 L1007.7 679.637 L1007.14 679.637 L1006.58 679.637 L1006.02 679.637 L1005.46 679.637 L1004.91 679.637 L1004.35 679.637 L1003.79 679.637 L1003.23 679.637 L1002.67 679.637 L1002.11 679.637 L1001.55 679.637 L1000.99 679.637 L1000.43 679.637 L999.872 679.637 L999.313 679.637 L998.754 679.637 L998.194 679.637 L997.635 679.637 L997.076 679.637 L996.517 679.637 L995.957 679.637 L995.398 679.637 L994.839 679.637 L994.28 679.637 L993.72 679.637 L993.161 679.637 L992.602 679.637 L992.043 679.637 L991.483 679.637 L990.924 679.637 L990.365 679.637 L989.806 679.637 L989.246 679.637 L988.687 679.637 L988.128 679.637 L987.569 679.637 L987.009 679.637 L986.45 679.637 L985.891 679.637 L985.332 679.637 L984.772 679.637 L984.213 679.637 L983.654 679.637 L983.095 679.637 L982.535 679.637 L981.976 679.637 L981.417 679.637 L980.858 679.637 L980.298 679.637 L979.739 679.637 L979.18 679.637 L978.621 679.637 L978.061 679.637 L977.502 679.637 L976.943 679.637 L976.384 679.637 L975.824 679.637 L975.265 679.637 L974.706 679.637 L974.147 679.637 L973.587 679.637 L973.028 679.637 L972.469 679.637 L971.91 679.637 L971.35 679.637 L970.791 679.637 L970.232 679.637 L969.673 679.637 L969.113 679.637 L968.554 679.637 L967.995 679.637 L967.436 679.637 L966.876 679.637 L966.317 679.637 L965.758 679.637 L965.199 679.637 L964.639 679.637 L964.08 679.637 L963.521 679.637 L962.962 679.637 L962.402 679.637 L961.843 679.637 L961.284 679.637 L960.725 679.637 L960.165 679.637 L959.606 679.637 L959.047 679.637 L958.488 679.637 L957.928 679.637 L957.369 679.637 L956.81 679.637 L956.251 679.637 L955.691 679.637 L955.132 679.637 L954.573 679.637 L954.014 679.637 L953.454 679.637 L952.895 679.637 L952.336 679.637 L951.777 679.637 L951.217 679.637 L950.658 679.637 L950.099 679.637 L949.54 679.637 L948.98 679.637 L948.421 679.637 L947.862 679.637 L947.303 679.637 L946.743 679.637 L946.184 679.637 L945.625 679.637 L945.066 679.637 L944.506 679.637 L943.947 679.637 L943.388 679.637 L942.829 679.637 L942.269 679.637 L941.71 679.637 L941.151 679.637 L940.592 679.637 L940.032 679.637 L939.473 679.637 L938.914 679.637 L938.355 679.637 L937.795 679.637 L937.236 679.637 L936.677 679.637 L936.118 679.637 L935.558 679.637 L934.999 679.637 L934.44 679.637 L933.881 679.637 L933.321 679.637 L932.762 679.637 L932.203 679.637 L931.644 679.637 L931.084 679.637 L930.525 679.637 L929.966 679.637 L929.406 679.637 L928.847 679.637 L928.288 679.637 L927.729 679.637 L927.169 679.637 L926.61 679.637 L926.051 679.637 L925.492 679.637 L924.932 679.637 L924.373 679.637 L923.814 679.637 L923.255 679.637 L922.695 679.637 L922.136 679.637 L921.577 679.637 L921.018 679.637 L920.458 679.637 L919.899 679.637 L919.34 679.637 L918.781 679.637 L918.221 679.637 L917.662 679.637 L917.103 679.637 L916.544 679.637 L915.984 679.637 L915.425 679.637 L914.866 679.637 L914.307 679.637 L913.747 679.637 L913.188 679.637 L912.629 679.637 L912.07 679.637 L911.51 679.637 L910.951 679.637 L910.392 679.637 L909.833 679.637 L909.273 679.637 L908.714 679.637 L908.155 679.637 L907.596 679.637 L907.036 679.637 L906.477 679.637 L905.918 679.637 L905.359 679.637 L904.799 679.637 L904.24 679.637 L903.681 679.637 L903.122 679.637 L902.562 679.637 L902.003 679.637 L901.444 679.637 L900.885 679.637 L900.325 679.637 L899.766 679.637 L899.207 679.637 L898.648 679.637 L898.088 679.637 L897.529 679.637 L896.97 679.637 L896.411 679.637 L895.851 679.637 L895.292 679.637 L894.733 679.637 L894.174 679.637 L893.614 679.637 L893.055 679.637 L892.496 679.637 L891.937 679.637 L891.377 679.637 L890.818 679.637 L890.259 679.637 L889.7 679.637 L889.14 679.637 L888.581 679.637 L888.022 679.637 L887.463 679.637 L886.903 679.637 L886.344 679.637 L885.785 679.637 L885.226 679.637 L884.666 679.637 L884.107 679.637 L883.548 679.637 L882.989 679.637 L882.429 679.637 L881.87 679.637 L881.311 679.637 L880.752 679.637 L880.192 679.637 L879.633 679.637 L879.074 679.637 L878.515 679.637 L877.955 679.637 L877.396 679.637 L876.837 679.637 L876.278 679.637 L875.718 679.637 L875.159 679.637 L874.6 679.637 L874.041 679.637 L873.481 679.637 L872.922 679.637 L872.363 679.637 L871.804 679.637 L871.244 679.637 L870.685 679.637 L870.126 679.637 L869.567 679.637 L869.007 679.637 L868.448 679.637 L867.889 679.637 L867.33 679.637 L866.77 679.637 L866.211 679.637 L865.652 679.637 L865.093 679.637 L864.533 679.637 L863.974 679.637 L863.415 679.637 L862.856 679.637 L862.296 679.637 L861.737 679.637 L861.178 679.637 L860.619 679.637 L860.059 679.637 L859.5 679.637 L858.941 679.637 L858.382 679.637 L857.822 679.637 L857.263 679.637 L856.704 679.637 L856.145 679.637 L855.585 679.637 L855.026 679.637 L854.467 679.637 L853.908 679.637 L853.348 679.637 L852.789 679.637 L852.23 679.637 L851.671 679.637 L851.111 679.637 L850.552 679.637 L849.993 679.637 L849.434 679.637 L848.874 679.637 L848.315 679.637 L847.756 679.637 L847.197 679.637 L846.637 679.637 L846.078 679.637 L845.519 679.637 L844.96 679.637 L844.4 679.637 L843.841 679.637 L843.282 679.637 L842.723 679.637 L842.163 679.637 L841.604 679.637 L841.045 679.637 L840.486 679.637 L839.926 679.637 L839.367 679.637 L838.808 679.637 L838.249 679.637 L837.689 679.637 L837.13 679.637 L836.571 679.637 L836.012 679.637 L835.452 679.637 L834.893 679.637 L834.334 679.637 L833.775 679.637 L833.215 679.637 L832.656 679.637 L832.097 679.637 L831.538 679.637 L830.978 679.637 L830.419 679.637 L829.86 679.637 L829.301 679.637 L828.741 679.637 L828.182 679.637 L827.623 679.637 L827.064 679.637 L826.504 679.637 L825.945 679.637 L825.386 679.637 L824.827 679.637 L824.267 679.637 L823.708 679.637 L823.149 679.637 L822.59 679.637 L822.03 679.637 L821.471 679.637 L820.912 679.637 L820.353 679.637 L819.793 679.637 L819.234 679.637 L818.675 679.637 L818.116 679.637 L817.556 679.637 L816.997 679.637 L816.438 679.637 L815.879 679.637 L815.319 679.637 L814.76 679.637 L814.201 679.637 L813.642 679.637 L813.082 679.637 L812.523 679.637 L811.964 679.637 L811.405 679.637 L810.845 679.637 L810.286 679.637 L809.727 679.637 L809.168 679.637 L808.608 679.637 L808.049 679.637 L807.49 679.637 L806.931 679.637 L806.371 679.637 L805.812 679.637 L805.253 679.637 L804.693 679.637 L804.134 679.637 L803.575 679.637 L803.016 679.637 L802.456 679.637 L801.897 679.637 L801.338 679.637 L800.779 679.637 L800.219 679.637 L799.66 679.637 L799.101 679.637 L798.542 679.637 L797.982 679.637 L797.423 679.637 L796.864 679.637 L796.305 679.637 L795.745 679.637 L795.186 679.637 L794.627 679.637 L794.068 679.637 L793.508 679.637 L792.949 679.637 L792.39 679.637 L791.831 679.637 L791.271 679.637 L790.712 679.637 L790.153 679.637 L789.594 679.637 L789.034 679.637 L788.475 679.637 L787.916 679.637 L787.357 679.637 L786.797 679.637 L786.238 679.637 L785.679 679.637 L785.12 679.637 L784.56 679.637 L784.001 679.637 L783.442 679.637 L782.883 679.637 L782.323 679.637 L781.764 679.637 L781.205 679.637 L780.646 679.637 L780.086 679.637 L779.527 679.637 L778.968 679.637 L778.409 679.637 L777.849 679.637 L777.29 679.637 L776.731 679.637 L776.172 679.637 L775.612 679.637 L775.053 679.637 L774.494 679.637 L773.935 679.637 L773.375 679.637 L772.816 679.637 L772.257 679.637 L771.698 679.637 L771.138 679.637 L770.579 679.637 L770.02 679.637 L769.461 679.637 L768.901 679.637 L768.342 679.637 L767.783 679.637 L767.224 679.637 L766.664 679.637 L766.105 679.637 L765.546 679.637 L764.987 679.637 L764.427 679.637 L763.868 679.637 L763.309 679.637 L762.75 679.637 L762.19 679.637 L761.631 679.637 L761.072 679.637 L760.513 679.637 L759.953 679.637 L759.394 679.637 L758.835 679.637 L758.276 679.637 L757.716 679.637 L757.157 679.637 L756.598 679.637 L756.039 679.637 L755.479 679.637 L754.92 679.637 L754.361 679.637 L753.802 679.637 L753.242 679.637 L752.683 679.637 L752.124 679.637 L751.565 679.637 L751.005 679.637 L750.446 679.637 L749.887 679.637 L749.328 679.637 L748.768 679.637 L748.209 679.637 L747.65 679.637 L747.091 679.637 L746.531 679.637 L745.972 679.637 L745.413 679.637 L744.854 679.637 L744.294 679.637 L743.735 679.637 L743.176 679.637 L742.617 679.637 L742.057 679.637 L741.498 679.637 L740.939 679.637 L740.38 679.637 L739.82 679.637 L739.261 679.637 L738.702 679.637 L738.143 679.637 L737.583 679.637 L737.024 679.637 L736.465 679.637 L735.906 679.637 L735.346 679.637 L734.787 679.637 L734.228 679.637 L733.669 679.637 L733.109 679.637 L732.55 679.637 L731.991 679.637 L731.432 679.637 L730.872 679.637 L730.313 679.637 L729.754 679.637 L729.195 679.637 L728.635 679.637 L728.076 679.637 L727.517 679.637 L726.958 679.637 L726.398 679.637 L725.839 679.637 L725.28 679.637 L724.721 679.637 L724.161 679.637 L723.602 679.637 L723.043 679.637 L722.484 679.637 L721.924 679.637 L721.365 679.637 L720.806 679.637 L720.247 679.637  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.842 720.806,684.842 721.365,684.842 721.924,684.842 722.484,684.842 723.043,684.842 723.602,684.842 724.161,684.842 724.721,684.842 725.28,684.842 725.839,684.842 726.398,684.842 726.958,684.842 727.517,684.842 728.076,684.842 728.635,684.842 729.195,684.842 729.754,684.842 730.313,684.842 730.872,684.842 731.432,684.842 731.991,684.842 732.55,684.842 733.109,684.842 733.669,684.842 734.228,684.842 734.787,684.842 735.346,684.842 735.906,684.842 736.465,684.842 737.024,684.842 737.583,684.842 738.143,684.842 738.702,684.842 739.261,684.842 739.82,684.842 740.38,684.842 740.939,684.842 741.498,684.842 742.057,684.842 742.617,684.842 743.176,684.842 743.735,684.842 744.294,684.842 744.854,684.842 745.413,684.842 745.972,684.842 746.531,684.842 747.091,684.842 747.65,684.842 748.209,684.842 748.768,684.842 749.328,684.842 749.887,684.842 750.446,684.842 751.005,684.842 751.565,684.842 752.124,684.842 752.683,684.842 753.242,684.842 753.802,684.842 754.361,684.842 754.92,684.842 755.479,684.842 756.039,684.842 756.598,684.842 757.157,684.842 757.716,684.842 758.276,684.842 758.835,684.842 759.394,684.842 759.953,684.842 760.513,684.842 761.072,684.842 761.631,684.842 762.19,684.842 762.75,684.842 763.309,684.842 763.868,684.842 764.427,684.842 764.987,684.842 765.546,684.842 766.105,684.842 766.664,684.842 767.224,684.842 767.783,684.842 768.342,684.842 768.901,684.842 769.461,684.842 770.02,684.842 770.579,684.842 771.138,684.842 771.698,684.842 772.257,684.842 772.816,684.842 773.375,684.842 773.935,684.842 774.494,684.842 775.053,684.842 775.612,684.842 776.172,684.842 776.731,684.842 777.29,684.842 777.849,684.842 778.409,684.842 778.968,684.842 779.527,684.842 780.086,684.842 780.646,684.842 781.205,684.842 781.764,684.842 782.323,684.842 782.883,684.842 783.442,684.842 784.001,684.842 784.56,684.842 785.12,684.842 785.679,684.842 786.238,684.842 786.797,684.842 787.357,684.842 787.916,684.842 788.475,684.842 789.034,684.842 789.594,684.842 790.153,684.842 790.712,684.842 791.271,684.842 791.831,684.842 792.39,684.842 792.949,684.842 793.508,684.842 794.068,684.842 794.627,684.842 795.186,684.842 795.745,684.842 796.305,684.842 796.864,684.842 797.423,684.842 797.982,684.842 798.542,684.842 799.101,684.842 799.66,684.842 800.219,684.842 800.779,684.842 801.338,684.842 801.897,684.842 802.456,684.842 803.016,684.842 803.575,684.842 804.134,684.842 804.693,684.842 805.253,684.842 805.812,684.842 806.371,684.842 806.931,684.842 807.49,684.842 808.049,684.842 808.608,684.842 809.168,684.842 809.727,684.842 810.286,684.842 810.845,684.842 811.405,684.842 811.964,684.842 812.523,684.842 813.082,684.842 813.642,684.842 814.201,684.842 814.76,684.842 815.319,684.842 815.879,684.842 816.438,684.842 816.997,684.842 817.556,684.842 818.116,684.842 818.675,684.842 819.234,684.842 819.793,684.842 820.353,684.842 820.912,684.842 821.471,684.842 822.03,684.842 822.59,684.842 823.149,684.842 823.708,684.842 824.267,684.842 824.827,684.842 825.386,684.842 825.945,684.842 826.504,684.842 827.064,684.842 827.623,684.842 828.182,684.842 828.741,684.842 829.301,684.842 829.86,684.842 830.419,684.842 830.978,684.842 831.538,684.842 832.097,684.842 832.656,684.842 833.215,684.842 833.775,684.842 834.334,684.842 834.893,684.842 835.452,684.842 836.012,684.842 836.571,684.842 837.13,684.842 837.689,684.842 838.249,684.842 838.808,684.842 839.367,684.842 839.926,684.842 840.486,684.842 841.045,684.842 841.604,684.842 842.163,684.842 842.723,684.842 843.282,684.842 843.841,684.842 844.4,684.842 844.96,684.842 845.519,684.842 846.078,684.842 846.637,684.842 847.197,684.842 847.756,684.842 848.315,684.842 848.874,684.842 849.434,684.842 849.993,684.842 850.552,684.842 851.111,684.842 851.671,684.842 852.23,684.842 852.789,684.842 853.348,684.842 853.908,684.842 854.467,684.842 855.026,684.842 855.585,684.842 856.145,684.842 856.704,684.842 857.263,684.842 857.822,684.842 858.382,684.842 858.941,684.842 859.5,684.842 860.059,684.842 860.619,684.842 861.178,684.842 861.737,684.842 862.296,684.842 862.856,684.842 863.415,684.842 863.974,684.842 864.533,684.842 865.093,684.842 865.652,684.842 866.211,684.842 866.77,684.842 867.33,684.842 867.889,684.842 868.448,684.842 869.007,684.842 869.567,684.842 870.126,684.842 870.685,684.842 871.244,684.842 871.804,684.842 872.363,684.842 872.922,684.842 873.481,684.842 874.041,684.842 874.6,684.842 875.159,684.842 875.718,684.842 876.278,684.842 876.837,684.842 877.396,684.842 877.955,684.842 878.515,684.842 879.074,684.842 879.633,684.842 880.192,684.842 880.752,684.842 881.311,684.842 881.87,684.842 882.429,684.842 882.989,684.842 883.548,684.842 884.107,684.842 884.666,684.842 885.226,684.842 885.785,684.842 886.344,684.842 886.903,684.842 887.463,684.842 888.022,684.842 888.581,684.842 889.14,684.842 889.7,684.842 890.259,684.842 890.818,684.842 891.377,684.842 891.937,684.842 892.496,684.842 893.055,684.842 893.614,684.842 894.174,684.842 894.733,684.842 895.292,684.842 895.851,684.842 896.411,684.842 896.97,684.842 897.529,684.842 898.088,684.842 898.648,684.842 899.207,684.842 899.766,684.842 900.325,684.842 900.885,684.842 901.444,684.842 902.003,684.842 902.562,684.842 903.122,684.842 903.681,684.842 904.24,684.842 904.799,684.842 905.359,684.842 905.918,684.842 906.477,684.842 907.036,684.842 907.596,684.842 908.155,684.842 908.714,684.842 909.273,684.842 909.833,684.842 910.392,684.842 910.951,684.842 911.51,684.842 912.07,684.842 912.629,684.842 913.188,684.842 913.747,684.842 914.307,684.842 914.866,684.842 915.425,684.842 915.984,684.842 916.544,684.842 917.103,684.842 917.662,684.842 918.221,684.842 918.781,684.842 919.34,684.842 919.899,684.842 920.458,684.842 921.018,684.842 921.577,684.842 922.136,684.842 922.695,684.842 923.255,684.842 923.814,684.842 924.373,684.842 924.932,684.842 925.492,684.842 926.051,684.842 926.61,684.842 927.169,684.842 927.729,684.842 928.288,684.842 928.847,684.842 929.406,684.842 929.966,684.842 930.525,684.842 931.084,684.842 931.644,684.842 932.203,684.842 932.762,684.842 933.321,684.842 933.881,684.842 934.44,684.842 934.999,684.842 935.558,684.842 936.118,684.842 936.677,684.842 937.236,684.842 937.795,684.842 938.355,684.842 938.914,684.842 939.473,684.842 940.032,684.842 940.592,684.842 941.151,684.842 941.71,684.842 942.269,684.842 942.829,684.842 943.388,684.842 943.947,684.842 944.506,684.842 945.066,684.842 945.625,684.842 946.184,684.842 946.743,684.842 947.303,684.842 947.862,684.842 948.421,684.842 948.98,684.842 949.54,684.842 950.099,684.842 950.658,684.842 951.217,684.842 951.777,684.842 952.336,684.842 952.895,684.842 953.454,684.842 954.014,684.842 954.573,684.842 955.132,684.842 955.691,684.842 956.251,684.842 956.81,684.842 957.369,684.842 957.928,684.842 958.488,684.842 959.047,684.842 959.606,684.842 960.165,684.842 960.725,684.842 961.284,684.842 961.843,684.842 962.402,684.842 962.962,684.842 963.521,684.842 964.08,684.842 964.639,684.842 965.199,684.842 965.758,684.842 966.317,684.842 966.876,684.842 967.436,684.842 967.995,684.842 968.554,684.842 969.113,684.842 969.673,684.842 970.232,684.842 970.791,684.842 971.35,684.842 971.91,684.842 972.469,684.842 973.028,684.842 973.587,684.842 974.147,684.842 974.706,684.842 975.265,684.842 975.824,684.842 976.384,684.842 976.943,684.842 977.502,684.842 978.061,684.842 978.621,684.842 979.18,684.842 979.739,684.842 980.298,684.842 980.858,684.842 981.417,684.842 981.976,684.842 982.535,684.842 983.095,684.842 983.654,684.842 984.213,684.842 984.772,684.842 985.332,684.842 985.891,684.842 986.45,684.842 987.009,684.842 987.569,684.842 988.128,684.842 988.687,684.842 989.246,684.842 989.806,684.842 990.365,684.842 990.924,684.842 991.483,684.842 992.043,684.842 992.602,684.842 993.161,684.842 993.72,684.842 994.28,684.842 994.839,684.842 995.398,684.842 995.957,684.842 996.517,684.842 997.076,684.842 997.635,684.842 998.194,684.842 998.754,684.842 999.313,684.842 999.872,684.842 1000.43,684.842 1000.99,684.842 1001.55,684.842 1002.11,684.842 1002.67,684.842 1003.23,684.842 1003.79,684.842 1004.35,684.842 1004.91,684.842 1005.46,684.842 1006.02,684.842 1006.58,684.842 1007.14,684.842 1007.7,684.842 1008.26,684.842 1008.82,684.842 1009.38,684.842 1009.94,684.842 1010.5,684.842 1011.06,684.842 1011.62,684.842 1012.18,684.842 1012.73,684.842 1013.29,684.842 1013.85,684.842 1014.41,684.842 1014.97,684.842 1015.53,684.842 1016.09,684.842 1016.65,684.842 1017.21,684.842 1017.77,684.842 1018.33,684.842 1018.89,684.842 1019.45,684.842 1020.01,684.842 1020.56,684.842 1021.12,684.842 1021.68,684.842 1022.24,684.842 1022.8,684.842 1023.36,684.842 1023.92,684.842 1024.48,684.842 1025.04,684.842 1025.6,684.842 1026.16,684.842 1026.72,684.842 1027.28,684.842 1027.83,684.842 1028.39,684.842 1028.95,684.842 1029.51,684.842 1030.07,684.842 1030.63,684.842 1031.19,684.842 1031.75,684.842 1032.31,684.842 1032.87,684.842 1033.43,684.842 1033.99,684.842 1034.55,684.842 1035.1,684.842 1035.66,684.842 1036.22,684.842 1036.78,684.842 1037.34,684.842 1037.9,684.842 1038.46,684.842 1039.02,684.842 1039.58,684.842 1040.14,684.842 1040.7,684.842 1041.26,684.842 1041.82,684.842 1042.38,684.842 1042.93,684.842 1043.49,684.842 1044.05,684.842 1044.61,684.842 1045.17,684.842 1045.73,684.842 1046.29,684.842 1046.85,684.842 1047.41,684.842 1047.97,684.842 1048.53,684.842 1049.09,684.842 1049.65,684.842 1050.2,684.842 1050.76,684.842 1051.32,684.842 1051.88,684.842 1052.44,684.842 1053,684.842 1053.56,684.842 1054.12,684.842 1054.68,684.842 1055.24,684.842 1055.8,684.842 1056.36,684.842 1056.92,684.842 1057.48,684.842 1058.03,684.842 1058.59,684.842 1059.15,684.842 1059.71,684.842 1060.27,684.842 1060.83,684.842 1061.39,684.842 1061.95,684.842 1062.51,684.842 1063.07,684.842 1063.63,684.842 1064.19,684.842 1064.75,684.842 1065.3,684.842 1065.86,684.842 1066.42,684.842 1066.98,684.842 1067.54,684.842 1068.1,684.842 1068.66,684.842 1069.22,684.842 1069.78,684.842 1070.34,684.842 1070.9,684.842 1071.46,684.842 1072.02,684.842 1072.57,684.842 1073.13,684.842 1073.69,684.842 1074.25,684.842 1074.81,684.842 1075.37,684.842 1075.93,684.842 1076.49,684.842 1077.05,684.842 1077.61,684.842 1078.17,684.842 1078.73,684.842 1079.29,684.842 1079.85,684.842 1080.4,684.842 1080.96,684.842 1081.52,684.842 1082.08,684.842 1082.64,684.842 1083.2,684.842 1083.76,684.842 1084.32,684.842 1084.88,684.842 1085.44,684.842 1086,684.842 1086.56,684.842 1087.12,684.842 1087.67,684.842 1088.23,684.842 1088.79,684.842 1089.35,684.842 1089.91,684.842 1090.47,684.842 1091.03,684.842 1091.59,684.842 1092.15,684.842 1092.71,684.842 1093.27,684.842 1093.83,684.842 1094.39,684.842 1094.94,684.842 1095.5,684.842 1096.06,684.842 1096.62,684.842 1097.18,684.842 1097.74,684.842 1098.3,684.842 1098.86,684.842 1099.42,684.842 1099.98,684.842 1100.54,684.842 1101.1,684.842 1101.66,684.842 1102.22,684.842 1102.77,684.842 1103.33,684.842 1103.89,684.842 1104.45,684.842 1105.01,684.842 1105.57,684.842 1106.13,684.842 1106.69,684.842 1107.25,684.842 1107.81,684.842 1108.37,684.842 1108.93,684.842 1109.49,684.842 1110.04,684.842 1110.6,684.842 1111.16,684.842 1111.72,684.842 1112.28,684.842 1112.84,684.842 1113.4,684.842 1113.96,684.842 1114.52,684.842 1115.08,684.842 1115.64,684.842 1116.2,684.842 1116.76,684.842 1117.31,684.842 1117.87,684.842 1118.43,684.842 1118.99,684.842 1119.55,684.842 1120.11,684.842 1120.67,684.842 1121.23,684.842 1121.79,684.842 1122.35,684.842 1122.91,684.842 1123.47,684.842 1124.03,684.842 1124.59,684.842 1125.14,684.842 1125.7,684.842 1126.26,684.842 1126.82,684.842 1127.38,684.842 1127.94,684.842 1128.5,684.842 1129.06,684.842 1129.62,684.842 1130.18,684.842 1130.74,684.842 1131.3,684.842 1131.86,684.842 1132.41,684.842 1132.97,684.842 1133.53,684.842 1134.09,684.842 1134.65,684.842 1135.21,684.842 1135.77,684.842 1136.33,684.842 1136.89,684.842 1137.45,684.842 1138.01,684.842 1138.57,684.842 1139.13,684.842 1139.68,684.842 1140.24,684.842 1140.8,684.842 1141.36,684.842 1141.92,684.842 1142.48,684.842 1143.04,684.842 1143.6,684.842 1144.16,684.842 1144.72,684.842 1145.28,684.842 1145.84,684.842 1146.4,684.842 1146.96,684.842 1147.51,684.842 1148.07,684.842 1148.63,684.842 1149.19,684.842 1149.75,684.842 1150.31,684.842 1150.87,684.842 1151.43,684.842 1151.99,684.842 1152.55,684.842 1153.11,684.842 1153.67,684.842 1154.23,684.842 1154.78,684.842 1155.34,684.842 1155.9,684.842 1156.46,684.842 1157.02,684.842 1157.58,684.842 1158.14,684.842 1158.7,684.842 1159.26,684.842 1159.82,684.842 1160.38,684.842 1160.94,684.842 1161.5,684.842 1162.05,684.842 1162.61,684.842 1163.17,684.842 1163.73,684.842 1164.29,684.842 1164.85,684.842 1165.41,684.842 1165.97,684.842 1166.53,684.842 1167.09,684.842 1167.65,684.842 1168.21,684.842 1168.77,684.842 1169.33,684.842 1169.88,684.842 1170.44,684.842 1171,684.842 1171.56,684.842 1172.12,684.842 1172.68,684.842 1173.24,684.842 1173.8,684.842 1174.36,684.842 1174.92,684.842 1175.48,684.842 1176.04,684.842 1176.6,684.842 1177.15,684.842 1177.71,684.842 1178.27,684.842 1178.83,684.842 1179.39,684.842 1179.95,684.842 1180.51,684.842 1181.07,684.842 1181.63,684.842 1182.19,684.842 1182.75,684.842 1183.31,684.842 1183.87,684.842 1184.43,684.842 1184.98,684.842 1185.54,684.842 1186.1,684.842 1186.66,684.842 1187.22,684.842 1187.78,684.842 1188.34,684.842 1188.9,684.842 1189.46,684.842 1190.02,684.842 1190.58,684.842 1191.14,684.842 1191.7,684.842 1192.25,684.842 1192.81,684.842 1193.37,684.842 1193.93,684.842 1194.49,684.842 1195.05,684.842 1195.61,684.842 1196.17,684.842 1196.73,684.842 1197.29,684.842 1197.85,684.842 1198.41,684.842 1198.97,684.842 1199.52,684.842 1200.08,684.842 1200.64,684.842 1201.2,684.842 1201.76,684.842 1202.32,684.842 1202.88,684.842 1203.44,684.842 1204,684.842 1204.56,684.842 1205.12,684.842 1205.68,684.842 1206.24,684.842 1206.8,684.842 1207.35,684.842 1207.91,684.842 1208.47,684.842 1209.03,684.842 1209.59,684.842 1210.15,684.842 1210.71,684.842 1211.27,684.842 1211.83,684.842 1212.39,684.842 1212.95,684.842 1213.51,684.842 1214.07,684.842 1214.62,684.842 1215.18,684.842 1215.74,684.842 1216.3,684.842 1216.86,684.842 1217.42,684.842 1217.98,684.842 1218.54,684.842 1219.1,684.842 1219.66,684.842 1220.22,684.842 1220.78,684.842 1221.34,684.842 1221.89,684.842 1222.45,684.842 1223.01,684.842 1223.57,684.842 1224.13,684.842 1224.69,684.842 1225.25,684.842 1225.81,684.842 1226.37,684.842 1226.93,684.842 1227.49,684.842 1228.05,684.842 1228.61,684.842 1229.17,684.842 1229.72,684.842 1230.28,684.842 1230.84,684.842 1231.4,684.842 1231.96,684.842 1232.52,684.842 1233.08,684.842 1233.64,684.842 1234.2,684.842 1234.76,684.842 1235.32,684.842 1235.88,684.842 1236.44,684.842 1236.99,684.842 1237.55,684.842 1238.11,684.842 1238.67,684.842 1239.23,684.842 1239.79,684.842 1240.35,684.842 1240.91,684.842 1241.47,684.842 1242.03,684.842 1242.59,684.842 1243.15,684.842 1243.71,684.842 1244.26,684.842 1244.82,684.842 1245.38,684.842 1245.94,684.842 1246.5,684.842 1247.06,684.842 1247.62,684.842 1248.18,684.842 1248.74,684.842 1249.3,684.842 1249.86,684.842 1250.42,684.842 1250.98,684.842 1251.54,684.842 1252.09,684.842 1252.65,684.842 1253.21,684.842 1253.77,684.842 1254.33,684.842 1254.89,684.842 1255.45,684.842 1256.01,684.842 1256.57,684.842 1257.13,684.842 1257.69,684.842 1258.25,684.842 1258.81,684.842 1259.36,684.842 1259.92,684.842 1260.48,684.842 1261.04,684.842 1261.6,684.842 1262.16,684.842 1262.72,684.842 1263.28,684.842 1263.84,684.842 1264.4,684.842 1264.96,684.842 1265.52,684.842 1266.08,684.842 1266.63,684.842 1267.19,684.842 1267.75,684.842 1268.31,684.842 1268.87,684.842 1269.43,684.842 1269.99,684.842 1270.55,684.842 1271.11,684.842 1271.67,684.842 1272.23,684.842 1272.79,684.842 1273.35,684.842 1273.91,684.842 1274.46,684.842 1275.02,684.842 1275.58,684.842 1276.14,684.842 1276.7,684.842 1277.26,684.842 1277.82,684.842 1278.38,684.842 1278.94,684.842 1279.5,684.842 1280.06,684.842 1280.62,684.842 1281.18,684.842 1281.73,684.842 1282.29,684.842 1282.85,684.842 1283.41,684.842 1283.97,684.842 1284.53,684.842 1285.09,684.842 1285.65,684.842 1286.21,684.842 1286.77,684.842 1287.33,684.842 1287.89,684.842 1288.45,684.842 1289,684.842 1289.56,684.842 1290.12,684.842 1290.68,684.842 1291.24,684.842 1291.8,684.842 1292.36,684.842 1292.92,684.842 1293.48,684.842 1294.04,684.842 1294.6,684.842 1295.16,684.842 1295.72,684.842 1296.28,684.842 1296.83,684.842 1297.39,684.842 1297.95,684.842 1298.51,684.842 1299.07,684.842 1299.63,684.842 1300.19,684.842 1300.75,684.842 1301.31,684.842 1301.87,684.842 1302.43,684.842 1302.99,684.842 1303.55,684.842 1304.1,684.842 1304.66,684.842 1305.22,684.842 1305.78,684.842 1306.34,684.842 1306.9,684.842 1307.46,684.842 1308.02,684.842 1308.58,684.842 1309.14,684.842 1309.7,684.842 1310.26,684.842 1310.82,684.842 1311.38,684.842 1311.93,684.842 1312.49,684.842 1313.05,684.842 1313.61,684.842 1314.17,684.842 1314.73,684.842 1315.29,684.842 1315.85,684.842 1316.41,684.842 1316.97,684.842 1317.53,684.842 1318.09,684.842 1318.65,684.842 1319.2,684.842 1319.76,684.842 1320.32,684.842 1320.88,684.842 1321.44,684.842 1322,684.842 1322.56,684.842 1323.12,684.842 1323.68,684.842 1324.24,684.842 1324.8,684.842 1325.36,684.842 1325.92,684.842 1326.47,684.842 1327.03,684.842 1327.59,684.842 1328.15,684.842 1328.71,684.842 1329.27,684.842 1329.83,684.842 1330.39,684.842 1330.95,684.842 1331.51,684.842 1332.07,684.842 1332.63,684.842 1333.19,684.842 1333.75,684.842 1334.3,684.842 1334.86,684.842 1335.42,684.842 1335.98,684.842 1336.54,684.842 1337.1,684.842 1337.66,684.842 1338.22,684.842 1338.78,684.842 1339.34,684.842 1339.9,684.842 1340.46,684.842 1341.02,684.842 1341.57,684.842 1342.13,684.842 1342.69,684.842 1343.25,684.842 1343.81,684.842 1344.37,684.842 1344.93,684.842 1345.49,684.842 1346.05,684.842 1346.61,684.842 1347.17,684.842 1347.73,684.842 1348.29,684.842 1348.84,684.842 1349.4,684.842 1349.96,684.842 1350.52,684.842 1351.08,684.842 1351.64,684.842 1352.2,684.842 1352.76,684.842 1353.32,684.842 1353.88,684.842 1354.44,684.842 1355,684.842 1355.56,684.842 1356.12,684.842 1356.67,684.842 1357.23,684.842 1357.79,684.842 1358.35,684.842 1358.91,684.842 1359.47,684.842 1360.03,684.842 1360.59,684.842 1361.15,684.842 1361.71,684.842 1362.27,684.842 1362.83,684.842 1363.39,684.842 1363.94,684.842 1364.5,684.842 1365.06,684.842 1365.62,684.842 1366.18,684.842 1366.74,684.842 1367.3,684.842 1367.86,684.842 1368.42,684.842 1368.98,684.842 1369.54,684.842 1370.1,684.842 1370.66,684.842 1371.21,684.842 1371.77,684.842 1372.33,684.842 1372.89,684.842 1373.45,684.842 1374.01,684.842 1374.57,684.842 1375.13,684.842 1375.69,684.842 1376.25,684.842 1376.81,684.842 1377.37,684.842 1377.93,684.842 1378.49,684.842 1379.04,684.842 1379.6,684.842 1380.16,684.842 1380.72,684.842 1381.28,684.842 1381.84,684.842 1382.4,684.842 1382.96,684.842 1383.52,684.842 1384.08,684.842 1384.64,684.842 1385.2,684.842 1385.76,684.842 1386.31,684.842 1386.87,684.842 1387.43,684.842 1387.99,684.842 1388.55,684.842 1389.11,684.842 1389.67,684.842 1390.23,684.842 1390.79,684.842 1391.35,684.842 1391.91,684.842 1392.47,684.842 1393.03,684.842 1393.58,684.842 1394.14,684.842 1394.7,684.842 1395.26,684.842 1395.82,684.842 1396.38,684.842 1396.94,684.842 1397.5,684.842 1398.06,684.842 1398.62,684.842 1399.18,684.842 1399.74,684.842 1400.3,684.842 1400.86,684.842 1401.41,684.842 1401.97,684.842 1402.53,684.842 1403.09,684.842 1403.65,684.842 1404.21,684.842 1404.77,684.842 1405.33,684.842 1405.89,684.842 1406.45,684.842 1407.01,684.842 1407.57,684.842 1408.13,684.842 1408.68,684.842 1409.24,684.842 1409.8,684.842 1410.36,684.842 1410.92,684.842 1411.48,684.842 1412.04,684.842 1412.6,684.842 1413.16,684.842 1413.72,684.842 1414.28,684.842 1414.84,684.842 1415.4,684.842 1415.95,684.842 1416.51,684.842 1417.07,684.842 1417.63,684.842 1418.19,684.842 1418.75,684.842 1419.31,684.842 1419.87,684.842 1420.43,684.842 1420.99,684.842 1421.55,684.842 1422.11,684.842 1422.67,684.842 1423.23,684.842 1423.78,684.842 1424.34,684.842 1424.9,684.842 1425.46,684.842 1426.02,684.842 1426.58,684.842 1427.14,684.842 1427.7,684.842 1428.26,684.842 1428.82,684.842 1429.38,684.842 1429.94,684.842 1430.5,684.842 1431.05,684.842 1431.61,684.842 1432.17,684.842 1432.73,684.842 1433.29,684.842 1433.85,684.842 1434.41,684.842 1434.97,684.842 1435.53,684.842 1436.09,684.842 1436.65,684.842 1437.21,684.842 1437.77,684.842 1438.33,684.842 1438.88,684.842 1439.44,684.842 1440,684.842 1440.56,684.842 1441.12,684.842 1441.68,684.842 1442.24,684.842 1442.8,684.842 1443.36,684.842 1443.92,684.842 1444.48,684.842 1445.04,684.842 1445.6,684.842 1446.15,684.842 1446.71,684.842 1447.27,684.842 1447.83,684.842 1448.39,684.842 1448.95,684.842 1449.51,684.842 1450.07,684.842 1450.63,684.842 1451.19,684.842 1451.75,684.842 1452.31,684.842 1452.87,684.842 1453.42,684.842 1453.98,684.842 1454.54,684.842 1455.1,684.842 1455.66,684.842 1456.22,684.842 1456.78,684.842 1457.34,684.842 1457.9,684.842 1458.46,684.842 1459.02,684.842 1459.58,684.842 1460.14,684.842 1460.7,684.842 1461.25,684.842 1461.81,684.842 1462.37,684.842 1462.93,684.842 1463.49,684.842 1464.05,684.842 1464.61,684.842 1465.17,684.842 1465.73,684.842 1466.29,684.842 1466.85,684.842 1467.41,684.842 1467.97,684.842 1468.52,684.842 1469.08,684.842 1469.64,684.842 1470.2,684.842 1470.76,684.842 1471.32,684.842 1471.88,684.842 1472.44,684.842 1473,684.842 1473.56,684.842 1474.12,684.842 1474.68,684.842 1475.24,684.842 1475.79,684.842 1476.35,684.842 1476.91,684.842 1477.47,684.842 1478.03,684.842 1478.59,684.842 1479.15,684.842 1479.71,684.842 1480.27,684.842 1480.83,684.842 1481.39,684.842 1481.95,684.842 1482.51,684.842 1483.07,684.842 1483.62,684.842 1484.18,684.842 1484.74,684.842 1485.3,684.842 1485.86,684.842 1486.42,684.842 1486.98,684.842 1487.54,684.842 1488.1,684.842 1488.66,684.842 1489.22,684.842 1489.78,684.842 1490.34,684.842 1490.89,684.842 1491.45,684.842 1492.01,684.842 1492.57,684.842 1493.13,684.842 1493.69,684.842 1494.25,684.842 1494.81,684.842 1495.37,684.842 1495.93,684.842 1496.49,684.842 1497.05,684.842 1497.61,684.842 1498.16,684.842 1498.72,684.842 1499.28,684.842 1499.84,684.842 1500.4,684.842 1500.96,684.842 1501.52,684.842 1502.08,684.842 1502.64,684.842 1503.2,684.842 1503.76,684.842 1504.32,684.842 1504.88,684.842 1505.44,684.842 1505.99,684.842 1506.55,684.842 1507.11,684.842 1507.67,684.842 1508.23,684.842 1508.79,684.842 1509.35,684.842 1509.91,684.842 1510.47,684.842 1511.03,684.842 1511.59,684.842 1512.15,684.842 1512.71,684.842 1513.26,684.842 1513.82,684.842 1514.38,684.842 1514.94,684.842 1515.5,684.842 1516.06,684.842 1516.62,684.842 1517.18,684.842 1517.74,684.842 1518.3,684.842 1518.86,684.842 1519.42,684.842 1519.98,684.842 1520.53,684.842 1521.09,684.842 1521.65,684.842 1522.21,684.842 1522.77,684.842 1523.33,684.842 1523.89,684.842 1524.45,684.842 1525.01,684.842 1525.57,684.842 1526.13,684.842 1526.69,684.842 1527.25,684.842 1527.81,684.842 1528.36,684.842 1528.92,684.842 1529.48,684.842 1530.04,684.842 1530.6,684.842 1531.16,684.842 1531.72,684.842 1532.28,684.842 1532.84,684.842 1533.4,684.842 1533.96,684.842 1534.52,684.842 1535.08,684.842 1535.63,684.842 1536.19,684.842 1536.75,684.842 1537.31,684.842 1537.87,684.842 1538.43,684.842 1538.99,684.842 1539.55,684.842 1540.11,684.842 1540.67,684.842 1541.23,684.842 1541.79,684.842 1542.35,684.842 1542.9,684.842 1543.46,684.842 1544.02,684.842 1544.58,684.842 1545.14,684.842 1545.7,684.842 1546.26,684.842 1546.82,684.842 1547.38,684.842 1547.94,684.842 1548.5,684.842 1549.06,684.842 1549.62,684.842 1550.18,684.842 1550.73,684.842 1551.29,684.842 1551.85,684.842 1552.41,684.842 1552.97,684.842 1553.53,684.842 1554.09,684.842 1554.65,684.842 1555.21,684.842 1555.77,684.842 1556.33,684.842 1556.89,684.842 1557.45,684.842 1558,684.842 1558.56,684.842 1559.12,684.842 1559.68,684.842 1560.24,684.842 1560.8,684.842 1561.36,684.842 1561.92,684.842 1562.48,684.842 1563.04,684.842 1563.6,684.842 1564.16,684.842 1564.72,684.842 1565.28,684.842 1565.83,684.842 1566.39,684.842 1566.95,684.842 1567.51,684.842 1568.07,684.842 1568.63,684.842 1569.19,684.842 1569.75,684.842 1570.31,684.842 1570.87,684.842 1571.43,684.842 1571.99,684.842 1572.55,684.842 1573.1,684.842 1573.66,684.842 1574.22,684.842 1574.78,684.842 1575.34,684.842 1575.9,684.842 1576.46,684.842 1577.02,684.842 1577.58,684.842 1578.14,684.842 1578.7,684.842 1579.26,684.842 1579.82,684.842 1580.37,684.842 1580.93,684.842 1581.49,684.842 1582.05,684.842 1582.61,684.842 1583.17,684.842 1583.73,684.842 1584.29,684.842 1584.85,684.842 1585.41,684.842 1585.97,684.842 1586.53,684.842 1587.09,684.842 1587.65,684.842 1588.2,684.842 1588.76,684.842 1589.32,684.842 1589.88,684.842 1590.44,684.842 1591,684.842 1591.56,684.842 1592.12,684.842 1592.68,684.842 1593.24,684.842 1593.8,684.842 1594.36,684.842 1594.92,684.842 1595.47,684.842 1596.03,684.842 1596.59,684.842 1597.15,684.842 1597.71,684.842 1598.27,684.842 1598.83,684.842 1599.39,684.842 1599.95,684.842 1600.51,684.842 1601.07,684.842 1601.63,684.842 1602.19,684.842 1602.74,684.842 1603.3,684.842 1603.86,684.842 1604.42,684.842 1604.98,684.842 1605.54,684.842 1606.1,684.842 1606.66,684.842 1607.22,684.842 1607.78,684.842 1608.34,684.842 1608.9,684.842 1609.46,684.842 1610.02,684.842 1610.57,684.842 1611.13,684.842 1611.69,684.842 1612.25,684.842 1612.81,684.842 1613.37,684.842 1613.93,684.842 1614.49,684.842 1615.05,684.842 1615.61,684.842 1616.17,684.842 1616.73,684.842 1617.29,684.842 1617.84,684.842 1618.4,684.842 1618.96,684.842 1619.52,684.842 1620.08,684.842 1620.64,684.842 1621.2,684.842 1621.76,684.842 1622.32,684.842 1622.88,684.842 1623.44,684.842 1624,684.842 1624.56,684.842 1625.11,684.842 1625.67,684.842 1626.23,684.842 1626.79,684.842 1627.35,684.842 1627.91,684.842 1628.47,684.842 1629.03,684.842 1629.59,684.842 1630.15,684.842 1630.71,684.842 1631.27,684.842 1631.83,684.842 1632.39,684.842 1632.94,684.842 1633.5,684.842 1634.06,684.842 1634.62,684.842 1635.18,684.842 1635.74,684.842 1636.3,684.842 1636.86,684.842 1637.42,684.842 1637.98,684.842 1638.54,684.842 1639.1,684.842 1639.66,684.842 1640.21,684.842 1640.77,684.842 1641.33,684.842 1641.89,684.842 1642.45,684.842 1643.01,684.842 1643.57,684.842 1644.13,684.842 1644.69,684.842 1645.25,684.842 1645.81,684.842 1646.37,684.842 1646.93,684.842 1647.48,684.842 1648.04,684.842 1648.6,684.842 1649.16,684.842 1649.72,684.842 1650.28,684.842 1650.84,684.842 1651.4,684.842 1651.96,684.842 1652.52,684.842 1653.08,684.842 1653.64,684.842 1654.2,684.842 1654.76,684.842 1655.31,684.842 1655.87,684.842 1656.43,684.842 1656.99,684.842 1657.55,684.842 1658.11,684.842 1658.67,684.842 1659.23,684.842 1659.79,684.842 1660.35,684.842 1660.91,684.842 1661.47,684.842 1662.03,684.842 1662.58,684.842 1663.14,684.842 1663.7,684.842 1664.26,684.842 1664.82,684.842 1665.38,684.842 1665.94,684.842 1666.5,684.842 1667.06,684.842 1667.62,684.842 1668.18,684.842 1668.74,684.842 1669.3,684.842 1669.85,684.842 1670.41,684.842 1670.97,684.842 1671.53,684.842 1672.09,684.842 1672.65,684.842 1673.21,684.842 1673.77,684.842 1674.33,684.842 1674.89,684.842 1675.45,684.842 1676.01,684.842 1676.57,684.842 1677.13,684.842 1677.68,684.842 1678.24,684.842 1678.8,684.842 1679.36,684.842 1679.92,684.842 1680.48,684.842 1681.04,684.842 1681.6,684.842 1682.16,684.842 1682.72,684.842 1683.28,684.842 1683.84,684.842 1684.4,684.842 1684.95,684.842 1685.51,684.842 1686.07,684.842 1686.63,684.842 1687.19,684.842 1687.75,684.842 1688.31,684.842 1688.87,684.842 1689.43,684.842 1689.99,684.842 1690.55,684.842 1691.11,684.842 1691.67,684.842 1692.23,684.842 1692.78,684.842 1693.34,684.842 1693.9,684.842 1694.46,684.842 1695.02,684.842 1695.58,684.842 1696.14,684.842 1696.7,684.842 1697.26,684.842 1697.82,684.842 1698.38,684.842 1698.94,684.842 1699.5,684.842 1700.05,684.842 1700.61,684.842 1701.17,684.842 1701.73,684.842 1702.29,684.842 1702.85,684.842 1703.41,684.842 1703.97,684.842 1704.53,684.842 1705.09,684.842 1705.65,684.842 1706.21,684.842 1706.77,684.842 1707.32,684.842 1707.88,684.842 1708.44,684.842 1709,684.842 1709.56,684.842 1710.12,684.842 1710.68,684.842 1711.24,684.842 1711.8,684.842 1712.36,684.842 1712.92,684.842 1713.48,684.842 1714.04,684.842 1714.6,684.842 1715.15,684.842 1715.71,684.842 1716.27,684.842 1716.83,684.842 1717.39,684.842 1717.95,684.842 1718.51,684.842 1719.07,684.842 1719.63,684.842 1720.19,684.842 1720.75,684.842 1721.31,684.842 1721.87,684.842 1722.42,684.842 1722.98,684.842 1723.54,684.842 1724.1,684.842 1724.66,684.842 1725.22,684.842 1725.78,684.842 1726.34,684.842 1726.9,684.842 1727.46,684.842 1728.02,684.842 1728.58,684.842 1729.14,684.842 1729.69,684.842 1730.25,684.842 1730.81,684.842 1731.37,684.842 1731.93,684.842 1732.49,684.842 1733.05,684.842 1733.61,684.842 1734.17,684.842 1734.73,684.842 1735.29,684.842 1735.85,684.842 1736.41,684.842 1736.97,684.842 1737.52,684.842 1738.08,684.842 1738.64,684.842 1739.2,684.842 1739.76,684.842 1740.32,684.842 1740.88,684.842 1741.44,684.842 1742,684.842 1742.56,684.842 1743.12,684.842 1743.68,684.842 1744.24,684.842 1744.79,684.842 1745.35,684.842 1745.91,684.842 1746.47,684.842 1747.03,684.842 1747.59,684.842 1748.15,684.842 1748.71,684.842 1749.27,684.842 1749.83,684.842 1750.39,684.842 1750.95,684.842 1751.51,684.842 1752.06,684.842 1752.62,684.842 1753.18,684.842 1753.74,684.842 1754.3,684.842 1754.86,684.842 1755.42,684.842 1755.98,684.842 1756.54,684.842 1757.1,684.842 1757.66,684.842 1758.22,684.842 1758.78,684.842 1759.34,684.842 1759.89,684.842 1760.45,684.842 1761.01,684.842 1761.57,684.842 1762.13,684.842 1762.69,684.842 1763.25,684.842 1763.81,684.842 1764.37,684.842 1764.93,684.842 1765.49,684.842 1766.05,684.842 1766.61,684.842 1767.16,684.842 1767.72,684.842 1768.28,684.842 1768.84,684.842 1769.4,684.842 1769.96,684.842 1770.52,684.842 1771.08,684.842 1771.64,684.842 1772.2,684.842 1772.76,684.842 1773.32,684.842 1773.88,684.842 1774.43,684.842 1774.99,684.842 1775.55,684.842 1776.11,684.842 1776.67,684.842 1777.23,684.842 1777.79,684.842 1778.35,684.842 1778.91,684.842 1779.47,684.842 1780.03,684.842 1780.59,684.842 1781.15,684.842 1781.71,684.842 1782.26,684.842 1782.82,684.842 1783.38,684.842 1783.94,684.842 1784.5,684.842 1785.06,684.842 1785.62,684.842 1786.18,684.842 1786.74,684.842 1787.3,684.842 1787.86,684.842 1788.42,684.842 1788.98,684.842 1789.53,684.842 1790.09,684.842 1790.65,684.842 1791.21,684.842 1791.77,684.842 1792.33,684.842 1792.89,684.842 1793.45,684.842 1794.01,684.842 1794.57,684.842 1795.13,684.842 1795.69,684.842 1796.25,684.842 1796.8,684.842 1797.36,684.842 1797.92,684.842 1798.48,684.842 1799.04,684.842 1799.6,684.842 1800.16,684.842 1800.72,684.842 1801.28,684.842 1801.84,684.842 1802.4,684.842 1802.96,684.842 1803.52,684.842 1804.08,684.842 1804.63,684.842 1805.19,684.842 1805.75,684.842 1806.31,684.842 1806.87,684.842 1807.43,684.842 1807.99,684.842 1808.55,684.842 1809.11,684.842 1809.67,684.842 1810.23,684.842 1810.79,684.842 1811.35,684.842 1811.9,684.842 1812.46,684.842 1813.02,684.842 1813.58,684.842 1814.14,684.842 1814.7,684.842 1815.26,684.842 1815.82,684.842 1816.38,684.842 1816.94,684.842 1817.5,684.842 1818.06,684.842 1818.62,684.842 1819.18,684.842 1819.73,684.842 1820.29,684.842 1820.85,684.842 1821.41,684.842 1821.97,684.842 1822.53,684.842 1823.09,684.842 1823.65,684.842 1824.21,684.842 1824.77,684.842 1825.33,684.842 1825.89,684.842 1826.45,684.842 1827,684.842 1827.56,684.842 1828.12,684.842 1828.68,684.842 1829.24,684.842 1829.8,684.842 1830.36,684.842 1830.92,684.842 1831.48,684.842 1832.04,684.842 1832.6,684.842 1833.16,684.842 1833.72,684.842 1834.27,684.842 1834.83,684.842 1835.39,684.842 1835.95,684.842 1836.51,684.842 1837.07,684.842 1837.63,684.842 1838.19,684.842 \"/>\n<path clip-path=\"url(#clip233)\" d=\"M720.247 683.693 L720.806 683.693 L721.365 683.693 L721.924 683.693 L722.484 683.693 L723.043 683.693 L723.602 683.693 L724.161 683.693 L724.721 683.693 L725.28 683.693 L725.839 683.693 L726.398 683.693 L726.958 683.693 L727.517 683.693 L728.076 683.693 L728.635 683.693 L729.195 683.693 L729.754 683.693 L730.313 683.693 L730.872 683.693 L731.432 683.693 L731.991 683.693 L732.55 683.693 L733.109 683.693 L733.669 683.693 L734.228 683.693 L734.787 683.693 L735.346 683.693 L735.906 683.693 L736.465 683.693 L737.024 683.693 L737.583 683.693 L738.143 683.693 L738.702 683.693 L739.261 683.693 L739.82 683.693 L740.38 683.693 L740.939 683.693 L741.498 683.693 L742.057 683.693 L742.617 683.693 L743.176 683.693 L743.735 683.693 L744.294 683.693 L744.854 683.693 L745.413 683.693 L745.972 683.693 L746.531 683.693 L747.091 683.693 L747.65 683.693 L748.209 683.693 L748.768 683.693 L749.328 683.693 L749.887 683.693 L750.446 683.693 L751.005 683.693 L751.565 683.693 L752.124 683.693 L752.683 683.693 L753.242 683.693 L753.802 683.693 L754.361 683.693 L754.92 683.693 L755.479 683.693 L756.039 683.693 L756.598 683.693 L757.157 683.693 L757.716 683.693 L758.276 683.693 L758.835 683.693 L759.394 683.693 L759.953 683.693 L760.513 683.693 L761.072 683.693 L761.631 683.693 L762.19 683.693 L762.75 683.693 L763.309 683.693 L763.868 683.693 L764.427 683.693 L764.987 683.693 L765.546 683.693 L766.105 683.693 L766.664 683.693 L767.224 683.693 L767.783 683.693 L768.342 683.693 L768.901 683.693 L769.461 683.693 L770.02 683.693 L770.579 683.693 L771.138 683.693 L771.698 683.693 L772.257 683.693 L772.816 683.693 L773.375 683.693 L773.935 683.693 L774.494 683.693 L775.053 683.693 L775.612 683.693 L776.172 683.693 L776.731 683.693 L777.29 683.693 L777.849 683.693 L778.409 683.693 L778.968 683.693 L779.527 683.693 L780.086 683.693 L780.646 683.693 L781.205 683.693 L781.764 683.693 L782.323 683.693 L782.883 683.693 L783.442 683.693 L784.001 683.693 L784.56 683.693 L785.12 683.693 L785.679 683.693 L786.238 683.693 L786.797 683.693 L787.357 683.693 L787.916 683.693 L788.475 683.693 L789.034 683.693 L789.594 683.693 L790.153 683.693 L790.712 683.693 L791.271 683.693 L791.831 683.693 L792.39 683.693 L792.949 683.693 L793.508 683.693 L794.068 683.693 L794.627 683.693 L795.186 683.693 L795.745 683.693 L796.305 683.693 L796.864 683.693 L797.423 683.693 L797.982 683.693 L798.542 683.693 L799.101 683.693 L799.66 683.693 L800.219 683.693 L800.779 683.693 L801.338 683.693 L801.897 683.693 L802.456 683.693 L803.016 683.693 L803.575 683.693 L804.134 683.693 L804.693 683.693 L805.253 683.693 L805.812 683.693 L806.371 683.693 L806.931 683.693 L807.49 683.693 L808.049 683.693 L808.608 683.693 L809.168 683.693 L809.727 683.693 L810.286 683.693 L810.845 683.693 L811.405 683.693 L811.964 683.693 L812.523 683.693 L813.082 683.693 L813.642 683.693 L814.201 683.693 L814.76 683.693 L815.319 683.693 L815.879 683.693 L816.438 683.693 L816.997 683.693 L817.556 683.693 L818.116 683.693 L818.675 683.693 L819.234 683.693 L819.793 683.693 L820.353 683.693 L820.912 683.693 L821.471 683.693 L822.03 683.693 L822.59 683.693 L823.149 683.693 L823.708 683.693 L824.267 683.693 L824.827 683.693 L825.386 683.693 L825.945 683.693 L826.504 683.693 L827.064 683.693 L827.623 683.693 L828.182 683.693 L828.741 683.693 L829.301 683.693 L829.86 683.693 L830.419 683.693 L830.978 683.693 L831.538 683.693 L832.097 683.693 L832.656 683.693 L833.215 683.693 L833.775 683.693 L834.334 683.693 L834.893 683.693 L835.452 683.693 L836.012 683.693 L836.571 683.693 L837.13 683.693 L837.689 683.693 L838.249 683.693 L838.808 683.693 L839.367 683.693 L839.926 683.693 L840.486 683.693 L841.045 683.693 L841.604 683.693 L842.163 683.693 L842.723 683.693 L843.282 683.693 L843.841 683.693 L844.4 683.693 L844.96 683.693 L845.519 683.693 L846.078 683.693 L846.637 683.693 L847.197 683.693 L847.756 683.693 L848.315 683.693 L848.874 683.693 L849.434 683.693 L849.993 683.693 L850.552 683.693 L851.111 683.693 L851.671 683.693 L852.23 683.693 L852.789 683.693 L853.348 683.693 L853.908 683.693 L854.467 683.693 L855.026 683.693 L855.585 683.693 L856.145 683.693 L856.704 683.693 L857.263 683.693 L857.822 683.693 L858.382 683.693 L858.941 683.693 L859.5 683.693 L860.059 683.693 L860.619 683.693 L861.178 683.693 L861.737 683.693 L862.296 683.693 L862.856 683.693 L863.415 683.693 L863.974 683.693 L864.533 683.693 L865.093 683.693 L865.652 683.693 L866.211 683.693 L866.77 683.693 L867.33 683.693 L867.889 683.693 L868.448 683.693 L869.007 683.693 L869.567 683.693 L870.126 683.693 L870.685 683.693 L871.244 683.693 L871.804 683.693 L872.363 683.693 L872.922 683.693 L873.481 683.693 L874.041 683.693 L874.6 683.693 L875.159 683.693 L875.718 683.693 L876.278 683.693 L876.837 683.693 L877.396 683.693 L877.955 683.693 L878.515 683.693 L879.074 683.693 L879.633 683.693 L880.192 683.693 L880.752 683.693 L881.311 683.693 L881.87 683.693 L882.429 683.693 L882.989 683.693 L883.548 683.693 L884.107 683.693 L884.666 683.693 L885.226 683.693 L885.785 683.693 L886.344 683.693 L886.903 683.693 L887.463 683.693 L888.022 683.693 L888.581 683.693 L889.14 683.693 L889.7 683.693 L890.259 683.693 L890.818 683.693 L891.377 683.693 L891.937 683.693 L892.496 683.693 L893.055 683.693 L893.614 683.693 L894.174 683.693 L894.733 683.693 L895.292 683.693 L895.851 683.693 L896.411 683.693 L896.97 683.693 L897.529 683.693 L898.088 683.693 L898.648 683.693 L899.207 683.693 L899.766 683.693 L900.325 683.693 L900.885 683.693 L901.444 683.693 L902.003 683.693 L902.562 683.693 L903.122 683.693 L903.681 683.693 L904.24 683.693 L904.799 683.693 L905.359 683.693 L905.918 683.693 L906.477 683.693 L907.036 683.693 L907.596 683.693 L908.155 683.693 L908.714 683.693 L909.273 683.693 L909.833 683.693 L910.392 683.693 L910.951 683.693 L911.51 683.693 L912.07 683.693 L912.629 683.693 L913.188 683.693 L913.747 683.693 L914.307 683.693 L914.866 683.693 L915.425 683.693 L915.984 683.693 L916.544 683.693 L917.103 683.693 L917.662 683.693 L918.221 683.693 L918.781 683.693 L919.34 683.693 L919.899 683.693 L920.458 683.693 L921.018 683.693 L921.577 683.693 L922.136 683.693 L922.695 683.693 L923.255 683.693 L923.814 683.693 L924.373 683.693 L924.932 683.693 L925.492 683.693 L926.051 683.693 L926.61 683.693 L927.169 683.693 L927.729 683.693 L928.288 683.693 L928.847 683.693 L929.406 683.693 L929.966 683.693 L930.525 683.693 L931.084 683.693 L931.644 683.693 L932.203 683.693 L932.762 683.693 L933.321 683.693 L933.881 683.693 L934.44 683.693 L934.999 683.693 L935.558 683.693 L936.118 683.693 L936.677 683.693 L937.236 683.693 L937.795 683.693 L938.355 683.693 L938.914 683.693 L939.473 683.693 L940.032 683.693 L940.592 683.693 L941.151 683.693 L941.71 683.693 L942.269 683.693 L942.829 683.693 L943.388 683.693 L943.947 683.693 L944.506 683.693 L945.066 683.693 L945.625 683.693 L946.184 683.693 L946.743 683.693 L947.303 683.693 L947.862 683.693 L948.421 683.693 L948.98 683.693 L949.54 683.693 L950.099 683.693 L950.658 683.693 L951.217 683.693 L951.777 683.693 L952.336 683.693 L952.895 683.693 L953.454 683.693 L954.014 683.693 L954.573 683.693 L955.132 683.693 L955.691 683.693 L956.251 683.693 L956.81 683.693 L957.369 683.693 L957.928 683.693 L958.488 683.693 L959.047 683.693 L959.606 683.693 L960.165 683.693 L960.725 683.693 L961.284 683.693 L961.843 683.693 L962.402 683.693 L962.962 683.693 L963.521 683.693 L964.08 683.693 L964.639 683.693 L965.199 683.693 L965.758 683.693 L966.317 683.693 L966.876 683.693 L967.436 683.693 L967.995 683.693 L968.554 683.693 L969.113 683.693 L969.673 683.693 L970.232 683.693 L970.791 683.693 L971.35 683.693 L971.91 683.693 L972.469 683.693 L973.028 683.693 L973.587 683.693 L974.147 683.693 L974.706 683.693 L975.265 683.693 L975.824 683.693 L976.384 683.693 L976.943 683.693 L977.502 683.693 L978.061 683.693 L978.621 683.693 L979.18 683.693 L979.739 683.693 L980.298 683.693 L980.858 683.693 L981.417 683.693 L981.976 683.693 L982.535 683.693 L983.095 683.693 L983.654 683.693 L984.213 683.693 L984.772 683.693 L985.332 683.693 L985.891 683.693 L986.45 683.693 L987.009 683.693 L987.569 683.693 L988.128 683.693 L988.687 683.693 L989.246 683.693 L989.806 683.693 L990.365 683.693 L990.924 683.693 L991.483 683.693 L992.043 683.693 L992.602 683.693 L993.161 683.693 L993.72 683.693 L994.28 683.693 L994.839 683.693 L995.398 683.693 L995.957 683.693 L996.517 683.693 L997.076 683.693 L997.635 683.693 L998.194 683.693 L998.754 683.693 L999.313 683.693 L999.872 683.693 L1000.43 683.693 L1000.99 683.693 L1001.55 683.693 L1002.11 683.693 L1002.67 683.693 L1003.23 683.693 L1003.79 683.693 L1004.35 683.693 L1004.91 683.693 L1005.46 683.693 L1006.02 683.693 L1006.58 683.693 L1007.14 683.693 L1007.7 683.693 L1008.26 683.693 L1008.82 683.693 L1009.38 683.693 L1009.94 683.693 L1010.5 683.693 L1011.06 683.693 L1011.62 683.693 L1012.18 683.693 L1012.73 683.693 L1013.29 683.693 L1013.85 683.693 L1014.41 683.693 L1014.97 683.693 L1015.53 683.693 L1016.09 683.693 L1016.65 683.693 L1017.21 683.693 L1017.77 683.693 L1018.33 683.693 L1018.89 683.693 L1019.45 683.693 L1020.01 683.693 L1020.56 683.693 L1021.12 683.693 L1021.68 683.693 L1022.24 683.693 L1022.8 683.693 L1023.36 683.693 L1023.92 683.693 L1024.48 683.693 L1025.04 683.693 L1025.6 683.693 L1026.16 683.693 L1026.72 683.693 L1027.28 683.693 L1027.83 683.693 L1028.39 683.693 L1028.95 683.693 L1029.51 683.693 L1030.07 683.693 L1030.63 683.693 L1031.19 683.693 L1031.75 683.693 L1032.31 683.693 L1032.87 683.693 L1033.43 683.693 L1033.99 683.693 L1034.55 683.693 L1035.1 683.693 L1035.66 683.693 L1036.22 683.693 L1036.78 683.693 L1037.34 683.693 L1037.9 683.693 L1038.46 683.693 L1039.02 683.693 L1039.58 683.693 L1040.14 683.693 L1040.7 683.693 L1041.26 683.693 L1041.82 683.693 L1042.38 683.693 L1042.93 683.693 L1043.49 683.693 L1044.05 683.693 L1044.61 683.693 L1045.17 683.693 L1045.73 683.693 L1046.29 683.693 L1046.85 683.693 L1047.41 683.693 L1047.97 683.693 L1048.53 683.693 L1049.09 683.693 L1049.65 683.693 L1050.2 683.693 L1050.76 683.693 L1051.32 683.693 L1051.88 683.693 L1052.44 683.693 L1053 683.693 L1053.56 683.693 L1054.12 683.693 L1054.68 683.693 L1055.24 683.693 L1055.8 683.693 L1056.36 683.693 L1056.92 683.693 L1057.48 683.693 L1058.03 683.693 L1058.59 683.693 L1059.15 683.693 L1059.71 683.693 L1060.27 683.693 L1060.83 683.693 L1061.39 683.693 L1061.95 683.693 L1062.51 683.693 L1063.07 683.693 L1063.63 683.693 L1064.19 683.693 L1064.75 683.693 L1065.3 683.693 L1065.86 683.693 L1066.42 683.693 L1066.98 683.693 L1067.54 683.693 L1068.1 683.693 L1068.66 683.693 L1069.22 683.693 L1069.78 683.693 L1070.34 683.693 L1070.9 683.693 L1071.46 683.693 L1072.02 683.693 L1072.57 683.693 L1073.13 683.693 L1073.69 683.693 L1074.25 683.693 L1074.81 683.693 L1075.37 683.693 L1075.93 683.693 L1076.49 683.693 L1077.05 683.693 L1077.61 683.693 L1078.17 683.693 L1078.73 683.693 L1079.29 683.693 L1079.85 683.693 L1080.4 683.693 L1080.96 683.693 L1081.52 683.693 L1082.08 683.693 L1082.64 683.693 L1083.2 683.693 L1083.76 683.693 L1084.32 683.693 L1084.88 683.693 L1085.44 683.693 L1086 683.693 L1086.56 683.693 L1087.12 683.693 L1087.67 683.693 L1088.23 683.693 L1088.79 683.693 L1089.35 683.693 L1089.91 683.693 L1090.47 683.693 L1091.03 683.693 L1091.59 683.693 L1092.15 683.693 L1092.71 683.693 L1093.27 683.693 L1093.83 683.693 L1094.39 683.693 L1094.94 683.693 L1095.5 683.693 L1096.06 683.693 L1096.62 683.693 L1097.18 683.693 L1097.74 683.693 L1098.3 683.693 L1098.86 683.693 L1099.42 683.693 L1099.98 683.693 L1100.54 683.693 L1101.1 683.693 L1101.66 683.693 L1102.22 683.693 L1102.77 683.693 L1103.33 683.693 L1103.89 683.693 L1104.45 683.693 L1105.01 683.693 L1105.57 683.693 L1106.13 683.693 L1106.69 683.693 L1107.25 683.693 L1107.81 683.693 L1108.37 683.693 L1108.93 683.693 L1109.49 683.693 L1110.04 683.693 L1110.6 683.693 L1111.16 683.693 L1111.72 683.693 L1112.28 683.693 L1112.84 683.693 L1113.4 683.693 L1113.96 683.693 L1114.52 683.693 L1115.08 683.693 L1115.64 683.693 L1116.2 683.693 L1116.76 683.693 L1117.31 683.693 L1117.87 683.693 L1118.43 683.693 L1118.99 683.693 L1119.55 683.693 L1120.11 683.693 L1120.67 683.693 L1121.23 683.693 L1121.79 683.693 L1122.35 683.693 L1122.91 683.693 L1123.47 683.693 L1124.03 683.693 L1124.59 683.693 L1125.14 683.693 L1125.7 683.693 L1126.26 683.693 L1126.82 683.693 L1127.38 683.693 L1127.94 683.693 L1128.5 683.693 L1129.06 683.693 L1129.62 683.693 L1130.18 683.693 L1130.74 683.693 L1131.3 683.693 L1131.86 683.693 L1132.41 683.693 L1132.97 683.693 L1133.53 683.693 L1134.09 683.693 L1134.65 683.693 L1135.21 683.693 L1135.77 683.693 L1136.33 683.693 L1136.89 683.693 L1137.45 683.693 L1138.01 683.693 L1138.57 683.693 L1139.13 683.693 L1139.68 683.693 L1140.24 683.693 L1140.8 683.693 L1141.36 683.693 L1141.92 683.693 L1142.48 683.693 L1143.04 683.693 L1143.6 683.693 L1144.16 683.693 L1144.72 683.693 L1145.28 683.693 L1145.84 683.693 L1146.4 683.693 L1146.96 683.693 L1147.51 683.693 L1148.07 683.693 L1148.63 683.693 L1149.19 683.693 L1149.75 683.693 L1150.31 683.693 L1150.87 683.693 L1151.43 683.693 L1151.99 683.693 L1152.55 683.693 L1153.11 683.693 L1153.67 683.693 L1154.23 683.693 L1154.78 683.693 L1155.34 683.693 L1155.9 683.693 L1156.46 683.693 L1157.02 683.693 L1157.58 683.693 L1158.14 683.693 L1158.7 683.693 L1159.26 683.693 L1159.82 683.693 L1160.38 683.693 L1160.94 683.693 L1161.5 683.693 L1162.05 683.693 L1162.61 683.693 L1163.17 683.693 L1163.73 683.693 L1164.29 683.693 L1164.85 683.693 L1165.41 683.693 L1165.97 683.693 L1166.53 683.693 L1167.09 683.693 L1167.65 683.693 L1168.21 683.693 L1168.77 683.693 L1169.33 683.693 L1169.88 683.693 L1170.44 683.693 L1171 683.693 L1171.56 683.693 L1172.12 683.693 L1172.68 683.693 L1173.24 683.693 L1173.8 683.693 L1174.36 683.693 L1174.92 683.693 L1175.48 683.693 L1176.04 683.693 L1176.6 683.693 L1177.15 683.693 L1177.71 683.693 L1178.27 683.693 L1178.83 683.693 L1179.39 683.693 L1179.95 683.693 L1180.51 683.693 L1181.07 683.693 L1181.63 683.693 L1182.19 683.693 L1182.75 683.693 L1183.31 683.693 L1183.87 683.693 L1184.43 683.693 L1184.98 683.693 L1185.54 683.693 L1186.1 683.693 L1186.66 683.693 L1187.22 683.693 L1187.78 683.693 L1188.34 683.693 L1188.9 683.693 L1189.46 683.693 L1190.02 683.693 L1190.58 683.693 L1191.14 683.693 L1191.7 683.693 L1192.25 683.693 L1192.81 683.693 L1193.37 683.693 L1193.93 683.693 L1194.49 683.693 L1195.05 683.693 L1195.61 683.693 L1196.17 683.693 L1196.73 683.693 L1197.29 683.693 L1197.85 683.693 L1198.41 683.693 L1198.97 683.693 L1199.52 683.693 L1200.08 683.693 L1200.64 683.693 L1201.2 683.693 L1201.76 683.693 L1202.32 683.693 L1202.88 683.693 L1203.44 683.693 L1204 683.693 L1204.56 683.693 L1205.12 683.693 L1205.68 683.693 L1206.24 683.693 L1206.8 683.693 L1207.35 683.693 L1207.91 683.693 L1208.47 683.693 L1209.03 683.693 L1209.59 683.693 L1210.15 683.693 L1210.71 683.693 L1211.27 683.693 L1211.83 683.693 L1212.39 683.693 L1212.95 683.693 L1213.51 683.693 L1214.07 683.693 L1214.62 683.693 L1215.18 683.693 L1215.74 683.693 L1216.3 683.693 L1216.86 683.693 L1217.42 683.693 L1217.98 683.693 L1218.54 683.693 L1219.1 683.693 L1219.66 683.693 L1220.22 683.693 L1220.78 683.693 L1221.34 683.693 L1221.89 683.693 L1222.45 683.693 L1223.01 683.693 L1223.57 683.693 L1224.13 683.693 L1224.69 683.693 L1225.25 683.693 L1225.81 683.693 L1226.37 683.693 L1226.93 683.693 L1227.49 683.693 L1228.05 683.693 L1228.61 683.693 L1229.17 683.693 L1229.72 683.693 L1230.28 683.693 L1230.84 683.693 L1231.4 683.693 L1231.96 683.693 L1232.52 683.693 L1233.08 683.693 L1233.64 683.693 L1234.2 683.693 L1234.76 683.693 L1235.32 683.693 L1235.88 683.693 L1236.44 683.693 L1236.99 683.693 L1237.55 683.693 L1238.11 683.693 L1238.67 683.693 L1239.23 683.693 L1239.79 683.693 L1240.35 683.693 L1240.91 683.693 L1241.47 683.693 L1242.03 683.693 L1242.59 683.693 L1243.15 683.693 L1243.71 683.693 L1244.26 683.693 L1244.82 683.693 L1245.38 683.693 L1245.94 683.693 L1246.5 683.693 L1247.06 683.693 L1247.62 683.693 L1248.18 683.693 L1248.74 683.693 L1249.3 683.693 L1249.86 683.693 L1250.42 683.693 L1250.98 683.693 L1251.54 683.693 L1252.09 683.693 L1252.65 683.693 L1253.21 683.693 L1253.77 683.693 L1254.33 683.693 L1254.89 683.693 L1255.45 683.693 L1256.01 683.693 L1256.57 683.693 L1257.13 683.693 L1257.69 683.693 L1258.25 683.693 L1258.81 683.693 L1259.36 683.693 L1259.92 683.693 L1260.48 683.693 L1261.04 683.693 L1261.6 683.693 L1262.16 683.693 L1262.72 683.693 L1263.28 683.693 L1263.84 683.693 L1264.4 683.693 L1264.96 683.693 L1265.52 683.693 L1266.08 683.693 L1266.63 683.693 L1267.19 683.693 L1267.75 683.693 L1268.31 683.693 L1268.87 683.693 L1269.43 683.693 L1269.99 683.693 L1270.55 683.693 L1271.11 683.693 L1271.67 683.693 L1272.23 683.693 L1272.79 683.693 L1273.35 683.693 L1273.91 683.693 L1274.46 683.693 L1275.02 683.693 L1275.58 683.693 L1276.14 683.693 L1276.7 683.693 L1277.26 683.693 L1277.82 683.693 L1278.38 683.693 L1278.94 683.693 L1279.5 683.693 L1280.06 683.693 L1280.62 683.693 L1281.18 683.693 L1281.73 683.693 L1282.29 683.693 L1282.85 683.693 L1283.41 683.693 L1283.97 683.693 L1284.53 683.693 L1285.09 683.693 L1285.65 683.693 L1286.21 683.693 L1286.77 683.693 L1287.33 683.693 L1287.89 683.693 L1288.45 683.693 L1289 683.693 L1289.56 683.693 L1290.12 683.693 L1290.68 683.693 L1291.24 683.693 L1291.8 683.693 L1292.36 683.693 L1292.92 683.693 L1293.48 683.693 L1294.04 683.693 L1294.6 683.693 L1295.16 683.693 L1295.72 683.693 L1296.28 683.693 L1296.83 683.693 L1297.39 683.693 L1297.95 683.693 L1298.51 683.693 L1299.07 683.693 L1299.63 683.693 L1300.19 683.693 L1300.75 683.693 L1301.31 683.693 L1301.87 683.693 L1302.43 683.693 L1302.99 683.693 L1303.55 683.693 L1304.1 683.693 L1304.66 683.693 L1305.22 683.693 L1305.78 683.693 L1306.34 683.693 L1306.9 683.693 L1307.46 683.693 L1308.02 683.693 L1308.58 683.693 L1309.14 683.693 L1309.7 683.693 L1310.26 683.693 L1310.82 683.693 L1311.38 683.693 L1311.93 683.693 L1312.49 683.693 L1313.05 683.693 L1313.61 683.693 L1314.17 683.693 L1314.73 683.693 L1315.29 683.693 L1315.85 683.693 L1316.41 683.693 L1316.97 683.693 L1317.53 683.693 L1318.09 683.693 L1318.65 683.693 L1319.2 683.693 L1319.76 683.693 L1320.32 683.693 L1320.88 683.693 L1321.44 683.693 L1322 683.693 L1322.56 683.693 L1323.12 683.693 L1323.68 683.693 L1324.24 683.693 L1324.8 683.693 L1325.36 683.693 L1325.92 683.693 L1326.47 683.693 L1327.03 683.693 L1327.59 683.693 L1328.15 683.693 L1328.71 683.693 L1329.27 683.693 L1329.83 683.693 L1330.39 683.693 L1330.95 683.693 L1331.51 683.693 L1332.07 683.693 L1332.63 683.693 L1333.19 683.693 L1333.75 683.693 L1334.3 683.693 L1334.86 683.693 L1335.42 683.693 L1335.98 683.693 L1336.54 683.693 L1337.1 683.693 L1337.66 683.693 L1338.22 683.693 L1338.78 683.693 L1339.34 683.693 L1339.9 683.693 L1340.46 683.693 L1341.02 683.693 L1341.57 683.693 L1342.13 683.693 L1342.69 683.693 L1343.25 683.693 L1343.81 683.693 L1344.37 683.693 L1344.93 683.693 L1345.49 683.693 L1346.05 683.693 L1346.61 683.693 L1347.17 683.693 L1347.73 683.693 L1348.29 683.693 L1348.84 683.693 L1349.4 683.693 L1349.96 683.693 L1350.52 683.693 L1351.08 683.693 L1351.64 683.693 L1352.2 683.693 L1352.76 683.693 L1353.32 683.693 L1353.88 683.693 L1354.44 683.693 L1355 683.693 L1355.56 683.693 L1356.12 683.693 L1356.67 683.693 L1357.23 683.693 L1357.79 683.693 L1358.35 683.693 L1358.91 683.693 L1359.47 683.693 L1360.03 683.693 L1360.59 683.693 L1361.15 683.693 L1361.71 683.693 L1362.27 683.693 L1362.83 683.693 L1363.39 683.693 L1363.94 683.693 L1364.5 683.693 L1365.06 683.693 L1365.62 683.693 L1366.18 683.693 L1366.74 683.693 L1367.3 683.693 L1367.86 683.693 L1368.42 683.693 L1368.98 683.693 L1369.54 683.693 L1370.1 683.693 L1370.66 683.693 L1371.21 683.693 L1371.77 683.693 L1372.33 683.693 L1372.89 683.693 L1373.45 683.693 L1374.01 683.693 L1374.57 683.693 L1375.13 683.693 L1375.69 683.693 L1376.25 683.693 L1376.81 683.693 L1377.37 683.693 L1377.93 683.693 L1378.49 683.693 L1379.04 683.693 L1379.6 683.693 L1380.16 683.693 L1380.72 683.693 L1381.28 683.693 L1381.84 683.693 L1382.4 683.693 L1382.96 683.693 L1383.52 683.693 L1384.08 683.693 L1384.64 683.693 L1385.2 683.693 L1385.76 683.693 L1386.31 683.693 L1386.87 683.693 L1387.43 683.693 L1387.99 683.693 L1388.55 683.693 L1389.11 683.693 L1389.67 683.693 L1390.23 683.693 L1390.79 683.693 L1391.35 683.693 L1391.91 683.693 L1392.47 683.693 L1393.03 683.693 L1393.58 683.693 L1394.14 683.693 L1394.7 683.693 L1395.26 683.693 L1395.82 683.693 L1396.38 683.693 L1396.94 683.693 L1397.5 683.693 L1398.06 683.693 L1398.62 683.693 L1399.18 683.693 L1399.74 683.693 L1400.3 683.693 L1400.86 683.693 L1401.41 683.693 L1401.97 683.693 L1402.53 683.693 L1403.09 683.693 L1403.65 683.693 L1404.21 683.693 L1404.77 683.693 L1405.33 683.693 L1405.89 683.693 L1406.45 683.693 L1407.01 683.693 L1407.57 683.693 L1408.13 683.693 L1408.68 683.693 L1409.24 683.693 L1409.8 683.693 L1410.36 683.693 L1410.92 683.693 L1411.48 683.693 L1412.04 683.693 L1412.6 683.693 L1413.16 683.693 L1413.72 683.693 L1414.28 683.693 L1414.84 683.693 L1415.4 683.693 L1415.95 683.693 L1416.51 683.693 L1417.07 683.693 L1417.63 683.693 L1418.19 683.693 L1418.75 683.693 L1419.31 683.693 L1419.87 683.693 L1420.43 683.693 L1420.99 683.693 L1421.55 683.693 L1422.11 683.693 L1422.67 683.693 L1423.23 683.693 L1423.78 683.693 L1424.34 683.693 L1424.9 683.693 L1425.46 683.693 L1426.02 683.693 L1426.58 683.693 L1427.14 683.693 L1427.7 683.693 L1428.26 683.693 L1428.82 683.693 L1429.38 683.693 L1429.94 683.693 L1430.5 683.693 L1431.05 683.693 L1431.61 683.693 L1432.17 683.693 L1432.73 683.693 L1433.29 683.693 L1433.85 683.693 L1434.41 683.693 L1434.97 683.693 L1435.53 683.693 L1436.09 683.693 L1436.65 683.693 L1437.21 683.693 L1437.77 683.693 L1438.33 683.693 L1438.88 683.693 L1439.44 683.693 L1440 683.693 L1440.56 683.693 L1441.12 683.693 L1441.68 683.693 L1442.24 683.693 L1442.8 683.693 L1443.36 683.693 L1443.92 683.693 L1444.48 683.693 L1445.04 683.693 L1445.6 683.693 L1446.15 683.693 L1446.71 683.693 L1447.27 683.693 L1447.83 683.693 L1448.39 683.693 L1448.95 683.693 L1449.51 683.693 L1450.07 683.693 L1450.63 683.693 L1451.19 683.693 L1451.75 683.693 L1452.31 683.693 L1452.87 683.693 L1453.42 683.693 L1453.98 683.693 L1454.54 683.693 L1455.1 683.693 L1455.66 683.693 L1456.22 683.693 L1456.78 683.693 L1457.34 683.693 L1457.9 683.693 L1458.46 683.693 L1459.02 683.693 L1459.58 683.693 L1460.14 683.693 L1460.7 683.693 L1461.25 683.693 L1461.81 683.693 L1462.37 683.693 L1462.93 683.693 L1463.49 683.693 L1464.05 683.693 L1464.61 683.693 L1465.17 683.693 L1465.73 683.693 L1466.29 683.693 L1466.85 683.693 L1467.41 683.693 L1467.97 683.693 L1468.52 683.693 L1469.08 683.693 L1469.64 683.693 L1470.2 683.693 L1470.76 683.693 L1471.32 683.693 L1471.88 683.693 L1472.44 683.693 L1473 683.693 L1473.56 683.693 L1474.12 683.693 L1474.68 683.693 L1475.24 683.693 L1475.79 683.693 L1476.35 683.693 L1476.91 683.693 L1477.47 683.693 L1478.03 683.693 L1478.59 683.693 L1479.15 683.693 L1479.71 683.693 L1480.27 683.693 L1480.83 683.693 L1481.39 683.693 L1481.95 683.693 L1482.51 683.693 L1483.07 683.693 L1483.62 683.693 L1484.18 683.693 L1484.74 683.693 L1485.3 683.693 L1485.86 683.693 L1486.42 683.693 L1486.98 683.693 L1487.54 683.693 L1488.1 683.693 L1488.66 683.693 L1489.22 683.693 L1489.78 683.693 L1490.34 683.693 L1490.89 683.693 L1491.45 683.693 L1492.01 683.693 L1492.57 683.693 L1493.13 683.693 L1493.69 683.693 L1494.25 683.693 L1494.81 683.693 L1495.37 683.693 L1495.93 683.693 L1496.49 683.693 L1497.05 683.693 L1497.61 683.693 L1498.16 683.693 L1498.72 683.693 L1499.28 683.693 L1499.84 683.693 L1500.4 683.693 L1500.96 683.693 L1501.52 683.693 L1502.08 683.693 L1502.64 683.693 L1503.2 683.693 L1503.76 683.693 L1504.32 683.693 L1504.88 683.693 L1505.44 683.693 L1505.99 683.693 L1506.55 683.693 L1507.11 683.693 L1507.67 683.693 L1508.23 683.693 L1508.79 683.693 L1509.35 683.693 L1509.91 683.693 L1510.47 683.693 L1511.03 683.693 L1511.59 683.693 L1512.15 683.693 L1512.71 683.693 L1513.26 683.693 L1513.82 683.693 L1514.38 683.693 L1514.94 683.693 L1515.5 683.693 L1516.06 683.693 L1516.62 683.693 L1517.18 683.693 L1517.74 683.693 L1518.3 683.693 L1518.86 683.693 L1519.42 683.693 L1519.98 683.693 L1520.53 683.693 L1521.09 683.693 L1521.65 683.693 L1522.21 683.693 L1522.77 683.693 L1523.33 683.693 L1523.89 683.693 L1524.45 683.693 L1525.01 683.693 L1525.57 683.693 L1526.13 683.693 L1526.69 683.693 L1527.25 683.693 L1527.81 683.693 L1528.36 683.693 L1528.92 683.693 L1529.48 683.693 L1530.04 683.693 L1530.6 683.693 L1531.16 683.693 L1531.72 683.693 L1532.28 683.693 L1532.84 683.693 L1533.4 683.693 L1533.96 683.693 L1534.52 683.693 L1535.08 683.693 L1535.63 683.693 L1536.19 683.693 L1536.75 683.693 L1537.31 683.693 L1537.87 683.693 L1538.43 683.693 L1538.99 683.693 L1539.55 683.693 L1540.11 683.693 L1540.67 683.693 L1541.23 683.693 L1541.79 683.693 L1542.35 683.693 L1542.9 683.693 L1543.46 683.693 L1544.02 683.693 L1544.58 683.693 L1545.14 683.693 L1545.7 683.693 L1546.26 683.693 L1546.82 683.693 L1547.38 683.693 L1547.94 683.693 L1548.5 683.693 L1549.06 683.693 L1549.62 683.693 L1550.18 683.693 L1550.73 683.693 L1551.29 683.693 L1551.85 683.693 L1552.41 683.693 L1552.97 683.693 L1553.53 683.693 L1554.09 683.693 L1554.65 683.693 L1555.21 683.693 L1555.77 683.693 L1556.33 683.693 L1556.89 683.693 L1557.45 683.693 L1558 683.693 L1558.56 683.693 L1559.12 683.693 L1559.68 683.693 L1560.24 683.693 L1560.8 683.693 L1561.36 683.693 L1561.92 683.693 L1562.48 683.693 L1563.04 683.693 L1563.6 683.693 L1564.16 683.693 L1564.72 683.693 L1565.28 683.693 L1565.83 683.693 L1566.39 683.693 L1566.95 683.693 L1567.51 683.693 L1568.07 683.693 L1568.63 683.693 L1569.19 683.693 L1569.75 683.693 L1570.31 683.693 L1570.87 683.693 L1571.43 683.693 L1571.99 683.693 L1572.55 683.693 L1573.1 683.693 L1573.66 683.693 L1574.22 683.693 L1574.78 683.693 L1575.34 683.693 L1575.9 683.693 L1576.46 683.693 L1577.02 683.693 L1577.58 683.693 L1578.14 683.693 L1578.7 683.693 L1579.26 683.693 L1579.82 683.693 L1580.37 683.693 L1580.93 683.693 L1581.49 683.693 L1582.05 683.693 L1582.61 683.693 L1583.17 683.693 L1583.73 683.693 L1584.29 683.693 L1584.85 683.693 L1585.41 683.693 L1585.97 683.693 L1586.53 683.693 L1587.09 683.693 L1587.65 683.693 L1588.2 683.693 L1588.76 683.693 L1589.32 683.693 L1589.88 683.693 L1590.44 683.693 L1591 683.693 L1591.56 683.693 L1592.12 683.693 L1592.68 683.693 L1593.24 683.693 L1593.8 683.693 L1594.36 683.693 L1594.92 683.693 L1595.47 683.693 L1596.03 683.693 L1596.59 683.693 L1597.15 683.693 L1597.71 683.693 L1598.27 683.693 L1598.83 683.693 L1599.39 683.693 L1599.95 683.693 L1600.51 683.693 L1601.07 683.693 L1601.63 683.693 L1602.19 683.693 L1602.74 683.693 L1603.3 683.693 L1603.86 683.693 L1604.42 683.693 L1604.98 683.693 L1605.54 683.693 L1606.1 683.693 L1606.66 683.693 L1607.22 683.693 L1607.78 683.693 L1608.34 683.693 L1608.9 683.693 L1609.46 683.693 L1610.02 683.693 L1610.57 683.693 L1611.13 683.693 L1611.69 683.693 L1612.25 683.693 L1612.81 683.693 L1613.37 683.693 L1613.93 683.693 L1614.49 683.693 L1615.05 683.693 L1615.61 683.693 L1616.17 683.693 L1616.73 683.693 L1617.29 683.693 L1617.84 683.693 L1618.4 683.693 L1618.96 683.693 L1619.52 683.693 L1620.08 683.693 L1620.64 683.693 L1621.2 683.693 L1621.76 683.693 L1622.32 683.693 L1622.88 683.693 L1623.44 683.693 L1624 683.693 L1624.56 683.693 L1625.11 683.693 L1625.67 683.693 L1626.23 683.693 L1626.79 683.693 L1627.35 683.693 L1627.91 683.693 L1628.47 683.693 L1629.03 683.693 L1629.59 683.693 L1630.15 683.693 L1630.71 683.693 L1631.27 683.693 L1631.83 683.693 L1632.39 683.693 L1632.94 683.693 L1633.5 683.693 L1634.06 683.693 L1634.62 683.693 L1635.18 683.693 L1635.74 683.693 L1636.3 683.693 L1636.86 683.693 L1637.42 683.693 L1637.98 683.693 L1638.54 683.693 L1639.1 683.693 L1639.66 683.693 L1640.21 683.693 L1640.77 683.693 L1641.33 683.693 L1641.89 683.693 L1642.45 683.693 L1643.01 683.693 L1643.57 683.693 L1644.13 683.693 L1644.69 683.693 L1645.25 683.693 L1645.81 683.693 L1646.37 683.693 L1646.93 683.693 L1647.48 683.693 L1648.04 683.693 L1648.6 683.693 L1649.16 683.693 L1649.72 683.693 L1650.28 683.693 L1650.84 683.693 L1651.4 683.693 L1651.96 683.693 L1652.52 683.693 L1653.08 683.693 L1653.64 683.693 L1654.2 683.693 L1654.76 683.693 L1655.31 683.693 L1655.87 683.693 L1656.43 683.693 L1656.99 683.693 L1657.55 683.693 L1658.11 683.693 L1658.67 683.693 L1659.23 683.693 L1659.79 683.693 L1660.35 683.693 L1660.91 683.693 L1661.47 683.693 L1662.03 683.693 L1662.58 683.693 L1663.14 683.693 L1663.7 683.693 L1664.26 683.693 L1664.82 683.693 L1665.38 683.693 L1665.94 683.693 L1666.5 683.693 L1667.06 683.693 L1667.62 683.693 L1668.18 683.693 L1668.74 683.693 L1669.3 683.693 L1669.85 683.693 L1670.41 683.693 L1670.97 683.693 L1671.53 683.693 L1672.09 683.693 L1672.65 683.693 L1673.21 683.693 L1673.77 683.693 L1674.33 683.693 L1674.89 683.693 L1675.45 683.693 L1676.01 683.693 L1676.57 683.693 L1677.13 683.693 L1677.68 683.693 L1678.24 683.693 L1678.8 683.693 L1679.36 683.693 L1679.92 683.693 L1680.48 683.693 L1681.04 683.693 L1681.6 683.693 L1682.16 683.693 L1682.72 683.693 L1683.28 683.693 L1683.84 683.693 L1684.4 683.693 L1684.95 683.693 L1685.51 683.693 L1686.07 683.693 L1686.63 683.693 L1687.19 683.693 L1687.75 683.693 L1688.31 683.693 L1688.87 683.693 L1689.43 683.693 L1689.99 683.693 L1690.55 683.693 L1691.11 683.693 L1691.67 683.693 L1692.23 683.693 L1692.78 683.693 L1693.34 683.693 L1693.9 683.693 L1694.46 683.693 L1695.02 683.693 L1695.58 683.693 L1696.14 683.693 L1696.7 683.693 L1697.26 683.693 L1697.82 683.693 L1698.38 683.693 L1698.94 683.693 L1699.5 683.693 L1700.05 683.693 L1700.61 683.693 L1701.17 683.693 L1701.73 683.693 L1702.29 683.693 L1702.85 683.693 L1703.41 683.693 L1703.97 683.693 L1704.53 683.693 L1705.09 683.693 L1705.65 683.693 L1706.21 683.693 L1706.77 683.693 L1707.32 683.693 L1707.88 683.693 L1708.44 683.693 L1709 683.693 L1709.56 683.693 L1710.12 683.693 L1710.68 683.693 L1711.24 683.693 L1711.8 683.693 L1712.36 683.693 L1712.92 683.693 L1713.48 683.693 L1714.04 683.693 L1714.6 683.693 L1715.15 683.693 L1715.71 683.693 L1716.27 683.693 L1716.83 683.693 L1717.39 683.693 L1717.95 683.693 L1718.51 683.693 L1719.07 683.693 L1719.63 683.693 L1720.19 683.693 L1720.75 683.693 L1721.31 683.693 L1721.87 683.693 L1722.42 683.693 L1722.98 683.693 L1723.54 683.693 L1724.1 683.693 L1724.66 683.693 L1725.22 683.693 L1725.78 683.693 L1726.34 683.693 L1726.9 683.693 L1727.46 683.693 L1728.02 683.693 L1728.58 683.693 L1729.14 683.693 L1729.69 683.693 L1730.25 683.693 L1730.81 683.693 L1731.37 683.693 L1731.93 683.693 L1732.49 683.693 L1733.05 683.693 L1733.61 683.693 L1734.17 683.693 L1734.73 683.693 L1735.29 683.693 L1735.85 683.693 L1736.41 683.693 L1736.97 683.693 L1737.52 683.693 L1738.08 683.693 L1738.64 683.693 L1739.2 683.693 L1739.76 683.693 L1740.32 683.693 L1740.88 683.693 L1741.44 683.693 L1742 683.693 L1742.56 683.693 L1743.12 683.693 L1743.68 683.693 L1744.24 683.693 L1744.79 683.693 L1745.35 683.693 L1745.91 683.693 L1746.47 683.693 L1747.03 683.693 L1747.59 683.693 L1748.15 683.693 L1748.71 683.693 L1749.27 683.693 L1749.83 683.693 L1750.39 683.693 L1750.95 683.693 L1751.51 683.693 L1752.06 683.693 L1752.62 683.693 L1753.18 683.693 L1753.74 683.693 L1754.3 683.693 L1754.86 683.693 L1755.42 683.693 L1755.98 683.693 L1756.54 683.693 L1757.1 683.693 L1757.66 683.693 L1758.22 683.693 L1758.78 683.693 L1759.34 683.693 L1759.89 683.693 L1760.45 683.693 L1761.01 683.693 L1761.57 683.693 L1762.13 683.693 L1762.69 683.693 L1763.25 683.693 L1763.81 683.693 L1764.37 683.693 L1764.93 683.693 L1765.49 683.693 L1766.05 683.693 L1766.61 683.693 L1767.16 683.693 L1767.72 683.693 L1768.28 683.693 L1768.84 683.693 L1769.4 683.693 L1769.96 683.693 L1770.52 683.693 L1771.08 683.693 L1771.64 683.693 L1772.2 683.693 L1772.76 683.693 L1773.32 683.693 L1773.88 683.693 L1774.43 683.693 L1774.99 683.693 L1775.55 683.693 L1776.11 683.693 L1776.67 683.693 L1777.23 683.693 L1777.79 683.693 L1778.35 683.693 L1778.91 683.693 L1779.47 683.693 L1780.03 683.693 L1780.59 683.693 L1781.15 683.693 L1781.71 683.693 L1782.26 683.693 L1782.82 683.693 L1783.38 683.693 L1783.94 683.693 L1784.5 683.693 L1785.06 683.693 L1785.62 683.693 L1786.18 683.693 L1786.74 683.693 L1787.3 683.693 L1787.86 683.693 L1788.42 683.693 L1788.98 683.693 L1789.53 683.693 L1790.09 683.693 L1790.65 683.693 L1791.21 683.693 L1791.77 683.693 L1792.33 683.693 L1792.89 683.693 L1793.45 683.693 L1794.01 683.693 L1794.57 683.693 L1795.13 683.693 L1795.69 683.693 L1796.25 683.693 L1796.8 683.693 L1797.36 683.693 L1797.92 683.693 L1798.48 683.693 L1799.04 683.693 L1799.6 683.693 L1800.16 683.693 L1800.72 683.693 L1801.28 683.693 L1801.84 683.693 L1802.4 683.693 L1802.96 683.693 L1803.52 683.693 L1804.08 683.693 L1804.63 683.693 L1805.19 683.693 L1805.75 683.693 L1806.31 683.693 L1806.87 683.693 L1807.43 683.693 L1807.99 683.693 L1808.55 683.693 L1809.11 683.693 L1809.67 683.693 L1810.23 683.693 L1810.79 683.693 L1811.35 683.693 L1811.9 683.693 L1812.46 683.693 L1813.02 683.693 L1813.58 683.693 L1814.14 683.693 L1814.7 683.693 L1815.26 683.693 L1815.82 683.693 L1816.38 683.693 L1816.94 683.693 L1817.5 683.693 L1818.06 683.693 L1818.62 683.693 L1819.18 683.693 L1819.73 683.693 L1820.29 683.693 L1820.85 683.693 L1821.41 683.693 L1821.97 683.693 L1822.53 683.693 L1823.09 683.693 L1823.65 683.693 L1824.21 683.693 L1824.77 683.693 L1825.33 683.693 L1825.89 683.693 L1826.45 683.693 L1827 683.693 L1827.56 683.693 L1828.12 683.693 L1828.68 683.693 L1829.24 683.693 L1829.8 683.693 L1830.36 683.693 L1830.92 683.693 L1831.48 683.693 L1832.04 683.693 L1832.6 683.693 L1833.16 683.693 L1833.72 683.693 L1834.27 683.693 L1834.83 683.693 L1835.39 683.693 L1835.95 683.693 L1836.51 683.693 L1837.07 683.693 L1837.63 683.693 L1838.19 683.693 L1838.19 682.317 L1837.63 682.317 L1837.07 682.317 L1836.51 682.317 L1835.95 682.317 L1835.39 682.317 L1834.83 682.317 L1834.27 682.317 L1833.72 682.317 L1833.16 682.317 L1832.6 682.317 L1832.04 682.317 L1831.48 682.317 L1830.92 682.317 L1830.36 682.317 L1829.8 682.317 L1829.24 682.317 L1828.68 682.317 L1828.12 682.317 L1827.56 682.317 L1827 682.317 L1826.45 682.317 L1825.89 682.317 L1825.33 682.317 L1824.77 682.317 L1824.21 682.317 L1823.65 682.317 L1823.09 682.317 L1822.53 682.317 L1821.97 682.317 L1821.41 682.317 L1820.85 682.317 L1820.29 682.317 L1819.73 682.317 L1819.18 682.317 L1818.62 682.317 L1818.06 682.317 L1817.5 682.317 L1816.94 682.317 L1816.38 682.317 L1815.82 682.317 L1815.26 682.317 L1814.7 682.317 L1814.14 682.317 L1813.58 682.317 L1813.02 682.317 L1812.46 682.317 L1811.9 682.317 L1811.35 682.317 L1810.79 682.317 L1810.23 682.317 L1809.67 682.317 L1809.11 682.317 L1808.55 682.317 L1807.99 682.317 L1807.43 682.317 L1806.87 682.317 L1806.31 682.317 L1805.75 682.317 L1805.19 682.317 L1804.63 682.317 L1804.08 682.317 L1803.52 682.317 L1802.96 682.317 L1802.4 682.317 L1801.84 682.317 L1801.28 682.317 L1800.72 682.317 L1800.16 682.317 L1799.6 682.317 L1799.04 682.317 L1798.48 682.317 L1797.92 682.317 L1797.36 682.317 L1796.8 682.317 L1796.25 682.317 L1795.69 682.317 L1795.13 682.317 L1794.57 682.317 L1794.01 682.317 L1793.45 682.317 L1792.89 682.317 L1792.33 682.317 L1791.77 682.317 L1791.21 682.317 L1790.65 682.317 L1790.09 682.317 L1789.53 682.317 L1788.98 682.317 L1788.42 682.317 L1787.86 682.317 L1787.3 682.317 L1786.74 682.317 L1786.18 682.317 L1785.62 682.317 L1785.06 682.317 L1784.5 682.317 L1783.94 682.317 L1783.38 682.317 L1782.82 682.317 L1782.26 682.317 L1781.71 682.317 L1781.15 682.317 L1780.59 682.317 L1780.03 682.317 L1779.47 682.317 L1778.91 682.317 L1778.35 682.317 L1777.79 682.317 L1777.23 682.317 L1776.67 682.317 L1776.11 682.317 L1775.55 682.317 L1774.99 682.317 L1774.43 682.317 L1773.88 682.317 L1773.32 682.317 L1772.76 682.317 L1772.2 682.317 L1771.64 682.317 L1771.08 682.317 L1770.52 682.317 L1769.96 682.317 L1769.4 682.317 L1768.84 682.317 L1768.28 682.317 L1767.72 682.317 L1767.16 682.317 L1766.61 682.317 L1766.05 682.317 L1765.49 682.317 L1764.93 682.317 L1764.37 682.317 L1763.81 682.317 L1763.25 682.317 L1762.69 682.317 L1762.13 682.317 L1761.57 682.317 L1761.01 682.317 L1760.45 682.317 L1759.89 682.317 L1759.34 682.317 L1758.78 682.317 L1758.22 682.317 L1757.66 682.317 L1757.1 682.317 L1756.54 682.317 L1755.98 682.317 L1755.42 682.317 L1754.86 682.317 L1754.3 682.317 L1753.74 682.317 L1753.18 682.317 L1752.62 682.317 L1752.06 682.317 L1751.51 682.317 L1750.95 682.317 L1750.39 682.317 L1749.83 682.317 L1749.27 682.317 L1748.71 682.317 L1748.15 682.317 L1747.59 682.317 L1747.03 682.317 L1746.47 682.317 L1745.91 682.317 L1745.35 682.317 L1744.79 682.317 L1744.24 682.317 L1743.68 682.317 L1743.12 682.317 L1742.56 682.317 L1742 682.317 L1741.44 682.317 L1740.88 682.317 L1740.32 682.317 L1739.76 682.317 L1739.2 682.317 L1738.64 682.317 L1738.08 682.317 L1737.52 682.317 L1736.97 682.317 L1736.41 682.317 L1735.85 682.317 L1735.29 682.317 L1734.73 682.317 L1734.17 682.317 L1733.61 682.317 L1733.05 682.317 L1732.49 682.317 L1731.93 682.317 L1731.37 682.317 L1730.81 682.317 L1730.25 682.317 L1729.69 682.317 L1729.14 682.317 L1728.58 682.317 L1728.02 682.317 L1727.46 682.317 L1726.9 682.317 L1726.34 682.317 L1725.78 682.317 L1725.22 682.317 L1724.66 682.317 L1724.1 682.317 L1723.54 682.317 L1722.98 682.317 L1722.42 682.317 L1721.87 682.317 L1721.31 682.317 L1720.75 682.317 L1720.19 682.317 L1719.63 682.317 L1719.07 682.317 L1718.51 682.317 L1717.95 682.317 L1717.39 682.317 L1716.83 682.317 L1716.27 682.317 L1715.71 682.317 L1715.15 682.317 L1714.6 682.317 L1714.04 682.317 L1713.48 682.317 L1712.92 682.317 L1712.36 682.317 L1711.8 682.317 L1711.24 682.317 L1710.68 682.317 L1710.12 682.317 L1709.56 682.317 L1709 682.317 L1708.44 682.317 L1707.88 682.317 L1707.32 682.317 L1706.77 682.317 L1706.21 682.317 L1705.65 682.317 L1705.09 682.317 L1704.53 682.317 L1703.97 682.317 L1703.41 682.317 L1702.85 682.317 L1702.29 682.317 L1701.73 682.317 L1701.17 682.317 L1700.61 682.317 L1700.05 682.317 L1699.5 682.317 L1698.94 682.317 L1698.38 682.317 L1697.82 682.317 L1697.26 682.317 L1696.7 682.317 L1696.14 682.317 L1695.58 682.317 L1695.02 682.317 L1694.46 682.317 L1693.9 682.317 L1693.34 682.317 L1692.78 682.317 L1692.23 682.317 L1691.67 682.317 L1691.11 682.317 L1690.55 682.317 L1689.99 682.317 L1689.43 682.317 L1688.87 682.317 L1688.31 682.317 L1687.75 682.317 L1687.19 682.317 L1686.63 682.317 L1686.07 682.317 L1685.51 682.317 L1684.95 682.317 L1684.4 682.317 L1683.84 682.317 L1683.28 682.317 L1682.72 682.317 L1682.16 682.317 L1681.6 682.317 L1681.04 682.317 L1680.48 682.317 L1679.92 682.317 L1679.36 682.317 L1678.8 682.317 L1678.24 682.317 L1677.68 682.317 L1677.13 682.317 L1676.57 682.317 L1676.01 682.317 L1675.45 682.317 L1674.89 682.317 L1674.33 682.317 L1673.77 682.317 L1673.21 682.317 L1672.65 682.317 L1672.09 682.317 L1671.53 682.317 L1670.97 682.317 L1670.41 682.317 L1669.85 682.317 L1669.3 682.317 L1668.74 682.317 L1668.18 682.317 L1667.62 682.317 L1667.06 682.317 L1666.5 682.317 L1665.94 682.317 L1665.38 682.317 L1664.82 682.317 L1664.26 682.317 L1663.7 682.317 L1663.14 682.317 L1662.58 682.317 L1662.03 682.317 L1661.47 682.317 L1660.91 682.317 L1660.35 682.317 L1659.79 682.317 L1659.23 682.317 L1658.67 682.317 L1658.11 682.317 L1657.55 682.317 L1656.99 682.317 L1656.43 682.317 L1655.87 682.317 L1655.31 682.317 L1654.76 682.317 L1654.2 682.317 L1653.64 682.317 L1653.08 682.317 L1652.52 682.317 L1651.96 682.317 L1651.4 682.317 L1650.84 682.317 L1650.28 682.317 L1649.72 682.317 L1649.16 682.317 L1648.6 682.317 L1648.04 682.317 L1647.48 682.317 L1646.93 682.317 L1646.37 682.317 L1645.81 682.317 L1645.25 682.317 L1644.69 682.317 L1644.13 682.317 L1643.57 682.317 L1643.01 682.317 L1642.45 682.317 L1641.89 682.317 L1641.33 682.317 L1640.77 682.317 L1640.21 682.317 L1639.66 682.317 L1639.1 682.317 L1638.54 682.317 L1637.98 682.317 L1637.42 682.317 L1636.86 682.317 L1636.3 682.317 L1635.74 682.317 L1635.18 682.317 L1634.62 682.317 L1634.06 682.317 L1633.5 682.317 L1632.94 682.317 L1632.39 682.317 L1631.83 682.317 L1631.27 682.317 L1630.71 682.317 L1630.15 682.317 L1629.59 682.317 L1629.03 682.317 L1628.47 682.317 L1627.91 682.317 L1627.35 682.317 L1626.79 682.317 L1626.23 682.317 L1625.67 682.317 L1625.11 682.317 L1624.56 682.317 L1624 682.317 L1623.44 682.317 L1622.88 682.317 L1622.32 682.317 L1621.76 682.317 L1621.2 682.317 L1620.64 682.317 L1620.08 682.317 L1619.52 682.317 L1618.96 682.317 L1618.4 682.317 L1617.84 682.317 L1617.29 682.317 L1616.73 682.317 L1616.17 682.317 L1615.61 682.317 L1615.05 682.317 L1614.49 682.317 L1613.93 682.317 L1613.37 682.317 L1612.81 682.317 L1612.25 682.317 L1611.69 682.317 L1611.13 682.317 L1610.57 682.317 L1610.02 682.317 L1609.46 682.317 L1608.9 682.317 L1608.34 682.317 L1607.78 682.317 L1607.22 682.317 L1606.66 682.317 L1606.1 682.317 L1605.54 682.317 L1604.98 682.317 L1604.42 682.317 L1603.86 682.317 L1603.3 682.317 L1602.74 682.317 L1602.19 682.317 L1601.63 682.317 L1601.07 682.317 L1600.51 682.317 L1599.95 682.317 L1599.39 682.317 L1598.83 682.317 L1598.27 682.317 L1597.71 682.317 L1597.15 682.317 L1596.59 682.317 L1596.03 682.317 L1595.47 682.317 L1594.92 682.317 L1594.36 682.317 L1593.8 682.317 L1593.24 682.317 L1592.68 682.317 L1592.12 682.317 L1591.56 682.317 L1591 682.317 L1590.44 682.317 L1589.88 682.317 L1589.32 682.317 L1588.76 682.317 L1588.2 682.317 L1587.65 682.317 L1587.09 682.317 L1586.53 682.317 L1585.97 682.317 L1585.41 682.317 L1584.85 682.317 L1584.29 682.317 L1583.73 682.317 L1583.17 682.317 L1582.61 682.317 L1582.05 682.317 L1581.49 682.317 L1580.93 682.317 L1580.37 682.317 L1579.82 682.317 L1579.26 682.317 L1578.7 682.317 L1578.14 682.317 L1577.58 682.317 L1577.02 682.317 L1576.46 682.317 L1575.9 682.317 L1575.34 682.317 L1574.78 682.317 L1574.22 682.317 L1573.66 682.317 L1573.1 682.317 L1572.55 682.317 L1571.99 682.317 L1571.43 682.317 L1570.87 682.317 L1570.31 682.317 L1569.75 682.317 L1569.19 682.317 L1568.63 682.317 L1568.07 682.317 L1567.51 682.317 L1566.95 682.317 L1566.39 682.317 L1565.83 682.317 L1565.28 682.317 L1564.72 682.317 L1564.16 682.317 L1563.6 682.317 L1563.04 682.317 L1562.48 682.317 L1561.92 682.317 L1561.36 682.317 L1560.8 682.317 L1560.24 682.317 L1559.68 682.317 L1559.12 682.317 L1558.56 682.317 L1558 682.317 L1557.45 682.317 L1556.89 682.317 L1556.33 682.317 L1555.77 682.317 L1555.21 682.317 L1554.65 682.317 L1554.09 682.317 L1553.53 682.317 L1552.97 682.317 L1552.41 682.317 L1551.85 682.317 L1551.29 682.317 L1550.73 682.317 L1550.18 682.317 L1549.62 682.317 L1549.06 682.317 L1548.5 682.317 L1547.94 682.317 L1547.38 682.317 L1546.82 682.317 L1546.26 682.317 L1545.7 682.317 L1545.14 682.317 L1544.58 682.317 L1544.02 682.317 L1543.46 682.317 L1542.9 682.317 L1542.35 682.317 L1541.79 682.317 L1541.23 682.317 L1540.67 682.317 L1540.11 682.317 L1539.55 682.317 L1538.99 682.317 L1538.43 682.317 L1537.87 682.317 L1537.31 682.317 L1536.75 682.317 L1536.19 682.317 L1535.63 682.317 L1535.08 682.317 L1534.52 682.317 L1533.96 682.317 L1533.4 682.317 L1532.84 682.317 L1532.28 682.317 L1531.72 682.317 L1531.16 682.317 L1530.6 682.317 L1530.04 682.317 L1529.48 682.317 L1528.92 682.317 L1528.36 682.317 L1527.81 682.317 L1527.25 682.317 L1526.69 682.317 L1526.13 682.317 L1525.57 682.317 L1525.01 682.317 L1524.45 682.317 L1523.89 682.317 L1523.33 682.317 L1522.77 682.317 L1522.21 682.317 L1521.65 682.317 L1521.09 682.317 L1520.53 682.317 L1519.98 682.317 L1519.42 682.317 L1518.86 682.317 L1518.3 682.317 L1517.74 682.317 L1517.18 682.317 L1516.62 682.317 L1516.06 682.317 L1515.5 682.317 L1514.94 682.317 L1514.38 682.317 L1513.82 682.317 L1513.26 682.317 L1512.71 682.317 L1512.15 682.317 L1511.59 682.317 L1511.03 682.317 L1510.47 682.317 L1509.91 682.317 L1509.35 682.317 L1508.79 682.317 L1508.23 682.317 L1507.67 682.317 L1507.11 682.317 L1506.55 682.317 L1505.99 682.317 L1505.44 682.317 L1504.88 682.317 L1504.32 682.317 L1503.76 682.317 L1503.2 682.317 L1502.64 682.317 L1502.08 682.317 L1501.52 682.317 L1500.96 682.317 L1500.4 682.317 L1499.84 682.317 L1499.28 682.317 L1498.72 682.317 L1498.16 682.317 L1497.61 682.317 L1497.05 682.317 L1496.49 682.317 L1495.93 682.317 L1495.37 682.317 L1494.81 682.317 L1494.25 682.317 L1493.69 682.317 L1493.13 682.317 L1492.57 682.317 L1492.01 682.317 L1491.45 682.317 L1490.89 682.317 L1490.34 682.317 L1489.78 682.317 L1489.22 682.317 L1488.66 682.317 L1488.1 682.317 L1487.54 682.317 L1486.98 682.317 L1486.42 682.317 L1485.86 682.317 L1485.3 682.317 L1484.74 682.317 L1484.18 682.317 L1483.62 682.317 L1483.07 682.317 L1482.51 682.317 L1481.95 682.317 L1481.39 682.317 L1480.83 682.317 L1480.27 682.317 L1479.71 682.317 L1479.15 682.317 L1478.59 682.317 L1478.03 682.317 L1477.47 682.317 L1476.91 682.317 L1476.35 682.317 L1475.79 682.317 L1475.24 682.317 L1474.68 682.317 L1474.12 682.317 L1473.56 682.317 L1473 682.317 L1472.44 682.317 L1471.88 682.317 L1471.32 682.317 L1470.76 682.317 L1470.2 682.317 L1469.64 682.317 L1469.08 682.317 L1468.52 682.317 L1467.97 682.317 L1467.41 682.317 L1466.85 682.317 L1466.29 682.317 L1465.73 682.317 L1465.17 682.317 L1464.61 682.317 L1464.05 682.317 L1463.49 682.317 L1462.93 682.317 L1462.37 682.317 L1461.81 682.317 L1461.25 682.317 L1460.7 682.317 L1460.14 682.317 L1459.58 682.317 L1459.02 682.317 L1458.46 682.317 L1457.9 682.317 L1457.34 682.317 L1456.78 682.317 L1456.22 682.317 L1455.66 682.317 L1455.1 682.317 L1454.54 682.317 L1453.98 682.317 L1453.42 682.317 L1452.87 682.317 L1452.31 682.317 L1451.75 682.317 L1451.19 682.317 L1450.63 682.317 L1450.07 682.317 L1449.51 682.317 L1448.95 682.317 L1448.39 682.317 L1447.83 682.317 L1447.27 682.317 L1446.71 682.317 L1446.15 682.317 L1445.6 682.317 L1445.04 682.317 L1444.48 682.317 L1443.92 682.317 L1443.36 682.317 L1442.8 682.317 L1442.24 682.317 L1441.68 682.317 L1441.12 682.317 L1440.56 682.317 L1440 682.317 L1439.44 682.317 L1438.88 682.317 L1438.33 682.317 L1437.77 682.317 L1437.21 682.317 L1436.65 682.317 L1436.09 682.317 L1435.53 682.317 L1434.97 682.317 L1434.41 682.317 L1433.85 682.317 L1433.29 682.317 L1432.73 682.317 L1432.17 682.317 L1431.61 682.317 L1431.05 682.317 L1430.5 682.317 L1429.94 682.317 L1429.38 682.317 L1428.82 682.317 L1428.26 682.317 L1427.7 682.317 L1427.14 682.317 L1426.58 682.317 L1426.02 682.317 L1425.46 682.317 L1424.9 682.317 L1424.34 682.317 L1423.78 682.317 L1423.23 682.317 L1422.67 682.317 L1422.11 682.317 L1421.55 682.317 L1420.99 682.317 L1420.43 682.317 L1419.87 682.317 L1419.31 682.317 L1418.75 682.317 L1418.19 682.317 L1417.63 682.317 L1417.07 682.317 L1416.51 682.317 L1415.95 682.317 L1415.4 682.317 L1414.84 682.317 L1414.28 682.317 L1413.72 682.317 L1413.16 682.317 L1412.6 682.317 L1412.04 682.317 L1411.48 682.317 L1410.92 682.317 L1410.36 682.317 L1409.8 682.317 L1409.24 682.317 L1408.68 682.317 L1408.13 682.317 L1407.57 682.317 L1407.01 682.317 L1406.45 682.317 L1405.89 682.317 L1405.33 682.317 L1404.77 682.317 L1404.21 682.317 L1403.65 682.317 L1403.09 682.317 L1402.53 682.317 L1401.97 682.317 L1401.41 682.317 L1400.86 682.317 L1400.3 682.317 L1399.74 682.317 L1399.18 682.317 L1398.62 682.317 L1398.06 682.317 L1397.5 682.317 L1396.94 682.317 L1396.38 682.317 L1395.82 682.317 L1395.26 682.317 L1394.7 682.317 L1394.14 682.317 L1393.58 682.317 L1393.03 682.317 L1392.47 682.317 L1391.91 682.317 L1391.35 682.317 L1390.79 682.317 L1390.23 682.317 L1389.67 682.317 L1389.11 682.317 L1388.55 682.317 L1387.99 682.317 L1387.43 682.317 L1386.87 682.317 L1386.31 682.317 L1385.76 682.317 L1385.2 682.317 L1384.64 682.317 L1384.08 682.317 L1383.52 682.317 L1382.96 682.317 L1382.4 682.317 L1381.84 682.317 L1381.28 682.317 L1380.72 682.317 L1380.16 682.317 L1379.6 682.317 L1379.04 682.317 L1378.49 682.317 L1377.93 682.317 L1377.37 682.317 L1376.81 682.317 L1376.25 682.317 L1375.69 682.317 L1375.13 682.317 L1374.57 682.317 L1374.01 682.317 L1373.45 682.317 L1372.89 682.317 L1372.33 682.317 L1371.77 682.317 L1371.21 682.317 L1370.66 682.317 L1370.1 682.317 L1369.54 682.317 L1368.98 682.317 L1368.42 682.317 L1367.86 682.317 L1367.3 682.317 L1366.74 682.317 L1366.18 682.317 L1365.62 682.317 L1365.06 682.317 L1364.5 682.317 L1363.94 682.317 L1363.39 682.317 L1362.83 682.317 L1362.27 682.317 L1361.71 682.317 L1361.15 682.317 L1360.59 682.317 L1360.03 682.317 L1359.47 682.317 L1358.91 682.317 L1358.35 682.317 L1357.79 682.317 L1357.23 682.317 L1356.67 682.317 L1356.12 682.317 L1355.56 682.317 L1355 682.317 L1354.44 682.317 L1353.88 682.317 L1353.32 682.317 L1352.76 682.317 L1352.2 682.317 L1351.64 682.317 L1351.08 682.317 L1350.52 682.317 L1349.96 682.317 L1349.4 682.317 L1348.84 682.317 L1348.29 682.317 L1347.73 682.317 L1347.17 682.317 L1346.61 682.317 L1346.05 682.317 L1345.49 682.317 L1344.93 682.317 L1344.37 682.317 L1343.81 682.317 L1343.25 682.317 L1342.69 682.317 L1342.13 682.317 L1341.57 682.317 L1341.02 682.317 L1340.46 682.317 L1339.9 682.317 L1339.34 682.317 L1338.78 682.317 L1338.22 682.317 L1337.66 682.317 L1337.1 682.317 L1336.54 682.317 L1335.98 682.317 L1335.42 682.317 L1334.86 682.317 L1334.3 682.317 L1333.75 682.317 L1333.19 682.317 L1332.63 682.317 L1332.07 682.317 L1331.51 682.317 L1330.95 682.317 L1330.39 682.317 L1329.83 682.317 L1329.27 682.317 L1328.71 682.317 L1328.15 682.317 L1327.59 682.317 L1327.03 682.317 L1326.47 682.317 L1325.92 682.317 L1325.36 682.317 L1324.8 682.317 L1324.24 682.317 L1323.68 682.317 L1323.12 682.317 L1322.56 682.317 L1322 682.317 L1321.44 682.317 L1320.88 682.317 L1320.32 682.317 L1319.76 682.317 L1319.2 682.317 L1318.65 682.317 L1318.09 682.317 L1317.53 682.317 L1316.97 682.317 L1316.41 682.317 L1315.85 682.317 L1315.29 682.317 L1314.73 682.317 L1314.17 682.317 L1313.61 682.317 L1313.05 682.317 L1312.49 682.317 L1311.93 682.317 L1311.38 682.317 L1310.82 682.317 L1310.26 682.317 L1309.7 682.317 L1309.14 682.317 L1308.58 682.317 L1308.02 682.317 L1307.46 682.317 L1306.9 682.317 L1306.34 682.317 L1305.78 682.317 L1305.22 682.317 L1304.66 682.317 L1304.1 682.317 L1303.55 682.317 L1302.99 682.317 L1302.43 682.317 L1301.87 682.317 L1301.31 682.317 L1300.75 682.317 L1300.19 682.317 L1299.63 682.317 L1299.07 682.317 L1298.51 682.317 L1297.95 682.317 L1297.39 682.317 L1296.83 682.317 L1296.28 682.317 L1295.72 682.317 L1295.16 682.317 L1294.6 682.317 L1294.04 682.317 L1293.48 682.317 L1292.92 682.317 L1292.36 682.317 L1291.8 682.317 L1291.24 682.317 L1290.68 682.317 L1290.12 682.317 L1289.56 682.317 L1289 682.317 L1288.45 682.317 L1287.89 682.317 L1287.33 682.317 L1286.77 682.317 L1286.21 682.317 L1285.65 682.317 L1285.09 682.317 L1284.53 682.317 L1283.97 682.317 L1283.41 682.317 L1282.85 682.317 L1282.29 682.317 L1281.73 682.317 L1281.18 682.317 L1280.62 682.317 L1280.06 682.317 L1279.5 682.317 L1278.94 682.317 L1278.38 682.317 L1277.82 682.317 L1277.26 682.317 L1276.7 682.317 L1276.14 682.317 L1275.58 682.317 L1275.02 682.317 L1274.46 682.317 L1273.91 682.317 L1273.35 682.317 L1272.79 682.317 L1272.23 682.317 L1271.67 682.317 L1271.11 682.317 L1270.55 682.317 L1269.99 682.317 L1269.43 682.317 L1268.87 682.317 L1268.31 682.317 L1267.75 682.317 L1267.19 682.317 L1266.63 682.317 L1266.08 682.317 L1265.52 682.317 L1264.96 682.317 L1264.4 682.317 L1263.84 682.317 L1263.28 682.317 L1262.72 682.317 L1262.16 682.317 L1261.6 682.317 L1261.04 682.317 L1260.48 682.317 L1259.92 682.317 L1259.36 682.317 L1258.81 682.317 L1258.25 682.317 L1257.69 682.317 L1257.13 682.317 L1256.57 682.317 L1256.01 682.317 L1255.45 682.317 L1254.89 682.317 L1254.33 682.317 L1253.77 682.317 L1253.21 682.317 L1252.65 682.317 L1252.09 682.317 L1251.54 682.317 L1250.98 682.317 L1250.42 682.317 L1249.86 682.317 L1249.3 682.317 L1248.74 682.317 L1248.18 682.317 L1247.62 682.317 L1247.06 682.317 L1246.5 682.317 L1245.94 682.317 L1245.38 682.317 L1244.82 682.317 L1244.26 682.317 L1243.71 682.317 L1243.15 682.317 L1242.59 682.317 L1242.03 682.317 L1241.47 682.317 L1240.91 682.317 L1240.35 682.317 L1239.79 682.317 L1239.23 682.317 L1238.67 682.317 L1238.11 682.317 L1237.55 682.317 L1236.99 682.317 L1236.44 682.317 L1235.88 682.317 L1235.32 682.317 L1234.76 682.317 L1234.2 682.317 L1233.64 682.317 L1233.08 682.317 L1232.52 682.317 L1231.96 682.317 L1231.4 682.317 L1230.84 682.317 L1230.28 682.317 L1229.72 682.317 L1229.17 682.317 L1228.61 682.317 L1228.05 682.317 L1227.49 682.317 L1226.93 682.317 L1226.37 682.317 L1225.81 682.317 L1225.25 682.317 L1224.69 682.317 L1224.13 682.317 L1223.57 682.317 L1223.01 682.317 L1222.45 682.317 L1221.89 682.317 L1221.34 682.317 L1220.78 682.317 L1220.22 682.317 L1219.66 682.317 L1219.1 682.317 L1218.54 682.317 L1217.98 682.317 L1217.42 682.317 L1216.86 682.317 L1216.3 682.317 L1215.74 682.317 L1215.18 682.317 L1214.62 682.317 L1214.07 682.317 L1213.51 682.317 L1212.95 682.317 L1212.39 682.317 L1211.83 682.317 L1211.27 682.317 L1210.71 682.317 L1210.15 682.317 L1209.59 682.317 L1209.03 682.317 L1208.47 682.317 L1207.91 682.317 L1207.35 682.317 L1206.8 682.317 L1206.24 682.317 L1205.68 682.317 L1205.12 682.317 L1204.56 682.317 L1204 682.317 L1203.44 682.317 L1202.88 682.317 L1202.32 682.317 L1201.76 682.317 L1201.2 682.317 L1200.64 682.317 L1200.08 682.317 L1199.52 682.317 L1198.97 682.317 L1198.41 682.317 L1197.85 682.317 L1197.29 682.317 L1196.73 682.317 L1196.17 682.317 L1195.61 682.317 L1195.05 682.317 L1194.49 682.317 L1193.93 682.317 L1193.37 682.317 L1192.81 682.317 L1192.25 682.317 L1191.7 682.317 L1191.14 682.317 L1190.58 682.317 L1190.02 682.317 L1189.46 682.317 L1188.9 682.317 L1188.34 682.317 L1187.78 682.317 L1187.22 682.317 L1186.66 682.317 L1186.1 682.317 L1185.54 682.317 L1184.98 682.317 L1184.43 682.317 L1183.87 682.317 L1183.31 682.317 L1182.75 682.317 L1182.19 682.317 L1181.63 682.317 L1181.07 682.317 L1180.51 682.317 L1179.95 682.317 L1179.39 682.317 L1178.83 682.317 L1178.27 682.317 L1177.71 682.317 L1177.15 682.317 L1176.6 682.317 L1176.04 682.317 L1175.48 682.317 L1174.92 682.317 L1174.36 682.317 L1173.8 682.317 L1173.24 682.317 L1172.68 682.317 L1172.12 682.317 L1171.56 682.317 L1171 682.317 L1170.44 682.317 L1169.88 682.317 L1169.33 682.317 L1168.77 682.317 L1168.21 682.317 L1167.65 682.317 L1167.09 682.317 L1166.53 682.317 L1165.97 682.317 L1165.41 682.317 L1164.85 682.317 L1164.29 682.317 L1163.73 682.317 L1163.17 682.317 L1162.61 682.317 L1162.05 682.317 L1161.5 682.317 L1160.94 682.317 L1160.38 682.317 L1159.82 682.317 L1159.26 682.317 L1158.7 682.317 L1158.14 682.317 L1157.58 682.317 L1157.02 682.317 L1156.46 682.317 L1155.9 682.317 L1155.34 682.317 L1154.78 682.317 L1154.23 682.317 L1153.67 682.317 L1153.11 682.317 L1152.55 682.317 L1151.99 682.317 L1151.43 682.317 L1150.87 682.317 L1150.31 682.317 L1149.75 682.317 L1149.19 682.317 L1148.63 682.317 L1148.07 682.317 L1147.51 682.317 L1146.96 682.317 L1146.4 682.317 L1145.84 682.317 L1145.28 682.317 L1144.72 682.317 L1144.16 682.317 L1143.6 682.317 L1143.04 682.317 L1142.48 682.317 L1141.92 682.317 L1141.36 682.317 L1140.8 682.317 L1140.24 682.317 L1139.68 682.317 L1139.13 682.317 L1138.57 682.317 L1138.01 682.317 L1137.45 682.317 L1136.89 682.317 L1136.33 682.317 L1135.77 682.317 L1135.21 682.317 L1134.65 682.317 L1134.09 682.317 L1133.53 682.317 L1132.97 682.317 L1132.41 682.317 L1131.86 682.317 L1131.3 682.317 L1130.74 682.317 L1130.18 682.317 L1129.62 682.317 L1129.06 682.317 L1128.5 682.317 L1127.94 682.317 L1127.38 682.317 L1126.82 682.317 L1126.26 682.317 L1125.7 682.317 L1125.14 682.317 L1124.59 682.317 L1124.03 682.317 L1123.47 682.317 L1122.91 682.317 L1122.35 682.317 L1121.79 682.317 L1121.23 682.317 L1120.67 682.317 L1120.11 682.317 L1119.55 682.317 L1118.99 682.317 L1118.43 682.317 L1117.87 682.317 L1117.31 682.317 L1116.76 682.317 L1116.2 682.317 L1115.64 682.317 L1115.08 682.317 L1114.52 682.317 L1113.96 682.317 L1113.4 682.317 L1112.84 682.317 L1112.28 682.317 L1111.72 682.317 L1111.16 682.317 L1110.6 682.317 L1110.04 682.317 L1109.49 682.317 L1108.93 682.317 L1108.37 682.317 L1107.81 682.317 L1107.25 682.317 L1106.69 682.317 L1106.13 682.317 L1105.57 682.317 L1105.01 682.317 L1104.45 682.317 L1103.89 682.317 L1103.33 682.317 L1102.77 682.317 L1102.22 682.317 L1101.66 682.317 L1101.1 682.317 L1100.54 682.317 L1099.98 682.317 L1099.42 682.317 L1098.86 682.317 L1098.3 682.317 L1097.74 682.317 L1097.18 682.317 L1096.62 682.317 L1096.06 682.317 L1095.5 682.317 L1094.94 682.317 L1094.39 682.317 L1093.83 682.317 L1093.27 682.317 L1092.71 682.317 L1092.15 682.317 L1091.59 682.317 L1091.03 682.317 L1090.47 682.317 L1089.91 682.317 L1089.35 682.317 L1088.79 682.317 L1088.23 682.317 L1087.67 682.317 L1087.12 682.317 L1086.56 682.317 L1086 682.317 L1085.44 682.317 L1084.88 682.317 L1084.32 682.317 L1083.76 682.317 L1083.2 682.317 L1082.64 682.317 L1082.08 682.317 L1081.52 682.317 L1080.96 682.317 L1080.4 682.317 L1079.85 682.317 L1079.29 682.317 L1078.73 682.317 L1078.17 682.317 L1077.61 682.317 L1077.05 682.317 L1076.49 682.317 L1075.93 682.317 L1075.37 682.317 L1074.81 682.317 L1074.25 682.317 L1073.69 682.317 L1073.13 682.317 L1072.57 682.317 L1072.02 682.317 L1071.46 682.317 L1070.9 682.317 L1070.34 682.317 L1069.78 682.317 L1069.22 682.317 L1068.66 682.317 L1068.1 682.317 L1067.54 682.317 L1066.98 682.317 L1066.42 682.317 L1065.86 682.317 L1065.3 682.317 L1064.75 682.317 L1064.19 682.317 L1063.63 682.317 L1063.07 682.317 L1062.51 682.317 L1061.95 682.317 L1061.39 682.317 L1060.83 682.317 L1060.27 682.317 L1059.71 682.317 L1059.15 682.317 L1058.59 682.317 L1058.03 682.317 L1057.48 682.317 L1056.92 682.317 L1056.36 682.317 L1055.8 682.317 L1055.24 682.317 L1054.68 682.317 L1054.12 682.317 L1053.56 682.317 L1053 682.317 L1052.44 682.317 L1051.88 682.317 L1051.32 682.317 L1050.76 682.317 L1050.2 682.317 L1049.65 682.317 L1049.09 682.317 L1048.53 682.317 L1047.97 682.317 L1047.41 682.317 L1046.85 682.317 L1046.29 682.317 L1045.73 682.317 L1045.17 682.317 L1044.61 682.317 L1044.05 682.317 L1043.49 682.317 L1042.93 682.317 L1042.38 682.317 L1041.82 682.317 L1041.26 682.317 L1040.7 682.317 L1040.14 682.317 L1039.58 682.317 L1039.02 682.317 L1038.46 682.317 L1037.9 682.317 L1037.34 682.317 L1036.78 682.317 L1036.22 682.317 L1035.66 682.317 L1035.1 682.317 L1034.55 682.317 L1033.99 682.317 L1033.43 682.317 L1032.87 682.317 L1032.31 682.317 L1031.75 682.317 L1031.19 682.317 L1030.63 682.317 L1030.07 682.317 L1029.51 682.317 L1028.95 682.317 L1028.39 682.317 L1027.83 682.317 L1027.28 682.317 L1026.72 682.317 L1026.16 682.317 L1025.6 682.317 L1025.04 682.317 L1024.48 682.317 L1023.92 682.317 L1023.36 682.317 L1022.8 682.317 L1022.24 682.317 L1021.68 682.317 L1021.12 682.317 L1020.56 682.317 L1020.01 682.317 L1019.45 682.317 L1018.89 682.317 L1018.33 682.317 L1017.77 682.317 L1017.21 682.317 L1016.65 682.317 L1016.09 682.317 L1015.53 682.317 L1014.97 682.317 L1014.41 682.317 L1013.85 682.317 L1013.29 682.317 L1012.73 682.317 L1012.18 682.317 L1011.62 682.317 L1011.06 682.317 L1010.5 682.317 L1009.94 682.317 L1009.38 682.317 L1008.82 682.317 L1008.26 682.317 L1007.7 682.317 L1007.14 682.317 L1006.58 682.317 L1006.02 682.317 L1005.46 682.317 L1004.91 682.317 L1004.35 682.317 L1003.79 682.317 L1003.23 682.317 L1002.67 682.317 L1002.11 682.317 L1001.55 682.317 L1000.99 682.317 L1000.43 682.317 L999.872 682.317 L999.313 682.317 L998.754 682.317 L998.194 682.317 L997.635 682.317 L997.076 682.317 L996.517 682.317 L995.957 682.317 L995.398 682.317 L994.839 682.317 L994.28 682.317 L993.72 682.317 L993.161 682.317 L992.602 682.317 L992.043 682.317 L991.483 682.317 L990.924 682.317 L990.365 682.317 L989.806 682.317 L989.246 682.317 L988.687 682.317 L988.128 682.317 L987.569 682.317 L987.009 682.317 L986.45 682.317 L985.891 682.317 L985.332 682.317 L984.772 682.317 L984.213 682.317 L983.654 682.317 L983.095 682.317 L982.535 682.317 L981.976 682.317 L981.417 682.317 L980.858 682.317 L980.298 682.317 L979.739 682.317 L979.18 682.317 L978.621 682.317 L978.061 682.317 L977.502 682.317 L976.943 682.317 L976.384 682.317 L975.824 682.317 L975.265 682.317 L974.706 682.317 L974.147 682.317 L973.587 682.317 L973.028 682.317 L972.469 682.317 L971.91 682.317 L971.35 682.317 L970.791 682.317 L970.232 682.317 L969.673 682.317 L969.113 682.317 L968.554 682.317 L967.995 682.317 L967.436 682.317 L966.876 682.317 L966.317 682.317 L965.758 682.317 L965.199 682.317 L964.639 682.317 L964.08 682.317 L963.521 682.317 L962.962 682.317 L962.402 682.317 L961.843 682.317 L961.284 682.317 L960.725 682.317 L960.165 682.317 L959.606 682.317 L959.047 682.317 L958.488 682.317 L957.928 682.317 L957.369 682.317 L956.81 682.317 L956.251 682.317 L955.691 682.317 L955.132 682.317 L954.573 682.317 L954.014 682.317 L953.454 682.317 L952.895 682.317 L952.336 682.317 L951.777 682.317 L951.217 682.317 L950.658 682.317 L950.099 682.317 L949.54 682.317 L948.98 682.317 L948.421 682.317 L947.862 682.317 L947.303 682.317 L946.743 682.317 L946.184 682.317 L945.625 682.317 L945.066 682.317 L944.506 682.317 L943.947 682.317 L943.388 682.317 L942.829 682.317 L942.269 682.317 L941.71 682.317 L941.151 682.317 L940.592 682.317 L940.032 682.317 L939.473 682.317 L938.914 682.317 L938.355 682.317 L937.795 682.317 L937.236 682.317 L936.677 682.317 L936.118 682.317 L935.558 682.317 L934.999 682.317 L934.44 682.317 L933.881 682.317 L933.321 682.317 L932.762 682.317 L932.203 682.317 L931.644 682.317 L931.084 682.317 L930.525 682.317 L929.966 682.317 L929.406 682.317 L928.847 682.317 L928.288 682.317 L927.729 682.317 L927.169 682.317 L926.61 682.317 L926.051 682.317 L925.492 682.317 L924.932 682.317 L924.373 682.317 L923.814 682.317 L923.255 682.317 L922.695 682.317 L922.136 682.317 L921.577 682.317 L921.018 682.317 L920.458 682.317 L919.899 682.317 L919.34 682.317 L918.781 682.317 L918.221 682.317 L917.662 682.317 L917.103 682.317 L916.544 682.317 L915.984 682.317 L915.425 682.317 L914.866 682.317 L914.307 682.317 L913.747 682.317 L913.188 682.317 L912.629 682.317 L912.07 682.317 L911.51 682.317 L910.951 682.317 L910.392 682.317 L909.833 682.317 L909.273 682.317 L908.714 682.317 L908.155 682.317 L907.596 682.317 L907.036 682.317 L906.477 682.317 L905.918 682.317 L905.359 682.317 L904.799 682.317 L904.24 682.317 L903.681 682.317 L903.122 682.317 L902.562 682.317 L902.003 682.317 L901.444 682.317 L900.885 682.317 L900.325 682.317 L899.766 682.317 L899.207 682.317 L898.648 682.317 L898.088 682.317 L897.529 682.317 L896.97 682.317 L896.411 682.317 L895.851 682.317 L895.292 682.317 L894.733 682.317 L894.174 682.317 L893.614 682.317 L893.055 682.317 L892.496 682.317 L891.937 682.317 L891.377 682.317 L890.818 682.317 L890.259 682.317 L889.7 682.317 L889.14 682.317 L888.581 682.317 L888.022 682.317 L887.463 682.317 L886.903 682.317 L886.344 682.317 L885.785 682.317 L885.226 682.317 L884.666 682.317 L884.107 682.317 L883.548 682.317 L882.989 682.317 L882.429 682.317 L881.87 682.317 L881.311 682.317 L880.752 682.317 L880.192 682.317 L879.633 682.317 L879.074 682.317 L878.515 682.317 L877.955 682.317 L877.396 682.317 L876.837 682.317 L876.278 682.317 L875.718 682.317 L875.159 682.317 L874.6 682.317 L874.041 682.317 L873.481 682.317 L872.922 682.317 L872.363 682.317 L871.804 682.317 L871.244 682.317 L870.685 682.317 L870.126 682.317 L869.567 682.317 L869.007 682.317 L868.448 682.317 L867.889 682.317 L867.33 682.317 L866.77 682.317 L866.211 682.317 L865.652 682.317 L865.093 682.317 L864.533 682.317 L863.974 682.317 L863.415 682.317 L862.856 682.317 L862.296 682.317 L861.737 682.317 L861.178 682.317 L860.619 682.317 L860.059 682.317 L859.5 682.317 L858.941 682.317 L858.382 682.317 L857.822 682.317 L857.263 682.317 L856.704 682.317 L856.145 682.317 L855.585 682.317 L855.026 682.317 L854.467 682.317 L853.908 682.317 L853.348 682.317 L852.789 682.317 L852.23 682.317 L851.671 682.317 L851.111 682.317 L850.552 682.317 L849.993 682.317 L849.434 682.317 L848.874 682.317 L848.315 682.317 L847.756 682.317 L847.197 682.317 L846.637 682.317 L846.078 682.317 L845.519 682.317 L844.96 682.317 L844.4 682.317 L843.841 682.317 L843.282 682.317 L842.723 682.317 L842.163 682.317 L841.604 682.317 L841.045 682.317 L840.486 682.317 L839.926 682.317 L839.367 682.317 L838.808 682.317 L838.249 682.317 L837.689 682.317 L837.13 682.317 L836.571 682.317 L836.012 682.317 L835.452 682.317 L834.893 682.317 L834.334 682.317 L833.775 682.317 L833.215 682.317 L832.656 682.317 L832.097 682.317 L831.538 682.317 L830.978 682.317 L830.419 682.317 L829.86 682.317 L829.301 682.317 L828.741 682.317 L828.182 682.317 L827.623 682.317 L827.064 682.317 L826.504 682.317 L825.945 682.317 L825.386 682.317 L824.827 682.317 L824.267 682.317 L823.708 682.317 L823.149 682.317 L822.59 682.317 L822.03 682.317 L821.471 682.317 L820.912 682.317 L820.353 682.317 L819.793 682.317 L819.234 682.317 L818.675 682.317 L818.116 682.317 L817.556 682.317 L816.997 682.317 L816.438 682.317 L815.879 682.317 L815.319 682.317 L814.76 682.317 L814.201 682.317 L813.642 682.317 L813.082 682.317 L812.523 682.317 L811.964 682.317 L811.405 682.317 L810.845 682.317 L810.286 682.317 L809.727 682.317 L809.168 682.317 L808.608 682.317 L808.049 682.317 L807.49 682.317 L806.931 682.317 L806.371 682.317 L805.812 682.317 L805.253 682.317 L804.693 682.317 L804.134 682.317 L803.575 682.317 L803.016 682.317 L802.456 682.317 L801.897 682.317 L801.338 682.317 L800.779 682.317 L800.219 682.317 L799.66 682.317 L799.101 682.317 L798.542 682.317 L797.982 682.317 L797.423 682.317 L796.864 682.317 L796.305 682.317 L795.745 682.317 L795.186 682.317 L794.627 682.317 L794.068 682.317 L793.508 682.317 L792.949 682.317 L792.39 682.317 L791.831 682.317 L791.271 682.317 L790.712 682.317 L790.153 682.317 L789.594 682.317 L789.034 682.317 L788.475 682.317 L787.916 682.317 L787.357 682.317 L786.797 682.317 L786.238 682.317 L785.679 682.317 L785.12 682.317 L784.56 682.317 L784.001 682.317 L783.442 682.317 L782.883 682.317 L782.323 682.317 L781.764 682.317 L781.205 682.317 L780.646 682.317 L780.086 682.317 L779.527 682.317 L778.968 682.317 L778.409 682.317 L777.849 682.317 L777.29 682.317 L776.731 682.317 L776.172 682.317 L775.612 682.317 L775.053 682.317 L774.494 682.317 L773.935 682.317 L773.375 682.317 L772.816 682.317 L772.257 682.317 L771.698 682.317 L771.138 682.317 L770.579 682.317 L770.02 682.317 L769.461 682.317 L768.901 682.317 L768.342 682.317 L767.783 682.317 L767.224 682.317 L766.664 682.317 L766.105 682.317 L765.546 682.317 L764.987 682.317 L764.427 682.317 L763.868 682.317 L763.309 682.317 L762.75 682.317 L762.19 682.317 L761.631 682.317 L761.072 682.317 L760.513 682.317 L759.953 682.317 L759.394 682.317 L758.835 682.317 L758.276 682.317 L757.716 682.317 L757.157 682.317 L756.598 682.317 L756.039 682.317 L755.479 682.317 L754.92 682.317 L754.361 682.317 L753.802 682.317 L753.242 682.317 L752.683 682.317 L752.124 682.317 L751.565 682.317 L751.005 682.317 L750.446 682.317 L749.887 682.317 L749.328 682.317 L748.768 682.317 L748.209 682.317 L747.65 682.317 L747.091 682.317 L746.531 682.317 L745.972 682.317 L745.413 682.317 L744.854 682.317 L744.294 682.317 L743.735 682.317 L743.176 682.317 L742.617 682.317 L742.057 682.317 L741.498 682.317 L740.939 682.317 L740.38 682.317 L739.82 682.317 L739.261 682.317 L738.702 682.317 L738.143 682.317 L737.583 682.317 L737.024 682.317 L736.465 682.317 L735.906 682.317 L735.346 682.317 L734.787 682.317 L734.228 682.317 L733.669 682.317 L733.109 682.317 L732.55 682.317 L731.991 682.317 L731.432 682.317 L730.872 682.317 L730.313 682.317 L729.754 682.317 L729.195 682.317 L728.635 682.317 L728.076 682.317 L727.517 682.317 L726.958 682.317 L726.398 682.317 L725.839 682.317 L725.28 682.317 L724.721 682.317 L724.161 682.317 L723.602 682.317 L723.043 682.317 L722.484 682.317 L721.924 682.317 L721.365 682.317 L720.806 682.317 L720.247 682.317  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip233)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.005 720.806,683.005 721.365,683.005 721.924,683.005 722.484,683.005 723.043,683.005 723.602,683.005 724.161,683.005 724.721,683.005 725.28,683.005 725.839,683.005 726.398,683.005 726.958,683.005 727.517,683.005 728.076,683.005 728.635,683.005 729.195,683.005 729.754,683.005 730.313,683.005 730.872,683.005 731.432,683.005 731.991,683.005 732.55,683.005 733.109,683.005 733.669,683.005 734.228,683.005 734.787,683.005 735.346,683.005 735.906,683.005 736.465,683.005 737.024,683.005 737.583,683.005 738.143,683.005 738.702,683.005 739.261,683.005 739.82,683.005 740.38,683.005 740.939,683.005 741.498,683.005 742.057,683.005 742.617,683.005 743.176,683.005 743.735,683.005 744.294,683.005 744.854,683.005 745.413,683.005 745.972,683.005 746.531,683.005 747.091,683.005 747.65,683.005 748.209,683.005 748.768,683.005 749.328,683.005 749.887,683.005 750.446,683.005 751.005,683.005 751.565,683.005 752.124,683.005 752.683,683.005 753.242,683.005 753.802,683.005 754.361,683.005 754.92,683.005 755.479,683.005 756.039,683.005 756.598,683.005 757.157,683.005 757.716,683.005 758.276,683.005 758.835,683.005 759.394,683.005 759.953,683.005 760.513,683.005 761.072,683.005 761.631,683.005 762.19,683.005 762.75,683.005 763.309,683.005 763.868,683.005 764.427,683.005 764.987,683.005 765.546,683.005 766.105,683.005 766.664,683.005 767.224,683.005 767.783,683.005 768.342,683.005 768.901,683.005 769.461,683.005 770.02,683.005 770.579,683.005 771.138,683.005 771.698,683.005 772.257,683.005 772.816,683.005 773.375,683.005 773.935,683.005 774.494,683.005 775.053,683.005 775.612,683.005 776.172,683.005 776.731,683.005 777.29,683.005 777.849,683.005 778.409,683.005 778.968,683.005 779.527,683.005 780.086,683.005 780.646,683.005 781.205,683.005 781.764,683.005 782.323,683.005 782.883,683.005 783.442,683.005 784.001,683.005 784.56,683.005 785.12,683.005 785.679,683.005 786.238,683.005 786.797,683.005 787.357,683.005 787.916,683.005 788.475,683.005 789.034,683.005 789.594,683.005 790.153,683.005 790.712,683.005 791.271,683.005 791.831,683.005 792.39,683.005 792.949,683.005 793.508,683.005 794.068,683.005 794.627,683.005 795.186,683.005 795.745,683.005 796.305,683.005 796.864,683.005 797.423,683.005 797.982,683.005 798.542,683.005 799.101,683.005 799.66,683.005 800.219,683.005 800.779,683.005 801.338,683.005 801.897,683.005 802.456,683.005 803.016,683.005 803.575,683.005 804.134,683.005 804.693,683.005 805.253,683.005 805.812,683.005 806.371,683.005 806.931,683.005 807.49,683.005 808.049,683.005 808.608,683.005 809.168,683.005 809.727,683.005 810.286,683.005 810.845,683.005 811.405,683.005 811.964,683.005 812.523,683.005 813.082,683.005 813.642,683.005 814.201,683.005 814.76,683.005 815.319,683.005 815.879,683.005 816.438,683.005 816.997,683.005 817.556,683.005 818.116,683.005 818.675,683.005 819.234,683.005 819.793,683.005 820.353,683.005 820.912,683.005 821.471,683.005 822.03,683.005 822.59,683.005 823.149,683.005 823.708,683.005 824.267,683.005 824.827,683.005 825.386,683.005 825.945,683.005 826.504,683.005 827.064,683.005 827.623,683.005 828.182,683.005 828.741,683.005 829.301,683.005 829.86,683.005 830.419,683.005 830.978,683.005 831.538,683.005 832.097,683.005 832.656,683.005 833.215,683.005 833.775,683.005 834.334,683.005 834.893,683.005 835.452,683.005 836.012,683.005 836.571,683.005 837.13,683.005 837.689,683.005 838.249,683.005 838.808,683.005 839.367,683.005 839.926,683.005 840.486,683.005 841.045,683.005 841.604,683.005 842.163,683.005 842.723,683.005 843.282,683.005 843.841,683.005 844.4,683.005 844.96,683.005 845.519,683.005 846.078,683.005 846.637,683.005 847.197,683.005 847.756,683.005 848.315,683.005 848.874,683.005 849.434,683.005 849.993,683.005 850.552,683.005 851.111,683.005 851.671,683.005 852.23,683.005 852.789,683.005 853.348,683.005 853.908,683.005 854.467,683.005 855.026,683.005 855.585,683.005 856.145,683.005 856.704,683.005 857.263,683.005 857.822,683.005 858.382,683.005 858.941,683.005 859.5,683.005 860.059,683.005 860.619,683.005 861.178,683.005 861.737,683.005 862.296,683.005 862.856,683.005 863.415,683.005 863.974,683.005 864.533,683.005 865.093,683.005 865.652,683.005 866.211,683.005 866.77,683.005 867.33,683.005 867.889,683.005 868.448,683.005 869.007,683.005 869.567,683.005 870.126,683.005 870.685,683.005 871.244,683.005 871.804,683.005 872.363,683.005 872.922,683.005 873.481,683.005 874.041,683.005 874.6,683.005 875.159,683.005 875.718,683.005 876.278,683.005 876.837,683.005 877.396,683.005 877.955,683.005 878.515,683.005 879.074,683.005 879.633,683.005 880.192,683.005 880.752,683.005 881.311,683.005 881.87,683.005 882.429,683.005 882.989,683.005 883.548,683.005 884.107,683.005 884.666,683.005 885.226,683.005 885.785,683.005 886.344,683.005 886.903,683.005 887.463,683.005 888.022,683.005 888.581,683.005 889.14,683.005 889.7,683.005 890.259,683.005 890.818,683.005 891.377,683.005 891.937,683.005 892.496,683.005 893.055,683.005 893.614,683.005 894.174,683.005 894.733,683.005 895.292,683.005 895.851,683.005 896.411,683.005 896.97,683.005 897.529,683.005 898.088,683.005 898.648,683.005 899.207,683.005 899.766,683.005 900.325,683.005 900.885,683.005 901.444,683.005 902.003,683.005 902.562,683.005 903.122,683.005 903.681,683.005 904.24,683.005 904.799,683.005 905.359,683.005 905.918,683.005 906.477,683.005 907.036,683.005 907.596,683.005 908.155,683.005 908.714,683.005 909.273,683.005 909.833,683.005 910.392,683.005 910.951,683.005 911.51,683.005 912.07,683.005 912.629,683.005 913.188,683.005 913.747,683.005 914.307,683.005 914.866,683.005 915.425,683.005 915.984,683.005 916.544,683.005 917.103,683.005 917.662,683.005 918.221,683.005 918.781,683.005 919.34,683.005 919.899,683.005 920.458,683.005 921.018,683.005 921.577,683.005 922.136,683.005 922.695,683.005 923.255,683.005 923.814,683.005 924.373,683.005 924.932,683.005 925.492,683.005 926.051,683.005 926.61,683.005 927.169,683.005 927.729,683.005 928.288,683.005 928.847,683.005 929.406,683.005 929.966,683.005 930.525,683.005 931.084,683.005 931.644,683.005 932.203,683.005 932.762,683.005 933.321,683.005 933.881,683.005 934.44,683.005 934.999,683.005 935.558,683.005 936.118,683.005 936.677,683.005 937.236,683.005 937.795,683.005 938.355,683.005 938.914,683.005 939.473,683.005 940.032,683.005 940.592,683.005 941.151,683.005 941.71,683.005 942.269,683.005 942.829,683.005 943.388,683.005 943.947,683.005 944.506,683.005 945.066,683.005 945.625,683.005 946.184,683.005 946.743,683.005 947.303,683.005 947.862,683.005 948.421,683.005 948.98,683.005 949.54,683.005 950.099,683.005 950.658,683.005 951.217,683.005 951.777,683.005 952.336,683.005 952.895,683.005 953.454,683.005 954.014,683.005 954.573,683.005 955.132,683.005 955.691,683.005 956.251,683.005 956.81,683.005 957.369,683.005 957.928,683.005 958.488,683.005 959.047,683.005 959.606,683.005 960.165,683.005 960.725,683.005 961.284,683.005 961.843,683.005 962.402,683.005 962.962,683.005 963.521,683.005 964.08,683.005 964.639,683.005 965.199,683.005 965.758,683.005 966.317,683.005 966.876,683.005 967.436,683.005 967.995,683.005 968.554,683.005 969.113,683.005 969.673,683.005 970.232,683.005 970.791,683.005 971.35,683.005 971.91,683.005 972.469,683.005 973.028,683.005 973.587,683.005 974.147,683.005 974.706,683.005 975.265,683.005 975.824,683.005 976.384,683.005 976.943,683.005 977.502,683.005 978.061,683.005 978.621,683.005 979.18,683.005 979.739,683.005 980.298,683.005 980.858,683.005 981.417,683.005 981.976,683.005 982.535,683.005 983.095,683.005 983.654,683.005 984.213,683.005 984.772,683.005 985.332,683.005 985.891,683.005 986.45,683.005 987.009,683.005 987.569,683.005 988.128,683.005 988.687,683.005 989.246,683.005 989.806,683.005 990.365,683.005 990.924,683.005 991.483,683.005 992.043,683.005 992.602,683.005 993.161,683.005 993.72,683.005 994.28,683.005 994.839,683.005 995.398,683.005 995.957,683.005 996.517,683.005 997.076,683.005 997.635,683.005 998.194,683.005 998.754,683.005 999.313,683.005 999.872,683.005 1000.43,683.005 1000.99,683.005 1001.55,683.005 1002.11,683.005 1002.67,683.005 1003.23,683.005 1003.79,683.005 1004.35,683.005 1004.91,683.005 1005.46,683.005 1006.02,683.005 1006.58,683.005 1007.14,683.005 1007.7,683.005 1008.26,683.005 1008.82,683.005 1009.38,683.005 1009.94,683.005 1010.5,683.005 1011.06,683.005 1011.62,683.005 1012.18,683.005 1012.73,683.005 1013.29,683.005 1013.85,683.005 1014.41,683.005 1014.97,683.005 1015.53,683.005 1016.09,683.005 1016.65,683.005 1017.21,683.005 1017.77,683.005 1018.33,683.005 1018.89,683.005 1019.45,683.005 1020.01,683.005 1020.56,683.005 1021.12,683.005 1021.68,683.005 1022.24,683.005 1022.8,683.005 1023.36,683.005 1023.92,683.005 1024.48,683.005 1025.04,683.005 1025.6,683.005 1026.16,683.005 1026.72,683.005 1027.28,683.005 1027.83,683.005 1028.39,683.005 1028.95,683.005 1029.51,683.005 1030.07,683.005 1030.63,683.005 1031.19,683.005 1031.75,683.005 1032.31,683.005 1032.87,683.005 1033.43,683.005 1033.99,683.005 1034.55,683.005 1035.1,683.005 1035.66,683.005 1036.22,683.005 1036.78,683.005 1037.34,683.005 1037.9,683.005 1038.46,683.005 1039.02,683.005 1039.58,683.005 1040.14,683.005 1040.7,683.005 1041.26,683.005 1041.82,683.005 1042.38,683.005 1042.93,683.005 1043.49,683.005 1044.05,683.005 1044.61,683.005 1045.17,683.005 1045.73,683.005 1046.29,683.005 1046.85,683.005 1047.41,683.005 1047.97,683.005 1048.53,683.005 1049.09,683.005 1049.65,683.005 1050.2,683.005 1050.76,683.005 1051.32,683.005 1051.88,683.005 1052.44,683.005 1053,683.005 1053.56,683.005 1054.12,683.005 1054.68,683.005 1055.24,683.005 1055.8,683.005 1056.36,683.005 1056.92,683.005 1057.48,683.005 1058.03,683.005 1058.59,683.005 1059.15,683.005 1059.71,683.005 1060.27,683.005 1060.83,683.005 1061.39,683.005 1061.95,683.005 1062.51,683.005 1063.07,683.005 1063.63,683.005 1064.19,683.005 1064.75,683.005 1065.3,683.005 1065.86,683.005 1066.42,683.005 1066.98,683.005 1067.54,683.005 1068.1,683.005 1068.66,683.005 1069.22,683.005 1069.78,683.005 1070.34,683.005 1070.9,683.005 1071.46,683.005 1072.02,683.005 1072.57,683.005 1073.13,683.005 1073.69,683.005 1074.25,683.005 1074.81,683.005 1075.37,683.005 1075.93,683.005 1076.49,683.005 1077.05,683.005 1077.61,683.005 1078.17,683.005 1078.73,683.005 1079.29,683.005 1079.85,683.005 1080.4,683.005 1080.96,683.005 1081.52,683.005 1082.08,683.005 1082.64,683.005 1083.2,683.005 1083.76,683.005 1084.32,683.005 1084.88,683.005 1085.44,683.005 1086,683.005 1086.56,683.005 1087.12,683.005 1087.67,683.005 1088.23,683.005 1088.79,683.005 1089.35,683.005 1089.91,683.005 1090.47,683.005 1091.03,683.005 1091.59,683.005 1092.15,683.005 1092.71,683.005 1093.27,683.005 1093.83,683.005 1094.39,683.005 1094.94,683.005 1095.5,683.005 1096.06,683.005 1096.62,683.005 1097.18,683.005 1097.74,683.005 1098.3,683.005 1098.86,683.005 1099.42,683.005 1099.98,683.005 1100.54,683.005 1101.1,683.005 1101.66,683.005 1102.22,683.005 1102.77,683.005 1103.33,683.005 1103.89,683.005 1104.45,683.005 1105.01,683.005 1105.57,683.005 1106.13,683.005 1106.69,683.005 1107.25,683.005 1107.81,683.005 1108.37,683.005 1108.93,683.005 1109.49,683.005 1110.04,683.005 1110.6,683.005 1111.16,683.005 1111.72,683.005 1112.28,683.005 1112.84,683.005 1113.4,683.005 1113.96,683.005 1114.52,683.005 1115.08,683.005 1115.64,683.005 1116.2,683.005 1116.76,683.005 1117.31,683.005 1117.87,683.005 1118.43,683.005 1118.99,683.005 1119.55,683.005 1120.11,683.005 1120.67,683.005 1121.23,683.005 1121.79,683.005 1122.35,683.005 1122.91,683.005 1123.47,683.005 1124.03,683.005 1124.59,683.005 1125.14,683.005 1125.7,683.005 1126.26,683.005 1126.82,683.005 1127.38,683.005 1127.94,683.005 1128.5,683.005 1129.06,683.005 1129.62,683.005 1130.18,683.005 1130.74,683.005 1131.3,683.005 1131.86,683.005 1132.41,683.005 1132.97,683.005 1133.53,683.005 1134.09,683.005 1134.65,683.005 1135.21,683.005 1135.77,683.005 1136.33,683.005 1136.89,683.005 1137.45,683.005 1138.01,683.005 1138.57,683.005 1139.13,683.005 1139.68,683.005 1140.24,683.005 1140.8,683.005 1141.36,683.005 1141.92,683.005 1142.48,683.005 1143.04,683.005 1143.6,683.005 1144.16,683.005 1144.72,683.005 1145.28,683.005 1145.84,683.005 1146.4,683.005 1146.96,683.005 1147.51,683.005 1148.07,683.005 1148.63,683.005 1149.19,683.005 1149.75,683.005 1150.31,683.005 1150.87,683.005 1151.43,683.005 1151.99,683.005 1152.55,683.005 1153.11,683.005 1153.67,683.005 1154.23,683.005 1154.78,683.005 1155.34,683.005 1155.9,683.005 1156.46,683.005 1157.02,683.005 1157.58,683.005 1158.14,683.005 1158.7,683.005 1159.26,683.005 1159.82,683.005 1160.38,683.005 1160.94,683.005 1161.5,683.005 1162.05,683.005 1162.61,683.005 1163.17,683.005 1163.73,683.005 1164.29,683.005 1164.85,683.005 1165.41,683.005 1165.97,683.005 1166.53,683.005 1167.09,683.005 1167.65,683.005 1168.21,683.005 1168.77,683.005 1169.33,683.005 1169.88,683.005 1170.44,683.005 1171,683.005 1171.56,683.005 1172.12,683.005 1172.68,683.005 1173.24,683.005 1173.8,683.005 1174.36,683.005 1174.92,683.005 1175.48,683.005 1176.04,683.005 1176.6,683.005 1177.15,683.005 1177.71,683.005 1178.27,683.005 1178.83,683.005 1179.39,683.005 1179.95,683.005 1180.51,683.005 1181.07,683.005 1181.63,683.005 1182.19,683.005 1182.75,683.005 1183.31,683.005 1183.87,683.005 1184.43,683.005 1184.98,683.005 1185.54,683.005 1186.1,683.005 1186.66,683.005 1187.22,683.005 1187.78,683.005 1188.34,683.005 1188.9,683.005 1189.46,683.005 1190.02,683.005 1190.58,683.005 1191.14,683.005 1191.7,683.005 1192.25,683.005 1192.81,683.005 1193.37,683.005 1193.93,683.005 1194.49,683.005 1195.05,683.005 1195.61,683.005 1196.17,683.005 1196.73,683.005 1197.29,683.005 1197.85,683.005 1198.41,683.005 1198.97,683.005 1199.52,683.005 1200.08,683.005 1200.64,683.005 1201.2,683.005 1201.76,683.005 1202.32,683.005 1202.88,683.005 1203.44,683.005 1204,683.005 1204.56,683.005 1205.12,683.005 1205.68,683.005 1206.24,683.005 1206.8,683.005 1207.35,683.005 1207.91,683.005 1208.47,683.005 1209.03,683.005 1209.59,683.005 1210.15,683.005 1210.71,683.005 1211.27,683.005 1211.83,683.005 1212.39,683.005 1212.95,683.005 1213.51,683.005 1214.07,683.005 1214.62,683.005 1215.18,683.005 1215.74,683.005 1216.3,683.005 1216.86,683.005 1217.42,683.005 1217.98,683.005 1218.54,683.005 1219.1,683.005 1219.66,683.005 1220.22,683.005 1220.78,683.005 1221.34,683.005 1221.89,683.005 1222.45,683.005 1223.01,683.005 1223.57,683.005 1224.13,683.005 1224.69,683.005 1225.25,683.005 1225.81,683.005 1226.37,683.005 1226.93,683.005 1227.49,683.005 1228.05,683.005 1228.61,683.005 1229.17,683.005 1229.72,683.005 1230.28,683.005 1230.84,683.005 1231.4,683.005 1231.96,683.005 1232.52,683.005 1233.08,683.005 1233.64,683.005 1234.2,683.005 1234.76,683.005 1235.32,683.005 1235.88,683.005 1236.44,683.005 1236.99,683.005 1237.55,683.005 1238.11,683.005 1238.67,683.005 1239.23,683.005 1239.79,683.005 1240.35,683.005 1240.91,683.005 1241.47,683.005 1242.03,683.005 1242.59,683.005 1243.15,683.005 1243.71,683.005 1244.26,683.005 1244.82,683.005 1245.38,683.005 1245.94,683.005 1246.5,683.005 1247.06,683.005 1247.62,683.005 1248.18,683.005 1248.74,683.005 1249.3,683.005 1249.86,683.005 1250.42,683.005 1250.98,683.005 1251.54,683.005 1252.09,683.005 1252.65,683.005 1253.21,683.005 1253.77,683.005 1254.33,683.005 1254.89,683.005 1255.45,683.005 1256.01,683.005 1256.57,683.005 1257.13,683.005 1257.69,683.005 1258.25,683.005 1258.81,683.005 1259.36,683.005 1259.92,683.005 1260.48,683.005 1261.04,683.005 1261.6,683.005 1262.16,683.005 1262.72,683.005 1263.28,683.005 1263.84,683.005 1264.4,683.005 1264.96,683.005 1265.52,683.005 1266.08,683.005 1266.63,683.005 1267.19,683.005 1267.75,683.005 1268.31,683.005 1268.87,683.005 1269.43,683.005 1269.99,683.005 1270.55,683.005 1271.11,683.005 1271.67,683.005 1272.23,683.005 1272.79,683.005 1273.35,683.005 1273.91,683.005 1274.46,683.005 1275.02,683.005 1275.58,683.005 1276.14,683.005 1276.7,683.005 1277.26,683.005 1277.82,683.005 1278.38,683.005 1278.94,683.005 1279.5,683.005 1280.06,683.005 1280.62,683.005 1281.18,683.005 1281.73,683.005 1282.29,683.005 1282.85,683.005 1283.41,683.005 1283.97,683.005 1284.53,683.005 1285.09,683.005 1285.65,683.005 1286.21,683.005 1286.77,683.005 1287.33,683.005 1287.89,683.005 1288.45,683.005 1289,683.005 1289.56,683.005 1290.12,683.005 1290.68,683.005 1291.24,683.005 1291.8,683.005 1292.36,683.005 1292.92,683.005 1293.48,683.005 1294.04,683.005 1294.6,683.005 1295.16,683.005 1295.72,683.005 1296.28,683.005 1296.83,683.005 1297.39,683.005 1297.95,683.005 1298.51,683.005 1299.07,683.005 1299.63,683.005 1300.19,683.005 1300.75,683.005 1301.31,683.005 1301.87,683.005 1302.43,683.005 1302.99,683.005 1303.55,683.005 1304.1,683.005 1304.66,683.005 1305.22,683.005 1305.78,683.005 1306.34,683.005 1306.9,683.005 1307.46,683.005 1308.02,683.005 1308.58,683.005 1309.14,683.005 1309.7,683.005 1310.26,683.005 1310.82,683.005 1311.38,683.005 1311.93,683.005 1312.49,683.005 1313.05,683.005 1313.61,683.005 1314.17,683.005 1314.73,683.005 1315.29,683.005 1315.85,683.005 1316.41,683.005 1316.97,683.005 1317.53,683.005 1318.09,683.005 1318.65,683.005 1319.2,683.005 1319.76,683.005 1320.32,683.005 1320.88,683.005 1321.44,683.005 1322,683.005 1322.56,683.005 1323.12,683.005 1323.68,683.005 1324.24,683.005 1324.8,683.005 1325.36,683.005 1325.92,683.005 1326.47,683.005 1327.03,683.005 1327.59,683.005 1328.15,683.005 1328.71,683.005 1329.27,683.005 1329.83,683.005 1330.39,683.005 1330.95,683.005 1331.51,683.005 1332.07,683.005 1332.63,683.005 1333.19,683.005 1333.75,683.005 1334.3,683.005 1334.86,683.005 1335.42,683.005 1335.98,683.005 1336.54,683.005 1337.1,683.005 1337.66,683.005 1338.22,683.005 1338.78,683.005 1339.34,683.005 1339.9,683.005 1340.46,683.005 1341.02,683.005 1341.57,683.005 1342.13,683.005 1342.69,683.005 1343.25,683.005 1343.81,683.005 1344.37,683.005 1344.93,683.005 1345.49,683.005 1346.05,683.005 1346.61,683.005 1347.17,683.005 1347.73,683.005 1348.29,683.005 1348.84,683.005 1349.4,683.005 1349.96,683.005 1350.52,683.005 1351.08,683.005 1351.64,683.005 1352.2,683.005 1352.76,683.005 1353.32,683.005 1353.88,683.005 1354.44,683.005 1355,683.005 1355.56,683.005 1356.12,683.005 1356.67,683.005 1357.23,683.005 1357.79,683.005 1358.35,683.005 1358.91,683.005 1359.47,683.005 1360.03,683.005 1360.59,683.005 1361.15,683.005 1361.71,683.005 1362.27,683.005 1362.83,683.005 1363.39,683.005 1363.94,683.005 1364.5,683.005 1365.06,683.005 1365.62,683.005 1366.18,683.005 1366.74,683.005 1367.3,683.005 1367.86,683.005 1368.42,683.005 1368.98,683.005 1369.54,683.005 1370.1,683.005 1370.66,683.005 1371.21,683.005 1371.77,683.005 1372.33,683.005 1372.89,683.005 1373.45,683.005 1374.01,683.005 1374.57,683.005 1375.13,683.005 1375.69,683.005 1376.25,683.005 1376.81,683.005 1377.37,683.005 1377.93,683.005 1378.49,683.005 1379.04,683.005 1379.6,683.005 1380.16,683.005 1380.72,683.005 1381.28,683.005 1381.84,683.005 1382.4,683.005 1382.96,683.005 1383.52,683.005 1384.08,683.005 1384.64,683.005 1385.2,683.005 1385.76,683.005 1386.31,683.005 1386.87,683.005 1387.43,683.005 1387.99,683.005 1388.55,683.005 1389.11,683.005 1389.67,683.005 1390.23,683.005 1390.79,683.005 1391.35,683.005 1391.91,683.005 1392.47,683.005 1393.03,683.005 1393.58,683.005 1394.14,683.005 1394.7,683.005 1395.26,683.005 1395.82,683.005 1396.38,683.005 1396.94,683.005 1397.5,683.005 1398.06,683.005 1398.62,683.005 1399.18,683.005 1399.74,683.005 1400.3,683.005 1400.86,683.005 1401.41,683.005 1401.97,683.005 1402.53,683.005 1403.09,683.005 1403.65,683.005 1404.21,683.005 1404.77,683.005 1405.33,683.005 1405.89,683.005 1406.45,683.005 1407.01,683.005 1407.57,683.005 1408.13,683.005 1408.68,683.005 1409.24,683.005 1409.8,683.005 1410.36,683.005 1410.92,683.005 1411.48,683.005 1412.04,683.005 1412.6,683.005 1413.16,683.005 1413.72,683.005 1414.28,683.005 1414.84,683.005 1415.4,683.005 1415.95,683.005 1416.51,683.005 1417.07,683.005 1417.63,683.005 1418.19,683.005 1418.75,683.005 1419.31,683.005 1419.87,683.005 1420.43,683.005 1420.99,683.005 1421.55,683.005 1422.11,683.005 1422.67,683.005 1423.23,683.005 1423.78,683.005 1424.34,683.005 1424.9,683.005 1425.46,683.005 1426.02,683.005 1426.58,683.005 1427.14,683.005 1427.7,683.005 1428.26,683.005 1428.82,683.005 1429.38,683.005 1429.94,683.005 1430.5,683.005 1431.05,683.005 1431.61,683.005 1432.17,683.005 1432.73,683.005 1433.29,683.005 1433.85,683.005 1434.41,683.005 1434.97,683.005 1435.53,683.005 1436.09,683.005 1436.65,683.005 1437.21,683.005 1437.77,683.005 1438.33,683.005 1438.88,683.005 1439.44,683.005 1440,683.005 1440.56,683.005 1441.12,683.005 1441.68,683.005 1442.24,683.005 1442.8,683.005 1443.36,683.005 1443.92,683.005 1444.48,683.005 1445.04,683.005 1445.6,683.005 1446.15,683.005 1446.71,683.005 1447.27,683.005 1447.83,683.005 1448.39,683.005 1448.95,683.005 1449.51,683.005 1450.07,683.005 1450.63,683.005 1451.19,683.005 1451.75,683.005 1452.31,683.005 1452.87,683.005 1453.42,683.005 1453.98,683.005 1454.54,683.005 1455.1,683.005 1455.66,683.005 1456.22,683.005 1456.78,683.005 1457.34,683.005 1457.9,683.005 1458.46,683.005 1459.02,683.005 1459.58,683.005 1460.14,683.005 1460.7,683.005 1461.25,683.005 1461.81,683.005 1462.37,683.005 1462.93,683.005 1463.49,683.005 1464.05,683.005 1464.61,683.005 1465.17,683.005 1465.73,683.005 1466.29,683.005 1466.85,683.005 1467.41,683.005 1467.97,683.005 1468.52,683.005 1469.08,683.005 1469.64,683.005 1470.2,683.005 1470.76,683.005 1471.32,683.005 1471.88,683.005 1472.44,683.005 1473,683.005 1473.56,683.005 1474.12,683.005 1474.68,683.005 1475.24,683.005 1475.79,683.005 1476.35,683.005 1476.91,683.005 1477.47,683.005 1478.03,683.005 1478.59,683.005 1479.15,683.005 1479.71,683.005 1480.27,683.005 1480.83,683.005 1481.39,683.005 1481.95,683.005 1482.51,683.005 1483.07,683.005 1483.62,683.005 1484.18,683.005 1484.74,683.005 1485.3,683.005 1485.86,683.005 1486.42,683.005 1486.98,683.005 1487.54,683.005 1488.1,683.005 1488.66,683.005 1489.22,683.005 1489.78,683.005 1490.34,683.005 1490.89,683.005 1491.45,683.005 1492.01,683.005 1492.57,683.005 1493.13,683.005 1493.69,683.005 1494.25,683.005 1494.81,683.005 1495.37,683.005 1495.93,683.005 1496.49,683.005 1497.05,683.005 1497.61,683.005 1498.16,683.005 1498.72,683.005 1499.28,683.005 1499.84,683.005 1500.4,683.005 1500.96,683.005 1501.52,683.005 1502.08,683.005 1502.64,683.005 1503.2,683.005 1503.76,683.005 1504.32,683.005 1504.88,683.005 1505.44,683.005 1505.99,683.005 1506.55,683.005 1507.11,683.005 1507.67,683.005 1508.23,683.005 1508.79,683.005 1509.35,683.005 1509.91,683.005 1510.47,683.005 1511.03,683.005 1511.59,683.005 1512.15,683.005 1512.71,683.005 1513.26,683.005 1513.82,683.005 1514.38,683.005 1514.94,683.005 1515.5,683.005 1516.06,683.005 1516.62,683.005 1517.18,683.005 1517.74,683.005 1518.3,683.005 1518.86,683.005 1519.42,683.005 1519.98,683.005 1520.53,683.005 1521.09,683.005 1521.65,683.005 1522.21,683.005 1522.77,683.005 1523.33,683.005 1523.89,683.005 1524.45,683.005 1525.01,683.005 1525.57,683.005 1526.13,683.005 1526.69,683.005 1527.25,683.005 1527.81,683.005 1528.36,683.005 1528.92,683.005 1529.48,683.005 1530.04,683.005 1530.6,683.005 1531.16,683.005 1531.72,683.005 1532.28,683.005 1532.84,683.005 1533.4,683.005 1533.96,683.005 1534.52,683.005 1535.08,683.005 1535.63,683.005 1536.19,683.005 1536.75,683.005 1537.31,683.005 1537.87,683.005 1538.43,683.005 1538.99,683.005 1539.55,683.005 1540.11,683.005 1540.67,683.005 1541.23,683.005 1541.79,683.005 1542.35,683.005 1542.9,683.005 1543.46,683.005 1544.02,683.005 1544.58,683.005 1545.14,683.005 1545.7,683.005 1546.26,683.005 1546.82,683.005 1547.38,683.005 1547.94,683.005 1548.5,683.005 1549.06,683.005 1549.62,683.005 1550.18,683.005 1550.73,683.005 1551.29,683.005 1551.85,683.005 1552.41,683.005 1552.97,683.005 1553.53,683.005 1554.09,683.005 1554.65,683.005 1555.21,683.005 1555.77,683.005 1556.33,683.005 1556.89,683.005 1557.45,683.005 1558,683.005 1558.56,683.005 1559.12,683.005 1559.68,683.005 1560.24,683.005 1560.8,683.005 1561.36,683.005 1561.92,683.005 1562.48,683.005 1563.04,683.005 1563.6,683.005 1564.16,683.005 1564.72,683.005 1565.28,683.005 1565.83,683.005 1566.39,683.005 1566.95,683.005 1567.51,683.005 1568.07,683.005 1568.63,683.005 1569.19,683.005 1569.75,683.005 1570.31,683.005 1570.87,683.005 1571.43,683.005 1571.99,683.005 1572.55,683.005 1573.1,683.005 1573.66,683.005 1574.22,683.005 1574.78,683.005 1575.34,683.005 1575.9,683.005 1576.46,683.005 1577.02,683.005 1577.58,683.005 1578.14,683.005 1578.7,683.005 1579.26,683.005 1579.82,683.005 1580.37,683.005 1580.93,683.005 1581.49,683.005 1582.05,683.005 1582.61,683.005 1583.17,683.005 1583.73,683.005 1584.29,683.005 1584.85,683.005 1585.41,683.005 1585.97,683.005 1586.53,683.005 1587.09,683.005 1587.65,683.005 1588.2,683.005 1588.76,683.005 1589.32,683.005 1589.88,683.005 1590.44,683.005 1591,683.005 1591.56,683.005 1592.12,683.005 1592.68,683.005 1593.24,683.005 1593.8,683.005 1594.36,683.005 1594.92,683.005 1595.47,683.005 1596.03,683.005 1596.59,683.005 1597.15,683.005 1597.71,683.005 1598.27,683.005 1598.83,683.005 1599.39,683.005 1599.95,683.005 1600.51,683.005 1601.07,683.005 1601.63,683.005 1602.19,683.005 1602.74,683.005 1603.3,683.005 1603.86,683.005 1604.42,683.005 1604.98,683.005 1605.54,683.005 1606.1,683.005 1606.66,683.005 1607.22,683.005 1607.78,683.005 1608.34,683.005 1608.9,683.005 1609.46,683.005 1610.02,683.005 1610.57,683.005 1611.13,683.005 1611.69,683.005 1612.25,683.005 1612.81,683.005 1613.37,683.005 1613.93,683.005 1614.49,683.005 1615.05,683.005 1615.61,683.005 1616.17,683.005 1616.73,683.005 1617.29,683.005 1617.84,683.005 1618.4,683.005 1618.96,683.005 1619.52,683.005 1620.08,683.005 1620.64,683.005 1621.2,683.005 1621.76,683.005 1622.32,683.005 1622.88,683.005 1623.44,683.005 1624,683.005 1624.56,683.005 1625.11,683.005 1625.67,683.005 1626.23,683.005 1626.79,683.005 1627.35,683.005 1627.91,683.005 1628.47,683.005 1629.03,683.005 1629.59,683.005 1630.15,683.005 1630.71,683.005 1631.27,683.005 1631.83,683.005 1632.39,683.005 1632.94,683.005 1633.5,683.005 1634.06,683.005 1634.62,683.005 1635.18,683.005 1635.74,683.005 1636.3,683.005 1636.86,683.005 1637.42,683.005 1637.98,683.005 1638.54,683.005 1639.1,683.005 1639.66,683.005 1640.21,683.005 1640.77,683.005 1641.33,683.005 1641.89,683.005 1642.45,683.005 1643.01,683.005 1643.57,683.005 1644.13,683.005 1644.69,683.005 1645.25,683.005 1645.81,683.005 1646.37,683.005 1646.93,683.005 1647.48,683.005 1648.04,683.005 1648.6,683.005 1649.16,683.005 1649.72,683.005 1650.28,683.005 1650.84,683.005 1651.4,683.005 1651.96,683.005 1652.52,683.005 1653.08,683.005 1653.64,683.005 1654.2,683.005 1654.76,683.005 1655.31,683.005 1655.87,683.005 1656.43,683.005 1656.99,683.005 1657.55,683.005 1658.11,683.005 1658.67,683.005 1659.23,683.005 1659.79,683.005 1660.35,683.005 1660.91,683.005 1661.47,683.005 1662.03,683.005 1662.58,683.005 1663.14,683.005 1663.7,683.005 1664.26,683.005 1664.82,683.005 1665.38,683.005 1665.94,683.005 1666.5,683.005 1667.06,683.005 1667.62,683.005 1668.18,683.005 1668.74,683.005 1669.3,683.005 1669.85,683.005 1670.41,683.005 1670.97,683.005 1671.53,683.005 1672.09,683.005 1672.65,683.005 1673.21,683.005 1673.77,683.005 1674.33,683.005 1674.89,683.005 1675.45,683.005 1676.01,683.005 1676.57,683.005 1677.13,683.005 1677.68,683.005 1678.24,683.005 1678.8,683.005 1679.36,683.005 1679.92,683.005 1680.48,683.005 1681.04,683.005 1681.6,683.005 1682.16,683.005 1682.72,683.005 1683.28,683.005 1683.84,683.005 1684.4,683.005 1684.95,683.005 1685.51,683.005 1686.07,683.005 1686.63,683.005 1687.19,683.005 1687.75,683.005 1688.31,683.005 1688.87,683.005 1689.43,683.005 1689.99,683.005 1690.55,683.005 1691.11,683.005 1691.67,683.005 1692.23,683.005 1692.78,683.005 1693.34,683.005 1693.9,683.005 1694.46,683.005 1695.02,683.005 1695.58,683.005 1696.14,683.005 1696.7,683.005 1697.26,683.005 1697.82,683.005 1698.38,683.005 1698.94,683.005 1699.5,683.005 1700.05,683.005 1700.61,683.005 1701.17,683.005 1701.73,683.005 1702.29,683.005 1702.85,683.005 1703.41,683.005 1703.97,683.005 1704.53,683.005 1705.09,683.005 1705.65,683.005 1706.21,683.005 1706.77,683.005 1707.32,683.005 1707.88,683.005 1708.44,683.005 1709,683.005 1709.56,683.005 1710.12,683.005 1710.68,683.005 1711.24,683.005 1711.8,683.005 1712.36,683.005 1712.92,683.005 1713.48,683.005 1714.04,683.005 1714.6,683.005 1715.15,683.005 1715.71,683.005 1716.27,683.005 1716.83,683.005 1717.39,683.005 1717.95,683.005 1718.51,683.005 1719.07,683.005 1719.63,683.005 1720.19,683.005 1720.75,683.005 1721.31,683.005 1721.87,683.005 1722.42,683.005 1722.98,683.005 1723.54,683.005 1724.1,683.005 1724.66,683.005 1725.22,683.005 1725.78,683.005 1726.34,683.005 1726.9,683.005 1727.46,683.005 1728.02,683.005 1728.58,683.005 1729.14,683.005 1729.69,683.005 1730.25,683.005 1730.81,683.005 1731.37,683.005 1731.93,683.005 1732.49,683.005 1733.05,683.005 1733.61,683.005 1734.17,683.005 1734.73,683.005 1735.29,683.005 1735.85,683.005 1736.41,683.005 1736.97,683.005 1737.52,683.005 1738.08,683.005 1738.64,683.005 1739.2,683.005 1739.76,683.005 1740.32,683.005 1740.88,683.005 1741.44,683.005 1742,683.005 1742.56,683.005 1743.12,683.005 1743.68,683.005 1744.24,683.005 1744.79,683.005 1745.35,683.005 1745.91,683.005 1746.47,683.005 1747.03,683.005 1747.59,683.005 1748.15,683.005 1748.71,683.005 1749.27,683.005 1749.83,683.005 1750.39,683.005 1750.95,683.005 1751.51,683.005 1752.06,683.005 1752.62,683.005 1753.18,683.005 1753.74,683.005 1754.3,683.005 1754.86,683.005 1755.42,683.005 1755.98,683.005 1756.54,683.005 1757.1,683.005 1757.66,683.005 1758.22,683.005 1758.78,683.005 1759.34,683.005 1759.89,683.005 1760.45,683.005 1761.01,683.005 1761.57,683.005 1762.13,683.005 1762.69,683.005 1763.25,683.005 1763.81,683.005 1764.37,683.005 1764.93,683.005 1765.49,683.005 1766.05,683.005 1766.61,683.005 1767.16,683.005 1767.72,683.005 1768.28,683.005 1768.84,683.005 1769.4,683.005 1769.96,683.005 1770.52,683.005 1771.08,683.005 1771.64,683.005 1772.2,683.005 1772.76,683.005 1773.32,683.005 1773.88,683.005 1774.43,683.005 1774.99,683.005 1775.55,683.005 1776.11,683.005 1776.67,683.005 1777.23,683.005 1777.79,683.005 1778.35,683.005 1778.91,683.005 1779.47,683.005 1780.03,683.005 1780.59,683.005 1781.15,683.005 1781.71,683.005 1782.26,683.005 1782.82,683.005 1783.38,683.005 1783.94,683.005 1784.5,683.005 1785.06,683.005 1785.62,683.005 1786.18,683.005 1786.74,683.005 1787.3,683.005 1787.86,683.005 1788.42,683.005 1788.98,683.005 1789.53,683.005 1790.09,683.005 1790.65,683.005 1791.21,683.005 1791.77,683.005 1792.33,683.005 1792.89,683.005 1793.45,683.005 1794.01,683.005 1794.57,683.005 1795.13,683.005 1795.69,683.005 1796.25,683.005 1796.8,683.005 1797.36,683.005 1797.92,683.005 1798.48,683.005 1799.04,683.005 1799.6,683.005 1800.16,683.005 1800.72,683.005 1801.28,683.005 1801.84,683.005 1802.4,683.005 1802.96,683.005 1803.52,683.005 1804.08,683.005 1804.63,683.005 1805.19,683.005 1805.75,683.005 1806.31,683.005 1806.87,683.005 1807.43,683.005 1807.99,683.005 1808.55,683.005 1809.11,683.005 1809.67,683.005 1810.23,683.005 1810.79,683.005 1811.35,683.005 1811.9,683.005 1812.46,683.005 1813.02,683.005 1813.58,683.005 1814.14,683.005 1814.7,683.005 1815.26,683.005 1815.82,683.005 1816.38,683.005 1816.94,683.005 1817.5,683.005 1818.06,683.005 1818.62,683.005 1819.18,683.005 1819.73,683.005 1820.29,683.005 1820.85,683.005 1821.41,683.005 1821.97,683.005 1822.53,683.005 1823.09,683.005 1823.65,683.005 1824.21,683.005 1824.77,683.005 1825.33,683.005 1825.89,683.005 1826.45,683.005 1827,683.005 1827.56,683.005 1828.12,683.005 1828.68,683.005 1829.24,683.005 1829.8,683.005 1830.36,683.005 1830.92,683.005 1831.48,683.005 1832.04,683.005 1832.6,683.005 1833.16,683.005 1833.72,683.005 1834.27,683.005 1834.83,683.005 1835.39,683.005 1835.95,683.005 1836.51,683.005 1837.07,683.005 1837.63,683.005 1838.19,683.005 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.021413318179629 ± 0.026204648535330166\nProjected Energy: -4.0121649941938715 ± (0.0034639574506423187, 0.003462244545618276)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.477694</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3525e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.1351e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.869e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.182e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.865e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.276e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space. This model can define both purely real as well as complex Hamiltonian.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor purely real Hamiltonian\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nFor complex Hamiltonian\n\nFor θ-twisted -> Number \"θ\"\n\nwhere,\n\na_M+1 = exp(-iota θ) a_1\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, boundary_condition)\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted, hard-wall and θ-twisted.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\nFor θ-twisted -> Number \"θ\"\n\nwhere,\n\na_M+1 = exp(-iota θ) a_1\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, :twisted)\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, :hard_wall)\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, π/4)\n(BoseFS{2,3}(2, 0, 0), 1.0000000000000002 + 1.0im)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
