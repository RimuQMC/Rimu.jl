var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip350\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip350)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip351\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip350)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip352\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip350)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1261.87 2211.02,1261.87 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1004.21 2211.02,1004.21 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.558 2211.02,746.558 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.904 2211.02,488.904 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.25 2211.02,231.25 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1261.87 423.181,1261.87 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1004.21 423.181,1004.21 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.558 423.181,746.558 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.904 423.181,488.904 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.25 423.181,231.25 \"/>\n<path clip-path=\"url(#clip350)\" d=\"M356.339 1247.66 Q352.728 1247.66 350.899 1251.23 Q349.094 1254.77 349.094 1261.9 Q349.094 1269.01 350.899 1272.57 Q352.728 1276.11 356.339 1276.11 Q359.973 1276.11 361.779 1272.57 Q363.608 1269.01 363.608 1261.9 Q363.608 1254.77 361.779 1251.23 Q359.973 1247.66 356.339 1247.66 M356.339 1243.96 Q362.149 1243.96 365.205 1248.57 Q368.284 1253.15 368.284 1261.9 Q368.284 1270.63 365.205 1275.23 Q362.149 1279.82 356.339 1279.82 Q350.529 1279.82 347.45 1275.23 Q344.395 1270.63 344.395 1261.9 Q344.395 1253.15 347.45 1248.57 Q350.529 1243.96 356.339 1243.96 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M290.043 1017.56 L306.363 1017.56 L306.363 1021.49 L284.418 1021.49 L284.418 1017.56 Q287.08 1014.8 291.664 1010.17 Q296.27 1005.52 297.451 1004.18 Q299.696 1001.65 300.576 999.918 Q301.478 998.158 301.478 996.468 Q301.478 993.714 299.534 991.978 Q297.613 990.242 294.511 990.242 Q292.312 990.242 289.858 991.006 Q287.427 991.769 284.65 993.32 L284.65 988.598 Q287.474 987.464 289.927 986.885 Q292.381 986.306 294.418 986.306 Q299.789 986.306 302.983 988.992 Q306.177 991.677 306.177 996.168 Q306.177 998.297 305.367 1000.22 Q304.58 1002.12 302.474 1004.71 Q301.895 1005.38 298.793 1008.6 Q295.691 1011.79 290.043 1017.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M316.224 986.931 L334.58 986.931 L334.58 990.867 L320.506 990.867 L320.506 999.339 Q321.524 998.992 322.543 998.83 Q323.562 998.644 324.58 998.644 Q330.367 998.644 333.747 1001.82 Q337.126 1004.99 337.126 1010.4 Q337.126 1015.98 333.654 1019.08 Q330.182 1022.16 323.862 1022.16 Q321.687 1022.16 319.418 1021.79 Q317.173 1021.42 314.765 1020.68 L314.765 1015.98 Q316.849 1017.12 319.071 1017.67 Q321.293 1018.23 323.77 1018.23 Q327.774 1018.23 330.112 1016.12 Q332.45 1014.01 332.45 1010.4 Q332.45 1006.79 330.112 1004.69 Q327.774 1002.58 323.77 1002.58 Q321.895 1002.58 320.02 1003 Q318.168 1003.41 316.224 1004.29 L316.224 986.931 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M356.339 990.01 Q352.728 990.01 350.899 993.575 Q349.094 997.117 349.094 1004.25 Q349.094 1011.35 350.899 1014.92 Q352.728 1018.46 356.339 1018.46 Q359.973 1018.46 361.779 1014.92 Q363.608 1011.35 363.608 1004.25 Q363.608 997.117 361.779 993.575 Q359.973 990.01 356.339 990.01 M356.339 986.306 Q362.149 986.306 365.205 990.913 Q368.284 995.496 368.284 1004.25 Q368.284 1012.97 365.205 1017.58 Q362.149 1022.16 356.339 1022.16 Q350.529 1022.16 347.45 1017.58 Q344.395 1012.97 344.395 1004.25 Q344.395 995.496 347.45 990.913 Q350.529 986.306 356.339 986.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M286.062 729.278 L304.418 729.278 L304.418 733.213 L290.344 733.213 L290.344 741.685 Q291.363 741.338 292.381 741.176 Q293.4 740.991 294.418 740.991 Q300.205 740.991 303.585 744.162 Q306.964 747.333 306.964 752.75 Q306.964 758.328 303.492 761.43 Q300.02 764.509 293.701 764.509 Q291.525 764.509 289.256 764.139 Q287.011 763.768 284.603 763.027 L284.603 758.328 Q286.687 759.463 288.909 760.018 Q291.131 760.574 293.608 760.574 Q297.613 760.574 299.951 758.467 Q302.288 756.361 302.288 752.75 Q302.288 749.139 299.951 747.032 Q297.613 744.926 293.608 744.926 Q291.733 744.926 289.858 745.342 Q288.006 745.759 286.062 746.639 L286.062 729.278 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M326.177 732.356 Q322.566 732.356 320.737 735.921 Q318.932 739.463 318.932 746.592 Q318.932 753.699 320.737 757.264 Q322.566 760.805 326.177 760.805 Q329.811 760.805 331.617 757.264 Q333.446 753.699 333.446 746.592 Q333.446 739.463 331.617 735.921 Q329.811 732.356 326.177 732.356 M326.177 728.653 Q331.987 728.653 335.043 733.259 Q338.122 737.842 338.122 746.592 Q338.122 755.319 335.043 759.926 Q331.987 764.509 326.177 764.509 Q320.367 764.509 317.288 759.926 Q314.233 755.319 314.233 746.592 Q314.233 737.842 317.288 733.259 Q320.367 728.653 326.177 728.653 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M356.339 732.356 Q352.728 732.356 350.899 735.921 Q349.094 739.463 349.094 746.592 Q349.094 753.699 350.899 757.264 Q352.728 760.805 356.339 760.805 Q359.973 760.805 361.779 757.264 Q363.608 753.699 363.608 746.592 Q363.608 739.463 361.779 735.921 Q359.973 732.356 356.339 732.356 M356.339 728.653 Q362.149 728.653 365.205 733.259 Q368.284 737.842 368.284 746.592 Q368.284 755.319 365.205 759.926 Q362.149 764.509 356.339 764.509 Q350.529 764.509 347.45 759.926 Q344.395 755.319 344.395 746.592 Q344.395 737.842 347.45 733.259 Q350.529 728.653 356.339 728.653 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M284.835 471.624 L307.057 471.624 L307.057 473.615 L294.511 506.184 L289.627 506.184 L301.432 475.559 L284.835 475.559 L284.835 471.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M316.224 471.624 L334.58 471.624 L334.58 475.559 L320.506 475.559 L320.506 484.031 Q321.524 483.684 322.543 483.522 Q323.562 483.337 324.58 483.337 Q330.367 483.337 333.747 486.508 Q337.126 489.679 337.126 495.096 Q337.126 500.675 333.654 503.776 Q330.182 506.855 323.862 506.855 Q321.687 506.855 319.418 506.485 Q317.173 506.114 314.765 505.374 L314.765 500.675 Q316.849 501.809 319.071 502.364 Q321.293 502.92 323.77 502.92 Q327.774 502.92 330.112 500.813 Q332.45 498.707 332.45 495.096 Q332.45 491.485 330.112 489.378 Q327.774 487.272 323.77 487.272 Q321.895 487.272 320.02 487.689 Q318.168 488.105 316.224 488.985 L316.224 471.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M356.339 474.702 Q352.728 474.702 350.899 478.267 Q349.094 481.809 349.094 488.939 Q349.094 496.045 350.899 499.61 Q352.728 503.151 356.339 503.151 Q359.973 503.151 361.779 499.61 Q363.608 496.045 363.608 488.939 Q363.608 481.809 361.779 478.267 Q359.973 474.702 356.339 474.702 M356.339 470.999 Q362.149 470.999 365.205 475.605 Q368.284 480.189 368.284 488.939 Q368.284 497.665 365.205 502.272 Q362.149 506.855 356.339 506.855 Q350.529 506.855 347.45 502.272 Q344.395 497.665 344.395 488.939 Q344.395 480.189 347.45 475.605 Q350.529 470.999 356.339 470.999 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M256.664 244.595 L264.303 244.595 L264.303 218.229 L255.992 219.896 L255.992 215.637 L264.256 213.97 L268.932 213.97 L268.932 244.595 L276.571 244.595 L276.571 248.53 L256.664 248.53 L256.664 244.595 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M296.015 217.049 Q292.404 217.049 290.576 220.613 Q288.77 224.155 288.77 231.285 Q288.77 238.391 290.576 241.956 Q292.404 245.498 296.015 245.498 Q299.65 245.498 301.455 241.956 Q303.284 238.391 303.284 231.285 Q303.284 224.155 301.455 220.613 Q299.65 217.049 296.015 217.049 M296.015 213.345 Q301.826 213.345 304.881 217.951 Q307.96 222.535 307.96 231.285 Q307.96 240.011 304.881 244.618 Q301.826 249.201 296.015 249.201 Q290.205 249.201 287.127 244.618 Q284.071 240.011 284.071 231.285 Q284.071 222.535 287.127 217.951 Q290.205 213.345 296.015 213.345 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M326.177 217.049 Q322.566 217.049 320.737 220.613 Q318.932 224.155 318.932 231.285 Q318.932 238.391 320.737 241.956 Q322.566 245.498 326.177 245.498 Q329.811 245.498 331.617 241.956 Q333.446 238.391 333.446 231.285 Q333.446 224.155 331.617 220.613 Q329.811 217.049 326.177 217.049 M326.177 213.345 Q331.987 213.345 335.043 217.951 Q338.122 222.535 338.122 231.285 Q338.122 240.011 335.043 244.618 Q331.987 249.201 326.177 249.201 Q320.367 249.201 317.288 244.618 Q314.233 240.011 314.233 231.285 Q314.233 222.535 317.288 217.951 Q320.367 213.345 326.177 213.345 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M356.339 217.049 Q352.728 217.049 350.899 220.613 Q349.094 224.155 349.094 231.285 Q349.094 238.391 350.899 241.956 Q352.728 245.498 356.339 245.498 Q359.973 245.498 361.779 241.956 Q363.608 238.391 363.608 231.285 Q363.608 224.155 361.779 220.613 Q359.973 217.049 356.339 217.049 M356.339 213.345 Q362.149 213.345 365.205 217.951 Q368.284 222.535 368.284 231.285 Q368.284 240.011 365.205 244.618 Q362.149 249.201 356.339 249.201 Q350.529 249.201 347.45 244.618 Q344.395 240.011 344.395 231.285 Q344.395 222.535 347.45 217.951 Q350.529 213.345 356.339 213.345 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip352)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.25 4017.76,231.25 \"/>\n<polyline clip-path=\"url(#clip352)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1249.49 456.554,1249.48 457.123,1249.35 457.691,1249.15 458.259,1248.93 458.828,1248.57 459.396,1248.16 459.964,1247.72 460.533,1247.13 461.101,1246.46 461.669,1245.75 462.238,1244.97 462.806,1244.09 463.375,1243.13 463.943,1242.08 464.511,1240.93 465.08,1239.67 465.648,1238.31 466.216,1235.79 466.785,1234.18 467.353,1232.45 467.921,1230.56 468.49,1228.57 469.058,1226.42 469.626,1224.13 470.195,1221.67 470.763,1219.06 471.331,1216.23 471.9,1213.26 472.468,1209.08 473.036,1205.74 473.605,1202.21 474.173,1198.45 474.741,1193.45 475.31,1189.28 475.878,1183.8 476.446,1179.2 477.015,1173.32 477.583,1166.11 478.152,1159.75 478.72,1154.11 479.288,1147.28 479.857,1140.16 480.425,1132.67 480.993,1124.99 481.562,1118.14 482.13,1110.1 482.698,1101.84 483.267,1094.39 483.835,1084.66 484.403,1076.73 484.972,1065.44 485.54,1057.06 486.108,1046.49 486.677,1036.65 487.245,1026.67 487.813,1016.52 488.382,1006.39 488.95,996.903 489.518,987.317 490.087,975.516 490.655,964.752 491.224,952.888 491.792,941.974 492.36,931.952 492.929,919.975 493.497,907.964 494.065,896.949 494.634,885.846 495.202,875.013 495.77,863.06 496.339,853.216 496.907,839.094 497.475,827.356 498.044,815.519 498.612,804.894 499.18,795.266 499.749,782.66 500.317,773.462 500.885,763.087 501.454,750.814 502.022,741.683 502.59,731.651 503.159,721.576 503.727,711.634 504.295,702.836 504.864,692.055 505.432,682.358 506.001,671.668 506.569,661.239 507.137,650.965 507.706,640.868 508.274,628.904 508.842,619.326 509.411,610.02 509.979,601.914 510.547,593.787 511.116,584.888 511.684,575.858 512.252,569.211 512.821,559.655 513.389,551.258 513.957,545.138 514.526,534.727 515.094,529.171 515.662,522.36 516.231,514.642 516.799,507.188 517.367,500.965 517.936,495.854 518.504,489.765 519.072,483.662 519.641,478.768 520.209,467.615 520.778,463.091 521.346,457.787 521.914,450.179 522.483,444.003 523.051,440.02 523.619,434.142 524.188,428.424 524.756,424.65 525.324,420.979 525.893,417.442 526.461,412.815 527.029,407.225 527.598,403.932 528.166,400.775 528.734,398.6 529.303,394.324 529.871,390.106 530.439,386.167 531.008,382.221 531.576,378.299 532.144,374.335 532.713,370.595 533.281,368.088 533.85,365.673 534.418,363.153 534.986,360.655 535.555,358.279 536.123,354.796 536.691,352.443 537.26,348.109 537.828,346.008 538.396,341.788 538.965,340.893 539.533,337.983 540.101,332.143 540.67,329.633 541.238,327.959 541.806,326.286 542.375,323.614 542.943,322.117 543.511,320.656 544.08,315.286 544.648,314.158 545.216,310.862 545.785,311.16 546.353,310.04 546.921,308.805 547.49,308.096 548.058,304.818 548.627,303.946 549.195,303.12 549.763,301.942 550.332,300.956 550.9,298.819 551.468,295.761 552.037,295.129 552.605,293.269 553.173,291.45 553.742,291.664 554.31,289.893 554.878,288.082 555.447,285.169 556.015,284.717 556.583,283.181 557.152,279.641 557.72,277.066 558.288,277.875 558.857,277.795 559.425,276.518 559.993,277.441 560.562,274.978 561.13,272.778 561.698,274.829 562.267,274.555 562.835,273.07 563.404,269.68 563.972,265.593 564.54,264.58 565.109,266.931 565.677,267.973 566.245,266.895 566.814,266.809 567.382,267.749 567.95,265.685 568.519,267.743 569.087,267.629 569.655,266.193 570.224,268.148 570.792,267.714 571.36,264.418 571.929,262.062 572.497,261.936 573.065,261.873 573.634,261.855 574.202,260.771 574.77,258.63 575.339,256.328 575.907,256.362 576.476,254.392 577.044,253.611 577.612,253.787 578.181,252.939 578.749,252.288 579.317,252.828 579.886,254.12 580.454,254.521 581.022,254.654 581.591,254.641 582.159,255.814 582.727,253.622 583.296,249.276 583.864,250.658 584.432,249.673 585.001,248.886 585.569,249.293 586.137,244.513 586.706,248.288 587.274,250.877 587.842,250.035 588.411,250.292 588.979,250.525 589.547,250.673 590.116,249.6 590.684,248.919 591.253,247.008 591.821,244.22 592.389,246.776 592.958,247.213 593.526,248.473 594.094,245.767 594.663,248.152 595.231,248.211 595.799,247.386 596.368,247.664 596.936,247.904 597.504,247.964 598.073,249.045 598.641,247.905 599.209,246.855 599.778,245.885 600.346,245.97 600.914,248.08 601.483,246.804 602.051,245.797 602.619,245.911 603.188,246.191 603.756,246.233 604.325,246.52 604.893,245.459 605.461,244.54 606.03,244.705 606.598,241.745 607.166,237.999 607.735,237.715 608.303,238.36 608.871,238.105 609.44,237.693 610.008,237.073 610.576,238.773 611.145,239.403 611.713,241.115 612.281,242.53 612.85,241.86 613.418,242.19 613.986,241.102 614.555,243.441 615.123,243.582 615.691,240.58 616.26,242.022 616.828,244.339 617.396,244.562 617.965,243.368 618.533,245.641 619.102,244.425 619.67,246.461 620.238,245.329 620.807,247.293 621.375,246.131 621.943,245.855 622.512,245.575 623.08,244.241 623.648,244.375 624.217,244.281 624.785,242.1 625.353,242.389 625.922,242.57 626.49,241.641 627.058,241.791 627.627,241.913 628.195,240.799 628.763,240.958 629.332,241.159 629.9,241.253 630.468,242.287 631.037,239.793 631.605,239.021 632.173,238.293 632.742,238.329 633.31,238.555 633.879,240.689 634.447,239.006 635.015,240.192 635.584,238.236 636.152,239.527 636.72,239.565 637.289,239.891 637.857,242.103 638.425,243.185 638.994,241.072 639.562,240.092 640.13,240.274 640.699,240.201 641.267,239.394 641.835,241.51 642.404,241.541 642.972,243.574 643.54,243.418 644.109,238.045 644.677,237.983 645.245,239.092 645.814,239.034 646.382,238.999 646.951,241.028 647.519,238.713 648.087,238.552 648.656,239.666 649.224,239.804 649.792,239.889 650.361,238.618 650.929,239.473 651.497,239.312 652.066,238.156 652.634,241.364 653.202,240.303 653.771,238.089 654.339,235.049 654.907,235.488 655.476,235.516 656.044,236.864 656.612,236.914 657.181,234.706 657.749,232.895 658.317,233.426 658.886,232.793 659.454,232.203 660.022,230.601 660.591,231.144 661.159,232.572 661.728,233.157 662.296,231.497 662.864,232.919 663.433,231.097 664.001,230.695 664.569,231.247 665.138,232.888 665.706,233.215 666.274,232.719 666.843,234.569 667.411,234.809 667.979,238.104 668.548,237.006 669.116,235.825 669.684,237.1 670.253,237.011 670.821,237.105 671.389,236.226 671.958,238.259 672.526,238.244 673.094,237.082 673.663,238.124 674.231,238.1 674.799,239.304 675.368,239.147 675.936,238.169 676.505,239.189 677.073,238.04 677.641,237.8 678.21,237.666 678.778,237.532 679.346,237.512 679.915,237.79 680.483,235.551 681.051,235.659 681.62,236.941 682.188,237.051 682.756,238.02 683.325,239.718 683.893,240.517 684.461,240.292 685.03,239.216 685.598,239.022 686.166,239.837 686.735,240.49 687.303,240.154 687.871,239.021 688.44,238.637 689.008,237.618 689.577,237.625 690.145,239.459 690.713,239.043 691.282,238.837 691.85,238.407 692.418,239.073 692.987,237.657 693.555,237.457 694.123,237.207 694.692,237.142 695.26,232.803 695.828,231.917 696.397,232.932 696.965,229.996 697.533,228.125 698.102,227.54 698.67,227.17 699.238,227.808 699.807,230.477 700.375,230.91 700.943,229.143 701.512,229.537 702.08,229.992 702.648,230.244 703.217,230.452 703.785,230.844 704.354,230.183 704.922,231.595 705.49,231.864 706.059,232.219 706.627,230.425 707.195,229.772 707.764,230.344 708.332,228.598 708.9,228.969 709.469,228.375 710.037,230.05 710.605,230.528 711.174,233.109 711.742,234.08 712.31,235.14 712.879,234.061 713.447,235.228 714.015,236.463 714.584,237.216 715.152,235.973 715.72,238.035 716.289,236.652 716.857,235.652 717.425,234.532 717.994,234.432 718.562,234.354 719.131,232.328 719.699,231.385 720.267,230.583 720.836,229.941 721.404,229.217 721.972,228.754 722.541,234.576 723.109,235.713 723.677,234.501 724.246,234.411 724.814,234.408 725.382,235.655 725.951,235.772 726.519,237.792 727.087,238.851 727.656,239.711 728.224,239.232 728.792,235.128 729.361,233.89 729.929,234.995 730.497,235.764 731.066,236.823 731.634,239.133 732.203,237.889 732.771,234.443 733.339,232.299 733.908,234.573 734.476,232.762 735.044,229.818 735.613,230.107 736.181,230.42 736.749,232.53 737.318,236.685 737.886,235.473 738.454,233.465 739.023,234.613 739.591,235.74 740.159,236.566 740.728,236.427 741.296,235.299 741.864,234.082 742.433,234.824 743.001,231.892 743.569,235.97 744.138,235.847 744.706,234.858 745.274,232.955 745.843,233.233 746.411,233.348 746.98,232.164 747.548,235.449 748.116,234.295 748.685,235.31 749.253,235.265 749.821,234.096 750.39,235.895 750.958,236.817 751.526,235.519 752.095,234.402 752.663,232.258 753.231,233.23 753.8,233.337 754.368,233.341 754.936,232.242 755.505,229.118 756.073,230.406 756.641,231.613 757.21,231.761 757.778,232.813 758.346,232.909 758.915,233.923 759.483,233.977 760.052,235.043 760.62,235.8 761.188,236.507 761.757,236.118 762.325,235.889 762.893,234.7 763.462,235.511 764.03,236.253 764.598,234.979 765.167,235.02 765.735,234.899 766.303,234.725 766.872,232.623 767.44,231.645 768.008,232.647 768.577,232.671 769.145,233.868 769.713,234.892 770.282,231.633 770.85,230.638 771.418,231.757 771.987,232.801 772.555,235.783 773.123,234.769 773.692,234.627 774.26,232.607 774.829,232.525 775.397,235.875 775.965,234.421 776.534,234.287 777.102,234.048 777.67,235.138 778.239,237.061 778.807,233.452 779.375,234.438 779.944,232.126 780.512,231.029 781.08,233.076 781.649,231.167 782.217,231.107 782.785,231.247 783.354,232.41 783.922,233.492 784.49,231.445 785.059,232.665 785.627,231.587 786.195,229.595 786.764,230.925 787.332,231.023 787.9,229.145 788.469,228.686 789.037,228.109 789.606,227.353 790.174,230.761 790.742,229.762 791.311,228.912 791.879,230.046 792.447,230.296 793.016,231.57 793.584,231.692 794.152,227.692 794.721,226.911 795.289,227.449 795.857,229.769 796.426,226.739 796.994,226.768 797.562,227.448 798.131,225.749 798.699,230.452 799.267,230.448 799.836,231.719 800.404,231.822 800.972,230.974 801.541,230.104 802.109,231.412 802.678,231.637 803.246,232.531 803.814,232.145 804.383,230.126 804.951,229.23 805.519,228.527 806.088,230.118 806.656,231.482 807.224,233.689 807.793,235.698 808.361,235.515 808.929,235.465 809.498,235.217 810.066,238.166 810.634,236.73 811.203,235.452 811.771,234.18 812.339,233.068 812.908,234.073 813.476,233.787 814.044,234.553 814.613,235.525 815.181,235.2 815.749,235.108 816.318,234.739 816.886,233.631 817.455,235.477 818.023,236.292 818.591,236.993 819.16,237.681 819.728,235.208 820.296,233.976 820.865,231.665 821.433,229.697 822.001,229.892 822.57,230.147 823.138,229.324 823.706,230.426 824.275,231.425 824.843,231.398 825.411,231.528 825.98,230.479 826.548,230.536 827.116,230.787 827.685,232.118 828.253,230.044 828.821,227.083 829.39,229.313 829.958,230.496 830.526,230.729 831.095,233.14 831.663,234.433 832.232,236.484 832.8,238.212 833.368,238.771 833.937,236.263 834.505,235.923 835.073,236.844 835.642,235.549 836.21,235.256 836.778,233.878 837.347,233.833 837.915,233.586 838.483,233.554 839.052,233.657 839.62,233.397 840.188,236.069 840.757,237.823 841.325,236.546 841.893,236.176 842.462,234.876 843.03,234.721 843.598,233.45 844.167,233.3 844.735,233.043 845.304,232.738 845.872,231.318 846.44,231.325 847.009,230.284 847.577,229.335 848.145,227.353 848.714,227.653 849.282,227.035 849.85,225.49 850.419,223.668 850.987,224.338 851.555,225.174 852.124,222.604 852.692,222.993 853.26,223.567 853.829,224.36 854.397,224.861 854.965,226.321 855.534,226.813 856.102,227.043 856.67,227.276 857.239,227.864 857.807,229.327 858.375,230.615 858.944,230.721 859.512,232.058 860.081,231.137 860.649,232.191 861.217,231.107 861.786,231.105 862.354,230.318 862.922,231.726 863.491,231.813 864.059,232.171 864.627,232.42 865.196,234.511 865.764,233.32 866.332,233.211 866.901,234.127 867.469,234.101 868.037,233.054 868.606,232.998 869.174,231.947 869.742,232.13 870.311,232.155 870.879,232.154 871.447,229.023 872.016,229.407 872.584,229.621 873.152,230.921 873.721,230.029 874.289,230.395 874.858,229.735 875.426,230.959 875.994,230.106 876.563,231.403 877.131,233.39 877.699,233.507 878.268,234.523 878.836,233.42 879.404,235.484 879.973,235.385 880.541,233.933 881.109,233.999 881.678,237.003 882.246,236.76 882.814,237.437 883.383,239.192 883.951,238.709 884.519,238.323 885.088,235.655 885.656,234.271 886.224,236.17 886.793,234.886 887.361,236.847 887.93,236.362 888.498,236.922 889.066,236.408 889.635,234.018 890.203,231.945 890.771,231.974 891.34,230.033 891.908,231.05 892.476,232.176 893.045,231.402 893.613,231.362 894.181,231.202 894.75,228.03 895.318,225.228 895.886,226.647 896.455,227.059 897.023,226.52 897.591,226.838 898.16,228.307 898.728,229.536 899.296,230.59 899.865,231.823 900.433,231.836 901.001,231.828 901.57,231.885 902.138,233.854 902.707,232.844 903.275,231.766 903.843,231.634 904.412,230.906 904.98,231.088 905.548,231.034 906.117,229.824 906.685,228.833 907.253,230.045 907.822,230.016 908.39,229.112 908.958,231.445 909.527,231.451 910.095,234.585 910.663,234.457 911.232,232.157 911.8,231.409 912.368,233.861 912.937,233.617 913.505,232.453 914.073,233.443 914.642,232.39 915.21,232.241 915.779,233.359 916.347,232.293 916.915,231.271 917.484,228.401 918.052,226.64 918.62,227.091 919.189,227.735 919.757,228.129 920.325,231.545 920.894,233.749 921.462,232.703 922.03,232.72 922.599,235.572 923.167,237.281 923.735,238.13 924.304,237.76 924.872,235.421 925.44,233.019 926.009,229.863 926.577,231.267 927.145,231.255 927.714,229.324 928.282,229.445 928.85,233.788 929.419,233.95 929.987,233.862 930.556,231.644 931.124,232.949 931.692,230.773 932.261,230.901 932.829,228.919 933.397,232.162 933.966,233.076 934.534,234.101 935.102,234.995 935.671,236.834 936.239,238.665 936.807,237.962 937.376,235.525 937.944,234.27 938.512,234.013 939.081,235.035 939.649,234.69 940.217,231.357 940.786,231.391 941.354,230.354 941.922,228.515 942.491,228.762 943.059,226.827 943.627,227.093 944.196,228.265 944.764,229.698 945.333,228.514 945.901,228.722 946.469,225.888 947.038,224.447 947.606,223.725 948.174,221.247 948.743,222.032 949.311,220.646 949.879,220.449 950.448,222.295 951.016,222.249 951.584,224.096 952.153,224.966 952.721,225.503 953.289,226.177 953.858,227.664 954.426,227.905 954.994,228.376 955.563,227.734 956.131,229.344 956.699,229.563 957.268,231.126 957.836,231.315 958.405,233.502 958.973,231.426 959.541,231.578 960.11,231.534 960.678,228.674 961.246,229.171 961.815,231.501 962.383,230.381 962.951,230.702 963.52,229.968 964.088,232.032 964.656,233.241 965.225,235.087 965.793,234.852 966.361,233.939 966.93,232.809 967.498,230.998 968.066,232.118 968.635,232.058 969.203,231.1 969.771,233.282 970.34,235.207 970.908,233.893 971.476,234.981 972.045,234.713 972.613,234.52 973.182,234.456 973.75,234.269 974.318,234.198 974.887,234.008 975.455,232.888 976.023,232.794 976.592,230.763 977.16,230.792 977.728,231.961 978.297,230.042 978.865,231.417 979.433,229.423 980.002,229.795 980.57,232.111 981.138,233.114 981.707,232.97 982.275,232.976 982.843,231.972 983.412,231.896 983.98,230.793 984.548,232.772 985.117,231.688 985.685,234.627 986.253,234.552 986.822,235.437 987.39,235.33 987.959,236.237 988.527,236.944 989.095,236.559 989.664,235.106 990.232,234.873 990.8,235.88 991.369,236.815 991.937,236.487 992.505,237.147 993.074,236.768 993.642,236.21 994.21,234.691 994.779,233.302 995.347,233.142 995.915,233.201 996.484,233.004 997.052,232.832 997.62,234.635 998.189,235.613 998.757,235.192 999.325,236.015 999.894,236.683 1000.46,235.338 1001.03,235.82 1001.6,235.555 1002.17,236.128 1002.74,236.856 1003.3,234.197 1003.87,233.139 1004.44,233.993 1005.01,236.772 1005.58,237.496 1006.15,237.787 1006.71,237.334 1007.28,237.879 1007.85,238.439 1008.42,237.815 1008.99,235.989 1009.56,234.523 1010.12,233.314 1010.69,232.919 1011.26,233.63 1011.83,233.242 1012.4,231.762 1012.97,230.615 1013.53,231.549 1014.1,232.381 1014.67,230.232 1015.24,231.09 1015.81,231.248 1016.38,229.964 1016.94,229.07 1017.51,230.462 1018.08,229.542 1018.65,229.611 1019.22,229.728 1019.79,228.816 1020.35,229.941 1020.92,228.647 1021.49,230.788 1022.06,232.658 1022.63,233.721 1023.2,234.446 1023.76,234.018 1024.33,233.78 1024.9,233.518 1025.47,233.304 1026.04,230.752 1026.61,231.675 1027.17,230.518 1027.74,232.438 1028.31,232.185 1028.88,230.047 1029.45,228.045 1030.02,227.27 1030.58,229.68 1031.15,230.715 1031.72,230.873 1032.29,231.828 1032.86,231.588 1033.43,231.454 1033.99,233.449 1034.56,233.132 1035.13,233.902 1035.7,233.775 1036.27,234.626 1036.84,234.54 1037.4,235.02 1037.97,234.905 1038.54,235.687 1039.11,235.459 1039.68,236.003 1040.25,236.681 1040.81,235.144 1041.38,233.71 1041.95,231.632 1042.52,232.571 1043.09,231.525 1043.66,229.429 1044.22,229.296 1044.79,229.318 1045.36,229.207 1045.93,228.338 1046.5,230.506 1047.07,231.308 1047.63,230.369 1048.2,232.319 1048.77,232.17 1049.34,232.964 1049.91,232.608 1050.48,232.295 1051.05,231.984 1051.61,231.782 1052.18,227.609 1052.75,226.682 1053.32,227.87 1053.89,225.953 1054.46,224.065 1055.02,223.754 1055.59,223.963 1056.16,224.463 1056.73,222.76 1057.3,221.121 1057.87,221.922 1058.43,221.318 1059,222.265 1059.57,222.921 1060.14,223.507 1060.71,224.113 1061.28,225.67 1061.84,226.228 1062.41,225.572 1062.98,226.288 1063.55,222.632 1064.12,224.314 1064.69,228.967 1065.25,230.161 1065.82,231.218 1066.39,229.198 1066.96,229.505 1067.53,229.525 1068.1,229.54 1068.66,227.654 1069.23,227.818 1069.8,227.869 1070.37,227.144 1070.94,227.165 1071.51,227.651 1072.07,230.105 1072.64,230.357 1073.21,230.341 1073.78,230.811 1074.35,234.882 1074.92,233.551 1075.48,232.351 1076.05,234.389 1076.62,234.004 1077.19,236.03 1077.76,235.824 1078.33,234.417 1078.89,232.237 1079.46,232.166 1080.03,234.251 1080.6,233.249 1081.17,234.22 1081.74,234.909 1082.3,235.575 1082.87,235.111 1083.44,233.758 1084.01,231.274 1084.58,232.046 1085.15,231.871 1085.71,230.81 1086.28,229.955 1086.85,228.966 1087.42,232.478 1087.99,234.515 1088.56,233.381 1089.12,233.393 1089.69,233.224 1090.26,234.125 1090.83,234.831 1091.4,234.757 1091.97,234.516 1092.53,235.373 1093.1,234.299 1093.67,233.191 1094.24,232.004 1094.81,230.984 1095.38,231.033 1095.94,232.197 1096.51,231.144 1097.08,231.163 1097.65,231.364 1098.22,231.364 1098.79,233.342 1099.35,230.333 1099.92,230.414 1100.49,231.459 1101.06,231.535 1101.63,231.317 1102.2,230.34 1102.76,230.461 1103.33,229.644 1103.9,230.755 1104.47,229.724 1105.04,228.99 1105.61,229.123 1106.17,227.322 1106.74,226.503 1107.31,226.872 1107.88,230.068 1108.45,228.109 1109.02,226.364 1109.58,226.787 1110.15,227.105 1110.72,228.148 1111.29,230.205 1111.86,229.238 1112.43,231.381 1112.99,230.556 1113.56,232.637 1114.13,231.619 1114.7,231.817 1115.27,231.847 1115.84,231.762 1116.4,232.933 1116.97,234.69 1117.54,232.546 1118.11,231.686 1118.68,230.728 1119.25,230.763 1119.81,230.926 1120.38,230.941 1120.95,230.693 1121.52,228.624 1122.09,230.989 1122.66,231.861 1123.23,232.864 1123.79,233.764 1124.36,234.847 1124.93,234.469 1125.5,234.456 1126.07,233.353 1126.64,233.043 1127.2,232.977 1127.77,233.042 1128.34,232.975 1128.91,231.886 1129.48,232.01 1130.05,232.002 1130.61,232.019 1131.18,231.935 1131.75,231.031 1132.32,234.176 1132.89,234.976 1133.46,233.766 1134.02,235.581 1134.59,234.064 1135.16,236.208 1135.73,236.909 1136.3,236.701 1136.87,235.379 1137.43,236.111 1138,236.819 1138.57,236.393 1139.14,236.01 1139.71,234.26 1140.28,231.024 1140.84,229.909 1141.41,230.843 1141.98,229.872 1142.55,229.184 1143.12,229.292 1143.69,229.561 1144.25,228.683 1144.82,230.23 1145.39,230.525 1145.96,229.755 1146.53,229.729 1147.1,229.599 1147.66,227.757 1148.23,228.976 1148.8,228.941 1149.37,228.99 1149.94,230.125 1150.51,229.195 1151.07,230.238 1151.64,229.281 1152.21,229.458 1152.78,229.578 1153.35,230.735 1153.92,229.56 1154.48,230.605 1155.05,230.506 1155.62,230.469 1156.19,230.523 1156.76,232.77 1157.33,232.536 1157.89,231.478 1158.46,233.371 1159.03,232.099 1159.6,232.856 1160.17,231.842 1160.74,231.743 1161.3,229.702 1161.87,229.774 1162.44,229.747 1163.01,231.107 1163.58,233.11 1164.15,232.127 1164.71,235.231 1165.28,233.751 1165.85,233.686 1166.42,232.399 1166.99,230.134 1167.56,230.323 1168.12,230.684 1168.69,232.745 1169.26,232.759 1169.83,235.872 1170.4,235.528 1170.97,233.188 1171.53,234.104 1172.1,238.103 1172.67,236.397 1173.24,235.088 1173.81,234.94 1174.38,234.697 1174.94,232.179 1175.51,233.225 1176.08,231.969 1176.65,231.871 1177.22,230.957 1177.79,230.838 1178.35,229.9 1178.92,228.182 1179.49,229.639 1180.06,229.724 1180.63,227.483 1181.2,229.743 1181.76,229.712 1182.33,231.105 1182.9,231.239 1183.47,232.21 1184.04,232.878 1184.61,229.694 1185.17,228.71 1185.74,231.884 1186.31,230.76 1186.88,229.754 1187.45,228.72 1188.02,229.746 1188.58,229.958 1189.15,229.258 1189.72,231.548 1190.29,231.475 1190.86,231.341 1191.43,230.251 1192,227.388 1192.56,226.734 1193.13,225.741 1193.7,225.311 1194.27,226.652 1194.84,224.951 1195.41,224.502 1195.97,224.32 1196.54,223.822 1197.11,226.462 1197.68,227.015 1198.25,227.273 1198.82,229.728 1199.38,230.08 1199.95,228.214 1200.52,231.772 1201.09,227.493 1201.66,228.83 1202.23,230.169 1202.79,227.306 1203.36,228.672 1203.93,231.031 1204.5,230.007 1205.07,230.121 1205.64,230.446 1206.2,231.821 1206.77,232.817 1207.34,234.954 1207.91,235.837 1208.48,236.654 1209.05,236.352 1209.61,234.903 1210.18,235.463 1210.75,235.173 1211.32,236.735 1211.89,237.543 1212.46,234.865 1213.02,234.831 1213.59,235.744 1214.16,232.294 1214.73,232.349 1215.3,233.235 1215.87,232.232 1216.43,235.339 1217,235.057 1217.57,237.809 1218.14,237.519 1218.71,237.256 1219.28,235.917 1219.84,236.543 1220.41,236.225 1220.98,237.027 1221.55,237.544 1222.12,235.867 1222.69,237.468 1223.25,236.909 1223.82,236.595 1224.39,234.191 1224.96,234.796 1225.53,233.553 1226.1,234.255 1226.66,231.965 1227.23,229.476 1227.8,231.415 1228.37,232.167 1228.94,232.224 1229.51,230.988 1230.07,230.836 1230.64,232.886 1231.21,232.535 1231.78,232.252 1232.35,229.818 1232.92,228.804 1233.48,230.019 1234.05,229.938 1234.62,228.848 1235.19,227.845 1235.76,227.919 1236.33,228.03 1236.89,228.415 1237.46,227.518 1238.03,225.48 1238.6,226.922 1239.17,226.12 1239.74,225.27 1240.3,227.928 1240.87,231.149 1241.44,231.913 1242.01,232.901 1242.58,232.544 1243.15,231.301 1243.71,229.326 1244.28,227.262 1244.85,229.509 1245.42,229.577 1245.99,226.304 1246.56,226.505 1247.12,226.793 1247.69,227.07 1248.26,227.342 1248.83,226.633 1249.4,225.872 1249.97,226.249 1250.53,227.627 1251.1,225.845 1251.67,225.244 1252.24,225.856 1252.81,225.198 1253.38,224.649 1253.94,225.304 1254.51,227.82 1255.08,229.105 1255.65,229.433 1256.22,228.712 1256.79,229.012 1257.35,231.287 1257.92,234.475 1258.49,232.221 1259.06,232.361 1259.63,232.304 1260.2,230.314 1260.76,229.553 1261.33,229.676 1261.9,229.845 1262.47,227.999 1263.04,229.492 1263.61,229.873 1264.18,230 1264.74,231.15 1265.31,231.034 1265.88,233.199 1266.45,233.082 1267.02,232.857 1267.59,232.791 1268.15,234.754 1268.72,235.741 1269.29,233.386 1269.86,235.355 1270.43,234.238 1271,236.171 1271.56,236.881 1272.13,235.434 1272.7,235.141 1273.27,233.849 1273.84,231.852 1274.41,231.885 1274.97,230.776 1275.54,229.682 1276.11,229.587 1276.68,227.482 1277.25,227.683 1277.82,226.919 1278.38,227.207 1278.95,227.566 1279.52,227.979 1280.09,229.015 1280.66,230.096 1281.23,232.332 1281.79,231.425 1282.36,233.558 1282.93,235.515 1283.5,235.174 1284.07,234.81 1284.64,233.8 1285.2,235.792 1285.77,234.239 1286.34,230.952 1286.91,229.757 1287.48,229.85 1288.05,231.825 1288.61,229.81 1289.18,228.937 1289.75,228.979 1290.32,228.376 1290.89,227.402 1291.46,227.509 1292.02,226.934 1292.59,227.333 1293.16,226.526 1293.73,225.826 1294.3,226.296 1294.87,227.642 1295.43,227.973 1296,227.07 1296.57,225.442 1297.14,223.965 1297.71,224.338 1298.28,224.069 1298.84,226.605 1299.41,230.216 1299.98,232.325 1300.55,234.267 1301.12,234.035 1301.69,233.856 1302.25,233.762 1302.82,235.653 1303.39,234.541 1303.96,235.448 1304.53,234.206 1305.1,236.004 1305.66,234.732 1306.23,231.511 1306.8,230.348 1307.37,229.486 1307.94,230.779 1308.51,232.136 1309.07,234.173 1309.64,232.905 1310.21,230.893 1310.78,232.101 1311.35,233.039 1311.92,232.823 1312.48,229.679 1313.05,229.941 1313.62,229.874 1314.19,230.154 1314.76,233.6 1315.33,231.35 1315.89,233.587 1316.46,233.369 1317.03,235.429 1317.6,234.216 1318.17,234.023 1318.74,233.829 1319.3,234.678 1319.87,235.356 1320.44,236.088 1321.01,234.739 1321.58,235.408 1322.15,240.286 1322.71,239.832 1323.28,238.317 1323.85,237.742 1324.42,238.391 1324.99,236.739 1325.56,236.357 1326.12,234.733 1326.69,232.308 1327.26,232.104 1327.83,233.285 1328.4,231.907 1328.97,232.893 1329.53,232.71 1330.1,231.611 1330.67,232.72 1331.24,231.528 1331.81,231.538 1332.38,231.354 1332.94,233.423 1333.51,231.239 1334.08,230.96 1334.65,230.695 1335.22,231.783 1335.79,231.824 1336.36,232.81 1336.92,233.547 1337.49,231.367 1338.06,231.15 1338.63,230.161 1339.2,232.309 1339.77,232.173 1340.33,233.179 1340.9,231.816 1341.47,231.74 1342.04,232.759 1342.61,235.729 1343.18,235.021 1343.74,235.706 1344.31,235.397 1344.88,234.702 1345.45,233.232 1346.02,234.921 1346.59,233.6 1347.15,235.38 1347.72,234.914 1348.29,231.804 1348.86,232.507 1349.43,232.273 1350,232.161 1350.56,232.153 1351.13,231.866 1351.7,231.769 1352.27,230.697 1352.84,228.587 1353.41,230.692 1353.97,231.481 1354.54,231.553 1355.11,232.382 1355.68,232.173 1356.25,232.374 1356.82,232.449 1357.38,232.363 1357.95,231.335 1358.52,230.246 1359.09,230.471 1359.66,228.526 1360.23,227.628 1360.79,225.867 1361.36,229.21 1361.93,230.297 1362.5,227.15 1363.07,227.314 1363.64,225.507 1364.2,225.725 1364.77,225.124 1365.34,224.627 1365.91,224.882 1366.48,227.382 1367.05,229.665 1367.61,229.735 1368.18,228.567 1368.75,228.747 1369.32,231.083 1369.89,227.913 1370.46,227.069 1371.02,228.497 1371.59,228.629 1372.16,225.772 1372.73,225.259 1373.3,226.647 1373.87,228.022 1374.43,227.319 1375,226.612 1375.57,226.861 1376.14,227.989 1376.71,226.151 1377.28,227.361 1377.84,227.698 1378.41,227.926 1378.98,227.306 1379.55,227.672 1380.12,230.221 1380.69,229.524 1381.25,228.636 1381.82,229.965 1382.39,229.151 1382.96,231.457 1383.53,230.635 1384.1,230.655 1384.66,229.76 1385.23,231.127 1385.8,232.189 1386.37,230.86 1386.94,233.023 1387.51,234.043 1388.07,233.793 1388.64,232.801 1389.21,233.762 1389.78,232.559 1390.35,231.743 1390.92,230.668 1391.48,230.778 1392.05,232.068 1392.62,230.097 1393.19,232.328 1393.76,233.273 1394.33,233.956 1394.89,233.027 1395.46,231.964 1396.03,229.954 1396.6,230.148 1397.17,230.437 1397.74,228.417 1398.3,227.826 1398.87,228.119 1399.44,228.336 1400.01,226.543 1400.58,225.74 1401.15,225.085 1401.71,226.79 1402.28,228.298 1402.85,226.638 1403.42,226.047 1403.99,225.415 1404.56,226.076 1405.13,225.476 1405.69,226.016 1406.26,226.469 1406.83,225.093 1407.4,224.994 1407.97,226.788 1408.54,227.229 1409.1,229.783 1409.67,229.896 1410.24,230.229 1410.81,230.609 1411.38,229.913 1411.95,232.294 1412.51,231.248 1413.08,234.368 1413.65,235.353 1414.22,236.179 1414.79,236.888 1415.36,237.702 1415.92,237.449 1416.49,238.048 1417.06,239.713 1417.63,239.464 1418.2,236.94 1418.77,236.565 1419.33,236.081 1419.9,237.834 1420.47,237.283 1421.04,235.575 1421.61,237.259 1422.18,237.878 1422.74,235.477 1423.31,234.384 1423.88,234.211 1424.45,233.962 1425.02,234.012 1425.59,231.798 1426.15,228.832 1426.72,228.915 1427.29,228.054 1427.86,226.13 1428.43,226.484 1429,230.132 1429.56,227.244 1430.13,227.426 1430.7,227.773 1431.27,227.912 1431.84,228.058 1432.41,230.216 1432.97,232.458 1433.54,231.237 1434.11,232.317 1434.68,234.588 1435.25,235.629 1435.82,234.376 1436.38,233.19 1436.95,232.874 1437.52,232.595 1438.09,231.61 1438.66,234.625 1439.23,235.669 1439.79,233.175 1440.36,231.707 1440.93,233.684 1441.5,233.56 1442.07,234.55 1442.64,233.467 1443.2,235.582 1443.77,237.389 1444.34,236.913 1444.91,235.406 1445.48,234.884 1446.05,232.621 1446.61,235.7 1447.18,234.264 1447.75,233.95 1448.32,232.768 1448.89,231.727 1449.46,232.785 1450.02,233.841 1450.59,232.657 1451.16,232.769 1451.73,233.768 1452.3,232.543 1452.87,232.544 1453.43,229.261 1454,229.388 1454.57,229.354 1455.14,228.409 1455.71,229.746 1456.28,231.025 1456.84,234.057 1457.41,233.748 1457.98,234.488 1458.55,232.232 1459.12,235.113 1459.69,235.806 1460.25,236.348 1460.82,235.792 1461.39,234.429 1461.96,233.239 1462.53,235.155 1463.1,234.743 1463.66,235.584 1464.23,236.009 1464.8,234.469 1465.37,235.209 1465.94,234.911 1466.51,234.761 1467.07,232.195 1467.64,232.937 1468.21,231.948 1468.78,231.91 1469.35,230.756 1469.92,231.729 1470.48,231.476 1471.05,231.306 1471.62,232.288 1472.19,233.058 1472.76,234.691 1473.33,234.338 1473.89,233.016 1474.46,233.958 1475.03,233.63 1475.6,232.246 1476.17,231.871 1476.74,229.589 1477.31,229.647 1477.87,230.681 1478.44,230.527 1479.01,230.437 1479.58,231.372 1480.15,229.159 1480.72,229.145 1481.28,229.154 1481.85,229.04 1482.42,230.334 1482.99,230.412 1483.56,229.183 1484.13,226.29 1484.69,226.519 1485.26,226.668 1485.83,228.014 1486.4,227.475 1486.97,225.509 1487.54,224.855 1488.1,225.303 1488.67,227.451 1489.24,230.831 1489.81,230.179 1490.38,231.381 1490.95,231.398 1491.51,230.132 1492.08,232.49 1492.65,232.26 1493.22,231.172 1493.79,232.285 1494.36,233.144 1494.92,232.894 1495.49,230.792 1496.06,232.872 1496.63,230.524 1497.2,230.78 1497.77,232.579 1498.33,231.485 1498.9,231.449 1499.47,232.723 1500.04,232.754 1500.61,234.51 1501.18,235.154 1501.74,235.555 1502.31,235.395 1502.88,235.103 1503.45,232.825 1504.02,230.495 1504.59,230.384 1505.15,230.514 1505.72,231.503 1506.29,233.572 1506.86,232.507 1507.43,233.565 1508,232.42 1508.56,231.454 1509.13,231.433 1509.7,235.509 1510.27,233.866 1510.84,231.515 1511.41,231.479 1511.97,230.274 1512.54,228.207 1513.11,226.404 1513.68,227.504 1514.25,227.853 1514.82,225.924 1515.38,226.177 1515.95,227.572 1516.52,227.915 1517.09,227.152 1517.66,226.519 1518.23,226.043 1518.79,227.169 1519.36,227.431 1519.93,228.782 1520.5,232.144 1521.07,230.932 1521.64,230.039 1522.2,230.134 1522.77,231.288 1523.34,231.321 1523.91,230.251 1524.48,230.154 1525.05,230.257 1525.61,230.472 1526.18,232.579 1526.75,233.471 1527.32,234.545 1527.89,234.154 1528.46,233.921 1529.02,233.477 1529.59,233.433 1530.16,232.078 1530.73,231.676 1531.3,230.616 1531.87,231.651 1532.43,230.252 1533,228.975 1533.57,230.152 1534.14,230.173 1534.71,232.123 1535.28,231.061 1535.84,228.922 1536.41,227.719 1536.98,226.905 1537.55,228.153 1538.12,228.229 1538.69,230.665 1539.25,230.718 1539.82,229.745 1540.39,228.083 1540.96,230.281 1541.53,230.558 1542.1,229.635 1542.66,227.662 1543.23,227.736 1543.8,231.344 1544.37,233.388 1544.94,231.342 1545.51,229.329 1546.08,230.546 1546.64,229.38 1547.21,230.587 1547.78,230.597 1548.35,229.639 1548.92,230.872 1549.49,231.778 1550.05,231.706 1550.62,231.806 1551.19,231.982 1551.76,232.208 1552.33,232.081 1552.9,231.067 1553.46,230.058 1554.03,231.189 1554.6,231.139 1555.17,230.408 1555.74,229.539 1556.31,229.694 1556.87,228.555 1557.44,227.751 1558.01,228.152 1558.58,230.3 1559.15,228.531 1559.72,227.664 1560.28,227.813 1560.85,227.979 1561.42,232.421 1561.99,233.521 1562.56,234.523 1563.13,234.29 1563.69,233.85 1564.26,234.733 1564.83,234.557 1565.4,234.358 1565.97,233.284 1566.54,235.185 1567.1,235.055 1567.67,232.717 1568.24,231.59 1568.81,233.81 1569.38,233.561 1569.95,232.234 1570.51,232.182 1571.08,231.216 1571.65,231.288 1572.22,233.38 1572.79,232.215 1573.36,231.193 1573.92,231.232 1574.49,230.047 1575.06,230.068 1575.63,229.13 1576.2,227.175 1576.77,228.447 1577.33,231.89 1577.9,232.688 1578.47,233.573 1579.04,233.492 1579.61,235.319 1580.18,236.201 1580.74,236.942 1581.31,235.402 1581.88,236.029 1582.45,236.495 1583.02,235.816 1583.59,237.417 1584.15,233.892 1584.72,233.462 1585.29,232.357 1585.86,233.175 1586.43,233.112 1587,231.931 1587.56,231.874 1588.13,231.683 1588.7,232.563 1589.27,231.433 1589.84,232.23 1590.41,234.153 1590.97,233.975 1591.54,233.711 1592.11,235.359 1592.68,233.84 1593.25,231.678 1593.82,231.685 1594.38,232.4 1594.95,232.196 1595.52,231 1596.09,229.834 1596.66,229.983 1597.23,228.061 1597.79,228.233 1598.36,228.339 1598.93,226.493 1599.5,226.899 1600.07,228.107 1600.64,227.165 1601.2,227.31 1601.77,227.601 1602.34,227.623 1602.91,227.715 1603.48,227.953 1604.05,227.088 1604.61,228.422 1605.18,229.595 1605.75,227.72 1606.32,228.08 1606.89,229.463 1607.46,230.581 1608.02,230.326 1608.59,229.508 1609.16,229.619 1609.73,230.072 1610.3,231.355 1610.87,230.453 1611.43,229.52 1612,230.692 1612.57,231.823 1613.14,231.662 1613.71,232.662 1614.28,232.476 1614.84,232.478 1615.41,232.283 1615.98,231.006 1616.55,225.933 1617.12,227.33 1617.69,228.72 1618.26,230.01 1618.82,229.322 1619.39,227.524 1619.96,227.753 1620.53,228.895 1621.1,229.213 1621.67,227.572 1622.23,226.822 1622.8,226.101 1623.37,226.603 1623.94,228.875 1624.51,228.009 1625.08,226.353 1625.64,229.738 1626.21,230.977 1626.78,230.877 1627.35,232.812 1627.92,232.688 1628.49,236.819 1629.05,237.613 1629.62,237.171 1630.19,237.169 1630.76,237.855 1631.33,236.524 1631.9,236.317 1632.46,237.018 1633.03,236.442 1633.6,235.049 1634.17,234.82 1634.74,233.406 1635.31,232.155 1635.87,233.113 1636.44,232.857 1637.01,234.768 1637.58,234.407 1638.15,235.304 1638.72,233.842 1639.28,231.544 1639.85,231.694 1640.42,233.817 1640.99,233.575 1641.56,233.346 1642.13,231.217 1642.69,231.128 1643.26,232.952 1643.83,230.887 1644.4,232.101 1644.97,233.803 1645.54,232.513 1646.1,233.18 1646.67,233 1647.24,231.926 1647.81,232.93 1648.38,231.494 1648.95,231.624 1649.51,232.613 1650.08,232.491 1650.65,231.543 1651.22,232.381 1651.79,232.369 1652.36,231.297 1652.92,230.28 1653.49,232.417 1654.06,232.159 1654.63,231.194 1655.2,230.056 1655.77,229.07 1656.33,230.264 1656.9,229.286 1657.47,227.041 1658.04,225.106 1658.61,225.569 1659.18,229.032 1659.74,232.263 1660.31,231.103 1660.88,230.159 1661.45,228.999 1662.02,230.009 1662.59,230.048 1663.15,230.918 1663.72,232.835 1664.29,232.815 1664.86,232.646 1665.43,231.447 1666,231.461 1666.56,230.248 1667.13,229.591 1667.7,231.71 1668.27,234.704 1668.84,236.401 1669.41,237.113 1669.97,236.647 1670.54,235.083 1671.11,234.797 1671.68,233.277 1672.25,232.973 1672.82,231.771 1673.38,233.539 1673.95,230.124 1674.52,229.949 1675.09,230.032 1675.66,230.084 1676.23,231.051 1676.79,229.831 1677.36,229.99 1677.93,229.033 1678.5,232.126 1679.07,232.1 1679.64,230.985 1680.2,231.01 1680.77,232.942 1681.34,231.559 1681.91,230.419 1682.48,231.323 1683.05,231.224 1683.61,230.158 1684.18,229.034 1684.75,230.118 1685.32,230.092 1685.89,230.305 1686.46,231.553 1687.02,232.816 1687.59,232.944 1688.16,232.834 1688.73,232.419 1689.3,231.246 1689.87,229.995 1690.44,233.099 1691,231.984 1691.57,234.072 1692.14,233.571 1692.71,233.333 1693.28,234.079 1693.85,234.859 1694.41,234.361 1694.98,232.185 1695.55,233.305 1696.12,234.228 1696.69,232.8 1697.26,232.702 1697.82,231.675 1698.39,230.619 1698.96,230.641 1699.53,228.892 1700.1,228.969 1700.67,228.214 1701.23,228.244 1701.8,226.45 1702.37,224.516 1702.94,224.989 1703.51,225.394 1704.08,226.026 1704.64,226.386 1705.21,225.687 1705.78,224.896 1706.35,225.573 1706.92,229.081 1707.49,230.469 1708.05,230.675 1708.62,228.823 1709.19,228.94 1709.76,229.927 1710.33,231.874 1710.9,232.877 1711.46,233.76 1712.03,232.467 1712.6,232.152 1713.17,230.945 1713.74,230.128 1714.31,230.265 1714.87,232.406 1715.44,231.302 1716.01,232.281 1716.58,232.272 1717.15,232.145 1717.72,232.176 1718.28,233.14 1718.85,234.157 1719.42,233.759 1719.99,234.455 1720.56,233.953 1721.13,231.637 1721.69,233.554 1722.26,231.984 1722.83,230.658 1723.4,230.635 1723.97,229.765 1724.54,229.951 1725.1,230.853 1725.67,229.684 1726.24,230.813 1726.81,228.746 1727.38,228.858 1727.95,227.885 1728.51,228.033 1729.08,231.458 1729.65,230.643 1730.22,229.807 1730.79,229.934 1731.36,228.018 1731.92,225.283 1732.49,224.571 1733.06,226.161 1733.63,225.47 1734.2,225.831 1734.77,226.001 1735.33,227.741 1735.9,229.15 1736.47,229.264 1737.04,229.586 1737.61,229.73 1738.18,229.942 1738.74,230.046 1739.31,224.9 1739.88,226.252 1740.45,229.752 1741.02,231.121 1741.59,231.259 1742.15,230.331 1742.72,230.432 1743.29,230.379 1743.86,230.513 1744.43,231.628 1745,230.545 1745.56,229.754 1746.13,232.094 1746.7,231.212 1747.27,231.24 1747.84,234.451 1748.41,234.384 1748.97,233.089 1749.54,232.904 1750.11,231.846 1750.68,230.766 1751.25,229.794 1751.82,229.822 1752.38,228.864 1752.95,229.084 1753.52,229.303 1754.09,229.416 1754.66,229.484 1755.23,231.906 1755.79,230.769 1756.36,231.856 1756.93,231.783 1757.5,229.558 1758.07,229.835 1758.64,232.005 1759.21,234.052 1759.77,234.044 1760.34,234.057 1760.91,233.943 1761.48,233.866 1762.05,232.686 1762.62,231.486 1763.18,232.752 1763.75,230.595 1764.32,229.797 1764.89,227.014 1765.46,229.418 1766.03,229.668 1766.59,229.809 1767.16,229.91 1767.73,230.975 1768.3,232.062 1768.87,232.034 1769.44,231.136 1770,230.217 1770.57,230.477 1771.14,228.393 1771.71,226.298 1772.28,228.762 1772.85,228.904 1773.41,227.996 1773.98,227.128 1774.55,227.36 1775.12,227.873 1775.69,229.275 1776.26,228.592 1776.82,230.805 1777.39,231.131 1777.96,230.212 1778.53,232.274 1779.1,233.384 1779.67,233.201 1780.23,235.178 1780.8,234.811 1781.37,234.647 1781.94,234.486 1782.51,234.553 1783.08,233.272 1783.64,231.063 1784.21,230.3 1784.78,231.411 1785.35,232.546 1785.92,232.421 1786.49,233.384 1787.05,230.051 1787.62,228.352 1788.19,228.713 1788.76,229.072 1789.33,229.108 1789.9,228.404 1790.46,226.595 1791.03,227.047 1791.6,228.478 1792.17,233.896 1792.74,233.443 1793.31,232.53 1793.87,235.567 1794.44,235.515 1795.01,236.207 1795.58,234.962 1796.15,234.683 1796.72,236.542 1797.28,234.04 1797.85,231.848 1798.42,230.753 1798.99,230.896 1799.56,229.874 1800.13,230.911 1800.69,227.87 1801.26,230.101 1801.83,231.428 1802.4,234.466 1802.97,235.289 1803.54,234.986 1804.1,233.736 1804.67,234.623 1805.24,232.139 1805.81,232.086 1806.38,233.005 1806.95,230.194 1807.51,227.99 1808.08,227.469 1808.65,225.496 1809.22,225.94 1809.79,225.304 1810.36,226.795 1810.92,229.987 1811.49,231.22 1812.06,230.339 1812.63,230.538 1813.2,231.714 1813.77,231.712 1814.33,233.902 1814.9,234.634 1815.47,233.533 1816.04,233.587 1816.61,234.57 1817.18,237.72 1817.74,242.585 1818.31,241.827 1818.88,240.123 1819.45,239.63 1820.02,239.082 1820.59,238.295 1821.15,237.942 1821.72,239.506 1822.29,238.79 1822.86,236.273 1823.43,235.713 1824,234.201 1824.56,234.932 1825.13,234.664 1825.7,235.487 1826.27,234.097 1826.84,234.009 1827.41,233.745 1827.97,231.413 1828.54,232.512 1829.11,233.148 1829.68,233.025 1830.25,232.962 1830.82,232.567 1831.39,233.212 1831.95,232.846 1832.52,231.561 1833.09,229.404 1833.66,229.367 1834.23,229.395 1834.8,228.374 1835.36,227.424 1835.93,228.626 1836.5,229.924 1837.07,228.739 1837.64,228.814 1838.21,228.862 1838.77,228.025 1839.34,227.311 1839.91,227.487 1840.48,226.928 1841.05,227.155 1841.62,225.476 1842.18,222.886 1842.75,222.406 1843.32,222.067 1843.89,221.619 1844.46,221.174 1845.03,219.895 1845.59,222.081 1846.16,223.997 1846.73,224.867 1847.3,224.165 1847.87,223.707 1848.44,224.212 1849,222.948 1849.57,223.476 1850.14,224.952 1850.71,226.504 1851.28,228.008 1851.85,229.354 1852.41,228.588 1852.98,228.923 1853.55,228.09 1854.12,230.371 1854.69,231.797 1855.26,230.906 1855.82,232.122 1856.39,232.072 1856.96,232.211 1857.53,231.269 1858.1,232.534 1858.67,231.756 1859.23,235.114 1859.8,235.96 1860.37,233.789 1860.94,232.728 1861.51,233.053 1862.08,232.964 1862.64,233.195 1863.21,235.254 1863.78,236.025 1864.35,237.877 1864.92,237.592 1865.49,236.392 1866.05,237.047 1866.62,237.785 1867.19,237.629 1867.76,236.185 1868.33,236.139 1868.9,234.859 1869.46,235.895 1870.03,235.608 1870.6,233.302 1871.17,232.001 1871.74,230.992 1872.31,233.241 1872.87,237.202 1873.44,235.623 1874.01,236.45 1874.58,233.922 1875.15,234.712 1875.72,237.322 1876.28,237.674 1876.85,238.378 1877.42,236.887 1877.99,237.427 1878.56,235.912 1879.13,233.576 1879.69,231.197 1880.26,232.147 1880.83,233.186 1881.4,232.131 1881.97,231.934 1882.54,231.94 1883.1,231.945 1883.67,230.782 1884.24,230.786 1884.81,232.808 1885.38,233.863 1885.95,233.49 1886.51,232.105 1887.08,231.786 1887.65,232.677 1888.22,233.507 1888.79,233.207 1889.36,233.779 1889.92,232.503 1890.49,232.245 1891.06,232.209 1891.63,229.093 1892.2,228.113 1892.77,229.227 1893.33,227.205 1893.9,227.431 1894.47,227.835 1895.04,227.883 1895.61,227.217 1896.18,228.633 1896.74,227.594 1897.31,225.925 1897.88,227.274 1898.45,227.675 1899.02,229.881 1899.59,228.008 1900.16,230.537 1900.72,230.424 1901.29,231.632 1901.86,232.677 1902.43,235.499 1903,236.029 1903.57,235.606 1904.13,234.283 1904.7,237.062 1905.27,236.617 1905.84,236.966 1906.41,235.501 1906.98,232.943 1907.54,234.713 1908.11,235.551 1908.68,234.003 1909.25,232.82 1909.82,234.66 1910.39,234.276 1910.95,234.956 1911.52,235.638 1912.09,235.444 1912.66,234.24 1913.23,233.704 1913.8,234.464 1914.36,233.139 1914.93,231.893 1915.5,232.797 1916.07,232.449 1916.64,232.354 1917.21,232.34 1917.77,231.201 1918.34,229.974 1918.91,229.849 1919.48,228.752 1920.05,229.871 1920.62,230.736 1921.18,229.658 1921.75,228.488 1922.32,227.449 1922.89,228.601 1923.46,229.858 1924.03,229.972 1924.59,228.812 1925.16,228.862 1925.73,228.859 1926.3,229.05 1926.87,227.896 1927.44,228.71 1928,228.857 1928.57,230.901 1929.14,229.783 1929.71,230.799 1930.28,230.465 1930.85,230.262 1931.41,232.214 1931.98,232.1 1932.55,230.838 1933.12,228.729 1933.69,228.803 1934.26,230.056 1934.82,227.013 1935.39,227.422 1935.96,229.825 1936.53,227.768 1937.1,227.812 1937.67,228.995 1938.23,229.173 1938.8,229.194 1939.37,230.291 1939.94,231.337 1940.51,231.019 1941.08,229.73 1941.64,229.808 1942.21,231.787 1942.78,229.843 1943.35,228.968 1943.92,228.157 1944.49,229.286 1945.05,226.365 1945.62,226.45 1946.19,225.623 1946.76,226.096 1947.33,226.359 1947.9,224.759 1948.46,223.256 1949.03,225.881 1949.6,227.462 1950.17,225.785 1950.74,226.345 1951.31,226.733 1951.87,227.2 1952.44,227.542 1953.01,225.682 1953.58,226.089 1954.15,228.509 1954.72,231.82 1955.28,232.164 1955.85,232.337 1956.42,232.291 1956.99,231.225 1957.56,234.313 1958.13,235.191 1958.69,236.045 1959.26,235.781 1959.83,236.717 1960.4,236.254 1960.97,235.93 1961.54,236.754 1962.1,236.441 1962.67,238.246 1963.24,238.719 1963.81,236.182 1964.38,234.832 1964.95,234.504 1965.51,232.044 1966.08,231.104 1966.65,232.282 1967.22,230.184 1967.79,229.39 1968.36,228.521 1968.92,228.84 1969.49,230.209 1970.06,231.519 1970.63,233.406 1971.2,232.257 1971.77,229.968 1972.34,230.829 1972.9,230.801 1973.47,231.134 1974.04,232.969 1974.61,233.82 1975.18,234.595 1975.75,235.309 1976.31,234.068 1976.88,232.787 1977.45,234.334 1978.02,233.922 1978.59,234.574 1979.16,234.494 1979.72,236.229 1980.29,236.686 1980.86,233.893 1981.43,232.702 1982,232.728 1982.57,229.638 1983.13,227.468 1983.7,228.671 1984.27,229.771 1984.84,229.989 1985.41,230.217 1985.98,230.263 1986.54,229.255 1987.11,228.479 1987.68,227.69 1988.25,228.067 1988.82,229.171 1989.39,228.107 1989.95,229.244 1990.52,228.354 1991.09,229.491 1991.66,229.708 1992.23,232.091 1992.8,230.938 1993.36,232.044 1993.93,232.154 1994.5,231.099 1995.07,231.133 1995.64,231.102 1996.21,231.179 1996.77,234.101 1997.34,235.046 1997.91,235.838 1998.48,233.532 1999.05,235.266 1999.62,233.993 2000.18,234.929 2000.75,236.412 2001.32,236.987 2001.89,234.379 2002.46,234.048 2003.03,232.507 2003.59,234.318 2004.16,234.038 2004.73,232.663 2005.3,231.349 2005.87,230.446 2006.44,230.476 2007,231.492 2007.57,231.201 2008.14,231.13 2008.71,232.006 2009.28,230.751 2009.85,231.693 2010.41,231.575 2010.98,231.336 2011.55,231.299 2012.12,233.52 2012.69,233.223 2013.26,231.013 2013.82,229.937 2014.39,228.884 2014.96,230.996 2015.53,230.877 2016.1,231.063 2016.67,232.019 2017.23,234.054 2017.8,234.813 2018.37,235.716 2018.94,234.255 2019.51,235.932 2020.08,234.645 2020.64,232.349 2021.21,231.276 2021.78,231.084 2022.35,228.834 2022.92,226.963 2023.49,226.101 2024.05,226.415 2024.62,225.845 2025.19,226.045 2025.76,226.561 2026.33,227.078 2026.9,226.29 2027.46,227.625 2028.03,227.846 2028.6,229.058 2029.17,226.241 2029.74,225.592 2030.31,224.838 2030.87,224.318 2031.44,224.059 2032.01,224.478 2032.58,222.628 2033.15,223.023 2033.72,224.572 2034.28,226.023 2034.85,226.322 2035.42,227.807 2035.99,230.089 2036.56,230.238 2037.13,229.18 2037.69,230.381 2038.26,230.553 2038.83,231.93 2039.4,231.938 2039.97,230.942 2040.54,230.036 2041.11,230.193 2041.67,229.349 2042.24,229.34 2042.81,230.343 2043.38,227.447 2043.95,224.831 2044.52,227.338 2045.08,227.838 2045.65,226.202 2046.22,226.823 2046.79,227.2 2047.36,226.546 2047.93,228.03 2048.49,228.177 2049.06,228.523 2049.63,228.802 2050.2,228.169 2050.77,227.466 2051.34,228.965 2051.9,229.394 2052.47,230.573 2053.04,231.726 2053.61,229.72 2054.18,228.802 2054.75,227.092 2055.31,228.732 2055.88,229.084 2056.45,229.431 2057.02,232.727 2057.59,230.958 2058.16,230.975 2058.72,229.096 2059.29,230.339 2059.86,231.586 2060.43,231.665 2061,231.711 2061.57,231.637 2062.13,231.746 2062.7,229.853 2063.27,231.207 2063.84,230.321 2064.41,229.59 2064.98,232.168 2065.54,232.424 2066.11,233.676 2066.68,232.907 2067.25,233.025 2067.82,232.94 2068.39,233.995 2068.95,233.774 2069.52,232.443 2070.09,231.484 2070.66,231.488 2071.23,234.463 2071.8,236.479 2072.36,237.224 2072.93,235.024 2073.5,237.1 2074.07,235.871 2074.64,236.692 2075.21,234.407 2075.77,233.168 2076.34,233.089 2076.91,232.14 2077.48,230.215 2078.05,229.403 2078.62,231.596 2079.18,231.69 2079.75,231.625 2080.32,230.599 2080.89,232.78 2081.46,232.884 2082.03,232.972 2082.59,234.042 2083.16,231.81 2083.73,230.923 2084.3,232.051 2084.87,232.247 2085.44,231.145 2086,231.201 2086.57,230.322 2087.14,227.275 2087.71,228.559 2088.28,230.041 2088.85,231.271 2089.41,231.273 2089.98,231.53 2090.55,231.502 2091.12,230.518 2091.69,231.919 2092.26,231.807 2092.82,232.709 2093.39,232.745 2093.96,232.061 2094.53,232.153 2095.1,234.298 2095.67,235.143 2096.23,233.948 2096.8,232.711 2097.37,232.593 2097.94,231.609 2098.51,231.507 2099.08,232.491 2099.64,233.28 2100.21,234.283 2100.78,234.915 2101.35,233.842 2101.92,233.589 2102.49,234.551 2103.05,234.382 2103.62,233.14 2104.19,231.879 2104.76,229.814 2105.33,228.868 2105.9,228.091 2106.46,229.399 2107.03,229.488 2107.6,231.825 2108.17,230.547 2108.74,230.383 2109.31,230.513 2109.87,232.519 2110.44,231.405 2111.01,231.336 2111.58,232.506 2112.15,233.624 2112.72,232.443 2113.29,234.516 2113.85,232.038 2114.42,232.957 2114.99,233.961 2115.56,231.708 2116.13,231.882 2116.7,232.834 2117.26,232.524 2117.83,233.363 2118.4,235.325 2118.97,235.046 2119.54,233.548 2120.11,234.047 2120.67,234.852 2121.24,234.607 2121.81,234.476 2122.38,236.166 2122.95,234.921 2123.52,234.642 2124.08,234.553 2124.65,233.561 2125.22,233.128 2125.79,230.974 2126.36,230.951 2126.93,230.937 2127.49,231.088 2128.06,231.095 2128.63,232.099 2129.2,233.061 2129.77,231.659 2130.34,231.594 2130.9,231.336 2131.47,233.447 2132.04,233.265 2132.61,232.17 2133.18,231.983 2133.75,233.074 2134.31,230.846 2134.88,232.927 2135.45,233.891 2136.02,232.729 2136.59,229.6 2137.16,229.669 2137.72,228.76 2138.29,228.913 2138.86,229.121 2139.43,229.152 2140,229.222 2140.57,230.308 2141.13,230.389 2141.7,230.39 2142.27,230.271 2142.84,233.419 2143.41,234.155 2143.98,237.02 2144.54,237.457 2145.11,236.093 2145.68,235.654 2146.25,235.214 2146.82,234.862 2147.39,234.357 2147.95,234.968 2148.52,233.448 2149.09,231.175 2149.66,232.479 2150.23,231.356 2150.8,231.268 2151.36,230.01 2151.93,228.833 2152.5,227.877 2153.07,226.907 2153.64,226.252 2154.21,226.768 2154.77,228.96 2155.34,231.119 2155.91,231.027 2156.48,231.118 2157.05,229.909 2157.62,231.034 2158.18,230.264 2158.75,228.195 2159.32,227.162 2159.89,226.305 \"/>\n<path clip-path=\"url(#clip350)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip350)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip350)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip350)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip350)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip350)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.032 ± 0.021\n  with uncertainty of ± 0.0018977986186647126\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01423 ± (0.00206628, 0.00215078) (MC)\n  95% confidence interval: [-4.01859, -4.00987]) (MC)\n  linear error propagation: -4.01439 ± 0.00213572\n  |δ_y| = |0.00166691| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.01423019851471, val_l = 0.004359037614690919, val_u = 0.004356605312871409)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip380\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip380)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip381\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip380)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip382\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1151.44 2211.02,1151.44 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1003.79 2211.02,1003.79 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,856.131 2211.02,856.131 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,708.477 2211.02,708.477 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,560.822 2211.02,560.822 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,413.168 2211.02,413.168 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,265.514 2211.02,265.514 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1151.44 365.751,1151.44 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1003.79 365.751,1003.79 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,856.131 365.751,856.131 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,708.477 365.751,708.477 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,560.822 365.751,560.822 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,413.168 365.751,413.168 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,265.514 365.751,265.514 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M298.909 1137.24 Q295.298 1137.24 293.469 1140.8 Q291.664 1144.35 291.664 1151.47 Q291.664 1158.58 293.469 1162.15 Q295.298 1165.69 298.909 1165.69 Q302.543 1165.69 304.349 1162.15 Q306.177 1158.58 306.177 1151.47 Q306.177 1144.35 304.349 1140.8 Q302.543 1137.24 298.909 1137.24 M298.909 1133.53 Q304.719 1133.53 307.775 1138.14 Q310.853 1142.72 310.853 1151.47 Q310.853 1160.2 307.775 1164.81 Q304.719 1169.39 298.909 1169.39 Q293.099 1169.39 290.02 1164.81 Q286.964 1160.2 286.964 1151.47 Q286.964 1142.72 290.02 1138.14 Q293.099 1133.53 298.909 1133.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M259.557 1017.13 L267.196 1017.13 L267.196 990.765 L258.886 992.431 L258.886 988.172 L267.15 986.506 L271.826 986.506 L271.826 1017.13 L279.465 1017.13 L279.465 1021.07 L259.557 1021.07 L259.557 1017.13 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M298.909 989.584 Q295.298 989.584 293.469 993.149 Q291.664 996.691 291.664 1003.82 Q291.664 1010.93 293.469 1014.49 Q295.298 1018.03 298.909 1018.03 Q302.543 1018.03 304.349 1014.49 Q306.177 1010.93 306.177 1003.82 Q306.177 996.691 304.349 993.149 Q302.543 989.584 298.909 989.584 M298.909 985.881 Q304.719 985.881 307.775 990.487 Q310.853 995.07 310.853 1003.82 Q310.853 1012.55 307.775 1017.15 Q304.719 1021.74 298.909 1021.74 Q293.099 1021.74 290.02 1017.15 Q286.964 1012.55 286.964 1003.82 Q286.964 995.07 290.02 990.487 Q293.099 985.881 298.909 985.881 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M262.775 869.476 L279.094 869.476 L279.094 873.411 L257.15 873.411 L257.15 869.476 Q259.812 866.721 264.395 862.092 Q269.002 857.439 270.182 856.096 Q272.428 853.573 273.307 851.837 Q274.21 850.078 274.21 848.388 Q274.21 845.634 272.266 843.897 Q270.344 842.161 267.242 842.161 Q265.043 842.161 262.59 842.925 Q260.159 843.689 257.381 845.24 L257.381 840.518 Q260.205 839.384 262.659 838.805 Q265.113 838.226 267.15 838.226 Q272.52 838.226 275.715 840.911 Q278.909 843.596 278.909 848.087 Q278.909 850.217 278.099 852.138 Q277.312 854.036 275.205 856.629 Q274.627 857.3 271.525 860.518 Q268.423 863.712 262.775 869.476 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M298.909 841.93 Q295.298 841.93 293.469 845.495 Q291.664 849.036 291.664 856.166 Q291.664 863.272 293.469 866.837 Q295.298 870.379 298.909 870.379 Q302.543 870.379 304.349 866.837 Q306.177 863.272 306.177 856.166 Q306.177 849.036 304.349 845.495 Q302.543 841.93 298.909 841.93 M298.909 838.226 Q304.719 838.226 307.775 842.833 Q310.853 847.416 310.853 856.166 Q310.853 864.893 307.775 869.499 Q304.719 874.082 298.909 874.082 Q293.099 874.082 290.02 869.499 Q286.964 864.893 286.964 856.166 Q286.964 847.416 290.02 842.833 Q293.099 838.226 298.909 838.226 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M272.914 707.123 Q276.27 707.84 278.145 710.109 Q280.043 712.377 280.043 715.711 Q280.043 720.826 276.525 723.627 Q273.006 726.428 266.525 726.428 Q264.349 726.428 262.034 725.988 Q259.742 725.572 257.289 724.715 L257.289 720.201 Q259.233 721.335 261.548 721.914 Q263.863 722.493 266.386 722.493 Q270.784 722.493 273.076 720.757 Q275.39 719.021 275.39 715.711 Q275.39 712.655 273.238 710.942 Q271.108 709.206 267.289 709.206 L263.261 709.206 L263.261 705.363 L267.474 705.363 Q270.923 705.363 272.752 703.998 Q274.58 702.609 274.58 700.016 Q274.58 697.354 272.682 695.942 Q270.807 694.507 267.289 694.507 Q265.367 694.507 263.168 694.924 Q260.969 695.34 258.33 696.22 L258.33 692.053 Q260.992 691.312 263.307 690.942 Q265.645 690.572 267.705 690.572 Q273.029 690.572 276.131 693.002 Q279.233 695.41 279.233 699.53 Q279.233 702.4 277.59 704.391 Q275.946 706.359 272.914 707.123 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M298.909 694.275 Q295.298 694.275 293.469 697.84 Q291.664 701.382 291.664 708.511 Q291.664 715.618 293.469 719.183 Q295.298 722.724 298.909 722.724 Q302.543 722.724 304.349 719.183 Q306.177 715.618 306.177 708.511 Q306.177 701.382 304.349 697.84 Q302.543 694.275 298.909 694.275 M298.909 690.572 Q304.719 690.572 307.775 695.178 Q310.853 699.762 310.853 708.511 Q310.853 717.238 307.775 721.845 Q304.719 726.428 298.909 726.428 Q293.099 726.428 290.02 721.845 Q286.964 717.238 286.964 708.511 Q286.964 699.762 290.02 695.178 Q293.099 690.572 298.909 690.572 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M271.594 547.616 L259.789 566.065 L271.594 566.065 L271.594 547.616 M270.367 543.542 L276.247 543.542 L276.247 566.065 L281.177 566.065 L281.177 569.954 L276.247 569.954 L276.247 578.102 L271.594 578.102 L271.594 569.954 L255.992 569.954 L255.992 565.44 L270.367 543.542 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M298.909 546.621 Q295.298 546.621 293.469 550.186 Q291.664 553.727 291.664 560.857 Q291.664 567.964 293.469 571.528 Q295.298 575.07 298.909 575.07 Q302.543 575.07 304.349 571.528 Q306.177 567.964 306.177 560.857 Q306.177 553.727 304.349 550.186 Q302.543 546.621 298.909 546.621 M298.909 542.917 Q304.719 542.917 307.775 547.524 Q310.853 552.107 310.853 560.857 Q310.853 569.584 307.775 574.19 Q304.719 578.774 298.909 578.774 Q293.099 578.774 290.02 574.19 Q286.964 569.584 286.964 560.857 Q286.964 552.107 290.02 547.524 Q293.099 542.917 298.909 542.917 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M258.793 395.888 L277.15 395.888 L277.15 399.823 L263.076 399.823 L263.076 408.295 Q264.094 407.948 265.113 407.786 Q266.131 407.601 267.15 407.601 Q272.937 407.601 276.316 410.772 Q279.696 413.943 279.696 419.36 Q279.696 424.939 276.224 428.041 Q272.752 431.119 266.432 431.119 Q264.256 431.119 261.988 430.749 Q259.742 430.379 257.335 429.638 L257.335 424.939 Q259.418 426.073 261.641 426.629 Q263.863 427.184 266.34 427.184 Q270.344 427.184 272.682 425.078 Q275.02 422.971 275.02 419.36 Q275.02 415.749 272.682 413.642 Q270.344 411.536 266.34 411.536 Q264.465 411.536 262.59 411.953 Q260.738 412.369 258.793 413.249 L258.793 395.888 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M298.909 398.967 Q295.298 398.967 293.469 402.531 Q291.664 406.073 291.664 413.203 Q291.664 420.309 293.469 423.874 Q295.298 427.416 298.909 427.416 Q302.543 427.416 304.349 423.874 Q306.177 420.309 306.177 413.203 Q306.177 406.073 304.349 402.531 Q302.543 398.967 298.909 398.967 M298.909 395.263 Q304.719 395.263 307.775 399.869 Q310.853 404.453 310.853 413.203 Q310.853 421.929 307.775 426.536 Q304.719 431.119 298.909 431.119 Q293.099 431.119 290.02 426.536 Q286.964 421.929 286.964 413.203 Q286.964 404.453 290.02 399.869 Q293.099 395.263 298.909 395.263 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M269.326 263.65 Q266.178 263.65 264.326 265.803 Q262.497 267.956 262.497 271.706 Q262.497 275.432 264.326 277.608 Q266.178 279.761 269.326 279.761 Q272.474 279.761 274.303 277.608 Q276.154 275.432 276.154 271.706 Q276.154 267.956 274.303 265.803 Q272.474 263.65 269.326 263.65 M278.608 248.997 L278.608 253.257 Q276.849 252.423 275.043 251.984 Q273.261 251.544 271.502 251.544 Q266.872 251.544 264.418 254.669 Q261.988 257.794 261.641 264.113 Q263.006 262.099 265.066 261.034 Q267.127 259.946 269.603 259.946 Q274.812 259.946 277.821 263.118 Q280.853 266.266 280.853 271.706 Q280.853 277.03 277.705 280.247 Q274.557 283.465 269.326 283.465 Q263.33 283.465 260.159 278.882 Q256.988 274.275 256.988 265.548 Q256.988 257.354 260.877 252.493 Q264.766 247.609 271.316 247.609 Q273.076 247.609 274.858 247.956 Q276.664 248.303 278.608 248.997 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M298.909 251.312 Q295.298 251.312 293.469 254.877 Q291.664 258.419 291.664 265.548 Q291.664 272.655 293.469 276.22 Q295.298 279.761 298.909 279.761 Q302.543 279.761 304.349 276.22 Q306.177 272.655 306.177 265.548 Q306.177 258.419 304.349 254.877 Q302.543 251.312 298.909 251.312 M298.909 247.609 Q304.719 247.609 307.775 252.215 Q310.853 256.798 310.853 265.548 Q310.853 274.275 307.775 278.882 Q304.719 283.465 298.909 283.465 Q293.099 283.465 290.02 278.882 Q286.964 274.275 286.964 265.548 Q286.964 256.798 290.02 252.215 Q293.099 247.609 298.909 247.609 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip382)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1157.48 400.199,1156.42 400.786,1052.86 401.372,960.829 401.958,875.858 402.545,793.066 403.131,722.115 403.718,655.915 404.304,592.386 404.891,540.449 405.477,493.595 406.063,448.244 406.65,407.475 407.236,370.99 407.823,338.512 408.409,309.781 408.995,284.551 409.582,262.592 410.168,243.687 410.755,276.976 411.341,262.42 411.927,249.654 412.514,240.668 413.1,232.438 413.687,227.01 414.273,222.738 414.86,220.749 415.446,219.895 416.032,221.798 416.619,224.203 417.205,251.288 417.792,255.031 418.378,259.857 418.964,266.207 419.551,291.667 420.137,298.93 420.724,323.963 421.31,331.955 421.896,355.098 422.483,391.461 423.069,412.79 423.656,422.969 424.242,443.671 424.829,464.449 425.415,485.899 426.001,506.419 426.588,517.589 427.174,536.581 427.761,555.197 428.347,566.024 428.933,591.124 429.52,602.304 430.106,633.035 430.693,644.238 431.279,666.707 431.865,683.5 432.452,699.854 433.038,715.841 433.625,730.699 434.211,741.66 434.798,752.387 435.384,771.845 435.97,786.05 436.557,803.842 437.143,817.205 437.73,826.733 438.316,842.79 438.902,858.322 439.489,869.998 440.075,881.584 440.662,891.986 441.248,905.501 441.835,912.45 442.421,931.53 443.007,943.474 443.594,955.452 444.18,964.027 444.767,969.938 445.353,983.334 445.939,988.151 446.526,995.834 447.112,1007.98 447.699,1012.74 448.285,1019.6 448.871,1026.58 449.458,1033.3 450.044,1037.58 450.631,1046.15 451.217,1052.48 451.804,1060.9 452.39,1068.83 452.976,1076.51 453.563,1083.91 454.149,1094.93 454.736,1101.51 455.322,1107.67 455.908,1111.74 456.495,1115.96 457.081,1121.66 457.668,1127.7 458.254,1129.7 458.84,1136.82 459.427,1142.08 460.013,1143.63 460.6,1152.42 461.186,1153.35 461.773,1156.44 462.359,1161.11 462.945,1165.47 463.532,1168 464.118,1168.9 464.705,1171.43 465.291,1174.09 465.877,1175.01 466.464,1185.56 467.05,1186.25 467.637,1188.2 468.223,1193.69 468.809,1197.18 469.396,1197.57 469.982,1200.81 470.569,1203.92 471.155,1204.35 471.742,1204.71 472.328,1204.96 472.914,1206.84 473.501,1210.17 474.087,1210.38 474.674,1210.47 475.26,1209.26 475.846,1211.03 476.433,1212.81 477.019,1214.28 477.606,1215.85 478.192,1217.47 478.778,1219.23 479.365,1220.76 479.951,1220.71 480.538,1220.6 481.124,1220.68 481.711,1220.79 482.297,1220.79 482.883,1222.32 483.47,1222.43 484.056,1225.2 484.643,1225.12 485.229,1227.87 485.815,1226.36 486.402,1227.51 486.988,1232.52 487.575,1233.33 488.161,1233.12 488.748,1232.95 489.334,1234.1 489.92,1233.81 490.507,1233.5 491.093,1238.21 491.68,1237.63 492.266,1239.83 492.852,1237.56 493.439,1237.07 494.025,1236.75 494.612,1235.8 495.198,1238.1 495.784,1237.45 496.371,1236.76 496.957,1236.53 497.544,1236.09 498.13,1237.11 498.717,1239.33 499.303,1238.59 499.889,1239.4 500.476,1240.19 501.062,1238.5 501.649,1239.27 502.235,1240.13 502.821,1242.39 503.408,1241.68 503.994,1242.31 504.581,1245.44 505.167,1247.46 505.753,1245.4 506.34,1244.4 506.926,1244.87 507.513,1242.68 508.099,1244.61 508.686,1246.27 509.272,1242.79 509.858,1242.11 510.445,1242.9 511.031,1246.05 511.618,1250.1 512.204,1250.53 512.79,1246.91 513.377,1244.81 513.963,1245.26 514.55,1244.53 515.136,1242.57 515.722,1244.21 516.309,1240.92 516.895,1240.21 517.482,1241.1 518.068,1237.91 518.655,1237.58 519.241,1240.71 519.827,1242.78 520.414,1242.22 521,1241.58 521.587,1240.89 522.173,1241.48 522.759,1243.37 523.346,1245.5 523.932,1244.87 524.519,1246.65 525.105,1247.05 525.691,1246.32 526.278,1246.81 526.864,1247.08 527.451,1245.95 528.037,1243.91 528.624,1242.9 529.21,1242.2 529.796,1241.67 530.383,1239.72 530.969,1241.78 531.556,1246.44 532.142,1244.38 532.728,1245.1 533.315,1245.61 533.901,1244.72 534.488,1249.98 535.074,1245.19 535.661,1241.72 536.247,1242.27 536.833,1241.53 537.42,1240.81 538.006,1240.19 538.593,1241.01 539.179,1241.4 539.765,1243.26 540.352,1246.2 540.938,1242.87 541.525,1242 542.111,1240.13 542.697,1242.95 543.284,1239.78 543.87,1239.32 544.457,1239.91 545.043,1239.2 545.63,1238.54 546.216,1238.08 546.802,1236.41 547.389,1237.35 547.975,1238.22 548.562,1239.01 549.148,1238.57 549.734,1235.72 550.321,1236.85 550.907,1237.69 551.494,1237.22 552.08,1236.54 552.666,1236.15 553.253,1235.46 553.839,1236.37 554.426,1237.13 555.012,1236.63 555.599,1239.82 556.185,1243.99 556.771,1244.17 557.358,1243.26 557.944,1243.4 558.531,1243.73 559.117,1244.31 559.703,1242.17 560.29,1241.26 560.876,1239.05 561.463,1237.15 562.049,1237.69 562.635,1237.05 563.222,1238.08 563.808,1235.09 564.395,1234.64 564.981,1237.91 565.568,1235.99 566.154,1233 566.74,1232.44 567.327,1233.54 567.913,1230.57 568.5,1231.68 569.086,1228.96 569.672,1229.95 570.259,1227.3 570.845,1228.31 571.432,1228.29 572.018,1228.28 572.605,1229.53 573.191,1229.08 573.777,1228.89 574.364,1231.16 574.95,1230.57 575.537,1230.1 576.123,1230.94 576.709,1230.52 577.296,1230.14 577.882,1231.2 578.469,1230.8 579.055,1230.34 579.641,1230 580.228,1228.55 580.814,1231.23 581.401,1231.95 581.987,1232.63 582.574,1232.42 583.16,1231.99 583.746,1229.31 584.333,1231.08 584.919,1229.5 585.506,1231.6 586.092,1229.92 586.678,1229.68 587.265,1229.11 587.851,1226.3 588.438,1224.77 589.024,1226.99 589.61,1227.92 590.197,1227.5 590.783,1227.38 591.37,1228.12 591.956,1225.44 592.543,1225.17 593.129,1222.53 593.715,1222.43 594.302,1228.49 594.888,1228.4 595.475,1226.94 596.061,1226.83 596.647,1226.69 597.234,1224.12 597.82,1226.63 598.407,1226.64 598.993,1225.16 599.579,1224.81 600.166,1224.51 600.752,1225.81 601.339,1224.63 601.925,1224.63 602.512,1225.81 603.098,1221.87 603.684,1222.89 604.271,1225.29 604.857,1228.7 605.444,1228.1 606.03,1227.97 606.616,1226.29 607.203,1226.1 607.789,1228.56 608.376,1230.61 608.962,1229.95 609.548,1230.64 610.135,1231.29 610.721,1233.14 611.308,1232.52 611.894,1230.86 612.481,1230.14 613.067,1232.04 613.653,1230.37 614.24,1232.46 614.826,1232.94 615.413,1232.31 615.999,1230.39 616.585,1229.96 617.172,1230.5 617.758,1228.3 618.345,1227.94 618.931,1223.99 619.518,1225.12 620.104,1226.38 620.69,1224.77 621.277,1224.74 621.863,1224.5 622.45,1225.4 623.036,1222.89 623.622,1222.75 624.209,1223.96 624.795,1222.6 625.382,1222.47 625.968,1220.89 626.554,1220.89 627.141,1221.86 627.727,1220.5 628.314,1221.67 628.9,1221.8 629.487,1221.81 630.073,1221.81 630.659,1221.69 631.246,1221.22 631.832,1223.7 632.419,1223.48 633.005,1221.87 633.591,1221.61 634.178,1220.34 634.764,1218.18 635.351,1217.05 635.937,1217.1 636.523,1218.16 637.11,1218.2 637.696,1217.06 638.283,1216.09 638.869,1216.28 639.456,1217.41 640.042,1217.68 640.628,1218.71 641.215,1218.56 641.801,1216.25 642.388,1216.55 642.974,1216.62 643.56,1216.95 644.147,1216 644.733,1217.49 645.32,1217.57 645.906,1217.73 646.492,1217.66 647.079,1222.62 647.665,1223.62 648.252,1222.42 648.838,1225.81 649.425,1228.02 650.011,1228.78 650.597,1229.29 651.184,1228.64 651.77,1225.61 652.357,1225.12 652.943,1227.19 653.529,1226.78 654.116,1226.29 654.702,1226.02 655.289,1225.8 655.875,1225.36 656.462,1226.14 657.048,1224.52 657.634,1224.2 658.221,1223.77 658.807,1225.84 659.394,1226.62 659.98,1225.99 660.566,1228.05 661.153,1227.67 661.739,1228.42 662.326,1226.53 662.912,1226 663.498,1223 664.085,1221.82 664.671,1220.51 665.258,1221.69 665.844,1220.25 666.431,1218.71 667.017,1217.71 667.603,1219.03 668.19,1216.5 668.776,1217.97 669.363,1219.02 669.949,1220.23 670.535,1220.27 671.122,1220.29 671.708,1222.59 672.295,1223.67 672.881,1224.61 673.467,1225.37 674.054,1226.25 674.64,1226.83 675.227,1220.08 675.813,1218.67 676.4,1219.99 676.986,1220.02 677.572,1219.95 678.159,1218.42 678.745,1218.18 679.332,1215.7 679.918,1214.3 680.504,1213.11 681.091,1213.48 681.677,1218.13 682.264,1219.49 682.85,1218.13 683.436,1217.14 684.023,1215.8 684.609,1212.95 685.196,1214.23 685.782,1218.13 686.369,1220.57 686.955,1217.88 687.541,1219.92 688.128,1223.33 688.714,1223.03 689.301,1222.69 689.887,1220.24 690.473,1215.34 691.06,1216.64 691.646,1218.89 692.233,1217.5 692.819,1216.1 693.405,1215.02 693.992,1215.06 694.578,1216.27 695.165,1217.6 695.751,1216.67 696.338,1220.02 696.924,1215.23 697.51,1215.26 698.097,1216.32 698.683,1218.47 699.27,1218.1 699.856,1217.92 700.442,1219.26 701.029,1215.39 701.615,1216.65 702.202,1215.39 702.788,1215.35 703.375,1216.62 703.961,1214.45 704.547,1213.26 705.134,1214.65 705.72,1215.87 706.307,1218.31 706.893,1217.14 707.479,1216.97 708.066,1216.92 708.652,1218.16 709.239,1221.79 709.825,1220.33 710.411,1218.94 710.998,1218.76 711.584,1217.52 712.171,1217.37 712.757,1216.14 713.344,1216.02 713.93,1214.71 714.516,1213.73 715.103,1212.8 715.689,1213.13 716.276,1213.29 716.862,1214.58 717.448,1213.55 718.035,1212.58 718.621,1213.96 719.208,1213.82 719.794,1213.88 720.38,1214 720.967,1216.38 721.553,1217.5 722.14,1216.31 722.726,1216.25 723.313,1214.82 723.899,1213.56 724.485,1217.29 725.072,1218.45 725.658,1217.15 726.245,1215.92 726.831,1212.39 727.417,1213.47 728.004,1213.56 728.59,1215.85 729.177,1215.91 729.763,1211.96 730.349,1213.56 730.936,1213.64 731.522,1213.85 732.109,1212.51 732.695,1210.16 733.282,1214.26 733.868,1213.06 734.454,1215.69 735.041,1216.95 735.627,1214.56 736.214,1216.76 736.8,1216.83 737.386,1216.67 737.973,1215.31 738.559,1214.01 739.146,1216.36 739.732,1214.93 740.318,1216.16 740.905,1218.47 741.491,1216.96 742.078,1216.85 742.664,1219.05 743.251,1219.63 743.837,1220.37 744.423,1221.32 745.01,1217.43 745.596,1218.61 746.183,1219.64 746.769,1218.37 747.355,1218.1 747.942,1216.63 748.528,1216.48 749.115,1221.14 749.701,1222.13 750.288,1221.61 750.874,1218.99 751.46,1222.55 752.047,1222.62 752.633,1221.93 753.22,1224 753.806,1218.64 754.392,1218.67 754.979,1217.2 755.565,1217.07 756.152,1218.05 756.738,1219.07 757.324,1217.57 757.911,1217.3 758.497,1216.24 759.084,1216.67 759.67,1219.01 760.257,1220.08 760.843,1220.95 761.429,1219.15 762.016,1217.58 762.602,1214.99 763.189,1212.58 763.775,1212.69 764.361,1212.65 764.948,1212.85 765.534,1209.29 766.121,1210.82 766.707,1212.2 767.293,1213.59 767.88,1214.83 768.466,1213.61 769.053,1213.88 769.639,1212.92 770.226,1211.71 770.812,1211.99 771.398,1212.01 771.985,1212.35 772.571,1213.57 773.158,1211.35 773.744,1210.3 774.33,1209.36 774.917,1208.42 775.503,1211.17 776.09,1212.53 776.676,1215.17 777.262,1217.46 777.849,1217.27 778.435,1217 779.022,1217.99 779.608,1216.75 780.195,1215.6 780.781,1215.62 781.367,1215.47 781.954,1216.69 782.54,1216.64 783.127,1216.36 783.713,1214.82 784.299,1217.22 784.886,1220.7 785.472,1218.2 786.059,1216.86 786.645,1216.61 787.232,1213.8 787.818,1212.24 788.404,1209.76 788.991,1207.61 789.577,1206.79 790.164,1209.56 790.75,1209.85 791.336,1208.66 791.923,1210.05 792.509,1210.3 793.096,1211.82 793.682,1211.81 794.268,1212.04 794.855,1212.03 795.441,1211.85 796.028,1212.1 796.614,1208.92 797.201,1206.75 797.787,1208.1 798.373,1208.41 798.96,1209.82 799.546,1209.92 800.133,1211.33 800.719,1211.46 801.305,1211.71 801.892,1212.03 802.478,1213.66 803.065,1213.65 803.651,1214.86 804.237,1215.99 804.824,1218.34 805.41,1218.08 805.997,1218.89 806.583,1220.78 807.17,1223.03 807.756,1222.42 808.342,1221.61 808.929,1224.73 809.515,1224.48 810.102,1224 810.688,1223.26 811.274,1222.83 811.861,1221.28 812.447,1220.82 813.034,1220.65 813.62,1220.48 814.206,1219.89 814.793,1218.26 815.379,1216.8 815.966,1216.69 816.552,1215.14 817.139,1216.2 817.725,1214.96 818.311,1216.21 818.898,1216.22 819.484,1217.14 820.071,1215.51 820.657,1215.4 821.243,1214.97 821.83,1214.66 822.416,1212.18 823.003,1213.5 823.589,1213.58 824.175,1212.46 824.762,1212.43 825.348,1213.59 825.935,1213.61 826.521,1214.8 827.108,1214.57 827.694,1214.52 828.28,1214.5 828.867,1218.14 829.453,1217.75 830.04,1217.54 830.626,1216.06 831.212,1217.11 831.799,1216.71 832.385,1217.5 832.972,1216.1 833.558,1217.1 834.145,1215.62 834.731,1213.29 835.317,1213.1 835.904,1211.86 836.49,1213.08 837.077,1210.61 837.663,1210.62 838.249,1212.23 838.836,1212.09 839.422,1208.5 840.009,1208.66 840.595,1207.74 841.181,1205.53 841.768,1205.91 842.354,1206.2 842.941,1209.17 843.527,1210.69 844.114,1208.39 844.7,1209.79 845.286,1207.4 845.873,1207.84 846.459,1207.07 847.046,1207.54 847.632,1210.23 848.218,1212.59 848.805,1212.54 849.391,1214.79 849.978,1213.63 850.564,1212.32 851.15,1213.21 851.737,1213.25 852.323,1213.43 852.91,1217.14 853.496,1220.47 854.083,1218.96 854.669,1218.59 855.255,1219.31 855.842,1219.05 856.428,1217.44 857.015,1216.07 857.601,1214.88 858.187,1213.45 858.774,1213.42 859.36,1213.42 859.947,1213.34 860.533,1211.02 861.119,1212.14 861.706,1213.37 862.292,1213.51 862.879,1214.35 863.465,1214.15 864.052,1214.21 864.638,1215.63 865.224,1216.82 865.811,1215.46 866.397,1215.52 866.984,1216.61 867.57,1213.93 868.156,1213.92 868.743,1210.25 869.329,1210.32 869.916,1212.94 870.502,1213.79 871.089,1210.92 871.675,1211.15 872.261,1212.46 872.848,1211.27 873.434,1212.45 874.021,1212.6 874.607,1211.27 875.193,1212.47 875.78,1213.64 876.366,1216.99 876.953,1219.1 877.539,1218.68 878.125,1218.03 878.712,1217.65 879.298,1213.74 879.885,1211.15 880.471,1212.32 881.058,1212.26 881.644,1208.89 882.23,1206.78 882.817,1205.64 883.403,1205.92 883.99,1208.52 884.576,1211.24 885.162,1214.89 885.749,1213.28 886.335,1213.29 886.922,1215.55 887.508,1215.45 888.094,1210.41 888.681,1210.16 889.267,1210.21 889.854,1212.74 890.44,1211.21 891.027,1213.71 891.613,1213.57 892.199,1215.9 892.786,1212.16 893.372,1211.07 893.959,1209.83 894.545,1208.71 895.131,1206.47 895.718,1204.19 896.304,1204.84 896.891,1207.55 897.477,1208.93 898.063,1209.16 898.65,1207.9 899.236,1208.21 899.823,1212.04 900.409,1212 900.996,1213.2 901.582,1215.37 902.168,1215.15 902.755,1217.46 903.341,1217.25 903.928,1215.98 904.514,1214.37 905.1,1215.79 905.687,1215.61 906.273,1218.97 906.86,1220.77 907.446,1221.76 908.032,1224.81 908.619,1224.12 909.205,1225.94 909.792,1226.41 910.378,1224.52 910.965,1224.78 911.551,1222.84 912.137,1221.99 912.724,1221.51 913.31,1220.86 913.897,1219.24 914.483,1219.04 915.069,1218.57 915.656,1219.39 916.242,1217.59 916.829,1217.38 917.415,1215.59 918.002,1215.37 918.588,1212.81 919.174,1215.19 919.761,1215.01 920.347,1215.05 920.934,1218.39 921.52,1217.86 922.106,1215.19 922.693,1216.49 923.279,1216.14 923.866,1217.01 924.452,1214.63 925.038,1213.19 925.625,1210.98 926.211,1211.17 926.798,1212.16 927.384,1213.42 927.971,1215.5 928.557,1214.2 929.143,1214.25 929.73,1215.35 930.316,1212.8 930.903,1210.5 931.489,1211.95 932.075,1210.61 932.662,1210.84 933.248,1210.99 933.835,1210.99 934.421,1211.13 935.007,1211.15 935.594,1211.3 936.18,1212.55 936.767,1212.62 937.353,1214.96 937.94,1214.94 938.526,1213.58 939.112,1215.81 939.699,1214.23 940.285,1216.56 940.872,1216.16 941.458,1213.49 942.044,1212.3 942.631,1212.42 943.217,1212.38 943.804,1213.51 944.39,1213.58 944.976,1214.86 945.563,1212.55 946.149,1213.79 946.736,1210.34 947.322,1210.35 947.909,1209.23 948.495,1209.26 949.081,1208.1 949.668,1207.16 950.254,1207.48 950.841,1209.06 951.427,1209.25 952.013,1207.98 952.6,1206.78 953.186,1207.04 953.773,1206.14 954.359,1206.45 954.945,1206.98 955.532,1208.65 956.118,1210.2 956.705,1210.34 957.291,1210.22 957.878,1210.41 958.464,1210.57 959.05,1208.42 959.637,1207.2 960.223,1207.59 960.81,1206.53 961.396,1205.64 961.982,1207.09 962.569,1206.43 963.155,1206.64 963.742,1205.87 964.328,1204.9 964.915,1207.89 965.501,1209.07 966.087,1208.02 966.674,1204.7 967.26,1203.72 967.847,1203.23 968.433,1203.62 969.019,1202.84 969.606,1202.02 970.192,1202.59 970.779,1204.59 971.365,1206.2 971.951,1207.54 972.538,1207.96 973.124,1207.09 973.711,1207.49 974.297,1209.17 974.884,1210.5 975.47,1209.42 976.056,1208.44 976.643,1210.93 977.229,1209.95 977.816,1209.77 978.402,1211.27 978.988,1212.34 979.575,1210.77 980.161,1211.86 980.748,1211.82 981.334,1211.72 981.92,1212.82 982.507,1211.56 983.093,1213.1 983.68,1210.66 984.266,1208.49 984.853,1207.21 985.439,1206.3 986.025,1206.73 986.612,1206.95 987.198,1207.2 987.785,1207.39 988.371,1210.33 988.957,1209.26 989.544,1210.61 990.13,1208.38 990.717,1208.65 991.303,1211.12 991.889,1213.49 992.476,1214.46 993.062,1211.75 993.649,1210.57 994.235,1210.4 994.822,1209.29 995.408,1209.56 995.994,1209.71 996.581,1207.37 997.167,1207.69 997.754,1206.75 998.34,1206.83 998.926,1205.78 999.513,1205.8 1000.1,1205.16 1000.69,1205.21 1001.27,1204.21 1001.86,1204.37 1002.44,1203.64 1003.03,1202.73 1003.62,1204.41 1004.2,1206.01 1004.79,1208.38 1005.38,1207.27 1005.96,1208.47 1006.55,1210.91 1007.14,1211.11 1007.72,1211.13 1008.31,1211.3 1008.9,1212.36 1009.48,1209.9 1010.07,1208.98 1010.65,1210.07 1011.24,1207.81 1011.83,1207.96 1012.41,1207.01 1013,1207.39 1013.59,1207.72 1014.17,1208.06 1014.76,1208.28 1015.35,1213.14 1015.93,1214.31 1016.52,1213.03 1017.11,1215.34 1017.69,1217.65 1018.28,1218.18 1018.86,1218.1 1019.45,1217.69 1020.04,1219.82 1020.62,1221.91 1021.21,1221.22 1021.8,1222.13 1022.38,1221.26 1022.97,1220.7 1023.56,1220.21 1024.14,1219.69 1024.73,1218.04 1025.32,1217.52 1025.9,1218.4 1026.49,1217.7 1027.07,1222.06 1027.66,1220.3 1028.25,1215.04 1028.83,1213.7 1029.42,1212.49 1030.01,1214.85 1030.59,1214.54 1031.18,1214.56 1031.77,1214.58 1032.35,1216.82 1032.94,1216.71 1033.52,1216.73 1034.11,1217.65 1034.7,1217.72 1035.28,1217.25 1035.87,1214.47 1036.46,1214.2 1037.04,1214.24 1037.63,1213.71 1038.22,1208.95 1038.8,1210.43 1039.39,1211.78 1039.98,1209.37 1040.56,1209.75 1041.15,1207.31 1041.73,1207.44 1042.32,1208.99 1042.91,1211.47 1043.49,1211.53 1044.08,1209.06 1044.67,1210.17 1045.25,1208.99 1045.84,1208.11 1046.43,1207.24 1047.01,1207.69 1047.6,1209.19 1048.19,1212.04 1048.77,1211.13 1049.36,1211.32 1049.94,1212.55 1050.53,1213.56 1051.12,1214.74 1051.7,1210.69 1052.29,1208.27 1052.88,1209.53 1053.46,1209.46 1054.05,1209.61 1054.64,1208.51 1055.22,1207.62 1055.81,1207.62 1056.39,1207.82 1056.98,1206.74 1057.57,1207.91 1058.15,1209.14 1058.74,1210.48 1059.33,1211.66 1059.91,1211.61 1060.5,1210.25 1061.09,1211.46 1061.67,1211.44 1062.26,1211.21 1062.85,1211.21 1063.43,1208.89 1064.02,1212.36 1064.6,1212.29 1065.19,1211.08 1065.78,1210.99 1066.36,1211.24 1066.95,1212.38 1067.54,1212.26 1068.12,1213.23 1068.71,1211.97 1069.3,1213.19 1069.88,1214.08 1070.47,1213.97 1071.06,1216.12 1071.64,1217.16 1072.23,1216.84 1072.81,1213.22 1073.4,1215.53 1073.99,1217.63 1074.57,1217.25 1075.16,1216.99 1075.75,1215.87 1076.33,1213.54 1076.92,1214.69 1077.51,1212.23 1078.09,1213.19 1078.68,1210.78 1079.26,1211.93 1079.85,1211.69 1080.44,1211.65 1081.02,1211.73 1081.61,1210.35 1082.2,1208.25 1082.78,1210.69 1083.37,1211.66 1083.96,1212.77 1084.54,1212.74 1085.13,1212.56 1085.72,1212.55 1086.3,1212.85 1086.89,1215.28 1087.47,1212.58 1088.06,1211.56 1088.65,1210.38 1089.23,1209.29 1089.82,1207.96 1090.41,1208.32 1090.99,1208.26 1091.58,1209.48 1092.17,1209.79 1092.75,1209.83 1093.34,1209.71 1093.93,1209.75 1094.51,1210.99 1095.1,1210.83 1095.68,1210.82 1096.27,1210.78 1096.86,1210.86 1097.44,1211.9 1098.03,1208.23 1098.62,1207.22 1099.2,1208.55 1099.79,1206.37 1100.38,1208.05 1100.96,1205.47 1101.55,1204.53 1102.14,1204.64 1102.72,1206.07 1103.31,1205.12 1103.89,1204.17 1104.48,1204.55 1105.07,1204.88 1105.65,1206.82 1106.24,1210.54 1106.83,1211.85 1107.41,1210.79 1108,1211.93 1108.59,1212.77 1109.17,1212.69 1109.76,1212.42 1110.34,1213.48 1110.93,1211.74 1111.52,1211.41 1112.1,1212.33 1112.69,1212.4 1113.28,1212.58 1113.86,1214.77 1114.45,1213.43 1115.04,1213.52 1115.62,1213.52 1116.21,1212.24 1116.8,1213.35 1117.38,1212.18 1117.97,1213.32 1118.55,1213.16 1119.14,1213.06 1119.73,1211.75 1120.31,1213.13 1120.9,1211.95 1121.49,1212.08 1122.07,1212.14 1122.66,1212.1 1123.25,1209.49 1123.83,1209.73 1124.42,1210.93 1125.01,1208.71 1125.59,1210.15 1126.18,1209.25 1126.76,1210.4 1127.35,1210.5 1127.94,1212.87 1128.52,1212.83 1129.11,1212.89 1129.7,1211.34 1130.28,1209 1130.87,1210.1 1131.46,1206.45 1132.04,1208.09 1132.63,1208.11 1133.21,1209.56 1133.8,1212.18 1134.39,1211.99 1134.97,1211.59 1135.56,1209.19 1136.15,1209.14 1136.73,1205.45 1137.32,1205.75 1137.91,1208.4 1138.49,1207.28 1139.08,1202.52 1139.67,1204.37 1140.25,1205.78 1140.84,1205.87 1141.42,1206.07 1142.01,1208.94 1142.6,1207.69 1143.18,1209.12 1143.77,1209.22 1144.36,1210.27 1144.94,1210.42 1145.53,1211.52 1146.12,1213.56 1146.7,1211.93 1147.29,1211.87 1147.88,1214.51 1148.46,1211.97 1149.05,1212.04 1149.63,1210.44 1150.22,1210.29 1150.81,1209.16 1151.39,1208.35 1151.98,1212.04 1152.57,1213.22 1153.15,1209.57 1153.74,1210.87 1154.33,1212.06 1154.91,1213.3 1155.5,1212.16 1156.09,1211.95 1156.67,1212.79 1157.26,1210.16 1157.84,1210.24 1158.43,1210.39 1159.02,1211.66 1159.6,1215.03 1160.19,1215.88 1160.78,1217.13 1161.36,1217.76 1161.95,1216.34 1162.54,1218.42 1163.12,1219.09 1163.71,1219.45 1164.29,1220.19 1164.88,1217.29 1165.47,1216.75 1166.05,1216.55 1166.64,1213.78 1167.23,1213.4 1167.81,1215.61 1168.4,1211.52 1168.99,1216.5 1169.57,1215.03 1170.16,1213.53 1170.75,1216.89 1171.33,1215.39 1171.92,1212.69 1172.5,1213.89 1173.09,1213.79 1173.68,1213.44 1174.26,1211.85 1174.85,1210.67 1175.44,1208.13 1176.02,1207.01 1176.61,1205.94 1177.2,1206.17 1177.78,1207.75 1178.37,1207.01 1178.96,1207.26 1179.54,1205.33 1180.13,1204.26 1180.71,1207.26 1181.3,1207.22 1181.89,1206.06 1182.47,1210 1183.06,1209.91 1183.65,1208.85 1184.23,1209.98 1184.82,1206.32 1185.41,1206.55 1185.99,1203.23 1186.58,1203.42 1187.16,1203.59 1187.75,1205.02 1188.34,1204.18 1188.92,1204.43 1189.51,1203.38 1190.1,1202.64 1190.68,1204.46 1191.27,1202.47 1191.86,1202.99 1192.44,1203.23 1193.03,1205.93 1193.62,1205.15 1194.2,1206.53 1194.79,1205.65 1195.37,1208.26 1195.96,1211.15 1196.55,1208.93 1197.13,1208.05 1197.72,1207.96 1198.31,1209.38 1198.89,1209.57 1199.48,1207.18 1200.07,1207.55 1200.65,1207.85 1201.24,1210.67 1201.83,1211.89 1202.41,1210.53 1203,1210.65 1203.58,1211.95 1204.17,1213.18 1204.76,1213.17 1205.34,1213.12 1205.93,1212.74 1206.52,1213.85 1207.1,1216.31 1207.69,1214.76 1208.28,1215.79 1208.86,1216.9 1209.45,1213.94 1210.03,1210.26 1210.62,1209.37 1211.21,1208.2 1211.79,1208.58 1212.38,1210 1212.97,1212.31 1213.55,1214.76 1214.14,1212.23 1214.73,1212.19 1215.31,1216.04 1215.9,1215.92 1216.49,1215.7 1217.07,1215.47 1217.66,1215.25 1218.24,1216.17 1218.83,1217.16 1219.42,1216.84 1220,1215.35 1220.59,1217.51 1221.18,1218.33 1221.76,1217.76 1222.35,1218.65 1222.94,1219.42 1223.52,1218.81 1224.11,1216.02 1224.7,1214.6 1225.28,1214.27 1225.87,1215.15 1226.45,1214.86 1227.04,1212.25 1227.63,1208.52 1228.21,1211.09 1228.8,1210.9 1229.39,1210.94 1229.97,1213.24 1230.56,1214.15 1231.15,1214.05 1231.73,1213.89 1232.32,1216.07 1232.91,1214.41 1233.49,1214 1234.08,1213.88 1234.66,1212.57 1235.25,1212.71 1235.84,1210.18 1236.42,1210.27 1237.01,1210.49 1237.6,1210.53 1238.18,1208.2 1238.77,1206.96 1239.36,1209.62 1239.94,1207.26 1240.53,1208.48 1241.11,1206.14 1241.7,1205.19 1242.29,1206.76 1242.87,1207.01 1243.46,1208.44 1244.05,1210.71 1244.63,1210.66 1245.22,1211.94 1245.81,1213.23 1246.39,1213.38 1246.98,1215.87 1247.57,1215.72 1248.15,1216.69 1248.74,1216.46 1249.32,1216.13 1249.91,1215.74 1250.5,1214.6 1251.08,1213.39 1251.67,1210.81 1252.26,1211.84 1252.84,1209.34 1253.43,1206.99 1254.02,1207.3 1254.6,1207.63 1255.19,1208.73 1255.78,1206.34 1256.36,1208.06 1256.95,1211.84 1257.53,1213.24 1258.12,1213.16 1258.71,1210.89 1259.29,1213.23 1259.88,1214.28 1260.47,1214.29 1261.05,1215.04 1261.64,1216.24 1262.23,1216.2 1262.81,1216.96 1263.4,1216.59 1263.98,1217.62 1264.57,1218.55 1265.16,1218.12 1265.74,1216.67 1266.33,1216.37 1266.92,1217.49 1267.5,1219.48 1268.09,1221.33 1268.68,1221.06 1269.26,1221.53 1269.85,1218.75 1270.44,1214.65 1271.02,1212.21 1271.61,1209.91 1272.19,1210.11 1272.78,1210.25 1273.37,1210.31 1273.95,1208.03 1274.54,1209.23 1275.13,1208.09 1275.71,1209.45 1276.3,1207.28 1276.89,1208.66 1277.47,1212.35 1278.06,1213.71 1278.65,1214.73 1279.23,1213.26 1279.82,1211.69 1280.4,1209.28 1280.99,1210.7 1281.58,1213.01 1282.16,1211.61 1282.75,1210.49 1283.34,1210.7 1283.92,1214.34 1284.51,1214.07 1285.1,1214.18 1285.68,1213.89 1286.27,1209.88 1286.86,1212.46 1287.44,1209.84 1288.03,1210.04 1288.61,1207.58 1289.2,1208.91 1289.79,1209.06 1290.37,1209.23 1290.96,1208.17 1291.55,1207.3 1292.13,1206.34 1292.72,1207.82 1293.31,1206.95 1293.89,1201.12 1294.48,1201.44 1295.06,1203.03 1295.65,1203.54 1296.24,1202.63 1296.82,1204.41 1297.41,1204.73 1298,1206.52 1298.58,1209.28 1299.17,1209.5 1299.76,1208.1 1300.34,1209.66 1300.93,1208.49 1301.52,1208.67 1302.1,1209.92 1302.69,1208.62 1303.27,1209.98 1303.86,1209.96 1304.45,1210.17 1305.03,1207.74 1305.62,1210.25 1306.21,1210.58 1306.79,1210.89 1307.38,1209.63 1307.97,1209.57 1308.55,1208.41 1309.14,1207.51 1309.73,1210.01 1310.31,1210.26 1310.9,1211.42 1311.48,1208.93 1312.07,1209.06 1312.66,1207.87 1313.24,1209.42 1313.83,1209.49 1314.42,1208.29 1315,1204.77 1315.59,1205.5 1316.18,1204.61 1316.76,1204.87 1317.35,1205.59 1317.93,1207.23 1318.52,1205.21 1319.11,1206.67 1319.69,1204.53 1320.28,1204.98 1320.87,1208.54 1321.45,1207.71 1322.04,1207.95 1322.63,1208.06 1323.21,1208.05 1323.8,1208.36 1324.39,1208.46 1324.97,1209.7 1325.56,1212.18 1326.14,1209.78 1326.73,1208.87 1327.32,1208.78 1327.9,1207.81 1328.49,1208.03 1329.08,1207.77 1329.66,1207.66 1330.25,1207.73 1330.84,1208.91 1331.42,1210.18 1332.01,1209.94 1332.6,1212.23 1333.18,1213.33 1333.77,1215.47 1334.35,1211.7 1334.94,1210.47 1335.53,1214.17 1336.11,1214.07 1336.7,1216.26 1337.29,1216.14 1337.87,1216.96 1338.46,1217.68 1339.05,1217.54 1339.63,1214.77 1340.22,1212.2 1340.8,1212.15 1341.39,1213.55 1341.98,1213.4 1342.56,1210.73 1343.15,1214.44 1343.74,1215.5 1344.32,1213.93 1344.91,1213.84 1345.5,1217.22 1346.08,1217.95 1346.67,1216.47 1347.26,1214.97 1347.84,1215.86 1348.43,1216.78 1349.01,1216.59 1349.6,1215.38 1350.19,1217.6 1350.77,1216.3 1351.36,1216 1351.95,1215.82 1352.53,1216.61 1353.12,1216.28 1353.71,1213.39 1354.29,1214.22 1354.88,1215.3 1355.47,1213.81 1356.05,1214.79 1356.64,1212.14 1357.22,1213.1 1357.81,1213.09 1358.4,1214.15 1358.98,1212.59 1359.57,1211.35 1360.16,1212.88 1360.74,1210.36 1361.33,1209.12 1361.92,1209.35 1362.5,1210.45 1363.09,1209.29 1363.68,1210.64 1364.26,1211.57 1364.85,1212.81 1365.43,1212.7 1366.02,1211.2 1366.61,1213.49 1367.19,1210.9 1367.78,1209.77 1368.37,1208.93 1368.95,1209.95 1369.54,1211.16 1370.13,1213.49 1370.71,1213.29 1371.3,1212.98 1371.88,1215.36 1372.47,1216.11 1373.06,1215.85 1373.64,1215.67 1374.23,1217.82 1374.82,1218.86 1375.4,1219.75 1375.99,1217.91 1376.58,1216.25 1377.16,1218.26 1377.75,1219.05 1378.34,1219.9 1378.92,1219.27 1379.51,1220.08 1380.09,1219.59 1380.68,1219.18 1381.27,1220.89 1381.85,1221.15 1382.44,1219.2 1383.03,1218.79 1383.61,1215.9 1384.2,1215.81 1384.79,1215.45 1385.37,1215.03 1385.96,1215.85 1386.55,1213.1 1387.13,1214.3 1387.72,1210.65 1388.3,1209.42 1388.89,1208.36 1389.48,1207.41 1390.06,1206.32 1390.65,1206.47 1391.24,1205.63 1391.82,1203.51 1392.41,1203.61 1393,1206.39 1393.58,1206.7 1394.17,1207.15 1394.75,1204.97 1395.34,1205.47 1395.93,1207.34 1396.51,1205.26 1397.1,1204.39 1397.69,1207.06 1398.27,1208.25 1398.86,1208.38 1399.45,1208.6 1400.03,1208.48 1400.62,1211.01 1401.21,1214.46 1401.79,1214.42 1402.38,1215.48 1402.96,1217.79 1403.55,1217.5 1404.14,1213.36 1404.72,1216.75 1405.31,1216.63 1405.9,1216.31 1406.48,1216.23 1407.07,1216.13 1407.66,1213.69 1408.24,1211.09 1408.83,1212.49 1409.42,1211.23 1410,1208.55 1410.59,1207.25 1411.17,1208.62 1411.76,1209.93 1412.35,1210.26 1412.93,1210.55 1413.52,1211.67 1414.11,1208.13 1414.69,1206.83 1415.28,1209.65 1415.87,1211.33 1416.45,1209 1417.04,1209.09 1417.63,1207.88 1418.21,1209.07 1418.8,1206.54 1419.38,1204.32 1419.97,1204.74 1420.56,1206.38 1421.14,1206.89 1421.73,1209.46 1422.32,1205.82 1422.9,1207.4 1423.49,1207.7 1424.08,1209.02 1424.66,1210.21 1425.25,1208.96 1425.83,1207.69 1426.42,1209.01 1427.01,1208.85 1427.59,1207.65 1428.18,1209.02 1428.77,1208.99 1429.35,1212.8 1429.94,1212.7 1430.53,1212.78 1431.11,1213.92 1431.7,1212.43 1432.29,1210.97 1432.87,1207.43 1433.46,1207.72 1434.04,1206.8 1434.63,1209.37 1435.22,1205.97 1435.8,1205.07 1436.39,1204.33 1436.98,1204.86 1437.56,1206.36 1438.15,1207.68 1438.74,1205.39 1439.32,1205.78 1439.91,1204.71 1440.5,1204.11 1441.08,1205.81 1441.67,1204.87 1442.25,1205.13 1442.84,1205.22 1443.43,1208.15 1444.01,1207.26 1444.6,1208.38 1445.19,1208.4 1445.77,1209.74 1446.36,1208.61 1446.95,1208.9 1447.53,1209.09 1448.12,1207.94 1448.7,1207.01 1449.29,1205.06 1449.88,1205.39 1450.46,1206.87 1451.05,1205.73 1451.64,1206.05 1452.22,1207.62 1452.81,1208.03 1453.4,1210.69 1453.98,1210.66 1454.57,1209.48 1455.16,1209.68 1455.74,1209.8 1456.33,1208.72 1456.91,1211.31 1457.5,1211.37 1458.09,1211.41 1458.67,1211.59 1459.26,1210.13 1459.85,1210.06 1460.43,1211.51 1461.02,1214.93 1461.61,1214.78 1462.19,1214.71 1462.78,1213.25 1463.37,1213.95 1463.95,1216.33 1464.54,1217.22 1465.12,1216.84 1465.71,1214.48 1466.3,1210.62 1466.88,1211.39 1467.47,1210.02 1468.06,1209.99 1468.64,1211.47 1469.23,1208.74 1469.82,1208.98 1470.4,1210.23 1470.99,1208.93 1471.57,1207.9 1472.16,1208.15 1472.75,1210.57 1473.33,1208.14 1473.92,1210.85 1474.51,1210.57 1475.09,1208.48 1475.68,1209.73 1476.27,1209.76 1476.85,1208.27 1477.44,1208.2 1478.03,1206.11 1478.61,1205.28 1479.2,1204.72 1479.78,1204.81 1480.37,1205.05 1480.96,1207.63 1481.54,1210.32 1482.13,1210.47 1482.72,1210.34 1483.3,1209.2 1483.89,1206.77 1484.48,1207.97 1485.06,1206.7 1485.65,1207.99 1486.24,1209.09 1486.82,1209.11 1487.41,1204.33 1487.99,1206.16 1488.58,1208.85 1489.17,1208.89 1489.75,1210.29 1490.34,1212.72 1490.93,1214.89 1491.51,1213.72 1492.1,1213.4 1492.69,1215.73 1493.27,1215.55 1493.86,1214.05 1494.45,1213.73 1495.03,1214.7 1495.62,1215.53 1496.2,1216.19 1496.79,1215 1497.38,1214.78 1497.96,1213.3 1498.55,1209.43 1499.14,1210.82 1499.72,1211.87 1500.31,1211.79 1500.9,1210.47 1501.48,1210.43 1502.07,1211.68 1502.65,1211.81 1503.24,1211.72 1503.83,1211.49 1504.41,1209.04 1505,1207.97 1505.59,1206.66 1506.17,1207.04 1506.76,1207.25 1507.35,1207.71 1507.93,1207.71 1508.52,1209.24 1509.11,1209.69 1509.69,1210.92 1510.28,1209.73 1510.86,1211.36 1511.45,1212.87 1512.04,1211.55 1512.62,1211.55 1513.21,1209.29 1513.8,1210.51 1514.38,1213.02 1514.97,1214.47 1515.56,1215.5 1516.14,1214.15 1516.73,1214.13 1517.32,1211.36 1517.9,1211.31 1518.49,1212.45 1519.07,1214.43 1519.66,1211.94 1520.25,1211.63 1520.83,1212.73 1521.42,1215.07 1522.01,1215.06 1522.59,1210.93 1523.18,1208.54 1523.77,1210.88 1524.35,1213.23 1524.94,1211.85 1525.52,1213.23 1526.11,1211.87 1526.7,1211.87 1527.28,1213 1527.87,1211.6 1528.46,1210.55 1529.04,1210.62 1529.63,1210.49 1530.22,1210.28 1530.8,1209.99 1531.39,1210.12 1531.98,1211.29 1532.56,1212.47 1533.15,1211.18 1533.73,1211.24 1534.32,1212.09 1534.91,1213.13 1535.49,1212.99 1536.08,1214.35 1536.67,1215.35 1537.25,1214.96 1537.84,1212.53 1538.43,1214.61 1539.01,1215.68 1539.6,1215.59 1540.19,1215.48 1540.77,1210.37 1541.36,1209.05 1541.94,1207.82 1542.53,1208.02 1543.12,1208.47 1543.7,1207.37 1544.29,1207.5 1544.88,1207.66 1545.46,1208.84 1546.05,1206.57 1546.64,1206.63 1547.22,1209.28 1547.81,1210.57 1548.4,1207.96 1548.98,1208.19 1549.57,1209.7 1550.15,1209.73 1550.74,1210.84 1551.33,1210.76 1551.91,1208.31 1552.5,1209.62 1553.09,1210.8 1553.67,1210.75 1554.26,1212.14 1554.85,1212.14 1555.43,1213.26 1556.02,1215.59 1556.6,1214.2 1557.19,1210.24 1557.78,1209.3 1558.36,1208.23 1558.95,1208.27 1559.54,1206.07 1560.12,1204.95 1560.71,1203.96 1561.3,1205.64 1561.88,1204.81 1562.47,1204.15 1563.06,1204.83 1563.64,1202.84 1564.23,1206.84 1564.81,1207.28 1565.4,1208.52 1565.99,1207.54 1566.57,1207.57 1567.16,1208.91 1567.75,1208.96 1568.33,1209.17 1568.92,1208.13 1569.51,1209.42 1570.09,1208.49 1570.68,1206.21 1571.27,1206.35 1571.85,1206.6 1572.44,1204.61 1573.02,1206.3 1573.61,1208.77 1574.2,1208.75 1574.78,1207.91 1575.37,1208.12 1575.96,1209.49 1576.54,1210.86 1577.13,1210.72 1577.72,1212.99 1578.3,1212.87 1578.89,1212.81 1579.47,1215.03 1580.06,1214.66 1580.65,1213.36 1581.23,1214.53 1581.82,1214.45 1582.41,1214.2 1582.99,1214.26 1583.58,1214.23 1584.17,1214.04 1584.75,1215.12 1585.34,1213.66 1585.93,1212.36 1586.51,1214.58 1587.1,1214.24 1587.68,1212.7 1588.27,1211.44 1588.86,1211.75 1589.44,1212.73 1590.03,1212.64 1590.62,1212.15 1591.2,1210.68 1591.79,1211.73 1592.38,1212.84 1592.96,1211.51 1593.55,1210.2 1594.14,1210.37 1594.72,1209.19 1595.31,1209.38 1595.89,1209.35 1596.48,1209.55 1597.07,1211.02 1597.65,1216.94 1598.24,1215.43 1598.83,1213.9 1599.41,1212.45 1600,1213.29 1600.59,1215.43 1601.17,1215.25 1601.76,1214 1602.34,1213.68 1602.93,1215.64 1603.52,1216.6 1604.1,1217.54 1604.69,1217.07 1605.28,1214.53 1605.86,1215.59 1606.45,1217.59 1607.04,1213.76 1607.62,1212.35 1608.21,1212.47 1608.8,1210.22 1609.38,1210.33 1609.97,1205.45 1610.55,1204.39 1611.14,1204.76 1611.73,1204.63 1612.31,1203.68 1612.9,1205.1 1613.49,1205.22 1614.07,1204.28 1614.66,1204.82 1615.25,1206.34 1615.83,1206.52 1616.42,1208.1 1617.01,1209.51 1617.59,1208.37 1618.18,1208.63 1618.76,1206.35 1619.35,1206.69 1619.94,1205.57 1620.52,1207.19 1621.11,1209.82 1621.7,1209.64 1622.28,1207.14 1622.87,1207.37 1623.46,1207.58 1624.04,1210.02 1624.63,1210.13 1625.22,1208 1625.8,1210.37 1626.39,1208.96 1626.97,1206.95 1627.56,1208.4 1628.15,1207.59 1628.73,1207.76 1629.32,1208.98 1629.91,1207.79 1630.49,1209.43 1631.08,1209.27 1631.67,1208.1 1632.25,1208.22 1632.84,1209.3 1633.42,1208.31 1634.01,1208.3 1634.6,1209.53 1635.18,1210.71 1635.77,1208.24 1636.36,1208.51 1636.94,1209.62 1637.53,1210.95 1638.12,1212.13 1638.7,1210.78 1639.29,1211.95 1639.88,1214.61 1640.46,1216.96 1641.05,1216.56 1641.63,1212.66 1642.22,1208.93 1642.81,1210.27 1643.39,1211.37 1643.98,1212.75 1644.57,1211.62 1645.15,1211.61 1645.74,1210.62 1646.33,1208.38 1646.91,1208.37 1647.5,1208.53 1648.09,1209.9 1648.67,1209.88 1649.26,1211.29 1649.84,1212.09 1650.43,1209.65 1651.02,1206.13 1651.6,1204.06 1652.19,1203.1 1652.78,1203.52 1653.36,1205.23 1653.95,1205.48 1654.54,1207.18 1655.12,1207.49 1655.71,1208.85 1656.29,1206.77 1656.88,1210.71 1657.47,1210.94 1658.05,1210.88 1658.64,1210.84 1659.23,1209.74 1659.81,1211.17 1660.4,1211.02 1660.99,1212.16 1661.57,1208.6 1662.16,1208.61 1662.75,1209.89 1663.33,1209.87 1663.92,1207.62 1664.5,1209.2 1665.09,1210.52 1665.68,1209.49 1666.26,1209.6 1666.85,1210.84 1667.44,1212.18 1668.02,1210.97 1668.61,1211.02 1669.2,1210.8 1669.78,1209.36 1670.37,1207.88 1670.96,1207.69 1671.54,1207.78 1672.13,1208.23 1672.71,1209.58 1673.3,1211.04 1673.89,1207.44 1674.47,1208.7 1675.06,1206.24 1675.65,1206.76 1676.23,1206.99 1676.82,1206.07 1677.41,1205.09 1677.99,1205.59 1678.58,1208.07 1679.17,1206.73 1679.75,1205.6 1680.34,1207.21 1680.92,1207.29 1681.51,1208.46 1682.1,1209.68 1682.68,1209.67 1683.27,1211.72 1683.86,1211.69 1684.44,1212.62 1685.03,1212.66 1685.62,1214.81 1686.2,1217.17 1686.79,1216.78 1687.37,1216.45 1687.96,1215.85 1688.55,1215.55 1689.13,1216.47 1689.72,1217.52 1690.31,1216.88 1690.89,1212.92 1691.48,1211.35 1692.07,1211.13 1692.65,1213.3 1693.24,1213.22 1693.83,1212.12 1694.41,1209.88 1695,1208.69 1695.58,1207.62 1696.17,1209.08 1696.76,1209.42 1697.34,1210.81 1697.93,1211.77 1698.52,1211.63 1699.1,1209.15 1699.69,1210.42 1700.28,1209.27 1700.86,1209.26 1701.45,1209.38 1702.04,1209.33 1702.62,1208.18 1703.21,1206.94 1703.79,1207.34 1704.38,1206.47 1704.97,1206.98 1705.55,1209.63 1706.14,1207.38 1706.73,1209.17 1707.31,1210.7 1707.9,1210.74 1708.49,1211.77 1709.07,1211.59 1709.66,1210.56 1710.24,1211.94 1710.83,1210.66 1711.42,1213.08 1712,1213.01 1712.59,1214.19 1713.18,1214.1 1713.76,1210.17 1714.35,1211.12 1714.94,1212.11 1715.52,1212 1716.11,1214.26 1716.7,1217.52 1717.28,1218.48 1717.87,1216.79 1718.45,1217.71 1719.04,1217.42 1719.63,1217.35 1720.21,1215.44 1720.8,1213.88 1721.39,1213.79 1721.97,1213.46 1722.56,1213.33 1723.15,1213.12 1723.73,1213.03 1724.32,1219.05 1724.91,1217.62 1725.49,1213.66 1726.08,1212.09 1726.66,1211.93 1727.25,1213.02 1727.84,1212.92 1728.42,1213 1729.01,1212.87 1729.6,1211.58 1730.18,1212.84 1730.77,1213.78 1731.36,1211.08 1731.94,1212.09 1732.53,1212.06 1733.11,1208.3 1733.7,1208.3 1734.29,1209.75 1734.87,1209.92 1735.46,1211.12 1736.05,1212.37 1736.63,1213.52 1737.22,1213.52 1737.81,1214.67 1738.39,1214.47 1738.98,1214.26 1739.57,1214.17 1740.15,1214.14 1740.74,1211.35 1741.32,1212.66 1741.91,1211.4 1742.5,1211.47 1743.08,1214.06 1743.67,1213.78 1744.26,1211.27 1744.84,1208.86 1745.43,1208.8 1746.02,1208.72 1746.6,1208.79 1747.19,1208.82 1747.78,1210.14 1748.36,1211.52 1748.95,1210.03 1749.53,1212.52 1750.12,1213.46 1750.71,1216.74 1751.29,1214.04 1751.88,1213.79 1752.47,1213.66 1753.05,1213.57 1753.64,1212.36 1754.23,1211.1 1754.81,1211.11 1755.4,1212.14 1755.99,1213.22 1756.57,1212.94 1757.16,1215.39 1757.74,1217.89 1758.33,1215.14 1758.92,1215.03 1759.5,1216.14 1760.09,1217.22 1760.68,1217.05 1761.26,1216.54 1761.85,1214.98 1762.44,1215.83 1763.02,1213.3 1763.61,1212.93 1764.19,1214.01 1764.78,1211.62 1765.37,1210.3 1765.95,1210.46 1766.54,1208.1 1767.13,1208.44 1767.71,1208.55 1768.3,1208.66 1768.89,1208.51 1769.47,1209.94 1770.06,1212.47 1770.65,1213.37 1771.23,1212.09 1771.82,1210.76 1772.4,1210.88 1772.99,1209.72 1773.58,1213.57 1774.16,1215.58 1774.75,1215.23 1775.34,1214.87 1775.92,1214.87 1776.51,1215.75 1777.1,1217.92 1777.68,1217.5 1778.27,1215.93 1778.86,1209.66 1779.44,1210.13 1780.03,1211.15 1780.61,1207.56 1781.2,1207.52 1781.79,1206.61 1782.37,1207.96 1782.96,1208.2 1783.55,1205.94 1784.13,1208.75 1784.72,1211.25 1785.31,1212.52 1785.89,1212.36 1786.48,1213.57 1787.06,1212.39 1787.65,1215.94 1788.24,1213.42 1788.82,1211.89 1789.41,1208.33 1790,1207.29 1790.58,1207.56 1791.17,1208.94 1791.76,1207.84 1792.34,1210.67 1792.93,1210.71 1793.52,1209.62 1794.1,1212.86 1794.69,1215.46 1795.27,1216.14 1795.86,1218.52 1796.45,1218.14 1797.03,1219 1797.62,1217.4 1798.21,1213.78 1798.79,1212.37 1799.38,1213.4 1799.97,1213.19 1800.55,1211.83 1801.14,1211.82 1801.73,1209.25 1802.31,1208.33 1802.9,1209.54 1803.48,1209.43 1804.07,1208.22 1804.66,1204.44 1805.24,1198.56 1805.83,1199.19 1806.42,1200.96 1807,1201.34 1807.59,1201.79 1808.18,1202.54 1808.76,1202.79 1809.35,1200.79 1809.94,1201.45 1810.52,1204.23 1811.11,1204.78 1811.69,1206.45 1812.28,1205.52 1812.87,1205.75 1813.45,1204.71 1814.04,1206.24 1814.63,1206.28 1815.21,1206.53 1815.8,1209.2 1816.39,1207.91 1816.97,1207.14 1817.56,1207.24 1818.14,1207.27 1818.73,1207.69 1819.32,1206.91 1819.9,1207.29 1820.49,1208.76 1821.08,1211.27 1821.66,1211.36 1822.25,1211.37 1822.84,1212.6 1823.42,1213.77 1824.01,1212.46 1824.6,1211.01 1825.18,1212.42 1825.77,1212.39 1826.35,1212.39 1826.94,1213.42 1827.53,1214.32 1828.11,1214.21 1828.7,1214.95 1829.29,1214.78 1829.87,1216.83 1830.46,1219.97 1831.05,1220.71 1831.63,1221.31 1832.22,1222.04 1832.81,1222.77 1833.39,1224.48 1833.98,1222.21 1834.56,1220.2 1835.15,1219.35 1835.74,1220.31 1836.32,1221.01 1836.91,1220.59 1837.5,1222.22 1838.08,1221.8 1838.67,1220.26 1839.26,1218.6 1839.84,1216.96 1840.43,1215.46 1841.01,1216.4 1841.6,1216.07 1842.19,1217.09 1842.77,1214.51 1843.36,1212.86 1843.95,1213.89 1844.53,1212.47 1845.12,1212.51 1845.71,1212.33 1846.29,1213.41 1846.88,1211.93 1847.47,1212.81 1848.05,1208.87 1848.64,1207.78 1849.22,1210.22 1849.81,1211.41 1850.4,1210.99 1850.98,1211.06 1851.57,1210.75 1852.16,1208.29 1852.74,1207.29 1853.33,1205 1853.92,1205.19 1854.5,1206.45 1855.09,1205.56 1855.68,1204.56 1856.26,1204.59 1856.85,1206.15 1857.43,1206.09 1858.02,1207.48 1858.61,1206.18 1859.19,1206.41 1859.78,1209.01 1860.37,1210.49 1860.95,1211.65 1861.54,1209.02 1862.13,1204.33 1862.71,1206.05 1863.3,1204.98 1863.88,1207.82 1864.47,1206.84 1865.06,1203.69 1865.64,1203.14 1866.23,1202.16 1866.82,1203.75 1867.4,1202.99 1867.99,1204.63 1868.58,1207.26 1869.16,1209.99 1869.75,1208.88 1870.34,1207.64 1870.92,1208.83 1871.51,1209.04 1872.09,1209.02 1872.68,1209 1873.27,1210.34 1873.85,1210.35 1874.44,1208 1875.03,1206.72 1875.61,1207.1 1876.2,1208.67 1876.79,1209.02 1877.37,1207.97 1877.96,1206.96 1878.55,1207.26 1879.13,1206.55 1879.72,1207.99 1880.3,1208.26 1880.89,1208.28 1881.48,1211.9 1882.06,1213.09 1882.65,1211.86 1883.24,1214.27 1883.82,1214.09 1884.41,1213.71 1885,1213.73 1885.58,1214.59 1886.17,1213.03 1886.76,1214.3 1887.34,1216.33 1887.93,1214.88 1888.51,1214.5 1889.1,1212.01 1889.69,1214.23 1890.27,1211.35 1890.86,1211.5 1891.45,1210.11 1892.03,1208.87 1892.62,1205.53 1893.21,1204.81 1893.79,1205.2 1894.38,1206.65 1894.96,1203.32 1895.55,1203.71 1896.14,1203.18 1896.72,1204.76 1897.31,1207.67 1897.9,1205.55 1898.48,1204.49 1899.07,1206.21 1899.66,1207.53 1900.24,1205.34 1900.83,1205.71 1901.42,1204.84 1902,1203.96 1902.59,1204.08 1903.17,1205.4 1903.76,1205.96 1904.35,1205.01 1904.93,1206.49 1905.52,1207.91 1906.11,1206.83 1906.69,1207.21 1907.28,1207.29 1907.87,1207.28 1908.45,1208.59 1909.04,1210.02 1909.63,1210.2 1910.21,1211.51 1910.8,1210.26 1911.38,1209.28 1911.97,1210.55 1912.56,1211.95 1913.14,1213.23 1913.73,1211.97 1914.32,1210.57 1914.9,1210.47 1915.49,1211.85 1916.08,1211.85 1916.66,1211.9 1917.25,1211.74 1917.83,1213.13 1918.42,1212.26 1919.01,1212.15 1919.59,1209.82 1920.18,1211.13 1920.77,1209.98 1921.35,1210.38 1921.94,1210.63 1922.53,1208.37 1923.11,1208.48 1923.7,1209.94 1924.29,1212.41 1924.87,1212.38 1925.46,1210.98 1926.04,1214.55 1926.63,1214.17 1927.22,1211.46 1927.8,1213.89 1928.39,1213.92 1928.98,1212.62 1929.56,1212.46 1930.15,1212.48 1930.74,1211.25 1931.32,1210.05 1931.91,1210.42 1932.5,1211.93 1933.08,1211.88 1933.67,1209.6 1934.25,1211.86 1934.84,1212.91 1935.43,1213.91 1936.01,1212.66 1936.6,1216.11 1937.19,1216.12 1937.77,1217.19 1938.36,1216.77 1938.95,1216.58 1939.53,1218.56 1940.12,1220.45 1940.71,1217.58 1941.29,1215.87 1941.88,1217.9 1942.46,1217.38 1943.05,1217.04 1943.64,1216.6 1944.22,1216.29 1944.81,1218.54 1945.4,1218.2 1945.98,1215.5 1946.57,1211.69 1947.16,1211.28 1947.74,1211.05 1948.33,1211.08 1948.91,1212.3 1949.5,1208.69 1950.09,1207.59 1950.67,1206.5 1951.26,1206.7 1951.85,1205.49 1952.43,1205.91 1953.02,1206.18 1953.61,1205.1 1954.19,1205.34 1954.78,1203.1 1955.37,1202.38 1955.95,1205.19 1956.54,1206.67 1957.12,1206.97 1957.71,1209.78 1958.3,1210.86 1958.88,1209.48 1959.47,1211.91 1960.06,1212.86 1960.64,1213.92 1961.23,1213.61 1961.82,1212.07 1962.4,1210.56 1962.99,1208.34 1963.58,1209.64 1964.16,1212.29 1964.75,1211.32 1965.33,1211.36 1965.92,1210.98 1966.51,1208.84 1967.09,1207.8 1967.68,1206.83 1968.27,1205.92 1968.85,1207.28 1969.44,1208.72 1970.03,1206.87 1970.61,1207.28 1971.2,1206.45 1971.78,1206.47 1972.37,1204.36 1972.96,1203.71 1973.54,1206.86 1974.13,1208.2 1974.72,1208.13 1975.3,1211.71 1975.89,1214.28 1976.48,1212.96 1977.06,1211.74 1977.65,1211.52 1978.24,1211.28 1978.82,1211.25 1979.41,1212.45 1979.99,1213.4 1980.58,1214.38 1981.17,1214.03 1981.75,1212.81 1982.34,1214.1 1982.93,1212.85 1983.51,1213.93 1984.1,1212.67 1984.69,1212.46 1985.27,1209.71 1985.86,1211.04 1986.45,1209.75 1987.03,1209.6 1987.62,1210.82 1988.2,1210.78 1988.79,1210.82 1989.38,1210.73 1989.96,1207.31 1990.55,1206.14 1991.14,1205.12 1991.72,1207.72 1992.31,1205.64 1992.9,1207.04 1993.48,1205.88 1994.07,1204.05 1994.65,1203.26 1995.24,1206.19 1995.83,1206.5 1996.41,1208.24 1997,1206.09 1997.59,1206.35 1998.17,1207.9 1998.76,1209.4 1999.35,1210.46 1999.93,1210.44 2000.52,1209.27 2001.11,1209.6 2001.69,1209.69 2002.28,1208.67 2002.86,1210.12 2003.45,1209.03 2004.04,1209.16 2004.62,1209.43 2005.21,1209.47 2005.8,1206.87 2006.38,1207.16 2006.97,1209.7 2007.56,1210.97 2008.14,1212.23 2008.73,1209.81 2009.32,1209.96 2009.9,1209.75 2010.49,1208.64 2011.07,1206.23 2011.66,1205.28 2012.25,1204.14 2012.83,1205.75 2013.42,1203.71 2014.01,1205.12 2014.59,1207.73 2015.18,1208.96 2015.77,1209.18 2016.35,1211.81 2016.94,1214.05 2017.53,1215.15 2018.11,1214.9 2018.7,1215.68 2019.28,1215.57 2019.87,1215.09 2020.46,1214.59 2021.04,1215.6 2021.63,1214.16 2022.22,1213.99 2022.8,1212.65 2023.39,1215.99 2023.98,1216.85 2024.56,1217.86 2025.15,1218.61 2025.73,1219.07 2026.32,1218.75 2026.91,1221.05 2027.49,1220.79 2028.08,1219.18 2028.67,1217.64 2029.25,1217.42 2029.84,1215.8 2030.43,1213.22 2031.01,1213.07 2031.6,1214.33 2032.19,1212.97 2032.77,1212.79 2033.36,1211.2 2033.94,1211.17 2034.53,1212.32 2035.12,1213.39 2035.7,1213.23 2036.29,1214.24 2036.88,1214.3 2037.46,1213.17 2038.05,1216.57 2038.64,1219.7 2039.22,1216.93 2039.81,1216.43 2040.4,1218.42 2040.98,1217.81 2041.57,1217.47 2042.15,1218.33 2042.74,1216.71 2043.33,1216.61 2043.91,1216.27 2044.5,1216.01 2045.09,1216.81 2045.67,1217.7 2046.26,1216.03 2046.85,1215.59 2047.43,1214.25 2048.02,1212.92 2048.6,1215.25 2049.19,1216.36 2049.78,1218.41 2050.36,1216.59 2050.95,1216.24 2051.54,1215.88 2052.12,1212.07 2052.71,1214.11 2053.3,1214.09 2053.88,1216.3 2054.47,1214.89 2055.06,1213.46 2055.64,1213.36 2056.23,1213.29 2056.81,1213.37 2057.4,1213.23 2057.99,1215.43 2058.57,1213.88 2059.16,1214.92 2059.75,1215.8 2060.33,1212.82 2060.92,1212.5 2061.51,1211.01 2062.09,1211.85 2062.68,1211.68 2063.27,1211.73 2063.85,1210.46 2064.44,1210.66 2065.02,1212.16 2065.61,1213.25 2066.2,1213.24 2066.78,1209.75 2067.37,1207.31 2067.96,1206.32 2068.54,1208.76 2069.13,1206.24 2069.72,1207.55 2070.3,1206.48 2070.89,1209.03 2071.48,1210.41 2072.06,1210.46 2072.65,1211.53 2073.23,1213.76 2073.82,1214.73 2074.41,1212.21 2074.99,1212.09 2075.58,1212.16 2076.17,1213.35 2076.75,1210.82 2077.34,1210.66 2077.93,1210.52 2078.51,1209.23 2079.1,1211.77 2079.68,1212.8 2080.27,1211.49 2080.86,1211.24 2081.44,1212.51 2082.03,1212.44 2082.62,1213.47 2083.2,1217.05 2083.79,1215.64 2084.38,1213.97 2084.96,1212.56 2085.55,1212.56 2086.14,1212.26 2086.72,1212.29 2087.31,1213.43 2087.89,1211.81 2088.48,1211.93 2089.07,1210.86 2089.65,1210.78 2090.24,1211.55 2090.83,1211.42 2091.41,1208.89 2092,1207.83 2092.59,1209.14 2093.17,1210.53 2093.76,1210.63 2094.35,1211.75 2094.93,1211.86 2095.52,1210.71 2096.1,1209.75 2096.69,1208.53 2097.28,1207.72 2097.86,1208.89 2098.45,1209.13 2099.04,1207.95 2099.62,1208.07 2100.21,1209.46 2100.8,1210.89 2101.38,1213.29 2101.97,1214.42 2102.55,1215.38 2103.14,1213.93 2103.73,1213.87 2104.31,1211.18 2104.9,1212.66 2105.49,1212.87 2106.07,1212.74 2106.66,1210.41 2107.25,1211.68 2107.83,1211.76 2108.42,1210.39 2109.01,1209.05 2109.59,1210.38 2110.18,1207.92 2110.76,1210.75 2111.35,1209.66 2111.94,1208.44 2112.52,1211.02 2113.11,1210.8 2113.7,1209.67 2114.28,1210 2114.87,1208.99 2115.46,1206.64 2116.04,1206.87 2116.63,1208.54 2117.22,1207.91 2117.8,1206.9 2118.39,1207.1 2118.97,1207.18 2119.56,1205.12 2120.15,1206.47 2120.73,1206.71 2121.32,1206.74 2121.91,1207.83 2122.49,1208.28 2123.08,1210.76 2123.67,1210.79 2124.25,1210.81 2124.84,1210.64 2125.42,1210.64 2126.01,1209.47 2126.6,1208.32 2127.18,1209.92 2127.77,1209.99 2128.36,1210.28 2128.94,1207.81 2129.53,1207.97 2130.12,1209.21 2130.7,1209.41 2131.29,1208.11 2131.88,1210.68 2132.46,1208.25 2133.05,1207.08 2133.63,1208.39 2134.22,1212.01 2134.81,1211.97 2135.39,1213.06 2135.98,1212.94 2136.57,1212.75 2137.15,1212.76 2137.74,1212.73 2138.33,1211.51 2138.91,1211.44 2139.5,1211.45 2140.09,1211.61 2140.67,1207.95 2141.26,1207.04 2141.84,1203.61 2142.43,1202.97 2143.02,1204.43 2143.6,1204.83 2144.19,1205.24 2144.78,1205.57 2145.36,1206.08 2145.95,1205.29 2146.54,1206.99 2147.12,1209.59 2147.71,1208.07 2148.3,1209.36 2148.88,1209.46 2149.47,1210.93 2150.05,1212.33 2150.64,1213.5 2151.23,1214.7 2151.81,1215.57 2152.4,1215.08 2152.99,1212.63 2153.57,1210.16 2154.16,1210.27 2154.75,1210.17 2155.33,1211.58 2155.92,1210.3 2156.5,1211.21 2157.09,1213.64 2157.68,1214.92 2158.26,1216.01 \"/>\n<path clip-path=\"url(#clip382)\" d=\"M986.025 1211.28 L986.612 1211.28 L987.198 1211.28 L987.785 1211.28 L988.371 1211.28 L988.957 1211.28 L989.544 1211.28 L990.13 1211.28 L990.717 1211.28 L991.303 1211.28 L991.889 1211.28 L992.476 1211.28 L993.062 1211.28 L993.649 1211.28 L994.235 1211.28 L994.822 1211.28 L995.408 1211.28 L995.994 1211.28 L996.581 1211.28 L997.167 1211.28 L997.754 1211.28 L998.34 1211.28 L998.926 1211.28 L999.513 1211.28 L1000.1 1211.28 L1000.69 1211.28 L1001.27 1211.28 L1001.86 1211.28 L1002.44 1211.28 L1003.03 1211.28 L1003.62 1211.28 L1004.2 1211.28 L1004.79 1211.28 L1005.38 1211.28 L1005.96 1211.28 L1006.55 1211.28 L1007.14 1211.28 L1007.72 1211.28 L1008.31 1211.28 L1008.9 1211.28 L1009.48 1211.28 L1010.07 1211.28 L1010.65 1211.28 L1011.24 1211.28 L1011.83 1211.28 L1012.41 1211.28 L1013 1211.28 L1013.59 1211.28 L1014.17 1211.28 L1014.76 1211.28 L1015.35 1211.28 L1015.93 1211.28 L1016.52 1211.28 L1017.11 1211.28 L1017.69 1211.28 L1018.28 1211.28 L1018.86 1211.28 L1019.45 1211.28 L1020.04 1211.28 L1020.62 1211.28 L1021.21 1211.28 L1021.8 1211.28 L1022.38 1211.28 L1022.97 1211.28 L1023.56 1211.28 L1024.14 1211.28 L1024.73 1211.28 L1025.32 1211.28 L1025.9 1211.28 L1026.49 1211.28 L1027.07 1211.28 L1027.66 1211.28 L1028.25 1211.28 L1028.83 1211.28 L1029.42 1211.28 L1030.01 1211.28 L1030.59 1211.28 L1031.18 1211.28 L1031.77 1211.28 L1032.35 1211.28 L1032.94 1211.28 L1033.52 1211.28 L1034.11 1211.28 L1034.7 1211.28 L1035.28 1211.28 L1035.87 1211.28 L1036.46 1211.28 L1037.04 1211.28 L1037.63 1211.28 L1038.22 1211.28 L1038.8 1211.28 L1039.39 1211.28 L1039.98 1211.28 L1040.56 1211.28 L1041.15 1211.28 L1041.73 1211.28 L1042.32 1211.28 L1042.91 1211.28 L1043.49 1211.28 L1044.08 1211.28 L1044.67 1211.28 L1045.25 1211.28 L1045.84 1211.28 L1046.43 1211.28 L1047.01 1211.28 L1047.6 1211.28 L1048.19 1211.28 L1048.77 1211.28 L1049.36 1211.28 L1049.94 1211.28 L1050.53 1211.28 L1051.12 1211.28 L1051.7 1211.28 L1052.29 1211.28 L1052.88 1211.28 L1053.46 1211.28 L1054.05 1211.28 L1054.64 1211.28 L1055.22 1211.28 L1055.81 1211.28 L1056.39 1211.28 L1056.98 1211.28 L1057.57 1211.28 L1058.15 1211.28 L1058.74 1211.28 L1059.33 1211.28 L1059.91 1211.28 L1060.5 1211.28 L1061.09 1211.28 L1061.67 1211.28 L1062.26 1211.28 L1062.85 1211.28 L1063.43 1211.28 L1064.02 1211.28 L1064.6 1211.28 L1065.19 1211.28 L1065.78 1211.28 L1066.36 1211.28 L1066.95 1211.28 L1067.54 1211.28 L1068.12 1211.28 L1068.71 1211.28 L1069.3 1211.28 L1069.88 1211.28 L1070.47 1211.28 L1071.06 1211.28 L1071.64 1211.28 L1072.23 1211.28 L1072.81 1211.28 L1073.4 1211.28 L1073.99 1211.28 L1074.57 1211.28 L1075.16 1211.28 L1075.75 1211.28 L1076.33 1211.28 L1076.92 1211.28 L1077.51 1211.28 L1078.09 1211.28 L1078.68 1211.28 L1079.26 1211.28 L1079.85 1211.28 L1080.44 1211.28 L1081.02 1211.28 L1081.61 1211.28 L1082.2 1211.28 L1082.78 1211.28 L1083.37 1211.28 L1083.96 1211.28 L1084.54 1211.28 L1085.13 1211.28 L1085.72 1211.28 L1086.3 1211.28 L1086.89 1211.28 L1087.47 1211.28 L1088.06 1211.28 L1088.65 1211.28 L1089.23 1211.28 L1089.82 1211.28 L1090.41 1211.28 L1090.99 1211.28 L1091.58 1211.28 L1092.17 1211.28 L1092.75 1211.28 L1093.34 1211.28 L1093.93 1211.28 L1094.51 1211.28 L1095.1 1211.28 L1095.68 1211.28 L1096.27 1211.28 L1096.86 1211.28 L1097.44 1211.28 L1098.03 1211.28 L1098.62 1211.28 L1099.2 1211.28 L1099.79 1211.28 L1100.38 1211.28 L1100.96 1211.28 L1101.55 1211.28 L1102.14 1211.28 L1102.72 1211.28 L1103.31 1211.28 L1103.89 1211.28 L1104.48 1211.28 L1105.07 1211.28 L1105.65 1211.28 L1106.24 1211.28 L1106.83 1211.28 L1107.41 1211.28 L1108 1211.28 L1108.59 1211.28 L1109.17 1211.28 L1109.76 1211.28 L1110.34 1211.28 L1110.93 1211.28 L1111.52 1211.28 L1112.1 1211.28 L1112.69 1211.28 L1113.28 1211.28 L1113.86 1211.28 L1114.45 1211.28 L1115.04 1211.28 L1115.62 1211.28 L1116.21 1211.28 L1116.8 1211.28 L1117.38 1211.28 L1117.97 1211.28 L1118.55 1211.28 L1119.14 1211.28 L1119.73 1211.28 L1120.31 1211.28 L1120.9 1211.28 L1121.49 1211.28 L1122.07 1211.28 L1122.66 1211.28 L1123.25 1211.28 L1123.83 1211.28 L1124.42 1211.28 L1125.01 1211.28 L1125.59 1211.28 L1126.18 1211.28 L1126.76 1211.28 L1127.35 1211.28 L1127.94 1211.28 L1128.52 1211.28 L1129.11 1211.28 L1129.7 1211.28 L1130.28 1211.28 L1130.87 1211.28 L1131.46 1211.28 L1132.04 1211.28 L1132.63 1211.28 L1133.21 1211.28 L1133.8 1211.28 L1134.39 1211.28 L1134.97 1211.28 L1135.56 1211.28 L1136.15 1211.28 L1136.73 1211.28 L1137.32 1211.28 L1137.91 1211.28 L1138.49 1211.28 L1139.08 1211.28 L1139.67 1211.28 L1140.25 1211.28 L1140.84 1211.28 L1141.42 1211.28 L1142.01 1211.28 L1142.6 1211.28 L1143.18 1211.28 L1143.77 1211.28 L1144.36 1211.28 L1144.94 1211.28 L1145.53 1211.28 L1146.12 1211.28 L1146.7 1211.28 L1147.29 1211.28 L1147.88 1211.28 L1148.46 1211.28 L1149.05 1211.28 L1149.63 1211.28 L1150.22 1211.28 L1150.81 1211.28 L1151.39 1211.28 L1151.98 1211.28 L1152.57 1211.28 L1153.15 1211.28 L1153.74 1211.28 L1154.33 1211.28 L1154.91 1211.28 L1155.5 1211.28 L1156.09 1211.28 L1156.67 1211.28 L1157.26 1211.28 L1157.84 1211.28 L1158.43 1211.28 L1159.02 1211.28 L1159.6 1211.28 L1160.19 1211.28 L1160.78 1211.28 L1161.36 1211.28 L1161.95 1211.28 L1162.54 1211.28 L1163.12 1211.28 L1163.71 1211.28 L1164.29 1211.28 L1164.88 1211.28 L1165.47 1211.28 L1166.05 1211.28 L1166.64 1211.28 L1167.23 1211.28 L1167.81 1211.28 L1168.4 1211.28 L1168.99 1211.28 L1169.57 1211.28 L1170.16 1211.28 L1170.75 1211.28 L1171.33 1211.28 L1171.92 1211.28 L1172.5 1211.28 L1173.09 1211.28 L1173.68 1211.28 L1174.26 1211.28 L1174.85 1211.28 L1175.44 1211.28 L1176.02 1211.28 L1176.61 1211.28 L1177.2 1211.28 L1177.78 1211.28 L1178.37 1211.28 L1178.96 1211.28 L1179.54 1211.28 L1180.13 1211.28 L1180.71 1211.28 L1181.3 1211.28 L1181.89 1211.28 L1182.47 1211.28 L1183.06 1211.28 L1183.65 1211.28 L1184.23 1211.28 L1184.82 1211.28 L1185.41 1211.28 L1185.99 1211.28 L1186.58 1211.28 L1187.16 1211.28 L1187.75 1211.28 L1188.34 1211.28 L1188.92 1211.28 L1189.51 1211.28 L1190.1 1211.28 L1190.68 1211.28 L1191.27 1211.28 L1191.86 1211.28 L1192.44 1211.28 L1193.03 1211.28 L1193.62 1211.28 L1194.2 1211.28 L1194.79 1211.28 L1195.37 1211.28 L1195.96 1211.28 L1196.55 1211.28 L1197.13 1211.28 L1197.72 1211.28 L1198.31 1211.28 L1198.89 1211.28 L1199.48 1211.28 L1200.07 1211.28 L1200.65 1211.28 L1201.24 1211.28 L1201.83 1211.28 L1202.41 1211.28 L1203 1211.28 L1203.58 1211.28 L1204.17 1211.28 L1204.76 1211.28 L1205.34 1211.28 L1205.93 1211.28 L1206.52 1211.28 L1207.1 1211.28 L1207.69 1211.28 L1208.28 1211.28 L1208.86 1211.28 L1209.45 1211.28 L1210.03 1211.28 L1210.62 1211.28 L1211.21 1211.28 L1211.79 1211.28 L1212.38 1211.28 L1212.97 1211.28 L1213.55 1211.28 L1214.14 1211.28 L1214.73 1211.28 L1215.31 1211.28 L1215.9 1211.28 L1216.49 1211.28 L1217.07 1211.28 L1217.66 1211.28 L1218.24 1211.28 L1218.83 1211.28 L1219.42 1211.28 L1220 1211.28 L1220.59 1211.28 L1221.18 1211.28 L1221.76 1211.28 L1222.35 1211.28 L1222.94 1211.28 L1223.52 1211.28 L1224.11 1211.28 L1224.7 1211.28 L1225.28 1211.28 L1225.87 1211.28 L1226.45 1211.28 L1227.04 1211.28 L1227.63 1211.28 L1228.21 1211.28 L1228.8 1211.28 L1229.39 1211.28 L1229.97 1211.28 L1230.56 1211.28 L1231.15 1211.28 L1231.73 1211.28 L1232.32 1211.28 L1232.91 1211.28 L1233.49 1211.28 L1234.08 1211.28 L1234.66 1211.28 L1235.25 1211.28 L1235.84 1211.28 L1236.42 1211.28 L1237.01 1211.28 L1237.6 1211.28 L1238.18 1211.28 L1238.77 1211.28 L1239.36 1211.28 L1239.94 1211.28 L1240.53 1211.28 L1241.11 1211.28 L1241.7 1211.28 L1242.29 1211.28 L1242.87 1211.28 L1243.46 1211.28 L1244.05 1211.28 L1244.63 1211.28 L1245.22 1211.28 L1245.81 1211.28 L1246.39 1211.28 L1246.98 1211.28 L1247.57 1211.28 L1248.15 1211.28 L1248.74 1211.28 L1249.32 1211.28 L1249.91 1211.28 L1250.5 1211.28 L1251.08 1211.28 L1251.67 1211.28 L1252.26 1211.28 L1252.84 1211.28 L1253.43 1211.28 L1254.02 1211.28 L1254.6 1211.28 L1255.19 1211.28 L1255.78 1211.28 L1256.36 1211.28 L1256.95 1211.28 L1257.53 1211.28 L1258.12 1211.28 L1258.71 1211.28 L1259.29 1211.28 L1259.88 1211.28 L1260.47 1211.28 L1261.05 1211.28 L1261.64 1211.28 L1262.23 1211.28 L1262.81 1211.28 L1263.4 1211.28 L1263.98 1211.28 L1264.57 1211.28 L1265.16 1211.28 L1265.74 1211.28 L1266.33 1211.28 L1266.92 1211.28 L1267.5 1211.28 L1268.09 1211.28 L1268.68 1211.28 L1269.26 1211.28 L1269.85 1211.28 L1270.44 1211.28 L1271.02 1211.28 L1271.61 1211.28 L1272.19 1211.28 L1272.78 1211.28 L1273.37 1211.28 L1273.95 1211.28 L1274.54 1211.28 L1275.13 1211.28 L1275.71 1211.28 L1276.3 1211.28 L1276.89 1211.28 L1277.47 1211.28 L1278.06 1211.28 L1278.65 1211.28 L1279.23 1211.28 L1279.82 1211.28 L1280.4 1211.28 L1280.99 1211.28 L1281.58 1211.28 L1282.16 1211.28 L1282.75 1211.28 L1283.34 1211.28 L1283.92 1211.28 L1284.51 1211.28 L1285.1 1211.28 L1285.68 1211.28 L1286.27 1211.28 L1286.86 1211.28 L1287.44 1211.28 L1288.03 1211.28 L1288.61 1211.28 L1289.2 1211.28 L1289.79 1211.28 L1290.37 1211.28 L1290.96 1211.28 L1291.55 1211.28 L1292.13 1211.28 L1292.72 1211.28 L1293.31 1211.28 L1293.89 1211.28 L1294.48 1211.28 L1295.06 1211.28 L1295.65 1211.28 L1296.24 1211.28 L1296.82 1211.28 L1297.41 1211.28 L1298 1211.28 L1298.58 1211.28 L1299.17 1211.28 L1299.76 1211.28 L1300.34 1211.28 L1300.93 1211.28 L1301.52 1211.28 L1302.1 1211.28 L1302.69 1211.28 L1303.27 1211.28 L1303.86 1211.28 L1304.45 1211.28 L1305.03 1211.28 L1305.62 1211.28 L1306.21 1211.28 L1306.79 1211.28 L1307.38 1211.28 L1307.97 1211.28 L1308.55 1211.28 L1309.14 1211.28 L1309.73 1211.28 L1310.31 1211.28 L1310.9 1211.28 L1311.48 1211.28 L1312.07 1211.28 L1312.66 1211.28 L1313.24 1211.28 L1313.83 1211.28 L1314.42 1211.28 L1315 1211.28 L1315.59 1211.28 L1316.18 1211.28 L1316.76 1211.28 L1317.35 1211.28 L1317.93 1211.28 L1318.52 1211.28 L1319.11 1211.28 L1319.69 1211.28 L1320.28 1211.28 L1320.87 1211.28 L1321.45 1211.28 L1322.04 1211.28 L1322.63 1211.28 L1323.21 1211.28 L1323.8 1211.28 L1324.39 1211.28 L1324.97 1211.28 L1325.56 1211.28 L1326.14 1211.28 L1326.73 1211.28 L1327.32 1211.28 L1327.9 1211.28 L1328.49 1211.28 L1329.08 1211.28 L1329.66 1211.28 L1330.25 1211.28 L1330.84 1211.28 L1331.42 1211.28 L1332.01 1211.28 L1332.6 1211.28 L1333.18 1211.28 L1333.77 1211.28 L1334.35 1211.28 L1334.94 1211.28 L1335.53 1211.28 L1336.11 1211.28 L1336.7 1211.28 L1337.29 1211.28 L1337.87 1211.28 L1338.46 1211.28 L1339.05 1211.28 L1339.63 1211.28 L1340.22 1211.28 L1340.8 1211.28 L1341.39 1211.28 L1341.98 1211.28 L1342.56 1211.28 L1343.15 1211.28 L1343.74 1211.28 L1344.32 1211.28 L1344.91 1211.28 L1345.5 1211.28 L1346.08 1211.28 L1346.67 1211.28 L1347.26 1211.28 L1347.84 1211.28 L1348.43 1211.28 L1349.01 1211.28 L1349.6 1211.28 L1350.19 1211.28 L1350.77 1211.28 L1351.36 1211.28 L1351.95 1211.28 L1352.53 1211.28 L1353.12 1211.28 L1353.71 1211.28 L1354.29 1211.28 L1354.88 1211.28 L1355.47 1211.28 L1356.05 1211.28 L1356.64 1211.28 L1357.22 1211.28 L1357.81 1211.28 L1358.4 1211.28 L1358.98 1211.28 L1359.57 1211.28 L1360.16 1211.28 L1360.74 1211.28 L1361.33 1211.28 L1361.92 1211.28 L1362.5 1211.28 L1363.09 1211.28 L1363.68 1211.28 L1364.26 1211.28 L1364.85 1211.28 L1365.43 1211.28 L1366.02 1211.28 L1366.61 1211.28 L1367.19 1211.28 L1367.78 1211.28 L1368.37 1211.28 L1368.95 1211.28 L1369.54 1211.28 L1370.13 1211.28 L1370.71 1211.28 L1371.3 1211.28 L1371.88 1211.28 L1372.47 1211.28 L1373.06 1211.28 L1373.64 1211.28 L1374.23 1211.28 L1374.82 1211.28 L1375.4 1211.28 L1375.99 1211.28 L1376.58 1211.28 L1377.16 1211.28 L1377.75 1211.28 L1378.34 1211.28 L1378.92 1211.28 L1379.51 1211.28 L1380.09 1211.28 L1380.68 1211.28 L1381.27 1211.28 L1381.85 1211.28 L1382.44 1211.28 L1383.03 1211.28 L1383.61 1211.28 L1384.2 1211.28 L1384.79 1211.28 L1385.37 1211.28 L1385.96 1211.28 L1386.55 1211.28 L1387.13 1211.28 L1387.72 1211.28 L1388.3 1211.28 L1388.89 1211.28 L1389.48 1211.28 L1390.06 1211.28 L1390.65 1211.28 L1391.24 1211.28 L1391.82 1211.28 L1392.41 1211.28 L1393 1211.28 L1393.58 1211.28 L1394.17 1211.28 L1394.75 1211.28 L1395.34 1211.28 L1395.93 1211.28 L1396.51 1211.28 L1397.1 1211.28 L1397.69 1211.28 L1398.27 1211.28 L1398.86 1211.28 L1399.45 1211.28 L1400.03 1211.28 L1400.62 1211.28 L1401.21 1211.28 L1401.79 1211.28 L1402.38 1211.28 L1402.96 1211.28 L1403.55 1211.28 L1404.14 1211.28 L1404.72 1211.28 L1405.31 1211.28 L1405.9 1211.28 L1406.48 1211.28 L1407.07 1211.28 L1407.66 1211.28 L1408.24 1211.28 L1408.83 1211.28 L1409.42 1211.28 L1410 1211.28 L1410.59 1211.28 L1411.17 1211.28 L1411.76 1211.28 L1412.35 1211.28 L1412.93 1211.28 L1413.52 1211.28 L1414.11 1211.28 L1414.69 1211.28 L1415.28 1211.28 L1415.87 1211.28 L1416.45 1211.28 L1417.04 1211.28 L1417.63 1211.28 L1418.21 1211.28 L1418.8 1211.28 L1419.38 1211.28 L1419.97 1211.28 L1420.56 1211.28 L1421.14 1211.28 L1421.73 1211.28 L1422.32 1211.28 L1422.9 1211.28 L1423.49 1211.28 L1424.08 1211.28 L1424.66 1211.28 L1425.25 1211.28 L1425.83 1211.28 L1426.42 1211.28 L1427.01 1211.28 L1427.59 1211.28 L1428.18 1211.28 L1428.77 1211.28 L1429.35 1211.28 L1429.94 1211.28 L1430.53 1211.28 L1431.11 1211.28 L1431.7 1211.28 L1432.29 1211.28 L1432.87 1211.28 L1433.46 1211.28 L1434.04 1211.28 L1434.63 1211.28 L1435.22 1211.28 L1435.8 1211.28 L1436.39 1211.28 L1436.98 1211.28 L1437.56 1211.28 L1438.15 1211.28 L1438.74 1211.28 L1439.32 1211.28 L1439.91 1211.28 L1440.5 1211.28 L1441.08 1211.28 L1441.67 1211.28 L1442.25 1211.28 L1442.84 1211.28 L1443.43 1211.28 L1444.01 1211.28 L1444.6 1211.28 L1445.19 1211.28 L1445.77 1211.28 L1446.36 1211.28 L1446.95 1211.28 L1447.53 1211.28 L1448.12 1211.28 L1448.7 1211.28 L1449.29 1211.28 L1449.88 1211.28 L1450.46 1211.28 L1451.05 1211.28 L1451.64 1211.28 L1452.22 1211.28 L1452.81 1211.28 L1453.4 1211.28 L1453.98 1211.28 L1454.57 1211.28 L1455.16 1211.28 L1455.74 1211.28 L1456.33 1211.28 L1456.91 1211.28 L1457.5 1211.28 L1458.09 1211.28 L1458.67 1211.28 L1459.26 1211.28 L1459.85 1211.28 L1460.43 1211.28 L1461.02 1211.28 L1461.61 1211.28 L1462.19 1211.28 L1462.78 1211.28 L1463.37 1211.28 L1463.95 1211.28 L1464.54 1211.28 L1465.12 1211.28 L1465.71 1211.28 L1466.3 1211.28 L1466.88 1211.28 L1467.47 1211.28 L1468.06 1211.28 L1468.64 1211.28 L1469.23 1211.28 L1469.82 1211.28 L1470.4 1211.28 L1470.99 1211.28 L1471.57 1211.28 L1472.16 1211.28 L1472.75 1211.28 L1473.33 1211.28 L1473.92 1211.28 L1474.51 1211.28 L1475.09 1211.28 L1475.68 1211.28 L1476.27 1211.28 L1476.85 1211.28 L1477.44 1211.28 L1478.03 1211.28 L1478.61 1211.28 L1479.2 1211.28 L1479.78 1211.28 L1480.37 1211.28 L1480.96 1211.28 L1481.54 1211.28 L1482.13 1211.28 L1482.72 1211.28 L1483.3 1211.28 L1483.89 1211.28 L1484.48 1211.28 L1485.06 1211.28 L1485.65 1211.28 L1486.24 1211.28 L1486.82 1211.28 L1487.41 1211.28 L1487.99 1211.28 L1488.58 1211.28 L1489.17 1211.28 L1489.75 1211.28 L1490.34 1211.28 L1490.93 1211.28 L1491.51 1211.28 L1492.1 1211.28 L1492.69 1211.28 L1493.27 1211.28 L1493.86 1211.28 L1494.45 1211.28 L1495.03 1211.28 L1495.62 1211.28 L1496.2 1211.28 L1496.79 1211.28 L1497.38 1211.28 L1497.96 1211.28 L1498.55 1211.28 L1499.14 1211.28 L1499.72 1211.28 L1500.31 1211.28 L1500.9 1211.28 L1501.48 1211.28 L1502.07 1211.28 L1502.65 1211.28 L1503.24 1211.28 L1503.83 1211.28 L1504.41 1211.28 L1505 1211.28 L1505.59 1211.28 L1506.17 1211.28 L1506.76 1211.28 L1507.35 1211.28 L1507.93 1211.28 L1508.52 1211.28 L1509.11 1211.28 L1509.69 1211.28 L1510.28 1211.28 L1510.86 1211.28 L1511.45 1211.28 L1512.04 1211.28 L1512.62 1211.28 L1513.21 1211.28 L1513.8 1211.28 L1514.38 1211.28 L1514.97 1211.28 L1515.56 1211.28 L1516.14 1211.28 L1516.73 1211.28 L1517.32 1211.28 L1517.9 1211.28 L1518.49 1211.28 L1519.07 1211.28 L1519.66 1211.28 L1520.25 1211.28 L1520.83 1211.28 L1521.42 1211.28 L1522.01 1211.28 L1522.59 1211.28 L1523.18 1211.28 L1523.77 1211.28 L1524.35 1211.28 L1524.94 1211.28 L1525.52 1211.28 L1526.11 1211.28 L1526.7 1211.28 L1527.28 1211.28 L1527.87 1211.28 L1528.46 1211.28 L1529.04 1211.28 L1529.63 1211.28 L1530.22 1211.28 L1530.8 1211.28 L1531.39 1211.28 L1531.98 1211.28 L1532.56 1211.28 L1533.15 1211.28 L1533.73 1211.28 L1534.32 1211.28 L1534.91 1211.28 L1535.49 1211.28 L1536.08 1211.28 L1536.67 1211.28 L1537.25 1211.28 L1537.84 1211.28 L1538.43 1211.28 L1539.01 1211.28 L1539.6 1211.28 L1540.19 1211.28 L1540.77 1211.28 L1541.36 1211.28 L1541.94 1211.28 L1542.53 1211.28 L1543.12 1211.28 L1543.7 1211.28 L1544.29 1211.28 L1544.88 1211.28 L1545.46 1211.28 L1546.05 1211.28 L1546.64 1211.28 L1547.22 1211.28 L1547.81 1211.28 L1548.4 1211.28 L1548.98 1211.28 L1549.57 1211.28 L1550.15 1211.28 L1550.74 1211.28 L1551.33 1211.28 L1551.91 1211.28 L1552.5 1211.28 L1553.09 1211.28 L1553.67 1211.28 L1554.26 1211.28 L1554.85 1211.28 L1555.43 1211.28 L1556.02 1211.28 L1556.6 1211.28 L1557.19 1211.28 L1557.78 1211.28 L1558.36 1211.28 L1558.95 1211.28 L1559.54 1211.28 L1560.12 1211.28 L1560.71 1211.28 L1561.3 1211.28 L1561.88 1211.28 L1562.47 1211.28 L1563.06 1211.28 L1563.64 1211.28 L1564.23 1211.28 L1564.81 1211.28 L1565.4 1211.28 L1565.99 1211.28 L1566.57 1211.28 L1567.16 1211.28 L1567.75 1211.28 L1568.33 1211.28 L1568.92 1211.28 L1569.51 1211.28 L1570.09 1211.28 L1570.68 1211.28 L1571.27 1211.28 L1571.85 1211.28 L1572.44 1211.28 L1573.02 1211.28 L1573.61 1211.28 L1574.2 1211.28 L1574.78 1211.28 L1575.37 1211.28 L1575.96 1211.28 L1576.54 1211.28 L1577.13 1211.28 L1577.72 1211.28 L1578.3 1211.28 L1578.89 1211.28 L1579.47 1211.28 L1580.06 1211.28 L1580.65 1211.28 L1581.23 1211.28 L1581.82 1211.28 L1582.41 1211.28 L1582.99 1211.28 L1583.58 1211.28 L1584.17 1211.28 L1584.75 1211.28 L1585.34 1211.28 L1585.93 1211.28 L1586.51 1211.28 L1587.1 1211.28 L1587.68 1211.28 L1588.27 1211.28 L1588.86 1211.28 L1589.44 1211.28 L1590.03 1211.28 L1590.62 1211.28 L1591.2 1211.28 L1591.79 1211.28 L1592.38 1211.28 L1592.96 1211.28 L1593.55 1211.28 L1594.14 1211.28 L1594.72 1211.28 L1595.31 1211.28 L1595.89 1211.28 L1596.48 1211.28 L1597.07 1211.28 L1597.65 1211.28 L1598.24 1211.28 L1598.83 1211.28 L1599.41 1211.28 L1600 1211.28 L1600.59 1211.28 L1601.17 1211.28 L1601.76 1211.28 L1602.34 1211.28 L1602.93 1211.28 L1603.52 1211.28 L1604.1 1211.28 L1604.69 1211.28 L1605.28 1211.28 L1605.86 1211.28 L1606.45 1211.28 L1607.04 1211.28 L1607.62 1211.28 L1608.21 1211.28 L1608.8 1211.28 L1609.38 1211.28 L1609.97 1211.28 L1610.55 1211.28 L1611.14 1211.28 L1611.73 1211.28 L1612.31 1211.28 L1612.9 1211.28 L1613.49 1211.28 L1614.07 1211.28 L1614.66 1211.28 L1615.25 1211.28 L1615.83 1211.28 L1616.42 1211.28 L1617.01 1211.28 L1617.59 1211.28 L1618.18 1211.28 L1618.76 1211.28 L1619.35 1211.28 L1619.94 1211.28 L1620.52 1211.28 L1621.11 1211.28 L1621.7 1211.28 L1622.28 1211.28 L1622.87 1211.28 L1623.46 1211.28 L1624.04 1211.28 L1624.63 1211.28 L1625.22 1211.28 L1625.8 1211.28 L1626.39 1211.28 L1626.97 1211.28 L1627.56 1211.28 L1628.15 1211.28 L1628.73 1211.28 L1629.32 1211.28 L1629.91 1211.28 L1630.49 1211.28 L1631.08 1211.28 L1631.67 1211.28 L1632.25 1211.28 L1632.84 1211.28 L1633.42 1211.28 L1634.01 1211.28 L1634.6 1211.28 L1635.18 1211.28 L1635.77 1211.28 L1636.36 1211.28 L1636.94 1211.28 L1637.53 1211.28 L1638.12 1211.28 L1638.7 1211.28 L1639.29 1211.28 L1639.88 1211.28 L1640.46 1211.28 L1641.05 1211.28 L1641.63 1211.28 L1642.22 1211.28 L1642.81 1211.28 L1643.39 1211.28 L1643.98 1211.28 L1644.57 1211.28 L1645.15 1211.28 L1645.74 1211.28 L1646.33 1211.28 L1646.91 1211.28 L1647.5 1211.28 L1648.09 1211.28 L1648.67 1211.28 L1649.26 1211.28 L1649.84 1211.28 L1650.43 1211.28 L1651.02 1211.28 L1651.6 1211.28 L1652.19 1211.28 L1652.78 1211.28 L1653.36 1211.28 L1653.95 1211.28 L1654.54 1211.28 L1655.12 1211.28 L1655.71 1211.28 L1656.29 1211.28 L1656.88 1211.28 L1657.47 1211.28 L1658.05 1211.28 L1658.64 1211.28 L1659.23 1211.28 L1659.81 1211.28 L1660.4 1211.28 L1660.99 1211.28 L1661.57 1211.28 L1662.16 1211.28 L1662.75 1211.28 L1663.33 1211.28 L1663.92 1211.28 L1664.5 1211.28 L1665.09 1211.28 L1665.68 1211.28 L1666.26 1211.28 L1666.85 1211.28 L1667.44 1211.28 L1668.02 1211.28 L1668.61 1211.28 L1669.2 1211.28 L1669.78 1211.28 L1670.37 1211.28 L1670.96 1211.28 L1671.54 1211.28 L1672.13 1211.28 L1672.71 1211.28 L1673.3 1211.28 L1673.89 1211.28 L1674.47 1211.28 L1675.06 1211.28 L1675.65 1211.28 L1676.23 1211.28 L1676.82 1211.28 L1677.41 1211.28 L1677.99 1211.28 L1678.58 1211.28 L1679.17 1211.28 L1679.75 1211.28 L1680.34 1211.28 L1680.92 1211.28 L1681.51 1211.28 L1682.1 1211.28 L1682.68 1211.28 L1683.27 1211.28 L1683.86 1211.28 L1684.44 1211.28 L1685.03 1211.28 L1685.62 1211.28 L1686.2 1211.28 L1686.79 1211.28 L1687.37 1211.28 L1687.96 1211.28 L1688.55 1211.28 L1689.13 1211.28 L1689.72 1211.28 L1690.31 1211.28 L1690.89 1211.28 L1691.48 1211.28 L1692.07 1211.28 L1692.65 1211.28 L1693.24 1211.28 L1693.83 1211.28 L1694.41 1211.28 L1695 1211.28 L1695.58 1211.28 L1696.17 1211.28 L1696.76 1211.28 L1697.34 1211.28 L1697.93 1211.28 L1698.52 1211.28 L1699.1 1211.28 L1699.69 1211.28 L1700.28 1211.28 L1700.86 1211.28 L1701.45 1211.28 L1702.04 1211.28 L1702.62 1211.28 L1703.21 1211.28 L1703.79 1211.28 L1704.38 1211.28 L1704.97 1211.28 L1705.55 1211.28 L1706.14 1211.28 L1706.73 1211.28 L1707.31 1211.28 L1707.9 1211.28 L1708.49 1211.28 L1709.07 1211.28 L1709.66 1211.28 L1710.24 1211.28 L1710.83 1211.28 L1711.42 1211.28 L1712 1211.28 L1712.59 1211.28 L1713.18 1211.28 L1713.76 1211.28 L1714.35 1211.28 L1714.94 1211.28 L1715.52 1211.28 L1716.11 1211.28 L1716.7 1211.28 L1717.28 1211.28 L1717.87 1211.28 L1718.45 1211.28 L1719.04 1211.28 L1719.63 1211.28 L1720.21 1211.28 L1720.8 1211.28 L1721.39 1211.28 L1721.97 1211.28 L1722.56 1211.28 L1723.15 1211.28 L1723.73 1211.28 L1724.32 1211.28 L1724.91 1211.28 L1725.49 1211.28 L1726.08 1211.28 L1726.66 1211.28 L1727.25 1211.28 L1727.84 1211.28 L1728.42 1211.28 L1729.01 1211.28 L1729.6 1211.28 L1730.18 1211.28 L1730.77 1211.28 L1731.36 1211.28 L1731.94 1211.28 L1732.53 1211.28 L1733.11 1211.28 L1733.7 1211.28 L1734.29 1211.28 L1734.87 1211.28 L1735.46 1211.28 L1736.05 1211.28 L1736.63 1211.28 L1737.22 1211.28 L1737.81 1211.28 L1738.39 1211.28 L1738.98 1211.28 L1739.57 1211.28 L1740.15 1211.28 L1740.74 1211.28 L1741.32 1211.28 L1741.91 1211.28 L1742.5 1211.28 L1743.08 1211.28 L1743.67 1211.28 L1744.26 1211.28 L1744.84 1211.28 L1745.43 1211.28 L1746.02 1211.28 L1746.6 1211.28 L1747.19 1211.28 L1747.78 1211.28 L1748.36 1211.28 L1748.95 1211.28 L1749.53 1211.28 L1750.12 1211.28 L1750.71 1211.28 L1751.29 1211.28 L1751.88 1211.28 L1752.47 1211.28 L1753.05 1211.28 L1753.64 1211.28 L1754.23 1211.28 L1754.81 1211.28 L1755.4 1211.28 L1755.99 1211.28 L1756.57 1211.28 L1757.16 1211.28 L1757.74 1211.28 L1758.33 1211.28 L1758.92 1211.28 L1759.5 1211.28 L1760.09 1211.28 L1760.68 1211.28 L1761.26 1211.28 L1761.85 1211.28 L1762.44 1211.28 L1763.02 1211.28 L1763.61 1211.28 L1764.19 1211.28 L1764.78 1211.28 L1765.37 1211.28 L1765.95 1211.28 L1766.54 1211.28 L1767.13 1211.28 L1767.71 1211.28 L1768.3 1211.28 L1768.89 1211.28 L1769.47 1211.28 L1770.06 1211.28 L1770.65 1211.28 L1771.23 1211.28 L1771.82 1211.28 L1772.4 1211.28 L1772.99 1211.28 L1773.58 1211.28 L1774.16 1211.28 L1774.75 1211.28 L1775.34 1211.28 L1775.92 1211.28 L1776.51 1211.28 L1777.1 1211.28 L1777.68 1211.28 L1778.27 1211.28 L1778.86 1211.28 L1779.44 1211.28 L1780.03 1211.28 L1780.61 1211.28 L1781.2 1211.28 L1781.79 1211.28 L1782.37 1211.28 L1782.96 1211.28 L1783.55 1211.28 L1784.13 1211.28 L1784.72 1211.28 L1785.31 1211.28 L1785.89 1211.28 L1786.48 1211.28 L1787.06 1211.28 L1787.65 1211.28 L1788.24 1211.28 L1788.82 1211.28 L1789.41 1211.28 L1790 1211.28 L1790.58 1211.28 L1791.17 1211.28 L1791.76 1211.28 L1792.34 1211.28 L1792.93 1211.28 L1793.52 1211.28 L1794.1 1211.28 L1794.69 1211.28 L1795.27 1211.28 L1795.86 1211.28 L1796.45 1211.28 L1797.03 1211.28 L1797.62 1211.28 L1798.21 1211.28 L1798.79 1211.28 L1799.38 1211.28 L1799.97 1211.28 L1800.55 1211.28 L1801.14 1211.28 L1801.73 1211.28 L1802.31 1211.28 L1802.9 1211.28 L1803.48 1211.28 L1804.07 1211.28 L1804.66 1211.28 L1805.24 1211.28 L1805.83 1211.28 L1806.42 1211.28 L1807 1211.28 L1807.59 1211.28 L1808.18 1211.28 L1808.76 1211.28 L1809.35 1211.28 L1809.94 1211.28 L1810.52 1211.28 L1811.11 1211.28 L1811.69 1211.28 L1812.28 1211.28 L1812.87 1211.28 L1813.45 1211.28 L1814.04 1211.28 L1814.63 1211.28 L1815.21 1211.28 L1815.8 1211.28 L1816.39 1211.28 L1816.97 1211.28 L1817.56 1211.28 L1818.14 1211.28 L1818.73 1211.28 L1819.32 1211.28 L1819.9 1211.28 L1820.49 1211.28 L1821.08 1211.28 L1821.66 1211.28 L1822.25 1211.28 L1822.84 1211.28 L1823.42 1211.28 L1824.01 1211.28 L1824.6 1211.28 L1825.18 1211.28 L1825.77 1211.28 L1826.35 1211.28 L1826.94 1211.28 L1827.53 1211.28 L1828.11 1211.28 L1828.7 1211.28 L1829.29 1211.28 L1829.87 1211.28 L1830.46 1211.28 L1831.05 1211.28 L1831.63 1211.28 L1832.22 1211.28 L1832.81 1211.28 L1833.39 1211.28 L1833.98 1211.28 L1834.56 1211.28 L1835.15 1211.28 L1835.74 1211.28 L1836.32 1211.28 L1836.91 1211.28 L1837.5 1211.28 L1838.08 1211.28 L1838.67 1211.28 L1839.26 1211.28 L1839.84 1211.28 L1840.43 1211.28 L1841.01 1211.28 L1841.6 1211.28 L1842.19 1211.28 L1842.77 1211.28 L1843.36 1211.28 L1843.95 1211.28 L1844.53 1211.28 L1845.12 1211.28 L1845.71 1211.28 L1846.29 1211.28 L1846.88 1211.28 L1847.47 1211.28 L1848.05 1211.28 L1848.64 1211.28 L1849.22 1211.28 L1849.81 1211.28 L1850.4 1211.28 L1850.98 1211.28 L1851.57 1211.28 L1852.16 1211.28 L1852.74 1211.28 L1853.33 1211.28 L1853.92 1211.28 L1854.5 1211.28 L1855.09 1211.28 L1855.68 1211.28 L1856.26 1211.28 L1856.85 1211.28 L1857.43 1211.28 L1858.02 1211.28 L1858.61 1211.28 L1859.19 1211.28 L1859.78 1211.28 L1860.37 1211.28 L1860.95 1211.28 L1861.54 1211.28 L1862.13 1211.28 L1862.71 1211.28 L1863.3 1211.28 L1863.88 1211.28 L1864.47 1211.28 L1865.06 1211.28 L1865.64 1211.28 L1866.23 1211.28 L1866.82 1211.28 L1867.4 1211.28 L1867.99 1211.28 L1868.58 1211.28 L1869.16 1211.28 L1869.75 1211.28 L1870.34 1211.28 L1870.92 1211.28 L1871.51 1211.28 L1872.09 1211.28 L1872.68 1211.28 L1873.27 1211.28 L1873.85 1211.28 L1874.44 1211.28 L1875.03 1211.28 L1875.61 1211.28 L1876.2 1211.28 L1876.79 1211.28 L1877.37 1211.28 L1877.96 1211.28 L1878.55 1211.28 L1879.13 1211.28 L1879.72 1211.28 L1880.3 1211.28 L1880.89 1211.28 L1881.48 1211.28 L1882.06 1211.28 L1882.65 1211.28 L1883.24 1211.28 L1883.82 1211.28 L1884.41 1211.28 L1885 1211.28 L1885.58 1211.28 L1886.17 1211.28 L1886.76 1211.28 L1887.34 1211.28 L1887.93 1211.28 L1888.51 1211.28 L1889.1 1211.28 L1889.69 1211.28 L1890.27 1211.28 L1890.86 1211.28 L1891.45 1211.28 L1892.03 1211.28 L1892.62 1211.28 L1893.21 1211.28 L1893.79 1211.28 L1894.38 1211.28 L1894.96 1211.28 L1895.55 1211.28 L1896.14 1211.28 L1896.72 1211.28 L1897.31 1211.28 L1897.9 1211.28 L1898.48 1211.28 L1899.07 1211.28 L1899.66 1211.28 L1900.24 1211.28 L1900.83 1211.28 L1901.42 1211.28 L1902 1211.28 L1902.59 1211.28 L1903.17 1211.28 L1903.76 1211.28 L1904.35 1211.28 L1904.93 1211.28 L1905.52 1211.28 L1906.11 1211.28 L1906.69 1211.28 L1907.28 1211.28 L1907.87 1211.28 L1908.45 1211.28 L1909.04 1211.28 L1909.63 1211.28 L1910.21 1211.28 L1910.8 1211.28 L1911.38 1211.28 L1911.97 1211.28 L1912.56 1211.28 L1913.14 1211.28 L1913.73 1211.28 L1914.32 1211.28 L1914.9 1211.28 L1915.49 1211.28 L1916.08 1211.28 L1916.66 1211.28 L1917.25 1211.28 L1917.83 1211.28 L1918.42 1211.28 L1919.01 1211.28 L1919.59 1211.28 L1920.18 1211.28 L1920.77 1211.28 L1921.35 1211.28 L1921.94 1211.28 L1922.53 1211.28 L1923.11 1211.28 L1923.7 1211.28 L1924.29 1211.28 L1924.87 1211.28 L1925.46 1211.28 L1926.04 1211.28 L1926.63 1211.28 L1927.22 1211.28 L1927.8 1211.28 L1928.39 1211.28 L1928.98 1211.28 L1929.56 1211.28 L1930.15 1211.28 L1930.74 1211.28 L1931.32 1211.28 L1931.91 1211.28 L1932.5 1211.28 L1933.08 1211.28 L1933.67 1211.28 L1934.25 1211.28 L1934.84 1211.28 L1935.43 1211.28 L1936.01 1211.28 L1936.6 1211.28 L1937.19 1211.28 L1937.77 1211.28 L1938.36 1211.28 L1938.95 1211.28 L1939.53 1211.28 L1940.12 1211.28 L1940.71 1211.28 L1941.29 1211.28 L1941.88 1211.28 L1942.46 1211.28 L1943.05 1211.28 L1943.64 1211.28 L1944.22 1211.28 L1944.81 1211.28 L1945.4 1211.28 L1945.98 1211.28 L1946.57 1211.28 L1947.16 1211.28 L1947.74 1211.28 L1948.33 1211.28 L1948.91 1211.28 L1949.5 1211.28 L1950.09 1211.28 L1950.67 1211.28 L1951.26 1211.28 L1951.85 1211.28 L1952.43 1211.28 L1953.02 1211.28 L1953.61 1211.28 L1954.19 1211.28 L1954.78 1211.28 L1955.37 1211.28 L1955.95 1211.28 L1956.54 1211.28 L1957.12 1211.28 L1957.71 1211.28 L1958.3 1211.28 L1958.88 1211.28 L1959.47 1211.28 L1960.06 1211.28 L1960.64 1211.28 L1961.23 1211.28 L1961.82 1211.28 L1962.4 1211.28 L1962.99 1211.28 L1963.58 1211.28 L1964.16 1211.28 L1964.75 1211.28 L1965.33 1211.28 L1965.92 1211.28 L1966.51 1211.28 L1967.09 1211.28 L1967.68 1211.28 L1968.27 1211.28 L1968.85 1211.28 L1969.44 1211.28 L1970.03 1211.28 L1970.61 1211.28 L1971.2 1211.28 L1971.78 1211.28 L1972.37 1211.28 L1972.96 1211.28 L1973.54 1211.28 L1974.13 1211.28 L1974.72 1211.28 L1975.3 1211.28 L1975.89 1211.28 L1976.48 1211.28 L1977.06 1211.28 L1977.65 1211.28 L1978.24 1211.28 L1978.82 1211.28 L1979.41 1211.28 L1979.99 1211.28 L1980.58 1211.28 L1981.17 1211.28 L1981.75 1211.28 L1982.34 1211.28 L1982.93 1211.28 L1983.51 1211.28 L1984.1 1211.28 L1984.69 1211.28 L1985.27 1211.28 L1985.86 1211.28 L1986.45 1211.28 L1987.03 1211.28 L1987.62 1211.28 L1988.2 1211.28 L1988.79 1211.28 L1989.38 1211.28 L1989.96 1211.28 L1990.55 1211.28 L1991.14 1211.28 L1991.72 1211.28 L1992.31 1211.28 L1992.9 1211.28 L1993.48 1211.28 L1994.07 1211.28 L1994.65 1211.28 L1995.24 1211.28 L1995.83 1211.28 L1996.41 1211.28 L1997 1211.28 L1997.59 1211.28 L1998.17 1211.28 L1998.76 1211.28 L1999.35 1211.28 L1999.93 1211.28 L2000.52 1211.28 L2001.11 1211.28 L2001.69 1211.28 L2002.28 1211.28 L2002.86 1211.28 L2003.45 1211.28 L2004.04 1211.28 L2004.62 1211.28 L2005.21 1211.28 L2005.8 1211.28 L2006.38 1211.28 L2006.97 1211.28 L2007.56 1211.28 L2008.14 1211.28 L2008.73 1211.28 L2009.32 1211.28 L2009.9 1211.28 L2010.49 1211.28 L2011.07 1211.28 L2011.66 1211.28 L2012.25 1211.28 L2012.83 1211.28 L2013.42 1211.28 L2014.01 1211.28 L2014.59 1211.28 L2015.18 1211.28 L2015.77 1211.28 L2016.35 1211.28 L2016.94 1211.28 L2017.53 1211.28 L2018.11 1211.28 L2018.7 1211.28 L2019.28 1211.28 L2019.87 1211.28 L2020.46 1211.28 L2021.04 1211.28 L2021.63 1211.28 L2022.22 1211.28 L2022.8 1211.28 L2023.39 1211.28 L2023.98 1211.28 L2024.56 1211.28 L2025.15 1211.28 L2025.73 1211.28 L2026.32 1211.28 L2026.91 1211.28 L2027.49 1211.28 L2028.08 1211.28 L2028.67 1211.28 L2029.25 1211.28 L2029.84 1211.28 L2030.43 1211.28 L2031.01 1211.28 L2031.6 1211.28 L2032.19 1211.28 L2032.77 1211.28 L2033.36 1211.28 L2033.94 1211.28 L2034.53 1211.28 L2035.12 1211.28 L2035.7 1211.28 L2036.29 1211.28 L2036.88 1211.28 L2037.46 1211.28 L2038.05 1211.28 L2038.64 1211.28 L2039.22 1211.28 L2039.81 1211.28 L2040.4 1211.28 L2040.98 1211.28 L2041.57 1211.28 L2042.15 1211.28 L2042.74 1211.28 L2043.33 1211.28 L2043.91 1211.28 L2044.5 1211.28 L2045.09 1211.28 L2045.67 1211.28 L2046.26 1211.28 L2046.85 1211.28 L2047.43 1211.28 L2048.02 1211.28 L2048.6 1211.28 L2049.19 1211.28 L2049.78 1211.28 L2050.36 1211.28 L2050.95 1211.28 L2051.54 1211.28 L2052.12 1211.28 L2052.71 1211.28 L2053.3 1211.28 L2053.88 1211.28 L2054.47 1211.28 L2055.06 1211.28 L2055.64 1211.28 L2056.23 1211.28 L2056.81 1211.28 L2057.4 1211.28 L2057.99 1211.28 L2058.57 1211.28 L2059.16 1211.28 L2059.75 1211.28 L2060.33 1211.28 L2060.92 1211.28 L2061.51 1211.28 L2062.09 1211.28 L2062.68 1211.28 L2063.27 1211.28 L2063.85 1211.28 L2064.44 1211.28 L2065.02 1211.28 L2065.61 1211.28 L2066.2 1211.28 L2066.78 1211.28 L2067.37 1211.28 L2067.96 1211.28 L2068.54 1211.28 L2069.13 1211.28 L2069.72 1211.28 L2070.3 1211.28 L2070.89 1211.28 L2071.48 1211.28 L2072.06 1211.28 L2072.65 1211.28 L2073.23 1211.28 L2073.82 1211.28 L2074.41 1211.28 L2074.99 1211.28 L2075.58 1211.28 L2076.17 1211.28 L2076.75 1211.28 L2077.34 1211.28 L2077.93 1211.28 L2078.51 1211.28 L2079.1 1211.28 L2079.68 1211.28 L2080.27 1211.28 L2080.86 1211.28 L2081.44 1211.28 L2082.03 1211.28 L2082.62 1211.28 L2083.2 1211.28 L2083.79 1211.28 L2084.38 1211.28 L2084.96 1211.28 L2085.55 1211.28 L2086.14 1211.28 L2086.72 1211.28 L2087.31 1211.28 L2087.89 1211.28 L2088.48 1211.28 L2089.07 1211.28 L2089.65 1211.28 L2090.24 1211.28 L2090.83 1211.28 L2091.41 1211.28 L2092 1211.28 L2092.59 1211.28 L2093.17 1211.28 L2093.76 1211.28 L2094.35 1211.28 L2094.93 1211.28 L2095.52 1211.28 L2096.1 1211.28 L2096.69 1211.28 L2097.28 1211.28 L2097.86 1211.28 L2098.45 1211.28 L2099.04 1211.28 L2099.62 1211.28 L2100.21 1211.28 L2100.8 1211.28 L2101.38 1211.28 L2101.97 1211.28 L2102.55 1211.28 L2103.14 1211.28 L2103.73 1211.28 L2104.31 1211.28 L2104.9 1211.28 L2105.49 1211.28 L2106.07 1211.28 L2106.66 1211.28 L2107.25 1211.28 L2107.83 1211.28 L2108.42 1211.28 L2109.01 1211.28 L2109.59 1211.28 L2110.18 1211.28 L2110.76 1211.28 L2111.35 1211.28 L2111.94 1211.28 L2112.52 1211.28 L2113.11 1211.28 L2113.7 1211.28 L2114.28 1211.28 L2114.87 1211.28 L2115.46 1211.28 L2116.04 1211.28 L2116.63 1211.28 L2117.22 1211.28 L2117.8 1211.28 L2118.39 1211.28 L2118.97 1211.28 L2119.56 1211.28 L2120.15 1211.28 L2120.73 1211.28 L2121.32 1211.28 L2121.91 1211.28 L2122.49 1211.28 L2123.08 1211.28 L2123.67 1211.28 L2124.25 1211.28 L2124.84 1211.28 L2125.42 1211.28 L2126.01 1211.28 L2126.6 1211.28 L2127.18 1211.28 L2127.77 1211.28 L2128.36 1211.28 L2128.94 1211.28 L2129.53 1211.28 L2130.12 1211.28 L2130.7 1211.28 L2131.29 1211.28 L2131.88 1211.28 L2132.46 1211.28 L2133.05 1211.28 L2133.63 1211.28 L2134.22 1211.28 L2134.81 1211.28 L2135.39 1211.28 L2135.98 1211.28 L2136.57 1211.28 L2137.15 1211.28 L2137.74 1211.28 L2138.33 1211.28 L2138.91 1211.28 L2139.5 1211.28 L2140.09 1211.28 L2140.67 1211.28 L2141.26 1211.28 L2141.84 1211.28 L2142.43 1211.28 L2143.02 1211.28 L2143.6 1211.28 L2144.19 1211.28 L2144.78 1211.28 L2145.36 1211.28 L2145.95 1211.28 L2146.54 1211.28 L2147.12 1211.28 L2147.71 1211.28 L2148.3 1211.28 L2148.88 1211.28 L2149.47 1211.28 L2150.05 1211.28 L2150.64 1211.28 L2151.23 1211.28 L2151.81 1211.28 L2152.4 1211.28 L2152.99 1211.28 L2153.57 1211.28 L2154.16 1211.28 L2154.75 1211.28 L2155.33 1211.28 L2155.92 1211.28 L2156.5 1211.28 L2157.09 1211.28 L2157.68 1211.28 L2158.26 1211.28 L2158.26 1210.66 L2157.68 1210.66 L2157.09 1210.66 L2156.5 1210.66 L2155.92 1210.66 L2155.33 1210.66 L2154.75 1210.66 L2154.16 1210.66 L2153.57 1210.66 L2152.99 1210.66 L2152.4 1210.66 L2151.81 1210.66 L2151.23 1210.66 L2150.64 1210.66 L2150.05 1210.66 L2149.47 1210.66 L2148.88 1210.66 L2148.3 1210.66 L2147.71 1210.66 L2147.12 1210.66 L2146.54 1210.66 L2145.95 1210.66 L2145.36 1210.66 L2144.78 1210.66 L2144.19 1210.66 L2143.6 1210.66 L2143.02 1210.66 L2142.43 1210.66 L2141.84 1210.66 L2141.26 1210.66 L2140.67 1210.66 L2140.09 1210.66 L2139.5 1210.66 L2138.91 1210.66 L2138.33 1210.66 L2137.74 1210.66 L2137.15 1210.66 L2136.57 1210.66 L2135.98 1210.66 L2135.39 1210.66 L2134.81 1210.66 L2134.22 1210.66 L2133.63 1210.66 L2133.05 1210.66 L2132.46 1210.66 L2131.88 1210.66 L2131.29 1210.66 L2130.7 1210.66 L2130.12 1210.66 L2129.53 1210.66 L2128.94 1210.66 L2128.36 1210.66 L2127.77 1210.66 L2127.18 1210.66 L2126.6 1210.66 L2126.01 1210.66 L2125.42 1210.66 L2124.84 1210.66 L2124.25 1210.66 L2123.67 1210.66 L2123.08 1210.66 L2122.49 1210.66 L2121.91 1210.66 L2121.32 1210.66 L2120.73 1210.66 L2120.15 1210.66 L2119.56 1210.66 L2118.97 1210.66 L2118.39 1210.66 L2117.8 1210.66 L2117.22 1210.66 L2116.63 1210.66 L2116.04 1210.66 L2115.46 1210.66 L2114.87 1210.66 L2114.28 1210.66 L2113.7 1210.66 L2113.11 1210.66 L2112.52 1210.66 L2111.94 1210.66 L2111.35 1210.66 L2110.76 1210.66 L2110.18 1210.66 L2109.59 1210.66 L2109.01 1210.66 L2108.42 1210.66 L2107.83 1210.66 L2107.25 1210.66 L2106.66 1210.66 L2106.07 1210.66 L2105.49 1210.66 L2104.9 1210.66 L2104.31 1210.66 L2103.73 1210.66 L2103.14 1210.66 L2102.55 1210.66 L2101.97 1210.66 L2101.38 1210.66 L2100.8 1210.66 L2100.21 1210.66 L2099.62 1210.66 L2099.04 1210.66 L2098.45 1210.66 L2097.86 1210.66 L2097.28 1210.66 L2096.69 1210.66 L2096.1 1210.66 L2095.52 1210.66 L2094.93 1210.66 L2094.35 1210.66 L2093.76 1210.66 L2093.17 1210.66 L2092.59 1210.66 L2092 1210.66 L2091.41 1210.66 L2090.83 1210.66 L2090.24 1210.66 L2089.65 1210.66 L2089.07 1210.66 L2088.48 1210.66 L2087.89 1210.66 L2087.31 1210.66 L2086.72 1210.66 L2086.14 1210.66 L2085.55 1210.66 L2084.96 1210.66 L2084.38 1210.66 L2083.79 1210.66 L2083.2 1210.66 L2082.62 1210.66 L2082.03 1210.66 L2081.44 1210.66 L2080.86 1210.66 L2080.27 1210.66 L2079.68 1210.66 L2079.1 1210.66 L2078.51 1210.66 L2077.93 1210.66 L2077.34 1210.66 L2076.75 1210.66 L2076.17 1210.66 L2075.58 1210.66 L2074.99 1210.66 L2074.41 1210.66 L2073.82 1210.66 L2073.23 1210.66 L2072.65 1210.66 L2072.06 1210.66 L2071.48 1210.66 L2070.89 1210.66 L2070.3 1210.66 L2069.72 1210.66 L2069.13 1210.66 L2068.54 1210.66 L2067.96 1210.66 L2067.37 1210.66 L2066.78 1210.66 L2066.2 1210.66 L2065.61 1210.66 L2065.02 1210.66 L2064.44 1210.66 L2063.85 1210.66 L2063.27 1210.66 L2062.68 1210.66 L2062.09 1210.66 L2061.51 1210.66 L2060.92 1210.66 L2060.33 1210.66 L2059.75 1210.66 L2059.16 1210.66 L2058.57 1210.66 L2057.99 1210.66 L2057.4 1210.66 L2056.81 1210.66 L2056.23 1210.66 L2055.64 1210.66 L2055.06 1210.66 L2054.47 1210.66 L2053.88 1210.66 L2053.3 1210.66 L2052.71 1210.66 L2052.12 1210.66 L2051.54 1210.66 L2050.95 1210.66 L2050.36 1210.66 L2049.78 1210.66 L2049.19 1210.66 L2048.6 1210.66 L2048.02 1210.66 L2047.43 1210.66 L2046.85 1210.66 L2046.26 1210.66 L2045.67 1210.66 L2045.09 1210.66 L2044.5 1210.66 L2043.91 1210.66 L2043.33 1210.66 L2042.74 1210.66 L2042.15 1210.66 L2041.57 1210.66 L2040.98 1210.66 L2040.4 1210.66 L2039.81 1210.66 L2039.22 1210.66 L2038.64 1210.66 L2038.05 1210.66 L2037.46 1210.66 L2036.88 1210.66 L2036.29 1210.66 L2035.7 1210.66 L2035.12 1210.66 L2034.53 1210.66 L2033.94 1210.66 L2033.36 1210.66 L2032.77 1210.66 L2032.19 1210.66 L2031.6 1210.66 L2031.01 1210.66 L2030.43 1210.66 L2029.84 1210.66 L2029.25 1210.66 L2028.67 1210.66 L2028.08 1210.66 L2027.49 1210.66 L2026.91 1210.66 L2026.32 1210.66 L2025.73 1210.66 L2025.15 1210.66 L2024.56 1210.66 L2023.98 1210.66 L2023.39 1210.66 L2022.8 1210.66 L2022.22 1210.66 L2021.63 1210.66 L2021.04 1210.66 L2020.46 1210.66 L2019.87 1210.66 L2019.28 1210.66 L2018.7 1210.66 L2018.11 1210.66 L2017.53 1210.66 L2016.94 1210.66 L2016.35 1210.66 L2015.77 1210.66 L2015.18 1210.66 L2014.59 1210.66 L2014.01 1210.66 L2013.42 1210.66 L2012.83 1210.66 L2012.25 1210.66 L2011.66 1210.66 L2011.07 1210.66 L2010.49 1210.66 L2009.9 1210.66 L2009.32 1210.66 L2008.73 1210.66 L2008.14 1210.66 L2007.56 1210.66 L2006.97 1210.66 L2006.38 1210.66 L2005.8 1210.66 L2005.21 1210.66 L2004.62 1210.66 L2004.04 1210.66 L2003.45 1210.66 L2002.86 1210.66 L2002.28 1210.66 L2001.69 1210.66 L2001.11 1210.66 L2000.52 1210.66 L1999.93 1210.66 L1999.35 1210.66 L1998.76 1210.66 L1998.17 1210.66 L1997.59 1210.66 L1997 1210.66 L1996.41 1210.66 L1995.83 1210.66 L1995.24 1210.66 L1994.65 1210.66 L1994.07 1210.66 L1993.48 1210.66 L1992.9 1210.66 L1992.31 1210.66 L1991.72 1210.66 L1991.14 1210.66 L1990.55 1210.66 L1989.96 1210.66 L1989.38 1210.66 L1988.79 1210.66 L1988.2 1210.66 L1987.62 1210.66 L1987.03 1210.66 L1986.45 1210.66 L1985.86 1210.66 L1985.27 1210.66 L1984.69 1210.66 L1984.1 1210.66 L1983.51 1210.66 L1982.93 1210.66 L1982.34 1210.66 L1981.75 1210.66 L1981.17 1210.66 L1980.58 1210.66 L1979.99 1210.66 L1979.41 1210.66 L1978.82 1210.66 L1978.24 1210.66 L1977.65 1210.66 L1977.06 1210.66 L1976.48 1210.66 L1975.89 1210.66 L1975.3 1210.66 L1974.72 1210.66 L1974.13 1210.66 L1973.54 1210.66 L1972.96 1210.66 L1972.37 1210.66 L1971.78 1210.66 L1971.2 1210.66 L1970.61 1210.66 L1970.03 1210.66 L1969.44 1210.66 L1968.85 1210.66 L1968.27 1210.66 L1967.68 1210.66 L1967.09 1210.66 L1966.51 1210.66 L1965.92 1210.66 L1965.33 1210.66 L1964.75 1210.66 L1964.16 1210.66 L1963.58 1210.66 L1962.99 1210.66 L1962.4 1210.66 L1961.82 1210.66 L1961.23 1210.66 L1960.64 1210.66 L1960.06 1210.66 L1959.47 1210.66 L1958.88 1210.66 L1958.3 1210.66 L1957.71 1210.66 L1957.12 1210.66 L1956.54 1210.66 L1955.95 1210.66 L1955.37 1210.66 L1954.78 1210.66 L1954.19 1210.66 L1953.61 1210.66 L1953.02 1210.66 L1952.43 1210.66 L1951.85 1210.66 L1951.26 1210.66 L1950.67 1210.66 L1950.09 1210.66 L1949.5 1210.66 L1948.91 1210.66 L1948.33 1210.66 L1947.74 1210.66 L1947.16 1210.66 L1946.57 1210.66 L1945.98 1210.66 L1945.4 1210.66 L1944.81 1210.66 L1944.22 1210.66 L1943.64 1210.66 L1943.05 1210.66 L1942.46 1210.66 L1941.88 1210.66 L1941.29 1210.66 L1940.71 1210.66 L1940.12 1210.66 L1939.53 1210.66 L1938.95 1210.66 L1938.36 1210.66 L1937.77 1210.66 L1937.19 1210.66 L1936.6 1210.66 L1936.01 1210.66 L1935.43 1210.66 L1934.84 1210.66 L1934.25 1210.66 L1933.67 1210.66 L1933.08 1210.66 L1932.5 1210.66 L1931.91 1210.66 L1931.32 1210.66 L1930.74 1210.66 L1930.15 1210.66 L1929.56 1210.66 L1928.98 1210.66 L1928.39 1210.66 L1927.8 1210.66 L1927.22 1210.66 L1926.63 1210.66 L1926.04 1210.66 L1925.46 1210.66 L1924.87 1210.66 L1924.29 1210.66 L1923.7 1210.66 L1923.11 1210.66 L1922.53 1210.66 L1921.94 1210.66 L1921.35 1210.66 L1920.77 1210.66 L1920.18 1210.66 L1919.59 1210.66 L1919.01 1210.66 L1918.42 1210.66 L1917.83 1210.66 L1917.25 1210.66 L1916.66 1210.66 L1916.08 1210.66 L1915.49 1210.66 L1914.9 1210.66 L1914.32 1210.66 L1913.73 1210.66 L1913.14 1210.66 L1912.56 1210.66 L1911.97 1210.66 L1911.38 1210.66 L1910.8 1210.66 L1910.21 1210.66 L1909.63 1210.66 L1909.04 1210.66 L1908.45 1210.66 L1907.87 1210.66 L1907.28 1210.66 L1906.69 1210.66 L1906.11 1210.66 L1905.52 1210.66 L1904.93 1210.66 L1904.35 1210.66 L1903.76 1210.66 L1903.17 1210.66 L1902.59 1210.66 L1902 1210.66 L1901.42 1210.66 L1900.83 1210.66 L1900.24 1210.66 L1899.66 1210.66 L1899.07 1210.66 L1898.48 1210.66 L1897.9 1210.66 L1897.31 1210.66 L1896.72 1210.66 L1896.14 1210.66 L1895.55 1210.66 L1894.96 1210.66 L1894.38 1210.66 L1893.79 1210.66 L1893.21 1210.66 L1892.62 1210.66 L1892.03 1210.66 L1891.45 1210.66 L1890.86 1210.66 L1890.27 1210.66 L1889.69 1210.66 L1889.1 1210.66 L1888.51 1210.66 L1887.93 1210.66 L1887.34 1210.66 L1886.76 1210.66 L1886.17 1210.66 L1885.58 1210.66 L1885 1210.66 L1884.41 1210.66 L1883.82 1210.66 L1883.24 1210.66 L1882.65 1210.66 L1882.06 1210.66 L1881.48 1210.66 L1880.89 1210.66 L1880.3 1210.66 L1879.72 1210.66 L1879.13 1210.66 L1878.55 1210.66 L1877.96 1210.66 L1877.37 1210.66 L1876.79 1210.66 L1876.2 1210.66 L1875.61 1210.66 L1875.03 1210.66 L1874.44 1210.66 L1873.85 1210.66 L1873.27 1210.66 L1872.68 1210.66 L1872.09 1210.66 L1871.51 1210.66 L1870.92 1210.66 L1870.34 1210.66 L1869.75 1210.66 L1869.16 1210.66 L1868.58 1210.66 L1867.99 1210.66 L1867.4 1210.66 L1866.82 1210.66 L1866.23 1210.66 L1865.64 1210.66 L1865.06 1210.66 L1864.47 1210.66 L1863.88 1210.66 L1863.3 1210.66 L1862.71 1210.66 L1862.13 1210.66 L1861.54 1210.66 L1860.95 1210.66 L1860.37 1210.66 L1859.78 1210.66 L1859.19 1210.66 L1858.61 1210.66 L1858.02 1210.66 L1857.43 1210.66 L1856.85 1210.66 L1856.26 1210.66 L1855.68 1210.66 L1855.09 1210.66 L1854.5 1210.66 L1853.92 1210.66 L1853.33 1210.66 L1852.74 1210.66 L1852.16 1210.66 L1851.57 1210.66 L1850.98 1210.66 L1850.4 1210.66 L1849.81 1210.66 L1849.22 1210.66 L1848.64 1210.66 L1848.05 1210.66 L1847.47 1210.66 L1846.88 1210.66 L1846.29 1210.66 L1845.71 1210.66 L1845.12 1210.66 L1844.53 1210.66 L1843.95 1210.66 L1843.36 1210.66 L1842.77 1210.66 L1842.19 1210.66 L1841.6 1210.66 L1841.01 1210.66 L1840.43 1210.66 L1839.84 1210.66 L1839.26 1210.66 L1838.67 1210.66 L1838.08 1210.66 L1837.5 1210.66 L1836.91 1210.66 L1836.32 1210.66 L1835.74 1210.66 L1835.15 1210.66 L1834.56 1210.66 L1833.98 1210.66 L1833.39 1210.66 L1832.81 1210.66 L1832.22 1210.66 L1831.63 1210.66 L1831.05 1210.66 L1830.46 1210.66 L1829.87 1210.66 L1829.29 1210.66 L1828.7 1210.66 L1828.11 1210.66 L1827.53 1210.66 L1826.94 1210.66 L1826.35 1210.66 L1825.77 1210.66 L1825.18 1210.66 L1824.6 1210.66 L1824.01 1210.66 L1823.42 1210.66 L1822.84 1210.66 L1822.25 1210.66 L1821.66 1210.66 L1821.08 1210.66 L1820.49 1210.66 L1819.9 1210.66 L1819.32 1210.66 L1818.73 1210.66 L1818.14 1210.66 L1817.56 1210.66 L1816.97 1210.66 L1816.39 1210.66 L1815.8 1210.66 L1815.21 1210.66 L1814.63 1210.66 L1814.04 1210.66 L1813.45 1210.66 L1812.87 1210.66 L1812.28 1210.66 L1811.69 1210.66 L1811.11 1210.66 L1810.52 1210.66 L1809.94 1210.66 L1809.35 1210.66 L1808.76 1210.66 L1808.18 1210.66 L1807.59 1210.66 L1807 1210.66 L1806.42 1210.66 L1805.83 1210.66 L1805.24 1210.66 L1804.66 1210.66 L1804.07 1210.66 L1803.48 1210.66 L1802.9 1210.66 L1802.31 1210.66 L1801.73 1210.66 L1801.14 1210.66 L1800.55 1210.66 L1799.97 1210.66 L1799.38 1210.66 L1798.79 1210.66 L1798.21 1210.66 L1797.62 1210.66 L1797.03 1210.66 L1796.45 1210.66 L1795.86 1210.66 L1795.27 1210.66 L1794.69 1210.66 L1794.1 1210.66 L1793.52 1210.66 L1792.93 1210.66 L1792.34 1210.66 L1791.76 1210.66 L1791.17 1210.66 L1790.58 1210.66 L1790 1210.66 L1789.41 1210.66 L1788.82 1210.66 L1788.24 1210.66 L1787.65 1210.66 L1787.06 1210.66 L1786.48 1210.66 L1785.89 1210.66 L1785.31 1210.66 L1784.72 1210.66 L1784.13 1210.66 L1783.55 1210.66 L1782.96 1210.66 L1782.37 1210.66 L1781.79 1210.66 L1781.2 1210.66 L1780.61 1210.66 L1780.03 1210.66 L1779.44 1210.66 L1778.86 1210.66 L1778.27 1210.66 L1777.68 1210.66 L1777.1 1210.66 L1776.51 1210.66 L1775.92 1210.66 L1775.34 1210.66 L1774.75 1210.66 L1774.16 1210.66 L1773.58 1210.66 L1772.99 1210.66 L1772.4 1210.66 L1771.82 1210.66 L1771.23 1210.66 L1770.65 1210.66 L1770.06 1210.66 L1769.47 1210.66 L1768.89 1210.66 L1768.3 1210.66 L1767.71 1210.66 L1767.13 1210.66 L1766.54 1210.66 L1765.95 1210.66 L1765.37 1210.66 L1764.78 1210.66 L1764.19 1210.66 L1763.61 1210.66 L1763.02 1210.66 L1762.44 1210.66 L1761.85 1210.66 L1761.26 1210.66 L1760.68 1210.66 L1760.09 1210.66 L1759.5 1210.66 L1758.92 1210.66 L1758.33 1210.66 L1757.74 1210.66 L1757.16 1210.66 L1756.57 1210.66 L1755.99 1210.66 L1755.4 1210.66 L1754.81 1210.66 L1754.23 1210.66 L1753.64 1210.66 L1753.05 1210.66 L1752.47 1210.66 L1751.88 1210.66 L1751.29 1210.66 L1750.71 1210.66 L1750.12 1210.66 L1749.53 1210.66 L1748.95 1210.66 L1748.36 1210.66 L1747.78 1210.66 L1747.19 1210.66 L1746.6 1210.66 L1746.02 1210.66 L1745.43 1210.66 L1744.84 1210.66 L1744.26 1210.66 L1743.67 1210.66 L1743.08 1210.66 L1742.5 1210.66 L1741.91 1210.66 L1741.32 1210.66 L1740.74 1210.66 L1740.15 1210.66 L1739.57 1210.66 L1738.98 1210.66 L1738.39 1210.66 L1737.81 1210.66 L1737.22 1210.66 L1736.63 1210.66 L1736.05 1210.66 L1735.46 1210.66 L1734.87 1210.66 L1734.29 1210.66 L1733.7 1210.66 L1733.11 1210.66 L1732.53 1210.66 L1731.94 1210.66 L1731.36 1210.66 L1730.77 1210.66 L1730.18 1210.66 L1729.6 1210.66 L1729.01 1210.66 L1728.42 1210.66 L1727.84 1210.66 L1727.25 1210.66 L1726.66 1210.66 L1726.08 1210.66 L1725.49 1210.66 L1724.91 1210.66 L1724.32 1210.66 L1723.73 1210.66 L1723.15 1210.66 L1722.56 1210.66 L1721.97 1210.66 L1721.39 1210.66 L1720.8 1210.66 L1720.21 1210.66 L1719.63 1210.66 L1719.04 1210.66 L1718.45 1210.66 L1717.87 1210.66 L1717.28 1210.66 L1716.7 1210.66 L1716.11 1210.66 L1715.52 1210.66 L1714.94 1210.66 L1714.35 1210.66 L1713.76 1210.66 L1713.18 1210.66 L1712.59 1210.66 L1712 1210.66 L1711.42 1210.66 L1710.83 1210.66 L1710.24 1210.66 L1709.66 1210.66 L1709.07 1210.66 L1708.49 1210.66 L1707.9 1210.66 L1707.31 1210.66 L1706.73 1210.66 L1706.14 1210.66 L1705.55 1210.66 L1704.97 1210.66 L1704.38 1210.66 L1703.79 1210.66 L1703.21 1210.66 L1702.62 1210.66 L1702.04 1210.66 L1701.45 1210.66 L1700.86 1210.66 L1700.28 1210.66 L1699.69 1210.66 L1699.1 1210.66 L1698.52 1210.66 L1697.93 1210.66 L1697.34 1210.66 L1696.76 1210.66 L1696.17 1210.66 L1695.58 1210.66 L1695 1210.66 L1694.41 1210.66 L1693.83 1210.66 L1693.24 1210.66 L1692.65 1210.66 L1692.07 1210.66 L1691.48 1210.66 L1690.89 1210.66 L1690.31 1210.66 L1689.72 1210.66 L1689.13 1210.66 L1688.55 1210.66 L1687.96 1210.66 L1687.37 1210.66 L1686.79 1210.66 L1686.2 1210.66 L1685.62 1210.66 L1685.03 1210.66 L1684.44 1210.66 L1683.86 1210.66 L1683.27 1210.66 L1682.68 1210.66 L1682.1 1210.66 L1681.51 1210.66 L1680.92 1210.66 L1680.34 1210.66 L1679.75 1210.66 L1679.17 1210.66 L1678.58 1210.66 L1677.99 1210.66 L1677.41 1210.66 L1676.82 1210.66 L1676.23 1210.66 L1675.65 1210.66 L1675.06 1210.66 L1674.47 1210.66 L1673.89 1210.66 L1673.3 1210.66 L1672.71 1210.66 L1672.13 1210.66 L1671.54 1210.66 L1670.96 1210.66 L1670.37 1210.66 L1669.78 1210.66 L1669.2 1210.66 L1668.61 1210.66 L1668.02 1210.66 L1667.44 1210.66 L1666.85 1210.66 L1666.26 1210.66 L1665.68 1210.66 L1665.09 1210.66 L1664.5 1210.66 L1663.92 1210.66 L1663.33 1210.66 L1662.75 1210.66 L1662.16 1210.66 L1661.57 1210.66 L1660.99 1210.66 L1660.4 1210.66 L1659.81 1210.66 L1659.23 1210.66 L1658.64 1210.66 L1658.05 1210.66 L1657.47 1210.66 L1656.88 1210.66 L1656.29 1210.66 L1655.71 1210.66 L1655.12 1210.66 L1654.54 1210.66 L1653.95 1210.66 L1653.36 1210.66 L1652.78 1210.66 L1652.19 1210.66 L1651.6 1210.66 L1651.02 1210.66 L1650.43 1210.66 L1649.84 1210.66 L1649.26 1210.66 L1648.67 1210.66 L1648.09 1210.66 L1647.5 1210.66 L1646.91 1210.66 L1646.33 1210.66 L1645.74 1210.66 L1645.15 1210.66 L1644.57 1210.66 L1643.98 1210.66 L1643.39 1210.66 L1642.81 1210.66 L1642.22 1210.66 L1641.63 1210.66 L1641.05 1210.66 L1640.46 1210.66 L1639.88 1210.66 L1639.29 1210.66 L1638.7 1210.66 L1638.12 1210.66 L1637.53 1210.66 L1636.94 1210.66 L1636.36 1210.66 L1635.77 1210.66 L1635.18 1210.66 L1634.6 1210.66 L1634.01 1210.66 L1633.42 1210.66 L1632.84 1210.66 L1632.25 1210.66 L1631.67 1210.66 L1631.08 1210.66 L1630.49 1210.66 L1629.91 1210.66 L1629.32 1210.66 L1628.73 1210.66 L1628.15 1210.66 L1627.56 1210.66 L1626.97 1210.66 L1626.39 1210.66 L1625.8 1210.66 L1625.22 1210.66 L1624.63 1210.66 L1624.04 1210.66 L1623.46 1210.66 L1622.87 1210.66 L1622.28 1210.66 L1621.7 1210.66 L1621.11 1210.66 L1620.52 1210.66 L1619.94 1210.66 L1619.35 1210.66 L1618.76 1210.66 L1618.18 1210.66 L1617.59 1210.66 L1617.01 1210.66 L1616.42 1210.66 L1615.83 1210.66 L1615.25 1210.66 L1614.66 1210.66 L1614.07 1210.66 L1613.49 1210.66 L1612.9 1210.66 L1612.31 1210.66 L1611.73 1210.66 L1611.14 1210.66 L1610.55 1210.66 L1609.97 1210.66 L1609.38 1210.66 L1608.8 1210.66 L1608.21 1210.66 L1607.62 1210.66 L1607.04 1210.66 L1606.45 1210.66 L1605.86 1210.66 L1605.28 1210.66 L1604.69 1210.66 L1604.1 1210.66 L1603.52 1210.66 L1602.93 1210.66 L1602.34 1210.66 L1601.76 1210.66 L1601.17 1210.66 L1600.59 1210.66 L1600 1210.66 L1599.41 1210.66 L1598.83 1210.66 L1598.24 1210.66 L1597.65 1210.66 L1597.07 1210.66 L1596.48 1210.66 L1595.89 1210.66 L1595.31 1210.66 L1594.72 1210.66 L1594.14 1210.66 L1593.55 1210.66 L1592.96 1210.66 L1592.38 1210.66 L1591.79 1210.66 L1591.2 1210.66 L1590.62 1210.66 L1590.03 1210.66 L1589.44 1210.66 L1588.86 1210.66 L1588.27 1210.66 L1587.68 1210.66 L1587.1 1210.66 L1586.51 1210.66 L1585.93 1210.66 L1585.34 1210.66 L1584.75 1210.66 L1584.17 1210.66 L1583.58 1210.66 L1582.99 1210.66 L1582.41 1210.66 L1581.82 1210.66 L1581.23 1210.66 L1580.65 1210.66 L1580.06 1210.66 L1579.47 1210.66 L1578.89 1210.66 L1578.3 1210.66 L1577.72 1210.66 L1577.13 1210.66 L1576.54 1210.66 L1575.96 1210.66 L1575.37 1210.66 L1574.78 1210.66 L1574.2 1210.66 L1573.61 1210.66 L1573.02 1210.66 L1572.44 1210.66 L1571.85 1210.66 L1571.27 1210.66 L1570.68 1210.66 L1570.09 1210.66 L1569.51 1210.66 L1568.92 1210.66 L1568.33 1210.66 L1567.75 1210.66 L1567.16 1210.66 L1566.57 1210.66 L1565.99 1210.66 L1565.4 1210.66 L1564.81 1210.66 L1564.23 1210.66 L1563.64 1210.66 L1563.06 1210.66 L1562.47 1210.66 L1561.88 1210.66 L1561.3 1210.66 L1560.71 1210.66 L1560.12 1210.66 L1559.54 1210.66 L1558.95 1210.66 L1558.36 1210.66 L1557.78 1210.66 L1557.19 1210.66 L1556.6 1210.66 L1556.02 1210.66 L1555.43 1210.66 L1554.85 1210.66 L1554.26 1210.66 L1553.67 1210.66 L1553.09 1210.66 L1552.5 1210.66 L1551.91 1210.66 L1551.33 1210.66 L1550.74 1210.66 L1550.15 1210.66 L1549.57 1210.66 L1548.98 1210.66 L1548.4 1210.66 L1547.81 1210.66 L1547.22 1210.66 L1546.64 1210.66 L1546.05 1210.66 L1545.46 1210.66 L1544.88 1210.66 L1544.29 1210.66 L1543.7 1210.66 L1543.12 1210.66 L1542.53 1210.66 L1541.94 1210.66 L1541.36 1210.66 L1540.77 1210.66 L1540.19 1210.66 L1539.6 1210.66 L1539.01 1210.66 L1538.43 1210.66 L1537.84 1210.66 L1537.25 1210.66 L1536.67 1210.66 L1536.08 1210.66 L1535.49 1210.66 L1534.91 1210.66 L1534.32 1210.66 L1533.73 1210.66 L1533.15 1210.66 L1532.56 1210.66 L1531.98 1210.66 L1531.39 1210.66 L1530.8 1210.66 L1530.22 1210.66 L1529.63 1210.66 L1529.04 1210.66 L1528.46 1210.66 L1527.87 1210.66 L1527.28 1210.66 L1526.7 1210.66 L1526.11 1210.66 L1525.52 1210.66 L1524.94 1210.66 L1524.35 1210.66 L1523.77 1210.66 L1523.18 1210.66 L1522.59 1210.66 L1522.01 1210.66 L1521.42 1210.66 L1520.83 1210.66 L1520.25 1210.66 L1519.66 1210.66 L1519.07 1210.66 L1518.49 1210.66 L1517.9 1210.66 L1517.32 1210.66 L1516.73 1210.66 L1516.14 1210.66 L1515.56 1210.66 L1514.97 1210.66 L1514.38 1210.66 L1513.8 1210.66 L1513.21 1210.66 L1512.62 1210.66 L1512.04 1210.66 L1511.45 1210.66 L1510.86 1210.66 L1510.28 1210.66 L1509.69 1210.66 L1509.11 1210.66 L1508.52 1210.66 L1507.93 1210.66 L1507.35 1210.66 L1506.76 1210.66 L1506.17 1210.66 L1505.59 1210.66 L1505 1210.66 L1504.41 1210.66 L1503.83 1210.66 L1503.24 1210.66 L1502.65 1210.66 L1502.07 1210.66 L1501.48 1210.66 L1500.9 1210.66 L1500.31 1210.66 L1499.72 1210.66 L1499.14 1210.66 L1498.55 1210.66 L1497.96 1210.66 L1497.38 1210.66 L1496.79 1210.66 L1496.2 1210.66 L1495.62 1210.66 L1495.03 1210.66 L1494.45 1210.66 L1493.86 1210.66 L1493.27 1210.66 L1492.69 1210.66 L1492.1 1210.66 L1491.51 1210.66 L1490.93 1210.66 L1490.34 1210.66 L1489.75 1210.66 L1489.17 1210.66 L1488.58 1210.66 L1487.99 1210.66 L1487.41 1210.66 L1486.82 1210.66 L1486.24 1210.66 L1485.65 1210.66 L1485.06 1210.66 L1484.48 1210.66 L1483.89 1210.66 L1483.3 1210.66 L1482.72 1210.66 L1482.13 1210.66 L1481.54 1210.66 L1480.96 1210.66 L1480.37 1210.66 L1479.78 1210.66 L1479.2 1210.66 L1478.61 1210.66 L1478.03 1210.66 L1477.44 1210.66 L1476.85 1210.66 L1476.27 1210.66 L1475.68 1210.66 L1475.09 1210.66 L1474.51 1210.66 L1473.92 1210.66 L1473.33 1210.66 L1472.75 1210.66 L1472.16 1210.66 L1471.57 1210.66 L1470.99 1210.66 L1470.4 1210.66 L1469.82 1210.66 L1469.23 1210.66 L1468.64 1210.66 L1468.06 1210.66 L1467.47 1210.66 L1466.88 1210.66 L1466.3 1210.66 L1465.71 1210.66 L1465.12 1210.66 L1464.54 1210.66 L1463.95 1210.66 L1463.37 1210.66 L1462.78 1210.66 L1462.19 1210.66 L1461.61 1210.66 L1461.02 1210.66 L1460.43 1210.66 L1459.85 1210.66 L1459.26 1210.66 L1458.67 1210.66 L1458.09 1210.66 L1457.5 1210.66 L1456.91 1210.66 L1456.33 1210.66 L1455.74 1210.66 L1455.16 1210.66 L1454.57 1210.66 L1453.98 1210.66 L1453.4 1210.66 L1452.81 1210.66 L1452.22 1210.66 L1451.64 1210.66 L1451.05 1210.66 L1450.46 1210.66 L1449.88 1210.66 L1449.29 1210.66 L1448.7 1210.66 L1448.12 1210.66 L1447.53 1210.66 L1446.95 1210.66 L1446.36 1210.66 L1445.77 1210.66 L1445.19 1210.66 L1444.6 1210.66 L1444.01 1210.66 L1443.43 1210.66 L1442.84 1210.66 L1442.25 1210.66 L1441.67 1210.66 L1441.08 1210.66 L1440.5 1210.66 L1439.91 1210.66 L1439.32 1210.66 L1438.74 1210.66 L1438.15 1210.66 L1437.56 1210.66 L1436.98 1210.66 L1436.39 1210.66 L1435.8 1210.66 L1435.22 1210.66 L1434.63 1210.66 L1434.04 1210.66 L1433.46 1210.66 L1432.87 1210.66 L1432.29 1210.66 L1431.7 1210.66 L1431.11 1210.66 L1430.53 1210.66 L1429.94 1210.66 L1429.35 1210.66 L1428.77 1210.66 L1428.18 1210.66 L1427.59 1210.66 L1427.01 1210.66 L1426.42 1210.66 L1425.83 1210.66 L1425.25 1210.66 L1424.66 1210.66 L1424.08 1210.66 L1423.49 1210.66 L1422.9 1210.66 L1422.32 1210.66 L1421.73 1210.66 L1421.14 1210.66 L1420.56 1210.66 L1419.97 1210.66 L1419.38 1210.66 L1418.8 1210.66 L1418.21 1210.66 L1417.63 1210.66 L1417.04 1210.66 L1416.45 1210.66 L1415.87 1210.66 L1415.28 1210.66 L1414.69 1210.66 L1414.11 1210.66 L1413.52 1210.66 L1412.93 1210.66 L1412.35 1210.66 L1411.76 1210.66 L1411.17 1210.66 L1410.59 1210.66 L1410 1210.66 L1409.42 1210.66 L1408.83 1210.66 L1408.24 1210.66 L1407.66 1210.66 L1407.07 1210.66 L1406.48 1210.66 L1405.9 1210.66 L1405.31 1210.66 L1404.72 1210.66 L1404.14 1210.66 L1403.55 1210.66 L1402.96 1210.66 L1402.38 1210.66 L1401.79 1210.66 L1401.21 1210.66 L1400.62 1210.66 L1400.03 1210.66 L1399.45 1210.66 L1398.86 1210.66 L1398.27 1210.66 L1397.69 1210.66 L1397.1 1210.66 L1396.51 1210.66 L1395.93 1210.66 L1395.34 1210.66 L1394.75 1210.66 L1394.17 1210.66 L1393.58 1210.66 L1393 1210.66 L1392.41 1210.66 L1391.82 1210.66 L1391.24 1210.66 L1390.65 1210.66 L1390.06 1210.66 L1389.48 1210.66 L1388.89 1210.66 L1388.3 1210.66 L1387.72 1210.66 L1387.13 1210.66 L1386.55 1210.66 L1385.96 1210.66 L1385.37 1210.66 L1384.79 1210.66 L1384.2 1210.66 L1383.61 1210.66 L1383.03 1210.66 L1382.44 1210.66 L1381.85 1210.66 L1381.27 1210.66 L1380.68 1210.66 L1380.09 1210.66 L1379.51 1210.66 L1378.92 1210.66 L1378.34 1210.66 L1377.75 1210.66 L1377.16 1210.66 L1376.58 1210.66 L1375.99 1210.66 L1375.4 1210.66 L1374.82 1210.66 L1374.23 1210.66 L1373.64 1210.66 L1373.06 1210.66 L1372.47 1210.66 L1371.88 1210.66 L1371.3 1210.66 L1370.71 1210.66 L1370.13 1210.66 L1369.54 1210.66 L1368.95 1210.66 L1368.37 1210.66 L1367.78 1210.66 L1367.19 1210.66 L1366.61 1210.66 L1366.02 1210.66 L1365.43 1210.66 L1364.85 1210.66 L1364.26 1210.66 L1363.68 1210.66 L1363.09 1210.66 L1362.5 1210.66 L1361.92 1210.66 L1361.33 1210.66 L1360.74 1210.66 L1360.16 1210.66 L1359.57 1210.66 L1358.98 1210.66 L1358.4 1210.66 L1357.81 1210.66 L1357.22 1210.66 L1356.64 1210.66 L1356.05 1210.66 L1355.47 1210.66 L1354.88 1210.66 L1354.29 1210.66 L1353.71 1210.66 L1353.12 1210.66 L1352.53 1210.66 L1351.95 1210.66 L1351.36 1210.66 L1350.77 1210.66 L1350.19 1210.66 L1349.6 1210.66 L1349.01 1210.66 L1348.43 1210.66 L1347.84 1210.66 L1347.26 1210.66 L1346.67 1210.66 L1346.08 1210.66 L1345.5 1210.66 L1344.91 1210.66 L1344.32 1210.66 L1343.74 1210.66 L1343.15 1210.66 L1342.56 1210.66 L1341.98 1210.66 L1341.39 1210.66 L1340.8 1210.66 L1340.22 1210.66 L1339.63 1210.66 L1339.05 1210.66 L1338.46 1210.66 L1337.87 1210.66 L1337.29 1210.66 L1336.7 1210.66 L1336.11 1210.66 L1335.53 1210.66 L1334.94 1210.66 L1334.35 1210.66 L1333.77 1210.66 L1333.18 1210.66 L1332.6 1210.66 L1332.01 1210.66 L1331.42 1210.66 L1330.84 1210.66 L1330.25 1210.66 L1329.66 1210.66 L1329.08 1210.66 L1328.49 1210.66 L1327.9 1210.66 L1327.32 1210.66 L1326.73 1210.66 L1326.14 1210.66 L1325.56 1210.66 L1324.97 1210.66 L1324.39 1210.66 L1323.8 1210.66 L1323.21 1210.66 L1322.63 1210.66 L1322.04 1210.66 L1321.45 1210.66 L1320.87 1210.66 L1320.28 1210.66 L1319.69 1210.66 L1319.11 1210.66 L1318.52 1210.66 L1317.93 1210.66 L1317.35 1210.66 L1316.76 1210.66 L1316.18 1210.66 L1315.59 1210.66 L1315 1210.66 L1314.42 1210.66 L1313.83 1210.66 L1313.24 1210.66 L1312.66 1210.66 L1312.07 1210.66 L1311.48 1210.66 L1310.9 1210.66 L1310.31 1210.66 L1309.73 1210.66 L1309.14 1210.66 L1308.55 1210.66 L1307.97 1210.66 L1307.38 1210.66 L1306.79 1210.66 L1306.21 1210.66 L1305.62 1210.66 L1305.03 1210.66 L1304.45 1210.66 L1303.86 1210.66 L1303.27 1210.66 L1302.69 1210.66 L1302.1 1210.66 L1301.52 1210.66 L1300.93 1210.66 L1300.34 1210.66 L1299.76 1210.66 L1299.17 1210.66 L1298.58 1210.66 L1298 1210.66 L1297.41 1210.66 L1296.82 1210.66 L1296.24 1210.66 L1295.65 1210.66 L1295.06 1210.66 L1294.48 1210.66 L1293.89 1210.66 L1293.31 1210.66 L1292.72 1210.66 L1292.13 1210.66 L1291.55 1210.66 L1290.96 1210.66 L1290.37 1210.66 L1289.79 1210.66 L1289.2 1210.66 L1288.61 1210.66 L1288.03 1210.66 L1287.44 1210.66 L1286.86 1210.66 L1286.27 1210.66 L1285.68 1210.66 L1285.1 1210.66 L1284.51 1210.66 L1283.92 1210.66 L1283.34 1210.66 L1282.75 1210.66 L1282.16 1210.66 L1281.58 1210.66 L1280.99 1210.66 L1280.4 1210.66 L1279.82 1210.66 L1279.23 1210.66 L1278.65 1210.66 L1278.06 1210.66 L1277.47 1210.66 L1276.89 1210.66 L1276.3 1210.66 L1275.71 1210.66 L1275.13 1210.66 L1274.54 1210.66 L1273.95 1210.66 L1273.37 1210.66 L1272.78 1210.66 L1272.19 1210.66 L1271.61 1210.66 L1271.02 1210.66 L1270.44 1210.66 L1269.85 1210.66 L1269.26 1210.66 L1268.68 1210.66 L1268.09 1210.66 L1267.5 1210.66 L1266.92 1210.66 L1266.33 1210.66 L1265.74 1210.66 L1265.16 1210.66 L1264.57 1210.66 L1263.98 1210.66 L1263.4 1210.66 L1262.81 1210.66 L1262.23 1210.66 L1261.64 1210.66 L1261.05 1210.66 L1260.47 1210.66 L1259.88 1210.66 L1259.29 1210.66 L1258.71 1210.66 L1258.12 1210.66 L1257.53 1210.66 L1256.95 1210.66 L1256.36 1210.66 L1255.78 1210.66 L1255.19 1210.66 L1254.6 1210.66 L1254.02 1210.66 L1253.43 1210.66 L1252.84 1210.66 L1252.26 1210.66 L1251.67 1210.66 L1251.08 1210.66 L1250.5 1210.66 L1249.91 1210.66 L1249.32 1210.66 L1248.74 1210.66 L1248.15 1210.66 L1247.57 1210.66 L1246.98 1210.66 L1246.39 1210.66 L1245.81 1210.66 L1245.22 1210.66 L1244.63 1210.66 L1244.05 1210.66 L1243.46 1210.66 L1242.87 1210.66 L1242.29 1210.66 L1241.7 1210.66 L1241.11 1210.66 L1240.53 1210.66 L1239.94 1210.66 L1239.36 1210.66 L1238.77 1210.66 L1238.18 1210.66 L1237.6 1210.66 L1237.01 1210.66 L1236.42 1210.66 L1235.84 1210.66 L1235.25 1210.66 L1234.66 1210.66 L1234.08 1210.66 L1233.49 1210.66 L1232.91 1210.66 L1232.32 1210.66 L1231.73 1210.66 L1231.15 1210.66 L1230.56 1210.66 L1229.97 1210.66 L1229.39 1210.66 L1228.8 1210.66 L1228.21 1210.66 L1227.63 1210.66 L1227.04 1210.66 L1226.45 1210.66 L1225.87 1210.66 L1225.28 1210.66 L1224.7 1210.66 L1224.11 1210.66 L1223.52 1210.66 L1222.94 1210.66 L1222.35 1210.66 L1221.76 1210.66 L1221.18 1210.66 L1220.59 1210.66 L1220 1210.66 L1219.42 1210.66 L1218.83 1210.66 L1218.24 1210.66 L1217.66 1210.66 L1217.07 1210.66 L1216.49 1210.66 L1215.9 1210.66 L1215.31 1210.66 L1214.73 1210.66 L1214.14 1210.66 L1213.55 1210.66 L1212.97 1210.66 L1212.38 1210.66 L1211.79 1210.66 L1211.21 1210.66 L1210.62 1210.66 L1210.03 1210.66 L1209.45 1210.66 L1208.86 1210.66 L1208.28 1210.66 L1207.69 1210.66 L1207.1 1210.66 L1206.52 1210.66 L1205.93 1210.66 L1205.34 1210.66 L1204.76 1210.66 L1204.17 1210.66 L1203.58 1210.66 L1203 1210.66 L1202.41 1210.66 L1201.83 1210.66 L1201.24 1210.66 L1200.65 1210.66 L1200.07 1210.66 L1199.48 1210.66 L1198.89 1210.66 L1198.31 1210.66 L1197.72 1210.66 L1197.13 1210.66 L1196.55 1210.66 L1195.96 1210.66 L1195.37 1210.66 L1194.79 1210.66 L1194.2 1210.66 L1193.62 1210.66 L1193.03 1210.66 L1192.44 1210.66 L1191.86 1210.66 L1191.27 1210.66 L1190.68 1210.66 L1190.1 1210.66 L1189.51 1210.66 L1188.92 1210.66 L1188.34 1210.66 L1187.75 1210.66 L1187.16 1210.66 L1186.58 1210.66 L1185.99 1210.66 L1185.41 1210.66 L1184.82 1210.66 L1184.23 1210.66 L1183.65 1210.66 L1183.06 1210.66 L1182.47 1210.66 L1181.89 1210.66 L1181.3 1210.66 L1180.71 1210.66 L1180.13 1210.66 L1179.54 1210.66 L1178.96 1210.66 L1178.37 1210.66 L1177.78 1210.66 L1177.2 1210.66 L1176.61 1210.66 L1176.02 1210.66 L1175.44 1210.66 L1174.85 1210.66 L1174.26 1210.66 L1173.68 1210.66 L1173.09 1210.66 L1172.5 1210.66 L1171.92 1210.66 L1171.33 1210.66 L1170.75 1210.66 L1170.16 1210.66 L1169.57 1210.66 L1168.99 1210.66 L1168.4 1210.66 L1167.81 1210.66 L1167.23 1210.66 L1166.64 1210.66 L1166.05 1210.66 L1165.47 1210.66 L1164.88 1210.66 L1164.29 1210.66 L1163.71 1210.66 L1163.12 1210.66 L1162.54 1210.66 L1161.95 1210.66 L1161.36 1210.66 L1160.78 1210.66 L1160.19 1210.66 L1159.6 1210.66 L1159.02 1210.66 L1158.43 1210.66 L1157.84 1210.66 L1157.26 1210.66 L1156.67 1210.66 L1156.09 1210.66 L1155.5 1210.66 L1154.91 1210.66 L1154.33 1210.66 L1153.74 1210.66 L1153.15 1210.66 L1152.57 1210.66 L1151.98 1210.66 L1151.39 1210.66 L1150.81 1210.66 L1150.22 1210.66 L1149.63 1210.66 L1149.05 1210.66 L1148.46 1210.66 L1147.88 1210.66 L1147.29 1210.66 L1146.7 1210.66 L1146.12 1210.66 L1145.53 1210.66 L1144.94 1210.66 L1144.36 1210.66 L1143.77 1210.66 L1143.18 1210.66 L1142.6 1210.66 L1142.01 1210.66 L1141.42 1210.66 L1140.84 1210.66 L1140.25 1210.66 L1139.67 1210.66 L1139.08 1210.66 L1138.49 1210.66 L1137.91 1210.66 L1137.32 1210.66 L1136.73 1210.66 L1136.15 1210.66 L1135.56 1210.66 L1134.97 1210.66 L1134.39 1210.66 L1133.8 1210.66 L1133.21 1210.66 L1132.63 1210.66 L1132.04 1210.66 L1131.46 1210.66 L1130.87 1210.66 L1130.28 1210.66 L1129.7 1210.66 L1129.11 1210.66 L1128.52 1210.66 L1127.94 1210.66 L1127.35 1210.66 L1126.76 1210.66 L1126.18 1210.66 L1125.59 1210.66 L1125.01 1210.66 L1124.42 1210.66 L1123.83 1210.66 L1123.25 1210.66 L1122.66 1210.66 L1122.07 1210.66 L1121.49 1210.66 L1120.9 1210.66 L1120.31 1210.66 L1119.73 1210.66 L1119.14 1210.66 L1118.55 1210.66 L1117.97 1210.66 L1117.38 1210.66 L1116.8 1210.66 L1116.21 1210.66 L1115.62 1210.66 L1115.04 1210.66 L1114.45 1210.66 L1113.86 1210.66 L1113.28 1210.66 L1112.69 1210.66 L1112.1 1210.66 L1111.52 1210.66 L1110.93 1210.66 L1110.34 1210.66 L1109.76 1210.66 L1109.17 1210.66 L1108.59 1210.66 L1108 1210.66 L1107.41 1210.66 L1106.83 1210.66 L1106.24 1210.66 L1105.65 1210.66 L1105.07 1210.66 L1104.48 1210.66 L1103.89 1210.66 L1103.31 1210.66 L1102.72 1210.66 L1102.14 1210.66 L1101.55 1210.66 L1100.96 1210.66 L1100.38 1210.66 L1099.79 1210.66 L1099.2 1210.66 L1098.62 1210.66 L1098.03 1210.66 L1097.44 1210.66 L1096.86 1210.66 L1096.27 1210.66 L1095.68 1210.66 L1095.1 1210.66 L1094.51 1210.66 L1093.93 1210.66 L1093.34 1210.66 L1092.75 1210.66 L1092.17 1210.66 L1091.58 1210.66 L1090.99 1210.66 L1090.41 1210.66 L1089.82 1210.66 L1089.23 1210.66 L1088.65 1210.66 L1088.06 1210.66 L1087.47 1210.66 L1086.89 1210.66 L1086.3 1210.66 L1085.72 1210.66 L1085.13 1210.66 L1084.54 1210.66 L1083.96 1210.66 L1083.37 1210.66 L1082.78 1210.66 L1082.2 1210.66 L1081.61 1210.66 L1081.02 1210.66 L1080.44 1210.66 L1079.85 1210.66 L1079.26 1210.66 L1078.68 1210.66 L1078.09 1210.66 L1077.51 1210.66 L1076.92 1210.66 L1076.33 1210.66 L1075.75 1210.66 L1075.16 1210.66 L1074.57 1210.66 L1073.99 1210.66 L1073.4 1210.66 L1072.81 1210.66 L1072.23 1210.66 L1071.64 1210.66 L1071.06 1210.66 L1070.47 1210.66 L1069.88 1210.66 L1069.3 1210.66 L1068.71 1210.66 L1068.12 1210.66 L1067.54 1210.66 L1066.95 1210.66 L1066.36 1210.66 L1065.78 1210.66 L1065.19 1210.66 L1064.6 1210.66 L1064.02 1210.66 L1063.43 1210.66 L1062.85 1210.66 L1062.26 1210.66 L1061.67 1210.66 L1061.09 1210.66 L1060.5 1210.66 L1059.91 1210.66 L1059.33 1210.66 L1058.74 1210.66 L1058.15 1210.66 L1057.57 1210.66 L1056.98 1210.66 L1056.39 1210.66 L1055.81 1210.66 L1055.22 1210.66 L1054.64 1210.66 L1054.05 1210.66 L1053.46 1210.66 L1052.88 1210.66 L1052.29 1210.66 L1051.7 1210.66 L1051.12 1210.66 L1050.53 1210.66 L1049.94 1210.66 L1049.36 1210.66 L1048.77 1210.66 L1048.19 1210.66 L1047.6 1210.66 L1047.01 1210.66 L1046.43 1210.66 L1045.84 1210.66 L1045.25 1210.66 L1044.67 1210.66 L1044.08 1210.66 L1043.49 1210.66 L1042.91 1210.66 L1042.32 1210.66 L1041.73 1210.66 L1041.15 1210.66 L1040.56 1210.66 L1039.98 1210.66 L1039.39 1210.66 L1038.8 1210.66 L1038.22 1210.66 L1037.63 1210.66 L1037.04 1210.66 L1036.46 1210.66 L1035.87 1210.66 L1035.28 1210.66 L1034.7 1210.66 L1034.11 1210.66 L1033.52 1210.66 L1032.94 1210.66 L1032.35 1210.66 L1031.77 1210.66 L1031.18 1210.66 L1030.59 1210.66 L1030.01 1210.66 L1029.42 1210.66 L1028.83 1210.66 L1028.25 1210.66 L1027.66 1210.66 L1027.07 1210.66 L1026.49 1210.66 L1025.9 1210.66 L1025.32 1210.66 L1024.73 1210.66 L1024.14 1210.66 L1023.56 1210.66 L1022.97 1210.66 L1022.38 1210.66 L1021.8 1210.66 L1021.21 1210.66 L1020.62 1210.66 L1020.04 1210.66 L1019.45 1210.66 L1018.86 1210.66 L1018.28 1210.66 L1017.69 1210.66 L1017.11 1210.66 L1016.52 1210.66 L1015.93 1210.66 L1015.35 1210.66 L1014.76 1210.66 L1014.17 1210.66 L1013.59 1210.66 L1013 1210.66 L1012.41 1210.66 L1011.83 1210.66 L1011.24 1210.66 L1010.65 1210.66 L1010.07 1210.66 L1009.48 1210.66 L1008.9 1210.66 L1008.31 1210.66 L1007.72 1210.66 L1007.14 1210.66 L1006.55 1210.66 L1005.96 1210.66 L1005.38 1210.66 L1004.79 1210.66 L1004.2 1210.66 L1003.62 1210.66 L1003.03 1210.66 L1002.44 1210.66 L1001.86 1210.66 L1001.27 1210.66 L1000.69 1210.66 L1000.1 1210.66 L999.513 1210.66 L998.926 1210.66 L998.34 1210.66 L997.754 1210.66 L997.167 1210.66 L996.581 1210.66 L995.994 1210.66 L995.408 1210.66 L994.822 1210.66 L994.235 1210.66 L993.649 1210.66 L993.062 1210.66 L992.476 1210.66 L991.889 1210.66 L991.303 1210.66 L990.717 1210.66 L990.13 1210.66 L989.544 1210.66 L988.957 1210.66 L988.371 1210.66 L987.785 1210.66 L987.198 1210.66 L986.612 1210.66 L986.025 1210.66  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.97 986.612,1210.97 987.198,1210.97 987.785,1210.97 988.371,1210.97 988.957,1210.97 989.544,1210.97 990.13,1210.97 990.717,1210.97 991.303,1210.97 991.889,1210.97 992.476,1210.97 993.062,1210.97 993.649,1210.97 994.235,1210.97 994.822,1210.97 995.408,1210.97 995.994,1210.97 996.581,1210.97 997.167,1210.97 997.754,1210.97 998.34,1210.97 998.926,1210.97 999.513,1210.97 1000.1,1210.97 1000.69,1210.97 1001.27,1210.97 1001.86,1210.97 1002.44,1210.97 1003.03,1210.97 1003.62,1210.97 1004.2,1210.97 1004.79,1210.97 1005.38,1210.97 1005.96,1210.97 1006.55,1210.97 1007.14,1210.97 1007.72,1210.97 1008.31,1210.97 1008.9,1210.97 1009.48,1210.97 1010.07,1210.97 1010.65,1210.97 1011.24,1210.97 1011.83,1210.97 1012.41,1210.97 1013,1210.97 1013.59,1210.97 1014.17,1210.97 1014.76,1210.97 1015.35,1210.97 1015.93,1210.97 1016.52,1210.97 1017.11,1210.97 1017.69,1210.97 1018.28,1210.97 1018.86,1210.97 1019.45,1210.97 1020.04,1210.97 1020.62,1210.97 1021.21,1210.97 1021.8,1210.97 1022.38,1210.97 1022.97,1210.97 1023.56,1210.97 1024.14,1210.97 1024.73,1210.97 1025.32,1210.97 1025.9,1210.97 1026.49,1210.97 1027.07,1210.97 1027.66,1210.97 1028.25,1210.97 1028.83,1210.97 1029.42,1210.97 1030.01,1210.97 1030.59,1210.97 1031.18,1210.97 1031.77,1210.97 1032.35,1210.97 1032.94,1210.97 1033.52,1210.97 1034.11,1210.97 1034.7,1210.97 1035.28,1210.97 1035.87,1210.97 1036.46,1210.97 1037.04,1210.97 1037.63,1210.97 1038.22,1210.97 1038.8,1210.97 1039.39,1210.97 1039.98,1210.97 1040.56,1210.97 1041.15,1210.97 1041.73,1210.97 1042.32,1210.97 1042.91,1210.97 1043.49,1210.97 1044.08,1210.97 1044.67,1210.97 1045.25,1210.97 1045.84,1210.97 1046.43,1210.97 1047.01,1210.97 1047.6,1210.97 1048.19,1210.97 1048.77,1210.97 1049.36,1210.97 1049.94,1210.97 1050.53,1210.97 1051.12,1210.97 1051.7,1210.97 1052.29,1210.97 1052.88,1210.97 1053.46,1210.97 1054.05,1210.97 1054.64,1210.97 1055.22,1210.97 1055.81,1210.97 1056.39,1210.97 1056.98,1210.97 1057.57,1210.97 1058.15,1210.97 1058.74,1210.97 1059.33,1210.97 1059.91,1210.97 1060.5,1210.97 1061.09,1210.97 1061.67,1210.97 1062.26,1210.97 1062.85,1210.97 1063.43,1210.97 1064.02,1210.97 1064.6,1210.97 1065.19,1210.97 1065.78,1210.97 1066.36,1210.97 1066.95,1210.97 1067.54,1210.97 1068.12,1210.97 1068.71,1210.97 1069.3,1210.97 1069.88,1210.97 1070.47,1210.97 1071.06,1210.97 1071.64,1210.97 1072.23,1210.97 1072.81,1210.97 1073.4,1210.97 1073.99,1210.97 1074.57,1210.97 1075.16,1210.97 1075.75,1210.97 1076.33,1210.97 1076.92,1210.97 1077.51,1210.97 1078.09,1210.97 1078.68,1210.97 1079.26,1210.97 1079.85,1210.97 1080.44,1210.97 1081.02,1210.97 1081.61,1210.97 1082.2,1210.97 1082.78,1210.97 1083.37,1210.97 1083.96,1210.97 1084.54,1210.97 1085.13,1210.97 1085.72,1210.97 1086.3,1210.97 1086.89,1210.97 1087.47,1210.97 1088.06,1210.97 1088.65,1210.97 1089.23,1210.97 1089.82,1210.97 1090.41,1210.97 1090.99,1210.97 1091.58,1210.97 1092.17,1210.97 1092.75,1210.97 1093.34,1210.97 1093.93,1210.97 1094.51,1210.97 1095.1,1210.97 1095.68,1210.97 1096.27,1210.97 1096.86,1210.97 1097.44,1210.97 1098.03,1210.97 1098.62,1210.97 1099.2,1210.97 1099.79,1210.97 1100.38,1210.97 1100.96,1210.97 1101.55,1210.97 1102.14,1210.97 1102.72,1210.97 1103.31,1210.97 1103.89,1210.97 1104.48,1210.97 1105.07,1210.97 1105.65,1210.97 1106.24,1210.97 1106.83,1210.97 1107.41,1210.97 1108,1210.97 1108.59,1210.97 1109.17,1210.97 1109.76,1210.97 1110.34,1210.97 1110.93,1210.97 1111.52,1210.97 1112.1,1210.97 1112.69,1210.97 1113.28,1210.97 1113.86,1210.97 1114.45,1210.97 1115.04,1210.97 1115.62,1210.97 1116.21,1210.97 1116.8,1210.97 1117.38,1210.97 1117.97,1210.97 1118.55,1210.97 1119.14,1210.97 1119.73,1210.97 1120.31,1210.97 1120.9,1210.97 1121.49,1210.97 1122.07,1210.97 1122.66,1210.97 1123.25,1210.97 1123.83,1210.97 1124.42,1210.97 1125.01,1210.97 1125.59,1210.97 1126.18,1210.97 1126.76,1210.97 1127.35,1210.97 1127.94,1210.97 1128.52,1210.97 1129.11,1210.97 1129.7,1210.97 1130.28,1210.97 1130.87,1210.97 1131.46,1210.97 1132.04,1210.97 1132.63,1210.97 1133.21,1210.97 1133.8,1210.97 1134.39,1210.97 1134.97,1210.97 1135.56,1210.97 1136.15,1210.97 1136.73,1210.97 1137.32,1210.97 1137.91,1210.97 1138.49,1210.97 1139.08,1210.97 1139.67,1210.97 1140.25,1210.97 1140.84,1210.97 1141.42,1210.97 1142.01,1210.97 1142.6,1210.97 1143.18,1210.97 1143.77,1210.97 1144.36,1210.97 1144.94,1210.97 1145.53,1210.97 1146.12,1210.97 1146.7,1210.97 1147.29,1210.97 1147.88,1210.97 1148.46,1210.97 1149.05,1210.97 1149.63,1210.97 1150.22,1210.97 1150.81,1210.97 1151.39,1210.97 1151.98,1210.97 1152.57,1210.97 1153.15,1210.97 1153.74,1210.97 1154.33,1210.97 1154.91,1210.97 1155.5,1210.97 1156.09,1210.97 1156.67,1210.97 1157.26,1210.97 1157.84,1210.97 1158.43,1210.97 1159.02,1210.97 1159.6,1210.97 1160.19,1210.97 1160.78,1210.97 1161.36,1210.97 1161.95,1210.97 1162.54,1210.97 1163.12,1210.97 1163.71,1210.97 1164.29,1210.97 1164.88,1210.97 1165.47,1210.97 1166.05,1210.97 1166.64,1210.97 1167.23,1210.97 1167.81,1210.97 1168.4,1210.97 1168.99,1210.97 1169.57,1210.97 1170.16,1210.97 1170.75,1210.97 1171.33,1210.97 1171.92,1210.97 1172.5,1210.97 1173.09,1210.97 1173.68,1210.97 1174.26,1210.97 1174.85,1210.97 1175.44,1210.97 1176.02,1210.97 1176.61,1210.97 1177.2,1210.97 1177.78,1210.97 1178.37,1210.97 1178.96,1210.97 1179.54,1210.97 1180.13,1210.97 1180.71,1210.97 1181.3,1210.97 1181.89,1210.97 1182.47,1210.97 1183.06,1210.97 1183.65,1210.97 1184.23,1210.97 1184.82,1210.97 1185.41,1210.97 1185.99,1210.97 1186.58,1210.97 1187.16,1210.97 1187.75,1210.97 1188.34,1210.97 1188.92,1210.97 1189.51,1210.97 1190.1,1210.97 1190.68,1210.97 1191.27,1210.97 1191.86,1210.97 1192.44,1210.97 1193.03,1210.97 1193.62,1210.97 1194.2,1210.97 1194.79,1210.97 1195.37,1210.97 1195.96,1210.97 1196.55,1210.97 1197.13,1210.97 1197.72,1210.97 1198.31,1210.97 1198.89,1210.97 1199.48,1210.97 1200.07,1210.97 1200.65,1210.97 1201.24,1210.97 1201.83,1210.97 1202.41,1210.97 1203,1210.97 1203.58,1210.97 1204.17,1210.97 1204.76,1210.97 1205.34,1210.97 1205.93,1210.97 1206.52,1210.97 1207.1,1210.97 1207.69,1210.97 1208.28,1210.97 1208.86,1210.97 1209.45,1210.97 1210.03,1210.97 1210.62,1210.97 1211.21,1210.97 1211.79,1210.97 1212.38,1210.97 1212.97,1210.97 1213.55,1210.97 1214.14,1210.97 1214.73,1210.97 1215.31,1210.97 1215.9,1210.97 1216.49,1210.97 1217.07,1210.97 1217.66,1210.97 1218.24,1210.97 1218.83,1210.97 1219.42,1210.97 1220,1210.97 1220.59,1210.97 1221.18,1210.97 1221.76,1210.97 1222.35,1210.97 1222.94,1210.97 1223.52,1210.97 1224.11,1210.97 1224.7,1210.97 1225.28,1210.97 1225.87,1210.97 1226.45,1210.97 1227.04,1210.97 1227.63,1210.97 1228.21,1210.97 1228.8,1210.97 1229.39,1210.97 1229.97,1210.97 1230.56,1210.97 1231.15,1210.97 1231.73,1210.97 1232.32,1210.97 1232.91,1210.97 1233.49,1210.97 1234.08,1210.97 1234.66,1210.97 1235.25,1210.97 1235.84,1210.97 1236.42,1210.97 1237.01,1210.97 1237.6,1210.97 1238.18,1210.97 1238.77,1210.97 1239.36,1210.97 1239.94,1210.97 1240.53,1210.97 1241.11,1210.97 1241.7,1210.97 1242.29,1210.97 1242.87,1210.97 1243.46,1210.97 1244.05,1210.97 1244.63,1210.97 1245.22,1210.97 1245.81,1210.97 1246.39,1210.97 1246.98,1210.97 1247.57,1210.97 1248.15,1210.97 1248.74,1210.97 1249.32,1210.97 1249.91,1210.97 1250.5,1210.97 1251.08,1210.97 1251.67,1210.97 1252.26,1210.97 1252.84,1210.97 1253.43,1210.97 1254.02,1210.97 1254.6,1210.97 1255.19,1210.97 1255.78,1210.97 1256.36,1210.97 1256.95,1210.97 1257.53,1210.97 1258.12,1210.97 1258.71,1210.97 1259.29,1210.97 1259.88,1210.97 1260.47,1210.97 1261.05,1210.97 1261.64,1210.97 1262.23,1210.97 1262.81,1210.97 1263.4,1210.97 1263.98,1210.97 1264.57,1210.97 1265.16,1210.97 1265.74,1210.97 1266.33,1210.97 1266.92,1210.97 1267.5,1210.97 1268.09,1210.97 1268.68,1210.97 1269.26,1210.97 1269.85,1210.97 1270.44,1210.97 1271.02,1210.97 1271.61,1210.97 1272.19,1210.97 1272.78,1210.97 1273.37,1210.97 1273.95,1210.97 1274.54,1210.97 1275.13,1210.97 1275.71,1210.97 1276.3,1210.97 1276.89,1210.97 1277.47,1210.97 1278.06,1210.97 1278.65,1210.97 1279.23,1210.97 1279.82,1210.97 1280.4,1210.97 1280.99,1210.97 1281.58,1210.97 1282.16,1210.97 1282.75,1210.97 1283.34,1210.97 1283.92,1210.97 1284.51,1210.97 1285.1,1210.97 1285.68,1210.97 1286.27,1210.97 1286.86,1210.97 1287.44,1210.97 1288.03,1210.97 1288.61,1210.97 1289.2,1210.97 1289.79,1210.97 1290.37,1210.97 1290.96,1210.97 1291.55,1210.97 1292.13,1210.97 1292.72,1210.97 1293.31,1210.97 1293.89,1210.97 1294.48,1210.97 1295.06,1210.97 1295.65,1210.97 1296.24,1210.97 1296.82,1210.97 1297.41,1210.97 1298,1210.97 1298.58,1210.97 1299.17,1210.97 1299.76,1210.97 1300.34,1210.97 1300.93,1210.97 1301.52,1210.97 1302.1,1210.97 1302.69,1210.97 1303.27,1210.97 1303.86,1210.97 1304.45,1210.97 1305.03,1210.97 1305.62,1210.97 1306.21,1210.97 1306.79,1210.97 1307.38,1210.97 1307.97,1210.97 1308.55,1210.97 1309.14,1210.97 1309.73,1210.97 1310.31,1210.97 1310.9,1210.97 1311.48,1210.97 1312.07,1210.97 1312.66,1210.97 1313.24,1210.97 1313.83,1210.97 1314.42,1210.97 1315,1210.97 1315.59,1210.97 1316.18,1210.97 1316.76,1210.97 1317.35,1210.97 1317.93,1210.97 1318.52,1210.97 1319.11,1210.97 1319.69,1210.97 1320.28,1210.97 1320.87,1210.97 1321.45,1210.97 1322.04,1210.97 1322.63,1210.97 1323.21,1210.97 1323.8,1210.97 1324.39,1210.97 1324.97,1210.97 1325.56,1210.97 1326.14,1210.97 1326.73,1210.97 1327.32,1210.97 1327.9,1210.97 1328.49,1210.97 1329.08,1210.97 1329.66,1210.97 1330.25,1210.97 1330.84,1210.97 1331.42,1210.97 1332.01,1210.97 1332.6,1210.97 1333.18,1210.97 1333.77,1210.97 1334.35,1210.97 1334.94,1210.97 1335.53,1210.97 1336.11,1210.97 1336.7,1210.97 1337.29,1210.97 1337.87,1210.97 1338.46,1210.97 1339.05,1210.97 1339.63,1210.97 1340.22,1210.97 1340.8,1210.97 1341.39,1210.97 1341.98,1210.97 1342.56,1210.97 1343.15,1210.97 1343.74,1210.97 1344.32,1210.97 1344.91,1210.97 1345.5,1210.97 1346.08,1210.97 1346.67,1210.97 1347.26,1210.97 1347.84,1210.97 1348.43,1210.97 1349.01,1210.97 1349.6,1210.97 1350.19,1210.97 1350.77,1210.97 1351.36,1210.97 1351.95,1210.97 1352.53,1210.97 1353.12,1210.97 1353.71,1210.97 1354.29,1210.97 1354.88,1210.97 1355.47,1210.97 1356.05,1210.97 1356.64,1210.97 1357.22,1210.97 1357.81,1210.97 1358.4,1210.97 1358.98,1210.97 1359.57,1210.97 1360.16,1210.97 1360.74,1210.97 1361.33,1210.97 1361.92,1210.97 1362.5,1210.97 1363.09,1210.97 1363.68,1210.97 1364.26,1210.97 1364.85,1210.97 1365.43,1210.97 1366.02,1210.97 1366.61,1210.97 1367.19,1210.97 1367.78,1210.97 1368.37,1210.97 1368.95,1210.97 1369.54,1210.97 1370.13,1210.97 1370.71,1210.97 1371.3,1210.97 1371.88,1210.97 1372.47,1210.97 1373.06,1210.97 1373.64,1210.97 1374.23,1210.97 1374.82,1210.97 1375.4,1210.97 1375.99,1210.97 1376.58,1210.97 1377.16,1210.97 1377.75,1210.97 1378.34,1210.97 1378.92,1210.97 1379.51,1210.97 1380.09,1210.97 1380.68,1210.97 1381.27,1210.97 1381.85,1210.97 1382.44,1210.97 1383.03,1210.97 1383.61,1210.97 1384.2,1210.97 1384.79,1210.97 1385.37,1210.97 1385.96,1210.97 1386.55,1210.97 1387.13,1210.97 1387.72,1210.97 1388.3,1210.97 1388.89,1210.97 1389.48,1210.97 1390.06,1210.97 1390.65,1210.97 1391.24,1210.97 1391.82,1210.97 1392.41,1210.97 1393,1210.97 1393.58,1210.97 1394.17,1210.97 1394.75,1210.97 1395.34,1210.97 1395.93,1210.97 1396.51,1210.97 1397.1,1210.97 1397.69,1210.97 1398.27,1210.97 1398.86,1210.97 1399.45,1210.97 1400.03,1210.97 1400.62,1210.97 1401.21,1210.97 1401.79,1210.97 1402.38,1210.97 1402.96,1210.97 1403.55,1210.97 1404.14,1210.97 1404.72,1210.97 1405.31,1210.97 1405.9,1210.97 1406.48,1210.97 1407.07,1210.97 1407.66,1210.97 1408.24,1210.97 1408.83,1210.97 1409.42,1210.97 1410,1210.97 1410.59,1210.97 1411.17,1210.97 1411.76,1210.97 1412.35,1210.97 1412.93,1210.97 1413.52,1210.97 1414.11,1210.97 1414.69,1210.97 1415.28,1210.97 1415.87,1210.97 1416.45,1210.97 1417.04,1210.97 1417.63,1210.97 1418.21,1210.97 1418.8,1210.97 1419.38,1210.97 1419.97,1210.97 1420.56,1210.97 1421.14,1210.97 1421.73,1210.97 1422.32,1210.97 1422.9,1210.97 1423.49,1210.97 1424.08,1210.97 1424.66,1210.97 1425.25,1210.97 1425.83,1210.97 1426.42,1210.97 1427.01,1210.97 1427.59,1210.97 1428.18,1210.97 1428.77,1210.97 1429.35,1210.97 1429.94,1210.97 1430.53,1210.97 1431.11,1210.97 1431.7,1210.97 1432.29,1210.97 1432.87,1210.97 1433.46,1210.97 1434.04,1210.97 1434.63,1210.97 1435.22,1210.97 1435.8,1210.97 1436.39,1210.97 1436.98,1210.97 1437.56,1210.97 1438.15,1210.97 1438.74,1210.97 1439.32,1210.97 1439.91,1210.97 1440.5,1210.97 1441.08,1210.97 1441.67,1210.97 1442.25,1210.97 1442.84,1210.97 1443.43,1210.97 1444.01,1210.97 1444.6,1210.97 1445.19,1210.97 1445.77,1210.97 1446.36,1210.97 1446.95,1210.97 1447.53,1210.97 1448.12,1210.97 1448.7,1210.97 1449.29,1210.97 1449.88,1210.97 1450.46,1210.97 1451.05,1210.97 1451.64,1210.97 1452.22,1210.97 1452.81,1210.97 1453.4,1210.97 1453.98,1210.97 1454.57,1210.97 1455.16,1210.97 1455.74,1210.97 1456.33,1210.97 1456.91,1210.97 1457.5,1210.97 1458.09,1210.97 1458.67,1210.97 1459.26,1210.97 1459.85,1210.97 1460.43,1210.97 1461.02,1210.97 1461.61,1210.97 1462.19,1210.97 1462.78,1210.97 1463.37,1210.97 1463.95,1210.97 1464.54,1210.97 1465.12,1210.97 1465.71,1210.97 1466.3,1210.97 1466.88,1210.97 1467.47,1210.97 1468.06,1210.97 1468.64,1210.97 1469.23,1210.97 1469.82,1210.97 1470.4,1210.97 1470.99,1210.97 1471.57,1210.97 1472.16,1210.97 1472.75,1210.97 1473.33,1210.97 1473.92,1210.97 1474.51,1210.97 1475.09,1210.97 1475.68,1210.97 1476.27,1210.97 1476.85,1210.97 1477.44,1210.97 1478.03,1210.97 1478.61,1210.97 1479.2,1210.97 1479.78,1210.97 1480.37,1210.97 1480.96,1210.97 1481.54,1210.97 1482.13,1210.97 1482.72,1210.97 1483.3,1210.97 1483.89,1210.97 1484.48,1210.97 1485.06,1210.97 1485.65,1210.97 1486.24,1210.97 1486.82,1210.97 1487.41,1210.97 1487.99,1210.97 1488.58,1210.97 1489.17,1210.97 1489.75,1210.97 1490.34,1210.97 1490.93,1210.97 1491.51,1210.97 1492.1,1210.97 1492.69,1210.97 1493.27,1210.97 1493.86,1210.97 1494.45,1210.97 1495.03,1210.97 1495.62,1210.97 1496.2,1210.97 1496.79,1210.97 1497.38,1210.97 1497.96,1210.97 1498.55,1210.97 1499.14,1210.97 1499.72,1210.97 1500.31,1210.97 1500.9,1210.97 1501.48,1210.97 1502.07,1210.97 1502.65,1210.97 1503.24,1210.97 1503.83,1210.97 1504.41,1210.97 1505,1210.97 1505.59,1210.97 1506.17,1210.97 1506.76,1210.97 1507.35,1210.97 1507.93,1210.97 1508.52,1210.97 1509.11,1210.97 1509.69,1210.97 1510.28,1210.97 1510.86,1210.97 1511.45,1210.97 1512.04,1210.97 1512.62,1210.97 1513.21,1210.97 1513.8,1210.97 1514.38,1210.97 1514.97,1210.97 1515.56,1210.97 1516.14,1210.97 1516.73,1210.97 1517.32,1210.97 1517.9,1210.97 1518.49,1210.97 1519.07,1210.97 1519.66,1210.97 1520.25,1210.97 1520.83,1210.97 1521.42,1210.97 1522.01,1210.97 1522.59,1210.97 1523.18,1210.97 1523.77,1210.97 1524.35,1210.97 1524.94,1210.97 1525.52,1210.97 1526.11,1210.97 1526.7,1210.97 1527.28,1210.97 1527.87,1210.97 1528.46,1210.97 1529.04,1210.97 1529.63,1210.97 1530.22,1210.97 1530.8,1210.97 1531.39,1210.97 1531.98,1210.97 1532.56,1210.97 1533.15,1210.97 1533.73,1210.97 1534.32,1210.97 1534.91,1210.97 1535.49,1210.97 1536.08,1210.97 1536.67,1210.97 1537.25,1210.97 1537.84,1210.97 1538.43,1210.97 1539.01,1210.97 1539.6,1210.97 1540.19,1210.97 1540.77,1210.97 1541.36,1210.97 1541.94,1210.97 1542.53,1210.97 1543.12,1210.97 1543.7,1210.97 1544.29,1210.97 1544.88,1210.97 1545.46,1210.97 1546.05,1210.97 1546.64,1210.97 1547.22,1210.97 1547.81,1210.97 1548.4,1210.97 1548.98,1210.97 1549.57,1210.97 1550.15,1210.97 1550.74,1210.97 1551.33,1210.97 1551.91,1210.97 1552.5,1210.97 1553.09,1210.97 1553.67,1210.97 1554.26,1210.97 1554.85,1210.97 1555.43,1210.97 1556.02,1210.97 1556.6,1210.97 1557.19,1210.97 1557.78,1210.97 1558.36,1210.97 1558.95,1210.97 1559.54,1210.97 1560.12,1210.97 1560.71,1210.97 1561.3,1210.97 1561.88,1210.97 1562.47,1210.97 1563.06,1210.97 1563.64,1210.97 1564.23,1210.97 1564.81,1210.97 1565.4,1210.97 1565.99,1210.97 1566.57,1210.97 1567.16,1210.97 1567.75,1210.97 1568.33,1210.97 1568.92,1210.97 1569.51,1210.97 1570.09,1210.97 1570.68,1210.97 1571.27,1210.97 1571.85,1210.97 1572.44,1210.97 1573.02,1210.97 1573.61,1210.97 1574.2,1210.97 1574.78,1210.97 1575.37,1210.97 1575.96,1210.97 1576.54,1210.97 1577.13,1210.97 1577.72,1210.97 1578.3,1210.97 1578.89,1210.97 1579.47,1210.97 1580.06,1210.97 1580.65,1210.97 1581.23,1210.97 1581.82,1210.97 1582.41,1210.97 1582.99,1210.97 1583.58,1210.97 1584.17,1210.97 1584.75,1210.97 1585.34,1210.97 1585.93,1210.97 1586.51,1210.97 1587.1,1210.97 1587.68,1210.97 1588.27,1210.97 1588.86,1210.97 1589.44,1210.97 1590.03,1210.97 1590.62,1210.97 1591.2,1210.97 1591.79,1210.97 1592.38,1210.97 1592.96,1210.97 1593.55,1210.97 1594.14,1210.97 1594.72,1210.97 1595.31,1210.97 1595.89,1210.97 1596.48,1210.97 1597.07,1210.97 1597.65,1210.97 1598.24,1210.97 1598.83,1210.97 1599.41,1210.97 1600,1210.97 1600.59,1210.97 1601.17,1210.97 1601.76,1210.97 1602.34,1210.97 1602.93,1210.97 1603.52,1210.97 1604.1,1210.97 1604.69,1210.97 1605.28,1210.97 1605.86,1210.97 1606.45,1210.97 1607.04,1210.97 1607.62,1210.97 1608.21,1210.97 1608.8,1210.97 1609.38,1210.97 1609.97,1210.97 1610.55,1210.97 1611.14,1210.97 1611.73,1210.97 1612.31,1210.97 1612.9,1210.97 1613.49,1210.97 1614.07,1210.97 1614.66,1210.97 1615.25,1210.97 1615.83,1210.97 1616.42,1210.97 1617.01,1210.97 1617.59,1210.97 1618.18,1210.97 1618.76,1210.97 1619.35,1210.97 1619.94,1210.97 1620.52,1210.97 1621.11,1210.97 1621.7,1210.97 1622.28,1210.97 1622.87,1210.97 1623.46,1210.97 1624.04,1210.97 1624.63,1210.97 1625.22,1210.97 1625.8,1210.97 1626.39,1210.97 1626.97,1210.97 1627.56,1210.97 1628.15,1210.97 1628.73,1210.97 1629.32,1210.97 1629.91,1210.97 1630.49,1210.97 1631.08,1210.97 1631.67,1210.97 1632.25,1210.97 1632.84,1210.97 1633.42,1210.97 1634.01,1210.97 1634.6,1210.97 1635.18,1210.97 1635.77,1210.97 1636.36,1210.97 1636.94,1210.97 1637.53,1210.97 1638.12,1210.97 1638.7,1210.97 1639.29,1210.97 1639.88,1210.97 1640.46,1210.97 1641.05,1210.97 1641.63,1210.97 1642.22,1210.97 1642.81,1210.97 1643.39,1210.97 1643.98,1210.97 1644.57,1210.97 1645.15,1210.97 1645.74,1210.97 1646.33,1210.97 1646.91,1210.97 1647.5,1210.97 1648.09,1210.97 1648.67,1210.97 1649.26,1210.97 1649.84,1210.97 1650.43,1210.97 1651.02,1210.97 1651.6,1210.97 1652.19,1210.97 1652.78,1210.97 1653.36,1210.97 1653.95,1210.97 1654.54,1210.97 1655.12,1210.97 1655.71,1210.97 1656.29,1210.97 1656.88,1210.97 1657.47,1210.97 1658.05,1210.97 1658.64,1210.97 1659.23,1210.97 1659.81,1210.97 1660.4,1210.97 1660.99,1210.97 1661.57,1210.97 1662.16,1210.97 1662.75,1210.97 1663.33,1210.97 1663.92,1210.97 1664.5,1210.97 1665.09,1210.97 1665.68,1210.97 1666.26,1210.97 1666.85,1210.97 1667.44,1210.97 1668.02,1210.97 1668.61,1210.97 1669.2,1210.97 1669.78,1210.97 1670.37,1210.97 1670.96,1210.97 1671.54,1210.97 1672.13,1210.97 1672.71,1210.97 1673.3,1210.97 1673.89,1210.97 1674.47,1210.97 1675.06,1210.97 1675.65,1210.97 1676.23,1210.97 1676.82,1210.97 1677.41,1210.97 1677.99,1210.97 1678.58,1210.97 1679.17,1210.97 1679.75,1210.97 1680.34,1210.97 1680.92,1210.97 1681.51,1210.97 1682.1,1210.97 1682.68,1210.97 1683.27,1210.97 1683.86,1210.97 1684.44,1210.97 1685.03,1210.97 1685.62,1210.97 1686.2,1210.97 1686.79,1210.97 1687.37,1210.97 1687.96,1210.97 1688.55,1210.97 1689.13,1210.97 1689.72,1210.97 1690.31,1210.97 1690.89,1210.97 1691.48,1210.97 1692.07,1210.97 1692.65,1210.97 1693.24,1210.97 1693.83,1210.97 1694.41,1210.97 1695,1210.97 1695.58,1210.97 1696.17,1210.97 1696.76,1210.97 1697.34,1210.97 1697.93,1210.97 1698.52,1210.97 1699.1,1210.97 1699.69,1210.97 1700.28,1210.97 1700.86,1210.97 1701.45,1210.97 1702.04,1210.97 1702.62,1210.97 1703.21,1210.97 1703.79,1210.97 1704.38,1210.97 1704.97,1210.97 1705.55,1210.97 1706.14,1210.97 1706.73,1210.97 1707.31,1210.97 1707.9,1210.97 1708.49,1210.97 1709.07,1210.97 1709.66,1210.97 1710.24,1210.97 1710.83,1210.97 1711.42,1210.97 1712,1210.97 1712.59,1210.97 1713.18,1210.97 1713.76,1210.97 1714.35,1210.97 1714.94,1210.97 1715.52,1210.97 1716.11,1210.97 1716.7,1210.97 1717.28,1210.97 1717.87,1210.97 1718.45,1210.97 1719.04,1210.97 1719.63,1210.97 1720.21,1210.97 1720.8,1210.97 1721.39,1210.97 1721.97,1210.97 1722.56,1210.97 1723.15,1210.97 1723.73,1210.97 1724.32,1210.97 1724.91,1210.97 1725.49,1210.97 1726.08,1210.97 1726.66,1210.97 1727.25,1210.97 1727.84,1210.97 1728.42,1210.97 1729.01,1210.97 1729.6,1210.97 1730.18,1210.97 1730.77,1210.97 1731.36,1210.97 1731.94,1210.97 1732.53,1210.97 1733.11,1210.97 1733.7,1210.97 1734.29,1210.97 1734.87,1210.97 1735.46,1210.97 1736.05,1210.97 1736.63,1210.97 1737.22,1210.97 1737.81,1210.97 1738.39,1210.97 1738.98,1210.97 1739.57,1210.97 1740.15,1210.97 1740.74,1210.97 1741.32,1210.97 1741.91,1210.97 1742.5,1210.97 1743.08,1210.97 1743.67,1210.97 1744.26,1210.97 1744.84,1210.97 1745.43,1210.97 1746.02,1210.97 1746.6,1210.97 1747.19,1210.97 1747.78,1210.97 1748.36,1210.97 1748.95,1210.97 1749.53,1210.97 1750.12,1210.97 1750.71,1210.97 1751.29,1210.97 1751.88,1210.97 1752.47,1210.97 1753.05,1210.97 1753.64,1210.97 1754.23,1210.97 1754.81,1210.97 1755.4,1210.97 1755.99,1210.97 1756.57,1210.97 1757.16,1210.97 1757.74,1210.97 1758.33,1210.97 1758.92,1210.97 1759.5,1210.97 1760.09,1210.97 1760.68,1210.97 1761.26,1210.97 1761.85,1210.97 1762.44,1210.97 1763.02,1210.97 1763.61,1210.97 1764.19,1210.97 1764.78,1210.97 1765.37,1210.97 1765.95,1210.97 1766.54,1210.97 1767.13,1210.97 1767.71,1210.97 1768.3,1210.97 1768.89,1210.97 1769.47,1210.97 1770.06,1210.97 1770.65,1210.97 1771.23,1210.97 1771.82,1210.97 1772.4,1210.97 1772.99,1210.97 1773.58,1210.97 1774.16,1210.97 1774.75,1210.97 1775.34,1210.97 1775.92,1210.97 1776.51,1210.97 1777.1,1210.97 1777.68,1210.97 1778.27,1210.97 1778.86,1210.97 1779.44,1210.97 1780.03,1210.97 1780.61,1210.97 1781.2,1210.97 1781.79,1210.97 1782.37,1210.97 1782.96,1210.97 1783.55,1210.97 1784.13,1210.97 1784.72,1210.97 1785.31,1210.97 1785.89,1210.97 1786.48,1210.97 1787.06,1210.97 1787.65,1210.97 1788.24,1210.97 1788.82,1210.97 1789.41,1210.97 1790,1210.97 1790.58,1210.97 1791.17,1210.97 1791.76,1210.97 1792.34,1210.97 1792.93,1210.97 1793.52,1210.97 1794.1,1210.97 1794.69,1210.97 1795.27,1210.97 1795.86,1210.97 1796.45,1210.97 1797.03,1210.97 1797.62,1210.97 1798.21,1210.97 1798.79,1210.97 1799.38,1210.97 1799.97,1210.97 1800.55,1210.97 1801.14,1210.97 1801.73,1210.97 1802.31,1210.97 1802.9,1210.97 1803.48,1210.97 1804.07,1210.97 1804.66,1210.97 1805.24,1210.97 1805.83,1210.97 1806.42,1210.97 1807,1210.97 1807.59,1210.97 1808.18,1210.97 1808.76,1210.97 1809.35,1210.97 1809.94,1210.97 1810.52,1210.97 1811.11,1210.97 1811.69,1210.97 1812.28,1210.97 1812.87,1210.97 1813.45,1210.97 1814.04,1210.97 1814.63,1210.97 1815.21,1210.97 1815.8,1210.97 1816.39,1210.97 1816.97,1210.97 1817.56,1210.97 1818.14,1210.97 1818.73,1210.97 1819.32,1210.97 1819.9,1210.97 1820.49,1210.97 1821.08,1210.97 1821.66,1210.97 1822.25,1210.97 1822.84,1210.97 1823.42,1210.97 1824.01,1210.97 1824.6,1210.97 1825.18,1210.97 1825.77,1210.97 1826.35,1210.97 1826.94,1210.97 1827.53,1210.97 1828.11,1210.97 1828.7,1210.97 1829.29,1210.97 1829.87,1210.97 1830.46,1210.97 1831.05,1210.97 1831.63,1210.97 1832.22,1210.97 1832.81,1210.97 1833.39,1210.97 1833.98,1210.97 1834.56,1210.97 1835.15,1210.97 1835.74,1210.97 1836.32,1210.97 1836.91,1210.97 1837.5,1210.97 1838.08,1210.97 1838.67,1210.97 1839.26,1210.97 1839.84,1210.97 1840.43,1210.97 1841.01,1210.97 1841.6,1210.97 1842.19,1210.97 1842.77,1210.97 1843.36,1210.97 1843.95,1210.97 1844.53,1210.97 1845.12,1210.97 1845.71,1210.97 1846.29,1210.97 1846.88,1210.97 1847.47,1210.97 1848.05,1210.97 1848.64,1210.97 1849.22,1210.97 1849.81,1210.97 1850.4,1210.97 1850.98,1210.97 1851.57,1210.97 1852.16,1210.97 1852.74,1210.97 1853.33,1210.97 1853.92,1210.97 1854.5,1210.97 1855.09,1210.97 1855.68,1210.97 1856.26,1210.97 1856.85,1210.97 1857.43,1210.97 1858.02,1210.97 1858.61,1210.97 1859.19,1210.97 1859.78,1210.97 1860.37,1210.97 1860.95,1210.97 1861.54,1210.97 1862.13,1210.97 1862.71,1210.97 1863.3,1210.97 1863.88,1210.97 1864.47,1210.97 1865.06,1210.97 1865.64,1210.97 1866.23,1210.97 1866.82,1210.97 1867.4,1210.97 1867.99,1210.97 1868.58,1210.97 1869.16,1210.97 1869.75,1210.97 1870.34,1210.97 1870.92,1210.97 1871.51,1210.97 1872.09,1210.97 1872.68,1210.97 1873.27,1210.97 1873.85,1210.97 1874.44,1210.97 1875.03,1210.97 1875.61,1210.97 1876.2,1210.97 1876.79,1210.97 1877.37,1210.97 1877.96,1210.97 1878.55,1210.97 1879.13,1210.97 1879.72,1210.97 1880.3,1210.97 1880.89,1210.97 1881.48,1210.97 1882.06,1210.97 1882.65,1210.97 1883.24,1210.97 1883.82,1210.97 1884.41,1210.97 1885,1210.97 1885.58,1210.97 1886.17,1210.97 1886.76,1210.97 1887.34,1210.97 1887.93,1210.97 1888.51,1210.97 1889.1,1210.97 1889.69,1210.97 1890.27,1210.97 1890.86,1210.97 1891.45,1210.97 1892.03,1210.97 1892.62,1210.97 1893.21,1210.97 1893.79,1210.97 1894.38,1210.97 1894.96,1210.97 1895.55,1210.97 1896.14,1210.97 1896.72,1210.97 1897.31,1210.97 1897.9,1210.97 1898.48,1210.97 1899.07,1210.97 1899.66,1210.97 1900.24,1210.97 1900.83,1210.97 1901.42,1210.97 1902,1210.97 1902.59,1210.97 1903.17,1210.97 1903.76,1210.97 1904.35,1210.97 1904.93,1210.97 1905.52,1210.97 1906.11,1210.97 1906.69,1210.97 1907.28,1210.97 1907.87,1210.97 1908.45,1210.97 1909.04,1210.97 1909.63,1210.97 1910.21,1210.97 1910.8,1210.97 1911.38,1210.97 1911.97,1210.97 1912.56,1210.97 1913.14,1210.97 1913.73,1210.97 1914.32,1210.97 1914.9,1210.97 1915.49,1210.97 1916.08,1210.97 1916.66,1210.97 1917.25,1210.97 1917.83,1210.97 1918.42,1210.97 1919.01,1210.97 1919.59,1210.97 1920.18,1210.97 1920.77,1210.97 1921.35,1210.97 1921.94,1210.97 1922.53,1210.97 1923.11,1210.97 1923.7,1210.97 1924.29,1210.97 1924.87,1210.97 1925.46,1210.97 1926.04,1210.97 1926.63,1210.97 1927.22,1210.97 1927.8,1210.97 1928.39,1210.97 1928.98,1210.97 1929.56,1210.97 1930.15,1210.97 1930.74,1210.97 1931.32,1210.97 1931.91,1210.97 1932.5,1210.97 1933.08,1210.97 1933.67,1210.97 1934.25,1210.97 1934.84,1210.97 1935.43,1210.97 1936.01,1210.97 1936.6,1210.97 1937.19,1210.97 1937.77,1210.97 1938.36,1210.97 1938.95,1210.97 1939.53,1210.97 1940.12,1210.97 1940.71,1210.97 1941.29,1210.97 1941.88,1210.97 1942.46,1210.97 1943.05,1210.97 1943.64,1210.97 1944.22,1210.97 1944.81,1210.97 1945.4,1210.97 1945.98,1210.97 1946.57,1210.97 1947.16,1210.97 1947.74,1210.97 1948.33,1210.97 1948.91,1210.97 1949.5,1210.97 1950.09,1210.97 1950.67,1210.97 1951.26,1210.97 1951.85,1210.97 1952.43,1210.97 1953.02,1210.97 1953.61,1210.97 1954.19,1210.97 1954.78,1210.97 1955.37,1210.97 1955.95,1210.97 1956.54,1210.97 1957.12,1210.97 1957.71,1210.97 1958.3,1210.97 1958.88,1210.97 1959.47,1210.97 1960.06,1210.97 1960.64,1210.97 1961.23,1210.97 1961.82,1210.97 1962.4,1210.97 1962.99,1210.97 1963.58,1210.97 1964.16,1210.97 1964.75,1210.97 1965.33,1210.97 1965.92,1210.97 1966.51,1210.97 1967.09,1210.97 1967.68,1210.97 1968.27,1210.97 1968.85,1210.97 1969.44,1210.97 1970.03,1210.97 1970.61,1210.97 1971.2,1210.97 1971.78,1210.97 1972.37,1210.97 1972.96,1210.97 1973.54,1210.97 1974.13,1210.97 1974.72,1210.97 1975.3,1210.97 1975.89,1210.97 1976.48,1210.97 1977.06,1210.97 1977.65,1210.97 1978.24,1210.97 1978.82,1210.97 1979.41,1210.97 1979.99,1210.97 1980.58,1210.97 1981.17,1210.97 1981.75,1210.97 1982.34,1210.97 1982.93,1210.97 1983.51,1210.97 1984.1,1210.97 1984.69,1210.97 1985.27,1210.97 1985.86,1210.97 1986.45,1210.97 1987.03,1210.97 1987.62,1210.97 1988.2,1210.97 1988.79,1210.97 1989.38,1210.97 1989.96,1210.97 1990.55,1210.97 1991.14,1210.97 1991.72,1210.97 1992.31,1210.97 1992.9,1210.97 1993.48,1210.97 1994.07,1210.97 1994.65,1210.97 1995.24,1210.97 1995.83,1210.97 1996.41,1210.97 1997,1210.97 1997.59,1210.97 1998.17,1210.97 1998.76,1210.97 1999.35,1210.97 1999.93,1210.97 2000.52,1210.97 2001.11,1210.97 2001.69,1210.97 2002.28,1210.97 2002.86,1210.97 2003.45,1210.97 2004.04,1210.97 2004.62,1210.97 2005.21,1210.97 2005.8,1210.97 2006.38,1210.97 2006.97,1210.97 2007.56,1210.97 2008.14,1210.97 2008.73,1210.97 2009.32,1210.97 2009.9,1210.97 2010.49,1210.97 2011.07,1210.97 2011.66,1210.97 2012.25,1210.97 2012.83,1210.97 2013.42,1210.97 2014.01,1210.97 2014.59,1210.97 2015.18,1210.97 2015.77,1210.97 2016.35,1210.97 2016.94,1210.97 2017.53,1210.97 2018.11,1210.97 2018.7,1210.97 2019.28,1210.97 2019.87,1210.97 2020.46,1210.97 2021.04,1210.97 2021.63,1210.97 2022.22,1210.97 2022.8,1210.97 2023.39,1210.97 2023.98,1210.97 2024.56,1210.97 2025.15,1210.97 2025.73,1210.97 2026.32,1210.97 2026.91,1210.97 2027.49,1210.97 2028.08,1210.97 2028.67,1210.97 2029.25,1210.97 2029.84,1210.97 2030.43,1210.97 2031.01,1210.97 2031.6,1210.97 2032.19,1210.97 2032.77,1210.97 2033.36,1210.97 2033.94,1210.97 2034.53,1210.97 2035.12,1210.97 2035.7,1210.97 2036.29,1210.97 2036.88,1210.97 2037.46,1210.97 2038.05,1210.97 2038.64,1210.97 2039.22,1210.97 2039.81,1210.97 2040.4,1210.97 2040.98,1210.97 2041.57,1210.97 2042.15,1210.97 2042.74,1210.97 2043.33,1210.97 2043.91,1210.97 2044.5,1210.97 2045.09,1210.97 2045.67,1210.97 2046.26,1210.97 2046.85,1210.97 2047.43,1210.97 2048.02,1210.97 2048.6,1210.97 2049.19,1210.97 2049.78,1210.97 2050.36,1210.97 2050.95,1210.97 2051.54,1210.97 2052.12,1210.97 2052.71,1210.97 2053.3,1210.97 2053.88,1210.97 2054.47,1210.97 2055.06,1210.97 2055.64,1210.97 2056.23,1210.97 2056.81,1210.97 2057.4,1210.97 2057.99,1210.97 2058.57,1210.97 2059.16,1210.97 2059.75,1210.97 2060.33,1210.97 2060.92,1210.97 2061.51,1210.97 2062.09,1210.97 2062.68,1210.97 2063.27,1210.97 2063.85,1210.97 2064.44,1210.97 2065.02,1210.97 2065.61,1210.97 2066.2,1210.97 2066.78,1210.97 2067.37,1210.97 2067.96,1210.97 2068.54,1210.97 2069.13,1210.97 2069.72,1210.97 2070.3,1210.97 2070.89,1210.97 2071.48,1210.97 2072.06,1210.97 2072.65,1210.97 2073.23,1210.97 2073.82,1210.97 2074.41,1210.97 2074.99,1210.97 2075.58,1210.97 2076.17,1210.97 2076.75,1210.97 2077.34,1210.97 2077.93,1210.97 2078.51,1210.97 2079.1,1210.97 2079.68,1210.97 2080.27,1210.97 2080.86,1210.97 2081.44,1210.97 2082.03,1210.97 2082.62,1210.97 2083.2,1210.97 2083.79,1210.97 2084.38,1210.97 2084.96,1210.97 2085.55,1210.97 2086.14,1210.97 2086.72,1210.97 2087.31,1210.97 2087.89,1210.97 2088.48,1210.97 2089.07,1210.97 2089.65,1210.97 2090.24,1210.97 2090.83,1210.97 2091.41,1210.97 2092,1210.97 2092.59,1210.97 2093.17,1210.97 2093.76,1210.97 2094.35,1210.97 2094.93,1210.97 2095.52,1210.97 2096.1,1210.97 2096.69,1210.97 2097.28,1210.97 2097.86,1210.97 2098.45,1210.97 2099.04,1210.97 2099.62,1210.97 2100.21,1210.97 2100.8,1210.97 2101.38,1210.97 2101.97,1210.97 2102.55,1210.97 2103.14,1210.97 2103.73,1210.97 2104.31,1210.97 2104.9,1210.97 2105.49,1210.97 2106.07,1210.97 2106.66,1210.97 2107.25,1210.97 2107.83,1210.97 2108.42,1210.97 2109.01,1210.97 2109.59,1210.97 2110.18,1210.97 2110.76,1210.97 2111.35,1210.97 2111.94,1210.97 2112.52,1210.97 2113.11,1210.97 2113.7,1210.97 2114.28,1210.97 2114.87,1210.97 2115.46,1210.97 2116.04,1210.97 2116.63,1210.97 2117.22,1210.97 2117.8,1210.97 2118.39,1210.97 2118.97,1210.97 2119.56,1210.97 2120.15,1210.97 2120.73,1210.97 2121.32,1210.97 2121.91,1210.97 2122.49,1210.97 2123.08,1210.97 2123.67,1210.97 2124.25,1210.97 2124.84,1210.97 2125.42,1210.97 2126.01,1210.97 2126.6,1210.97 2127.18,1210.97 2127.77,1210.97 2128.36,1210.97 2128.94,1210.97 2129.53,1210.97 2130.12,1210.97 2130.7,1210.97 2131.29,1210.97 2131.88,1210.97 2132.46,1210.97 2133.05,1210.97 2133.63,1210.97 2134.22,1210.97 2134.81,1210.97 2135.39,1210.97 2135.98,1210.97 2136.57,1210.97 2137.15,1210.97 2137.74,1210.97 2138.33,1210.97 2138.91,1210.97 2139.5,1210.97 2140.09,1210.97 2140.67,1210.97 2141.26,1210.97 2141.84,1210.97 2142.43,1210.97 2143.02,1210.97 2143.6,1210.97 2144.19,1210.97 2144.78,1210.97 2145.36,1210.97 2145.95,1210.97 2146.54,1210.97 2147.12,1210.97 2147.71,1210.97 2148.3,1210.97 2148.88,1210.97 2149.47,1210.97 2150.05,1210.97 2150.64,1210.97 2151.23,1210.97 2151.81,1210.97 2152.4,1210.97 2152.99,1210.97 2153.57,1210.97 2154.16,1210.97 2154.75,1210.97 2155.33,1210.97 2155.92,1210.97 2156.5,1210.97 2157.09,1210.97 2157.68,1210.97 2158.26,1210.97 \"/>\n<path clip-path=\"url(#clip382)\" d=\"M986.025 1210.78 L986.612 1210.78 L987.198 1210.78 L987.785 1210.78 L988.371 1210.78 L988.957 1210.78 L989.544 1210.78 L990.13 1210.78 L990.717 1210.78 L991.303 1210.78 L991.889 1210.78 L992.476 1210.78 L993.062 1210.78 L993.649 1210.78 L994.235 1210.78 L994.822 1210.78 L995.408 1210.78 L995.994 1210.78 L996.581 1210.78 L997.167 1210.78 L997.754 1210.78 L998.34 1210.78 L998.926 1210.78 L999.513 1210.78 L1000.1 1210.78 L1000.69 1210.78 L1001.27 1210.78 L1001.86 1210.78 L1002.44 1210.78 L1003.03 1210.78 L1003.62 1210.78 L1004.2 1210.78 L1004.79 1210.78 L1005.38 1210.78 L1005.96 1210.78 L1006.55 1210.78 L1007.14 1210.78 L1007.72 1210.78 L1008.31 1210.78 L1008.9 1210.78 L1009.48 1210.78 L1010.07 1210.78 L1010.65 1210.78 L1011.24 1210.78 L1011.83 1210.78 L1012.41 1210.78 L1013 1210.78 L1013.59 1210.78 L1014.17 1210.78 L1014.76 1210.78 L1015.35 1210.78 L1015.93 1210.78 L1016.52 1210.78 L1017.11 1210.78 L1017.69 1210.78 L1018.28 1210.78 L1018.86 1210.78 L1019.45 1210.78 L1020.04 1210.78 L1020.62 1210.78 L1021.21 1210.78 L1021.8 1210.78 L1022.38 1210.78 L1022.97 1210.78 L1023.56 1210.78 L1024.14 1210.78 L1024.73 1210.78 L1025.32 1210.78 L1025.9 1210.78 L1026.49 1210.78 L1027.07 1210.78 L1027.66 1210.78 L1028.25 1210.78 L1028.83 1210.78 L1029.42 1210.78 L1030.01 1210.78 L1030.59 1210.78 L1031.18 1210.78 L1031.77 1210.78 L1032.35 1210.78 L1032.94 1210.78 L1033.52 1210.78 L1034.11 1210.78 L1034.7 1210.78 L1035.28 1210.78 L1035.87 1210.78 L1036.46 1210.78 L1037.04 1210.78 L1037.63 1210.78 L1038.22 1210.78 L1038.8 1210.78 L1039.39 1210.78 L1039.98 1210.78 L1040.56 1210.78 L1041.15 1210.78 L1041.73 1210.78 L1042.32 1210.78 L1042.91 1210.78 L1043.49 1210.78 L1044.08 1210.78 L1044.67 1210.78 L1045.25 1210.78 L1045.84 1210.78 L1046.43 1210.78 L1047.01 1210.78 L1047.6 1210.78 L1048.19 1210.78 L1048.77 1210.78 L1049.36 1210.78 L1049.94 1210.78 L1050.53 1210.78 L1051.12 1210.78 L1051.7 1210.78 L1052.29 1210.78 L1052.88 1210.78 L1053.46 1210.78 L1054.05 1210.78 L1054.64 1210.78 L1055.22 1210.78 L1055.81 1210.78 L1056.39 1210.78 L1056.98 1210.78 L1057.57 1210.78 L1058.15 1210.78 L1058.74 1210.78 L1059.33 1210.78 L1059.91 1210.78 L1060.5 1210.78 L1061.09 1210.78 L1061.67 1210.78 L1062.26 1210.78 L1062.85 1210.78 L1063.43 1210.78 L1064.02 1210.78 L1064.6 1210.78 L1065.19 1210.78 L1065.78 1210.78 L1066.36 1210.78 L1066.95 1210.78 L1067.54 1210.78 L1068.12 1210.78 L1068.71 1210.78 L1069.3 1210.78 L1069.88 1210.78 L1070.47 1210.78 L1071.06 1210.78 L1071.64 1210.78 L1072.23 1210.78 L1072.81 1210.78 L1073.4 1210.78 L1073.99 1210.78 L1074.57 1210.78 L1075.16 1210.78 L1075.75 1210.78 L1076.33 1210.78 L1076.92 1210.78 L1077.51 1210.78 L1078.09 1210.78 L1078.68 1210.78 L1079.26 1210.78 L1079.85 1210.78 L1080.44 1210.78 L1081.02 1210.78 L1081.61 1210.78 L1082.2 1210.78 L1082.78 1210.78 L1083.37 1210.78 L1083.96 1210.78 L1084.54 1210.78 L1085.13 1210.78 L1085.72 1210.78 L1086.3 1210.78 L1086.89 1210.78 L1087.47 1210.78 L1088.06 1210.78 L1088.65 1210.78 L1089.23 1210.78 L1089.82 1210.78 L1090.41 1210.78 L1090.99 1210.78 L1091.58 1210.78 L1092.17 1210.78 L1092.75 1210.78 L1093.34 1210.78 L1093.93 1210.78 L1094.51 1210.78 L1095.1 1210.78 L1095.68 1210.78 L1096.27 1210.78 L1096.86 1210.78 L1097.44 1210.78 L1098.03 1210.78 L1098.62 1210.78 L1099.2 1210.78 L1099.79 1210.78 L1100.38 1210.78 L1100.96 1210.78 L1101.55 1210.78 L1102.14 1210.78 L1102.72 1210.78 L1103.31 1210.78 L1103.89 1210.78 L1104.48 1210.78 L1105.07 1210.78 L1105.65 1210.78 L1106.24 1210.78 L1106.83 1210.78 L1107.41 1210.78 L1108 1210.78 L1108.59 1210.78 L1109.17 1210.78 L1109.76 1210.78 L1110.34 1210.78 L1110.93 1210.78 L1111.52 1210.78 L1112.1 1210.78 L1112.69 1210.78 L1113.28 1210.78 L1113.86 1210.78 L1114.45 1210.78 L1115.04 1210.78 L1115.62 1210.78 L1116.21 1210.78 L1116.8 1210.78 L1117.38 1210.78 L1117.97 1210.78 L1118.55 1210.78 L1119.14 1210.78 L1119.73 1210.78 L1120.31 1210.78 L1120.9 1210.78 L1121.49 1210.78 L1122.07 1210.78 L1122.66 1210.78 L1123.25 1210.78 L1123.83 1210.78 L1124.42 1210.78 L1125.01 1210.78 L1125.59 1210.78 L1126.18 1210.78 L1126.76 1210.78 L1127.35 1210.78 L1127.94 1210.78 L1128.52 1210.78 L1129.11 1210.78 L1129.7 1210.78 L1130.28 1210.78 L1130.87 1210.78 L1131.46 1210.78 L1132.04 1210.78 L1132.63 1210.78 L1133.21 1210.78 L1133.8 1210.78 L1134.39 1210.78 L1134.97 1210.78 L1135.56 1210.78 L1136.15 1210.78 L1136.73 1210.78 L1137.32 1210.78 L1137.91 1210.78 L1138.49 1210.78 L1139.08 1210.78 L1139.67 1210.78 L1140.25 1210.78 L1140.84 1210.78 L1141.42 1210.78 L1142.01 1210.78 L1142.6 1210.78 L1143.18 1210.78 L1143.77 1210.78 L1144.36 1210.78 L1144.94 1210.78 L1145.53 1210.78 L1146.12 1210.78 L1146.7 1210.78 L1147.29 1210.78 L1147.88 1210.78 L1148.46 1210.78 L1149.05 1210.78 L1149.63 1210.78 L1150.22 1210.78 L1150.81 1210.78 L1151.39 1210.78 L1151.98 1210.78 L1152.57 1210.78 L1153.15 1210.78 L1153.74 1210.78 L1154.33 1210.78 L1154.91 1210.78 L1155.5 1210.78 L1156.09 1210.78 L1156.67 1210.78 L1157.26 1210.78 L1157.84 1210.78 L1158.43 1210.78 L1159.02 1210.78 L1159.6 1210.78 L1160.19 1210.78 L1160.78 1210.78 L1161.36 1210.78 L1161.95 1210.78 L1162.54 1210.78 L1163.12 1210.78 L1163.71 1210.78 L1164.29 1210.78 L1164.88 1210.78 L1165.47 1210.78 L1166.05 1210.78 L1166.64 1210.78 L1167.23 1210.78 L1167.81 1210.78 L1168.4 1210.78 L1168.99 1210.78 L1169.57 1210.78 L1170.16 1210.78 L1170.75 1210.78 L1171.33 1210.78 L1171.92 1210.78 L1172.5 1210.78 L1173.09 1210.78 L1173.68 1210.78 L1174.26 1210.78 L1174.85 1210.78 L1175.44 1210.78 L1176.02 1210.78 L1176.61 1210.78 L1177.2 1210.78 L1177.78 1210.78 L1178.37 1210.78 L1178.96 1210.78 L1179.54 1210.78 L1180.13 1210.78 L1180.71 1210.78 L1181.3 1210.78 L1181.89 1210.78 L1182.47 1210.78 L1183.06 1210.78 L1183.65 1210.78 L1184.23 1210.78 L1184.82 1210.78 L1185.41 1210.78 L1185.99 1210.78 L1186.58 1210.78 L1187.16 1210.78 L1187.75 1210.78 L1188.34 1210.78 L1188.92 1210.78 L1189.51 1210.78 L1190.1 1210.78 L1190.68 1210.78 L1191.27 1210.78 L1191.86 1210.78 L1192.44 1210.78 L1193.03 1210.78 L1193.62 1210.78 L1194.2 1210.78 L1194.79 1210.78 L1195.37 1210.78 L1195.96 1210.78 L1196.55 1210.78 L1197.13 1210.78 L1197.72 1210.78 L1198.31 1210.78 L1198.89 1210.78 L1199.48 1210.78 L1200.07 1210.78 L1200.65 1210.78 L1201.24 1210.78 L1201.83 1210.78 L1202.41 1210.78 L1203 1210.78 L1203.58 1210.78 L1204.17 1210.78 L1204.76 1210.78 L1205.34 1210.78 L1205.93 1210.78 L1206.52 1210.78 L1207.1 1210.78 L1207.69 1210.78 L1208.28 1210.78 L1208.86 1210.78 L1209.45 1210.78 L1210.03 1210.78 L1210.62 1210.78 L1211.21 1210.78 L1211.79 1210.78 L1212.38 1210.78 L1212.97 1210.78 L1213.55 1210.78 L1214.14 1210.78 L1214.73 1210.78 L1215.31 1210.78 L1215.9 1210.78 L1216.49 1210.78 L1217.07 1210.78 L1217.66 1210.78 L1218.24 1210.78 L1218.83 1210.78 L1219.42 1210.78 L1220 1210.78 L1220.59 1210.78 L1221.18 1210.78 L1221.76 1210.78 L1222.35 1210.78 L1222.94 1210.78 L1223.52 1210.78 L1224.11 1210.78 L1224.7 1210.78 L1225.28 1210.78 L1225.87 1210.78 L1226.45 1210.78 L1227.04 1210.78 L1227.63 1210.78 L1228.21 1210.78 L1228.8 1210.78 L1229.39 1210.78 L1229.97 1210.78 L1230.56 1210.78 L1231.15 1210.78 L1231.73 1210.78 L1232.32 1210.78 L1232.91 1210.78 L1233.49 1210.78 L1234.08 1210.78 L1234.66 1210.78 L1235.25 1210.78 L1235.84 1210.78 L1236.42 1210.78 L1237.01 1210.78 L1237.6 1210.78 L1238.18 1210.78 L1238.77 1210.78 L1239.36 1210.78 L1239.94 1210.78 L1240.53 1210.78 L1241.11 1210.78 L1241.7 1210.78 L1242.29 1210.78 L1242.87 1210.78 L1243.46 1210.78 L1244.05 1210.78 L1244.63 1210.78 L1245.22 1210.78 L1245.81 1210.78 L1246.39 1210.78 L1246.98 1210.78 L1247.57 1210.78 L1248.15 1210.78 L1248.74 1210.78 L1249.32 1210.78 L1249.91 1210.78 L1250.5 1210.78 L1251.08 1210.78 L1251.67 1210.78 L1252.26 1210.78 L1252.84 1210.78 L1253.43 1210.78 L1254.02 1210.78 L1254.6 1210.78 L1255.19 1210.78 L1255.78 1210.78 L1256.36 1210.78 L1256.95 1210.78 L1257.53 1210.78 L1258.12 1210.78 L1258.71 1210.78 L1259.29 1210.78 L1259.88 1210.78 L1260.47 1210.78 L1261.05 1210.78 L1261.64 1210.78 L1262.23 1210.78 L1262.81 1210.78 L1263.4 1210.78 L1263.98 1210.78 L1264.57 1210.78 L1265.16 1210.78 L1265.74 1210.78 L1266.33 1210.78 L1266.92 1210.78 L1267.5 1210.78 L1268.09 1210.78 L1268.68 1210.78 L1269.26 1210.78 L1269.85 1210.78 L1270.44 1210.78 L1271.02 1210.78 L1271.61 1210.78 L1272.19 1210.78 L1272.78 1210.78 L1273.37 1210.78 L1273.95 1210.78 L1274.54 1210.78 L1275.13 1210.78 L1275.71 1210.78 L1276.3 1210.78 L1276.89 1210.78 L1277.47 1210.78 L1278.06 1210.78 L1278.65 1210.78 L1279.23 1210.78 L1279.82 1210.78 L1280.4 1210.78 L1280.99 1210.78 L1281.58 1210.78 L1282.16 1210.78 L1282.75 1210.78 L1283.34 1210.78 L1283.92 1210.78 L1284.51 1210.78 L1285.1 1210.78 L1285.68 1210.78 L1286.27 1210.78 L1286.86 1210.78 L1287.44 1210.78 L1288.03 1210.78 L1288.61 1210.78 L1289.2 1210.78 L1289.79 1210.78 L1290.37 1210.78 L1290.96 1210.78 L1291.55 1210.78 L1292.13 1210.78 L1292.72 1210.78 L1293.31 1210.78 L1293.89 1210.78 L1294.48 1210.78 L1295.06 1210.78 L1295.65 1210.78 L1296.24 1210.78 L1296.82 1210.78 L1297.41 1210.78 L1298 1210.78 L1298.58 1210.78 L1299.17 1210.78 L1299.76 1210.78 L1300.34 1210.78 L1300.93 1210.78 L1301.52 1210.78 L1302.1 1210.78 L1302.69 1210.78 L1303.27 1210.78 L1303.86 1210.78 L1304.45 1210.78 L1305.03 1210.78 L1305.62 1210.78 L1306.21 1210.78 L1306.79 1210.78 L1307.38 1210.78 L1307.97 1210.78 L1308.55 1210.78 L1309.14 1210.78 L1309.73 1210.78 L1310.31 1210.78 L1310.9 1210.78 L1311.48 1210.78 L1312.07 1210.78 L1312.66 1210.78 L1313.24 1210.78 L1313.83 1210.78 L1314.42 1210.78 L1315 1210.78 L1315.59 1210.78 L1316.18 1210.78 L1316.76 1210.78 L1317.35 1210.78 L1317.93 1210.78 L1318.52 1210.78 L1319.11 1210.78 L1319.69 1210.78 L1320.28 1210.78 L1320.87 1210.78 L1321.45 1210.78 L1322.04 1210.78 L1322.63 1210.78 L1323.21 1210.78 L1323.8 1210.78 L1324.39 1210.78 L1324.97 1210.78 L1325.56 1210.78 L1326.14 1210.78 L1326.73 1210.78 L1327.32 1210.78 L1327.9 1210.78 L1328.49 1210.78 L1329.08 1210.78 L1329.66 1210.78 L1330.25 1210.78 L1330.84 1210.78 L1331.42 1210.78 L1332.01 1210.78 L1332.6 1210.78 L1333.18 1210.78 L1333.77 1210.78 L1334.35 1210.78 L1334.94 1210.78 L1335.53 1210.78 L1336.11 1210.78 L1336.7 1210.78 L1337.29 1210.78 L1337.87 1210.78 L1338.46 1210.78 L1339.05 1210.78 L1339.63 1210.78 L1340.22 1210.78 L1340.8 1210.78 L1341.39 1210.78 L1341.98 1210.78 L1342.56 1210.78 L1343.15 1210.78 L1343.74 1210.78 L1344.32 1210.78 L1344.91 1210.78 L1345.5 1210.78 L1346.08 1210.78 L1346.67 1210.78 L1347.26 1210.78 L1347.84 1210.78 L1348.43 1210.78 L1349.01 1210.78 L1349.6 1210.78 L1350.19 1210.78 L1350.77 1210.78 L1351.36 1210.78 L1351.95 1210.78 L1352.53 1210.78 L1353.12 1210.78 L1353.71 1210.78 L1354.29 1210.78 L1354.88 1210.78 L1355.47 1210.78 L1356.05 1210.78 L1356.64 1210.78 L1357.22 1210.78 L1357.81 1210.78 L1358.4 1210.78 L1358.98 1210.78 L1359.57 1210.78 L1360.16 1210.78 L1360.74 1210.78 L1361.33 1210.78 L1361.92 1210.78 L1362.5 1210.78 L1363.09 1210.78 L1363.68 1210.78 L1364.26 1210.78 L1364.85 1210.78 L1365.43 1210.78 L1366.02 1210.78 L1366.61 1210.78 L1367.19 1210.78 L1367.78 1210.78 L1368.37 1210.78 L1368.95 1210.78 L1369.54 1210.78 L1370.13 1210.78 L1370.71 1210.78 L1371.3 1210.78 L1371.88 1210.78 L1372.47 1210.78 L1373.06 1210.78 L1373.64 1210.78 L1374.23 1210.78 L1374.82 1210.78 L1375.4 1210.78 L1375.99 1210.78 L1376.58 1210.78 L1377.16 1210.78 L1377.75 1210.78 L1378.34 1210.78 L1378.92 1210.78 L1379.51 1210.78 L1380.09 1210.78 L1380.68 1210.78 L1381.27 1210.78 L1381.85 1210.78 L1382.44 1210.78 L1383.03 1210.78 L1383.61 1210.78 L1384.2 1210.78 L1384.79 1210.78 L1385.37 1210.78 L1385.96 1210.78 L1386.55 1210.78 L1387.13 1210.78 L1387.72 1210.78 L1388.3 1210.78 L1388.89 1210.78 L1389.48 1210.78 L1390.06 1210.78 L1390.65 1210.78 L1391.24 1210.78 L1391.82 1210.78 L1392.41 1210.78 L1393 1210.78 L1393.58 1210.78 L1394.17 1210.78 L1394.75 1210.78 L1395.34 1210.78 L1395.93 1210.78 L1396.51 1210.78 L1397.1 1210.78 L1397.69 1210.78 L1398.27 1210.78 L1398.86 1210.78 L1399.45 1210.78 L1400.03 1210.78 L1400.62 1210.78 L1401.21 1210.78 L1401.79 1210.78 L1402.38 1210.78 L1402.96 1210.78 L1403.55 1210.78 L1404.14 1210.78 L1404.72 1210.78 L1405.31 1210.78 L1405.9 1210.78 L1406.48 1210.78 L1407.07 1210.78 L1407.66 1210.78 L1408.24 1210.78 L1408.83 1210.78 L1409.42 1210.78 L1410 1210.78 L1410.59 1210.78 L1411.17 1210.78 L1411.76 1210.78 L1412.35 1210.78 L1412.93 1210.78 L1413.52 1210.78 L1414.11 1210.78 L1414.69 1210.78 L1415.28 1210.78 L1415.87 1210.78 L1416.45 1210.78 L1417.04 1210.78 L1417.63 1210.78 L1418.21 1210.78 L1418.8 1210.78 L1419.38 1210.78 L1419.97 1210.78 L1420.56 1210.78 L1421.14 1210.78 L1421.73 1210.78 L1422.32 1210.78 L1422.9 1210.78 L1423.49 1210.78 L1424.08 1210.78 L1424.66 1210.78 L1425.25 1210.78 L1425.83 1210.78 L1426.42 1210.78 L1427.01 1210.78 L1427.59 1210.78 L1428.18 1210.78 L1428.77 1210.78 L1429.35 1210.78 L1429.94 1210.78 L1430.53 1210.78 L1431.11 1210.78 L1431.7 1210.78 L1432.29 1210.78 L1432.87 1210.78 L1433.46 1210.78 L1434.04 1210.78 L1434.63 1210.78 L1435.22 1210.78 L1435.8 1210.78 L1436.39 1210.78 L1436.98 1210.78 L1437.56 1210.78 L1438.15 1210.78 L1438.74 1210.78 L1439.32 1210.78 L1439.91 1210.78 L1440.5 1210.78 L1441.08 1210.78 L1441.67 1210.78 L1442.25 1210.78 L1442.84 1210.78 L1443.43 1210.78 L1444.01 1210.78 L1444.6 1210.78 L1445.19 1210.78 L1445.77 1210.78 L1446.36 1210.78 L1446.95 1210.78 L1447.53 1210.78 L1448.12 1210.78 L1448.7 1210.78 L1449.29 1210.78 L1449.88 1210.78 L1450.46 1210.78 L1451.05 1210.78 L1451.64 1210.78 L1452.22 1210.78 L1452.81 1210.78 L1453.4 1210.78 L1453.98 1210.78 L1454.57 1210.78 L1455.16 1210.78 L1455.74 1210.78 L1456.33 1210.78 L1456.91 1210.78 L1457.5 1210.78 L1458.09 1210.78 L1458.67 1210.78 L1459.26 1210.78 L1459.85 1210.78 L1460.43 1210.78 L1461.02 1210.78 L1461.61 1210.78 L1462.19 1210.78 L1462.78 1210.78 L1463.37 1210.78 L1463.95 1210.78 L1464.54 1210.78 L1465.12 1210.78 L1465.71 1210.78 L1466.3 1210.78 L1466.88 1210.78 L1467.47 1210.78 L1468.06 1210.78 L1468.64 1210.78 L1469.23 1210.78 L1469.82 1210.78 L1470.4 1210.78 L1470.99 1210.78 L1471.57 1210.78 L1472.16 1210.78 L1472.75 1210.78 L1473.33 1210.78 L1473.92 1210.78 L1474.51 1210.78 L1475.09 1210.78 L1475.68 1210.78 L1476.27 1210.78 L1476.85 1210.78 L1477.44 1210.78 L1478.03 1210.78 L1478.61 1210.78 L1479.2 1210.78 L1479.78 1210.78 L1480.37 1210.78 L1480.96 1210.78 L1481.54 1210.78 L1482.13 1210.78 L1482.72 1210.78 L1483.3 1210.78 L1483.89 1210.78 L1484.48 1210.78 L1485.06 1210.78 L1485.65 1210.78 L1486.24 1210.78 L1486.82 1210.78 L1487.41 1210.78 L1487.99 1210.78 L1488.58 1210.78 L1489.17 1210.78 L1489.75 1210.78 L1490.34 1210.78 L1490.93 1210.78 L1491.51 1210.78 L1492.1 1210.78 L1492.69 1210.78 L1493.27 1210.78 L1493.86 1210.78 L1494.45 1210.78 L1495.03 1210.78 L1495.62 1210.78 L1496.2 1210.78 L1496.79 1210.78 L1497.38 1210.78 L1497.96 1210.78 L1498.55 1210.78 L1499.14 1210.78 L1499.72 1210.78 L1500.31 1210.78 L1500.9 1210.78 L1501.48 1210.78 L1502.07 1210.78 L1502.65 1210.78 L1503.24 1210.78 L1503.83 1210.78 L1504.41 1210.78 L1505 1210.78 L1505.59 1210.78 L1506.17 1210.78 L1506.76 1210.78 L1507.35 1210.78 L1507.93 1210.78 L1508.52 1210.78 L1509.11 1210.78 L1509.69 1210.78 L1510.28 1210.78 L1510.86 1210.78 L1511.45 1210.78 L1512.04 1210.78 L1512.62 1210.78 L1513.21 1210.78 L1513.8 1210.78 L1514.38 1210.78 L1514.97 1210.78 L1515.56 1210.78 L1516.14 1210.78 L1516.73 1210.78 L1517.32 1210.78 L1517.9 1210.78 L1518.49 1210.78 L1519.07 1210.78 L1519.66 1210.78 L1520.25 1210.78 L1520.83 1210.78 L1521.42 1210.78 L1522.01 1210.78 L1522.59 1210.78 L1523.18 1210.78 L1523.77 1210.78 L1524.35 1210.78 L1524.94 1210.78 L1525.52 1210.78 L1526.11 1210.78 L1526.7 1210.78 L1527.28 1210.78 L1527.87 1210.78 L1528.46 1210.78 L1529.04 1210.78 L1529.63 1210.78 L1530.22 1210.78 L1530.8 1210.78 L1531.39 1210.78 L1531.98 1210.78 L1532.56 1210.78 L1533.15 1210.78 L1533.73 1210.78 L1534.32 1210.78 L1534.91 1210.78 L1535.49 1210.78 L1536.08 1210.78 L1536.67 1210.78 L1537.25 1210.78 L1537.84 1210.78 L1538.43 1210.78 L1539.01 1210.78 L1539.6 1210.78 L1540.19 1210.78 L1540.77 1210.78 L1541.36 1210.78 L1541.94 1210.78 L1542.53 1210.78 L1543.12 1210.78 L1543.7 1210.78 L1544.29 1210.78 L1544.88 1210.78 L1545.46 1210.78 L1546.05 1210.78 L1546.64 1210.78 L1547.22 1210.78 L1547.81 1210.78 L1548.4 1210.78 L1548.98 1210.78 L1549.57 1210.78 L1550.15 1210.78 L1550.74 1210.78 L1551.33 1210.78 L1551.91 1210.78 L1552.5 1210.78 L1553.09 1210.78 L1553.67 1210.78 L1554.26 1210.78 L1554.85 1210.78 L1555.43 1210.78 L1556.02 1210.78 L1556.6 1210.78 L1557.19 1210.78 L1557.78 1210.78 L1558.36 1210.78 L1558.95 1210.78 L1559.54 1210.78 L1560.12 1210.78 L1560.71 1210.78 L1561.3 1210.78 L1561.88 1210.78 L1562.47 1210.78 L1563.06 1210.78 L1563.64 1210.78 L1564.23 1210.78 L1564.81 1210.78 L1565.4 1210.78 L1565.99 1210.78 L1566.57 1210.78 L1567.16 1210.78 L1567.75 1210.78 L1568.33 1210.78 L1568.92 1210.78 L1569.51 1210.78 L1570.09 1210.78 L1570.68 1210.78 L1571.27 1210.78 L1571.85 1210.78 L1572.44 1210.78 L1573.02 1210.78 L1573.61 1210.78 L1574.2 1210.78 L1574.78 1210.78 L1575.37 1210.78 L1575.96 1210.78 L1576.54 1210.78 L1577.13 1210.78 L1577.72 1210.78 L1578.3 1210.78 L1578.89 1210.78 L1579.47 1210.78 L1580.06 1210.78 L1580.65 1210.78 L1581.23 1210.78 L1581.82 1210.78 L1582.41 1210.78 L1582.99 1210.78 L1583.58 1210.78 L1584.17 1210.78 L1584.75 1210.78 L1585.34 1210.78 L1585.93 1210.78 L1586.51 1210.78 L1587.1 1210.78 L1587.68 1210.78 L1588.27 1210.78 L1588.86 1210.78 L1589.44 1210.78 L1590.03 1210.78 L1590.62 1210.78 L1591.2 1210.78 L1591.79 1210.78 L1592.38 1210.78 L1592.96 1210.78 L1593.55 1210.78 L1594.14 1210.78 L1594.72 1210.78 L1595.31 1210.78 L1595.89 1210.78 L1596.48 1210.78 L1597.07 1210.78 L1597.65 1210.78 L1598.24 1210.78 L1598.83 1210.78 L1599.41 1210.78 L1600 1210.78 L1600.59 1210.78 L1601.17 1210.78 L1601.76 1210.78 L1602.34 1210.78 L1602.93 1210.78 L1603.52 1210.78 L1604.1 1210.78 L1604.69 1210.78 L1605.28 1210.78 L1605.86 1210.78 L1606.45 1210.78 L1607.04 1210.78 L1607.62 1210.78 L1608.21 1210.78 L1608.8 1210.78 L1609.38 1210.78 L1609.97 1210.78 L1610.55 1210.78 L1611.14 1210.78 L1611.73 1210.78 L1612.31 1210.78 L1612.9 1210.78 L1613.49 1210.78 L1614.07 1210.78 L1614.66 1210.78 L1615.25 1210.78 L1615.83 1210.78 L1616.42 1210.78 L1617.01 1210.78 L1617.59 1210.78 L1618.18 1210.78 L1618.76 1210.78 L1619.35 1210.78 L1619.94 1210.78 L1620.52 1210.78 L1621.11 1210.78 L1621.7 1210.78 L1622.28 1210.78 L1622.87 1210.78 L1623.46 1210.78 L1624.04 1210.78 L1624.63 1210.78 L1625.22 1210.78 L1625.8 1210.78 L1626.39 1210.78 L1626.97 1210.78 L1627.56 1210.78 L1628.15 1210.78 L1628.73 1210.78 L1629.32 1210.78 L1629.91 1210.78 L1630.49 1210.78 L1631.08 1210.78 L1631.67 1210.78 L1632.25 1210.78 L1632.84 1210.78 L1633.42 1210.78 L1634.01 1210.78 L1634.6 1210.78 L1635.18 1210.78 L1635.77 1210.78 L1636.36 1210.78 L1636.94 1210.78 L1637.53 1210.78 L1638.12 1210.78 L1638.7 1210.78 L1639.29 1210.78 L1639.88 1210.78 L1640.46 1210.78 L1641.05 1210.78 L1641.63 1210.78 L1642.22 1210.78 L1642.81 1210.78 L1643.39 1210.78 L1643.98 1210.78 L1644.57 1210.78 L1645.15 1210.78 L1645.74 1210.78 L1646.33 1210.78 L1646.91 1210.78 L1647.5 1210.78 L1648.09 1210.78 L1648.67 1210.78 L1649.26 1210.78 L1649.84 1210.78 L1650.43 1210.78 L1651.02 1210.78 L1651.6 1210.78 L1652.19 1210.78 L1652.78 1210.78 L1653.36 1210.78 L1653.95 1210.78 L1654.54 1210.78 L1655.12 1210.78 L1655.71 1210.78 L1656.29 1210.78 L1656.88 1210.78 L1657.47 1210.78 L1658.05 1210.78 L1658.64 1210.78 L1659.23 1210.78 L1659.81 1210.78 L1660.4 1210.78 L1660.99 1210.78 L1661.57 1210.78 L1662.16 1210.78 L1662.75 1210.78 L1663.33 1210.78 L1663.92 1210.78 L1664.5 1210.78 L1665.09 1210.78 L1665.68 1210.78 L1666.26 1210.78 L1666.85 1210.78 L1667.44 1210.78 L1668.02 1210.78 L1668.61 1210.78 L1669.2 1210.78 L1669.78 1210.78 L1670.37 1210.78 L1670.96 1210.78 L1671.54 1210.78 L1672.13 1210.78 L1672.71 1210.78 L1673.3 1210.78 L1673.89 1210.78 L1674.47 1210.78 L1675.06 1210.78 L1675.65 1210.78 L1676.23 1210.78 L1676.82 1210.78 L1677.41 1210.78 L1677.99 1210.78 L1678.58 1210.78 L1679.17 1210.78 L1679.75 1210.78 L1680.34 1210.78 L1680.92 1210.78 L1681.51 1210.78 L1682.1 1210.78 L1682.68 1210.78 L1683.27 1210.78 L1683.86 1210.78 L1684.44 1210.78 L1685.03 1210.78 L1685.62 1210.78 L1686.2 1210.78 L1686.79 1210.78 L1687.37 1210.78 L1687.96 1210.78 L1688.55 1210.78 L1689.13 1210.78 L1689.72 1210.78 L1690.31 1210.78 L1690.89 1210.78 L1691.48 1210.78 L1692.07 1210.78 L1692.65 1210.78 L1693.24 1210.78 L1693.83 1210.78 L1694.41 1210.78 L1695 1210.78 L1695.58 1210.78 L1696.17 1210.78 L1696.76 1210.78 L1697.34 1210.78 L1697.93 1210.78 L1698.52 1210.78 L1699.1 1210.78 L1699.69 1210.78 L1700.28 1210.78 L1700.86 1210.78 L1701.45 1210.78 L1702.04 1210.78 L1702.62 1210.78 L1703.21 1210.78 L1703.79 1210.78 L1704.38 1210.78 L1704.97 1210.78 L1705.55 1210.78 L1706.14 1210.78 L1706.73 1210.78 L1707.31 1210.78 L1707.9 1210.78 L1708.49 1210.78 L1709.07 1210.78 L1709.66 1210.78 L1710.24 1210.78 L1710.83 1210.78 L1711.42 1210.78 L1712 1210.78 L1712.59 1210.78 L1713.18 1210.78 L1713.76 1210.78 L1714.35 1210.78 L1714.94 1210.78 L1715.52 1210.78 L1716.11 1210.78 L1716.7 1210.78 L1717.28 1210.78 L1717.87 1210.78 L1718.45 1210.78 L1719.04 1210.78 L1719.63 1210.78 L1720.21 1210.78 L1720.8 1210.78 L1721.39 1210.78 L1721.97 1210.78 L1722.56 1210.78 L1723.15 1210.78 L1723.73 1210.78 L1724.32 1210.78 L1724.91 1210.78 L1725.49 1210.78 L1726.08 1210.78 L1726.66 1210.78 L1727.25 1210.78 L1727.84 1210.78 L1728.42 1210.78 L1729.01 1210.78 L1729.6 1210.78 L1730.18 1210.78 L1730.77 1210.78 L1731.36 1210.78 L1731.94 1210.78 L1732.53 1210.78 L1733.11 1210.78 L1733.7 1210.78 L1734.29 1210.78 L1734.87 1210.78 L1735.46 1210.78 L1736.05 1210.78 L1736.63 1210.78 L1737.22 1210.78 L1737.81 1210.78 L1738.39 1210.78 L1738.98 1210.78 L1739.57 1210.78 L1740.15 1210.78 L1740.74 1210.78 L1741.32 1210.78 L1741.91 1210.78 L1742.5 1210.78 L1743.08 1210.78 L1743.67 1210.78 L1744.26 1210.78 L1744.84 1210.78 L1745.43 1210.78 L1746.02 1210.78 L1746.6 1210.78 L1747.19 1210.78 L1747.78 1210.78 L1748.36 1210.78 L1748.95 1210.78 L1749.53 1210.78 L1750.12 1210.78 L1750.71 1210.78 L1751.29 1210.78 L1751.88 1210.78 L1752.47 1210.78 L1753.05 1210.78 L1753.64 1210.78 L1754.23 1210.78 L1754.81 1210.78 L1755.4 1210.78 L1755.99 1210.78 L1756.57 1210.78 L1757.16 1210.78 L1757.74 1210.78 L1758.33 1210.78 L1758.92 1210.78 L1759.5 1210.78 L1760.09 1210.78 L1760.68 1210.78 L1761.26 1210.78 L1761.85 1210.78 L1762.44 1210.78 L1763.02 1210.78 L1763.61 1210.78 L1764.19 1210.78 L1764.78 1210.78 L1765.37 1210.78 L1765.95 1210.78 L1766.54 1210.78 L1767.13 1210.78 L1767.71 1210.78 L1768.3 1210.78 L1768.89 1210.78 L1769.47 1210.78 L1770.06 1210.78 L1770.65 1210.78 L1771.23 1210.78 L1771.82 1210.78 L1772.4 1210.78 L1772.99 1210.78 L1773.58 1210.78 L1774.16 1210.78 L1774.75 1210.78 L1775.34 1210.78 L1775.92 1210.78 L1776.51 1210.78 L1777.1 1210.78 L1777.68 1210.78 L1778.27 1210.78 L1778.86 1210.78 L1779.44 1210.78 L1780.03 1210.78 L1780.61 1210.78 L1781.2 1210.78 L1781.79 1210.78 L1782.37 1210.78 L1782.96 1210.78 L1783.55 1210.78 L1784.13 1210.78 L1784.72 1210.78 L1785.31 1210.78 L1785.89 1210.78 L1786.48 1210.78 L1787.06 1210.78 L1787.65 1210.78 L1788.24 1210.78 L1788.82 1210.78 L1789.41 1210.78 L1790 1210.78 L1790.58 1210.78 L1791.17 1210.78 L1791.76 1210.78 L1792.34 1210.78 L1792.93 1210.78 L1793.52 1210.78 L1794.1 1210.78 L1794.69 1210.78 L1795.27 1210.78 L1795.86 1210.78 L1796.45 1210.78 L1797.03 1210.78 L1797.62 1210.78 L1798.21 1210.78 L1798.79 1210.78 L1799.38 1210.78 L1799.97 1210.78 L1800.55 1210.78 L1801.14 1210.78 L1801.73 1210.78 L1802.31 1210.78 L1802.9 1210.78 L1803.48 1210.78 L1804.07 1210.78 L1804.66 1210.78 L1805.24 1210.78 L1805.83 1210.78 L1806.42 1210.78 L1807 1210.78 L1807.59 1210.78 L1808.18 1210.78 L1808.76 1210.78 L1809.35 1210.78 L1809.94 1210.78 L1810.52 1210.78 L1811.11 1210.78 L1811.69 1210.78 L1812.28 1210.78 L1812.87 1210.78 L1813.45 1210.78 L1814.04 1210.78 L1814.63 1210.78 L1815.21 1210.78 L1815.8 1210.78 L1816.39 1210.78 L1816.97 1210.78 L1817.56 1210.78 L1818.14 1210.78 L1818.73 1210.78 L1819.32 1210.78 L1819.9 1210.78 L1820.49 1210.78 L1821.08 1210.78 L1821.66 1210.78 L1822.25 1210.78 L1822.84 1210.78 L1823.42 1210.78 L1824.01 1210.78 L1824.6 1210.78 L1825.18 1210.78 L1825.77 1210.78 L1826.35 1210.78 L1826.94 1210.78 L1827.53 1210.78 L1828.11 1210.78 L1828.7 1210.78 L1829.29 1210.78 L1829.87 1210.78 L1830.46 1210.78 L1831.05 1210.78 L1831.63 1210.78 L1832.22 1210.78 L1832.81 1210.78 L1833.39 1210.78 L1833.98 1210.78 L1834.56 1210.78 L1835.15 1210.78 L1835.74 1210.78 L1836.32 1210.78 L1836.91 1210.78 L1837.5 1210.78 L1838.08 1210.78 L1838.67 1210.78 L1839.26 1210.78 L1839.84 1210.78 L1840.43 1210.78 L1841.01 1210.78 L1841.6 1210.78 L1842.19 1210.78 L1842.77 1210.78 L1843.36 1210.78 L1843.95 1210.78 L1844.53 1210.78 L1845.12 1210.78 L1845.71 1210.78 L1846.29 1210.78 L1846.88 1210.78 L1847.47 1210.78 L1848.05 1210.78 L1848.64 1210.78 L1849.22 1210.78 L1849.81 1210.78 L1850.4 1210.78 L1850.98 1210.78 L1851.57 1210.78 L1852.16 1210.78 L1852.74 1210.78 L1853.33 1210.78 L1853.92 1210.78 L1854.5 1210.78 L1855.09 1210.78 L1855.68 1210.78 L1856.26 1210.78 L1856.85 1210.78 L1857.43 1210.78 L1858.02 1210.78 L1858.61 1210.78 L1859.19 1210.78 L1859.78 1210.78 L1860.37 1210.78 L1860.95 1210.78 L1861.54 1210.78 L1862.13 1210.78 L1862.71 1210.78 L1863.3 1210.78 L1863.88 1210.78 L1864.47 1210.78 L1865.06 1210.78 L1865.64 1210.78 L1866.23 1210.78 L1866.82 1210.78 L1867.4 1210.78 L1867.99 1210.78 L1868.58 1210.78 L1869.16 1210.78 L1869.75 1210.78 L1870.34 1210.78 L1870.92 1210.78 L1871.51 1210.78 L1872.09 1210.78 L1872.68 1210.78 L1873.27 1210.78 L1873.85 1210.78 L1874.44 1210.78 L1875.03 1210.78 L1875.61 1210.78 L1876.2 1210.78 L1876.79 1210.78 L1877.37 1210.78 L1877.96 1210.78 L1878.55 1210.78 L1879.13 1210.78 L1879.72 1210.78 L1880.3 1210.78 L1880.89 1210.78 L1881.48 1210.78 L1882.06 1210.78 L1882.65 1210.78 L1883.24 1210.78 L1883.82 1210.78 L1884.41 1210.78 L1885 1210.78 L1885.58 1210.78 L1886.17 1210.78 L1886.76 1210.78 L1887.34 1210.78 L1887.93 1210.78 L1888.51 1210.78 L1889.1 1210.78 L1889.69 1210.78 L1890.27 1210.78 L1890.86 1210.78 L1891.45 1210.78 L1892.03 1210.78 L1892.62 1210.78 L1893.21 1210.78 L1893.79 1210.78 L1894.38 1210.78 L1894.96 1210.78 L1895.55 1210.78 L1896.14 1210.78 L1896.72 1210.78 L1897.31 1210.78 L1897.9 1210.78 L1898.48 1210.78 L1899.07 1210.78 L1899.66 1210.78 L1900.24 1210.78 L1900.83 1210.78 L1901.42 1210.78 L1902 1210.78 L1902.59 1210.78 L1903.17 1210.78 L1903.76 1210.78 L1904.35 1210.78 L1904.93 1210.78 L1905.52 1210.78 L1906.11 1210.78 L1906.69 1210.78 L1907.28 1210.78 L1907.87 1210.78 L1908.45 1210.78 L1909.04 1210.78 L1909.63 1210.78 L1910.21 1210.78 L1910.8 1210.78 L1911.38 1210.78 L1911.97 1210.78 L1912.56 1210.78 L1913.14 1210.78 L1913.73 1210.78 L1914.32 1210.78 L1914.9 1210.78 L1915.49 1210.78 L1916.08 1210.78 L1916.66 1210.78 L1917.25 1210.78 L1917.83 1210.78 L1918.42 1210.78 L1919.01 1210.78 L1919.59 1210.78 L1920.18 1210.78 L1920.77 1210.78 L1921.35 1210.78 L1921.94 1210.78 L1922.53 1210.78 L1923.11 1210.78 L1923.7 1210.78 L1924.29 1210.78 L1924.87 1210.78 L1925.46 1210.78 L1926.04 1210.78 L1926.63 1210.78 L1927.22 1210.78 L1927.8 1210.78 L1928.39 1210.78 L1928.98 1210.78 L1929.56 1210.78 L1930.15 1210.78 L1930.74 1210.78 L1931.32 1210.78 L1931.91 1210.78 L1932.5 1210.78 L1933.08 1210.78 L1933.67 1210.78 L1934.25 1210.78 L1934.84 1210.78 L1935.43 1210.78 L1936.01 1210.78 L1936.6 1210.78 L1937.19 1210.78 L1937.77 1210.78 L1938.36 1210.78 L1938.95 1210.78 L1939.53 1210.78 L1940.12 1210.78 L1940.71 1210.78 L1941.29 1210.78 L1941.88 1210.78 L1942.46 1210.78 L1943.05 1210.78 L1943.64 1210.78 L1944.22 1210.78 L1944.81 1210.78 L1945.4 1210.78 L1945.98 1210.78 L1946.57 1210.78 L1947.16 1210.78 L1947.74 1210.78 L1948.33 1210.78 L1948.91 1210.78 L1949.5 1210.78 L1950.09 1210.78 L1950.67 1210.78 L1951.26 1210.78 L1951.85 1210.78 L1952.43 1210.78 L1953.02 1210.78 L1953.61 1210.78 L1954.19 1210.78 L1954.78 1210.78 L1955.37 1210.78 L1955.95 1210.78 L1956.54 1210.78 L1957.12 1210.78 L1957.71 1210.78 L1958.3 1210.78 L1958.88 1210.78 L1959.47 1210.78 L1960.06 1210.78 L1960.64 1210.78 L1961.23 1210.78 L1961.82 1210.78 L1962.4 1210.78 L1962.99 1210.78 L1963.58 1210.78 L1964.16 1210.78 L1964.75 1210.78 L1965.33 1210.78 L1965.92 1210.78 L1966.51 1210.78 L1967.09 1210.78 L1967.68 1210.78 L1968.27 1210.78 L1968.85 1210.78 L1969.44 1210.78 L1970.03 1210.78 L1970.61 1210.78 L1971.2 1210.78 L1971.78 1210.78 L1972.37 1210.78 L1972.96 1210.78 L1973.54 1210.78 L1974.13 1210.78 L1974.72 1210.78 L1975.3 1210.78 L1975.89 1210.78 L1976.48 1210.78 L1977.06 1210.78 L1977.65 1210.78 L1978.24 1210.78 L1978.82 1210.78 L1979.41 1210.78 L1979.99 1210.78 L1980.58 1210.78 L1981.17 1210.78 L1981.75 1210.78 L1982.34 1210.78 L1982.93 1210.78 L1983.51 1210.78 L1984.1 1210.78 L1984.69 1210.78 L1985.27 1210.78 L1985.86 1210.78 L1986.45 1210.78 L1987.03 1210.78 L1987.62 1210.78 L1988.2 1210.78 L1988.79 1210.78 L1989.38 1210.78 L1989.96 1210.78 L1990.55 1210.78 L1991.14 1210.78 L1991.72 1210.78 L1992.31 1210.78 L1992.9 1210.78 L1993.48 1210.78 L1994.07 1210.78 L1994.65 1210.78 L1995.24 1210.78 L1995.83 1210.78 L1996.41 1210.78 L1997 1210.78 L1997.59 1210.78 L1998.17 1210.78 L1998.76 1210.78 L1999.35 1210.78 L1999.93 1210.78 L2000.52 1210.78 L2001.11 1210.78 L2001.69 1210.78 L2002.28 1210.78 L2002.86 1210.78 L2003.45 1210.78 L2004.04 1210.78 L2004.62 1210.78 L2005.21 1210.78 L2005.8 1210.78 L2006.38 1210.78 L2006.97 1210.78 L2007.56 1210.78 L2008.14 1210.78 L2008.73 1210.78 L2009.32 1210.78 L2009.9 1210.78 L2010.49 1210.78 L2011.07 1210.78 L2011.66 1210.78 L2012.25 1210.78 L2012.83 1210.78 L2013.42 1210.78 L2014.01 1210.78 L2014.59 1210.78 L2015.18 1210.78 L2015.77 1210.78 L2016.35 1210.78 L2016.94 1210.78 L2017.53 1210.78 L2018.11 1210.78 L2018.7 1210.78 L2019.28 1210.78 L2019.87 1210.78 L2020.46 1210.78 L2021.04 1210.78 L2021.63 1210.78 L2022.22 1210.78 L2022.8 1210.78 L2023.39 1210.78 L2023.98 1210.78 L2024.56 1210.78 L2025.15 1210.78 L2025.73 1210.78 L2026.32 1210.78 L2026.91 1210.78 L2027.49 1210.78 L2028.08 1210.78 L2028.67 1210.78 L2029.25 1210.78 L2029.84 1210.78 L2030.43 1210.78 L2031.01 1210.78 L2031.6 1210.78 L2032.19 1210.78 L2032.77 1210.78 L2033.36 1210.78 L2033.94 1210.78 L2034.53 1210.78 L2035.12 1210.78 L2035.7 1210.78 L2036.29 1210.78 L2036.88 1210.78 L2037.46 1210.78 L2038.05 1210.78 L2038.64 1210.78 L2039.22 1210.78 L2039.81 1210.78 L2040.4 1210.78 L2040.98 1210.78 L2041.57 1210.78 L2042.15 1210.78 L2042.74 1210.78 L2043.33 1210.78 L2043.91 1210.78 L2044.5 1210.78 L2045.09 1210.78 L2045.67 1210.78 L2046.26 1210.78 L2046.85 1210.78 L2047.43 1210.78 L2048.02 1210.78 L2048.6 1210.78 L2049.19 1210.78 L2049.78 1210.78 L2050.36 1210.78 L2050.95 1210.78 L2051.54 1210.78 L2052.12 1210.78 L2052.71 1210.78 L2053.3 1210.78 L2053.88 1210.78 L2054.47 1210.78 L2055.06 1210.78 L2055.64 1210.78 L2056.23 1210.78 L2056.81 1210.78 L2057.4 1210.78 L2057.99 1210.78 L2058.57 1210.78 L2059.16 1210.78 L2059.75 1210.78 L2060.33 1210.78 L2060.92 1210.78 L2061.51 1210.78 L2062.09 1210.78 L2062.68 1210.78 L2063.27 1210.78 L2063.85 1210.78 L2064.44 1210.78 L2065.02 1210.78 L2065.61 1210.78 L2066.2 1210.78 L2066.78 1210.78 L2067.37 1210.78 L2067.96 1210.78 L2068.54 1210.78 L2069.13 1210.78 L2069.72 1210.78 L2070.3 1210.78 L2070.89 1210.78 L2071.48 1210.78 L2072.06 1210.78 L2072.65 1210.78 L2073.23 1210.78 L2073.82 1210.78 L2074.41 1210.78 L2074.99 1210.78 L2075.58 1210.78 L2076.17 1210.78 L2076.75 1210.78 L2077.34 1210.78 L2077.93 1210.78 L2078.51 1210.78 L2079.1 1210.78 L2079.68 1210.78 L2080.27 1210.78 L2080.86 1210.78 L2081.44 1210.78 L2082.03 1210.78 L2082.62 1210.78 L2083.2 1210.78 L2083.79 1210.78 L2084.38 1210.78 L2084.96 1210.78 L2085.55 1210.78 L2086.14 1210.78 L2086.72 1210.78 L2087.31 1210.78 L2087.89 1210.78 L2088.48 1210.78 L2089.07 1210.78 L2089.65 1210.78 L2090.24 1210.78 L2090.83 1210.78 L2091.41 1210.78 L2092 1210.78 L2092.59 1210.78 L2093.17 1210.78 L2093.76 1210.78 L2094.35 1210.78 L2094.93 1210.78 L2095.52 1210.78 L2096.1 1210.78 L2096.69 1210.78 L2097.28 1210.78 L2097.86 1210.78 L2098.45 1210.78 L2099.04 1210.78 L2099.62 1210.78 L2100.21 1210.78 L2100.8 1210.78 L2101.38 1210.78 L2101.97 1210.78 L2102.55 1210.78 L2103.14 1210.78 L2103.73 1210.78 L2104.31 1210.78 L2104.9 1210.78 L2105.49 1210.78 L2106.07 1210.78 L2106.66 1210.78 L2107.25 1210.78 L2107.83 1210.78 L2108.42 1210.78 L2109.01 1210.78 L2109.59 1210.78 L2110.18 1210.78 L2110.76 1210.78 L2111.35 1210.78 L2111.94 1210.78 L2112.52 1210.78 L2113.11 1210.78 L2113.7 1210.78 L2114.28 1210.78 L2114.87 1210.78 L2115.46 1210.78 L2116.04 1210.78 L2116.63 1210.78 L2117.22 1210.78 L2117.8 1210.78 L2118.39 1210.78 L2118.97 1210.78 L2119.56 1210.78 L2120.15 1210.78 L2120.73 1210.78 L2121.32 1210.78 L2121.91 1210.78 L2122.49 1210.78 L2123.08 1210.78 L2123.67 1210.78 L2124.25 1210.78 L2124.84 1210.78 L2125.42 1210.78 L2126.01 1210.78 L2126.6 1210.78 L2127.18 1210.78 L2127.77 1210.78 L2128.36 1210.78 L2128.94 1210.78 L2129.53 1210.78 L2130.12 1210.78 L2130.7 1210.78 L2131.29 1210.78 L2131.88 1210.78 L2132.46 1210.78 L2133.05 1210.78 L2133.63 1210.78 L2134.22 1210.78 L2134.81 1210.78 L2135.39 1210.78 L2135.98 1210.78 L2136.57 1210.78 L2137.15 1210.78 L2137.74 1210.78 L2138.33 1210.78 L2138.91 1210.78 L2139.5 1210.78 L2140.09 1210.78 L2140.67 1210.78 L2141.26 1210.78 L2141.84 1210.78 L2142.43 1210.78 L2143.02 1210.78 L2143.6 1210.78 L2144.19 1210.78 L2144.78 1210.78 L2145.36 1210.78 L2145.95 1210.78 L2146.54 1210.78 L2147.12 1210.78 L2147.71 1210.78 L2148.3 1210.78 L2148.88 1210.78 L2149.47 1210.78 L2150.05 1210.78 L2150.64 1210.78 L2151.23 1210.78 L2151.81 1210.78 L2152.4 1210.78 L2152.99 1210.78 L2153.57 1210.78 L2154.16 1210.78 L2154.75 1210.78 L2155.33 1210.78 L2155.92 1210.78 L2156.5 1210.78 L2157.09 1210.78 L2157.68 1210.78 L2158.26 1210.78 L2158.26 1210.65 L2157.68 1210.65 L2157.09 1210.65 L2156.5 1210.65 L2155.92 1210.65 L2155.33 1210.65 L2154.75 1210.65 L2154.16 1210.65 L2153.57 1210.65 L2152.99 1210.65 L2152.4 1210.65 L2151.81 1210.65 L2151.23 1210.65 L2150.64 1210.65 L2150.05 1210.65 L2149.47 1210.65 L2148.88 1210.65 L2148.3 1210.65 L2147.71 1210.65 L2147.12 1210.65 L2146.54 1210.65 L2145.95 1210.65 L2145.36 1210.65 L2144.78 1210.65 L2144.19 1210.65 L2143.6 1210.65 L2143.02 1210.65 L2142.43 1210.65 L2141.84 1210.65 L2141.26 1210.65 L2140.67 1210.65 L2140.09 1210.65 L2139.5 1210.65 L2138.91 1210.65 L2138.33 1210.65 L2137.74 1210.65 L2137.15 1210.65 L2136.57 1210.65 L2135.98 1210.65 L2135.39 1210.65 L2134.81 1210.65 L2134.22 1210.65 L2133.63 1210.65 L2133.05 1210.65 L2132.46 1210.65 L2131.88 1210.65 L2131.29 1210.65 L2130.7 1210.65 L2130.12 1210.65 L2129.53 1210.65 L2128.94 1210.65 L2128.36 1210.65 L2127.77 1210.65 L2127.18 1210.65 L2126.6 1210.65 L2126.01 1210.65 L2125.42 1210.65 L2124.84 1210.65 L2124.25 1210.65 L2123.67 1210.65 L2123.08 1210.65 L2122.49 1210.65 L2121.91 1210.65 L2121.32 1210.65 L2120.73 1210.65 L2120.15 1210.65 L2119.56 1210.65 L2118.97 1210.65 L2118.39 1210.65 L2117.8 1210.65 L2117.22 1210.65 L2116.63 1210.65 L2116.04 1210.65 L2115.46 1210.65 L2114.87 1210.65 L2114.28 1210.65 L2113.7 1210.65 L2113.11 1210.65 L2112.52 1210.65 L2111.94 1210.65 L2111.35 1210.65 L2110.76 1210.65 L2110.18 1210.65 L2109.59 1210.65 L2109.01 1210.65 L2108.42 1210.65 L2107.83 1210.65 L2107.25 1210.65 L2106.66 1210.65 L2106.07 1210.65 L2105.49 1210.65 L2104.9 1210.65 L2104.31 1210.65 L2103.73 1210.65 L2103.14 1210.65 L2102.55 1210.65 L2101.97 1210.65 L2101.38 1210.65 L2100.8 1210.65 L2100.21 1210.65 L2099.62 1210.65 L2099.04 1210.65 L2098.45 1210.65 L2097.86 1210.65 L2097.28 1210.65 L2096.69 1210.65 L2096.1 1210.65 L2095.52 1210.65 L2094.93 1210.65 L2094.35 1210.65 L2093.76 1210.65 L2093.17 1210.65 L2092.59 1210.65 L2092 1210.65 L2091.41 1210.65 L2090.83 1210.65 L2090.24 1210.65 L2089.65 1210.65 L2089.07 1210.65 L2088.48 1210.65 L2087.89 1210.65 L2087.31 1210.65 L2086.72 1210.65 L2086.14 1210.65 L2085.55 1210.65 L2084.96 1210.65 L2084.38 1210.65 L2083.79 1210.65 L2083.2 1210.65 L2082.62 1210.65 L2082.03 1210.65 L2081.44 1210.65 L2080.86 1210.65 L2080.27 1210.65 L2079.68 1210.65 L2079.1 1210.65 L2078.51 1210.65 L2077.93 1210.65 L2077.34 1210.65 L2076.75 1210.65 L2076.17 1210.65 L2075.58 1210.65 L2074.99 1210.65 L2074.41 1210.65 L2073.82 1210.65 L2073.23 1210.65 L2072.65 1210.65 L2072.06 1210.65 L2071.48 1210.65 L2070.89 1210.65 L2070.3 1210.65 L2069.72 1210.65 L2069.13 1210.65 L2068.54 1210.65 L2067.96 1210.65 L2067.37 1210.65 L2066.78 1210.65 L2066.2 1210.65 L2065.61 1210.65 L2065.02 1210.65 L2064.44 1210.65 L2063.85 1210.65 L2063.27 1210.65 L2062.68 1210.65 L2062.09 1210.65 L2061.51 1210.65 L2060.92 1210.65 L2060.33 1210.65 L2059.75 1210.65 L2059.16 1210.65 L2058.57 1210.65 L2057.99 1210.65 L2057.4 1210.65 L2056.81 1210.65 L2056.23 1210.65 L2055.64 1210.65 L2055.06 1210.65 L2054.47 1210.65 L2053.88 1210.65 L2053.3 1210.65 L2052.71 1210.65 L2052.12 1210.65 L2051.54 1210.65 L2050.95 1210.65 L2050.36 1210.65 L2049.78 1210.65 L2049.19 1210.65 L2048.6 1210.65 L2048.02 1210.65 L2047.43 1210.65 L2046.85 1210.65 L2046.26 1210.65 L2045.67 1210.65 L2045.09 1210.65 L2044.5 1210.65 L2043.91 1210.65 L2043.33 1210.65 L2042.74 1210.65 L2042.15 1210.65 L2041.57 1210.65 L2040.98 1210.65 L2040.4 1210.65 L2039.81 1210.65 L2039.22 1210.65 L2038.64 1210.65 L2038.05 1210.65 L2037.46 1210.65 L2036.88 1210.65 L2036.29 1210.65 L2035.7 1210.65 L2035.12 1210.65 L2034.53 1210.65 L2033.94 1210.65 L2033.36 1210.65 L2032.77 1210.65 L2032.19 1210.65 L2031.6 1210.65 L2031.01 1210.65 L2030.43 1210.65 L2029.84 1210.65 L2029.25 1210.65 L2028.67 1210.65 L2028.08 1210.65 L2027.49 1210.65 L2026.91 1210.65 L2026.32 1210.65 L2025.73 1210.65 L2025.15 1210.65 L2024.56 1210.65 L2023.98 1210.65 L2023.39 1210.65 L2022.8 1210.65 L2022.22 1210.65 L2021.63 1210.65 L2021.04 1210.65 L2020.46 1210.65 L2019.87 1210.65 L2019.28 1210.65 L2018.7 1210.65 L2018.11 1210.65 L2017.53 1210.65 L2016.94 1210.65 L2016.35 1210.65 L2015.77 1210.65 L2015.18 1210.65 L2014.59 1210.65 L2014.01 1210.65 L2013.42 1210.65 L2012.83 1210.65 L2012.25 1210.65 L2011.66 1210.65 L2011.07 1210.65 L2010.49 1210.65 L2009.9 1210.65 L2009.32 1210.65 L2008.73 1210.65 L2008.14 1210.65 L2007.56 1210.65 L2006.97 1210.65 L2006.38 1210.65 L2005.8 1210.65 L2005.21 1210.65 L2004.62 1210.65 L2004.04 1210.65 L2003.45 1210.65 L2002.86 1210.65 L2002.28 1210.65 L2001.69 1210.65 L2001.11 1210.65 L2000.52 1210.65 L1999.93 1210.65 L1999.35 1210.65 L1998.76 1210.65 L1998.17 1210.65 L1997.59 1210.65 L1997 1210.65 L1996.41 1210.65 L1995.83 1210.65 L1995.24 1210.65 L1994.65 1210.65 L1994.07 1210.65 L1993.48 1210.65 L1992.9 1210.65 L1992.31 1210.65 L1991.72 1210.65 L1991.14 1210.65 L1990.55 1210.65 L1989.96 1210.65 L1989.38 1210.65 L1988.79 1210.65 L1988.2 1210.65 L1987.62 1210.65 L1987.03 1210.65 L1986.45 1210.65 L1985.86 1210.65 L1985.27 1210.65 L1984.69 1210.65 L1984.1 1210.65 L1983.51 1210.65 L1982.93 1210.65 L1982.34 1210.65 L1981.75 1210.65 L1981.17 1210.65 L1980.58 1210.65 L1979.99 1210.65 L1979.41 1210.65 L1978.82 1210.65 L1978.24 1210.65 L1977.65 1210.65 L1977.06 1210.65 L1976.48 1210.65 L1975.89 1210.65 L1975.3 1210.65 L1974.72 1210.65 L1974.13 1210.65 L1973.54 1210.65 L1972.96 1210.65 L1972.37 1210.65 L1971.78 1210.65 L1971.2 1210.65 L1970.61 1210.65 L1970.03 1210.65 L1969.44 1210.65 L1968.85 1210.65 L1968.27 1210.65 L1967.68 1210.65 L1967.09 1210.65 L1966.51 1210.65 L1965.92 1210.65 L1965.33 1210.65 L1964.75 1210.65 L1964.16 1210.65 L1963.58 1210.65 L1962.99 1210.65 L1962.4 1210.65 L1961.82 1210.65 L1961.23 1210.65 L1960.64 1210.65 L1960.06 1210.65 L1959.47 1210.65 L1958.88 1210.65 L1958.3 1210.65 L1957.71 1210.65 L1957.12 1210.65 L1956.54 1210.65 L1955.95 1210.65 L1955.37 1210.65 L1954.78 1210.65 L1954.19 1210.65 L1953.61 1210.65 L1953.02 1210.65 L1952.43 1210.65 L1951.85 1210.65 L1951.26 1210.65 L1950.67 1210.65 L1950.09 1210.65 L1949.5 1210.65 L1948.91 1210.65 L1948.33 1210.65 L1947.74 1210.65 L1947.16 1210.65 L1946.57 1210.65 L1945.98 1210.65 L1945.4 1210.65 L1944.81 1210.65 L1944.22 1210.65 L1943.64 1210.65 L1943.05 1210.65 L1942.46 1210.65 L1941.88 1210.65 L1941.29 1210.65 L1940.71 1210.65 L1940.12 1210.65 L1939.53 1210.65 L1938.95 1210.65 L1938.36 1210.65 L1937.77 1210.65 L1937.19 1210.65 L1936.6 1210.65 L1936.01 1210.65 L1935.43 1210.65 L1934.84 1210.65 L1934.25 1210.65 L1933.67 1210.65 L1933.08 1210.65 L1932.5 1210.65 L1931.91 1210.65 L1931.32 1210.65 L1930.74 1210.65 L1930.15 1210.65 L1929.56 1210.65 L1928.98 1210.65 L1928.39 1210.65 L1927.8 1210.65 L1927.22 1210.65 L1926.63 1210.65 L1926.04 1210.65 L1925.46 1210.65 L1924.87 1210.65 L1924.29 1210.65 L1923.7 1210.65 L1923.11 1210.65 L1922.53 1210.65 L1921.94 1210.65 L1921.35 1210.65 L1920.77 1210.65 L1920.18 1210.65 L1919.59 1210.65 L1919.01 1210.65 L1918.42 1210.65 L1917.83 1210.65 L1917.25 1210.65 L1916.66 1210.65 L1916.08 1210.65 L1915.49 1210.65 L1914.9 1210.65 L1914.32 1210.65 L1913.73 1210.65 L1913.14 1210.65 L1912.56 1210.65 L1911.97 1210.65 L1911.38 1210.65 L1910.8 1210.65 L1910.21 1210.65 L1909.63 1210.65 L1909.04 1210.65 L1908.45 1210.65 L1907.87 1210.65 L1907.28 1210.65 L1906.69 1210.65 L1906.11 1210.65 L1905.52 1210.65 L1904.93 1210.65 L1904.35 1210.65 L1903.76 1210.65 L1903.17 1210.65 L1902.59 1210.65 L1902 1210.65 L1901.42 1210.65 L1900.83 1210.65 L1900.24 1210.65 L1899.66 1210.65 L1899.07 1210.65 L1898.48 1210.65 L1897.9 1210.65 L1897.31 1210.65 L1896.72 1210.65 L1896.14 1210.65 L1895.55 1210.65 L1894.96 1210.65 L1894.38 1210.65 L1893.79 1210.65 L1893.21 1210.65 L1892.62 1210.65 L1892.03 1210.65 L1891.45 1210.65 L1890.86 1210.65 L1890.27 1210.65 L1889.69 1210.65 L1889.1 1210.65 L1888.51 1210.65 L1887.93 1210.65 L1887.34 1210.65 L1886.76 1210.65 L1886.17 1210.65 L1885.58 1210.65 L1885 1210.65 L1884.41 1210.65 L1883.82 1210.65 L1883.24 1210.65 L1882.65 1210.65 L1882.06 1210.65 L1881.48 1210.65 L1880.89 1210.65 L1880.3 1210.65 L1879.72 1210.65 L1879.13 1210.65 L1878.55 1210.65 L1877.96 1210.65 L1877.37 1210.65 L1876.79 1210.65 L1876.2 1210.65 L1875.61 1210.65 L1875.03 1210.65 L1874.44 1210.65 L1873.85 1210.65 L1873.27 1210.65 L1872.68 1210.65 L1872.09 1210.65 L1871.51 1210.65 L1870.92 1210.65 L1870.34 1210.65 L1869.75 1210.65 L1869.16 1210.65 L1868.58 1210.65 L1867.99 1210.65 L1867.4 1210.65 L1866.82 1210.65 L1866.23 1210.65 L1865.64 1210.65 L1865.06 1210.65 L1864.47 1210.65 L1863.88 1210.65 L1863.3 1210.65 L1862.71 1210.65 L1862.13 1210.65 L1861.54 1210.65 L1860.95 1210.65 L1860.37 1210.65 L1859.78 1210.65 L1859.19 1210.65 L1858.61 1210.65 L1858.02 1210.65 L1857.43 1210.65 L1856.85 1210.65 L1856.26 1210.65 L1855.68 1210.65 L1855.09 1210.65 L1854.5 1210.65 L1853.92 1210.65 L1853.33 1210.65 L1852.74 1210.65 L1852.16 1210.65 L1851.57 1210.65 L1850.98 1210.65 L1850.4 1210.65 L1849.81 1210.65 L1849.22 1210.65 L1848.64 1210.65 L1848.05 1210.65 L1847.47 1210.65 L1846.88 1210.65 L1846.29 1210.65 L1845.71 1210.65 L1845.12 1210.65 L1844.53 1210.65 L1843.95 1210.65 L1843.36 1210.65 L1842.77 1210.65 L1842.19 1210.65 L1841.6 1210.65 L1841.01 1210.65 L1840.43 1210.65 L1839.84 1210.65 L1839.26 1210.65 L1838.67 1210.65 L1838.08 1210.65 L1837.5 1210.65 L1836.91 1210.65 L1836.32 1210.65 L1835.74 1210.65 L1835.15 1210.65 L1834.56 1210.65 L1833.98 1210.65 L1833.39 1210.65 L1832.81 1210.65 L1832.22 1210.65 L1831.63 1210.65 L1831.05 1210.65 L1830.46 1210.65 L1829.87 1210.65 L1829.29 1210.65 L1828.7 1210.65 L1828.11 1210.65 L1827.53 1210.65 L1826.94 1210.65 L1826.35 1210.65 L1825.77 1210.65 L1825.18 1210.65 L1824.6 1210.65 L1824.01 1210.65 L1823.42 1210.65 L1822.84 1210.65 L1822.25 1210.65 L1821.66 1210.65 L1821.08 1210.65 L1820.49 1210.65 L1819.9 1210.65 L1819.32 1210.65 L1818.73 1210.65 L1818.14 1210.65 L1817.56 1210.65 L1816.97 1210.65 L1816.39 1210.65 L1815.8 1210.65 L1815.21 1210.65 L1814.63 1210.65 L1814.04 1210.65 L1813.45 1210.65 L1812.87 1210.65 L1812.28 1210.65 L1811.69 1210.65 L1811.11 1210.65 L1810.52 1210.65 L1809.94 1210.65 L1809.35 1210.65 L1808.76 1210.65 L1808.18 1210.65 L1807.59 1210.65 L1807 1210.65 L1806.42 1210.65 L1805.83 1210.65 L1805.24 1210.65 L1804.66 1210.65 L1804.07 1210.65 L1803.48 1210.65 L1802.9 1210.65 L1802.31 1210.65 L1801.73 1210.65 L1801.14 1210.65 L1800.55 1210.65 L1799.97 1210.65 L1799.38 1210.65 L1798.79 1210.65 L1798.21 1210.65 L1797.62 1210.65 L1797.03 1210.65 L1796.45 1210.65 L1795.86 1210.65 L1795.27 1210.65 L1794.69 1210.65 L1794.1 1210.65 L1793.52 1210.65 L1792.93 1210.65 L1792.34 1210.65 L1791.76 1210.65 L1791.17 1210.65 L1790.58 1210.65 L1790 1210.65 L1789.41 1210.65 L1788.82 1210.65 L1788.24 1210.65 L1787.65 1210.65 L1787.06 1210.65 L1786.48 1210.65 L1785.89 1210.65 L1785.31 1210.65 L1784.72 1210.65 L1784.13 1210.65 L1783.55 1210.65 L1782.96 1210.65 L1782.37 1210.65 L1781.79 1210.65 L1781.2 1210.65 L1780.61 1210.65 L1780.03 1210.65 L1779.44 1210.65 L1778.86 1210.65 L1778.27 1210.65 L1777.68 1210.65 L1777.1 1210.65 L1776.51 1210.65 L1775.92 1210.65 L1775.34 1210.65 L1774.75 1210.65 L1774.16 1210.65 L1773.58 1210.65 L1772.99 1210.65 L1772.4 1210.65 L1771.82 1210.65 L1771.23 1210.65 L1770.65 1210.65 L1770.06 1210.65 L1769.47 1210.65 L1768.89 1210.65 L1768.3 1210.65 L1767.71 1210.65 L1767.13 1210.65 L1766.54 1210.65 L1765.95 1210.65 L1765.37 1210.65 L1764.78 1210.65 L1764.19 1210.65 L1763.61 1210.65 L1763.02 1210.65 L1762.44 1210.65 L1761.85 1210.65 L1761.26 1210.65 L1760.68 1210.65 L1760.09 1210.65 L1759.5 1210.65 L1758.92 1210.65 L1758.33 1210.65 L1757.74 1210.65 L1757.16 1210.65 L1756.57 1210.65 L1755.99 1210.65 L1755.4 1210.65 L1754.81 1210.65 L1754.23 1210.65 L1753.64 1210.65 L1753.05 1210.65 L1752.47 1210.65 L1751.88 1210.65 L1751.29 1210.65 L1750.71 1210.65 L1750.12 1210.65 L1749.53 1210.65 L1748.95 1210.65 L1748.36 1210.65 L1747.78 1210.65 L1747.19 1210.65 L1746.6 1210.65 L1746.02 1210.65 L1745.43 1210.65 L1744.84 1210.65 L1744.26 1210.65 L1743.67 1210.65 L1743.08 1210.65 L1742.5 1210.65 L1741.91 1210.65 L1741.32 1210.65 L1740.74 1210.65 L1740.15 1210.65 L1739.57 1210.65 L1738.98 1210.65 L1738.39 1210.65 L1737.81 1210.65 L1737.22 1210.65 L1736.63 1210.65 L1736.05 1210.65 L1735.46 1210.65 L1734.87 1210.65 L1734.29 1210.65 L1733.7 1210.65 L1733.11 1210.65 L1732.53 1210.65 L1731.94 1210.65 L1731.36 1210.65 L1730.77 1210.65 L1730.18 1210.65 L1729.6 1210.65 L1729.01 1210.65 L1728.42 1210.65 L1727.84 1210.65 L1727.25 1210.65 L1726.66 1210.65 L1726.08 1210.65 L1725.49 1210.65 L1724.91 1210.65 L1724.32 1210.65 L1723.73 1210.65 L1723.15 1210.65 L1722.56 1210.65 L1721.97 1210.65 L1721.39 1210.65 L1720.8 1210.65 L1720.21 1210.65 L1719.63 1210.65 L1719.04 1210.65 L1718.45 1210.65 L1717.87 1210.65 L1717.28 1210.65 L1716.7 1210.65 L1716.11 1210.65 L1715.52 1210.65 L1714.94 1210.65 L1714.35 1210.65 L1713.76 1210.65 L1713.18 1210.65 L1712.59 1210.65 L1712 1210.65 L1711.42 1210.65 L1710.83 1210.65 L1710.24 1210.65 L1709.66 1210.65 L1709.07 1210.65 L1708.49 1210.65 L1707.9 1210.65 L1707.31 1210.65 L1706.73 1210.65 L1706.14 1210.65 L1705.55 1210.65 L1704.97 1210.65 L1704.38 1210.65 L1703.79 1210.65 L1703.21 1210.65 L1702.62 1210.65 L1702.04 1210.65 L1701.45 1210.65 L1700.86 1210.65 L1700.28 1210.65 L1699.69 1210.65 L1699.1 1210.65 L1698.52 1210.65 L1697.93 1210.65 L1697.34 1210.65 L1696.76 1210.65 L1696.17 1210.65 L1695.58 1210.65 L1695 1210.65 L1694.41 1210.65 L1693.83 1210.65 L1693.24 1210.65 L1692.65 1210.65 L1692.07 1210.65 L1691.48 1210.65 L1690.89 1210.65 L1690.31 1210.65 L1689.72 1210.65 L1689.13 1210.65 L1688.55 1210.65 L1687.96 1210.65 L1687.37 1210.65 L1686.79 1210.65 L1686.2 1210.65 L1685.62 1210.65 L1685.03 1210.65 L1684.44 1210.65 L1683.86 1210.65 L1683.27 1210.65 L1682.68 1210.65 L1682.1 1210.65 L1681.51 1210.65 L1680.92 1210.65 L1680.34 1210.65 L1679.75 1210.65 L1679.17 1210.65 L1678.58 1210.65 L1677.99 1210.65 L1677.41 1210.65 L1676.82 1210.65 L1676.23 1210.65 L1675.65 1210.65 L1675.06 1210.65 L1674.47 1210.65 L1673.89 1210.65 L1673.3 1210.65 L1672.71 1210.65 L1672.13 1210.65 L1671.54 1210.65 L1670.96 1210.65 L1670.37 1210.65 L1669.78 1210.65 L1669.2 1210.65 L1668.61 1210.65 L1668.02 1210.65 L1667.44 1210.65 L1666.85 1210.65 L1666.26 1210.65 L1665.68 1210.65 L1665.09 1210.65 L1664.5 1210.65 L1663.92 1210.65 L1663.33 1210.65 L1662.75 1210.65 L1662.16 1210.65 L1661.57 1210.65 L1660.99 1210.65 L1660.4 1210.65 L1659.81 1210.65 L1659.23 1210.65 L1658.64 1210.65 L1658.05 1210.65 L1657.47 1210.65 L1656.88 1210.65 L1656.29 1210.65 L1655.71 1210.65 L1655.12 1210.65 L1654.54 1210.65 L1653.95 1210.65 L1653.36 1210.65 L1652.78 1210.65 L1652.19 1210.65 L1651.6 1210.65 L1651.02 1210.65 L1650.43 1210.65 L1649.84 1210.65 L1649.26 1210.65 L1648.67 1210.65 L1648.09 1210.65 L1647.5 1210.65 L1646.91 1210.65 L1646.33 1210.65 L1645.74 1210.65 L1645.15 1210.65 L1644.57 1210.65 L1643.98 1210.65 L1643.39 1210.65 L1642.81 1210.65 L1642.22 1210.65 L1641.63 1210.65 L1641.05 1210.65 L1640.46 1210.65 L1639.88 1210.65 L1639.29 1210.65 L1638.7 1210.65 L1638.12 1210.65 L1637.53 1210.65 L1636.94 1210.65 L1636.36 1210.65 L1635.77 1210.65 L1635.18 1210.65 L1634.6 1210.65 L1634.01 1210.65 L1633.42 1210.65 L1632.84 1210.65 L1632.25 1210.65 L1631.67 1210.65 L1631.08 1210.65 L1630.49 1210.65 L1629.91 1210.65 L1629.32 1210.65 L1628.73 1210.65 L1628.15 1210.65 L1627.56 1210.65 L1626.97 1210.65 L1626.39 1210.65 L1625.8 1210.65 L1625.22 1210.65 L1624.63 1210.65 L1624.04 1210.65 L1623.46 1210.65 L1622.87 1210.65 L1622.28 1210.65 L1621.7 1210.65 L1621.11 1210.65 L1620.52 1210.65 L1619.94 1210.65 L1619.35 1210.65 L1618.76 1210.65 L1618.18 1210.65 L1617.59 1210.65 L1617.01 1210.65 L1616.42 1210.65 L1615.83 1210.65 L1615.25 1210.65 L1614.66 1210.65 L1614.07 1210.65 L1613.49 1210.65 L1612.9 1210.65 L1612.31 1210.65 L1611.73 1210.65 L1611.14 1210.65 L1610.55 1210.65 L1609.97 1210.65 L1609.38 1210.65 L1608.8 1210.65 L1608.21 1210.65 L1607.62 1210.65 L1607.04 1210.65 L1606.45 1210.65 L1605.86 1210.65 L1605.28 1210.65 L1604.69 1210.65 L1604.1 1210.65 L1603.52 1210.65 L1602.93 1210.65 L1602.34 1210.65 L1601.76 1210.65 L1601.17 1210.65 L1600.59 1210.65 L1600 1210.65 L1599.41 1210.65 L1598.83 1210.65 L1598.24 1210.65 L1597.65 1210.65 L1597.07 1210.65 L1596.48 1210.65 L1595.89 1210.65 L1595.31 1210.65 L1594.72 1210.65 L1594.14 1210.65 L1593.55 1210.65 L1592.96 1210.65 L1592.38 1210.65 L1591.79 1210.65 L1591.2 1210.65 L1590.62 1210.65 L1590.03 1210.65 L1589.44 1210.65 L1588.86 1210.65 L1588.27 1210.65 L1587.68 1210.65 L1587.1 1210.65 L1586.51 1210.65 L1585.93 1210.65 L1585.34 1210.65 L1584.75 1210.65 L1584.17 1210.65 L1583.58 1210.65 L1582.99 1210.65 L1582.41 1210.65 L1581.82 1210.65 L1581.23 1210.65 L1580.65 1210.65 L1580.06 1210.65 L1579.47 1210.65 L1578.89 1210.65 L1578.3 1210.65 L1577.72 1210.65 L1577.13 1210.65 L1576.54 1210.65 L1575.96 1210.65 L1575.37 1210.65 L1574.78 1210.65 L1574.2 1210.65 L1573.61 1210.65 L1573.02 1210.65 L1572.44 1210.65 L1571.85 1210.65 L1571.27 1210.65 L1570.68 1210.65 L1570.09 1210.65 L1569.51 1210.65 L1568.92 1210.65 L1568.33 1210.65 L1567.75 1210.65 L1567.16 1210.65 L1566.57 1210.65 L1565.99 1210.65 L1565.4 1210.65 L1564.81 1210.65 L1564.23 1210.65 L1563.64 1210.65 L1563.06 1210.65 L1562.47 1210.65 L1561.88 1210.65 L1561.3 1210.65 L1560.71 1210.65 L1560.12 1210.65 L1559.54 1210.65 L1558.95 1210.65 L1558.36 1210.65 L1557.78 1210.65 L1557.19 1210.65 L1556.6 1210.65 L1556.02 1210.65 L1555.43 1210.65 L1554.85 1210.65 L1554.26 1210.65 L1553.67 1210.65 L1553.09 1210.65 L1552.5 1210.65 L1551.91 1210.65 L1551.33 1210.65 L1550.74 1210.65 L1550.15 1210.65 L1549.57 1210.65 L1548.98 1210.65 L1548.4 1210.65 L1547.81 1210.65 L1547.22 1210.65 L1546.64 1210.65 L1546.05 1210.65 L1545.46 1210.65 L1544.88 1210.65 L1544.29 1210.65 L1543.7 1210.65 L1543.12 1210.65 L1542.53 1210.65 L1541.94 1210.65 L1541.36 1210.65 L1540.77 1210.65 L1540.19 1210.65 L1539.6 1210.65 L1539.01 1210.65 L1538.43 1210.65 L1537.84 1210.65 L1537.25 1210.65 L1536.67 1210.65 L1536.08 1210.65 L1535.49 1210.65 L1534.91 1210.65 L1534.32 1210.65 L1533.73 1210.65 L1533.15 1210.65 L1532.56 1210.65 L1531.98 1210.65 L1531.39 1210.65 L1530.8 1210.65 L1530.22 1210.65 L1529.63 1210.65 L1529.04 1210.65 L1528.46 1210.65 L1527.87 1210.65 L1527.28 1210.65 L1526.7 1210.65 L1526.11 1210.65 L1525.52 1210.65 L1524.94 1210.65 L1524.35 1210.65 L1523.77 1210.65 L1523.18 1210.65 L1522.59 1210.65 L1522.01 1210.65 L1521.42 1210.65 L1520.83 1210.65 L1520.25 1210.65 L1519.66 1210.65 L1519.07 1210.65 L1518.49 1210.65 L1517.9 1210.65 L1517.32 1210.65 L1516.73 1210.65 L1516.14 1210.65 L1515.56 1210.65 L1514.97 1210.65 L1514.38 1210.65 L1513.8 1210.65 L1513.21 1210.65 L1512.62 1210.65 L1512.04 1210.65 L1511.45 1210.65 L1510.86 1210.65 L1510.28 1210.65 L1509.69 1210.65 L1509.11 1210.65 L1508.52 1210.65 L1507.93 1210.65 L1507.35 1210.65 L1506.76 1210.65 L1506.17 1210.65 L1505.59 1210.65 L1505 1210.65 L1504.41 1210.65 L1503.83 1210.65 L1503.24 1210.65 L1502.65 1210.65 L1502.07 1210.65 L1501.48 1210.65 L1500.9 1210.65 L1500.31 1210.65 L1499.72 1210.65 L1499.14 1210.65 L1498.55 1210.65 L1497.96 1210.65 L1497.38 1210.65 L1496.79 1210.65 L1496.2 1210.65 L1495.62 1210.65 L1495.03 1210.65 L1494.45 1210.65 L1493.86 1210.65 L1493.27 1210.65 L1492.69 1210.65 L1492.1 1210.65 L1491.51 1210.65 L1490.93 1210.65 L1490.34 1210.65 L1489.75 1210.65 L1489.17 1210.65 L1488.58 1210.65 L1487.99 1210.65 L1487.41 1210.65 L1486.82 1210.65 L1486.24 1210.65 L1485.65 1210.65 L1485.06 1210.65 L1484.48 1210.65 L1483.89 1210.65 L1483.3 1210.65 L1482.72 1210.65 L1482.13 1210.65 L1481.54 1210.65 L1480.96 1210.65 L1480.37 1210.65 L1479.78 1210.65 L1479.2 1210.65 L1478.61 1210.65 L1478.03 1210.65 L1477.44 1210.65 L1476.85 1210.65 L1476.27 1210.65 L1475.68 1210.65 L1475.09 1210.65 L1474.51 1210.65 L1473.92 1210.65 L1473.33 1210.65 L1472.75 1210.65 L1472.16 1210.65 L1471.57 1210.65 L1470.99 1210.65 L1470.4 1210.65 L1469.82 1210.65 L1469.23 1210.65 L1468.64 1210.65 L1468.06 1210.65 L1467.47 1210.65 L1466.88 1210.65 L1466.3 1210.65 L1465.71 1210.65 L1465.12 1210.65 L1464.54 1210.65 L1463.95 1210.65 L1463.37 1210.65 L1462.78 1210.65 L1462.19 1210.65 L1461.61 1210.65 L1461.02 1210.65 L1460.43 1210.65 L1459.85 1210.65 L1459.26 1210.65 L1458.67 1210.65 L1458.09 1210.65 L1457.5 1210.65 L1456.91 1210.65 L1456.33 1210.65 L1455.74 1210.65 L1455.16 1210.65 L1454.57 1210.65 L1453.98 1210.65 L1453.4 1210.65 L1452.81 1210.65 L1452.22 1210.65 L1451.64 1210.65 L1451.05 1210.65 L1450.46 1210.65 L1449.88 1210.65 L1449.29 1210.65 L1448.7 1210.65 L1448.12 1210.65 L1447.53 1210.65 L1446.95 1210.65 L1446.36 1210.65 L1445.77 1210.65 L1445.19 1210.65 L1444.6 1210.65 L1444.01 1210.65 L1443.43 1210.65 L1442.84 1210.65 L1442.25 1210.65 L1441.67 1210.65 L1441.08 1210.65 L1440.5 1210.65 L1439.91 1210.65 L1439.32 1210.65 L1438.74 1210.65 L1438.15 1210.65 L1437.56 1210.65 L1436.98 1210.65 L1436.39 1210.65 L1435.8 1210.65 L1435.22 1210.65 L1434.63 1210.65 L1434.04 1210.65 L1433.46 1210.65 L1432.87 1210.65 L1432.29 1210.65 L1431.7 1210.65 L1431.11 1210.65 L1430.53 1210.65 L1429.94 1210.65 L1429.35 1210.65 L1428.77 1210.65 L1428.18 1210.65 L1427.59 1210.65 L1427.01 1210.65 L1426.42 1210.65 L1425.83 1210.65 L1425.25 1210.65 L1424.66 1210.65 L1424.08 1210.65 L1423.49 1210.65 L1422.9 1210.65 L1422.32 1210.65 L1421.73 1210.65 L1421.14 1210.65 L1420.56 1210.65 L1419.97 1210.65 L1419.38 1210.65 L1418.8 1210.65 L1418.21 1210.65 L1417.63 1210.65 L1417.04 1210.65 L1416.45 1210.65 L1415.87 1210.65 L1415.28 1210.65 L1414.69 1210.65 L1414.11 1210.65 L1413.52 1210.65 L1412.93 1210.65 L1412.35 1210.65 L1411.76 1210.65 L1411.17 1210.65 L1410.59 1210.65 L1410 1210.65 L1409.42 1210.65 L1408.83 1210.65 L1408.24 1210.65 L1407.66 1210.65 L1407.07 1210.65 L1406.48 1210.65 L1405.9 1210.65 L1405.31 1210.65 L1404.72 1210.65 L1404.14 1210.65 L1403.55 1210.65 L1402.96 1210.65 L1402.38 1210.65 L1401.79 1210.65 L1401.21 1210.65 L1400.62 1210.65 L1400.03 1210.65 L1399.45 1210.65 L1398.86 1210.65 L1398.27 1210.65 L1397.69 1210.65 L1397.1 1210.65 L1396.51 1210.65 L1395.93 1210.65 L1395.34 1210.65 L1394.75 1210.65 L1394.17 1210.65 L1393.58 1210.65 L1393 1210.65 L1392.41 1210.65 L1391.82 1210.65 L1391.24 1210.65 L1390.65 1210.65 L1390.06 1210.65 L1389.48 1210.65 L1388.89 1210.65 L1388.3 1210.65 L1387.72 1210.65 L1387.13 1210.65 L1386.55 1210.65 L1385.96 1210.65 L1385.37 1210.65 L1384.79 1210.65 L1384.2 1210.65 L1383.61 1210.65 L1383.03 1210.65 L1382.44 1210.65 L1381.85 1210.65 L1381.27 1210.65 L1380.68 1210.65 L1380.09 1210.65 L1379.51 1210.65 L1378.92 1210.65 L1378.34 1210.65 L1377.75 1210.65 L1377.16 1210.65 L1376.58 1210.65 L1375.99 1210.65 L1375.4 1210.65 L1374.82 1210.65 L1374.23 1210.65 L1373.64 1210.65 L1373.06 1210.65 L1372.47 1210.65 L1371.88 1210.65 L1371.3 1210.65 L1370.71 1210.65 L1370.13 1210.65 L1369.54 1210.65 L1368.95 1210.65 L1368.37 1210.65 L1367.78 1210.65 L1367.19 1210.65 L1366.61 1210.65 L1366.02 1210.65 L1365.43 1210.65 L1364.85 1210.65 L1364.26 1210.65 L1363.68 1210.65 L1363.09 1210.65 L1362.5 1210.65 L1361.92 1210.65 L1361.33 1210.65 L1360.74 1210.65 L1360.16 1210.65 L1359.57 1210.65 L1358.98 1210.65 L1358.4 1210.65 L1357.81 1210.65 L1357.22 1210.65 L1356.64 1210.65 L1356.05 1210.65 L1355.47 1210.65 L1354.88 1210.65 L1354.29 1210.65 L1353.71 1210.65 L1353.12 1210.65 L1352.53 1210.65 L1351.95 1210.65 L1351.36 1210.65 L1350.77 1210.65 L1350.19 1210.65 L1349.6 1210.65 L1349.01 1210.65 L1348.43 1210.65 L1347.84 1210.65 L1347.26 1210.65 L1346.67 1210.65 L1346.08 1210.65 L1345.5 1210.65 L1344.91 1210.65 L1344.32 1210.65 L1343.74 1210.65 L1343.15 1210.65 L1342.56 1210.65 L1341.98 1210.65 L1341.39 1210.65 L1340.8 1210.65 L1340.22 1210.65 L1339.63 1210.65 L1339.05 1210.65 L1338.46 1210.65 L1337.87 1210.65 L1337.29 1210.65 L1336.7 1210.65 L1336.11 1210.65 L1335.53 1210.65 L1334.94 1210.65 L1334.35 1210.65 L1333.77 1210.65 L1333.18 1210.65 L1332.6 1210.65 L1332.01 1210.65 L1331.42 1210.65 L1330.84 1210.65 L1330.25 1210.65 L1329.66 1210.65 L1329.08 1210.65 L1328.49 1210.65 L1327.9 1210.65 L1327.32 1210.65 L1326.73 1210.65 L1326.14 1210.65 L1325.56 1210.65 L1324.97 1210.65 L1324.39 1210.65 L1323.8 1210.65 L1323.21 1210.65 L1322.63 1210.65 L1322.04 1210.65 L1321.45 1210.65 L1320.87 1210.65 L1320.28 1210.65 L1319.69 1210.65 L1319.11 1210.65 L1318.52 1210.65 L1317.93 1210.65 L1317.35 1210.65 L1316.76 1210.65 L1316.18 1210.65 L1315.59 1210.65 L1315 1210.65 L1314.42 1210.65 L1313.83 1210.65 L1313.24 1210.65 L1312.66 1210.65 L1312.07 1210.65 L1311.48 1210.65 L1310.9 1210.65 L1310.31 1210.65 L1309.73 1210.65 L1309.14 1210.65 L1308.55 1210.65 L1307.97 1210.65 L1307.38 1210.65 L1306.79 1210.65 L1306.21 1210.65 L1305.62 1210.65 L1305.03 1210.65 L1304.45 1210.65 L1303.86 1210.65 L1303.27 1210.65 L1302.69 1210.65 L1302.1 1210.65 L1301.52 1210.65 L1300.93 1210.65 L1300.34 1210.65 L1299.76 1210.65 L1299.17 1210.65 L1298.58 1210.65 L1298 1210.65 L1297.41 1210.65 L1296.82 1210.65 L1296.24 1210.65 L1295.65 1210.65 L1295.06 1210.65 L1294.48 1210.65 L1293.89 1210.65 L1293.31 1210.65 L1292.72 1210.65 L1292.13 1210.65 L1291.55 1210.65 L1290.96 1210.65 L1290.37 1210.65 L1289.79 1210.65 L1289.2 1210.65 L1288.61 1210.65 L1288.03 1210.65 L1287.44 1210.65 L1286.86 1210.65 L1286.27 1210.65 L1285.68 1210.65 L1285.1 1210.65 L1284.51 1210.65 L1283.92 1210.65 L1283.34 1210.65 L1282.75 1210.65 L1282.16 1210.65 L1281.58 1210.65 L1280.99 1210.65 L1280.4 1210.65 L1279.82 1210.65 L1279.23 1210.65 L1278.65 1210.65 L1278.06 1210.65 L1277.47 1210.65 L1276.89 1210.65 L1276.3 1210.65 L1275.71 1210.65 L1275.13 1210.65 L1274.54 1210.65 L1273.95 1210.65 L1273.37 1210.65 L1272.78 1210.65 L1272.19 1210.65 L1271.61 1210.65 L1271.02 1210.65 L1270.44 1210.65 L1269.85 1210.65 L1269.26 1210.65 L1268.68 1210.65 L1268.09 1210.65 L1267.5 1210.65 L1266.92 1210.65 L1266.33 1210.65 L1265.74 1210.65 L1265.16 1210.65 L1264.57 1210.65 L1263.98 1210.65 L1263.4 1210.65 L1262.81 1210.65 L1262.23 1210.65 L1261.64 1210.65 L1261.05 1210.65 L1260.47 1210.65 L1259.88 1210.65 L1259.29 1210.65 L1258.71 1210.65 L1258.12 1210.65 L1257.53 1210.65 L1256.95 1210.65 L1256.36 1210.65 L1255.78 1210.65 L1255.19 1210.65 L1254.6 1210.65 L1254.02 1210.65 L1253.43 1210.65 L1252.84 1210.65 L1252.26 1210.65 L1251.67 1210.65 L1251.08 1210.65 L1250.5 1210.65 L1249.91 1210.65 L1249.32 1210.65 L1248.74 1210.65 L1248.15 1210.65 L1247.57 1210.65 L1246.98 1210.65 L1246.39 1210.65 L1245.81 1210.65 L1245.22 1210.65 L1244.63 1210.65 L1244.05 1210.65 L1243.46 1210.65 L1242.87 1210.65 L1242.29 1210.65 L1241.7 1210.65 L1241.11 1210.65 L1240.53 1210.65 L1239.94 1210.65 L1239.36 1210.65 L1238.77 1210.65 L1238.18 1210.65 L1237.6 1210.65 L1237.01 1210.65 L1236.42 1210.65 L1235.84 1210.65 L1235.25 1210.65 L1234.66 1210.65 L1234.08 1210.65 L1233.49 1210.65 L1232.91 1210.65 L1232.32 1210.65 L1231.73 1210.65 L1231.15 1210.65 L1230.56 1210.65 L1229.97 1210.65 L1229.39 1210.65 L1228.8 1210.65 L1228.21 1210.65 L1227.63 1210.65 L1227.04 1210.65 L1226.45 1210.65 L1225.87 1210.65 L1225.28 1210.65 L1224.7 1210.65 L1224.11 1210.65 L1223.52 1210.65 L1222.94 1210.65 L1222.35 1210.65 L1221.76 1210.65 L1221.18 1210.65 L1220.59 1210.65 L1220 1210.65 L1219.42 1210.65 L1218.83 1210.65 L1218.24 1210.65 L1217.66 1210.65 L1217.07 1210.65 L1216.49 1210.65 L1215.9 1210.65 L1215.31 1210.65 L1214.73 1210.65 L1214.14 1210.65 L1213.55 1210.65 L1212.97 1210.65 L1212.38 1210.65 L1211.79 1210.65 L1211.21 1210.65 L1210.62 1210.65 L1210.03 1210.65 L1209.45 1210.65 L1208.86 1210.65 L1208.28 1210.65 L1207.69 1210.65 L1207.1 1210.65 L1206.52 1210.65 L1205.93 1210.65 L1205.34 1210.65 L1204.76 1210.65 L1204.17 1210.65 L1203.58 1210.65 L1203 1210.65 L1202.41 1210.65 L1201.83 1210.65 L1201.24 1210.65 L1200.65 1210.65 L1200.07 1210.65 L1199.48 1210.65 L1198.89 1210.65 L1198.31 1210.65 L1197.72 1210.65 L1197.13 1210.65 L1196.55 1210.65 L1195.96 1210.65 L1195.37 1210.65 L1194.79 1210.65 L1194.2 1210.65 L1193.62 1210.65 L1193.03 1210.65 L1192.44 1210.65 L1191.86 1210.65 L1191.27 1210.65 L1190.68 1210.65 L1190.1 1210.65 L1189.51 1210.65 L1188.92 1210.65 L1188.34 1210.65 L1187.75 1210.65 L1187.16 1210.65 L1186.58 1210.65 L1185.99 1210.65 L1185.41 1210.65 L1184.82 1210.65 L1184.23 1210.65 L1183.65 1210.65 L1183.06 1210.65 L1182.47 1210.65 L1181.89 1210.65 L1181.3 1210.65 L1180.71 1210.65 L1180.13 1210.65 L1179.54 1210.65 L1178.96 1210.65 L1178.37 1210.65 L1177.78 1210.65 L1177.2 1210.65 L1176.61 1210.65 L1176.02 1210.65 L1175.44 1210.65 L1174.85 1210.65 L1174.26 1210.65 L1173.68 1210.65 L1173.09 1210.65 L1172.5 1210.65 L1171.92 1210.65 L1171.33 1210.65 L1170.75 1210.65 L1170.16 1210.65 L1169.57 1210.65 L1168.99 1210.65 L1168.4 1210.65 L1167.81 1210.65 L1167.23 1210.65 L1166.64 1210.65 L1166.05 1210.65 L1165.47 1210.65 L1164.88 1210.65 L1164.29 1210.65 L1163.71 1210.65 L1163.12 1210.65 L1162.54 1210.65 L1161.95 1210.65 L1161.36 1210.65 L1160.78 1210.65 L1160.19 1210.65 L1159.6 1210.65 L1159.02 1210.65 L1158.43 1210.65 L1157.84 1210.65 L1157.26 1210.65 L1156.67 1210.65 L1156.09 1210.65 L1155.5 1210.65 L1154.91 1210.65 L1154.33 1210.65 L1153.74 1210.65 L1153.15 1210.65 L1152.57 1210.65 L1151.98 1210.65 L1151.39 1210.65 L1150.81 1210.65 L1150.22 1210.65 L1149.63 1210.65 L1149.05 1210.65 L1148.46 1210.65 L1147.88 1210.65 L1147.29 1210.65 L1146.7 1210.65 L1146.12 1210.65 L1145.53 1210.65 L1144.94 1210.65 L1144.36 1210.65 L1143.77 1210.65 L1143.18 1210.65 L1142.6 1210.65 L1142.01 1210.65 L1141.42 1210.65 L1140.84 1210.65 L1140.25 1210.65 L1139.67 1210.65 L1139.08 1210.65 L1138.49 1210.65 L1137.91 1210.65 L1137.32 1210.65 L1136.73 1210.65 L1136.15 1210.65 L1135.56 1210.65 L1134.97 1210.65 L1134.39 1210.65 L1133.8 1210.65 L1133.21 1210.65 L1132.63 1210.65 L1132.04 1210.65 L1131.46 1210.65 L1130.87 1210.65 L1130.28 1210.65 L1129.7 1210.65 L1129.11 1210.65 L1128.52 1210.65 L1127.94 1210.65 L1127.35 1210.65 L1126.76 1210.65 L1126.18 1210.65 L1125.59 1210.65 L1125.01 1210.65 L1124.42 1210.65 L1123.83 1210.65 L1123.25 1210.65 L1122.66 1210.65 L1122.07 1210.65 L1121.49 1210.65 L1120.9 1210.65 L1120.31 1210.65 L1119.73 1210.65 L1119.14 1210.65 L1118.55 1210.65 L1117.97 1210.65 L1117.38 1210.65 L1116.8 1210.65 L1116.21 1210.65 L1115.62 1210.65 L1115.04 1210.65 L1114.45 1210.65 L1113.86 1210.65 L1113.28 1210.65 L1112.69 1210.65 L1112.1 1210.65 L1111.52 1210.65 L1110.93 1210.65 L1110.34 1210.65 L1109.76 1210.65 L1109.17 1210.65 L1108.59 1210.65 L1108 1210.65 L1107.41 1210.65 L1106.83 1210.65 L1106.24 1210.65 L1105.65 1210.65 L1105.07 1210.65 L1104.48 1210.65 L1103.89 1210.65 L1103.31 1210.65 L1102.72 1210.65 L1102.14 1210.65 L1101.55 1210.65 L1100.96 1210.65 L1100.38 1210.65 L1099.79 1210.65 L1099.2 1210.65 L1098.62 1210.65 L1098.03 1210.65 L1097.44 1210.65 L1096.86 1210.65 L1096.27 1210.65 L1095.68 1210.65 L1095.1 1210.65 L1094.51 1210.65 L1093.93 1210.65 L1093.34 1210.65 L1092.75 1210.65 L1092.17 1210.65 L1091.58 1210.65 L1090.99 1210.65 L1090.41 1210.65 L1089.82 1210.65 L1089.23 1210.65 L1088.65 1210.65 L1088.06 1210.65 L1087.47 1210.65 L1086.89 1210.65 L1086.3 1210.65 L1085.72 1210.65 L1085.13 1210.65 L1084.54 1210.65 L1083.96 1210.65 L1083.37 1210.65 L1082.78 1210.65 L1082.2 1210.65 L1081.61 1210.65 L1081.02 1210.65 L1080.44 1210.65 L1079.85 1210.65 L1079.26 1210.65 L1078.68 1210.65 L1078.09 1210.65 L1077.51 1210.65 L1076.92 1210.65 L1076.33 1210.65 L1075.75 1210.65 L1075.16 1210.65 L1074.57 1210.65 L1073.99 1210.65 L1073.4 1210.65 L1072.81 1210.65 L1072.23 1210.65 L1071.64 1210.65 L1071.06 1210.65 L1070.47 1210.65 L1069.88 1210.65 L1069.3 1210.65 L1068.71 1210.65 L1068.12 1210.65 L1067.54 1210.65 L1066.95 1210.65 L1066.36 1210.65 L1065.78 1210.65 L1065.19 1210.65 L1064.6 1210.65 L1064.02 1210.65 L1063.43 1210.65 L1062.85 1210.65 L1062.26 1210.65 L1061.67 1210.65 L1061.09 1210.65 L1060.5 1210.65 L1059.91 1210.65 L1059.33 1210.65 L1058.74 1210.65 L1058.15 1210.65 L1057.57 1210.65 L1056.98 1210.65 L1056.39 1210.65 L1055.81 1210.65 L1055.22 1210.65 L1054.64 1210.65 L1054.05 1210.65 L1053.46 1210.65 L1052.88 1210.65 L1052.29 1210.65 L1051.7 1210.65 L1051.12 1210.65 L1050.53 1210.65 L1049.94 1210.65 L1049.36 1210.65 L1048.77 1210.65 L1048.19 1210.65 L1047.6 1210.65 L1047.01 1210.65 L1046.43 1210.65 L1045.84 1210.65 L1045.25 1210.65 L1044.67 1210.65 L1044.08 1210.65 L1043.49 1210.65 L1042.91 1210.65 L1042.32 1210.65 L1041.73 1210.65 L1041.15 1210.65 L1040.56 1210.65 L1039.98 1210.65 L1039.39 1210.65 L1038.8 1210.65 L1038.22 1210.65 L1037.63 1210.65 L1037.04 1210.65 L1036.46 1210.65 L1035.87 1210.65 L1035.28 1210.65 L1034.7 1210.65 L1034.11 1210.65 L1033.52 1210.65 L1032.94 1210.65 L1032.35 1210.65 L1031.77 1210.65 L1031.18 1210.65 L1030.59 1210.65 L1030.01 1210.65 L1029.42 1210.65 L1028.83 1210.65 L1028.25 1210.65 L1027.66 1210.65 L1027.07 1210.65 L1026.49 1210.65 L1025.9 1210.65 L1025.32 1210.65 L1024.73 1210.65 L1024.14 1210.65 L1023.56 1210.65 L1022.97 1210.65 L1022.38 1210.65 L1021.8 1210.65 L1021.21 1210.65 L1020.62 1210.65 L1020.04 1210.65 L1019.45 1210.65 L1018.86 1210.65 L1018.28 1210.65 L1017.69 1210.65 L1017.11 1210.65 L1016.52 1210.65 L1015.93 1210.65 L1015.35 1210.65 L1014.76 1210.65 L1014.17 1210.65 L1013.59 1210.65 L1013 1210.65 L1012.41 1210.65 L1011.83 1210.65 L1011.24 1210.65 L1010.65 1210.65 L1010.07 1210.65 L1009.48 1210.65 L1008.9 1210.65 L1008.31 1210.65 L1007.72 1210.65 L1007.14 1210.65 L1006.55 1210.65 L1005.96 1210.65 L1005.38 1210.65 L1004.79 1210.65 L1004.2 1210.65 L1003.62 1210.65 L1003.03 1210.65 L1002.44 1210.65 L1001.86 1210.65 L1001.27 1210.65 L1000.69 1210.65 L1000.1 1210.65 L999.513 1210.65 L998.926 1210.65 L998.34 1210.65 L997.754 1210.65 L997.167 1210.65 L996.581 1210.65 L995.994 1210.65 L995.408 1210.65 L994.822 1210.65 L994.235 1210.65 L993.649 1210.65 L993.062 1210.65 L992.476 1210.65 L991.889 1210.65 L991.303 1210.65 L990.717 1210.65 L990.13 1210.65 L989.544 1210.65 L988.957 1210.65 L988.371 1210.65 L987.785 1210.65 L987.198 1210.65 L986.612 1210.65 L986.025 1210.65  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.71 986.612,1210.71 987.198,1210.71 987.785,1210.71 988.371,1210.71 988.957,1210.71 989.544,1210.71 990.13,1210.71 990.717,1210.71 991.303,1210.71 991.889,1210.71 992.476,1210.71 993.062,1210.71 993.649,1210.71 994.235,1210.71 994.822,1210.71 995.408,1210.71 995.994,1210.71 996.581,1210.71 997.167,1210.71 997.754,1210.71 998.34,1210.71 998.926,1210.71 999.513,1210.71 1000.1,1210.71 1000.69,1210.71 1001.27,1210.71 1001.86,1210.71 1002.44,1210.71 1003.03,1210.71 1003.62,1210.71 1004.2,1210.71 1004.79,1210.71 1005.38,1210.71 1005.96,1210.71 1006.55,1210.71 1007.14,1210.71 1007.72,1210.71 1008.31,1210.71 1008.9,1210.71 1009.48,1210.71 1010.07,1210.71 1010.65,1210.71 1011.24,1210.71 1011.83,1210.71 1012.41,1210.71 1013,1210.71 1013.59,1210.71 1014.17,1210.71 1014.76,1210.71 1015.35,1210.71 1015.93,1210.71 1016.52,1210.71 1017.11,1210.71 1017.69,1210.71 1018.28,1210.71 1018.86,1210.71 1019.45,1210.71 1020.04,1210.71 1020.62,1210.71 1021.21,1210.71 1021.8,1210.71 1022.38,1210.71 1022.97,1210.71 1023.56,1210.71 1024.14,1210.71 1024.73,1210.71 1025.32,1210.71 1025.9,1210.71 1026.49,1210.71 1027.07,1210.71 1027.66,1210.71 1028.25,1210.71 1028.83,1210.71 1029.42,1210.71 1030.01,1210.71 1030.59,1210.71 1031.18,1210.71 1031.77,1210.71 1032.35,1210.71 1032.94,1210.71 1033.52,1210.71 1034.11,1210.71 1034.7,1210.71 1035.28,1210.71 1035.87,1210.71 1036.46,1210.71 1037.04,1210.71 1037.63,1210.71 1038.22,1210.71 1038.8,1210.71 1039.39,1210.71 1039.98,1210.71 1040.56,1210.71 1041.15,1210.71 1041.73,1210.71 1042.32,1210.71 1042.91,1210.71 1043.49,1210.71 1044.08,1210.71 1044.67,1210.71 1045.25,1210.71 1045.84,1210.71 1046.43,1210.71 1047.01,1210.71 1047.6,1210.71 1048.19,1210.71 1048.77,1210.71 1049.36,1210.71 1049.94,1210.71 1050.53,1210.71 1051.12,1210.71 1051.7,1210.71 1052.29,1210.71 1052.88,1210.71 1053.46,1210.71 1054.05,1210.71 1054.64,1210.71 1055.22,1210.71 1055.81,1210.71 1056.39,1210.71 1056.98,1210.71 1057.57,1210.71 1058.15,1210.71 1058.74,1210.71 1059.33,1210.71 1059.91,1210.71 1060.5,1210.71 1061.09,1210.71 1061.67,1210.71 1062.26,1210.71 1062.85,1210.71 1063.43,1210.71 1064.02,1210.71 1064.6,1210.71 1065.19,1210.71 1065.78,1210.71 1066.36,1210.71 1066.95,1210.71 1067.54,1210.71 1068.12,1210.71 1068.71,1210.71 1069.3,1210.71 1069.88,1210.71 1070.47,1210.71 1071.06,1210.71 1071.64,1210.71 1072.23,1210.71 1072.81,1210.71 1073.4,1210.71 1073.99,1210.71 1074.57,1210.71 1075.16,1210.71 1075.75,1210.71 1076.33,1210.71 1076.92,1210.71 1077.51,1210.71 1078.09,1210.71 1078.68,1210.71 1079.26,1210.71 1079.85,1210.71 1080.44,1210.71 1081.02,1210.71 1081.61,1210.71 1082.2,1210.71 1082.78,1210.71 1083.37,1210.71 1083.96,1210.71 1084.54,1210.71 1085.13,1210.71 1085.72,1210.71 1086.3,1210.71 1086.89,1210.71 1087.47,1210.71 1088.06,1210.71 1088.65,1210.71 1089.23,1210.71 1089.82,1210.71 1090.41,1210.71 1090.99,1210.71 1091.58,1210.71 1092.17,1210.71 1092.75,1210.71 1093.34,1210.71 1093.93,1210.71 1094.51,1210.71 1095.1,1210.71 1095.68,1210.71 1096.27,1210.71 1096.86,1210.71 1097.44,1210.71 1098.03,1210.71 1098.62,1210.71 1099.2,1210.71 1099.79,1210.71 1100.38,1210.71 1100.96,1210.71 1101.55,1210.71 1102.14,1210.71 1102.72,1210.71 1103.31,1210.71 1103.89,1210.71 1104.48,1210.71 1105.07,1210.71 1105.65,1210.71 1106.24,1210.71 1106.83,1210.71 1107.41,1210.71 1108,1210.71 1108.59,1210.71 1109.17,1210.71 1109.76,1210.71 1110.34,1210.71 1110.93,1210.71 1111.52,1210.71 1112.1,1210.71 1112.69,1210.71 1113.28,1210.71 1113.86,1210.71 1114.45,1210.71 1115.04,1210.71 1115.62,1210.71 1116.21,1210.71 1116.8,1210.71 1117.38,1210.71 1117.97,1210.71 1118.55,1210.71 1119.14,1210.71 1119.73,1210.71 1120.31,1210.71 1120.9,1210.71 1121.49,1210.71 1122.07,1210.71 1122.66,1210.71 1123.25,1210.71 1123.83,1210.71 1124.42,1210.71 1125.01,1210.71 1125.59,1210.71 1126.18,1210.71 1126.76,1210.71 1127.35,1210.71 1127.94,1210.71 1128.52,1210.71 1129.11,1210.71 1129.7,1210.71 1130.28,1210.71 1130.87,1210.71 1131.46,1210.71 1132.04,1210.71 1132.63,1210.71 1133.21,1210.71 1133.8,1210.71 1134.39,1210.71 1134.97,1210.71 1135.56,1210.71 1136.15,1210.71 1136.73,1210.71 1137.32,1210.71 1137.91,1210.71 1138.49,1210.71 1139.08,1210.71 1139.67,1210.71 1140.25,1210.71 1140.84,1210.71 1141.42,1210.71 1142.01,1210.71 1142.6,1210.71 1143.18,1210.71 1143.77,1210.71 1144.36,1210.71 1144.94,1210.71 1145.53,1210.71 1146.12,1210.71 1146.7,1210.71 1147.29,1210.71 1147.88,1210.71 1148.46,1210.71 1149.05,1210.71 1149.63,1210.71 1150.22,1210.71 1150.81,1210.71 1151.39,1210.71 1151.98,1210.71 1152.57,1210.71 1153.15,1210.71 1153.74,1210.71 1154.33,1210.71 1154.91,1210.71 1155.5,1210.71 1156.09,1210.71 1156.67,1210.71 1157.26,1210.71 1157.84,1210.71 1158.43,1210.71 1159.02,1210.71 1159.6,1210.71 1160.19,1210.71 1160.78,1210.71 1161.36,1210.71 1161.95,1210.71 1162.54,1210.71 1163.12,1210.71 1163.71,1210.71 1164.29,1210.71 1164.88,1210.71 1165.47,1210.71 1166.05,1210.71 1166.64,1210.71 1167.23,1210.71 1167.81,1210.71 1168.4,1210.71 1168.99,1210.71 1169.57,1210.71 1170.16,1210.71 1170.75,1210.71 1171.33,1210.71 1171.92,1210.71 1172.5,1210.71 1173.09,1210.71 1173.68,1210.71 1174.26,1210.71 1174.85,1210.71 1175.44,1210.71 1176.02,1210.71 1176.61,1210.71 1177.2,1210.71 1177.78,1210.71 1178.37,1210.71 1178.96,1210.71 1179.54,1210.71 1180.13,1210.71 1180.71,1210.71 1181.3,1210.71 1181.89,1210.71 1182.47,1210.71 1183.06,1210.71 1183.65,1210.71 1184.23,1210.71 1184.82,1210.71 1185.41,1210.71 1185.99,1210.71 1186.58,1210.71 1187.16,1210.71 1187.75,1210.71 1188.34,1210.71 1188.92,1210.71 1189.51,1210.71 1190.1,1210.71 1190.68,1210.71 1191.27,1210.71 1191.86,1210.71 1192.44,1210.71 1193.03,1210.71 1193.62,1210.71 1194.2,1210.71 1194.79,1210.71 1195.37,1210.71 1195.96,1210.71 1196.55,1210.71 1197.13,1210.71 1197.72,1210.71 1198.31,1210.71 1198.89,1210.71 1199.48,1210.71 1200.07,1210.71 1200.65,1210.71 1201.24,1210.71 1201.83,1210.71 1202.41,1210.71 1203,1210.71 1203.58,1210.71 1204.17,1210.71 1204.76,1210.71 1205.34,1210.71 1205.93,1210.71 1206.52,1210.71 1207.1,1210.71 1207.69,1210.71 1208.28,1210.71 1208.86,1210.71 1209.45,1210.71 1210.03,1210.71 1210.62,1210.71 1211.21,1210.71 1211.79,1210.71 1212.38,1210.71 1212.97,1210.71 1213.55,1210.71 1214.14,1210.71 1214.73,1210.71 1215.31,1210.71 1215.9,1210.71 1216.49,1210.71 1217.07,1210.71 1217.66,1210.71 1218.24,1210.71 1218.83,1210.71 1219.42,1210.71 1220,1210.71 1220.59,1210.71 1221.18,1210.71 1221.76,1210.71 1222.35,1210.71 1222.94,1210.71 1223.52,1210.71 1224.11,1210.71 1224.7,1210.71 1225.28,1210.71 1225.87,1210.71 1226.45,1210.71 1227.04,1210.71 1227.63,1210.71 1228.21,1210.71 1228.8,1210.71 1229.39,1210.71 1229.97,1210.71 1230.56,1210.71 1231.15,1210.71 1231.73,1210.71 1232.32,1210.71 1232.91,1210.71 1233.49,1210.71 1234.08,1210.71 1234.66,1210.71 1235.25,1210.71 1235.84,1210.71 1236.42,1210.71 1237.01,1210.71 1237.6,1210.71 1238.18,1210.71 1238.77,1210.71 1239.36,1210.71 1239.94,1210.71 1240.53,1210.71 1241.11,1210.71 1241.7,1210.71 1242.29,1210.71 1242.87,1210.71 1243.46,1210.71 1244.05,1210.71 1244.63,1210.71 1245.22,1210.71 1245.81,1210.71 1246.39,1210.71 1246.98,1210.71 1247.57,1210.71 1248.15,1210.71 1248.74,1210.71 1249.32,1210.71 1249.91,1210.71 1250.5,1210.71 1251.08,1210.71 1251.67,1210.71 1252.26,1210.71 1252.84,1210.71 1253.43,1210.71 1254.02,1210.71 1254.6,1210.71 1255.19,1210.71 1255.78,1210.71 1256.36,1210.71 1256.95,1210.71 1257.53,1210.71 1258.12,1210.71 1258.71,1210.71 1259.29,1210.71 1259.88,1210.71 1260.47,1210.71 1261.05,1210.71 1261.64,1210.71 1262.23,1210.71 1262.81,1210.71 1263.4,1210.71 1263.98,1210.71 1264.57,1210.71 1265.16,1210.71 1265.74,1210.71 1266.33,1210.71 1266.92,1210.71 1267.5,1210.71 1268.09,1210.71 1268.68,1210.71 1269.26,1210.71 1269.85,1210.71 1270.44,1210.71 1271.02,1210.71 1271.61,1210.71 1272.19,1210.71 1272.78,1210.71 1273.37,1210.71 1273.95,1210.71 1274.54,1210.71 1275.13,1210.71 1275.71,1210.71 1276.3,1210.71 1276.89,1210.71 1277.47,1210.71 1278.06,1210.71 1278.65,1210.71 1279.23,1210.71 1279.82,1210.71 1280.4,1210.71 1280.99,1210.71 1281.58,1210.71 1282.16,1210.71 1282.75,1210.71 1283.34,1210.71 1283.92,1210.71 1284.51,1210.71 1285.1,1210.71 1285.68,1210.71 1286.27,1210.71 1286.86,1210.71 1287.44,1210.71 1288.03,1210.71 1288.61,1210.71 1289.2,1210.71 1289.79,1210.71 1290.37,1210.71 1290.96,1210.71 1291.55,1210.71 1292.13,1210.71 1292.72,1210.71 1293.31,1210.71 1293.89,1210.71 1294.48,1210.71 1295.06,1210.71 1295.65,1210.71 1296.24,1210.71 1296.82,1210.71 1297.41,1210.71 1298,1210.71 1298.58,1210.71 1299.17,1210.71 1299.76,1210.71 1300.34,1210.71 1300.93,1210.71 1301.52,1210.71 1302.1,1210.71 1302.69,1210.71 1303.27,1210.71 1303.86,1210.71 1304.45,1210.71 1305.03,1210.71 1305.62,1210.71 1306.21,1210.71 1306.79,1210.71 1307.38,1210.71 1307.97,1210.71 1308.55,1210.71 1309.14,1210.71 1309.73,1210.71 1310.31,1210.71 1310.9,1210.71 1311.48,1210.71 1312.07,1210.71 1312.66,1210.71 1313.24,1210.71 1313.83,1210.71 1314.42,1210.71 1315,1210.71 1315.59,1210.71 1316.18,1210.71 1316.76,1210.71 1317.35,1210.71 1317.93,1210.71 1318.52,1210.71 1319.11,1210.71 1319.69,1210.71 1320.28,1210.71 1320.87,1210.71 1321.45,1210.71 1322.04,1210.71 1322.63,1210.71 1323.21,1210.71 1323.8,1210.71 1324.39,1210.71 1324.97,1210.71 1325.56,1210.71 1326.14,1210.71 1326.73,1210.71 1327.32,1210.71 1327.9,1210.71 1328.49,1210.71 1329.08,1210.71 1329.66,1210.71 1330.25,1210.71 1330.84,1210.71 1331.42,1210.71 1332.01,1210.71 1332.6,1210.71 1333.18,1210.71 1333.77,1210.71 1334.35,1210.71 1334.94,1210.71 1335.53,1210.71 1336.11,1210.71 1336.7,1210.71 1337.29,1210.71 1337.87,1210.71 1338.46,1210.71 1339.05,1210.71 1339.63,1210.71 1340.22,1210.71 1340.8,1210.71 1341.39,1210.71 1341.98,1210.71 1342.56,1210.71 1343.15,1210.71 1343.74,1210.71 1344.32,1210.71 1344.91,1210.71 1345.5,1210.71 1346.08,1210.71 1346.67,1210.71 1347.26,1210.71 1347.84,1210.71 1348.43,1210.71 1349.01,1210.71 1349.6,1210.71 1350.19,1210.71 1350.77,1210.71 1351.36,1210.71 1351.95,1210.71 1352.53,1210.71 1353.12,1210.71 1353.71,1210.71 1354.29,1210.71 1354.88,1210.71 1355.47,1210.71 1356.05,1210.71 1356.64,1210.71 1357.22,1210.71 1357.81,1210.71 1358.4,1210.71 1358.98,1210.71 1359.57,1210.71 1360.16,1210.71 1360.74,1210.71 1361.33,1210.71 1361.92,1210.71 1362.5,1210.71 1363.09,1210.71 1363.68,1210.71 1364.26,1210.71 1364.85,1210.71 1365.43,1210.71 1366.02,1210.71 1366.61,1210.71 1367.19,1210.71 1367.78,1210.71 1368.37,1210.71 1368.95,1210.71 1369.54,1210.71 1370.13,1210.71 1370.71,1210.71 1371.3,1210.71 1371.88,1210.71 1372.47,1210.71 1373.06,1210.71 1373.64,1210.71 1374.23,1210.71 1374.82,1210.71 1375.4,1210.71 1375.99,1210.71 1376.58,1210.71 1377.16,1210.71 1377.75,1210.71 1378.34,1210.71 1378.92,1210.71 1379.51,1210.71 1380.09,1210.71 1380.68,1210.71 1381.27,1210.71 1381.85,1210.71 1382.44,1210.71 1383.03,1210.71 1383.61,1210.71 1384.2,1210.71 1384.79,1210.71 1385.37,1210.71 1385.96,1210.71 1386.55,1210.71 1387.13,1210.71 1387.72,1210.71 1388.3,1210.71 1388.89,1210.71 1389.48,1210.71 1390.06,1210.71 1390.65,1210.71 1391.24,1210.71 1391.82,1210.71 1392.41,1210.71 1393,1210.71 1393.58,1210.71 1394.17,1210.71 1394.75,1210.71 1395.34,1210.71 1395.93,1210.71 1396.51,1210.71 1397.1,1210.71 1397.69,1210.71 1398.27,1210.71 1398.86,1210.71 1399.45,1210.71 1400.03,1210.71 1400.62,1210.71 1401.21,1210.71 1401.79,1210.71 1402.38,1210.71 1402.96,1210.71 1403.55,1210.71 1404.14,1210.71 1404.72,1210.71 1405.31,1210.71 1405.9,1210.71 1406.48,1210.71 1407.07,1210.71 1407.66,1210.71 1408.24,1210.71 1408.83,1210.71 1409.42,1210.71 1410,1210.71 1410.59,1210.71 1411.17,1210.71 1411.76,1210.71 1412.35,1210.71 1412.93,1210.71 1413.52,1210.71 1414.11,1210.71 1414.69,1210.71 1415.28,1210.71 1415.87,1210.71 1416.45,1210.71 1417.04,1210.71 1417.63,1210.71 1418.21,1210.71 1418.8,1210.71 1419.38,1210.71 1419.97,1210.71 1420.56,1210.71 1421.14,1210.71 1421.73,1210.71 1422.32,1210.71 1422.9,1210.71 1423.49,1210.71 1424.08,1210.71 1424.66,1210.71 1425.25,1210.71 1425.83,1210.71 1426.42,1210.71 1427.01,1210.71 1427.59,1210.71 1428.18,1210.71 1428.77,1210.71 1429.35,1210.71 1429.94,1210.71 1430.53,1210.71 1431.11,1210.71 1431.7,1210.71 1432.29,1210.71 1432.87,1210.71 1433.46,1210.71 1434.04,1210.71 1434.63,1210.71 1435.22,1210.71 1435.8,1210.71 1436.39,1210.71 1436.98,1210.71 1437.56,1210.71 1438.15,1210.71 1438.74,1210.71 1439.32,1210.71 1439.91,1210.71 1440.5,1210.71 1441.08,1210.71 1441.67,1210.71 1442.25,1210.71 1442.84,1210.71 1443.43,1210.71 1444.01,1210.71 1444.6,1210.71 1445.19,1210.71 1445.77,1210.71 1446.36,1210.71 1446.95,1210.71 1447.53,1210.71 1448.12,1210.71 1448.7,1210.71 1449.29,1210.71 1449.88,1210.71 1450.46,1210.71 1451.05,1210.71 1451.64,1210.71 1452.22,1210.71 1452.81,1210.71 1453.4,1210.71 1453.98,1210.71 1454.57,1210.71 1455.16,1210.71 1455.74,1210.71 1456.33,1210.71 1456.91,1210.71 1457.5,1210.71 1458.09,1210.71 1458.67,1210.71 1459.26,1210.71 1459.85,1210.71 1460.43,1210.71 1461.02,1210.71 1461.61,1210.71 1462.19,1210.71 1462.78,1210.71 1463.37,1210.71 1463.95,1210.71 1464.54,1210.71 1465.12,1210.71 1465.71,1210.71 1466.3,1210.71 1466.88,1210.71 1467.47,1210.71 1468.06,1210.71 1468.64,1210.71 1469.23,1210.71 1469.82,1210.71 1470.4,1210.71 1470.99,1210.71 1471.57,1210.71 1472.16,1210.71 1472.75,1210.71 1473.33,1210.71 1473.92,1210.71 1474.51,1210.71 1475.09,1210.71 1475.68,1210.71 1476.27,1210.71 1476.85,1210.71 1477.44,1210.71 1478.03,1210.71 1478.61,1210.71 1479.2,1210.71 1479.78,1210.71 1480.37,1210.71 1480.96,1210.71 1481.54,1210.71 1482.13,1210.71 1482.72,1210.71 1483.3,1210.71 1483.89,1210.71 1484.48,1210.71 1485.06,1210.71 1485.65,1210.71 1486.24,1210.71 1486.82,1210.71 1487.41,1210.71 1487.99,1210.71 1488.58,1210.71 1489.17,1210.71 1489.75,1210.71 1490.34,1210.71 1490.93,1210.71 1491.51,1210.71 1492.1,1210.71 1492.69,1210.71 1493.27,1210.71 1493.86,1210.71 1494.45,1210.71 1495.03,1210.71 1495.62,1210.71 1496.2,1210.71 1496.79,1210.71 1497.38,1210.71 1497.96,1210.71 1498.55,1210.71 1499.14,1210.71 1499.72,1210.71 1500.31,1210.71 1500.9,1210.71 1501.48,1210.71 1502.07,1210.71 1502.65,1210.71 1503.24,1210.71 1503.83,1210.71 1504.41,1210.71 1505,1210.71 1505.59,1210.71 1506.17,1210.71 1506.76,1210.71 1507.35,1210.71 1507.93,1210.71 1508.52,1210.71 1509.11,1210.71 1509.69,1210.71 1510.28,1210.71 1510.86,1210.71 1511.45,1210.71 1512.04,1210.71 1512.62,1210.71 1513.21,1210.71 1513.8,1210.71 1514.38,1210.71 1514.97,1210.71 1515.56,1210.71 1516.14,1210.71 1516.73,1210.71 1517.32,1210.71 1517.9,1210.71 1518.49,1210.71 1519.07,1210.71 1519.66,1210.71 1520.25,1210.71 1520.83,1210.71 1521.42,1210.71 1522.01,1210.71 1522.59,1210.71 1523.18,1210.71 1523.77,1210.71 1524.35,1210.71 1524.94,1210.71 1525.52,1210.71 1526.11,1210.71 1526.7,1210.71 1527.28,1210.71 1527.87,1210.71 1528.46,1210.71 1529.04,1210.71 1529.63,1210.71 1530.22,1210.71 1530.8,1210.71 1531.39,1210.71 1531.98,1210.71 1532.56,1210.71 1533.15,1210.71 1533.73,1210.71 1534.32,1210.71 1534.91,1210.71 1535.49,1210.71 1536.08,1210.71 1536.67,1210.71 1537.25,1210.71 1537.84,1210.71 1538.43,1210.71 1539.01,1210.71 1539.6,1210.71 1540.19,1210.71 1540.77,1210.71 1541.36,1210.71 1541.94,1210.71 1542.53,1210.71 1543.12,1210.71 1543.7,1210.71 1544.29,1210.71 1544.88,1210.71 1545.46,1210.71 1546.05,1210.71 1546.64,1210.71 1547.22,1210.71 1547.81,1210.71 1548.4,1210.71 1548.98,1210.71 1549.57,1210.71 1550.15,1210.71 1550.74,1210.71 1551.33,1210.71 1551.91,1210.71 1552.5,1210.71 1553.09,1210.71 1553.67,1210.71 1554.26,1210.71 1554.85,1210.71 1555.43,1210.71 1556.02,1210.71 1556.6,1210.71 1557.19,1210.71 1557.78,1210.71 1558.36,1210.71 1558.95,1210.71 1559.54,1210.71 1560.12,1210.71 1560.71,1210.71 1561.3,1210.71 1561.88,1210.71 1562.47,1210.71 1563.06,1210.71 1563.64,1210.71 1564.23,1210.71 1564.81,1210.71 1565.4,1210.71 1565.99,1210.71 1566.57,1210.71 1567.16,1210.71 1567.75,1210.71 1568.33,1210.71 1568.92,1210.71 1569.51,1210.71 1570.09,1210.71 1570.68,1210.71 1571.27,1210.71 1571.85,1210.71 1572.44,1210.71 1573.02,1210.71 1573.61,1210.71 1574.2,1210.71 1574.78,1210.71 1575.37,1210.71 1575.96,1210.71 1576.54,1210.71 1577.13,1210.71 1577.72,1210.71 1578.3,1210.71 1578.89,1210.71 1579.47,1210.71 1580.06,1210.71 1580.65,1210.71 1581.23,1210.71 1581.82,1210.71 1582.41,1210.71 1582.99,1210.71 1583.58,1210.71 1584.17,1210.71 1584.75,1210.71 1585.34,1210.71 1585.93,1210.71 1586.51,1210.71 1587.1,1210.71 1587.68,1210.71 1588.27,1210.71 1588.86,1210.71 1589.44,1210.71 1590.03,1210.71 1590.62,1210.71 1591.2,1210.71 1591.79,1210.71 1592.38,1210.71 1592.96,1210.71 1593.55,1210.71 1594.14,1210.71 1594.72,1210.71 1595.31,1210.71 1595.89,1210.71 1596.48,1210.71 1597.07,1210.71 1597.65,1210.71 1598.24,1210.71 1598.83,1210.71 1599.41,1210.71 1600,1210.71 1600.59,1210.71 1601.17,1210.71 1601.76,1210.71 1602.34,1210.71 1602.93,1210.71 1603.52,1210.71 1604.1,1210.71 1604.69,1210.71 1605.28,1210.71 1605.86,1210.71 1606.45,1210.71 1607.04,1210.71 1607.62,1210.71 1608.21,1210.71 1608.8,1210.71 1609.38,1210.71 1609.97,1210.71 1610.55,1210.71 1611.14,1210.71 1611.73,1210.71 1612.31,1210.71 1612.9,1210.71 1613.49,1210.71 1614.07,1210.71 1614.66,1210.71 1615.25,1210.71 1615.83,1210.71 1616.42,1210.71 1617.01,1210.71 1617.59,1210.71 1618.18,1210.71 1618.76,1210.71 1619.35,1210.71 1619.94,1210.71 1620.52,1210.71 1621.11,1210.71 1621.7,1210.71 1622.28,1210.71 1622.87,1210.71 1623.46,1210.71 1624.04,1210.71 1624.63,1210.71 1625.22,1210.71 1625.8,1210.71 1626.39,1210.71 1626.97,1210.71 1627.56,1210.71 1628.15,1210.71 1628.73,1210.71 1629.32,1210.71 1629.91,1210.71 1630.49,1210.71 1631.08,1210.71 1631.67,1210.71 1632.25,1210.71 1632.84,1210.71 1633.42,1210.71 1634.01,1210.71 1634.6,1210.71 1635.18,1210.71 1635.77,1210.71 1636.36,1210.71 1636.94,1210.71 1637.53,1210.71 1638.12,1210.71 1638.7,1210.71 1639.29,1210.71 1639.88,1210.71 1640.46,1210.71 1641.05,1210.71 1641.63,1210.71 1642.22,1210.71 1642.81,1210.71 1643.39,1210.71 1643.98,1210.71 1644.57,1210.71 1645.15,1210.71 1645.74,1210.71 1646.33,1210.71 1646.91,1210.71 1647.5,1210.71 1648.09,1210.71 1648.67,1210.71 1649.26,1210.71 1649.84,1210.71 1650.43,1210.71 1651.02,1210.71 1651.6,1210.71 1652.19,1210.71 1652.78,1210.71 1653.36,1210.71 1653.95,1210.71 1654.54,1210.71 1655.12,1210.71 1655.71,1210.71 1656.29,1210.71 1656.88,1210.71 1657.47,1210.71 1658.05,1210.71 1658.64,1210.71 1659.23,1210.71 1659.81,1210.71 1660.4,1210.71 1660.99,1210.71 1661.57,1210.71 1662.16,1210.71 1662.75,1210.71 1663.33,1210.71 1663.92,1210.71 1664.5,1210.71 1665.09,1210.71 1665.68,1210.71 1666.26,1210.71 1666.85,1210.71 1667.44,1210.71 1668.02,1210.71 1668.61,1210.71 1669.2,1210.71 1669.78,1210.71 1670.37,1210.71 1670.96,1210.71 1671.54,1210.71 1672.13,1210.71 1672.71,1210.71 1673.3,1210.71 1673.89,1210.71 1674.47,1210.71 1675.06,1210.71 1675.65,1210.71 1676.23,1210.71 1676.82,1210.71 1677.41,1210.71 1677.99,1210.71 1678.58,1210.71 1679.17,1210.71 1679.75,1210.71 1680.34,1210.71 1680.92,1210.71 1681.51,1210.71 1682.1,1210.71 1682.68,1210.71 1683.27,1210.71 1683.86,1210.71 1684.44,1210.71 1685.03,1210.71 1685.62,1210.71 1686.2,1210.71 1686.79,1210.71 1687.37,1210.71 1687.96,1210.71 1688.55,1210.71 1689.13,1210.71 1689.72,1210.71 1690.31,1210.71 1690.89,1210.71 1691.48,1210.71 1692.07,1210.71 1692.65,1210.71 1693.24,1210.71 1693.83,1210.71 1694.41,1210.71 1695,1210.71 1695.58,1210.71 1696.17,1210.71 1696.76,1210.71 1697.34,1210.71 1697.93,1210.71 1698.52,1210.71 1699.1,1210.71 1699.69,1210.71 1700.28,1210.71 1700.86,1210.71 1701.45,1210.71 1702.04,1210.71 1702.62,1210.71 1703.21,1210.71 1703.79,1210.71 1704.38,1210.71 1704.97,1210.71 1705.55,1210.71 1706.14,1210.71 1706.73,1210.71 1707.31,1210.71 1707.9,1210.71 1708.49,1210.71 1709.07,1210.71 1709.66,1210.71 1710.24,1210.71 1710.83,1210.71 1711.42,1210.71 1712,1210.71 1712.59,1210.71 1713.18,1210.71 1713.76,1210.71 1714.35,1210.71 1714.94,1210.71 1715.52,1210.71 1716.11,1210.71 1716.7,1210.71 1717.28,1210.71 1717.87,1210.71 1718.45,1210.71 1719.04,1210.71 1719.63,1210.71 1720.21,1210.71 1720.8,1210.71 1721.39,1210.71 1721.97,1210.71 1722.56,1210.71 1723.15,1210.71 1723.73,1210.71 1724.32,1210.71 1724.91,1210.71 1725.49,1210.71 1726.08,1210.71 1726.66,1210.71 1727.25,1210.71 1727.84,1210.71 1728.42,1210.71 1729.01,1210.71 1729.6,1210.71 1730.18,1210.71 1730.77,1210.71 1731.36,1210.71 1731.94,1210.71 1732.53,1210.71 1733.11,1210.71 1733.7,1210.71 1734.29,1210.71 1734.87,1210.71 1735.46,1210.71 1736.05,1210.71 1736.63,1210.71 1737.22,1210.71 1737.81,1210.71 1738.39,1210.71 1738.98,1210.71 1739.57,1210.71 1740.15,1210.71 1740.74,1210.71 1741.32,1210.71 1741.91,1210.71 1742.5,1210.71 1743.08,1210.71 1743.67,1210.71 1744.26,1210.71 1744.84,1210.71 1745.43,1210.71 1746.02,1210.71 1746.6,1210.71 1747.19,1210.71 1747.78,1210.71 1748.36,1210.71 1748.95,1210.71 1749.53,1210.71 1750.12,1210.71 1750.71,1210.71 1751.29,1210.71 1751.88,1210.71 1752.47,1210.71 1753.05,1210.71 1753.64,1210.71 1754.23,1210.71 1754.81,1210.71 1755.4,1210.71 1755.99,1210.71 1756.57,1210.71 1757.16,1210.71 1757.74,1210.71 1758.33,1210.71 1758.92,1210.71 1759.5,1210.71 1760.09,1210.71 1760.68,1210.71 1761.26,1210.71 1761.85,1210.71 1762.44,1210.71 1763.02,1210.71 1763.61,1210.71 1764.19,1210.71 1764.78,1210.71 1765.37,1210.71 1765.95,1210.71 1766.54,1210.71 1767.13,1210.71 1767.71,1210.71 1768.3,1210.71 1768.89,1210.71 1769.47,1210.71 1770.06,1210.71 1770.65,1210.71 1771.23,1210.71 1771.82,1210.71 1772.4,1210.71 1772.99,1210.71 1773.58,1210.71 1774.16,1210.71 1774.75,1210.71 1775.34,1210.71 1775.92,1210.71 1776.51,1210.71 1777.1,1210.71 1777.68,1210.71 1778.27,1210.71 1778.86,1210.71 1779.44,1210.71 1780.03,1210.71 1780.61,1210.71 1781.2,1210.71 1781.79,1210.71 1782.37,1210.71 1782.96,1210.71 1783.55,1210.71 1784.13,1210.71 1784.72,1210.71 1785.31,1210.71 1785.89,1210.71 1786.48,1210.71 1787.06,1210.71 1787.65,1210.71 1788.24,1210.71 1788.82,1210.71 1789.41,1210.71 1790,1210.71 1790.58,1210.71 1791.17,1210.71 1791.76,1210.71 1792.34,1210.71 1792.93,1210.71 1793.52,1210.71 1794.1,1210.71 1794.69,1210.71 1795.27,1210.71 1795.86,1210.71 1796.45,1210.71 1797.03,1210.71 1797.62,1210.71 1798.21,1210.71 1798.79,1210.71 1799.38,1210.71 1799.97,1210.71 1800.55,1210.71 1801.14,1210.71 1801.73,1210.71 1802.31,1210.71 1802.9,1210.71 1803.48,1210.71 1804.07,1210.71 1804.66,1210.71 1805.24,1210.71 1805.83,1210.71 1806.42,1210.71 1807,1210.71 1807.59,1210.71 1808.18,1210.71 1808.76,1210.71 1809.35,1210.71 1809.94,1210.71 1810.52,1210.71 1811.11,1210.71 1811.69,1210.71 1812.28,1210.71 1812.87,1210.71 1813.45,1210.71 1814.04,1210.71 1814.63,1210.71 1815.21,1210.71 1815.8,1210.71 1816.39,1210.71 1816.97,1210.71 1817.56,1210.71 1818.14,1210.71 1818.73,1210.71 1819.32,1210.71 1819.9,1210.71 1820.49,1210.71 1821.08,1210.71 1821.66,1210.71 1822.25,1210.71 1822.84,1210.71 1823.42,1210.71 1824.01,1210.71 1824.6,1210.71 1825.18,1210.71 1825.77,1210.71 1826.35,1210.71 1826.94,1210.71 1827.53,1210.71 1828.11,1210.71 1828.7,1210.71 1829.29,1210.71 1829.87,1210.71 1830.46,1210.71 1831.05,1210.71 1831.63,1210.71 1832.22,1210.71 1832.81,1210.71 1833.39,1210.71 1833.98,1210.71 1834.56,1210.71 1835.15,1210.71 1835.74,1210.71 1836.32,1210.71 1836.91,1210.71 1837.5,1210.71 1838.08,1210.71 1838.67,1210.71 1839.26,1210.71 1839.84,1210.71 1840.43,1210.71 1841.01,1210.71 1841.6,1210.71 1842.19,1210.71 1842.77,1210.71 1843.36,1210.71 1843.95,1210.71 1844.53,1210.71 1845.12,1210.71 1845.71,1210.71 1846.29,1210.71 1846.88,1210.71 1847.47,1210.71 1848.05,1210.71 1848.64,1210.71 1849.22,1210.71 1849.81,1210.71 1850.4,1210.71 1850.98,1210.71 1851.57,1210.71 1852.16,1210.71 1852.74,1210.71 1853.33,1210.71 1853.92,1210.71 1854.5,1210.71 1855.09,1210.71 1855.68,1210.71 1856.26,1210.71 1856.85,1210.71 1857.43,1210.71 1858.02,1210.71 1858.61,1210.71 1859.19,1210.71 1859.78,1210.71 1860.37,1210.71 1860.95,1210.71 1861.54,1210.71 1862.13,1210.71 1862.71,1210.71 1863.3,1210.71 1863.88,1210.71 1864.47,1210.71 1865.06,1210.71 1865.64,1210.71 1866.23,1210.71 1866.82,1210.71 1867.4,1210.71 1867.99,1210.71 1868.58,1210.71 1869.16,1210.71 1869.75,1210.71 1870.34,1210.71 1870.92,1210.71 1871.51,1210.71 1872.09,1210.71 1872.68,1210.71 1873.27,1210.71 1873.85,1210.71 1874.44,1210.71 1875.03,1210.71 1875.61,1210.71 1876.2,1210.71 1876.79,1210.71 1877.37,1210.71 1877.96,1210.71 1878.55,1210.71 1879.13,1210.71 1879.72,1210.71 1880.3,1210.71 1880.89,1210.71 1881.48,1210.71 1882.06,1210.71 1882.65,1210.71 1883.24,1210.71 1883.82,1210.71 1884.41,1210.71 1885,1210.71 1885.58,1210.71 1886.17,1210.71 1886.76,1210.71 1887.34,1210.71 1887.93,1210.71 1888.51,1210.71 1889.1,1210.71 1889.69,1210.71 1890.27,1210.71 1890.86,1210.71 1891.45,1210.71 1892.03,1210.71 1892.62,1210.71 1893.21,1210.71 1893.79,1210.71 1894.38,1210.71 1894.96,1210.71 1895.55,1210.71 1896.14,1210.71 1896.72,1210.71 1897.31,1210.71 1897.9,1210.71 1898.48,1210.71 1899.07,1210.71 1899.66,1210.71 1900.24,1210.71 1900.83,1210.71 1901.42,1210.71 1902,1210.71 1902.59,1210.71 1903.17,1210.71 1903.76,1210.71 1904.35,1210.71 1904.93,1210.71 1905.52,1210.71 1906.11,1210.71 1906.69,1210.71 1907.28,1210.71 1907.87,1210.71 1908.45,1210.71 1909.04,1210.71 1909.63,1210.71 1910.21,1210.71 1910.8,1210.71 1911.38,1210.71 1911.97,1210.71 1912.56,1210.71 1913.14,1210.71 1913.73,1210.71 1914.32,1210.71 1914.9,1210.71 1915.49,1210.71 1916.08,1210.71 1916.66,1210.71 1917.25,1210.71 1917.83,1210.71 1918.42,1210.71 1919.01,1210.71 1919.59,1210.71 1920.18,1210.71 1920.77,1210.71 1921.35,1210.71 1921.94,1210.71 1922.53,1210.71 1923.11,1210.71 1923.7,1210.71 1924.29,1210.71 1924.87,1210.71 1925.46,1210.71 1926.04,1210.71 1926.63,1210.71 1927.22,1210.71 1927.8,1210.71 1928.39,1210.71 1928.98,1210.71 1929.56,1210.71 1930.15,1210.71 1930.74,1210.71 1931.32,1210.71 1931.91,1210.71 1932.5,1210.71 1933.08,1210.71 1933.67,1210.71 1934.25,1210.71 1934.84,1210.71 1935.43,1210.71 1936.01,1210.71 1936.6,1210.71 1937.19,1210.71 1937.77,1210.71 1938.36,1210.71 1938.95,1210.71 1939.53,1210.71 1940.12,1210.71 1940.71,1210.71 1941.29,1210.71 1941.88,1210.71 1942.46,1210.71 1943.05,1210.71 1943.64,1210.71 1944.22,1210.71 1944.81,1210.71 1945.4,1210.71 1945.98,1210.71 1946.57,1210.71 1947.16,1210.71 1947.74,1210.71 1948.33,1210.71 1948.91,1210.71 1949.5,1210.71 1950.09,1210.71 1950.67,1210.71 1951.26,1210.71 1951.85,1210.71 1952.43,1210.71 1953.02,1210.71 1953.61,1210.71 1954.19,1210.71 1954.78,1210.71 1955.37,1210.71 1955.95,1210.71 1956.54,1210.71 1957.12,1210.71 1957.71,1210.71 1958.3,1210.71 1958.88,1210.71 1959.47,1210.71 1960.06,1210.71 1960.64,1210.71 1961.23,1210.71 1961.82,1210.71 1962.4,1210.71 1962.99,1210.71 1963.58,1210.71 1964.16,1210.71 1964.75,1210.71 1965.33,1210.71 1965.92,1210.71 1966.51,1210.71 1967.09,1210.71 1967.68,1210.71 1968.27,1210.71 1968.85,1210.71 1969.44,1210.71 1970.03,1210.71 1970.61,1210.71 1971.2,1210.71 1971.78,1210.71 1972.37,1210.71 1972.96,1210.71 1973.54,1210.71 1974.13,1210.71 1974.72,1210.71 1975.3,1210.71 1975.89,1210.71 1976.48,1210.71 1977.06,1210.71 1977.65,1210.71 1978.24,1210.71 1978.82,1210.71 1979.41,1210.71 1979.99,1210.71 1980.58,1210.71 1981.17,1210.71 1981.75,1210.71 1982.34,1210.71 1982.93,1210.71 1983.51,1210.71 1984.1,1210.71 1984.69,1210.71 1985.27,1210.71 1985.86,1210.71 1986.45,1210.71 1987.03,1210.71 1987.62,1210.71 1988.2,1210.71 1988.79,1210.71 1989.38,1210.71 1989.96,1210.71 1990.55,1210.71 1991.14,1210.71 1991.72,1210.71 1992.31,1210.71 1992.9,1210.71 1993.48,1210.71 1994.07,1210.71 1994.65,1210.71 1995.24,1210.71 1995.83,1210.71 1996.41,1210.71 1997,1210.71 1997.59,1210.71 1998.17,1210.71 1998.76,1210.71 1999.35,1210.71 1999.93,1210.71 2000.52,1210.71 2001.11,1210.71 2001.69,1210.71 2002.28,1210.71 2002.86,1210.71 2003.45,1210.71 2004.04,1210.71 2004.62,1210.71 2005.21,1210.71 2005.8,1210.71 2006.38,1210.71 2006.97,1210.71 2007.56,1210.71 2008.14,1210.71 2008.73,1210.71 2009.32,1210.71 2009.9,1210.71 2010.49,1210.71 2011.07,1210.71 2011.66,1210.71 2012.25,1210.71 2012.83,1210.71 2013.42,1210.71 2014.01,1210.71 2014.59,1210.71 2015.18,1210.71 2015.77,1210.71 2016.35,1210.71 2016.94,1210.71 2017.53,1210.71 2018.11,1210.71 2018.7,1210.71 2019.28,1210.71 2019.87,1210.71 2020.46,1210.71 2021.04,1210.71 2021.63,1210.71 2022.22,1210.71 2022.8,1210.71 2023.39,1210.71 2023.98,1210.71 2024.56,1210.71 2025.15,1210.71 2025.73,1210.71 2026.32,1210.71 2026.91,1210.71 2027.49,1210.71 2028.08,1210.71 2028.67,1210.71 2029.25,1210.71 2029.84,1210.71 2030.43,1210.71 2031.01,1210.71 2031.6,1210.71 2032.19,1210.71 2032.77,1210.71 2033.36,1210.71 2033.94,1210.71 2034.53,1210.71 2035.12,1210.71 2035.7,1210.71 2036.29,1210.71 2036.88,1210.71 2037.46,1210.71 2038.05,1210.71 2038.64,1210.71 2039.22,1210.71 2039.81,1210.71 2040.4,1210.71 2040.98,1210.71 2041.57,1210.71 2042.15,1210.71 2042.74,1210.71 2043.33,1210.71 2043.91,1210.71 2044.5,1210.71 2045.09,1210.71 2045.67,1210.71 2046.26,1210.71 2046.85,1210.71 2047.43,1210.71 2048.02,1210.71 2048.6,1210.71 2049.19,1210.71 2049.78,1210.71 2050.36,1210.71 2050.95,1210.71 2051.54,1210.71 2052.12,1210.71 2052.71,1210.71 2053.3,1210.71 2053.88,1210.71 2054.47,1210.71 2055.06,1210.71 2055.64,1210.71 2056.23,1210.71 2056.81,1210.71 2057.4,1210.71 2057.99,1210.71 2058.57,1210.71 2059.16,1210.71 2059.75,1210.71 2060.33,1210.71 2060.92,1210.71 2061.51,1210.71 2062.09,1210.71 2062.68,1210.71 2063.27,1210.71 2063.85,1210.71 2064.44,1210.71 2065.02,1210.71 2065.61,1210.71 2066.2,1210.71 2066.78,1210.71 2067.37,1210.71 2067.96,1210.71 2068.54,1210.71 2069.13,1210.71 2069.72,1210.71 2070.3,1210.71 2070.89,1210.71 2071.48,1210.71 2072.06,1210.71 2072.65,1210.71 2073.23,1210.71 2073.82,1210.71 2074.41,1210.71 2074.99,1210.71 2075.58,1210.71 2076.17,1210.71 2076.75,1210.71 2077.34,1210.71 2077.93,1210.71 2078.51,1210.71 2079.1,1210.71 2079.68,1210.71 2080.27,1210.71 2080.86,1210.71 2081.44,1210.71 2082.03,1210.71 2082.62,1210.71 2083.2,1210.71 2083.79,1210.71 2084.38,1210.71 2084.96,1210.71 2085.55,1210.71 2086.14,1210.71 2086.72,1210.71 2087.31,1210.71 2087.89,1210.71 2088.48,1210.71 2089.07,1210.71 2089.65,1210.71 2090.24,1210.71 2090.83,1210.71 2091.41,1210.71 2092,1210.71 2092.59,1210.71 2093.17,1210.71 2093.76,1210.71 2094.35,1210.71 2094.93,1210.71 2095.52,1210.71 2096.1,1210.71 2096.69,1210.71 2097.28,1210.71 2097.86,1210.71 2098.45,1210.71 2099.04,1210.71 2099.62,1210.71 2100.21,1210.71 2100.8,1210.71 2101.38,1210.71 2101.97,1210.71 2102.55,1210.71 2103.14,1210.71 2103.73,1210.71 2104.31,1210.71 2104.9,1210.71 2105.49,1210.71 2106.07,1210.71 2106.66,1210.71 2107.25,1210.71 2107.83,1210.71 2108.42,1210.71 2109.01,1210.71 2109.59,1210.71 2110.18,1210.71 2110.76,1210.71 2111.35,1210.71 2111.94,1210.71 2112.52,1210.71 2113.11,1210.71 2113.7,1210.71 2114.28,1210.71 2114.87,1210.71 2115.46,1210.71 2116.04,1210.71 2116.63,1210.71 2117.22,1210.71 2117.8,1210.71 2118.39,1210.71 2118.97,1210.71 2119.56,1210.71 2120.15,1210.71 2120.73,1210.71 2121.32,1210.71 2121.91,1210.71 2122.49,1210.71 2123.08,1210.71 2123.67,1210.71 2124.25,1210.71 2124.84,1210.71 2125.42,1210.71 2126.01,1210.71 2126.6,1210.71 2127.18,1210.71 2127.77,1210.71 2128.36,1210.71 2128.94,1210.71 2129.53,1210.71 2130.12,1210.71 2130.7,1210.71 2131.29,1210.71 2131.88,1210.71 2132.46,1210.71 2133.05,1210.71 2133.63,1210.71 2134.22,1210.71 2134.81,1210.71 2135.39,1210.71 2135.98,1210.71 2136.57,1210.71 2137.15,1210.71 2137.74,1210.71 2138.33,1210.71 2138.91,1210.71 2139.5,1210.71 2140.09,1210.71 2140.67,1210.71 2141.26,1210.71 2141.84,1210.71 2142.43,1210.71 2143.02,1210.71 2143.6,1210.71 2144.19,1210.71 2144.78,1210.71 2145.36,1210.71 2145.95,1210.71 2146.54,1210.71 2147.12,1210.71 2147.71,1210.71 2148.3,1210.71 2148.88,1210.71 2149.47,1210.71 2150.05,1210.71 2150.64,1210.71 2151.23,1210.71 2151.81,1210.71 2152.4,1210.71 2152.99,1210.71 2153.57,1210.71 2154.16,1210.71 2154.75,1210.71 2155.33,1210.71 2155.92,1210.71 2156.5,1210.71 2157.09,1210.71 2157.68,1210.71 2158.26,1210.71 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.87,1194.26 1399.71,899.083 \"/>\n<polyline clip-path=\"url(#clip382)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1226.74 985.439,1194.26 2158.26,1194.26 2158.26,1226.74 985.439,1226.74 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip380)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip380)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip383\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip380)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip380)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip380)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip383)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-32.6883 161.555,-46.9214 162.114,-1440.13 162.673,-2678.12 163.232,-3821.19 163.792,-4934.94 164.351,-5889.4 164.91,-6779.95 165.469,-7634.57 166.029,-8333.25 166.588,-8963.55 167.147,-9573.63 167.706,-10122.1 168.266,-10612.9 168.825,-11049.8 169.384,-11436.3 169.943,-11775.7 170.503,-12071.1 171.062,-12325.4 171.621,-11877.6 172.18,-12073.4 172.74,-12245.2 173.299,-12366 173.858,-12476.8 174.417,-12549.8 174.977,-12607.2 175.536,-12634 176.095,-12645.5 176.655,-12619.9 177.214,-12587.5 177.773,-12223.2 178.332,-12172.8 178.892,-12107.9 179.451,-12022.5 180.01,-11680 180.569,-11582.3 181.129,-11245.5 181.688,-11138 182.247,-10826.7 182.806,-10337.5 183.366,-10050.6 183.925,-9913.65 184.484,-9635.15 185.043,-9355.64 185.603,-9067.09 186.162,-8791.04 186.721,-8640.77 187.28,-8385.29 187.84,-8134.85 188.399,-7989.2 188.958,-7651.55 189.517,-7501.15 190.077,-7087.75 190.636,-6937.04 191.195,-6634.77 191.754,-6408.86 192.314,-6188.87 192.873,-5973.81 193.432,-5773.93 193.991,-5626.48 194.551,-5482.17 195.11,-5220.41 195.669,-5029.32 196.228,-4789.98 196.788,-4610.2 197.347,-4482.04 197.906,-4266.03 198.465,-4057.08 199.025,-3900.01 199.584,-3744.16 200.143,-3604.22 200.702,-3422.41 201.262,-3328.93 201.821,-3072.26 202.38,-2911.58 202.939,-2750.45 203.499,-2635.09 204.058,-2555.58 204.617,-2375.37 205.176,-2310.57 205.736,-2207.22 206.295,-2043.86 206.854,-1979.76 207.413,-1887.44 207.973,-1793.56 208.532,-1703.26 209.091,-1645.61 209.65,-1530.4 210.21,-1445.23 210.769,-1331.93 211.328,-1225.18 211.887,-1121.89 212.447,-1022.38 213.006,-874.09 213.565,-785.597 214.124,-702.683 214.684,-647.957 215.243,-591.257 215.802,-514.557 216.361,-433.342 216.921,-406.416 217.48,-310.625 218.039,-239.888 218.598,-219.048 219.158,-100.737 219.717,-88.2218 220.276,-46.6663 220.835,16.1277 221.395,74.8144 221.954,108.883 222.513,120.968 223.072,155 223.632,190.822 224.191,203.169 224.75,345.079 225.309,354.351 225.869,380.635 226.428,454.396 226.987,501.357 227.546,506.615 228.106,550.183 228.665,592.09 229.224,597.85 229.783,602.709 230.343,606.076 230.902,631.329 231.461,676.092 232.02,678.93 232.58,680.172 233.139,663.941 233.698,687.728 234.257,711.594 234.817,731.46 235.376,752.577 235.935,774.336 236.494,797.97 237.054,818.613 237.613,817.976 238.172,816.448 238.731,817.547 239.291,819.011 239.85,819.034 240.409,839.591 240.968,841.006 241.528,878.301 242.087,877.288 242.646,914.283 243.205,893.972 243.765,909.37 244.324,976.753 244.883,987.707 245.442,984.902 246.002,982.589 246.561,998.076 247.12,994.076 247.679,989.914 248.239,1053.29 248.798,1045.56 249.357,1075.18 249.916,1044.56 250.476,1037.98 251.035,1033.73 251.594,1020.92 252.153,1051.9 252.713,1043.12 253.272,1033.84 253.831,1030.78 254.39,1024.83 254.95,1038.59 255.509,1068.42 256.068,1058.47 256.627,1069.29 257.187,1079.98 257.746,1057.27 258.305,1067.64 258.864,1079.2 259.424,1109.59 259.983,1100 260.542,1108.52 261.101,1150.62 261.661,1177.77 262.22,1149.99 262.779,1136.61 263.338,1142.94 263.898,1113.48 264.457,1139.4 265.016,1161.71 265.575,1114.99 266.135,1105.76 266.694,1116.48 267.253,1158.79 267.812,1213.34 268.372,1219.05 268.931,1170.34 269.49,1142.16 270.049,1148.19 270.609,1138.41 271.168,1111.94 271.727,1134.09 272.286,1089.76 272.846,1080.17 273.405,1092.14 273.964,1049.32 274.523,1044.82 275.083,1087.02 275.642,1114.85 276.201,1107.25 276.76,1098.67 277.32,1089.38 277.879,1097.36 278.438,1122.75 278.997,1151.34 279.557,1142.97 280.116,1166.85 280.675,1172.19 281.234,1162.39 281.794,1168.99 282.353,1172.68 282.912,1157.46 283.471,1129.97 284.031,1116.38 284.59,1106.98 285.149,1099.9 285.708,1073.71 286.268,1101.32 286.827,1164.07 287.386,1136.31 287.945,1146.06 288.505,1152.91 289.064,1140.92 289.623,1211.64 290.182,1147.28 290.742,1100.51 291.301,1107.91 291.86,1097.93 292.419,1088.28 292.979,1079.91 293.538,1091.05 294.097,1096.23 294.656,1121.29 295.216,1160.87 295.775,1116.07 296.334,1104.27 296.893,1079.17 297.453,1117.04 298.012,1074.45 298.571,1068.24 299.13,1076.15 299.69,1066.69 300.249,1057.76 300.808,1051.62 301.368,1029.13 301.927,1041.83 302.486,1053.43 303.045,1064.07 303.605,1058.17 304.164,1019.9 304.723,1035.05 305.282,1046.29 305.842,1039.95 306.401,1030.93 306.96,1025.62 307.519,1016.39 308.079,1028.57 308.638,1038.81 309.197,1032.05 309.756,1074.98 310.316,1131.13 310.875,1133.53 311.434,1121.32 311.993,1123.16 312.553,1127.56 313.112,1135.38 313.671,1106.66 314.23,1094.36 314.79,1064.66 315.349,1039.12 315.908,1046.27 316.467,1037.74 317.027,1051.64 317.586,1011.41 318.145,1005.37 318.704,1049.26 319.264,1023.47 319.823,983.271 320.382,975.657 320.941,990.536 321.501,950.564 322.06,965.475 322.619,928.917 323.178,942.262 323.738,906.535 324.297,920.108 324.856,919.881 325.415,919.813 325.975,936.632 326.534,930.465 327.093,927.896 327.652,958.548 328.212,950.582 328.771,944.263 329.33,955.519 329.889,949.902 330.449,944.711 331.008,959.091 331.567,953.614 332.126,947.412 332.686,942.839 333.245,923.319 333.804,959.494 334.363,969.082 334.923,978.216 335.482,975.467 336.041,969.689 336.6,933.603 337.16,957.36 337.719,936.16 338.278,964.386 338.837,941.783 339.397,938.617 339.956,930.872 340.515,893.075 341.074,872.494 341.634,902.385 342.193,914.892 342.752,909.265 343.311,907.634 343.871,917.649 344.43,881.553 344.989,877.889 345.548,842.364 346.108,841.023 346.667,922.54 347.226,921.411 347.785,901.764 348.345,900.264 348.904,898.401 349.463,863.83 350.022,897.515 350.582,897.753 351.141,877.839 351.7,873.04 352.259,869.037 352.819,886.509 353.378,870.692 353.937,870.695 354.496,886.516 355.056,833.506 355.615,847.204 356.174,879.491 356.733,925.439 357.293,917.332 357.852,915.584 358.411,892.953 358.97,890.429 359.53,923.553 360.089,951.049 360.648,942.176 361.207,951.48 361.767,960.292 362.326,985.191 362.885,976.855 363.444,954.412 364.004,944.8 364.563,970.333 365.122,947.875 365.681,976.039 366.241,982.408 366.8,973.897 367.359,948.068 367.918,942.414 368.478,949.622 369.037,920.001 369.596,915.199 370.155,862.01 370.715,877.267 371.274,894.154 371.833,872.585 372.392,872.186 372.952,868.913 373.511,880.993 374.07,847.303 374.629,845.373 375.189,861.594 375.748,843.309 376.307,841.561 376.866,820.362 377.426,820.36 377.985,833.409 378.544,815.104 379.103,830.854 379.663,832.547 380.222,832.646 380.781,832.775 381.34,831.16 381.9,824.822 382.459,858.197 383.018,855.16 383.577,833.536 384.137,830.039 384.696,812.913 385.255,783.916 385.814,768.616 386.374,769.308 386.933,783.573 387.492,784.177 388.051,768.85 388.611,755.831 389.17,758.306 389.729,773.513 390.288,777.199 390.848,791.041 391.407,788.952 391.966,757.938 392.525,761.991 393.085,762.841 393.644,767.298 394.203,754.543 394.762,774.535 395.322,775.719 395.881,777.763 396.44,776.939 396.999,843.604 397.559,857.079 398.118,840.9 398.677,886.551 399.236,916.299 399.796,926.431 400.355,933.377 400.914,924.632 401.473,883.808 402.033,877.242 402.592,905.104 403.151,899.561 403.71,892.948 404.27,889.371 404.829,886.423 405.388,880.506 405.947,891.014 406.507,869.147 407.066,864.802 407.625,859.024 408.184,886.941 408.744,897.462 409.303,888.921 409.862,916.623 410.421,911.608 410.981,921.644 411.54,896.223 412.099,889.084 412.658,848.702 413.218,832.816 413.777,815.217 414.336,831.049 414.895,811.765 415.455,791.025 416.014,777.507 416.573,795.303 417.132,761.234 417.692,781.017 418.251,795.147 418.81,811.468 419.369,812.037 419.929,812.277 420.488,843.253 421.047,857.757 421.606,870.33 422.166,880.626 422.725,892.393 423.284,900.277 423.843,809.444 424.403,790.475 424.962,808.227 425.521,808.641 426.08,807.719 426.64,787.059 427.199,783.849 427.758,750.516 428.318,731.724 428.877,715.74 429.436,720.703 429.995,783.157 430.555,801.479 431.114,783.232 431.673,769.946 432.232,751.804 432.792,713.522 433.351,730.771 433.91,783.184 434.469,815.985 435.029,779.813 435.588,807.335 436.147,853.178 436.706,849.078 437.266,844.515 437.825,811.57 438.384,745.629 438.943,763.097 439.503,793.472 440.062,774.681 440.621,755.842 441.18,741.406 441.74,741.968 442.299,758.18 442.858,776.13 443.417,763.549 443.977,808.654 444.536,744.158 445.095,744.646 445.654,758.837 446.214,787.732 446.773,782.825 447.332,780.402 447.891,798.399 448.451,746.331 449.01,763.244 449.569,746.284 450.128,745.744 450.688,762.939 451.247,733.671 451.806,717.663 452.365,736.453 452.925,752.76 453.484,785.567 454.043,769.955 454.602,767.652 455.162,766.944 455.721,783.608 456.28,832.405 456.839,812.849 457.399,794.116 457.958,791.686 458.517,774.972 459.076,772.976 459.636,756.482 460.195,754.795 460.754,737.134 461.313,724.012 461.873,711.441 462.432,715.965 462.991,718.066 463.55,735.41 464.11,721.548 464.669,708.51 465.228,727.081 465.787,725.284 466.347,726.02 466.906,727.637 467.465,759.709 468.024,774.681 468.584,758.789 469.143,757.968 469.702,738.677 470.261,721.707 470.821,771.935 471.38,787.47 471.939,770.06 472.498,753.471 473.058,705.95 473.617,720.561 474.176,721.724 474.735,752.518 475.295,753.39 475.854,700.154 476.413,721.682 476.972,722.823 477.532,725.652 478.091,707.587 478.65,675.991 479.209,731.187 479.769,714.962 480.328,750.407 480.887,767.397 481.446,735.244 482.006,764.718 482.565,765.699 483.124,763.531 483.683,745.233 484.243,727.835 484.802,759.378 485.361,740.105 485.92,756.645 486.48,787.841 487.039,767.461 487.598,766.017 488.157,795.591 488.717,803.436 489.276,813.283 489.835,826.095 490.394,773.807 490.954,789.652 491.513,803.456 492.072,786.373 492.631,782.827 493.191,763.086 493.75,761.066 494.309,823.746 494.868,837.072 495.428,829.977 495.987,794.76 496.546,842.729 497.105,843.67 497.665,834.388 498.224,862.153 498.783,790.108 499.342,790.425 499.902,770.681 500.461,768.924 501.02,782.085 501.579,795.836 502.139,775.63 502.698,772.036 503.257,757.845 503.816,763.538 504.376,795.008 504.935,809.414 505.494,821.08 506.053,796.943 506.613,775.842 507.172,741.012 507.731,708.568 508.29,710.074 508.85,709.555 509.409,712.159 509.968,664.316 510.527,684.889 511.087,703.389 511.646,722.169 512.205,738.79 512.764,722.4 513.324,726.028 513.883,713.17 514.442,696.807 515.001,700.611 515.561,700.84 516.12,705.483 516.679,721.878 517.238,692.01 517.798,677.827 518.357,665.191 518.916,652.536 519.475,689.625 520.035,707.846 520.594,743.412 521.153,774.21 521.712,771.635 522.272,768.038 522.831,781.308 523.39,764.585 523.949,749.145 524.509,749.503 525.068,747.412 525.627,763.824 526.186,763.175 526.746,759.443 527.305,738.646 527.864,770.989 528.423,817.807 528.983,784.127 529.542,766.146 530.101,762.719 530.66,724.932 531.22,703.956 531.779,670.589 532.338,641.63 532.897,630.623 533.457,667.985 534.016,671.803 534.575,655.799 535.134,674.534 535.694,677.843 536.253,698.349 536.812,698.24 537.371,701.335 537.931,701.114 538.49,698.785 539.049,702.138 539.608,659.306 540.168,630.08 540.727,648.248 541.286,652.459 541.845,671.476 542.405,672.794 542.964,691.763 543.523,693.453 544.082,696.87 544.642,701.114 545.201,723.015 545.76,722.883 546.319,739.219 546.879,754.42 547.438,786.094 547.997,782.599 548.556,793.374 549.116,818.853 549.675,849.097 550.234,840.971 550.793,830.03 551.353,872.032 551.912,868.605 552.471,862.19 553.031,852.162 553.59,846.459 554.149,825.586 554.708,819.405 555.268,817.157 555.827,814.8 556.386,806.821 556.945,784.902 557.505,765.273 558.064,763.792 558.623,742.931 559.182,757.18 559.742,740.619 560.301,757.386 560.86,757.463 561.419,769.884 561.979,748.028 562.538,746.504 563.097,740.708 563.656,736.501 564.216,703.184 564.775,720.948 565.334,722.027 565.893,706.996 566.453,706.508 567.012,722.139 567.571,722.459 568.13,738.469 568.69,735.37 569.249,734.709 569.808,734.442 570.367,783.381 570.927,778.037 571.486,775.239 572.045,755.316 572.604,769.432 573.164,764.071 573.723,774.702 574.282,755.923 574.841,769.418 575.401,749.389 575.96,718.06 576.519,715.556 577.078,698.827 577.638,715.218 578.197,681.984 578.756,682.234 579.315,703.868 579.875,701.996 580.434,653.712 580.993,655.787 581.552,643.375 582.112,613.659 582.671,618.856 583.23,622.656 583.789,662.665 584.349,683.154 584.908,652.231 585.467,671 586.026,638.895 586.586,644.834 587.145,634.393 587.704,640.769 588.263,676.904 588.823,708.713 589.382,708.044 589.941,738.327 590.5,722.723 591.06,705.074 591.619,716.966 592.178,717.547 592.737,720.028 593.297,769.849 593.856,814.705 594.415,794.353 594.974,789.331 595.534,799.058 596.093,795.529 596.652,773.867 597.211,755.482 597.771,739.464 598.33,720.27 598.889,719.894 599.448,719.838 600.008,718.764 600.567,687.557 601.126,702.657 601.685,719.139 602.245,721.062 602.804,732.393 603.363,729.635 603.922,730.527 604.482,749.613 605.041,765.614 605.6,747.323 606.159,748.153 606.719,762.728 607.278,726.739 607.837,726.579 608.396,677.149 608.956,678.13 609.515,713.386 610.074,724.878 610.633,686.21 611.193,689.245 611.752,706.867 612.311,690.892 612.87,706.799 613.43,708.79 613.989,690.876 614.548,707.02 615.107,722.788 615.667,767.848 616.226,796.324 616.785,790.67 617.344,781.87 617.904,776.779 618.463,724.086 619.022,689.284 619.581,704.999 620.141,704.284 620.7,658.842 621.259,630.489 621.818,615.198 622.378,618.921 622.937,653.893 623.496,690.478 624.055,739.583 624.615,717.943 625.174,718.118 625.733,748.466 626.292,747.15 626.852,679.38 627.411,676.046 627.97,676.599 628.529,710.731 629.089,690.065 629.648,723.777 630.207,721.913 630.766,753.157 631.326,702.908 631.885,688.228 632.444,671.511 633.003,656.526 633.563,626.307 634.122,595.614 634.681,604.453 635.24,640.9 635.8,659.387 636.359,662.502 636.918,645.53 637.477,649.81 638.037,701.254 638.596,700.685 639.155,716.95 639.714,746.096 640.274,743.063 640.833,774.151 641.392,771.354 641.951,754.266 642.511,732.689 643.07,751.75 643.629,749.339 644.188,794.51 644.748,818.69 645.307,832.06 645.866,873.01 646.425,863.853 646.985,888.274 647.544,894.585 648.103,869.144 648.662,872.61 649.222,846.547 649.781,835.154 650.34,828.702 650.899,819.913 651.459,798.192 652.018,795.509 652.577,789.166 653.136,800.115 653.696,775.935 654.255,773.082 654.814,749.057 655.373,746.117 655.933,711.664 656.492,743.66 657.051,741.205 657.61,741.797 658.17,786.646 658.729,779.642 659.288,743.661 659.847,761.189 660.407,756.424 660.966,768.121 661.525,736.058 662.084,716.781 662.644,687.06 663.203,689.576 663.762,702.867 664.321,719.839 664.881,747.87 665.44,730.316 665.999,730.993 666.558,745.827 667.118,711.518 667.677,680.529 668.236,700.038 668.795,682.066 669.355,685.141 669.914,687.107 670.473,687.107 671.032,689.068 671.592,689.256 672.151,691.341 672.71,708.139 673.269,709.113 673.829,740.606 674.388,740.289 674.947,722.042 675.506,752.005 676.066,730.769 676.625,762.04 677.184,756.766 677.743,720.797 678.303,704.74 678.862,706.434 679.421,705.807 679.981,721.081 680.54,722.063 681.099,739.21 681.658,708.205 682.218,724.8 682.777,678.354 683.336,678.504 683.895,663.508 684.455,663.907 685.014,648.314 685.573,635.596 686.132,639.929 686.692,661.244 687.251,663.723 687.81,646.702 688.369,630.492 688.929,633.96 689.488,621.91 690.047,626.077 690.606,633.19 691.166,655.643 691.725,676.483 692.284,678.365 692.843,676.859 693.403,679.362 693.962,681.525 694.521,652.611 695.08,636.133 695.64,641.427 696.199,627.209 696.758,615.181 697.317,634.759 697.877,625.874 698.436,628.659 698.995,618.267 699.554,605.252 700.114,645.521 700.673,661.285 701.232,647.235 701.791,602.505 702.351,589.352 702.91,582.808 703.469,587.967 704.028,577.457 704.588,566.533 705.147,574.185 705.706,601.043 706.265,622.713 706.825,640.763 707.384,646.361 707.943,634.643 708.502,640.024 709.062,662.71 709.621,680.582 710.18,666.102 710.739,652.913 711.299,686.361 711.858,673.179 712.417,670.744 712.976,690.936 713.536,705.363 714.095,684.182 714.654,698.87 715.213,698.312 715.773,696.974 716.332,711.764 716.891,694.85 717.45,715.571 718.01,682.752 718.569,653.471 719.128,636.279 719.687,624.086 720.247,629.859 720.806,632.749 721.365,636.107 721.924,638.77 722.484,678.301 723.043,663.941 723.602,682.008 724.161,652.035 724.721,655.637 725.28,688.967 725.839,720.768 726.398,733.894 726.958,697.321 727.517,681.539 728.076,679.228 728.635,664.319 729.195,667.92 729.754,669.93 730.313,638.45 730.872,642.762 731.432,630.055 731.991,631.233 732.55,617.03 733.109,617.339 733.669,608.76 734.228,609.397 734.787,595.921 735.346,598.161 735.906,588.257 736.465,576.072 737.024,598.68 737.583,620.103 738.143,652.061 738.702,637.172 739.261,653.229 739.82,686.084 740.38,688.725 740.939,688.989 741.498,691.321 742.057,705.583 742.617,672.439 743.176,660.072 743.735,674.809 744.294,644.406 744.854,646.42 745.413,633.636 745.972,638.713 746.531,643.225 747.091,647.807 747.65,650.747 748.209,716.112 748.768,731.765 749.328,714.551 749.887,745.609 750.446,776.762 751.005,783.822 751.565,782.866 752.124,777.295 752.683,805.961 753.242,834.111 753.802,824.738 754.361,837.027 754.92,825.307 755.479,817.835 756.039,811.255 756.598,804.16 757.157,782.031 757.716,775.011 758.276,786.818 758.835,777.357 759.394,836.014 759.953,812.397 760.513,741.688 761.072,723.64 761.631,707.356 762.19,739.098 762.75,734.916 763.309,735.145 763.868,735.43 764.427,765.546 764.987,764.089 765.546,764.346 766.105,776.751 766.664,777.687 767.224,771.32 767.783,733.923 768.342,730.319 768.901,730.848 769.461,723.735 770.02,659.748 770.579,679.62 771.138,697.819 771.698,665.353 772.257,670.465 772.816,637.623 773.375,639.409 773.935,660.21 774.494,693.58 775.053,694.395 775.612,661.26 776.172,676.122 776.731,660.208 777.29,648.423 777.849,636.77 778.409,642.764 778.968,662.906 779.527,701.246 780.086,689.102 780.646,691.608 781.205,708.098 781.764,721.676 782.323,737.592 782.883,683.097 783.442,650.613 784.001,667.484 784.56,666.638 785.12,668.639 785.679,653.833 786.238,641.8 786.797,641.857 787.357,644.576 787.916,630.045 788.475,645.715 789.034,662.256 789.594,680.341 790.153,696.155 790.712,695.467 791.271,677.222 791.831,693.497 792.39,693.225 792.949,690.101 793.508,690.067 794.068,658.889 794.627,705.583 795.186,704.604 795.745,688.425 796.305,687.162 796.864,690.507 797.423,705.85 797.982,704.23 798.542,717.293 799.101,700.345 799.66,716.689 800.219,728.684 800.779,727.291 801.338,756.192 801.897,770.222 802.456,765.908 803.016,717.127 803.575,748.23 804.134,776.547 804.693,771.426 805.253,767.82 805.812,752.739 806.371,721.41 806.931,736.914 807.49,703.87 808.049,716.795 808.608,684.267 809.168,699.868 809.727,696.64 810.286,695.998 810.845,697.14 811.405,678.546 811.964,650.337 812.523,683.065 813.082,696.202 813.642,711.14 814.201,710.748 814.76,708.332 815.319,708.189 815.879,712.192 816.438,744.857 816.997,708.512 817.556,694.877 818.116,678.897 818.675,664.229 819.234,646.357 819.793,651.22 820.353,650.431 820.912,666.831 821.471,671.056 822.03,671.552 822.59,669.987 823.149,670.49 823.708,687.113 824.267,684.962 824.827,684.854 825.386,684.356 825.945,685.439 826.504,699.441 827.064,649.984 827.623,636.47 828.182,654.393 828.741,624.988 829.301,647.589 829.86,612.872 830.419,600.248 830.978,601.801 831.538,621 832.097,608.156 832.656,595.46 833.215,600.483 833.775,604.943 834.334,631.088 834.893,681.119 835.452,698.719 836.012,684.463 836.571,699.831 837.13,711.068 837.689,710 838.249,706.393 838.808,720.689 839.367,697.195 839.926,692.873 840.486,705.191 841.045,706.063 841.604,708.572 842.163,737.977 842.723,719.934 843.282,721.183 843.841,721.125 844.4,704.004 844.96,718.947 845.519,703.206 846.078,718.546 846.637,716.375 847.197,715.042 847.756,697.375 848.315,715.994 848.874,700.101 849.434,701.849 849.993,702.66 850.552,702.061 851.111,666.926 851.671,670.155 852.23,686.405 852.789,656.529 853.348,675.905 853.908,663.718 854.467,679.197 855.026,680.571 855.585,712.503 856.145,711.844 856.704,712.717 857.263,691.817 857.822,660.325 858.382,675.244 858.941,626.039 859.5,648.162 860.059,648.403 860.619,667.928 861.178,703.199 861.737,700.574 862.296,695.186 862.856,662.934 863.415,662.253 863.974,612.684 864.533,616.681 865.093,652.272 865.652,637.231 866.211,573.174 866.77,598.041 867.33,617.122 867.889,618.276 868.448,620.966 869.007,659.588 869.567,642.824 870.126,661.99 870.685,663.319 871.244,677.504 871.804,679.465 872.363,694.32 872.922,721.703 873.481,699.78 874.041,698.944 874.6,734.576 875.159,700.287 875.718,701.233 876.278,679.818 876.837,677.754 877.396,662.477 877.955,651.66 878.515,701.239 879.074,717.16 879.633,668.07 880.192,685.556 880.752,701.513 881.311,718.207 881.87,702.88 882.429,700.012 882.989,711.394 883.548,676.025 884.107,677.085 884.666,679.126 885.226,696.233 885.785,741.465 886.344,752.892 886.903,769.816 887.463,778.245 888.022,759.082 888.581,787.105 889.14,796.064 889.7,800.981 890.259,810.894 890.818,771.89 891.377,764.705 891.937,761.971 892.496,724.695 893.055,719.624 893.614,749.271 894.174,694.328 894.733,761.346 895.292,741.551 895.851,721.265 896.411,766.523 896.97,746.318 897.529,710.066 898.088,726.229 898.648,724.809 899.207,720.061 899.766,698.681 900.325,682.821 900.885,648.643 901.444,633.56 902.003,619.231 902.562,622.328 903.122,643.635 903.681,633.671 904.24,636.948 904.799,611.065 905.359,596.59 905.918,636.958 906.477,636.375 907.036,620.856 907.596,673.867 908.155,672.689 908.714,658.394 909.273,673.573 909.833,624.293 910.392,627.473 910.951,582.8 911.51,585.368 912.07,587.587 912.629,606.9 913.188,595.555 913.747,598.939 914.307,584.733 914.866,574.772 915.425,599.337 915.984,572.598 916.544,579.515 917.103,582.724 917.662,619.036 918.221,608.579 918.781,627.094 919.34,615.306 919.899,650.469 920.458,689.373 921.018,659.449 921.577,647.564 922.136,646.371 922.695,665.52 923.255,667.996 923.814,635.862 924.373,640.891 924.932,644.952 925.492,682.914 926.051,699.264 926.61,680.945 927.169,682.601 927.729,700.104 928.288,716.577 928.847,716.476 929.406,715.762 929.966,710.703 930.525,725.638 931.084,758.704 931.644,737.906 932.203,751.785 932.762,766.661 933.321,726.892 933.881,677.343 934.44,665.348 934.999,649.587 935.558,654.707 936.118,673.871 936.677,704.887 937.236,737.852 937.795,703.825 938.355,703.297 938.914,755.122 939.473,753.501 940.032,750.452 940.592,747.482 941.151,744.512 941.71,756.819 942.269,770.155 942.829,765.899 943.388,745.864 943.947,774.877 944.506,785.941 945.066,778.219 945.625,790.158 946.184,800.614 946.743,792.394 947.303,754.843 947.862,735.738 948.421,731.245 948.98,743.118 949.54,739.202 950.099,704.149 950.658,653.916 951.217,688.445 951.777,685.946 952.336,686.492 952.895,717.475 953.454,729.711 954.014,728.298 954.573,726.127 955.132,755.524 955.691,733.114 956.251,727.669 956.81,726.099 957.369,708.414 957.928,710.261 958.488,676.256 959.047,677.502 959.606,680.48 960.165,681.024 960.725,649.601 961.284,632.922 961.843,668.7 962.402,636.986 962.962,653.339 963.521,621.903 964.08,609.147 964.639,630.275 965.199,633.605 965.758,652.796 966.317,683.437 966.876,682.743 967.436,699.984 967.995,717.324 968.554,719.3 969.113,752.822 969.673,750.84 970.232,763.896 970.791,760.731 971.35,756.337 971.91,751.008 972.469,735.766 973.028,719.483 973.587,684.674 974.147,698.614 974.706,664.963 975.265,633.386 975.824,637.452 976.384,641.987 976.943,656.808 977.502,624.585 978.061,647.703 978.621,698.539 979.18,717.406 979.739,716.412 980.298,685.794 980.858,717.286 981.417,731.442 981.976,731.491 982.535,741.649 983.095,757.8 983.654,757.311 984.213,767.477 984.772,762.555 985.332,776.395 985.891,788.801 986.45,783.115 987.009,763.55 987.569,759.476 988.128,774.631 988.687,801.397 989.246,826.271 989.806,822.684 990.365,829.005 990.924,791.554 991.483,736.359 992.043,703.503 992.602,672.58 993.161,675.305 993.72,677.259 994.28,677.944 994.839,647.322 995.398,663.523 995.957,648.192 996.517,666.49 997.076,637.189 997.635,655.806 998.194,705.481 998.754,723.683 999.313,737.502 999.872,717.727 1000.43,696.532 1000.99,664.167 1001.55,683.244 1002.11,714.398 1002.67,695.513 1003.23,680.475 1003.79,683.318 1004.35,732.288 1004.91,728.65 1005.46,730.114 1006.02,726.139 1006.58,672.242 1007.14,706.952 1007.7,671.694 1008.26,674.406 1008.82,641.256 1009.38,659.111 1009.94,661.234 1010.5,663.441 1011.06,649.247 1011.62,637.493 1012.18,624.661 1012.73,644.467 1013.29,632.832 1013.85,554.332 1014.41,558.742 1014.97,580.092 1015.53,587.003 1016.09,574.725 1016.65,598.649 1017.21,602.987 1017.77,627.055 1018.33,664.208 1018.89,667.086 1019.45,648.232 1020.01,669.303 1020.56,653.572 1021.12,655.945 1021.68,672.802 1022.24,655.233 1022.8,673.537 1023.36,673.294 1023.92,676.103 1024.48,643.5 1025.04,677.214 1025.6,681.593 1026.16,685.85 1026.72,668.913 1027.28,668.112 1027.83,652.402 1028.39,640.313 1028.95,673.926 1029.51,677.302 1030.07,692.881 1030.63,659.44 1031.19,661.249 1031.75,645.122 1032.31,665.981 1032.87,667.015 1033.43,650.812 1033.99,603.509 1034.55,613.298 1035.1,601.313 1035.66,604.829 1036.22,614.516 1036.78,636.618 1037.34,609.376 1037.9,629.08 1038.46,600.279 1039.02,606.354 1039.58,654.226 1040.14,642.999 1040.7,646.288 1041.26,647.733 1041.82,647.575 1042.38,651.817 1042.93,653.162 1043.49,669.856 1044.05,703.152 1044.61,670.923 1045.17,658.689 1045.73,657.484 1046.29,644.346 1046.85,647.292 1047.41,643.845 1047.97,642.314 1048.53,643.3 1049.09,659.133 1049.65,676.226 1050.2,672.99 1050.76,703.773 1051.32,718.69 1051.88,747.378 1052.44,696.648 1053,680.201 1053.56,729.872 1054.12,728.557 1054.68,758.064 1055.24,756.421 1055.8,767.521 1056.36,777.168 1056.92,775.218 1057.48,738.059 1058.03,703.44 1058.59,702.826 1059.15,721.627 1059.71,719.624 1060.27,683.707 1060.83,733.52 1061.39,747.781 1061.95,726.679 1062.51,725.462 1063.07,771.024 1063.63,780.731 1064.19,760.854 1064.75,740.725 1065.3,752.735 1065.86,765.03 1066.42,762.554 1066.98,746.234 1067.54,776.023 1068.1,758.642 1068.66,754.562 1069.22,752.071 1069.78,762.823 1070.34,758.298 1070.9,719.393 1071.46,730.667 1072.02,745.125 1072.57,725.072 1073.13,738.245 1073.69,702.66 1074.25,715.528 1074.81,715.395 1075.37,729.648 1075.93,708.624 1076.49,691.946 1077.05,712.568 1077.61,678.643 1078.17,662.022 1078.73,665.103 1079.29,679.948 1079.85,664.325 1080.4,682.508 1080.96,694.957 1081.52,711.706 1082.08,710.16 1082.64,690.011 1083.2,720.751 1083.76,686.013 1084.32,670.806 1084.88,659.408 1085.44,673.214 1086,689.41 1086.56,720.785 1087.12,718.144 1087.67,713.942 1088.23,745.895 1088.79,756.036 1089.35,752.494 1089.91,750.061 1090.47,779.047 1091.03,793.071 1091.59,805.006 1092.15,780.226 1092.71,757.97 1093.27,784.89 1093.83,795.556 1094.39,807.04 1094.94,798.5 1095.5,809.469 1096.06,802.802 1096.62,797.324 1097.18,820.317 1097.74,823.767 1098.3,797.617 1098.86,792.078 1099.42,753.26 1099.98,751.94 1100.54,747.118 1101.1,741.467 1101.66,752.602 1102.22,715.576 1102.77,731.712 1103.33,682.558 1103.89,666.053 1104.45,651.745 1105.01,639.01 1105.57,624.397 1106.13,626.399 1106.69,614.996 1107.25,586.516 1107.81,587.838 1108.37,625.259 1108.93,629.429 1109.49,635.434 1110.04,606.231 1110.6,612.907 1111.16,638.046 1111.72,610.086 1112.28,598.435 1112.84,634.334 1113.4,650.279 1113.96,652.039 1114.52,655.056 1115.08,653.439 1115.64,687.456 1116.2,733.894 1116.76,733.324 1117.31,747.551 1117.87,778.676 1118.43,774.718 1118.99,718.975 1119.55,764.621 1120.11,762.994 1120.67,758.74 1121.23,757.638 1121.79,756.37 1122.35,723.491 1122.91,688.537 1123.47,707.385 1124.03,690.396 1124.59,654.274 1125.14,636.811 1125.7,655.225 1126.26,672.958 1126.82,677.336 1127.38,681.235 1127.94,696.327 1128.5,648.715 1129.06,631.189 1129.62,669.168 1130.18,691.692 1130.74,660.417 1131.3,661.609 1131.86,645.291 1132.41,661.344 1132.97,627.286 1133.53,597.386 1134.09,603.019 1134.65,625.088 1135.21,632.046 1135.77,666.593 1136.33,617.607 1136.89,638.906 1137.45,642.923 1138.01,660.709 1138.57,676.631 1139.13,659.84 1139.68,642.725 1140.24,660.582 1140.8,658.371 1141.36,642.162 1141.92,660.687 1142.48,660.274 1143.04,711.493 1143.6,710.107 1144.16,711.223 1144.72,726.635 1145.28,706.518 1145.84,686.879 1146.4,639.213 1146.96,643.218 1147.51,630.78 1148.07,665.335 1148.63,619.61 1149.19,607.473 1149.75,597.5 1150.31,604.703 1150.87,624.829 1151.43,642.595 1151.99,611.768 1152.55,617.064 1153.11,602.711 1153.67,594.656 1154.23,617.497 1154.78,604.834 1155.34,608.307 1155.9,609.538 1156.46,648.905 1157.02,636.931 1157.58,651.983 1158.14,652.358 1158.7,670.303 1159.26,655.157 1159.82,658.984 1160.38,661.595 1160.94,646.127 1161.5,633.684 1162.05,607.373 1162.61,611.878 1163.17,631.767 1163.73,616.379 1164.29,620.708 1164.85,641.776 1165.41,647.367 1165.97,683.055 1166.53,682.657 1167.09,666.892 1167.65,669.488 1168.21,671.135 1168.77,656.681 1169.33,691.42 1169.88,692.282 1170.44,692.783 1171,695.215 1171.56,675.585 1172.12,674.64 1172.68,694.2 1173.24,740.184 1173.8,738.114 1174.36,737.238 1174.92,717.56 1175.48,727.007 1176.04,758.95 1176.6,770.937 1177.15,765.895 1177.71,734.105 1178.27,682.223 1178.83,692.597 1179.39,674.042 1179.95,673.724 1180.51,693.579 1181.07,656.847 1181.63,660.087 1182.19,676.884 1182.75,659.398 1183.31,645.545 1183.87,648.9 1184.43,681.476 1184.98,648.882 1185.54,685.336 1186.1,681.526 1186.66,653.368 1187.22,670.172 1187.78,670.667 1188.34,650.552 1188.9,649.621 1189.46,621.474 1190.02,610.307 1190.58,602.762 1191.14,603.958 1191.7,607.287 1192.25,642.017 1192.81,678.183 1193.37,680.163 1193.93,678.387 1194.49,663.062 1195.05,630.413 1195.61,646.471 1196.17,629.414 1196.73,646.733 1197.29,661.586 1197.85,661.852 1198.41,597.555 1198.97,622.155 1199.52,658.382 1200.08,658.867 1200.64,677.733 1201.2,710.488 1201.76,739.671 1202.32,723.928 1202.88,719.617 1203.44,750.863 1204,748.54 1204.56,728.258 1205.12,724.013 1205.68,737 1206.24,748.172 1206.8,757.084 1207.35,741.05 1207.91,738.203 1208.47,718.196 1209.03,666.116 1209.59,684.911 1210.15,699.048 1210.71,697.92 1211.27,680.124 1211.83,679.605 1212.39,696.39 1212.95,698.223 1213.51,696.955 1214.07,693.883 1214.62,660.964 1215.18,646.509 1215.74,628.89 1216.3,634.039 1216.86,636.807 1217.42,642.985 1217.98,642.998 1218.54,663.66 1219.1,669.729 1219.66,686.272 1220.22,670.183 1220.78,692.068 1221.34,712.418 1221.89,694.648 1222.45,694.654 1223.01,664.317 1223.57,680.763 1224.13,714.407 1224.69,733.988 1225.25,747.829 1225.81,729.611 1226.37,729.385 1226.93,692.071 1227.49,691.415 1228.05,706.861 1228.61,733.401 1229.17,699.89 1229.72,695.826 1230.28,710.544 1230.84,741.982 1231.4,741.935 1231.96,686.362 1232.52,654.154 1233.08,685.707 1233.64,717.315 1234.2,698.782 1234.76,717.317 1235.32,698.932 1235.88,698.986 1236.44,714.235 1236.99,695.358 1237.55,681.231 1238.11,682.193 1238.67,680.478 1239.23,677.542 1239.79,673.751 1240.35,675.454 1240.91,691.15 1241.47,707.071 1242.03,689.661 1242.59,690.467 1243.15,701.985 1243.71,715.898 1244.26,714 1244.82,732.354 1245.38,745.786 1245.94,740.574 1246.5,707.809 1247.06,735.886 1247.62,750.314 1248.18,749.083 1248.74,747.54 1249.3,678.756 1249.86,661.066 1250.42,644.56 1250.98,647.233 1251.54,653.223 1252.09,638.502 1252.65,640.193 1253.21,642.312 1253.77,658.283 1254.33,627.675 1254.89,628.519 1255.45,664.196 1256.01,681.485 1256.57,646.418 1257.13,649.549 1257.69,669.75 1258.25,670.262 1258.81,685.173 1259.36,684.058 1259.92,651.101 1260.48,668.79 1261.04,684.578 1261.6,683.975 1262.16,702.61 1262.72,702.647 1263.28,717.743 1263.84,749.057 1264.4,730.366 1264.96,677.135 1265.52,664.373 1266.08,650.001 1266.63,650.545 1267.19,621.037 1267.75,605.853 1268.31,592.611 1268.87,615.181 1269.43,603.99 1269.99,595.156 1270.55,604.268 1271.11,577.546 1271.67,631.303 1272.23,637.273 1272.79,653.994 1273.35,640.774 1273.91,641.167 1274.46,659.185 1275.02,659.879 1275.58,662.685 1276.14,648.704 1276.7,666.084 1277.26,653.491 1277.82,622.884 1278.38,624.786 1278.94,628.111 1279.5,601.347 1280.06,624.054 1280.62,657.298 1281.18,657.053 1281.73,645.675 1282.29,648.525 1282.85,667.045 1283.41,685.448 1283.97,683.551 1284.53,714.106 1285.09,712.387 1285.65,711.656 1286.21,741.472 1286.77,736.585 1287.33,718.988 1287.89,734.721 1288.45,733.702 1289,730.354 1289.56,731.135 1290.12,730.81 1290.68,728.164 1291.24,742.731 1291.8,723.112 1292.36,705.581 1292.92,735.494 1293.48,730.938 1294.04,710.214 1294.6,693.204 1295.16,697.418 1295.72,710.561 1296.28,709.349 1296.83,702.739 1297.39,682.938 1297.95,697.073 1298.51,711.977 1299.07,694.101 1299.63,676.492 1300.19,678.849 1300.75,662.975 1301.31,665.467 1301.87,665.059 1302.43,667.747 1302.99,687.517 1303.55,767.166 1304.1,746.929 1304.66,726.35 1305.22,706.865 1305.78,718.062 1306.34,746.856 1306.9,744.414 1307.46,727.584 1308.02,723.305 1308.58,749.67 1309.14,762.564 1309.7,775.207 1310.26,768.927 1310.82,734.747 1311.38,749.059 1311.93,776.009 1312.49,724.437 1313.05,705.432 1313.61,707.095 1314.17,676.766 1314.73,678.226 1315.29,612.603 1315.85,598.308 1316.41,603.348 1316.97,601.539 1317.53,588.861 1318.09,607.871 1318.65,609.504 1319.2,596.863 1319.76,604.189 1320.32,624.585 1320.88,627.023 1321.44,648.217 1322,667.261 1322.56,651.896 1323.12,655.346 1323.68,624.732 1324.24,629.34 1324.8,614.202 1325.36,636.022 1325.92,671.414 1326.47,668.956 1327.03,635.389 1327.59,638.411 1328.15,641.303 1328.71,674.162 1329.27,675.575 1329.83,646.911 1330.39,678.878 1330.95,659.9 1331.51,632.821 1332.07,652.362 1332.63,641.453 1333.19,643.705 1333.75,660.074 1334.3,644.049 1334.86,666.14 1335.42,664.023 1335.98,648.343 1336.54,649.844 1337.1,664.38 1337.66,651.099 1338.22,650.934 1338.78,667.465 1339.34,683.433 1339.9,650.126 1340.46,653.815 1341.02,668.718 1341.57,686.629 1342.13,702.484 1342.69,684.394 1343.25,700.066 1343.81,735.873 1344.37,767.447 1344.93,762.089 1345.49,709.578 1346.05,659.478 1346.61,677.424 1347.17,692.305 1347.73,710.85 1348.29,695.696 1348.84,695.455 1349.4,682.157 1349.96,652.095 1350.52,651.915 1351.08,654.092 1351.64,672.539 1352.2,672.262 1352.76,691.258 1353.32,701.893 1353.88,669.102 1354.44,621.782 1355,593.914 1355.56,581.056 1356.12,586.615 1356.67,609.663 1357.23,612.988 1357.79,635.856 1358.35,640.031 1358.91,658.41 1359.47,630.407 1360.03,683.446 1360.59,686.538 1361.15,685.638 1361.71,685.193 1362.27,670.349 1362.83,689.584 1363.39,687.523 1363.94,702.938 1364.5,655.018 1365.06,655.16 1365.62,672.425 1366.18,672.121 1366.74,641.794 1367.3,663.045 1367.86,680.869 1368.42,666.919 1368.98,668.441 1369.54,685.203 1370.1,703.196 1370.66,686.863 1371.21,687.614 1371.77,684.626 1372.33,665.292 1372.89,645.324 1373.45,642.821 1374.01,644.024 1374.57,650.084 1375.13,668.176 1375.69,687.839 1376.25,639.4 1376.81,656.375 1377.37,623.261 1377.93,630.286 1378.49,633.33 1379.04,620.921 1379.6,607.746 1380.16,614.479 1380.72,647.818 1381.28,629.881 1381.84,614.695 1382.4,636.29 1382.96,637.358 1383.52,653.074 1384.08,669.544 1384.64,669.385 1385.2,697.043 1385.76,696.571 1386.31,709.114 1386.87,709.583 1387.43,738.605 1387.99,770.328 1388.55,765.012 1389.11,760.595 1389.67,752.52 1390.23,748.487 1390.79,760.921 1391.35,774.995 1391.91,766.375 1392.47,713.158 1393.03,692.03 1393.58,689.034 1394.14,718.293 1394.7,717.201 1395.26,702.425 1395.82,672.223 1396.38,656.233 1396.94,641.81 1397.5,661.406 1398.06,665.99 1398.62,684.704 1399.18,697.639 1399.74,695.831 1400.3,662.456 1400.86,679.485 1401.41,664.055 1401.97,663.877 1402.53,665.565 1403.09,664.802 1403.65,649.329 1404.21,632.726 1404.77,638.1 1405.33,626.342 1405.89,633.276 1406.45,668.911 1407.01,638.611 1407.57,662.631 1408.13,683.248 1408.68,683.798 1409.24,697.655 1409.8,695.2 1410.36,681.419 1410.92,699.901 1411.48,682.653 1412.04,715.247 1412.6,714.27 1413.16,730.259 1413.72,728.975 1414.28,676.176 1414.84,688.926 1415.4,702.254 1415.95,700.699 1416.51,731.18 1417.07,774.984 1417.63,787.954 1418.19,765.137 1418.75,777.519 1419.31,773.646 1419.87,772.657 1420.43,747.025 1420.99,726.002 1421.55,724.868 1422.11,720.424 1422.67,718.677 1423.23,715.814 1423.78,714.582 1424.34,795.589 1424.9,776.387 1425.46,723.058 1426.02,702.002 1426.58,699.867 1427.14,714.466 1427.7,713.151 1428.26,714.245 1428.82,712.407 1429.38,695.105 1429.94,712.007 1430.5,724.651 1431.05,688.334 1431.61,701.94 1432.17,701.511 1432.73,650.939 1433.29,651.011 1433.85,670.452 1434.41,672.804 1434.97,688.957 1435.53,705.749 1436.09,721.169 1436.65,721.177 1437.21,736.656 1437.77,733.944 1438.33,731.171 1438.88,730.003 1439.44,729.494 1440,691.967 1440.56,709.654 1441.12,692.701 1441.68,693.661 1442.24,728.475 1442.8,724.648 1443.36,690.971 1443.92,658.483 1444.48,657.743 1445.04,656.68 1445.6,657.615 1446.15,657.994 1446.71,675.782 1447.27,694.223 1447.83,674.229 1448.39,707.696 1448.95,720.426 1449.51,764.523 1450.07,728.134 1450.63,724.779 1451.19,723.049 1451.75,721.9 1452.31,705.576 1452.87,688.572 1453.42,688.756 1453.98,702.637 1454.54,717.125 1455.1,713.352 1455.66,746.318 1456.22,780.021 1456.78,742.931 1457.34,741.466 1457.9,756.422 1458.46,771.032 1459.02,768.671 1459.58,761.83 1460.14,740.876 1460.7,752.203 1461.25,718.261 1461.81,713.274 1462.37,727.76 1462.93,695.646 1463.49,677.852 1464.05,680.08 1464.61,648.301 1465.17,652.88 1465.73,654.359 1466.29,655.845 1466.85,653.789 1467.41,672.966 1467.97,707.119 1468.52,719.168 1469.08,701.991 1469.64,684.085 1470.2,685.659 1470.76,670.119 1471.32,721.912 1471.88,748.937 1472.44,744.178 1473,739.315 1473.56,739.419 1474.12,751.134 1474.68,780.36 1475.24,774.708 1475.79,753.568 1476.35,669.219 1476.91,675.543 1477.47,689.253 1478.03,640.959 1478.59,640.448 1479.15,628.207 1479.71,646.334 1480.27,649.594 1480.83,619.172 1481.39,657.041 1481.95,690.7 1482.51,707.744 1483.07,705.651 1483.62,721.823 1484.18,705.944 1484.74,753.789 1485.3,719.824 1485.86,699.306 1486.42,651.409 1486.98,637.415 1487.54,640.96 1488.1,659.521 1488.66,644.758 1489.22,682.873 1489.78,683.422 1490.34,668.695 1490.89,712.372 1491.45,747.297 1492.01,756.466 1492.57,788.507 1493.13,783.331 1493.69,794.923 1494.25,773.414 1494.81,724.733 1495.37,705.742 1495.93,719.592 1496.49,716.74 1497.05,698.47 1497.61,698.37 1498.16,663.721 1498.72,651.355 1499.28,667.675 1499.84,666.126 1500.4,649.901 1500.96,599.097 1501.52,519.916 1502.08,528.46 1502.64,552.231 1503.2,557.303 1503.76,563.399 1504.32,573.428 1504.88,576.848 1505.44,550.002 1505.99,558.793 1506.55,596.281 1507.11,603.579 1507.67,626.056 1508.23,613.618 1508.79,616.712 1509.35,602.659 1509.91,623.288 1510.47,623.802 1511.03,627.116 1511.59,663.059 1512.15,645.717 1512.71,635.3 1513.26,636.656 1513.82,637.111 1514.38,642.803 1514.94,632.235 1515.5,637.388 1516.06,657.122 1516.62,690.922 1517.18,692.083 1517.74,692.219 1518.3,708.809 1518.86,724.582 1519.42,706.922 1519.98,687.362 1520.53,706.366 1521.09,705.966 1521.65,705.957 1522.21,719.829 1522.77,732 1523.33,730.463 1523.89,740.377 1524.45,738.142 1525.01,765.683 1525.57,807.917 1526.13,817.977 1526.69,825.975 1527.25,835.77 1527.81,845.668 1528.36,868.658 1528.92,838.113 1529.48,811.027 1530.04,799.656 1530.6,812.596 1531.16,821.928 1531.72,816.359 1532.28,838.252 1532.84,832.562 1533.4,811.89 1533.96,789.546 1534.52,767.449 1535.08,747.338 1535.63,759.937 1536.19,755.501 1536.75,769.279 1537.31,734.455 1537.87,712.302 1538.43,726.148 1538.99,707.129 1539.55,707.648 1540.11,705.194 1540.67,719.723 1541.23,699.817 1541.79,711.665 1542.35,658.591 1542.9,644.028 1543.46,676.833 1544.02,692.769 1544.58,687.191 1545.14,688.044 1545.7,683.867 1546.26,650.802 1546.82,637.382 1547.38,606.616 1547.94,609.085 1548.5,626.091 1549.06,614.156 1549.62,600.682 1550.18,601.124 1550.73,621.989 1551.29,621.185 1551.85,639.887 1552.41,622.419 1552.97,625.512 1553.53,660.555 1554.09,680.409 1554.65,696.052 1555.21,660.719 1555.77,597.578 1556.33,620.693 1556.89,606.276 1557.45,644.574 1558,631.293 1558.56,588.988 1559.12,581.537 1559.68,568.403 1560.24,589.795 1560.8,579.511 1561.36,601.559 1561.92,636.974 1562.48,673.711 1563.04,658.774 1563.6,642.146 1564.16,658.154 1564.72,660.982 1565.28,660.686 1565.83,660.388 1566.39,678.466 1566.95,678.553 1567.51,646.868 1568.07,629.761 1568.63,634.843 1569.19,655.971 1569.75,660.717 1570.31,646.524 1570.87,633.007 1571.43,637.044 1571.99,627.429 1572.55,646.744 1573.1,650.424 1573.66,650.675 1574.22,699.364 1574.78,715.399 1575.34,698.885 1575.9,731.216 1576.46,728.924 1577.02,723.765 1577.58,724.072 1578.14,735.545 1578.7,714.592 1579.26,731.683 1579.82,758.943 1580.37,739.454 1580.93,734.395 1581.49,700.88 1582.05,730.693 1582.61,691.997 1583.17,693.998 1583.73,675.258 1584.29,658.688 1584.85,613.753 1585.41,604.065 1585.97,609.261 1586.53,628.808 1587.09,583.975 1587.65,589.213 1588.2,582.039 1588.76,603.412 1589.32,642.446 1589.88,614.016 1590.44,599.725 1591,622.823 1591.56,640.613 1592.12,611.131 1592.68,616.134 1593.24,604.467 1593.8,592.549 1594.36,594.262 1594.92,611.964 1595.47,619.491 1596.03,606.751 1596.59,626.654 1597.15,645.686 1597.71,631.247 1598.27,636.263 1598.83,637.384 1599.39,637.264 1599.95,654.849 1600.51,674.147 1601.07,676.506 1601.63,694.157 1602.19,677.36 1602.74,664.198 1603.3,681.286 1603.86,700.136 1604.42,717.278 1604.98,700.391 1605.54,681.475 1606.1,680.119 1606.66,698.724 1607.22,698.688 1607.78,699.466 1608.34,697.203 1608.9,715.99 1609.46,704.257 1610.02,702.731 1610.57,671.366 1611.13,689.03 1611.69,673.522 1612.25,678.917 1612.81,682.338 1613.37,651.95 1613.93,653.454 1614.49,673.04 1615.05,706.288 1615.61,705.896 1616.17,686.981 1616.73,735.083 1617.29,729.977 1617.84,693.458 1618.4,726.18 1618.96,726.558 1619.52,709.067 1620.08,706.961 1620.64,707.265 1621.2,690.685 1621.76,674.524 1622.32,679.506 1622.88,699.838 1623.44,699.07 1624,668.404 1624.56,698.799 1625.11,712.974 1625.67,726.401 1626.23,709.644 1626.79,756.035 1627.35,756.203 1627.91,770.613 1628.47,764.942 1629.03,762.422 1629.59,788.944 1630.15,814.407 1630.71,775.851 1631.27,752.746 1631.83,780.174 1632.39,773.089 1632.94,768.523 1633.5,762.606 1634.06,758.49 1634.62,788.756 1635.18,784.096 1635.74,747.766 1636.3,696.6 1636.86,691.013 1637.42,688.001 1637.98,688.384 1638.54,704.838 1639.1,656.213 1639.66,641.416 1640.21,626.709 1640.77,629.39 1641.33,613.203 1641.89,618.825 1642.45,622.41 1643.01,607.932 1643.57,611.187 1644.13,581.027 1644.69,571.363 1645.25,609.198 1645.81,628.982 1646.37,633.064 1646.93,670.818 1647.48,685.357 1648.04,666.872 1648.6,699.539 1649.16,712.35 1649.72,726.553 1650.28,722.39 1650.84,701.635 1651.4,681.363 1651.96,651.564 1652.52,669.008 1653.08,704.681 1653.64,691.548 1654.2,692.118 1654.76,687.018 1655.31,658.175 1655.87,644.242 1656.43,631.224 1656.99,618.912 1657.55,637.243 1658.11,656.562 1658.67,631.701 1659.23,637.255 1659.79,626.145 1660.35,626.375 1660.91,597.983 1661.47,589.22 1662.03,631.63 1662.58,649.591 1663.14,648.733 1663.7,696.87 1664.26,731.398 1664.82,713.707 1665.38,697.237 1665.94,694.26 1666.5,691.064 1667.06,690.672 1667.62,706.793 1668.18,719.589 1668.74,732.819 1669.3,728.006 1669.85,711.657 1670.41,728.988 1670.97,712.127 1671.53,726.706 1672.09,709.753 1672.65,706.894 1673.21,669.902 1673.77,687.777 1674.33,670.484 1674.89,668.5 1675.45,684.825 1676.01,684.341 1676.57,684.861 1677.13,683.684 1677.68,637.702 1678.24,621.906 1678.8,608.229 1679.36,643.19 1679.92,615.137 1680.48,633.986 1681.04,618.375 1681.6,593.818 1682.16,583.132 1682.72,622.542 1683.28,626.795 1683.84,650.222 1684.4,621.281 1684.95,624.756 1685.51,645.568 1686.07,665.803 1686.63,679.97 1687.19,679.757 1687.75,664.016 1688.31,668.52 1688.87,669.652 1689.43,655.909 1689.99,675.405 1690.55,660.757 1691.11,662.476 1691.67,666.122 1692.23,666.691 1692.78,631.694 1693.34,635.677 1693.9,669.852 1694.46,686.834 1695.02,703.778 1695.58,671.326 1696.14,673.284 1696.7,670.463 1697.26,655.495 1697.82,623.189 1698.38,610.355 1698.94,594.99 1699.5,616.681 1700.05,589.278 1700.61,608.143 1701.17,643.283 1701.73,659.834 1702.29,662.843 1702.85,698.233 1703.41,728.305 1703.97,743.123 1704.53,739.785 1705.09,750.199 1705.65,748.735 1706.21,742.261 1706.77,735.606 1707.32,749.224 1707.88,729.84 1708.44,727.497 1709,709.534 1709.56,754.356 1710.12,766.052 1710.68,779.585 1711.24,789.678 1711.8,795.853 1712.36,791.52 1712.92,822.474 1713.48,818.966 1714.04,797.308 1714.6,776.676 1715.15,773.594 1715.71,751.855 1716.27,717.106 1716.83,715.122 1717.39,732.043 1717.95,713.827 1718.51,711.397 1719.07,689.949 1719.63,689.622 1720.19,705.073 1720.75,719.401 1721.31,717.304 1721.87,730.897 1722.42,731.618 1722.98,716.456 1723.54,762.176 1724.1,804.288 1724.66,767.019 1725.22,760.39 1725.78,787.069 1726.34,778.903 1726.9,774.363 1727.46,785.853 1728.02,764.047 1728.58,762.724 1729.14,758.242 1729.69,754.71 1730.25,765.392 1730.81,777.361 1731.37,755.024 1731.93,748.989 1732.49,731.044 1733.05,713.115 1733.61,744.503 1734.17,759.394 1734.73,786.946 1735.29,762.527 1735.85,757.771 1736.41,752.998 1736.97,701.719 1737.52,729.104 1738.08,728.924 1738.64,758.527 1739.2,739.677 1739.76,720.345 1740.32,719.002 1740.88,718.147 1741.44,719.166 1742,717.338 1742.56,746.943 1743.12,726.101 1743.68,740.034 1744.24,751.804 1744.79,711.791 1745.35,707.472 1745.91,687.385 1746.47,698.749 1747.03,696.389 1747.59,697.179 1748.15,680.021 1748.71,682.661 1749.27,702.848 1749.83,717.571 1750.39,717.446 1750.95,670.508 1751.51,637.67 1752.06,624.278 1752.62,657.189 1753.18,623.232 1753.74,640.848 1754.3,626.449 1754.86,660.844 1755.42,679.408 1755.98,680.062 1756.54,694.438 1757.1,724.437 1757.66,737.498 1758.22,703.611 1758.78,702.02 1759.34,702.906 1759.89,718.92 1760.45,684.818 1761.01,682.705 1761.57,680.807 1762.13,663.415 1762.69,697.706 1763.25,711.493 1763.81,693.85 1764.37,690.522 1764.93,707.554 1765.49,706.706 1766.05,720.536 1766.61,768.62 1767.16,749.716 1767.72,727.279 1768.28,708.332 1768.84,708.291 1769.4,704.233 1769.96,704.593 1770.52,719.983 1771.08,698.184 1771.64,699.736 1772.2,685.358 1772.76,684.345 1773.32,694.647 1773.88,692.954 1774.43,658.877 1774.99,644.606 1775.55,662.257 1776.11,680.912 1776.67,682.322 1777.23,697.402 1777.79,698.893 1778.35,683.325 1778.91,670.516 1779.47,654.077 1780.03,643.16 1780.59,658.962 1781.15,662.139 1781.71,646.255 1782.26,647.898 1782.82,666.517 1783.38,685.785 1783.94,718.057 1784.5,733.35 1785.06,746.271 1785.62,726.713 1786.18,725.896 1786.74,689.698 1787.3,709.628 1787.86,712.424 1788.42,710.646 1788.98,679.307 1789.53,696.446 1790.09,697.494 1790.65,679.047 1791.21,661.058 1791.77,678.926 1792.33,645.885 1792.89,683.918 1793.45,669.211 1794.01,652.855 1794.57,687.509 1795.13,684.63 1795.69,669.45 1796.25,673.837 1796.8,660.236 1797.36,628.622 1797.92,631.771 1798.48,654.223 1799.04,645.657 1799.6,632.095 1800.16,634.84 1800.72,635.877 1801.28,608.186 1801.84,626.339 1802.4,629.605 1802.96,629.962 1803.52,644.59 1804.08,650.7 1804.63,684.01 1805.19,684.463 1805.75,684.77 1806.31,682.498 1806.87,682.432 1807.43,666.688 1807.99,651.281 1808.55,672.792 1809.11,673.686 1809.67,677.64 1810.23,644.381 1810.79,646.572 1811.35,663.185 1811.9,665.845 1812.46,648.454 1813.02,682.947 1813.58,650.319 1814.14,634.615 1814.7,652.114 1815.26,700.854 1815.82,700.281 1816.38,715.032 1816.94,713.407 1817.5,710.864 1818.06,711.03 1818.62,710.572 1819.18,694.145 1819.73,693.165 1820.29,693.411 1820.85,695.554 1821.41,646.321 1821.97,634.038 1822.53,587.902 1823.09,579.206 1823.65,598.842 1824.21,604.283 1824.77,609.866 1825.33,614.202 1825.89,621.055 1826.45,610.449 1827,633.281 1827.56,668.386 1828.12,647.891 1828.68,665.186 1829.24,666.541 1829.8,686.297 1830.36,705.162 1830.92,720.903 1831.48,737.128 1832.04,748.731 1832.6,742.182 1833.16,709.197 1833.72,675.994 1834.27,677.482 1834.83,676.12 1835.39,695.156 1835.95,677.889 1836.51,690.056 1837.07,722.846 1837.63,739.978 1838.19,754.657 \"/>\n<path clip-path=\"url(#clip383)\" d=\"M720.247 691.027 L720.806 691.027 L721.365 691.027 L721.924 691.027 L722.484 691.027 L723.043 691.027 L723.602 691.027 L724.161 691.027 L724.721 691.027 L725.28 691.027 L725.839 691.027 L726.398 691.027 L726.958 691.027 L727.517 691.027 L728.076 691.027 L728.635 691.027 L729.195 691.027 L729.754 691.027 L730.313 691.027 L730.872 691.027 L731.432 691.027 L731.991 691.027 L732.55 691.027 L733.109 691.027 L733.669 691.027 L734.228 691.027 L734.787 691.027 L735.346 691.027 L735.906 691.027 L736.465 691.027 L737.024 691.027 L737.583 691.027 L738.143 691.027 L738.702 691.027 L739.261 691.027 L739.82 691.027 L740.38 691.027 L740.939 691.027 L741.498 691.027 L742.057 691.027 L742.617 691.027 L743.176 691.027 L743.735 691.027 L744.294 691.027 L744.854 691.027 L745.413 691.027 L745.972 691.027 L746.531 691.027 L747.091 691.027 L747.65 691.027 L748.209 691.027 L748.768 691.027 L749.328 691.027 L749.887 691.027 L750.446 691.027 L751.005 691.027 L751.565 691.027 L752.124 691.027 L752.683 691.027 L753.242 691.027 L753.802 691.027 L754.361 691.027 L754.92 691.027 L755.479 691.027 L756.039 691.027 L756.598 691.027 L757.157 691.027 L757.716 691.027 L758.276 691.027 L758.835 691.027 L759.394 691.027 L759.953 691.027 L760.513 691.027 L761.072 691.027 L761.631 691.027 L762.19 691.027 L762.75 691.027 L763.309 691.027 L763.868 691.027 L764.427 691.027 L764.987 691.027 L765.546 691.027 L766.105 691.027 L766.664 691.027 L767.224 691.027 L767.783 691.027 L768.342 691.027 L768.901 691.027 L769.461 691.027 L770.02 691.027 L770.579 691.027 L771.138 691.027 L771.698 691.027 L772.257 691.027 L772.816 691.027 L773.375 691.027 L773.935 691.027 L774.494 691.027 L775.053 691.027 L775.612 691.027 L776.172 691.027 L776.731 691.027 L777.29 691.027 L777.849 691.027 L778.409 691.027 L778.968 691.027 L779.527 691.027 L780.086 691.027 L780.646 691.027 L781.205 691.027 L781.764 691.027 L782.323 691.027 L782.883 691.027 L783.442 691.027 L784.001 691.027 L784.56 691.027 L785.12 691.027 L785.679 691.027 L786.238 691.027 L786.797 691.027 L787.357 691.027 L787.916 691.027 L788.475 691.027 L789.034 691.027 L789.594 691.027 L790.153 691.027 L790.712 691.027 L791.271 691.027 L791.831 691.027 L792.39 691.027 L792.949 691.027 L793.508 691.027 L794.068 691.027 L794.627 691.027 L795.186 691.027 L795.745 691.027 L796.305 691.027 L796.864 691.027 L797.423 691.027 L797.982 691.027 L798.542 691.027 L799.101 691.027 L799.66 691.027 L800.219 691.027 L800.779 691.027 L801.338 691.027 L801.897 691.027 L802.456 691.027 L803.016 691.027 L803.575 691.027 L804.134 691.027 L804.693 691.027 L805.253 691.027 L805.812 691.027 L806.371 691.027 L806.931 691.027 L807.49 691.027 L808.049 691.027 L808.608 691.027 L809.168 691.027 L809.727 691.027 L810.286 691.027 L810.845 691.027 L811.405 691.027 L811.964 691.027 L812.523 691.027 L813.082 691.027 L813.642 691.027 L814.201 691.027 L814.76 691.027 L815.319 691.027 L815.879 691.027 L816.438 691.027 L816.997 691.027 L817.556 691.027 L818.116 691.027 L818.675 691.027 L819.234 691.027 L819.793 691.027 L820.353 691.027 L820.912 691.027 L821.471 691.027 L822.03 691.027 L822.59 691.027 L823.149 691.027 L823.708 691.027 L824.267 691.027 L824.827 691.027 L825.386 691.027 L825.945 691.027 L826.504 691.027 L827.064 691.027 L827.623 691.027 L828.182 691.027 L828.741 691.027 L829.301 691.027 L829.86 691.027 L830.419 691.027 L830.978 691.027 L831.538 691.027 L832.097 691.027 L832.656 691.027 L833.215 691.027 L833.775 691.027 L834.334 691.027 L834.893 691.027 L835.452 691.027 L836.012 691.027 L836.571 691.027 L837.13 691.027 L837.689 691.027 L838.249 691.027 L838.808 691.027 L839.367 691.027 L839.926 691.027 L840.486 691.027 L841.045 691.027 L841.604 691.027 L842.163 691.027 L842.723 691.027 L843.282 691.027 L843.841 691.027 L844.4 691.027 L844.96 691.027 L845.519 691.027 L846.078 691.027 L846.637 691.027 L847.197 691.027 L847.756 691.027 L848.315 691.027 L848.874 691.027 L849.434 691.027 L849.993 691.027 L850.552 691.027 L851.111 691.027 L851.671 691.027 L852.23 691.027 L852.789 691.027 L853.348 691.027 L853.908 691.027 L854.467 691.027 L855.026 691.027 L855.585 691.027 L856.145 691.027 L856.704 691.027 L857.263 691.027 L857.822 691.027 L858.382 691.027 L858.941 691.027 L859.5 691.027 L860.059 691.027 L860.619 691.027 L861.178 691.027 L861.737 691.027 L862.296 691.027 L862.856 691.027 L863.415 691.027 L863.974 691.027 L864.533 691.027 L865.093 691.027 L865.652 691.027 L866.211 691.027 L866.77 691.027 L867.33 691.027 L867.889 691.027 L868.448 691.027 L869.007 691.027 L869.567 691.027 L870.126 691.027 L870.685 691.027 L871.244 691.027 L871.804 691.027 L872.363 691.027 L872.922 691.027 L873.481 691.027 L874.041 691.027 L874.6 691.027 L875.159 691.027 L875.718 691.027 L876.278 691.027 L876.837 691.027 L877.396 691.027 L877.955 691.027 L878.515 691.027 L879.074 691.027 L879.633 691.027 L880.192 691.027 L880.752 691.027 L881.311 691.027 L881.87 691.027 L882.429 691.027 L882.989 691.027 L883.548 691.027 L884.107 691.027 L884.666 691.027 L885.226 691.027 L885.785 691.027 L886.344 691.027 L886.903 691.027 L887.463 691.027 L888.022 691.027 L888.581 691.027 L889.14 691.027 L889.7 691.027 L890.259 691.027 L890.818 691.027 L891.377 691.027 L891.937 691.027 L892.496 691.027 L893.055 691.027 L893.614 691.027 L894.174 691.027 L894.733 691.027 L895.292 691.027 L895.851 691.027 L896.411 691.027 L896.97 691.027 L897.529 691.027 L898.088 691.027 L898.648 691.027 L899.207 691.027 L899.766 691.027 L900.325 691.027 L900.885 691.027 L901.444 691.027 L902.003 691.027 L902.562 691.027 L903.122 691.027 L903.681 691.027 L904.24 691.027 L904.799 691.027 L905.359 691.027 L905.918 691.027 L906.477 691.027 L907.036 691.027 L907.596 691.027 L908.155 691.027 L908.714 691.027 L909.273 691.027 L909.833 691.027 L910.392 691.027 L910.951 691.027 L911.51 691.027 L912.07 691.027 L912.629 691.027 L913.188 691.027 L913.747 691.027 L914.307 691.027 L914.866 691.027 L915.425 691.027 L915.984 691.027 L916.544 691.027 L917.103 691.027 L917.662 691.027 L918.221 691.027 L918.781 691.027 L919.34 691.027 L919.899 691.027 L920.458 691.027 L921.018 691.027 L921.577 691.027 L922.136 691.027 L922.695 691.027 L923.255 691.027 L923.814 691.027 L924.373 691.027 L924.932 691.027 L925.492 691.027 L926.051 691.027 L926.61 691.027 L927.169 691.027 L927.729 691.027 L928.288 691.027 L928.847 691.027 L929.406 691.027 L929.966 691.027 L930.525 691.027 L931.084 691.027 L931.644 691.027 L932.203 691.027 L932.762 691.027 L933.321 691.027 L933.881 691.027 L934.44 691.027 L934.999 691.027 L935.558 691.027 L936.118 691.027 L936.677 691.027 L937.236 691.027 L937.795 691.027 L938.355 691.027 L938.914 691.027 L939.473 691.027 L940.032 691.027 L940.592 691.027 L941.151 691.027 L941.71 691.027 L942.269 691.027 L942.829 691.027 L943.388 691.027 L943.947 691.027 L944.506 691.027 L945.066 691.027 L945.625 691.027 L946.184 691.027 L946.743 691.027 L947.303 691.027 L947.862 691.027 L948.421 691.027 L948.98 691.027 L949.54 691.027 L950.099 691.027 L950.658 691.027 L951.217 691.027 L951.777 691.027 L952.336 691.027 L952.895 691.027 L953.454 691.027 L954.014 691.027 L954.573 691.027 L955.132 691.027 L955.691 691.027 L956.251 691.027 L956.81 691.027 L957.369 691.027 L957.928 691.027 L958.488 691.027 L959.047 691.027 L959.606 691.027 L960.165 691.027 L960.725 691.027 L961.284 691.027 L961.843 691.027 L962.402 691.027 L962.962 691.027 L963.521 691.027 L964.08 691.027 L964.639 691.027 L965.199 691.027 L965.758 691.027 L966.317 691.027 L966.876 691.027 L967.436 691.027 L967.995 691.027 L968.554 691.027 L969.113 691.027 L969.673 691.027 L970.232 691.027 L970.791 691.027 L971.35 691.027 L971.91 691.027 L972.469 691.027 L973.028 691.027 L973.587 691.027 L974.147 691.027 L974.706 691.027 L975.265 691.027 L975.824 691.027 L976.384 691.027 L976.943 691.027 L977.502 691.027 L978.061 691.027 L978.621 691.027 L979.18 691.027 L979.739 691.027 L980.298 691.027 L980.858 691.027 L981.417 691.027 L981.976 691.027 L982.535 691.027 L983.095 691.027 L983.654 691.027 L984.213 691.027 L984.772 691.027 L985.332 691.027 L985.891 691.027 L986.45 691.027 L987.009 691.027 L987.569 691.027 L988.128 691.027 L988.687 691.027 L989.246 691.027 L989.806 691.027 L990.365 691.027 L990.924 691.027 L991.483 691.027 L992.043 691.027 L992.602 691.027 L993.161 691.027 L993.72 691.027 L994.28 691.027 L994.839 691.027 L995.398 691.027 L995.957 691.027 L996.517 691.027 L997.076 691.027 L997.635 691.027 L998.194 691.027 L998.754 691.027 L999.313 691.027 L999.872 691.027 L1000.43 691.027 L1000.99 691.027 L1001.55 691.027 L1002.11 691.027 L1002.67 691.027 L1003.23 691.027 L1003.79 691.027 L1004.35 691.027 L1004.91 691.027 L1005.46 691.027 L1006.02 691.027 L1006.58 691.027 L1007.14 691.027 L1007.7 691.027 L1008.26 691.027 L1008.82 691.027 L1009.38 691.027 L1009.94 691.027 L1010.5 691.027 L1011.06 691.027 L1011.62 691.027 L1012.18 691.027 L1012.73 691.027 L1013.29 691.027 L1013.85 691.027 L1014.41 691.027 L1014.97 691.027 L1015.53 691.027 L1016.09 691.027 L1016.65 691.027 L1017.21 691.027 L1017.77 691.027 L1018.33 691.027 L1018.89 691.027 L1019.45 691.027 L1020.01 691.027 L1020.56 691.027 L1021.12 691.027 L1021.68 691.027 L1022.24 691.027 L1022.8 691.027 L1023.36 691.027 L1023.92 691.027 L1024.48 691.027 L1025.04 691.027 L1025.6 691.027 L1026.16 691.027 L1026.72 691.027 L1027.28 691.027 L1027.83 691.027 L1028.39 691.027 L1028.95 691.027 L1029.51 691.027 L1030.07 691.027 L1030.63 691.027 L1031.19 691.027 L1031.75 691.027 L1032.31 691.027 L1032.87 691.027 L1033.43 691.027 L1033.99 691.027 L1034.55 691.027 L1035.1 691.027 L1035.66 691.027 L1036.22 691.027 L1036.78 691.027 L1037.34 691.027 L1037.9 691.027 L1038.46 691.027 L1039.02 691.027 L1039.58 691.027 L1040.14 691.027 L1040.7 691.027 L1041.26 691.027 L1041.82 691.027 L1042.38 691.027 L1042.93 691.027 L1043.49 691.027 L1044.05 691.027 L1044.61 691.027 L1045.17 691.027 L1045.73 691.027 L1046.29 691.027 L1046.85 691.027 L1047.41 691.027 L1047.97 691.027 L1048.53 691.027 L1049.09 691.027 L1049.65 691.027 L1050.2 691.027 L1050.76 691.027 L1051.32 691.027 L1051.88 691.027 L1052.44 691.027 L1053 691.027 L1053.56 691.027 L1054.12 691.027 L1054.68 691.027 L1055.24 691.027 L1055.8 691.027 L1056.36 691.027 L1056.92 691.027 L1057.48 691.027 L1058.03 691.027 L1058.59 691.027 L1059.15 691.027 L1059.71 691.027 L1060.27 691.027 L1060.83 691.027 L1061.39 691.027 L1061.95 691.027 L1062.51 691.027 L1063.07 691.027 L1063.63 691.027 L1064.19 691.027 L1064.75 691.027 L1065.3 691.027 L1065.86 691.027 L1066.42 691.027 L1066.98 691.027 L1067.54 691.027 L1068.1 691.027 L1068.66 691.027 L1069.22 691.027 L1069.78 691.027 L1070.34 691.027 L1070.9 691.027 L1071.46 691.027 L1072.02 691.027 L1072.57 691.027 L1073.13 691.027 L1073.69 691.027 L1074.25 691.027 L1074.81 691.027 L1075.37 691.027 L1075.93 691.027 L1076.49 691.027 L1077.05 691.027 L1077.61 691.027 L1078.17 691.027 L1078.73 691.027 L1079.29 691.027 L1079.85 691.027 L1080.4 691.027 L1080.96 691.027 L1081.52 691.027 L1082.08 691.027 L1082.64 691.027 L1083.2 691.027 L1083.76 691.027 L1084.32 691.027 L1084.88 691.027 L1085.44 691.027 L1086 691.027 L1086.56 691.027 L1087.12 691.027 L1087.67 691.027 L1088.23 691.027 L1088.79 691.027 L1089.35 691.027 L1089.91 691.027 L1090.47 691.027 L1091.03 691.027 L1091.59 691.027 L1092.15 691.027 L1092.71 691.027 L1093.27 691.027 L1093.83 691.027 L1094.39 691.027 L1094.94 691.027 L1095.5 691.027 L1096.06 691.027 L1096.62 691.027 L1097.18 691.027 L1097.74 691.027 L1098.3 691.027 L1098.86 691.027 L1099.42 691.027 L1099.98 691.027 L1100.54 691.027 L1101.1 691.027 L1101.66 691.027 L1102.22 691.027 L1102.77 691.027 L1103.33 691.027 L1103.89 691.027 L1104.45 691.027 L1105.01 691.027 L1105.57 691.027 L1106.13 691.027 L1106.69 691.027 L1107.25 691.027 L1107.81 691.027 L1108.37 691.027 L1108.93 691.027 L1109.49 691.027 L1110.04 691.027 L1110.6 691.027 L1111.16 691.027 L1111.72 691.027 L1112.28 691.027 L1112.84 691.027 L1113.4 691.027 L1113.96 691.027 L1114.52 691.027 L1115.08 691.027 L1115.64 691.027 L1116.2 691.027 L1116.76 691.027 L1117.31 691.027 L1117.87 691.027 L1118.43 691.027 L1118.99 691.027 L1119.55 691.027 L1120.11 691.027 L1120.67 691.027 L1121.23 691.027 L1121.79 691.027 L1122.35 691.027 L1122.91 691.027 L1123.47 691.027 L1124.03 691.027 L1124.59 691.027 L1125.14 691.027 L1125.7 691.027 L1126.26 691.027 L1126.82 691.027 L1127.38 691.027 L1127.94 691.027 L1128.5 691.027 L1129.06 691.027 L1129.62 691.027 L1130.18 691.027 L1130.74 691.027 L1131.3 691.027 L1131.86 691.027 L1132.41 691.027 L1132.97 691.027 L1133.53 691.027 L1134.09 691.027 L1134.65 691.027 L1135.21 691.027 L1135.77 691.027 L1136.33 691.027 L1136.89 691.027 L1137.45 691.027 L1138.01 691.027 L1138.57 691.027 L1139.13 691.027 L1139.68 691.027 L1140.24 691.027 L1140.8 691.027 L1141.36 691.027 L1141.92 691.027 L1142.48 691.027 L1143.04 691.027 L1143.6 691.027 L1144.16 691.027 L1144.72 691.027 L1145.28 691.027 L1145.84 691.027 L1146.4 691.027 L1146.96 691.027 L1147.51 691.027 L1148.07 691.027 L1148.63 691.027 L1149.19 691.027 L1149.75 691.027 L1150.31 691.027 L1150.87 691.027 L1151.43 691.027 L1151.99 691.027 L1152.55 691.027 L1153.11 691.027 L1153.67 691.027 L1154.23 691.027 L1154.78 691.027 L1155.34 691.027 L1155.9 691.027 L1156.46 691.027 L1157.02 691.027 L1157.58 691.027 L1158.14 691.027 L1158.7 691.027 L1159.26 691.027 L1159.82 691.027 L1160.38 691.027 L1160.94 691.027 L1161.5 691.027 L1162.05 691.027 L1162.61 691.027 L1163.17 691.027 L1163.73 691.027 L1164.29 691.027 L1164.85 691.027 L1165.41 691.027 L1165.97 691.027 L1166.53 691.027 L1167.09 691.027 L1167.65 691.027 L1168.21 691.027 L1168.77 691.027 L1169.33 691.027 L1169.88 691.027 L1170.44 691.027 L1171 691.027 L1171.56 691.027 L1172.12 691.027 L1172.68 691.027 L1173.24 691.027 L1173.8 691.027 L1174.36 691.027 L1174.92 691.027 L1175.48 691.027 L1176.04 691.027 L1176.6 691.027 L1177.15 691.027 L1177.71 691.027 L1178.27 691.027 L1178.83 691.027 L1179.39 691.027 L1179.95 691.027 L1180.51 691.027 L1181.07 691.027 L1181.63 691.027 L1182.19 691.027 L1182.75 691.027 L1183.31 691.027 L1183.87 691.027 L1184.43 691.027 L1184.98 691.027 L1185.54 691.027 L1186.1 691.027 L1186.66 691.027 L1187.22 691.027 L1187.78 691.027 L1188.34 691.027 L1188.9 691.027 L1189.46 691.027 L1190.02 691.027 L1190.58 691.027 L1191.14 691.027 L1191.7 691.027 L1192.25 691.027 L1192.81 691.027 L1193.37 691.027 L1193.93 691.027 L1194.49 691.027 L1195.05 691.027 L1195.61 691.027 L1196.17 691.027 L1196.73 691.027 L1197.29 691.027 L1197.85 691.027 L1198.41 691.027 L1198.97 691.027 L1199.52 691.027 L1200.08 691.027 L1200.64 691.027 L1201.2 691.027 L1201.76 691.027 L1202.32 691.027 L1202.88 691.027 L1203.44 691.027 L1204 691.027 L1204.56 691.027 L1205.12 691.027 L1205.68 691.027 L1206.24 691.027 L1206.8 691.027 L1207.35 691.027 L1207.91 691.027 L1208.47 691.027 L1209.03 691.027 L1209.59 691.027 L1210.15 691.027 L1210.71 691.027 L1211.27 691.027 L1211.83 691.027 L1212.39 691.027 L1212.95 691.027 L1213.51 691.027 L1214.07 691.027 L1214.62 691.027 L1215.18 691.027 L1215.74 691.027 L1216.3 691.027 L1216.86 691.027 L1217.42 691.027 L1217.98 691.027 L1218.54 691.027 L1219.1 691.027 L1219.66 691.027 L1220.22 691.027 L1220.78 691.027 L1221.34 691.027 L1221.89 691.027 L1222.45 691.027 L1223.01 691.027 L1223.57 691.027 L1224.13 691.027 L1224.69 691.027 L1225.25 691.027 L1225.81 691.027 L1226.37 691.027 L1226.93 691.027 L1227.49 691.027 L1228.05 691.027 L1228.61 691.027 L1229.17 691.027 L1229.72 691.027 L1230.28 691.027 L1230.84 691.027 L1231.4 691.027 L1231.96 691.027 L1232.52 691.027 L1233.08 691.027 L1233.64 691.027 L1234.2 691.027 L1234.76 691.027 L1235.32 691.027 L1235.88 691.027 L1236.44 691.027 L1236.99 691.027 L1237.55 691.027 L1238.11 691.027 L1238.67 691.027 L1239.23 691.027 L1239.79 691.027 L1240.35 691.027 L1240.91 691.027 L1241.47 691.027 L1242.03 691.027 L1242.59 691.027 L1243.15 691.027 L1243.71 691.027 L1244.26 691.027 L1244.82 691.027 L1245.38 691.027 L1245.94 691.027 L1246.5 691.027 L1247.06 691.027 L1247.62 691.027 L1248.18 691.027 L1248.74 691.027 L1249.3 691.027 L1249.86 691.027 L1250.42 691.027 L1250.98 691.027 L1251.54 691.027 L1252.09 691.027 L1252.65 691.027 L1253.21 691.027 L1253.77 691.027 L1254.33 691.027 L1254.89 691.027 L1255.45 691.027 L1256.01 691.027 L1256.57 691.027 L1257.13 691.027 L1257.69 691.027 L1258.25 691.027 L1258.81 691.027 L1259.36 691.027 L1259.92 691.027 L1260.48 691.027 L1261.04 691.027 L1261.6 691.027 L1262.16 691.027 L1262.72 691.027 L1263.28 691.027 L1263.84 691.027 L1264.4 691.027 L1264.96 691.027 L1265.52 691.027 L1266.08 691.027 L1266.63 691.027 L1267.19 691.027 L1267.75 691.027 L1268.31 691.027 L1268.87 691.027 L1269.43 691.027 L1269.99 691.027 L1270.55 691.027 L1271.11 691.027 L1271.67 691.027 L1272.23 691.027 L1272.79 691.027 L1273.35 691.027 L1273.91 691.027 L1274.46 691.027 L1275.02 691.027 L1275.58 691.027 L1276.14 691.027 L1276.7 691.027 L1277.26 691.027 L1277.82 691.027 L1278.38 691.027 L1278.94 691.027 L1279.5 691.027 L1280.06 691.027 L1280.62 691.027 L1281.18 691.027 L1281.73 691.027 L1282.29 691.027 L1282.85 691.027 L1283.41 691.027 L1283.97 691.027 L1284.53 691.027 L1285.09 691.027 L1285.65 691.027 L1286.21 691.027 L1286.77 691.027 L1287.33 691.027 L1287.89 691.027 L1288.45 691.027 L1289 691.027 L1289.56 691.027 L1290.12 691.027 L1290.68 691.027 L1291.24 691.027 L1291.8 691.027 L1292.36 691.027 L1292.92 691.027 L1293.48 691.027 L1294.04 691.027 L1294.6 691.027 L1295.16 691.027 L1295.72 691.027 L1296.28 691.027 L1296.83 691.027 L1297.39 691.027 L1297.95 691.027 L1298.51 691.027 L1299.07 691.027 L1299.63 691.027 L1300.19 691.027 L1300.75 691.027 L1301.31 691.027 L1301.87 691.027 L1302.43 691.027 L1302.99 691.027 L1303.55 691.027 L1304.1 691.027 L1304.66 691.027 L1305.22 691.027 L1305.78 691.027 L1306.34 691.027 L1306.9 691.027 L1307.46 691.027 L1308.02 691.027 L1308.58 691.027 L1309.14 691.027 L1309.7 691.027 L1310.26 691.027 L1310.82 691.027 L1311.38 691.027 L1311.93 691.027 L1312.49 691.027 L1313.05 691.027 L1313.61 691.027 L1314.17 691.027 L1314.73 691.027 L1315.29 691.027 L1315.85 691.027 L1316.41 691.027 L1316.97 691.027 L1317.53 691.027 L1318.09 691.027 L1318.65 691.027 L1319.2 691.027 L1319.76 691.027 L1320.32 691.027 L1320.88 691.027 L1321.44 691.027 L1322 691.027 L1322.56 691.027 L1323.12 691.027 L1323.68 691.027 L1324.24 691.027 L1324.8 691.027 L1325.36 691.027 L1325.92 691.027 L1326.47 691.027 L1327.03 691.027 L1327.59 691.027 L1328.15 691.027 L1328.71 691.027 L1329.27 691.027 L1329.83 691.027 L1330.39 691.027 L1330.95 691.027 L1331.51 691.027 L1332.07 691.027 L1332.63 691.027 L1333.19 691.027 L1333.75 691.027 L1334.3 691.027 L1334.86 691.027 L1335.42 691.027 L1335.98 691.027 L1336.54 691.027 L1337.1 691.027 L1337.66 691.027 L1338.22 691.027 L1338.78 691.027 L1339.34 691.027 L1339.9 691.027 L1340.46 691.027 L1341.02 691.027 L1341.57 691.027 L1342.13 691.027 L1342.69 691.027 L1343.25 691.027 L1343.81 691.027 L1344.37 691.027 L1344.93 691.027 L1345.49 691.027 L1346.05 691.027 L1346.61 691.027 L1347.17 691.027 L1347.73 691.027 L1348.29 691.027 L1348.84 691.027 L1349.4 691.027 L1349.96 691.027 L1350.52 691.027 L1351.08 691.027 L1351.64 691.027 L1352.2 691.027 L1352.76 691.027 L1353.32 691.027 L1353.88 691.027 L1354.44 691.027 L1355 691.027 L1355.56 691.027 L1356.12 691.027 L1356.67 691.027 L1357.23 691.027 L1357.79 691.027 L1358.35 691.027 L1358.91 691.027 L1359.47 691.027 L1360.03 691.027 L1360.59 691.027 L1361.15 691.027 L1361.71 691.027 L1362.27 691.027 L1362.83 691.027 L1363.39 691.027 L1363.94 691.027 L1364.5 691.027 L1365.06 691.027 L1365.62 691.027 L1366.18 691.027 L1366.74 691.027 L1367.3 691.027 L1367.86 691.027 L1368.42 691.027 L1368.98 691.027 L1369.54 691.027 L1370.1 691.027 L1370.66 691.027 L1371.21 691.027 L1371.77 691.027 L1372.33 691.027 L1372.89 691.027 L1373.45 691.027 L1374.01 691.027 L1374.57 691.027 L1375.13 691.027 L1375.69 691.027 L1376.25 691.027 L1376.81 691.027 L1377.37 691.027 L1377.93 691.027 L1378.49 691.027 L1379.04 691.027 L1379.6 691.027 L1380.16 691.027 L1380.72 691.027 L1381.28 691.027 L1381.84 691.027 L1382.4 691.027 L1382.96 691.027 L1383.52 691.027 L1384.08 691.027 L1384.64 691.027 L1385.2 691.027 L1385.76 691.027 L1386.31 691.027 L1386.87 691.027 L1387.43 691.027 L1387.99 691.027 L1388.55 691.027 L1389.11 691.027 L1389.67 691.027 L1390.23 691.027 L1390.79 691.027 L1391.35 691.027 L1391.91 691.027 L1392.47 691.027 L1393.03 691.027 L1393.58 691.027 L1394.14 691.027 L1394.7 691.027 L1395.26 691.027 L1395.82 691.027 L1396.38 691.027 L1396.94 691.027 L1397.5 691.027 L1398.06 691.027 L1398.62 691.027 L1399.18 691.027 L1399.74 691.027 L1400.3 691.027 L1400.86 691.027 L1401.41 691.027 L1401.97 691.027 L1402.53 691.027 L1403.09 691.027 L1403.65 691.027 L1404.21 691.027 L1404.77 691.027 L1405.33 691.027 L1405.89 691.027 L1406.45 691.027 L1407.01 691.027 L1407.57 691.027 L1408.13 691.027 L1408.68 691.027 L1409.24 691.027 L1409.8 691.027 L1410.36 691.027 L1410.92 691.027 L1411.48 691.027 L1412.04 691.027 L1412.6 691.027 L1413.16 691.027 L1413.72 691.027 L1414.28 691.027 L1414.84 691.027 L1415.4 691.027 L1415.95 691.027 L1416.51 691.027 L1417.07 691.027 L1417.63 691.027 L1418.19 691.027 L1418.75 691.027 L1419.31 691.027 L1419.87 691.027 L1420.43 691.027 L1420.99 691.027 L1421.55 691.027 L1422.11 691.027 L1422.67 691.027 L1423.23 691.027 L1423.78 691.027 L1424.34 691.027 L1424.9 691.027 L1425.46 691.027 L1426.02 691.027 L1426.58 691.027 L1427.14 691.027 L1427.7 691.027 L1428.26 691.027 L1428.82 691.027 L1429.38 691.027 L1429.94 691.027 L1430.5 691.027 L1431.05 691.027 L1431.61 691.027 L1432.17 691.027 L1432.73 691.027 L1433.29 691.027 L1433.85 691.027 L1434.41 691.027 L1434.97 691.027 L1435.53 691.027 L1436.09 691.027 L1436.65 691.027 L1437.21 691.027 L1437.77 691.027 L1438.33 691.027 L1438.88 691.027 L1439.44 691.027 L1440 691.027 L1440.56 691.027 L1441.12 691.027 L1441.68 691.027 L1442.24 691.027 L1442.8 691.027 L1443.36 691.027 L1443.92 691.027 L1444.48 691.027 L1445.04 691.027 L1445.6 691.027 L1446.15 691.027 L1446.71 691.027 L1447.27 691.027 L1447.83 691.027 L1448.39 691.027 L1448.95 691.027 L1449.51 691.027 L1450.07 691.027 L1450.63 691.027 L1451.19 691.027 L1451.75 691.027 L1452.31 691.027 L1452.87 691.027 L1453.42 691.027 L1453.98 691.027 L1454.54 691.027 L1455.1 691.027 L1455.66 691.027 L1456.22 691.027 L1456.78 691.027 L1457.34 691.027 L1457.9 691.027 L1458.46 691.027 L1459.02 691.027 L1459.58 691.027 L1460.14 691.027 L1460.7 691.027 L1461.25 691.027 L1461.81 691.027 L1462.37 691.027 L1462.93 691.027 L1463.49 691.027 L1464.05 691.027 L1464.61 691.027 L1465.17 691.027 L1465.73 691.027 L1466.29 691.027 L1466.85 691.027 L1467.41 691.027 L1467.97 691.027 L1468.52 691.027 L1469.08 691.027 L1469.64 691.027 L1470.2 691.027 L1470.76 691.027 L1471.32 691.027 L1471.88 691.027 L1472.44 691.027 L1473 691.027 L1473.56 691.027 L1474.12 691.027 L1474.68 691.027 L1475.24 691.027 L1475.79 691.027 L1476.35 691.027 L1476.91 691.027 L1477.47 691.027 L1478.03 691.027 L1478.59 691.027 L1479.15 691.027 L1479.71 691.027 L1480.27 691.027 L1480.83 691.027 L1481.39 691.027 L1481.95 691.027 L1482.51 691.027 L1483.07 691.027 L1483.62 691.027 L1484.18 691.027 L1484.74 691.027 L1485.3 691.027 L1485.86 691.027 L1486.42 691.027 L1486.98 691.027 L1487.54 691.027 L1488.1 691.027 L1488.66 691.027 L1489.22 691.027 L1489.78 691.027 L1490.34 691.027 L1490.89 691.027 L1491.45 691.027 L1492.01 691.027 L1492.57 691.027 L1493.13 691.027 L1493.69 691.027 L1494.25 691.027 L1494.81 691.027 L1495.37 691.027 L1495.93 691.027 L1496.49 691.027 L1497.05 691.027 L1497.61 691.027 L1498.16 691.027 L1498.72 691.027 L1499.28 691.027 L1499.84 691.027 L1500.4 691.027 L1500.96 691.027 L1501.52 691.027 L1502.08 691.027 L1502.64 691.027 L1503.2 691.027 L1503.76 691.027 L1504.32 691.027 L1504.88 691.027 L1505.44 691.027 L1505.99 691.027 L1506.55 691.027 L1507.11 691.027 L1507.67 691.027 L1508.23 691.027 L1508.79 691.027 L1509.35 691.027 L1509.91 691.027 L1510.47 691.027 L1511.03 691.027 L1511.59 691.027 L1512.15 691.027 L1512.71 691.027 L1513.26 691.027 L1513.82 691.027 L1514.38 691.027 L1514.94 691.027 L1515.5 691.027 L1516.06 691.027 L1516.62 691.027 L1517.18 691.027 L1517.74 691.027 L1518.3 691.027 L1518.86 691.027 L1519.42 691.027 L1519.98 691.027 L1520.53 691.027 L1521.09 691.027 L1521.65 691.027 L1522.21 691.027 L1522.77 691.027 L1523.33 691.027 L1523.89 691.027 L1524.45 691.027 L1525.01 691.027 L1525.57 691.027 L1526.13 691.027 L1526.69 691.027 L1527.25 691.027 L1527.81 691.027 L1528.36 691.027 L1528.92 691.027 L1529.48 691.027 L1530.04 691.027 L1530.6 691.027 L1531.16 691.027 L1531.72 691.027 L1532.28 691.027 L1532.84 691.027 L1533.4 691.027 L1533.96 691.027 L1534.52 691.027 L1535.08 691.027 L1535.63 691.027 L1536.19 691.027 L1536.75 691.027 L1537.31 691.027 L1537.87 691.027 L1538.43 691.027 L1538.99 691.027 L1539.55 691.027 L1540.11 691.027 L1540.67 691.027 L1541.23 691.027 L1541.79 691.027 L1542.35 691.027 L1542.9 691.027 L1543.46 691.027 L1544.02 691.027 L1544.58 691.027 L1545.14 691.027 L1545.7 691.027 L1546.26 691.027 L1546.82 691.027 L1547.38 691.027 L1547.94 691.027 L1548.5 691.027 L1549.06 691.027 L1549.62 691.027 L1550.18 691.027 L1550.73 691.027 L1551.29 691.027 L1551.85 691.027 L1552.41 691.027 L1552.97 691.027 L1553.53 691.027 L1554.09 691.027 L1554.65 691.027 L1555.21 691.027 L1555.77 691.027 L1556.33 691.027 L1556.89 691.027 L1557.45 691.027 L1558 691.027 L1558.56 691.027 L1559.12 691.027 L1559.68 691.027 L1560.24 691.027 L1560.8 691.027 L1561.36 691.027 L1561.92 691.027 L1562.48 691.027 L1563.04 691.027 L1563.6 691.027 L1564.16 691.027 L1564.72 691.027 L1565.28 691.027 L1565.83 691.027 L1566.39 691.027 L1566.95 691.027 L1567.51 691.027 L1568.07 691.027 L1568.63 691.027 L1569.19 691.027 L1569.75 691.027 L1570.31 691.027 L1570.87 691.027 L1571.43 691.027 L1571.99 691.027 L1572.55 691.027 L1573.1 691.027 L1573.66 691.027 L1574.22 691.027 L1574.78 691.027 L1575.34 691.027 L1575.9 691.027 L1576.46 691.027 L1577.02 691.027 L1577.58 691.027 L1578.14 691.027 L1578.7 691.027 L1579.26 691.027 L1579.82 691.027 L1580.37 691.027 L1580.93 691.027 L1581.49 691.027 L1582.05 691.027 L1582.61 691.027 L1583.17 691.027 L1583.73 691.027 L1584.29 691.027 L1584.85 691.027 L1585.41 691.027 L1585.97 691.027 L1586.53 691.027 L1587.09 691.027 L1587.65 691.027 L1588.2 691.027 L1588.76 691.027 L1589.32 691.027 L1589.88 691.027 L1590.44 691.027 L1591 691.027 L1591.56 691.027 L1592.12 691.027 L1592.68 691.027 L1593.24 691.027 L1593.8 691.027 L1594.36 691.027 L1594.92 691.027 L1595.47 691.027 L1596.03 691.027 L1596.59 691.027 L1597.15 691.027 L1597.71 691.027 L1598.27 691.027 L1598.83 691.027 L1599.39 691.027 L1599.95 691.027 L1600.51 691.027 L1601.07 691.027 L1601.63 691.027 L1602.19 691.027 L1602.74 691.027 L1603.3 691.027 L1603.86 691.027 L1604.42 691.027 L1604.98 691.027 L1605.54 691.027 L1606.1 691.027 L1606.66 691.027 L1607.22 691.027 L1607.78 691.027 L1608.34 691.027 L1608.9 691.027 L1609.46 691.027 L1610.02 691.027 L1610.57 691.027 L1611.13 691.027 L1611.69 691.027 L1612.25 691.027 L1612.81 691.027 L1613.37 691.027 L1613.93 691.027 L1614.49 691.027 L1615.05 691.027 L1615.61 691.027 L1616.17 691.027 L1616.73 691.027 L1617.29 691.027 L1617.84 691.027 L1618.4 691.027 L1618.96 691.027 L1619.52 691.027 L1620.08 691.027 L1620.64 691.027 L1621.2 691.027 L1621.76 691.027 L1622.32 691.027 L1622.88 691.027 L1623.44 691.027 L1624 691.027 L1624.56 691.027 L1625.11 691.027 L1625.67 691.027 L1626.23 691.027 L1626.79 691.027 L1627.35 691.027 L1627.91 691.027 L1628.47 691.027 L1629.03 691.027 L1629.59 691.027 L1630.15 691.027 L1630.71 691.027 L1631.27 691.027 L1631.83 691.027 L1632.39 691.027 L1632.94 691.027 L1633.5 691.027 L1634.06 691.027 L1634.62 691.027 L1635.18 691.027 L1635.74 691.027 L1636.3 691.027 L1636.86 691.027 L1637.42 691.027 L1637.98 691.027 L1638.54 691.027 L1639.1 691.027 L1639.66 691.027 L1640.21 691.027 L1640.77 691.027 L1641.33 691.027 L1641.89 691.027 L1642.45 691.027 L1643.01 691.027 L1643.57 691.027 L1644.13 691.027 L1644.69 691.027 L1645.25 691.027 L1645.81 691.027 L1646.37 691.027 L1646.93 691.027 L1647.48 691.027 L1648.04 691.027 L1648.6 691.027 L1649.16 691.027 L1649.72 691.027 L1650.28 691.027 L1650.84 691.027 L1651.4 691.027 L1651.96 691.027 L1652.52 691.027 L1653.08 691.027 L1653.64 691.027 L1654.2 691.027 L1654.76 691.027 L1655.31 691.027 L1655.87 691.027 L1656.43 691.027 L1656.99 691.027 L1657.55 691.027 L1658.11 691.027 L1658.67 691.027 L1659.23 691.027 L1659.79 691.027 L1660.35 691.027 L1660.91 691.027 L1661.47 691.027 L1662.03 691.027 L1662.58 691.027 L1663.14 691.027 L1663.7 691.027 L1664.26 691.027 L1664.82 691.027 L1665.38 691.027 L1665.94 691.027 L1666.5 691.027 L1667.06 691.027 L1667.62 691.027 L1668.18 691.027 L1668.74 691.027 L1669.3 691.027 L1669.85 691.027 L1670.41 691.027 L1670.97 691.027 L1671.53 691.027 L1672.09 691.027 L1672.65 691.027 L1673.21 691.027 L1673.77 691.027 L1674.33 691.027 L1674.89 691.027 L1675.45 691.027 L1676.01 691.027 L1676.57 691.027 L1677.13 691.027 L1677.68 691.027 L1678.24 691.027 L1678.8 691.027 L1679.36 691.027 L1679.92 691.027 L1680.48 691.027 L1681.04 691.027 L1681.6 691.027 L1682.16 691.027 L1682.72 691.027 L1683.28 691.027 L1683.84 691.027 L1684.4 691.027 L1684.95 691.027 L1685.51 691.027 L1686.07 691.027 L1686.63 691.027 L1687.19 691.027 L1687.75 691.027 L1688.31 691.027 L1688.87 691.027 L1689.43 691.027 L1689.99 691.027 L1690.55 691.027 L1691.11 691.027 L1691.67 691.027 L1692.23 691.027 L1692.78 691.027 L1693.34 691.027 L1693.9 691.027 L1694.46 691.027 L1695.02 691.027 L1695.58 691.027 L1696.14 691.027 L1696.7 691.027 L1697.26 691.027 L1697.82 691.027 L1698.38 691.027 L1698.94 691.027 L1699.5 691.027 L1700.05 691.027 L1700.61 691.027 L1701.17 691.027 L1701.73 691.027 L1702.29 691.027 L1702.85 691.027 L1703.41 691.027 L1703.97 691.027 L1704.53 691.027 L1705.09 691.027 L1705.65 691.027 L1706.21 691.027 L1706.77 691.027 L1707.32 691.027 L1707.88 691.027 L1708.44 691.027 L1709 691.027 L1709.56 691.027 L1710.12 691.027 L1710.68 691.027 L1711.24 691.027 L1711.8 691.027 L1712.36 691.027 L1712.92 691.027 L1713.48 691.027 L1714.04 691.027 L1714.6 691.027 L1715.15 691.027 L1715.71 691.027 L1716.27 691.027 L1716.83 691.027 L1717.39 691.027 L1717.95 691.027 L1718.51 691.027 L1719.07 691.027 L1719.63 691.027 L1720.19 691.027 L1720.75 691.027 L1721.31 691.027 L1721.87 691.027 L1722.42 691.027 L1722.98 691.027 L1723.54 691.027 L1724.1 691.027 L1724.66 691.027 L1725.22 691.027 L1725.78 691.027 L1726.34 691.027 L1726.9 691.027 L1727.46 691.027 L1728.02 691.027 L1728.58 691.027 L1729.14 691.027 L1729.69 691.027 L1730.25 691.027 L1730.81 691.027 L1731.37 691.027 L1731.93 691.027 L1732.49 691.027 L1733.05 691.027 L1733.61 691.027 L1734.17 691.027 L1734.73 691.027 L1735.29 691.027 L1735.85 691.027 L1736.41 691.027 L1736.97 691.027 L1737.52 691.027 L1738.08 691.027 L1738.64 691.027 L1739.2 691.027 L1739.76 691.027 L1740.32 691.027 L1740.88 691.027 L1741.44 691.027 L1742 691.027 L1742.56 691.027 L1743.12 691.027 L1743.68 691.027 L1744.24 691.027 L1744.79 691.027 L1745.35 691.027 L1745.91 691.027 L1746.47 691.027 L1747.03 691.027 L1747.59 691.027 L1748.15 691.027 L1748.71 691.027 L1749.27 691.027 L1749.83 691.027 L1750.39 691.027 L1750.95 691.027 L1751.51 691.027 L1752.06 691.027 L1752.62 691.027 L1753.18 691.027 L1753.74 691.027 L1754.3 691.027 L1754.86 691.027 L1755.42 691.027 L1755.98 691.027 L1756.54 691.027 L1757.1 691.027 L1757.66 691.027 L1758.22 691.027 L1758.78 691.027 L1759.34 691.027 L1759.89 691.027 L1760.45 691.027 L1761.01 691.027 L1761.57 691.027 L1762.13 691.027 L1762.69 691.027 L1763.25 691.027 L1763.81 691.027 L1764.37 691.027 L1764.93 691.027 L1765.49 691.027 L1766.05 691.027 L1766.61 691.027 L1767.16 691.027 L1767.72 691.027 L1768.28 691.027 L1768.84 691.027 L1769.4 691.027 L1769.96 691.027 L1770.52 691.027 L1771.08 691.027 L1771.64 691.027 L1772.2 691.027 L1772.76 691.027 L1773.32 691.027 L1773.88 691.027 L1774.43 691.027 L1774.99 691.027 L1775.55 691.027 L1776.11 691.027 L1776.67 691.027 L1777.23 691.027 L1777.79 691.027 L1778.35 691.027 L1778.91 691.027 L1779.47 691.027 L1780.03 691.027 L1780.59 691.027 L1781.15 691.027 L1781.71 691.027 L1782.26 691.027 L1782.82 691.027 L1783.38 691.027 L1783.94 691.027 L1784.5 691.027 L1785.06 691.027 L1785.62 691.027 L1786.18 691.027 L1786.74 691.027 L1787.3 691.027 L1787.86 691.027 L1788.42 691.027 L1788.98 691.027 L1789.53 691.027 L1790.09 691.027 L1790.65 691.027 L1791.21 691.027 L1791.77 691.027 L1792.33 691.027 L1792.89 691.027 L1793.45 691.027 L1794.01 691.027 L1794.57 691.027 L1795.13 691.027 L1795.69 691.027 L1796.25 691.027 L1796.8 691.027 L1797.36 691.027 L1797.92 691.027 L1798.48 691.027 L1799.04 691.027 L1799.6 691.027 L1800.16 691.027 L1800.72 691.027 L1801.28 691.027 L1801.84 691.027 L1802.4 691.027 L1802.96 691.027 L1803.52 691.027 L1804.08 691.027 L1804.63 691.027 L1805.19 691.027 L1805.75 691.027 L1806.31 691.027 L1806.87 691.027 L1807.43 691.027 L1807.99 691.027 L1808.55 691.027 L1809.11 691.027 L1809.67 691.027 L1810.23 691.027 L1810.79 691.027 L1811.35 691.027 L1811.9 691.027 L1812.46 691.027 L1813.02 691.027 L1813.58 691.027 L1814.14 691.027 L1814.7 691.027 L1815.26 691.027 L1815.82 691.027 L1816.38 691.027 L1816.94 691.027 L1817.5 691.027 L1818.06 691.027 L1818.62 691.027 L1819.18 691.027 L1819.73 691.027 L1820.29 691.027 L1820.85 691.027 L1821.41 691.027 L1821.97 691.027 L1822.53 691.027 L1823.09 691.027 L1823.65 691.027 L1824.21 691.027 L1824.77 691.027 L1825.33 691.027 L1825.89 691.027 L1826.45 691.027 L1827 691.027 L1827.56 691.027 L1828.12 691.027 L1828.68 691.027 L1829.24 691.027 L1829.8 691.027 L1830.36 691.027 L1830.92 691.027 L1831.48 691.027 L1832.04 691.027 L1832.6 691.027 L1833.16 691.027 L1833.72 691.027 L1834.27 691.027 L1834.83 691.027 L1835.39 691.027 L1835.95 691.027 L1836.51 691.027 L1837.07 691.027 L1837.63 691.027 L1838.19 691.027 L1838.19 682.7 L1837.63 682.7 L1837.07 682.7 L1836.51 682.7 L1835.95 682.7 L1835.39 682.7 L1834.83 682.7 L1834.27 682.7 L1833.72 682.7 L1833.16 682.7 L1832.6 682.7 L1832.04 682.7 L1831.48 682.7 L1830.92 682.7 L1830.36 682.7 L1829.8 682.7 L1829.24 682.7 L1828.68 682.7 L1828.12 682.7 L1827.56 682.7 L1827 682.7 L1826.45 682.7 L1825.89 682.7 L1825.33 682.7 L1824.77 682.7 L1824.21 682.7 L1823.65 682.7 L1823.09 682.7 L1822.53 682.7 L1821.97 682.7 L1821.41 682.7 L1820.85 682.7 L1820.29 682.7 L1819.73 682.7 L1819.18 682.7 L1818.62 682.7 L1818.06 682.7 L1817.5 682.7 L1816.94 682.7 L1816.38 682.7 L1815.82 682.7 L1815.26 682.7 L1814.7 682.7 L1814.14 682.7 L1813.58 682.7 L1813.02 682.7 L1812.46 682.7 L1811.9 682.7 L1811.35 682.7 L1810.79 682.7 L1810.23 682.7 L1809.67 682.7 L1809.11 682.7 L1808.55 682.7 L1807.99 682.7 L1807.43 682.7 L1806.87 682.7 L1806.31 682.7 L1805.75 682.7 L1805.19 682.7 L1804.63 682.7 L1804.08 682.7 L1803.52 682.7 L1802.96 682.7 L1802.4 682.7 L1801.84 682.7 L1801.28 682.7 L1800.72 682.7 L1800.16 682.7 L1799.6 682.7 L1799.04 682.7 L1798.48 682.7 L1797.92 682.7 L1797.36 682.7 L1796.8 682.7 L1796.25 682.7 L1795.69 682.7 L1795.13 682.7 L1794.57 682.7 L1794.01 682.7 L1793.45 682.7 L1792.89 682.7 L1792.33 682.7 L1791.77 682.7 L1791.21 682.7 L1790.65 682.7 L1790.09 682.7 L1789.53 682.7 L1788.98 682.7 L1788.42 682.7 L1787.86 682.7 L1787.3 682.7 L1786.74 682.7 L1786.18 682.7 L1785.62 682.7 L1785.06 682.7 L1784.5 682.7 L1783.94 682.7 L1783.38 682.7 L1782.82 682.7 L1782.26 682.7 L1781.71 682.7 L1781.15 682.7 L1780.59 682.7 L1780.03 682.7 L1779.47 682.7 L1778.91 682.7 L1778.35 682.7 L1777.79 682.7 L1777.23 682.7 L1776.67 682.7 L1776.11 682.7 L1775.55 682.7 L1774.99 682.7 L1774.43 682.7 L1773.88 682.7 L1773.32 682.7 L1772.76 682.7 L1772.2 682.7 L1771.64 682.7 L1771.08 682.7 L1770.52 682.7 L1769.96 682.7 L1769.4 682.7 L1768.84 682.7 L1768.28 682.7 L1767.72 682.7 L1767.16 682.7 L1766.61 682.7 L1766.05 682.7 L1765.49 682.7 L1764.93 682.7 L1764.37 682.7 L1763.81 682.7 L1763.25 682.7 L1762.69 682.7 L1762.13 682.7 L1761.57 682.7 L1761.01 682.7 L1760.45 682.7 L1759.89 682.7 L1759.34 682.7 L1758.78 682.7 L1758.22 682.7 L1757.66 682.7 L1757.1 682.7 L1756.54 682.7 L1755.98 682.7 L1755.42 682.7 L1754.86 682.7 L1754.3 682.7 L1753.74 682.7 L1753.18 682.7 L1752.62 682.7 L1752.06 682.7 L1751.51 682.7 L1750.95 682.7 L1750.39 682.7 L1749.83 682.7 L1749.27 682.7 L1748.71 682.7 L1748.15 682.7 L1747.59 682.7 L1747.03 682.7 L1746.47 682.7 L1745.91 682.7 L1745.35 682.7 L1744.79 682.7 L1744.24 682.7 L1743.68 682.7 L1743.12 682.7 L1742.56 682.7 L1742 682.7 L1741.44 682.7 L1740.88 682.7 L1740.32 682.7 L1739.76 682.7 L1739.2 682.7 L1738.64 682.7 L1738.08 682.7 L1737.52 682.7 L1736.97 682.7 L1736.41 682.7 L1735.85 682.7 L1735.29 682.7 L1734.73 682.7 L1734.17 682.7 L1733.61 682.7 L1733.05 682.7 L1732.49 682.7 L1731.93 682.7 L1731.37 682.7 L1730.81 682.7 L1730.25 682.7 L1729.69 682.7 L1729.14 682.7 L1728.58 682.7 L1728.02 682.7 L1727.46 682.7 L1726.9 682.7 L1726.34 682.7 L1725.78 682.7 L1725.22 682.7 L1724.66 682.7 L1724.1 682.7 L1723.54 682.7 L1722.98 682.7 L1722.42 682.7 L1721.87 682.7 L1721.31 682.7 L1720.75 682.7 L1720.19 682.7 L1719.63 682.7 L1719.07 682.7 L1718.51 682.7 L1717.95 682.7 L1717.39 682.7 L1716.83 682.7 L1716.27 682.7 L1715.71 682.7 L1715.15 682.7 L1714.6 682.7 L1714.04 682.7 L1713.48 682.7 L1712.92 682.7 L1712.36 682.7 L1711.8 682.7 L1711.24 682.7 L1710.68 682.7 L1710.12 682.7 L1709.56 682.7 L1709 682.7 L1708.44 682.7 L1707.88 682.7 L1707.32 682.7 L1706.77 682.7 L1706.21 682.7 L1705.65 682.7 L1705.09 682.7 L1704.53 682.7 L1703.97 682.7 L1703.41 682.7 L1702.85 682.7 L1702.29 682.7 L1701.73 682.7 L1701.17 682.7 L1700.61 682.7 L1700.05 682.7 L1699.5 682.7 L1698.94 682.7 L1698.38 682.7 L1697.82 682.7 L1697.26 682.7 L1696.7 682.7 L1696.14 682.7 L1695.58 682.7 L1695.02 682.7 L1694.46 682.7 L1693.9 682.7 L1693.34 682.7 L1692.78 682.7 L1692.23 682.7 L1691.67 682.7 L1691.11 682.7 L1690.55 682.7 L1689.99 682.7 L1689.43 682.7 L1688.87 682.7 L1688.31 682.7 L1687.75 682.7 L1687.19 682.7 L1686.63 682.7 L1686.07 682.7 L1685.51 682.7 L1684.95 682.7 L1684.4 682.7 L1683.84 682.7 L1683.28 682.7 L1682.72 682.7 L1682.16 682.7 L1681.6 682.7 L1681.04 682.7 L1680.48 682.7 L1679.92 682.7 L1679.36 682.7 L1678.8 682.7 L1678.24 682.7 L1677.68 682.7 L1677.13 682.7 L1676.57 682.7 L1676.01 682.7 L1675.45 682.7 L1674.89 682.7 L1674.33 682.7 L1673.77 682.7 L1673.21 682.7 L1672.65 682.7 L1672.09 682.7 L1671.53 682.7 L1670.97 682.7 L1670.41 682.7 L1669.85 682.7 L1669.3 682.7 L1668.74 682.7 L1668.18 682.7 L1667.62 682.7 L1667.06 682.7 L1666.5 682.7 L1665.94 682.7 L1665.38 682.7 L1664.82 682.7 L1664.26 682.7 L1663.7 682.7 L1663.14 682.7 L1662.58 682.7 L1662.03 682.7 L1661.47 682.7 L1660.91 682.7 L1660.35 682.7 L1659.79 682.7 L1659.23 682.7 L1658.67 682.7 L1658.11 682.7 L1657.55 682.7 L1656.99 682.7 L1656.43 682.7 L1655.87 682.7 L1655.31 682.7 L1654.76 682.7 L1654.2 682.7 L1653.64 682.7 L1653.08 682.7 L1652.52 682.7 L1651.96 682.7 L1651.4 682.7 L1650.84 682.7 L1650.28 682.7 L1649.72 682.7 L1649.16 682.7 L1648.6 682.7 L1648.04 682.7 L1647.48 682.7 L1646.93 682.7 L1646.37 682.7 L1645.81 682.7 L1645.25 682.7 L1644.69 682.7 L1644.13 682.7 L1643.57 682.7 L1643.01 682.7 L1642.45 682.7 L1641.89 682.7 L1641.33 682.7 L1640.77 682.7 L1640.21 682.7 L1639.66 682.7 L1639.1 682.7 L1638.54 682.7 L1637.98 682.7 L1637.42 682.7 L1636.86 682.7 L1636.3 682.7 L1635.74 682.7 L1635.18 682.7 L1634.62 682.7 L1634.06 682.7 L1633.5 682.7 L1632.94 682.7 L1632.39 682.7 L1631.83 682.7 L1631.27 682.7 L1630.71 682.7 L1630.15 682.7 L1629.59 682.7 L1629.03 682.7 L1628.47 682.7 L1627.91 682.7 L1627.35 682.7 L1626.79 682.7 L1626.23 682.7 L1625.67 682.7 L1625.11 682.7 L1624.56 682.7 L1624 682.7 L1623.44 682.7 L1622.88 682.7 L1622.32 682.7 L1621.76 682.7 L1621.2 682.7 L1620.64 682.7 L1620.08 682.7 L1619.52 682.7 L1618.96 682.7 L1618.4 682.7 L1617.84 682.7 L1617.29 682.7 L1616.73 682.7 L1616.17 682.7 L1615.61 682.7 L1615.05 682.7 L1614.49 682.7 L1613.93 682.7 L1613.37 682.7 L1612.81 682.7 L1612.25 682.7 L1611.69 682.7 L1611.13 682.7 L1610.57 682.7 L1610.02 682.7 L1609.46 682.7 L1608.9 682.7 L1608.34 682.7 L1607.78 682.7 L1607.22 682.7 L1606.66 682.7 L1606.1 682.7 L1605.54 682.7 L1604.98 682.7 L1604.42 682.7 L1603.86 682.7 L1603.3 682.7 L1602.74 682.7 L1602.19 682.7 L1601.63 682.7 L1601.07 682.7 L1600.51 682.7 L1599.95 682.7 L1599.39 682.7 L1598.83 682.7 L1598.27 682.7 L1597.71 682.7 L1597.15 682.7 L1596.59 682.7 L1596.03 682.7 L1595.47 682.7 L1594.92 682.7 L1594.36 682.7 L1593.8 682.7 L1593.24 682.7 L1592.68 682.7 L1592.12 682.7 L1591.56 682.7 L1591 682.7 L1590.44 682.7 L1589.88 682.7 L1589.32 682.7 L1588.76 682.7 L1588.2 682.7 L1587.65 682.7 L1587.09 682.7 L1586.53 682.7 L1585.97 682.7 L1585.41 682.7 L1584.85 682.7 L1584.29 682.7 L1583.73 682.7 L1583.17 682.7 L1582.61 682.7 L1582.05 682.7 L1581.49 682.7 L1580.93 682.7 L1580.37 682.7 L1579.82 682.7 L1579.26 682.7 L1578.7 682.7 L1578.14 682.7 L1577.58 682.7 L1577.02 682.7 L1576.46 682.7 L1575.9 682.7 L1575.34 682.7 L1574.78 682.7 L1574.22 682.7 L1573.66 682.7 L1573.1 682.7 L1572.55 682.7 L1571.99 682.7 L1571.43 682.7 L1570.87 682.7 L1570.31 682.7 L1569.75 682.7 L1569.19 682.7 L1568.63 682.7 L1568.07 682.7 L1567.51 682.7 L1566.95 682.7 L1566.39 682.7 L1565.83 682.7 L1565.28 682.7 L1564.72 682.7 L1564.16 682.7 L1563.6 682.7 L1563.04 682.7 L1562.48 682.7 L1561.92 682.7 L1561.36 682.7 L1560.8 682.7 L1560.24 682.7 L1559.68 682.7 L1559.12 682.7 L1558.56 682.7 L1558 682.7 L1557.45 682.7 L1556.89 682.7 L1556.33 682.7 L1555.77 682.7 L1555.21 682.7 L1554.65 682.7 L1554.09 682.7 L1553.53 682.7 L1552.97 682.7 L1552.41 682.7 L1551.85 682.7 L1551.29 682.7 L1550.73 682.7 L1550.18 682.7 L1549.62 682.7 L1549.06 682.7 L1548.5 682.7 L1547.94 682.7 L1547.38 682.7 L1546.82 682.7 L1546.26 682.7 L1545.7 682.7 L1545.14 682.7 L1544.58 682.7 L1544.02 682.7 L1543.46 682.7 L1542.9 682.7 L1542.35 682.7 L1541.79 682.7 L1541.23 682.7 L1540.67 682.7 L1540.11 682.7 L1539.55 682.7 L1538.99 682.7 L1538.43 682.7 L1537.87 682.7 L1537.31 682.7 L1536.75 682.7 L1536.19 682.7 L1535.63 682.7 L1535.08 682.7 L1534.52 682.7 L1533.96 682.7 L1533.4 682.7 L1532.84 682.7 L1532.28 682.7 L1531.72 682.7 L1531.16 682.7 L1530.6 682.7 L1530.04 682.7 L1529.48 682.7 L1528.92 682.7 L1528.36 682.7 L1527.81 682.7 L1527.25 682.7 L1526.69 682.7 L1526.13 682.7 L1525.57 682.7 L1525.01 682.7 L1524.45 682.7 L1523.89 682.7 L1523.33 682.7 L1522.77 682.7 L1522.21 682.7 L1521.65 682.7 L1521.09 682.7 L1520.53 682.7 L1519.98 682.7 L1519.42 682.7 L1518.86 682.7 L1518.3 682.7 L1517.74 682.7 L1517.18 682.7 L1516.62 682.7 L1516.06 682.7 L1515.5 682.7 L1514.94 682.7 L1514.38 682.7 L1513.82 682.7 L1513.26 682.7 L1512.71 682.7 L1512.15 682.7 L1511.59 682.7 L1511.03 682.7 L1510.47 682.7 L1509.91 682.7 L1509.35 682.7 L1508.79 682.7 L1508.23 682.7 L1507.67 682.7 L1507.11 682.7 L1506.55 682.7 L1505.99 682.7 L1505.44 682.7 L1504.88 682.7 L1504.32 682.7 L1503.76 682.7 L1503.2 682.7 L1502.64 682.7 L1502.08 682.7 L1501.52 682.7 L1500.96 682.7 L1500.4 682.7 L1499.84 682.7 L1499.28 682.7 L1498.72 682.7 L1498.16 682.7 L1497.61 682.7 L1497.05 682.7 L1496.49 682.7 L1495.93 682.7 L1495.37 682.7 L1494.81 682.7 L1494.25 682.7 L1493.69 682.7 L1493.13 682.7 L1492.57 682.7 L1492.01 682.7 L1491.45 682.7 L1490.89 682.7 L1490.34 682.7 L1489.78 682.7 L1489.22 682.7 L1488.66 682.7 L1488.1 682.7 L1487.54 682.7 L1486.98 682.7 L1486.42 682.7 L1485.86 682.7 L1485.3 682.7 L1484.74 682.7 L1484.18 682.7 L1483.62 682.7 L1483.07 682.7 L1482.51 682.7 L1481.95 682.7 L1481.39 682.7 L1480.83 682.7 L1480.27 682.7 L1479.71 682.7 L1479.15 682.7 L1478.59 682.7 L1478.03 682.7 L1477.47 682.7 L1476.91 682.7 L1476.35 682.7 L1475.79 682.7 L1475.24 682.7 L1474.68 682.7 L1474.12 682.7 L1473.56 682.7 L1473 682.7 L1472.44 682.7 L1471.88 682.7 L1471.32 682.7 L1470.76 682.7 L1470.2 682.7 L1469.64 682.7 L1469.08 682.7 L1468.52 682.7 L1467.97 682.7 L1467.41 682.7 L1466.85 682.7 L1466.29 682.7 L1465.73 682.7 L1465.17 682.7 L1464.61 682.7 L1464.05 682.7 L1463.49 682.7 L1462.93 682.7 L1462.37 682.7 L1461.81 682.7 L1461.25 682.7 L1460.7 682.7 L1460.14 682.7 L1459.58 682.7 L1459.02 682.7 L1458.46 682.7 L1457.9 682.7 L1457.34 682.7 L1456.78 682.7 L1456.22 682.7 L1455.66 682.7 L1455.1 682.7 L1454.54 682.7 L1453.98 682.7 L1453.42 682.7 L1452.87 682.7 L1452.31 682.7 L1451.75 682.7 L1451.19 682.7 L1450.63 682.7 L1450.07 682.7 L1449.51 682.7 L1448.95 682.7 L1448.39 682.7 L1447.83 682.7 L1447.27 682.7 L1446.71 682.7 L1446.15 682.7 L1445.6 682.7 L1445.04 682.7 L1444.48 682.7 L1443.92 682.7 L1443.36 682.7 L1442.8 682.7 L1442.24 682.7 L1441.68 682.7 L1441.12 682.7 L1440.56 682.7 L1440 682.7 L1439.44 682.7 L1438.88 682.7 L1438.33 682.7 L1437.77 682.7 L1437.21 682.7 L1436.65 682.7 L1436.09 682.7 L1435.53 682.7 L1434.97 682.7 L1434.41 682.7 L1433.85 682.7 L1433.29 682.7 L1432.73 682.7 L1432.17 682.7 L1431.61 682.7 L1431.05 682.7 L1430.5 682.7 L1429.94 682.7 L1429.38 682.7 L1428.82 682.7 L1428.26 682.7 L1427.7 682.7 L1427.14 682.7 L1426.58 682.7 L1426.02 682.7 L1425.46 682.7 L1424.9 682.7 L1424.34 682.7 L1423.78 682.7 L1423.23 682.7 L1422.67 682.7 L1422.11 682.7 L1421.55 682.7 L1420.99 682.7 L1420.43 682.7 L1419.87 682.7 L1419.31 682.7 L1418.75 682.7 L1418.19 682.7 L1417.63 682.7 L1417.07 682.7 L1416.51 682.7 L1415.95 682.7 L1415.4 682.7 L1414.84 682.7 L1414.28 682.7 L1413.72 682.7 L1413.16 682.7 L1412.6 682.7 L1412.04 682.7 L1411.48 682.7 L1410.92 682.7 L1410.36 682.7 L1409.8 682.7 L1409.24 682.7 L1408.68 682.7 L1408.13 682.7 L1407.57 682.7 L1407.01 682.7 L1406.45 682.7 L1405.89 682.7 L1405.33 682.7 L1404.77 682.7 L1404.21 682.7 L1403.65 682.7 L1403.09 682.7 L1402.53 682.7 L1401.97 682.7 L1401.41 682.7 L1400.86 682.7 L1400.3 682.7 L1399.74 682.7 L1399.18 682.7 L1398.62 682.7 L1398.06 682.7 L1397.5 682.7 L1396.94 682.7 L1396.38 682.7 L1395.82 682.7 L1395.26 682.7 L1394.7 682.7 L1394.14 682.7 L1393.58 682.7 L1393.03 682.7 L1392.47 682.7 L1391.91 682.7 L1391.35 682.7 L1390.79 682.7 L1390.23 682.7 L1389.67 682.7 L1389.11 682.7 L1388.55 682.7 L1387.99 682.7 L1387.43 682.7 L1386.87 682.7 L1386.31 682.7 L1385.76 682.7 L1385.2 682.7 L1384.64 682.7 L1384.08 682.7 L1383.52 682.7 L1382.96 682.7 L1382.4 682.7 L1381.84 682.7 L1381.28 682.7 L1380.72 682.7 L1380.16 682.7 L1379.6 682.7 L1379.04 682.7 L1378.49 682.7 L1377.93 682.7 L1377.37 682.7 L1376.81 682.7 L1376.25 682.7 L1375.69 682.7 L1375.13 682.7 L1374.57 682.7 L1374.01 682.7 L1373.45 682.7 L1372.89 682.7 L1372.33 682.7 L1371.77 682.7 L1371.21 682.7 L1370.66 682.7 L1370.1 682.7 L1369.54 682.7 L1368.98 682.7 L1368.42 682.7 L1367.86 682.7 L1367.3 682.7 L1366.74 682.7 L1366.18 682.7 L1365.62 682.7 L1365.06 682.7 L1364.5 682.7 L1363.94 682.7 L1363.39 682.7 L1362.83 682.7 L1362.27 682.7 L1361.71 682.7 L1361.15 682.7 L1360.59 682.7 L1360.03 682.7 L1359.47 682.7 L1358.91 682.7 L1358.35 682.7 L1357.79 682.7 L1357.23 682.7 L1356.67 682.7 L1356.12 682.7 L1355.56 682.7 L1355 682.7 L1354.44 682.7 L1353.88 682.7 L1353.32 682.7 L1352.76 682.7 L1352.2 682.7 L1351.64 682.7 L1351.08 682.7 L1350.52 682.7 L1349.96 682.7 L1349.4 682.7 L1348.84 682.7 L1348.29 682.7 L1347.73 682.7 L1347.17 682.7 L1346.61 682.7 L1346.05 682.7 L1345.49 682.7 L1344.93 682.7 L1344.37 682.7 L1343.81 682.7 L1343.25 682.7 L1342.69 682.7 L1342.13 682.7 L1341.57 682.7 L1341.02 682.7 L1340.46 682.7 L1339.9 682.7 L1339.34 682.7 L1338.78 682.7 L1338.22 682.7 L1337.66 682.7 L1337.1 682.7 L1336.54 682.7 L1335.98 682.7 L1335.42 682.7 L1334.86 682.7 L1334.3 682.7 L1333.75 682.7 L1333.19 682.7 L1332.63 682.7 L1332.07 682.7 L1331.51 682.7 L1330.95 682.7 L1330.39 682.7 L1329.83 682.7 L1329.27 682.7 L1328.71 682.7 L1328.15 682.7 L1327.59 682.7 L1327.03 682.7 L1326.47 682.7 L1325.92 682.7 L1325.36 682.7 L1324.8 682.7 L1324.24 682.7 L1323.68 682.7 L1323.12 682.7 L1322.56 682.7 L1322 682.7 L1321.44 682.7 L1320.88 682.7 L1320.32 682.7 L1319.76 682.7 L1319.2 682.7 L1318.65 682.7 L1318.09 682.7 L1317.53 682.7 L1316.97 682.7 L1316.41 682.7 L1315.85 682.7 L1315.29 682.7 L1314.73 682.7 L1314.17 682.7 L1313.61 682.7 L1313.05 682.7 L1312.49 682.7 L1311.93 682.7 L1311.38 682.7 L1310.82 682.7 L1310.26 682.7 L1309.7 682.7 L1309.14 682.7 L1308.58 682.7 L1308.02 682.7 L1307.46 682.7 L1306.9 682.7 L1306.34 682.7 L1305.78 682.7 L1305.22 682.7 L1304.66 682.7 L1304.1 682.7 L1303.55 682.7 L1302.99 682.7 L1302.43 682.7 L1301.87 682.7 L1301.31 682.7 L1300.75 682.7 L1300.19 682.7 L1299.63 682.7 L1299.07 682.7 L1298.51 682.7 L1297.95 682.7 L1297.39 682.7 L1296.83 682.7 L1296.28 682.7 L1295.72 682.7 L1295.16 682.7 L1294.6 682.7 L1294.04 682.7 L1293.48 682.7 L1292.92 682.7 L1292.36 682.7 L1291.8 682.7 L1291.24 682.7 L1290.68 682.7 L1290.12 682.7 L1289.56 682.7 L1289 682.7 L1288.45 682.7 L1287.89 682.7 L1287.33 682.7 L1286.77 682.7 L1286.21 682.7 L1285.65 682.7 L1285.09 682.7 L1284.53 682.7 L1283.97 682.7 L1283.41 682.7 L1282.85 682.7 L1282.29 682.7 L1281.73 682.7 L1281.18 682.7 L1280.62 682.7 L1280.06 682.7 L1279.5 682.7 L1278.94 682.7 L1278.38 682.7 L1277.82 682.7 L1277.26 682.7 L1276.7 682.7 L1276.14 682.7 L1275.58 682.7 L1275.02 682.7 L1274.46 682.7 L1273.91 682.7 L1273.35 682.7 L1272.79 682.7 L1272.23 682.7 L1271.67 682.7 L1271.11 682.7 L1270.55 682.7 L1269.99 682.7 L1269.43 682.7 L1268.87 682.7 L1268.31 682.7 L1267.75 682.7 L1267.19 682.7 L1266.63 682.7 L1266.08 682.7 L1265.52 682.7 L1264.96 682.7 L1264.4 682.7 L1263.84 682.7 L1263.28 682.7 L1262.72 682.7 L1262.16 682.7 L1261.6 682.7 L1261.04 682.7 L1260.48 682.7 L1259.92 682.7 L1259.36 682.7 L1258.81 682.7 L1258.25 682.7 L1257.69 682.7 L1257.13 682.7 L1256.57 682.7 L1256.01 682.7 L1255.45 682.7 L1254.89 682.7 L1254.33 682.7 L1253.77 682.7 L1253.21 682.7 L1252.65 682.7 L1252.09 682.7 L1251.54 682.7 L1250.98 682.7 L1250.42 682.7 L1249.86 682.7 L1249.3 682.7 L1248.74 682.7 L1248.18 682.7 L1247.62 682.7 L1247.06 682.7 L1246.5 682.7 L1245.94 682.7 L1245.38 682.7 L1244.82 682.7 L1244.26 682.7 L1243.71 682.7 L1243.15 682.7 L1242.59 682.7 L1242.03 682.7 L1241.47 682.7 L1240.91 682.7 L1240.35 682.7 L1239.79 682.7 L1239.23 682.7 L1238.67 682.7 L1238.11 682.7 L1237.55 682.7 L1236.99 682.7 L1236.44 682.7 L1235.88 682.7 L1235.32 682.7 L1234.76 682.7 L1234.2 682.7 L1233.64 682.7 L1233.08 682.7 L1232.52 682.7 L1231.96 682.7 L1231.4 682.7 L1230.84 682.7 L1230.28 682.7 L1229.72 682.7 L1229.17 682.7 L1228.61 682.7 L1228.05 682.7 L1227.49 682.7 L1226.93 682.7 L1226.37 682.7 L1225.81 682.7 L1225.25 682.7 L1224.69 682.7 L1224.13 682.7 L1223.57 682.7 L1223.01 682.7 L1222.45 682.7 L1221.89 682.7 L1221.34 682.7 L1220.78 682.7 L1220.22 682.7 L1219.66 682.7 L1219.1 682.7 L1218.54 682.7 L1217.98 682.7 L1217.42 682.7 L1216.86 682.7 L1216.3 682.7 L1215.74 682.7 L1215.18 682.7 L1214.62 682.7 L1214.07 682.7 L1213.51 682.7 L1212.95 682.7 L1212.39 682.7 L1211.83 682.7 L1211.27 682.7 L1210.71 682.7 L1210.15 682.7 L1209.59 682.7 L1209.03 682.7 L1208.47 682.7 L1207.91 682.7 L1207.35 682.7 L1206.8 682.7 L1206.24 682.7 L1205.68 682.7 L1205.12 682.7 L1204.56 682.7 L1204 682.7 L1203.44 682.7 L1202.88 682.7 L1202.32 682.7 L1201.76 682.7 L1201.2 682.7 L1200.64 682.7 L1200.08 682.7 L1199.52 682.7 L1198.97 682.7 L1198.41 682.7 L1197.85 682.7 L1197.29 682.7 L1196.73 682.7 L1196.17 682.7 L1195.61 682.7 L1195.05 682.7 L1194.49 682.7 L1193.93 682.7 L1193.37 682.7 L1192.81 682.7 L1192.25 682.7 L1191.7 682.7 L1191.14 682.7 L1190.58 682.7 L1190.02 682.7 L1189.46 682.7 L1188.9 682.7 L1188.34 682.7 L1187.78 682.7 L1187.22 682.7 L1186.66 682.7 L1186.1 682.7 L1185.54 682.7 L1184.98 682.7 L1184.43 682.7 L1183.87 682.7 L1183.31 682.7 L1182.75 682.7 L1182.19 682.7 L1181.63 682.7 L1181.07 682.7 L1180.51 682.7 L1179.95 682.7 L1179.39 682.7 L1178.83 682.7 L1178.27 682.7 L1177.71 682.7 L1177.15 682.7 L1176.6 682.7 L1176.04 682.7 L1175.48 682.7 L1174.92 682.7 L1174.36 682.7 L1173.8 682.7 L1173.24 682.7 L1172.68 682.7 L1172.12 682.7 L1171.56 682.7 L1171 682.7 L1170.44 682.7 L1169.88 682.7 L1169.33 682.7 L1168.77 682.7 L1168.21 682.7 L1167.65 682.7 L1167.09 682.7 L1166.53 682.7 L1165.97 682.7 L1165.41 682.7 L1164.85 682.7 L1164.29 682.7 L1163.73 682.7 L1163.17 682.7 L1162.61 682.7 L1162.05 682.7 L1161.5 682.7 L1160.94 682.7 L1160.38 682.7 L1159.82 682.7 L1159.26 682.7 L1158.7 682.7 L1158.14 682.7 L1157.58 682.7 L1157.02 682.7 L1156.46 682.7 L1155.9 682.7 L1155.34 682.7 L1154.78 682.7 L1154.23 682.7 L1153.67 682.7 L1153.11 682.7 L1152.55 682.7 L1151.99 682.7 L1151.43 682.7 L1150.87 682.7 L1150.31 682.7 L1149.75 682.7 L1149.19 682.7 L1148.63 682.7 L1148.07 682.7 L1147.51 682.7 L1146.96 682.7 L1146.4 682.7 L1145.84 682.7 L1145.28 682.7 L1144.72 682.7 L1144.16 682.7 L1143.6 682.7 L1143.04 682.7 L1142.48 682.7 L1141.92 682.7 L1141.36 682.7 L1140.8 682.7 L1140.24 682.7 L1139.68 682.7 L1139.13 682.7 L1138.57 682.7 L1138.01 682.7 L1137.45 682.7 L1136.89 682.7 L1136.33 682.7 L1135.77 682.7 L1135.21 682.7 L1134.65 682.7 L1134.09 682.7 L1133.53 682.7 L1132.97 682.7 L1132.41 682.7 L1131.86 682.7 L1131.3 682.7 L1130.74 682.7 L1130.18 682.7 L1129.62 682.7 L1129.06 682.7 L1128.5 682.7 L1127.94 682.7 L1127.38 682.7 L1126.82 682.7 L1126.26 682.7 L1125.7 682.7 L1125.14 682.7 L1124.59 682.7 L1124.03 682.7 L1123.47 682.7 L1122.91 682.7 L1122.35 682.7 L1121.79 682.7 L1121.23 682.7 L1120.67 682.7 L1120.11 682.7 L1119.55 682.7 L1118.99 682.7 L1118.43 682.7 L1117.87 682.7 L1117.31 682.7 L1116.76 682.7 L1116.2 682.7 L1115.64 682.7 L1115.08 682.7 L1114.52 682.7 L1113.96 682.7 L1113.4 682.7 L1112.84 682.7 L1112.28 682.7 L1111.72 682.7 L1111.16 682.7 L1110.6 682.7 L1110.04 682.7 L1109.49 682.7 L1108.93 682.7 L1108.37 682.7 L1107.81 682.7 L1107.25 682.7 L1106.69 682.7 L1106.13 682.7 L1105.57 682.7 L1105.01 682.7 L1104.45 682.7 L1103.89 682.7 L1103.33 682.7 L1102.77 682.7 L1102.22 682.7 L1101.66 682.7 L1101.1 682.7 L1100.54 682.7 L1099.98 682.7 L1099.42 682.7 L1098.86 682.7 L1098.3 682.7 L1097.74 682.7 L1097.18 682.7 L1096.62 682.7 L1096.06 682.7 L1095.5 682.7 L1094.94 682.7 L1094.39 682.7 L1093.83 682.7 L1093.27 682.7 L1092.71 682.7 L1092.15 682.7 L1091.59 682.7 L1091.03 682.7 L1090.47 682.7 L1089.91 682.7 L1089.35 682.7 L1088.79 682.7 L1088.23 682.7 L1087.67 682.7 L1087.12 682.7 L1086.56 682.7 L1086 682.7 L1085.44 682.7 L1084.88 682.7 L1084.32 682.7 L1083.76 682.7 L1083.2 682.7 L1082.64 682.7 L1082.08 682.7 L1081.52 682.7 L1080.96 682.7 L1080.4 682.7 L1079.85 682.7 L1079.29 682.7 L1078.73 682.7 L1078.17 682.7 L1077.61 682.7 L1077.05 682.7 L1076.49 682.7 L1075.93 682.7 L1075.37 682.7 L1074.81 682.7 L1074.25 682.7 L1073.69 682.7 L1073.13 682.7 L1072.57 682.7 L1072.02 682.7 L1071.46 682.7 L1070.9 682.7 L1070.34 682.7 L1069.78 682.7 L1069.22 682.7 L1068.66 682.7 L1068.1 682.7 L1067.54 682.7 L1066.98 682.7 L1066.42 682.7 L1065.86 682.7 L1065.3 682.7 L1064.75 682.7 L1064.19 682.7 L1063.63 682.7 L1063.07 682.7 L1062.51 682.7 L1061.95 682.7 L1061.39 682.7 L1060.83 682.7 L1060.27 682.7 L1059.71 682.7 L1059.15 682.7 L1058.59 682.7 L1058.03 682.7 L1057.48 682.7 L1056.92 682.7 L1056.36 682.7 L1055.8 682.7 L1055.24 682.7 L1054.68 682.7 L1054.12 682.7 L1053.56 682.7 L1053 682.7 L1052.44 682.7 L1051.88 682.7 L1051.32 682.7 L1050.76 682.7 L1050.2 682.7 L1049.65 682.7 L1049.09 682.7 L1048.53 682.7 L1047.97 682.7 L1047.41 682.7 L1046.85 682.7 L1046.29 682.7 L1045.73 682.7 L1045.17 682.7 L1044.61 682.7 L1044.05 682.7 L1043.49 682.7 L1042.93 682.7 L1042.38 682.7 L1041.82 682.7 L1041.26 682.7 L1040.7 682.7 L1040.14 682.7 L1039.58 682.7 L1039.02 682.7 L1038.46 682.7 L1037.9 682.7 L1037.34 682.7 L1036.78 682.7 L1036.22 682.7 L1035.66 682.7 L1035.1 682.7 L1034.55 682.7 L1033.99 682.7 L1033.43 682.7 L1032.87 682.7 L1032.31 682.7 L1031.75 682.7 L1031.19 682.7 L1030.63 682.7 L1030.07 682.7 L1029.51 682.7 L1028.95 682.7 L1028.39 682.7 L1027.83 682.7 L1027.28 682.7 L1026.72 682.7 L1026.16 682.7 L1025.6 682.7 L1025.04 682.7 L1024.48 682.7 L1023.92 682.7 L1023.36 682.7 L1022.8 682.7 L1022.24 682.7 L1021.68 682.7 L1021.12 682.7 L1020.56 682.7 L1020.01 682.7 L1019.45 682.7 L1018.89 682.7 L1018.33 682.7 L1017.77 682.7 L1017.21 682.7 L1016.65 682.7 L1016.09 682.7 L1015.53 682.7 L1014.97 682.7 L1014.41 682.7 L1013.85 682.7 L1013.29 682.7 L1012.73 682.7 L1012.18 682.7 L1011.62 682.7 L1011.06 682.7 L1010.5 682.7 L1009.94 682.7 L1009.38 682.7 L1008.82 682.7 L1008.26 682.7 L1007.7 682.7 L1007.14 682.7 L1006.58 682.7 L1006.02 682.7 L1005.46 682.7 L1004.91 682.7 L1004.35 682.7 L1003.79 682.7 L1003.23 682.7 L1002.67 682.7 L1002.11 682.7 L1001.55 682.7 L1000.99 682.7 L1000.43 682.7 L999.872 682.7 L999.313 682.7 L998.754 682.7 L998.194 682.7 L997.635 682.7 L997.076 682.7 L996.517 682.7 L995.957 682.7 L995.398 682.7 L994.839 682.7 L994.28 682.7 L993.72 682.7 L993.161 682.7 L992.602 682.7 L992.043 682.7 L991.483 682.7 L990.924 682.7 L990.365 682.7 L989.806 682.7 L989.246 682.7 L988.687 682.7 L988.128 682.7 L987.569 682.7 L987.009 682.7 L986.45 682.7 L985.891 682.7 L985.332 682.7 L984.772 682.7 L984.213 682.7 L983.654 682.7 L983.095 682.7 L982.535 682.7 L981.976 682.7 L981.417 682.7 L980.858 682.7 L980.298 682.7 L979.739 682.7 L979.18 682.7 L978.621 682.7 L978.061 682.7 L977.502 682.7 L976.943 682.7 L976.384 682.7 L975.824 682.7 L975.265 682.7 L974.706 682.7 L974.147 682.7 L973.587 682.7 L973.028 682.7 L972.469 682.7 L971.91 682.7 L971.35 682.7 L970.791 682.7 L970.232 682.7 L969.673 682.7 L969.113 682.7 L968.554 682.7 L967.995 682.7 L967.436 682.7 L966.876 682.7 L966.317 682.7 L965.758 682.7 L965.199 682.7 L964.639 682.7 L964.08 682.7 L963.521 682.7 L962.962 682.7 L962.402 682.7 L961.843 682.7 L961.284 682.7 L960.725 682.7 L960.165 682.7 L959.606 682.7 L959.047 682.7 L958.488 682.7 L957.928 682.7 L957.369 682.7 L956.81 682.7 L956.251 682.7 L955.691 682.7 L955.132 682.7 L954.573 682.7 L954.014 682.7 L953.454 682.7 L952.895 682.7 L952.336 682.7 L951.777 682.7 L951.217 682.7 L950.658 682.7 L950.099 682.7 L949.54 682.7 L948.98 682.7 L948.421 682.7 L947.862 682.7 L947.303 682.7 L946.743 682.7 L946.184 682.7 L945.625 682.7 L945.066 682.7 L944.506 682.7 L943.947 682.7 L943.388 682.7 L942.829 682.7 L942.269 682.7 L941.71 682.7 L941.151 682.7 L940.592 682.7 L940.032 682.7 L939.473 682.7 L938.914 682.7 L938.355 682.7 L937.795 682.7 L937.236 682.7 L936.677 682.7 L936.118 682.7 L935.558 682.7 L934.999 682.7 L934.44 682.7 L933.881 682.7 L933.321 682.7 L932.762 682.7 L932.203 682.7 L931.644 682.7 L931.084 682.7 L930.525 682.7 L929.966 682.7 L929.406 682.7 L928.847 682.7 L928.288 682.7 L927.729 682.7 L927.169 682.7 L926.61 682.7 L926.051 682.7 L925.492 682.7 L924.932 682.7 L924.373 682.7 L923.814 682.7 L923.255 682.7 L922.695 682.7 L922.136 682.7 L921.577 682.7 L921.018 682.7 L920.458 682.7 L919.899 682.7 L919.34 682.7 L918.781 682.7 L918.221 682.7 L917.662 682.7 L917.103 682.7 L916.544 682.7 L915.984 682.7 L915.425 682.7 L914.866 682.7 L914.307 682.7 L913.747 682.7 L913.188 682.7 L912.629 682.7 L912.07 682.7 L911.51 682.7 L910.951 682.7 L910.392 682.7 L909.833 682.7 L909.273 682.7 L908.714 682.7 L908.155 682.7 L907.596 682.7 L907.036 682.7 L906.477 682.7 L905.918 682.7 L905.359 682.7 L904.799 682.7 L904.24 682.7 L903.681 682.7 L903.122 682.7 L902.562 682.7 L902.003 682.7 L901.444 682.7 L900.885 682.7 L900.325 682.7 L899.766 682.7 L899.207 682.7 L898.648 682.7 L898.088 682.7 L897.529 682.7 L896.97 682.7 L896.411 682.7 L895.851 682.7 L895.292 682.7 L894.733 682.7 L894.174 682.7 L893.614 682.7 L893.055 682.7 L892.496 682.7 L891.937 682.7 L891.377 682.7 L890.818 682.7 L890.259 682.7 L889.7 682.7 L889.14 682.7 L888.581 682.7 L888.022 682.7 L887.463 682.7 L886.903 682.7 L886.344 682.7 L885.785 682.7 L885.226 682.7 L884.666 682.7 L884.107 682.7 L883.548 682.7 L882.989 682.7 L882.429 682.7 L881.87 682.7 L881.311 682.7 L880.752 682.7 L880.192 682.7 L879.633 682.7 L879.074 682.7 L878.515 682.7 L877.955 682.7 L877.396 682.7 L876.837 682.7 L876.278 682.7 L875.718 682.7 L875.159 682.7 L874.6 682.7 L874.041 682.7 L873.481 682.7 L872.922 682.7 L872.363 682.7 L871.804 682.7 L871.244 682.7 L870.685 682.7 L870.126 682.7 L869.567 682.7 L869.007 682.7 L868.448 682.7 L867.889 682.7 L867.33 682.7 L866.77 682.7 L866.211 682.7 L865.652 682.7 L865.093 682.7 L864.533 682.7 L863.974 682.7 L863.415 682.7 L862.856 682.7 L862.296 682.7 L861.737 682.7 L861.178 682.7 L860.619 682.7 L860.059 682.7 L859.5 682.7 L858.941 682.7 L858.382 682.7 L857.822 682.7 L857.263 682.7 L856.704 682.7 L856.145 682.7 L855.585 682.7 L855.026 682.7 L854.467 682.7 L853.908 682.7 L853.348 682.7 L852.789 682.7 L852.23 682.7 L851.671 682.7 L851.111 682.7 L850.552 682.7 L849.993 682.7 L849.434 682.7 L848.874 682.7 L848.315 682.7 L847.756 682.7 L847.197 682.7 L846.637 682.7 L846.078 682.7 L845.519 682.7 L844.96 682.7 L844.4 682.7 L843.841 682.7 L843.282 682.7 L842.723 682.7 L842.163 682.7 L841.604 682.7 L841.045 682.7 L840.486 682.7 L839.926 682.7 L839.367 682.7 L838.808 682.7 L838.249 682.7 L837.689 682.7 L837.13 682.7 L836.571 682.7 L836.012 682.7 L835.452 682.7 L834.893 682.7 L834.334 682.7 L833.775 682.7 L833.215 682.7 L832.656 682.7 L832.097 682.7 L831.538 682.7 L830.978 682.7 L830.419 682.7 L829.86 682.7 L829.301 682.7 L828.741 682.7 L828.182 682.7 L827.623 682.7 L827.064 682.7 L826.504 682.7 L825.945 682.7 L825.386 682.7 L824.827 682.7 L824.267 682.7 L823.708 682.7 L823.149 682.7 L822.59 682.7 L822.03 682.7 L821.471 682.7 L820.912 682.7 L820.353 682.7 L819.793 682.7 L819.234 682.7 L818.675 682.7 L818.116 682.7 L817.556 682.7 L816.997 682.7 L816.438 682.7 L815.879 682.7 L815.319 682.7 L814.76 682.7 L814.201 682.7 L813.642 682.7 L813.082 682.7 L812.523 682.7 L811.964 682.7 L811.405 682.7 L810.845 682.7 L810.286 682.7 L809.727 682.7 L809.168 682.7 L808.608 682.7 L808.049 682.7 L807.49 682.7 L806.931 682.7 L806.371 682.7 L805.812 682.7 L805.253 682.7 L804.693 682.7 L804.134 682.7 L803.575 682.7 L803.016 682.7 L802.456 682.7 L801.897 682.7 L801.338 682.7 L800.779 682.7 L800.219 682.7 L799.66 682.7 L799.101 682.7 L798.542 682.7 L797.982 682.7 L797.423 682.7 L796.864 682.7 L796.305 682.7 L795.745 682.7 L795.186 682.7 L794.627 682.7 L794.068 682.7 L793.508 682.7 L792.949 682.7 L792.39 682.7 L791.831 682.7 L791.271 682.7 L790.712 682.7 L790.153 682.7 L789.594 682.7 L789.034 682.7 L788.475 682.7 L787.916 682.7 L787.357 682.7 L786.797 682.7 L786.238 682.7 L785.679 682.7 L785.12 682.7 L784.56 682.7 L784.001 682.7 L783.442 682.7 L782.883 682.7 L782.323 682.7 L781.764 682.7 L781.205 682.7 L780.646 682.7 L780.086 682.7 L779.527 682.7 L778.968 682.7 L778.409 682.7 L777.849 682.7 L777.29 682.7 L776.731 682.7 L776.172 682.7 L775.612 682.7 L775.053 682.7 L774.494 682.7 L773.935 682.7 L773.375 682.7 L772.816 682.7 L772.257 682.7 L771.698 682.7 L771.138 682.7 L770.579 682.7 L770.02 682.7 L769.461 682.7 L768.901 682.7 L768.342 682.7 L767.783 682.7 L767.224 682.7 L766.664 682.7 L766.105 682.7 L765.546 682.7 L764.987 682.7 L764.427 682.7 L763.868 682.7 L763.309 682.7 L762.75 682.7 L762.19 682.7 L761.631 682.7 L761.072 682.7 L760.513 682.7 L759.953 682.7 L759.394 682.7 L758.835 682.7 L758.276 682.7 L757.716 682.7 L757.157 682.7 L756.598 682.7 L756.039 682.7 L755.479 682.7 L754.92 682.7 L754.361 682.7 L753.802 682.7 L753.242 682.7 L752.683 682.7 L752.124 682.7 L751.565 682.7 L751.005 682.7 L750.446 682.7 L749.887 682.7 L749.328 682.7 L748.768 682.7 L748.209 682.7 L747.65 682.7 L747.091 682.7 L746.531 682.7 L745.972 682.7 L745.413 682.7 L744.854 682.7 L744.294 682.7 L743.735 682.7 L743.176 682.7 L742.617 682.7 L742.057 682.7 L741.498 682.7 L740.939 682.7 L740.38 682.7 L739.82 682.7 L739.261 682.7 L738.702 682.7 L738.143 682.7 L737.583 682.7 L737.024 682.7 L736.465 682.7 L735.906 682.7 L735.346 682.7 L734.787 682.7 L734.228 682.7 L733.669 682.7 L733.109 682.7 L732.55 682.7 L731.991 682.7 L731.432 682.7 L730.872 682.7 L730.313 682.7 L729.754 682.7 L729.195 682.7 L728.635 682.7 L728.076 682.7 L727.517 682.7 L726.958 682.7 L726.398 682.7 L725.839 682.7 L725.28 682.7 L724.721 682.7 L724.161 682.7 L723.602 682.7 L723.043 682.7 L722.484 682.7 L721.924 682.7 L721.365 682.7 L720.806 682.7 L720.247 682.7  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.863 720.806,686.863 721.365,686.863 721.924,686.863 722.484,686.863 723.043,686.863 723.602,686.863 724.161,686.863 724.721,686.863 725.28,686.863 725.839,686.863 726.398,686.863 726.958,686.863 727.517,686.863 728.076,686.863 728.635,686.863 729.195,686.863 729.754,686.863 730.313,686.863 730.872,686.863 731.432,686.863 731.991,686.863 732.55,686.863 733.109,686.863 733.669,686.863 734.228,686.863 734.787,686.863 735.346,686.863 735.906,686.863 736.465,686.863 737.024,686.863 737.583,686.863 738.143,686.863 738.702,686.863 739.261,686.863 739.82,686.863 740.38,686.863 740.939,686.863 741.498,686.863 742.057,686.863 742.617,686.863 743.176,686.863 743.735,686.863 744.294,686.863 744.854,686.863 745.413,686.863 745.972,686.863 746.531,686.863 747.091,686.863 747.65,686.863 748.209,686.863 748.768,686.863 749.328,686.863 749.887,686.863 750.446,686.863 751.005,686.863 751.565,686.863 752.124,686.863 752.683,686.863 753.242,686.863 753.802,686.863 754.361,686.863 754.92,686.863 755.479,686.863 756.039,686.863 756.598,686.863 757.157,686.863 757.716,686.863 758.276,686.863 758.835,686.863 759.394,686.863 759.953,686.863 760.513,686.863 761.072,686.863 761.631,686.863 762.19,686.863 762.75,686.863 763.309,686.863 763.868,686.863 764.427,686.863 764.987,686.863 765.546,686.863 766.105,686.863 766.664,686.863 767.224,686.863 767.783,686.863 768.342,686.863 768.901,686.863 769.461,686.863 770.02,686.863 770.579,686.863 771.138,686.863 771.698,686.863 772.257,686.863 772.816,686.863 773.375,686.863 773.935,686.863 774.494,686.863 775.053,686.863 775.612,686.863 776.172,686.863 776.731,686.863 777.29,686.863 777.849,686.863 778.409,686.863 778.968,686.863 779.527,686.863 780.086,686.863 780.646,686.863 781.205,686.863 781.764,686.863 782.323,686.863 782.883,686.863 783.442,686.863 784.001,686.863 784.56,686.863 785.12,686.863 785.679,686.863 786.238,686.863 786.797,686.863 787.357,686.863 787.916,686.863 788.475,686.863 789.034,686.863 789.594,686.863 790.153,686.863 790.712,686.863 791.271,686.863 791.831,686.863 792.39,686.863 792.949,686.863 793.508,686.863 794.068,686.863 794.627,686.863 795.186,686.863 795.745,686.863 796.305,686.863 796.864,686.863 797.423,686.863 797.982,686.863 798.542,686.863 799.101,686.863 799.66,686.863 800.219,686.863 800.779,686.863 801.338,686.863 801.897,686.863 802.456,686.863 803.016,686.863 803.575,686.863 804.134,686.863 804.693,686.863 805.253,686.863 805.812,686.863 806.371,686.863 806.931,686.863 807.49,686.863 808.049,686.863 808.608,686.863 809.168,686.863 809.727,686.863 810.286,686.863 810.845,686.863 811.405,686.863 811.964,686.863 812.523,686.863 813.082,686.863 813.642,686.863 814.201,686.863 814.76,686.863 815.319,686.863 815.879,686.863 816.438,686.863 816.997,686.863 817.556,686.863 818.116,686.863 818.675,686.863 819.234,686.863 819.793,686.863 820.353,686.863 820.912,686.863 821.471,686.863 822.03,686.863 822.59,686.863 823.149,686.863 823.708,686.863 824.267,686.863 824.827,686.863 825.386,686.863 825.945,686.863 826.504,686.863 827.064,686.863 827.623,686.863 828.182,686.863 828.741,686.863 829.301,686.863 829.86,686.863 830.419,686.863 830.978,686.863 831.538,686.863 832.097,686.863 832.656,686.863 833.215,686.863 833.775,686.863 834.334,686.863 834.893,686.863 835.452,686.863 836.012,686.863 836.571,686.863 837.13,686.863 837.689,686.863 838.249,686.863 838.808,686.863 839.367,686.863 839.926,686.863 840.486,686.863 841.045,686.863 841.604,686.863 842.163,686.863 842.723,686.863 843.282,686.863 843.841,686.863 844.4,686.863 844.96,686.863 845.519,686.863 846.078,686.863 846.637,686.863 847.197,686.863 847.756,686.863 848.315,686.863 848.874,686.863 849.434,686.863 849.993,686.863 850.552,686.863 851.111,686.863 851.671,686.863 852.23,686.863 852.789,686.863 853.348,686.863 853.908,686.863 854.467,686.863 855.026,686.863 855.585,686.863 856.145,686.863 856.704,686.863 857.263,686.863 857.822,686.863 858.382,686.863 858.941,686.863 859.5,686.863 860.059,686.863 860.619,686.863 861.178,686.863 861.737,686.863 862.296,686.863 862.856,686.863 863.415,686.863 863.974,686.863 864.533,686.863 865.093,686.863 865.652,686.863 866.211,686.863 866.77,686.863 867.33,686.863 867.889,686.863 868.448,686.863 869.007,686.863 869.567,686.863 870.126,686.863 870.685,686.863 871.244,686.863 871.804,686.863 872.363,686.863 872.922,686.863 873.481,686.863 874.041,686.863 874.6,686.863 875.159,686.863 875.718,686.863 876.278,686.863 876.837,686.863 877.396,686.863 877.955,686.863 878.515,686.863 879.074,686.863 879.633,686.863 880.192,686.863 880.752,686.863 881.311,686.863 881.87,686.863 882.429,686.863 882.989,686.863 883.548,686.863 884.107,686.863 884.666,686.863 885.226,686.863 885.785,686.863 886.344,686.863 886.903,686.863 887.463,686.863 888.022,686.863 888.581,686.863 889.14,686.863 889.7,686.863 890.259,686.863 890.818,686.863 891.377,686.863 891.937,686.863 892.496,686.863 893.055,686.863 893.614,686.863 894.174,686.863 894.733,686.863 895.292,686.863 895.851,686.863 896.411,686.863 896.97,686.863 897.529,686.863 898.088,686.863 898.648,686.863 899.207,686.863 899.766,686.863 900.325,686.863 900.885,686.863 901.444,686.863 902.003,686.863 902.562,686.863 903.122,686.863 903.681,686.863 904.24,686.863 904.799,686.863 905.359,686.863 905.918,686.863 906.477,686.863 907.036,686.863 907.596,686.863 908.155,686.863 908.714,686.863 909.273,686.863 909.833,686.863 910.392,686.863 910.951,686.863 911.51,686.863 912.07,686.863 912.629,686.863 913.188,686.863 913.747,686.863 914.307,686.863 914.866,686.863 915.425,686.863 915.984,686.863 916.544,686.863 917.103,686.863 917.662,686.863 918.221,686.863 918.781,686.863 919.34,686.863 919.899,686.863 920.458,686.863 921.018,686.863 921.577,686.863 922.136,686.863 922.695,686.863 923.255,686.863 923.814,686.863 924.373,686.863 924.932,686.863 925.492,686.863 926.051,686.863 926.61,686.863 927.169,686.863 927.729,686.863 928.288,686.863 928.847,686.863 929.406,686.863 929.966,686.863 930.525,686.863 931.084,686.863 931.644,686.863 932.203,686.863 932.762,686.863 933.321,686.863 933.881,686.863 934.44,686.863 934.999,686.863 935.558,686.863 936.118,686.863 936.677,686.863 937.236,686.863 937.795,686.863 938.355,686.863 938.914,686.863 939.473,686.863 940.032,686.863 940.592,686.863 941.151,686.863 941.71,686.863 942.269,686.863 942.829,686.863 943.388,686.863 943.947,686.863 944.506,686.863 945.066,686.863 945.625,686.863 946.184,686.863 946.743,686.863 947.303,686.863 947.862,686.863 948.421,686.863 948.98,686.863 949.54,686.863 950.099,686.863 950.658,686.863 951.217,686.863 951.777,686.863 952.336,686.863 952.895,686.863 953.454,686.863 954.014,686.863 954.573,686.863 955.132,686.863 955.691,686.863 956.251,686.863 956.81,686.863 957.369,686.863 957.928,686.863 958.488,686.863 959.047,686.863 959.606,686.863 960.165,686.863 960.725,686.863 961.284,686.863 961.843,686.863 962.402,686.863 962.962,686.863 963.521,686.863 964.08,686.863 964.639,686.863 965.199,686.863 965.758,686.863 966.317,686.863 966.876,686.863 967.436,686.863 967.995,686.863 968.554,686.863 969.113,686.863 969.673,686.863 970.232,686.863 970.791,686.863 971.35,686.863 971.91,686.863 972.469,686.863 973.028,686.863 973.587,686.863 974.147,686.863 974.706,686.863 975.265,686.863 975.824,686.863 976.384,686.863 976.943,686.863 977.502,686.863 978.061,686.863 978.621,686.863 979.18,686.863 979.739,686.863 980.298,686.863 980.858,686.863 981.417,686.863 981.976,686.863 982.535,686.863 983.095,686.863 983.654,686.863 984.213,686.863 984.772,686.863 985.332,686.863 985.891,686.863 986.45,686.863 987.009,686.863 987.569,686.863 988.128,686.863 988.687,686.863 989.246,686.863 989.806,686.863 990.365,686.863 990.924,686.863 991.483,686.863 992.043,686.863 992.602,686.863 993.161,686.863 993.72,686.863 994.28,686.863 994.839,686.863 995.398,686.863 995.957,686.863 996.517,686.863 997.076,686.863 997.635,686.863 998.194,686.863 998.754,686.863 999.313,686.863 999.872,686.863 1000.43,686.863 1000.99,686.863 1001.55,686.863 1002.11,686.863 1002.67,686.863 1003.23,686.863 1003.79,686.863 1004.35,686.863 1004.91,686.863 1005.46,686.863 1006.02,686.863 1006.58,686.863 1007.14,686.863 1007.7,686.863 1008.26,686.863 1008.82,686.863 1009.38,686.863 1009.94,686.863 1010.5,686.863 1011.06,686.863 1011.62,686.863 1012.18,686.863 1012.73,686.863 1013.29,686.863 1013.85,686.863 1014.41,686.863 1014.97,686.863 1015.53,686.863 1016.09,686.863 1016.65,686.863 1017.21,686.863 1017.77,686.863 1018.33,686.863 1018.89,686.863 1019.45,686.863 1020.01,686.863 1020.56,686.863 1021.12,686.863 1021.68,686.863 1022.24,686.863 1022.8,686.863 1023.36,686.863 1023.92,686.863 1024.48,686.863 1025.04,686.863 1025.6,686.863 1026.16,686.863 1026.72,686.863 1027.28,686.863 1027.83,686.863 1028.39,686.863 1028.95,686.863 1029.51,686.863 1030.07,686.863 1030.63,686.863 1031.19,686.863 1031.75,686.863 1032.31,686.863 1032.87,686.863 1033.43,686.863 1033.99,686.863 1034.55,686.863 1035.1,686.863 1035.66,686.863 1036.22,686.863 1036.78,686.863 1037.34,686.863 1037.9,686.863 1038.46,686.863 1039.02,686.863 1039.58,686.863 1040.14,686.863 1040.7,686.863 1041.26,686.863 1041.82,686.863 1042.38,686.863 1042.93,686.863 1043.49,686.863 1044.05,686.863 1044.61,686.863 1045.17,686.863 1045.73,686.863 1046.29,686.863 1046.85,686.863 1047.41,686.863 1047.97,686.863 1048.53,686.863 1049.09,686.863 1049.65,686.863 1050.2,686.863 1050.76,686.863 1051.32,686.863 1051.88,686.863 1052.44,686.863 1053,686.863 1053.56,686.863 1054.12,686.863 1054.68,686.863 1055.24,686.863 1055.8,686.863 1056.36,686.863 1056.92,686.863 1057.48,686.863 1058.03,686.863 1058.59,686.863 1059.15,686.863 1059.71,686.863 1060.27,686.863 1060.83,686.863 1061.39,686.863 1061.95,686.863 1062.51,686.863 1063.07,686.863 1063.63,686.863 1064.19,686.863 1064.75,686.863 1065.3,686.863 1065.86,686.863 1066.42,686.863 1066.98,686.863 1067.54,686.863 1068.1,686.863 1068.66,686.863 1069.22,686.863 1069.78,686.863 1070.34,686.863 1070.9,686.863 1071.46,686.863 1072.02,686.863 1072.57,686.863 1073.13,686.863 1073.69,686.863 1074.25,686.863 1074.81,686.863 1075.37,686.863 1075.93,686.863 1076.49,686.863 1077.05,686.863 1077.61,686.863 1078.17,686.863 1078.73,686.863 1079.29,686.863 1079.85,686.863 1080.4,686.863 1080.96,686.863 1081.52,686.863 1082.08,686.863 1082.64,686.863 1083.2,686.863 1083.76,686.863 1084.32,686.863 1084.88,686.863 1085.44,686.863 1086,686.863 1086.56,686.863 1087.12,686.863 1087.67,686.863 1088.23,686.863 1088.79,686.863 1089.35,686.863 1089.91,686.863 1090.47,686.863 1091.03,686.863 1091.59,686.863 1092.15,686.863 1092.71,686.863 1093.27,686.863 1093.83,686.863 1094.39,686.863 1094.94,686.863 1095.5,686.863 1096.06,686.863 1096.62,686.863 1097.18,686.863 1097.74,686.863 1098.3,686.863 1098.86,686.863 1099.42,686.863 1099.98,686.863 1100.54,686.863 1101.1,686.863 1101.66,686.863 1102.22,686.863 1102.77,686.863 1103.33,686.863 1103.89,686.863 1104.45,686.863 1105.01,686.863 1105.57,686.863 1106.13,686.863 1106.69,686.863 1107.25,686.863 1107.81,686.863 1108.37,686.863 1108.93,686.863 1109.49,686.863 1110.04,686.863 1110.6,686.863 1111.16,686.863 1111.72,686.863 1112.28,686.863 1112.84,686.863 1113.4,686.863 1113.96,686.863 1114.52,686.863 1115.08,686.863 1115.64,686.863 1116.2,686.863 1116.76,686.863 1117.31,686.863 1117.87,686.863 1118.43,686.863 1118.99,686.863 1119.55,686.863 1120.11,686.863 1120.67,686.863 1121.23,686.863 1121.79,686.863 1122.35,686.863 1122.91,686.863 1123.47,686.863 1124.03,686.863 1124.59,686.863 1125.14,686.863 1125.7,686.863 1126.26,686.863 1126.82,686.863 1127.38,686.863 1127.94,686.863 1128.5,686.863 1129.06,686.863 1129.62,686.863 1130.18,686.863 1130.74,686.863 1131.3,686.863 1131.86,686.863 1132.41,686.863 1132.97,686.863 1133.53,686.863 1134.09,686.863 1134.65,686.863 1135.21,686.863 1135.77,686.863 1136.33,686.863 1136.89,686.863 1137.45,686.863 1138.01,686.863 1138.57,686.863 1139.13,686.863 1139.68,686.863 1140.24,686.863 1140.8,686.863 1141.36,686.863 1141.92,686.863 1142.48,686.863 1143.04,686.863 1143.6,686.863 1144.16,686.863 1144.72,686.863 1145.28,686.863 1145.84,686.863 1146.4,686.863 1146.96,686.863 1147.51,686.863 1148.07,686.863 1148.63,686.863 1149.19,686.863 1149.75,686.863 1150.31,686.863 1150.87,686.863 1151.43,686.863 1151.99,686.863 1152.55,686.863 1153.11,686.863 1153.67,686.863 1154.23,686.863 1154.78,686.863 1155.34,686.863 1155.9,686.863 1156.46,686.863 1157.02,686.863 1157.58,686.863 1158.14,686.863 1158.7,686.863 1159.26,686.863 1159.82,686.863 1160.38,686.863 1160.94,686.863 1161.5,686.863 1162.05,686.863 1162.61,686.863 1163.17,686.863 1163.73,686.863 1164.29,686.863 1164.85,686.863 1165.41,686.863 1165.97,686.863 1166.53,686.863 1167.09,686.863 1167.65,686.863 1168.21,686.863 1168.77,686.863 1169.33,686.863 1169.88,686.863 1170.44,686.863 1171,686.863 1171.56,686.863 1172.12,686.863 1172.68,686.863 1173.24,686.863 1173.8,686.863 1174.36,686.863 1174.92,686.863 1175.48,686.863 1176.04,686.863 1176.6,686.863 1177.15,686.863 1177.71,686.863 1178.27,686.863 1178.83,686.863 1179.39,686.863 1179.95,686.863 1180.51,686.863 1181.07,686.863 1181.63,686.863 1182.19,686.863 1182.75,686.863 1183.31,686.863 1183.87,686.863 1184.43,686.863 1184.98,686.863 1185.54,686.863 1186.1,686.863 1186.66,686.863 1187.22,686.863 1187.78,686.863 1188.34,686.863 1188.9,686.863 1189.46,686.863 1190.02,686.863 1190.58,686.863 1191.14,686.863 1191.7,686.863 1192.25,686.863 1192.81,686.863 1193.37,686.863 1193.93,686.863 1194.49,686.863 1195.05,686.863 1195.61,686.863 1196.17,686.863 1196.73,686.863 1197.29,686.863 1197.85,686.863 1198.41,686.863 1198.97,686.863 1199.52,686.863 1200.08,686.863 1200.64,686.863 1201.2,686.863 1201.76,686.863 1202.32,686.863 1202.88,686.863 1203.44,686.863 1204,686.863 1204.56,686.863 1205.12,686.863 1205.68,686.863 1206.24,686.863 1206.8,686.863 1207.35,686.863 1207.91,686.863 1208.47,686.863 1209.03,686.863 1209.59,686.863 1210.15,686.863 1210.71,686.863 1211.27,686.863 1211.83,686.863 1212.39,686.863 1212.95,686.863 1213.51,686.863 1214.07,686.863 1214.62,686.863 1215.18,686.863 1215.74,686.863 1216.3,686.863 1216.86,686.863 1217.42,686.863 1217.98,686.863 1218.54,686.863 1219.1,686.863 1219.66,686.863 1220.22,686.863 1220.78,686.863 1221.34,686.863 1221.89,686.863 1222.45,686.863 1223.01,686.863 1223.57,686.863 1224.13,686.863 1224.69,686.863 1225.25,686.863 1225.81,686.863 1226.37,686.863 1226.93,686.863 1227.49,686.863 1228.05,686.863 1228.61,686.863 1229.17,686.863 1229.72,686.863 1230.28,686.863 1230.84,686.863 1231.4,686.863 1231.96,686.863 1232.52,686.863 1233.08,686.863 1233.64,686.863 1234.2,686.863 1234.76,686.863 1235.32,686.863 1235.88,686.863 1236.44,686.863 1236.99,686.863 1237.55,686.863 1238.11,686.863 1238.67,686.863 1239.23,686.863 1239.79,686.863 1240.35,686.863 1240.91,686.863 1241.47,686.863 1242.03,686.863 1242.59,686.863 1243.15,686.863 1243.71,686.863 1244.26,686.863 1244.82,686.863 1245.38,686.863 1245.94,686.863 1246.5,686.863 1247.06,686.863 1247.62,686.863 1248.18,686.863 1248.74,686.863 1249.3,686.863 1249.86,686.863 1250.42,686.863 1250.98,686.863 1251.54,686.863 1252.09,686.863 1252.65,686.863 1253.21,686.863 1253.77,686.863 1254.33,686.863 1254.89,686.863 1255.45,686.863 1256.01,686.863 1256.57,686.863 1257.13,686.863 1257.69,686.863 1258.25,686.863 1258.81,686.863 1259.36,686.863 1259.92,686.863 1260.48,686.863 1261.04,686.863 1261.6,686.863 1262.16,686.863 1262.72,686.863 1263.28,686.863 1263.84,686.863 1264.4,686.863 1264.96,686.863 1265.52,686.863 1266.08,686.863 1266.63,686.863 1267.19,686.863 1267.75,686.863 1268.31,686.863 1268.87,686.863 1269.43,686.863 1269.99,686.863 1270.55,686.863 1271.11,686.863 1271.67,686.863 1272.23,686.863 1272.79,686.863 1273.35,686.863 1273.91,686.863 1274.46,686.863 1275.02,686.863 1275.58,686.863 1276.14,686.863 1276.7,686.863 1277.26,686.863 1277.82,686.863 1278.38,686.863 1278.94,686.863 1279.5,686.863 1280.06,686.863 1280.62,686.863 1281.18,686.863 1281.73,686.863 1282.29,686.863 1282.85,686.863 1283.41,686.863 1283.97,686.863 1284.53,686.863 1285.09,686.863 1285.65,686.863 1286.21,686.863 1286.77,686.863 1287.33,686.863 1287.89,686.863 1288.45,686.863 1289,686.863 1289.56,686.863 1290.12,686.863 1290.68,686.863 1291.24,686.863 1291.8,686.863 1292.36,686.863 1292.92,686.863 1293.48,686.863 1294.04,686.863 1294.6,686.863 1295.16,686.863 1295.72,686.863 1296.28,686.863 1296.83,686.863 1297.39,686.863 1297.95,686.863 1298.51,686.863 1299.07,686.863 1299.63,686.863 1300.19,686.863 1300.75,686.863 1301.31,686.863 1301.87,686.863 1302.43,686.863 1302.99,686.863 1303.55,686.863 1304.1,686.863 1304.66,686.863 1305.22,686.863 1305.78,686.863 1306.34,686.863 1306.9,686.863 1307.46,686.863 1308.02,686.863 1308.58,686.863 1309.14,686.863 1309.7,686.863 1310.26,686.863 1310.82,686.863 1311.38,686.863 1311.93,686.863 1312.49,686.863 1313.05,686.863 1313.61,686.863 1314.17,686.863 1314.73,686.863 1315.29,686.863 1315.85,686.863 1316.41,686.863 1316.97,686.863 1317.53,686.863 1318.09,686.863 1318.65,686.863 1319.2,686.863 1319.76,686.863 1320.32,686.863 1320.88,686.863 1321.44,686.863 1322,686.863 1322.56,686.863 1323.12,686.863 1323.68,686.863 1324.24,686.863 1324.8,686.863 1325.36,686.863 1325.92,686.863 1326.47,686.863 1327.03,686.863 1327.59,686.863 1328.15,686.863 1328.71,686.863 1329.27,686.863 1329.83,686.863 1330.39,686.863 1330.95,686.863 1331.51,686.863 1332.07,686.863 1332.63,686.863 1333.19,686.863 1333.75,686.863 1334.3,686.863 1334.86,686.863 1335.42,686.863 1335.98,686.863 1336.54,686.863 1337.1,686.863 1337.66,686.863 1338.22,686.863 1338.78,686.863 1339.34,686.863 1339.9,686.863 1340.46,686.863 1341.02,686.863 1341.57,686.863 1342.13,686.863 1342.69,686.863 1343.25,686.863 1343.81,686.863 1344.37,686.863 1344.93,686.863 1345.49,686.863 1346.05,686.863 1346.61,686.863 1347.17,686.863 1347.73,686.863 1348.29,686.863 1348.84,686.863 1349.4,686.863 1349.96,686.863 1350.52,686.863 1351.08,686.863 1351.64,686.863 1352.2,686.863 1352.76,686.863 1353.32,686.863 1353.88,686.863 1354.44,686.863 1355,686.863 1355.56,686.863 1356.12,686.863 1356.67,686.863 1357.23,686.863 1357.79,686.863 1358.35,686.863 1358.91,686.863 1359.47,686.863 1360.03,686.863 1360.59,686.863 1361.15,686.863 1361.71,686.863 1362.27,686.863 1362.83,686.863 1363.39,686.863 1363.94,686.863 1364.5,686.863 1365.06,686.863 1365.62,686.863 1366.18,686.863 1366.74,686.863 1367.3,686.863 1367.86,686.863 1368.42,686.863 1368.98,686.863 1369.54,686.863 1370.1,686.863 1370.66,686.863 1371.21,686.863 1371.77,686.863 1372.33,686.863 1372.89,686.863 1373.45,686.863 1374.01,686.863 1374.57,686.863 1375.13,686.863 1375.69,686.863 1376.25,686.863 1376.81,686.863 1377.37,686.863 1377.93,686.863 1378.49,686.863 1379.04,686.863 1379.6,686.863 1380.16,686.863 1380.72,686.863 1381.28,686.863 1381.84,686.863 1382.4,686.863 1382.96,686.863 1383.52,686.863 1384.08,686.863 1384.64,686.863 1385.2,686.863 1385.76,686.863 1386.31,686.863 1386.87,686.863 1387.43,686.863 1387.99,686.863 1388.55,686.863 1389.11,686.863 1389.67,686.863 1390.23,686.863 1390.79,686.863 1391.35,686.863 1391.91,686.863 1392.47,686.863 1393.03,686.863 1393.58,686.863 1394.14,686.863 1394.7,686.863 1395.26,686.863 1395.82,686.863 1396.38,686.863 1396.94,686.863 1397.5,686.863 1398.06,686.863 1398.62,686.863 1399.18,686.863 1399.74,686.863 1400.3,686.863 1400.86,686.863 1401.41,686.863 1401.97,686.863 1402.53,686.863 1403.09,686.863 1403.65,686.863 1404.21,686.863 1404.77,686.863 1405.33,686.863 1405.89,686.863 1406.45,686.863 1407.01,686.863 1407.57,686.863 1408.13,686.863 1408.68,686.863 1409.24,686.863 1409.8,686.863 1410.36,686.863 1410.92,686.863 1411.48,686.863 1412.04,686.863 1412.6,686.863 1413.16,686.863 1413.72,686.863 1414.28,686.863 1414.84,686.863 1415.4,686.863 1415.95,686.863 1416.51,686.863 1417.07,686.863 1417.63,686.863 1418.19,686.863 1418.75,686.863 1419.31,686.863 1419.87,686.863 1420.43,686.863 1420.99,686.863 1421.55,686.863 1422.11,686.863 1422.67,686.863 1423.23,686.863 1423.78,686.863 1424.34,686.863 1424.9,686.863 1425.46,686.863 1426.02,686.863 1426.58,686.863 1427.14,686.863 1427.7,686.863 1428.26,686.863 1428.82,686.863 1429.38,686.863 1429.94,686.863 1430.5,686.863 1431.05,686.863 1431.61,686.863 1432.17,686.863 1432.73,686.863 1433.29,686.863 1433.85,686.863 1434.41,686.863 1434.97,686.863 1435.53,686.863 1436.09,686.863 1436.65,686.863 1437.21,686.863 1437.77,686.863 1438.33,686.863 1438.88,686.863 1439.44,686.863 1440,686.863 1440.56,686.863 1441.12,686.863 1441.68,686.863 1442.24,686.863 1442.8,686.863 1443.36,686.863 1443.92,686.863 1444.48,686.863 1445.04,686.863 1445.6,686.863 1446.15,686.863 1446.71,686.863 1447.27,686.863 1447.83,686.863 1448.39,686.863 1448.95,686.863 1449.51,686.863 1450.07,686.863 1450.63,686.863 1451.19,686.863 1451.75,686.863 1452.31,686.863 1452.87,686.863 1453.42,686.863 1453.98,686.863 1454.54,686.863 1455.1,686.863 1455.66,686.863 1456.22,686.863 1456.78,686.863 1457.34,686.863 1457.9,686.863 1458.46,686.863 1459.02,686.863 1459.58,686.863 1460.14,686.863 1460.7,686.863 1461.25,686.863 1461.81,686.863 1462.37,686.863 1462.93,686.863 1463.49,686.863 1464.05,686.863 1464.61,686.863 1465.17,686.863 1465.73,686.863 1466.29,686.863 1466.85,686.863 1467.41,686.863 1467.97,686.863 1468.52,686.863 1469.08,686.863 1469.64,686.863 1470.2,686.863 1470.76,686.863 1471.32,686.863 1471.88,686.863 1472.44,686.863 1473,686.863 1473.56,686.863 1474.12,686.863 1474.68,686.863 1475.24,686.863 1475.79,686.863 1476.35,686.863 1476.91,686.863 1477.47,686.863 1478.03,686.863 1478.59,686.863 1479.15,686.863 1479.71,686.863 1480.27,686.863 1480.83,686.863 1481.39,686.863 1481.95,686.863 1482.51,686.863 1483.07,686.863 1483.62,686.863 1484.18,686.863 1484.74,686.863 1485.3,686.863 1485.86,686.863 1486.42,686.863 1486.98,686.863 1487.54,686.863 1488.1,686.863 1488.66,686.863 1489.22,686.863 1489.78,686.863 1490.34,686.863 1490.89,686.863 1491.45,686.863 1492.01,686.863 1492.57,686.863 1493.13,686.863 1493.69,686.863 1494.25,686.863 1494.81,686.863 1495.37,686.863 1495.93,686.863 1496.49,686.863 1497.05,686.863 1497.61,686.863 1498.16,686.863 1498.72,686.863 1499.28,686.863 1499.84,686.863 1500.4,686.863 1500.96,686.863 1501.52,686.863 1502.08,686.863 1502.64,686.863 1503.2,686.863 1503.76,686.863 1504.32,686.863 1504.88,686.863 1505.44,686.863 1505.99,686.863 1506.55,686.863 1507.11,686.863 1507.67,686.863 1508.23,686.863 1508.79,686.863 1509.35,686.863 1509.91,686.863 1510.47,686.863 1511.03,686.863 1511.59,686.863 1512.15,686.863 1512.71,686.863 1513.26,686.863 1513.82,686.863 1514.38,686.863 1514.94,686.863 1515.5,686.863 1516.06,686.863 1516.62,686.863 1517.18,686.863 1517.74,686.863 1518.3,686.863 1518.86,686.863 1519.42,686.863 1519.98,686.863 1520.53,686.863 1521.09,686.863 1521.65,686.863 1522.21,686.863 1522.77,686.863 1523.33,686.863 1523.89,686.863 1524.45,686.863 1525.01,686.863 1525.57,686.863 1526.13,686.863 1526.69,686.863 1527.25,686.863 1527.81,686.863 1528.36,686.863 1528.92,686.863 1529.48,686.863 1530.04,686.863 1530.6,686.863 1531.16,686.863 1531.72,686.863 1532.28,686.863 1532.84,686.863 1533.4,686.863 1533.96,686.863 1534.52,686.863 1535.08,686.863 1535.63,686.863 1536.19,686.863 1536.75,686.863 1537.31,686.863 1537.87,686.863 1538.43,686.863 1538.99,686.863 1539.55,686.863 1540.11,686.863 1540.67,686.863 1541.23,686.863 1541.79,686.863 1542.35,686.863 1542.9,686.863 1543.46,686.863 1544.02,686.863 1544.58,686.863 1545.14,686.863 1545.7,686.863 1546.26,686.863 1546.82,686.863 1547.38,686.863 1547.94,686.863 1548.5,686.863 1549.06,686.863 1549.62,686.863 1550.18,686.863 1550.73,686.863 1551.29,686.863 1551.85,686.863 1552.41,686.863 1552.97,686.863 1553.53,686.863 1554.09,686.863 1554.65,686.863 1555.21,686.863 1555.77,686.863 1556.33,686.863 1556.89,686.863 1557.45,686.863 1558,686.863 1558.56,686.863 1559.12,686.863 1559.68,686.863 1560.24,686.863 1560.8,686.863 1561.36,686.863 1561.92,686.863 1562.48,686.863 1563.04,686.863 1563.6,686.863 1564.16,686.863 1564.72,686.863 1565.28,686.863 1565.83,686.863 1566.39,686.863 1566.95,686.863 1567.51,686.863 1568.07,686.863 1568.63,686.863 1569.19,686.863 1569.75,686.863 1570.31,686.863 1570.87,686.863 1571.43,686.863 1571.99,686.863 1572.55,686.863 1573.1,686.863 1573.66,686.863 1574.22,686.863 1574.78,686.863 1575.34,686.863 1575.9,686.863 1576.46,686.863 1577.02,686.863 1577.58,686.863 1578.14,686.863 1578.7,686.863 1579.26,686.863 1579.82,686.863 1580.37,686.863 1580.93,686.863 1581.49,686.863 1582.05,686.863 1582.61,686.863 1583.17,686.863 1583.73,686.863 1584.29,686.863 1584.85,686.863 1585.41,686.863 1585.97,686.863 1586.53,686.863 1587.09,686.863 1587.65,686.863 1588.2,686.863 1588.76,686.863 1589.32,686.863 1589.88,686.863 1590.44,686.863 1591,686.863 1591.56,686.863 1592.12,686.863 1592.68,686.863 1593.24,686.863 1593.8,686.863 1594.36,686.863 1594.92,686.863 1595.47,686.863 1596.03,686.863 1596.59,686.863 1597.15,686.863 1597.71,686.863 1598.27,686.863 1598.83,686.863 1599.39,686.863 1599.95,686.863 1600.51,686.863 1601.07,686.863 1601.63,686.863 1602.19,686.863 1602.74,686.863 1603.3,686.863 1603.86,686.863 1604.42,686.863 1604.98,686.863 1605.54,686.863 1606.1,686.863 1606.66,686.863 1607.22,686.863 1607.78,686.863 1608.34,686.863 1608.9,686.863 1609.46,686.863 1610.02,686.863 1610.57,686.863 1611.13,686.863 1611.69,686.863 1612.25,686.863 1612.81,686.863 1613.37,686.863 1613.93,686.863 1614.49,686.863 1615.05,686.863 1615.61,686.863 1616.17,686.863 1616.73,686.863 1617.29,686.863 1617.84,686.863 1618.4,686.863 1618.96,686.863 1619.52,686.863 1620.08,686.863 1620.64,686.863 1621.2,686.863 1621.76,686.863 1622.32,686.863 1622.88,686.863 1623.44,686.863 1624,686.863 1624.56,686.863 1625.11,686.863 1625.67,686.863 1626.23,686.863 1626.79,686.863 1627.35,686.863 1627.91,686.863 1628.47,686.863 1629.03,686.863 1629.59,686.863 1630.15,686.863 1630.71,686.863 1631.27,686.863 1631.83,686.863 1632.39,686.863 1632.94,686.863 1633.5,686.863 1634.06,686.863 1634.62,686.863 1635.18,686.863 1635.74,686.863 1636.3,686.863 1636.86,686.863 1637.42,686.863 1637.98,686.863 1638.54,686.863 1639.1,686.863 1639.66,686.863 1640.21,686.863 1640.77,686.863 1641.33,686.863 1641.89,686.863 1642.45,686.863 1643.01,686.863 1643.57,686.863 1644.13,686.863 1644.69,686.863 1645.25,686.863 1645.81,686.863 1646.37,686.863 1646.93,686.863 1647.48,686.863 1648.04,686.863 1648.6,686.863 1649.16,686.863 1649.72,686.863 1650.28,686.863 1650.84,686.863 1651.4,686.863 1651.96,686.863 1652.52,686.863 1653.08,686.863 1653.64,686.863 1654.2,686.863 1654.76,686.863 1655.31,686.863 1655.87,686.863 1656.43,686.863 1656.99,686.863 1657.55,686.863 1658.11,686.863 1658.67,686.863 1659.23,686.863 1659.79,686.863 1660.35,686.863 1660.91,686.863 1661.47,686.863 1662.03,686.863 1662.58,686.863 1663.14,686.863 1663.7,686.863 1664.26,686.863 1664.82,686.863 1665.38,686.863 1665.94,686.863 1666.5,686.863 1667.06,686.863 1667.62,686.863 1668.18,686.863 1668.74,686.863 1669.3,686.863 1669.85,686.863 1670.41,686.863 1670.97,686.863 1671.53,686.863 1672.09,686.863 1672.65,686.863 1673.21,686.863 1673.77,686.863 1674.33,686.863 1674.89,686.863 1675.45,686.863 1676.01,686.863 1676.57,686.863 1677.13,686.863 1677.68,686.863 1678.24,686.863 1678.8,686.863 1679.36,686.863 1679.92,686.863 1680.48,686.863 1681.04,686.863 1681.6,686.863 1682.16,686.863 1682.72,686.863 1683.28,686.863 1683.84,686.863 1684.4,686.863 1684.95,686.863 1685.51,686.863 1686.07,686.863 1686.63,686.863 1687.19,686.863 1687.75,686.863 1688.31,686.863 1688.87,686.863 1689.43,686.863 1689.99,686.863 1690.55,686.863 1691.11,686.863 1691.67,686.863 1692.23,686.863 1692.78,686.863 1693.34,686.863 1693.9,686.863 1694.46,686.863 1695.02,686.863 1695.58,686.863 1696.14,686.863 1696.7,686.863 1697.26,686.863 1697.82,686.863 1698.38,686.863 1698.94,686.863 1699.5,686.863 1700.05,686.863 1700.61,686.863 1701.17,686.863 1701.73,686.863 1702.29,686.863 1702.85,686.863 1703.41,686.863 1703.97,686.863 1704.53,686.863 1705.09,686.863 1705.65,686.863 1706.21,686.863 1706.77,686.863 1707.32,686.863 1707.88,686.863 1708.44,686.863 1709,686.863 1709.56,686.863 1710.12,686.863 1710.68,686.863 1711.24,686.863 1711.8,686.863 1712.36,686.863 1712.92,686.863 1713.48,686.863 1714.04,686.863 1714.6,686.863 1715.15,686.863 1715.71,686.863 1716.27,686.863 1716.83,686.863 1717.39,686.863 1717.95,686.863 1718.51,686.863 1719.07,686.863 1719.63,686.863 1720.19,686.863 1720.75,686.863 1721.31,686.863 1721.87,686.863 1722.42,686.863 1722.98,686.863 1723.54,686.863 1724.1,686.863 1724.66,686.863 1725.22,686.863 1725.78,686.863 1726.34,686.863 1726.9,686.863 1727.46,686.863 1728.02,686.863 1728.58,686.863 1729.14,686.863 1729.69,686.863 1730.25,686.863 1730.81,686.863 1731.37,686.863 1731.93,686.863 1732.49,686.863 1733.05,686.863 1733.61,686.863 1734.17,686.863 1734.73,686.863 1735.29,686.863 1735.85,686.863 1736.41,686.863 1736.97,686.863 1737.52,686.863 1738.08,686.863 1738.64,686.863 1739.2,686.863 1739.76,686.863 1740.32,686.863 1740.88,686.863 1741.44,686.863 1742,686.863 1742.56,686.863 1743.12,686.863 1743.68,686.863 1744.24,686.863 1744.79,686.863 1745.35,686.863 1745.91,686.863 1746.47,686.863 1747.03,686.863 1747.59,686.863 1748.15,686.863 1748.71,686.863 1749.27,686.863 1749.83,686.863 1750.39,686.863 1750.95,686.863 1751.51,686.863 1752.06,686.863 1752.62,686.863 1753.18,686.863 1753.74,686.863 1754.3,686.863 1754.86,686.863 1755.42,686.863 1755.98,686.863 1756.54,686.863 1757.1,686.863 1757.66,686.863 1758.22,686.863 1758.78,686.863 1759.34,686.863 1759.89,686.863 1760.45,686.863 1761.01,686.863 1761.57,686.863 1762.13,686.863 1762.69,686.863 1763.25,686.863 1763.81,686.863 1764.37,686.863 1764.93,686.863 1765.49,686.863 1766.05,686.863 1766.61,686.863 1767.16,686.863 1767.72,686.863 1768.28,686.863 1768.84,686.863 1769.4,686.863 1769.96,686.863 1770.52,686.863 1771.08,686.863 1771.64,686.863 1772.2,686.863 1772.76,686.863 1773.32,686.863 1773.88,686.863 1774.43,686.863 1774.99,686.863 1775.55,686.863 1776.11,686.863 1776.67,686.863 1777.23,686.863 1777.79,686.863 1778.35,686.863 1778.91,686.863 1779.47,686.863 1780.03,686.863 1780.59,686.863 1781.15,686.863 1781.71,686.863 1782.26,686.863 1782.82,686.863 1783.38,686.863 1783.94,686.863 1784.5,686.863 1785.06,686.863 1785.62,686.863 1786.18,686.863 1786.74,686.863 1787.3,686.863 1787.86,686.863 1788.42,686.863 1788.98,686.863 1789.53,686.863 1790.09,686.863 1790.65,686.863 1791.21,686.863 1791.77,686.863 1792.33,686.863 1792.89,686.863 1793.45,686.863 1794.01,686.863 1794.57,686.863 1795.13,686.863 1795.69,686.863 1796.25,686.863 1796.8,686.863 1797.36,686.863 1797.92,686.863 1798.48,686.863 1799.04,686.863 1799.6,686.863 1800.16,686.863 1800.72,686.863 1801.28,686.863 1801.84,686.863 1802.4,686.863 1802.96,686.863 1803.52,686.863 1804.08,686.863 1804.63,686.863 1805.19,686.863 1805.75,686.863 1806.31,686.863 1806.87,686.863 1807.43,686.863 1807.99,686.863 1808.55,686.863 1809.11,686.863 1809.67,686.863 1810.23,686.863 1810.79,686.863 1811.35,686.863 1811.9,686.863 1812.46,686.863 1813.02,686.863 1813.58,686.863 1814.14,686.863 1814.7,686.863 1815.26,686.863 1815.82,686.863 1816.38,686.863 1816.94,686.863 1817.5,686.863 1818.06,686.863 1818.62,686.863 1819.18,686.863 1819.73,686.863 1820.29,686.863 1820.85,686.863 1821.41,686.863 1821.97,686.863 1822.53,686.863 1823.09,686.863 1823.65,686.863 1824.21,686.863 1824.77,686.863 1825.33,686.863 1825.89,686.863 1826.45,686.863 1827,686.863 1827.56,686.863 1828.12,686.863 1828.68,686.863 1829.24,686.863 1829.8,686.863 1830.36,686.863 1830.92,686.863 1831.48,686.863 1832.04,686.863 1832.6,686.863 1833.16,686.863 1833.72,686.863 1834.27,686.863 1834.83,686.863 1835.39,686.863 1835.95,686.863 1836.51,686.863 1837.07,686.863 1837.63,686.863 1838.19,686.863 \"/>\n<path clip-path=\"url(#clip383)\" d=\"M720.247 684.281 L720.806 684.281 L721.365 684.281 L721.924 684.281 L722.484 684.281 L723.043 684.281 L723.602 684.281 L724.161 684.281 L724.721 684.281 L725.28 684.281 L725.839 684.281 L726.398 684.281 L726.958 684.281 L727.517 684.281 L728.076 684.281 L728.635 684.281 L729.195 684.281 L729.754 684.281 L730.313 684.281 L730.872 684.281 L731.432 684.281 L731.991 684.281 L732.55 684.281 L733.109 684.281 L733.669 684.281 L734.228 684.281 L734.787 684.281 L735.346 684.281 L735.906 684.281 L736.465 684.281 L737.024 684.281 L737.583 684.281 L738.143 684.281 L738.702 684.281 L739.261 684.281 L739.82 684.281 L740.38 684.281 L740.939 684.281 L741.498 684.281 L742.057 684.281 L742.617 684.281 L743.176 684.281 L743.735 684.281 L744.294 684.281 L744.854 684.281 L745.413 684.281 L745.972 684.281 L746.531 684.281 L747.091 684.281 L747.65 684.281 L748.209 684.281 L748.768 684.281 L749.328 684.281 L749.887 684.281 L750.446 684.281 L751.005 684.281 L751.565 684.281 L752.124 684.281 L752.683 684.281 L753.242 684.281 L753.802 684.281 L754.361 684.281 L754.92 684.281 L755.479 684.281 L756.039 684.281 L756.598 684.281 L757.157 684.281 L757.716 684.281 L758.276 684.281 L758.835 684.281 L759.394 684.281 L759.953 684.281 L760.513 684.281 L761.072 684.281 L761.631 684.281 L762.19 684.281 L762.75 684.281 L763.309 684.281 L763.868 684.281 L764.427 684.281 L764.987 684.281 L765.546 684.281 L766.105 684.281 L766.664 684.281 L767.224 684.281 L767.783 684.281 L768.342 684.281 L768.901 684.281 L769.461 684.281 L770.02 684.281 L770.579 684.281 L771.138 684.281 L771.698 684.281 L772.257 684.281 L772.816 684.281 L773.375 684.281 L773.935 684.281 L774.494 684.281 L775.053 684.281 L775.612 684.281 L776.172 684.281 L776.731 684.281 L777.29 684.281 L777.849 684.281 L778.409 684.281 L778.968 684.281 L779.527 684.281 L780.086 684.281 L780.646 684.281 L781.205 684.281 L781.764 684.281 L782.323 684.281 L782.883 684.281 L783.442 684.281 L784.001 684.281 L784.56 684.281 L785.12 684.281 L785.679 684.281 L786.238 684.281 L786.797 684.281 L787.357 684.281 L787.916 684.281 L788.475 684.281 L789.034 684.281 L789.594 684.281 L790.153 684.281 L790.712 684.281 L791.271 684.281 L791.831 684.281 L792.39 684.281 L792.949 684.281 L793.508 684.281 L794.068 684.281 L794.627 684.281 L795.186 684.281 L795.745 684.281 L796.305 684.281 L796.864 684.281 L797.423 684.281 L797.982 684.281 L798.542 684.281 L799.101 684.281 L799.66 684.281 L800.219 684.281 L800.779 684.281 L801.338 684.281 L801.897 684.281 L802.456 684.281 L803.016 684.281 L803.575 684.281 L804.134 684.281 L804.693 684.281 L805.253 684.281 L805.812 684.281 L806.371 684.281 L806.931 684.281 L807.49 684.281 L808.049 684.281 L808.608 684.281 L809.168 684.281 L809.727 684.281 L810.286 684.281 L810.845 684.281 L811.405 684.281 L811.964 684.281 L812.523 684.281 L813.082 684.281 L813.642 684.281 L814.201 684.281 L814.76 684.281 L815.319 684.281 L815.879 684.281 L816.438 684.281 L816.997 684.281 L817.556 684.281 L818.116 684.281 L818.675 684.281 L819.234 684.281 L819.793 684.281 L820.353 684.281 L820.912 684.281 L821.471 684.281 L822.03 684.281 L822.59 684.281 L823.149 684.281 L823.708 684.281 L824.267 684.281 L824.827 684.281 L825.386 684.281 L825.945 684.281 L826.504 684.281 L827.064 684.281 L827.623 684.281 L828.182 684.281 L828.741 684.281 L829.301 684.281 L829.86 684.281 L830.419 684.281 L830.978 684.281 L831.538 684.281 L832.097 684.281 L832.656 684.281 L833.215 684.281 L833.775 684.281 L834.334 684.281 L834.893 684.281 L835.452 684.281 L836.012 684.281 L836.571 684.281 L837.13 684.281 L837.689 684.281 L838.249 684.281 L838.808 684.281 L839.367 684.281 L839.926 684.281 L840.486 684.281 L841.045 684.281 L841.604 684.281 L842.163 684.281 L842.723 684.281 L843.282 684.281 L843.841 684.281 L844.4 684.281 L844.96 684.281 L845.519 684.281 L846.078 684.281 L846.637 684.281 L847.197 684.281 L847.756 684.281 L848.315 684.281 L848.874 684.281 L849.434 684.281 L849.993 684.281 L850.552 684.281 L851.111 684.281 L851.671 684.281 L852.23 684.281 L852.789 684.281 L853.348 684.281 L853.908 684.281 L854.467 684.281 L855.026 684.281 L855.585 684.281 L856.145 684.281 L856.704 684.281 L857.263 684.281 L857.822 684.281 L858.382 684.281 L858.941 684.281 L859.5 684.281 L860.059 684.281 L860.619 684.281 L861.178 684.281 L861.737 684.281 L862.296 684.281 L862.856 684.281 L863.415 684.281 L863.974 684.281 L864.533 684.281 L865.093 684.281 L865.652 684.281 L866.211 684.281 L866.77 684.281 L867.33 684.281 L867.889 684.281 L868.448 684.281 L869.007 684.281 L869.567 684.281 L870.126 684.281 L870.685 684.281 L871.244 684.281 L871.804 684.281 L872.363 684.281 L872.922 684.281 L873.481 684.281 L874.041 684.281 L874.6 684.281 L875.159 684.281 L875.718 684.281 L876.278 684.281 L876.837 684.281 L877.396 684.281 L877.955 684.281 L878.515 684.281 L879.074 684.281 L879.633 684.281 L880.192 684.281 L880.752 684.281 L881.311 684.281 L881.87 684.281 L882.429 684.281 L882.989 684.281 L883.548 684.281 L884.107 684.281 L884.666 684.281 L885.226 684.281 L885.785 684.281 L886.344 684.281 L886.903 684.281 L887.463 684.281 L888.022 684.281 L888.581 684.281 L889.14 684.281 L889.7 684.281 L890.259 684.281 L890.818 684.281 L891.377 684.281 L891.937 684.281 L892.496 684.281 L893.055 684.281 L893.614 684.281 L894.174 684.281 L894.733 684.281 L895.292 684.281 L895.851 684.281 L896.411 684.281 L896.97 684.281 L897.529 684.281 L898.088 684.281 L898.648 684.281 L899.207 684.281 L899.766 684.281 L900.325 684.281 L900.885 684.281 L901.444 684.281 L902.003 684.281 L902.562 684.281 L903.122 684.281 L903.681 684.281 L904.24 684.281 L904.799 684.281 L905.359 684.281 L905.918 684.281 L906.477 684.281 L907.036 684.281 L907.596 684.281 L908.155 684.281 L908.714 684.281 L909.273 684.281 L909.833 684.281 L910.392 684.281 L910.951 684.281 L911.51 684.281 L912.07 684.281 L912.629 684.281 L913.188 684.281 L913.747 684.281 L914.307 684.281 L914.866 684.281 L915.425 684.281 L915.984 684.281 L916.544 684.281 L917.103 684.281 L917.662 684.281 L918.221 684.281 L918.781 684.281 L919.34 684.281 L919.899 684.281 L920.458 684.281 L921.018 684.281 L921.577 684.281 L922.136 684.281 L922.695 684.281 L923.255 684.281 L923.814 684.281 L924.373 684.281 L924.932 684.281 L925.492 684.281 L926.051 684.281 L926.61 684.281 L927.169 684.281 L927.729 684.281 L928.288 684.281 L928.847 684.281 L929.406 684.281 L929.966 684.281 L930.525 684.281 L931.084 684.281 L931.644 684.281 L932.203 684.281 L932.762 684.281 L933.321 684.281 L933.881 684.281 L934.44 684.281 L934.999 684.281 L935.558 684.281 L936.118 684.281 L936.677 684.281 L937.236 684.281 L937.795 684.281 L938.355 684.281 L938.914 684.281 L939.473 684.281 L940.032 684.281 L940.592 684.281 L941.151 684.281 L941.71 684.281 L942.269 684.281 L942.829 684.281 L943.388 684.281 L943.947 684.281 L944.506 684.281 L945.066 684.281 L945.625 684.281 L946.184 684.281 L946.743 684.281 L947.303 684.281 L947.862 684.281 L948.421 684.281 L948.98 684.281 L949.54 684.281 L950.099 684.281 L950.658 684.281 L951.217 684.281 L951.777 684.281 L952.336 684.281 L952.895 684.281 L953.454 684.281 L954.014 684.281 L954.573 684.281 L955.132 684.281 L955.691 684.281 L956.251 684.281 L956.81 684.281 L957.369 684.281 L957.928 684.281 L958.488 684.281 L959.047 684.281 L959.606 684.281 L960.165 684.281 L960.725 684.281 L961.284 684.281 L961.843 684.281 L962.402 684.281 L962.962 684.281 L963.521 684.281 L964.08 684.281 L964.639 684.281 L965.199 684.281 L965.758 684.281 L966.317 684.281 L966.876 684.281 L967.436 684.281 L967.995 684.281 L968.554 684.281 L969.113 684.281 L969.673 684.281 L970.232 684.281 L970.791 684.281 L971.35 684.281 L971.91 684.281 L972.469 684.281 L973.028 684.281 L973.587 684.281 L974.147 684.281 L974.706 684.281 L975.265 684.281 L975.824 684.281 L976.384 684.281 L976.943 684.281 L977.502 684.281 L978.061 684.281 L978.621 684.281 L979.18 684.281 L979.739 684.281 L980.298 684.281 L980.858 684.281 L981.417 684.281 L981.976 684.281 L982.535 684.281 L983.095 684.281 L983.654 684.281 L984.213 684.281 L984.772 684.281 L985.332 684.281 L985.891 684.281 L986.45 684.281 L987.009 684.281 L987.569 684.281 L988.128 684.281 L988.687 684.281 L989.246 684.281 L989.806 684.281 L990.365 684.281 L990.924 684.281 L991.483 684.281 L992.043 684.281 L992.602 684.281 L993.161 684.281 L993.72 684.281 L994.28 684.281 L994.839 684.281 L995.398 684.281 L995.957 684.281 L996.517 684.281 L997.076 684.281 L997.635 684.281 L998.194 684.281 L998.754 684.281 L999.313 684.281 L999.872 684.281 L1000.43 684.281 L1000.99 684.281 L1001.55 684.281 L1002.11 684.281 L1002.67 684.281 L1003.23 684.281 L1003.79 684.281 L1004.35 684.281 L1004.91 684.281 L1005.46 684.281 L1006.02 684.281 L1006.58 684.281 L1007.14 684.281 L1007.7 684.281 L1008.26 684.281 L1008.82 684.281 L1009.38 684.281 L1009.94 684.281 L1010.5 684.281 L1011.06 684.281 L1011.62 684.281 L1012.18 684.281 L1012.73 684.281 L1013.29 684.281 L1013.85 684.281 L1014.41 684.281 L1014.97 684.281 L1015.53 684.281 L1016.09 684.281 L1016.65 684.281 L1017.21 684.281 L1017.77 684.281 L1018.33 684.281 L1018.89 684.281 L1019.45 684.281 L1020.01 684.281 L1020.56 684.281 L1021.12 684.281 L1021.68 684.281 L1022.24 684.281 L1022.8 684.281 L1023.36 684.281 L1023.92 684.281 L1024.48 684.281 L1025.04 684.281 L1025.6 684.281 L1026.16 684.281 L1026.72 684.281 L1027.28 684.281 L1027.83 684.281 L1028.39 684.281 L1028.95 684.281 L1029.51 684.281 L1030.07 684.281 L1030.63 684.281 L1031.19 684.281 L1031.75 684.281 L1032.31 684.281 L1032.87 684.281 L1033.43 684.281 L1033.99 684.281 L1034.55 684.281 L1035.1 684.281 L1035.66 684.281 L1036.22 684.281 L1036.78 684.281 L1037.34 684.281 L1037.9 684.281 L1038.46 684.281 L1039.02 684.281 L1039.58 684.281 L1040.14 684.281 L1040.7 684.281 L1041.26 684.281 L1041.82 684.281 L1042.38 684.281 L1042.93 684.281 L1043.49 684.281 L1044.05 684.281 L1044.61 684.281 L1045.17 684.281 L1045.73 684.281 L1046.29 684.281 L1046.85 684.281 L1047.41 684.281 L1047.97 684.281 L1048.53 684.281 L1049.09 684.281 L1049.65 684.281 L1050.2 684.281 L1050.76 684.281 L1051.32 684.281 L1051.88 684.281 L1052.44 684.281 L1053 684.281 L1053.56 684.281 L1054.12 684.281 L1054.68 684.281 L1055.24 684.281 L1055.8 684.281 L1056.36 684.281 L1056.92 684.281 L1057.48 684.281 L1058.03 684.281 L1058.59 684.281 L1059.15 684.281 L1059.71 684.281 L1060.27 684.281 L1060.83 684.281 L1061.39 684.281 L1061.95 684.281 L1062.51 684.281 L1063.07 684.281 L1063.63 684.281 L1064.19 684.281 L1064.75 684.281 L1065.3 684.281 L1065.86 684.281 L1066.42 684.281 L1066.98 684.281 L1067.54 684.281 L1068.1 684.281 L1068.66 684.281 L1069.22 684.281 L1069.78 684.281 L1070.34 684.281 L1070.9 684.281 L1071.46 684.281 L1072.02 684.281 L1072.57 684.281 L1073.13 684.281 L1073.69 684.281 L1074.25 684.281 L1074.81 684.281 L1075.37 684.281 L1075.93 684.281 L1076.49 684.281 L1077.05 684.281 L1077.61 684.281 L1078.17 684.281 L1078.73 684.281 L1079.29 684.281 L1079.85 684.281 L1080.4 684.281 L1080.96 684.281 L1081.52 684.281 L1082.08 684.281 L1082.64 684.281 L1083.2 684.281 L1083.76 684.281 L1084.32 684.281 L1084.88 684.281 L1085.44 684.281 L1086 684.281 L1086.56 684.281 L1087.12 684.281 L1087.67 684.281 L1088.23 684.281 L1088.79 684.281 L1089.35 684.281 L1089.91 684.281 L1090.47 684.281 L1091.03 684.281 L1091.59 684.281 L1092.15 684.281 L1092.71 684.281 L1093.27 684.281 L1093.83 684.281 L1094.39 684.281 L1094.94 684.281 L1095.5 684.281 L1096.06 684.281 L1096.62 684.281 L1097.18 684.281 L1097.74 684.281 L1098.3 684.281 L1098.86 684.281 L1099.42 684.281 L1099.98 684.281 L1100.54 684.281 L1101.1 684.281 L1101.66 684.281 L1102.22 684.281 L1102.77 684.281 L1103.33 684.281 L1103.89 684.281 L1104.45 684.281 L1105.01 684.281 L1105.57 684.281 L1106.13 684.281 L1106.69 684.281 L1107.25 684.281 L1107.81 684.281 L1108.37 684.281 L1108.93 684.281 L1109.49 684.281 L1110.04 684.281 L1110.6 684.281 L1111.16 684.281 L1111.72 684.281 L1112.28 684.281 L1112.84 684.281 L1113.4 684.281 L1113.96 684.281 L1114.52 684.281 L1115.08 684.281 L1115.64 684.281 L1116.2 684.281 L1116.76 684.281 L1117.31 684.281 L1117.87 684.281 L1118.43 684.281 L1118.99 684.281 L1119.55 684.281 L1120.11 684.281 L1120.67 684.281 L1121.23 684.281 L1121.79 684.281 L1122.35 684.281 L1122.91 684.281 L1123.47 684.281 L1124.03 684.281 L1124.59 684.281 L1125.14 684.281 L1125.7 684.281 L1126.26 684.281 L1126.82 684.281 L1127.38 684.281 L1127.94 684.281 L1128.5 684.281 L1129.06 684.281 L1129.62 684.281 L1130.18 684.281 L1130.74 684.281 L1131.3 684.281 L1131.86 684.281 L1132.41 684.281 L1132.97 684.281 L1133.53 684.281 L1134.09 684.281 L1134.65 684.281 L1135.21 684.281 L1135.77 684.281 L1136.33 684.281 L1136.89 684.281 L1137.45 684.281 L1138.01 684.281 L1138.57 684.281 L1139.13 684.281 L1139.68 684.281 L1140.24 684.281 L1140.8 684.281 L1141.36 684.281 L1141.92 684.281 L1142.48 684.281 L1143.04 684.281 L1143.6 684.281 L1144.16 684.281 L1144.72 684.281 L1145.28 684.281 L1145.84 684.281 L1146.4 684.281 L1146.96 684.281 L1147.51 684.281 L1148.07 684.281 L1148.63 684.281 L1149.19 684.281 L1149.75 684.281 L1150.31 684.281 L1150.87 684.281 L1151.43 684.281 L1151.99 684.281 L1152.55 684.281 L1153.11 684.281 L1153.67 684.281 L1154.23 684.281 L1154.78 684.281 L1155.34 684.281 L1155.9 684.281 L1156.46 684.281 L1157.02 684.281 L1157.58 684.281 L1158.14 684.281 L1158.7 684.281 L1159.26 684.281 L1159.82 684.281 L1160.38 684.281 L1160.94 684.281 L1161.5 684.281 L1162.05 684.281 L1162.61 684.281 L1163.17 684.281 L1163.73 684.281 L1164.29 684.281 L1164.85 684.281 L1165.41 684.281 L1165.97 684.281 L1166.53 684.281 L1167.09 684.281 L1167.65 684.281 L1168.21 684.281 L1168.77 684.281 L1169.33 684.281 L1169.88 684.281 L1170.44 684.281 L1171 684.281 L1171.56 684.281 L1172.12 684.281 L1172.68 684.281 L1173.24 684.281 L1173.8 684.281 L1174.36 684.281 L1174.92 684.281 L1175.48 684.281 L1176.04 684.281 L1176.6 684.281 L1177.15 684.281 L1177.71 684.281 L1178.27 684.281 L1178.83 684.281 L1179.39 684.281 L1179.95 684.281 L1180.51 684.281 L1181.07 684.281 L1181.63 684.281 L1182.19 684.281 L1182.75 684.281 L1183.31 684.281 L1183.87 684.281 L1184.43 684.281 L1184.98 684.281 L1185.54 684.281 L1186.1 684.281 L1186.66 684.281 L1187.22 684.281 L1187.78 684.281 L1188.34 684.281 L1188.9 684.281 L1189.46 684.281 L1190.02 684.281 L1190.58 684.281 L1191.14 684.281 L1191.7 684.281 L1192.25 684.281 L1192.81 684.281 L1193.37 684.281 L1193.93 684.281 L1194.49 684.281 L1195.05 684.281 L1195.61 684.281 L1196.17 684.281 L1196.73 684.281 L1197.29 684.281 L1197.85 684.281 L1198.41 684.281 L1198.97 684.281 L1199.52 684.281 L1200.08 684.281 L1200.64 684.281 L1201.2 684.281 L1201.76 684.281 L1202.32 684.281 L1202.88 684.281 L1203.44 684.281 L1204 684.281 L1204.56 684.281 L1205.12 684.281 L1205.68 684.281 L1206.24 684.281 L1206.8 684.281 L1207.35 684.281 L1207.91 684.281 L1208.47 684.281 L1209.03 684.281 L1209.59 684.281 L1210.15 684.281 L1210.71 684.281 L1211.27 684.281 L1211.83 684.281 L1212.39 684.281 L1212.95 684.281 L1213.51 684.281 L1214.07 684.281 L1214.62 684.281 L1215.18 684.281 L1215.74 684.281 L1216.3 684.281 L1216.86 684.281 L1217.42 684.281 L1217.98 684.281 L1218.54 684.281 L1219.1 684.281 L1219.66 684.281 L1220.22 684.281 L1220.78 684.281 L1221.34 684.281 L1221.89 684.281 L1222.45 684.281 L1223.01 684.281 L1223.57 684.281 L1224.13 684.281 L1224.69 684.281 L1225.25 684.281 L1225.81 684.281 L1226.37 684.281 L1226.93 684.281 L1227.49 684.281 L1228.05 684.281 L1228.61 684.281 L1229.17 684.281 L1229.72 684.281 L1230.28 684.281 L1230.84 684.281 L1231.4 684.281 L1231.96 684.281 L1232.52 684.281 L1233.08 684.281 L1233.64 684.281 L1234.2 684.281 L1234.76 684.281 L1235.32 684.281 L1235.88 684.281 L1236.44 684.281 L1236.99 684.281 L1237.55 684.281 L1238.11 684.281 L1238.67 684.281 L1239.23 684.281 L1239.79 684.281 L1240.35 684.281 L1240.91 684.281 L1241.47 684.281 L1242.03 684.281 L1242.59 684.281 L1243.15 684.281 L1243.71 684.281 L1244.26 684.281 L1244.82 684.281 L1245.38 684.281 L1245.94 684.281 L1246.5 684.281 L1247.06 684.281 L1247.62 684.281 L1248.18 684.281 L1248.74 684.281 L1249.3 684.281 L1249.86 684.281 L1250.42 684.281 L1250.98 684.281 L1251.54 684.281 L1252.09 684.281 L1252.65 684.281 L1253.21 684.281 L1253.77 684.281 L1254.33 684.281 L1254.89 684.281 L1255.45 684.281 L1256.01 684.281 L1256.57 684.281 L1257.13 684.281 L1257.69 684.281 L1258.25 684.281 L1258.81 684.281 L1259.36 684.281 L1259.92 684.281 L1260.48 684.281 L1261.04 684.281 L1261.6 684.281 L1262.16 684.281 L1262.72 684.281 L1263.28 684.281 L1263.84 684.281 L1264.4 684.281 L1264.96 684.281 L1265.52 684.281 L1266.08 684.281 L1266.63 684.281 L1267.19 684.281 L1267.75 684.281 L1268.31 684.281 L1268.87 684.281 L1269.43 684.281 L1269.99 684.281 L1270.55 684.281 L1271.11 684.281 L1271.67 684.281 L1272.23 684.281 L1272.79 684.281 L1273.35 684.281 L1273.91 684.281 L1274.46 684.281 L1275.02 684.281 L1275.58 684.281 L1276.14 684.281 L1276.7 684.281 L1277.26 684.281 L1277.82 684.281 L1278.38 684.281 L1278.94 684.281 L1279.5 684.281 L1280.06 684.281 L1280.62 684.281 L1281.18 684.281 L1281.73 684.281 L1282.29 684.281 L1282.85 684.281 L1283.41 684.281 L1283.97 684.281 L1284.53 684.281 L1285.09 684.281 L1285.65 684.281 L1286.21 684.281 L1286.77 684.281 L1287.33 684.281 L1287.89 684.281 L1288.45 684.281 L1289 684.281 L1289.56 684.281 L1290.12 684.281 L1290.68 684.281 L1291.24 684.281 L1291.8 684.281 L1292.36 684.281 L1292.92 684.281 L1293.48 684.281 L1294.04 684.281 L1294.6 684.281 L1295.16 684.281 L1295.72 684.281 L1296.28 684.281 L1296.83 684.281 L1297.39 684.281 L1297.95 684.281 L1298.51 684.281 L1299.07 684.281 L1299.63 684.281 L1300.19 684.281 L1300.75 684.281 L1301.31 684.281 L1301.87 684.281 L1302.43 684.281 L1302.99 684.281 L1303.55 684.281 L1304.1 684.281 L1304.66 684.281 L1305.22 684.281 L1305.78 684.281 L1306.34 684.281 L1306.9 684.281 L1307.46 684.281 L1308.02 684.281 L1308.58 684.281 L1309.14 684.281 L1309.7 684.281 L1310.26 684.281 L1310.82 684.281 L1311.38 684.281 L1311.93 684.281 L1312.49 684.281 L1313.05 684.281 L1313.61 684.281 L1314.17 684.281 L1314.73 684.281 L1315.29 684.281 L1315.85 684.281 L1316.41 684.281 L1316.97 684.281 L1317.53 684.281 L1318.09 684.281 L1318.65 684.281 L1319.2 684.281 L1319.76 684.281 L1320.32 684.281 L1320.88 684.281 L1321.44 684.281 L1322 684.281 L1322.56 684.281 L1323.12 684.281 L1323.68 684.281 L1324.24 684.281 L1324.8 684.281 L1325.36 684.281 L1325.92 684.281 L1326.47 684.281 L1327.03 684.281 L1327.59 684.281 L1328.15 684.281 L1328.71 684.281 L1329.27 684.281 L1329.83 684.281 L1330.39 684.281 L1330.95 684.281 L1331.51 684.281 L1332.07 684.281 L1332.63 684.281 L1333.19 684.281 L1333.75 684.281 L1334.3 684.281 L1334.86 684.281 L1335.42 684.281 L1335.98 684.281 L1336.54 684.281 L1337.1 684.281 L1337.66 684.281 L1338.22 684.281 L1338.78 684.281 L1339.34 684.281 L1339.9 684.281 L1340.46 684.281 L1341.02 684.281 L1341.57 684.281 L1342.13 684.281 L1342.69 684.281 L1343.25 684.281 L1343.81 684.281 L1344.37 684.281 L1344.93 684.281 L1345.49 684.281 L1346.05 684.281 L1346.61 684.281 L1347.17 684.281 L1347.73 684.281 L1348.29 684.281 L1348.84 684.281 L1349.4 684.281 L1349.96 684.281 L1350.52 684.281 L1351.08 684.281 L1351.64 684.281 L1352.2 684.281 L1352.76 684.281 L1353.32 684.281 L1353.88 684.281 L1354.44 684.281 L1355 684.281 L1355.56 684.281 L1356.12 684.281 L1356.67 684.281 L1357.23 684.281 L1357.79 684.281 L1358.35 684.281 L1358.91 684.281 L1359.47 684.281 L1360.03 684.281 L1360.59 684.281 L1361.15 684.281 L1361.71 684.281 L1362.27 684.281 L1362.83 684.281 L1363.39 684.281 L1363.94 684.281 L1364.5 684.281 L1365.06 684.281 L1365.62 684.281 L1366.18 684.281 L1366.74 684.281 L1367.3 684.281 L1367.86 684.281 L1368.42 684.281 L1368.98 684.281 L1369.54 684.281 L1370.1 684.281 L1370.66 684.281 L1371.21 684.281 L1371.77 684.281 L1372.33 684.281 L1372.89 684.281 L1373.45 684.281 L1374.01 684.281 L1374.57 684.281 L1375.13 684.281 L1375.69 684.281 L1376.25 684.281 L1376.81 684.281 L1377.37 684.281 L1377.93 684.281 L1378.49 684.281 L1379.04 684.281 L1379.6 684.281 L1380.16 684.281 L1380.72 684.281 L1381.28 684.281 L1381.84 684.281 L1382.4 684.281 L1382.96 684.281 L1383.52 684.281 L1384.08 684.281 L1384.64 684.281 L1385.2 684.281 L1385.76 684.281 L1386.31 684.281 L1386.87 684.281 L1387.43 684.281 L1387.99 684.281 L1388.55 684.281 L1389.11 684.281 L1389.67 684.281 L1390.23 684.281 L1390.79 684.281 L1391.35 684.281 L1391.91 684.281 L1392.47 684.281 L1393.03 684.281 L1393.58 684.281 L1394.14 684.281 L1394.7 684.281 L1395.26 684.281 L1395.82 684.281 L1396.38 684.281 L1396.94 684.281 L1397.5 684.281 L1398.06 684.281 L1398.62 684.281 L1399.18 684.281 L1399.74 684.281 L1400.3 684.281 L1400.86 684.281 L1401.41 684.281 L1401.97 684.281 L1402.53 684.281 L1403.09 684.281 L1403.65 684.281 L1404.21 684.281 L1404.77 684.281 L1405.33 684.281 L1405.89 684.281 L1406.45 684.281 L1407.01 684.281 L1407.57 684.281 L1408.13 684.281 L1408.68 684.281 L1409.24 684.281 L1409.8 684.281 L1410.36 684.281 L1410.92 684.281 L1411.48 684.281 L1412.04 684.281 L1412.6 684.281 L1413.16 684.281 L1413.72 684.281 L1414.28 684.281 L1414.84 684.281 L1415.4 684.281 L1415.95 684.281 L1416.51 684.281 L1417.07 684.281 L1417.63 684.281 L1418.19 684.281 L1418.75 684.281 L1419.31 684.281 L1419.87 684.281 L1420.43 684.281 L1420.99 684.281 L1421.55 684.281 L1422.11 684.281 L1422.67 684.281 L1423.23 684.281 L1423.78 684.281 L1424.34 684.281 L1424.9 684.281 L1425.46 684.281 L1426.02 684.281 L1426.58 684.281 L1427.14 684.281 L1427.7 684.281 L1428.26 684.281 L1428.82 684.281 L1429.38 684.281 L1429.94 684.281 L1430.5 684.281 L1431.05 684.281 L1431.61 684.281 L1432.17 684.281 L1432.73 684.281 L1433.29 684.281 L1433.85 684.281 L1434.41 684.281 L1434.97 684.281 L1435.53 684.281 L1436.09 684.281 L1436.65 684.281 L1437.21 684.281 L1437.77 684.281 L1438.33 684.281 L1438.88 684.281 L1439.44 684.281 L1440 684.281 L1440.56 684.281 L1441.12 684.281 L1441.68 684.281 L1442.24 684.281 L1442.8 684.281 L1443.36 684.281 L1443.92 684.281 L1444.48 684.281 L1445.04 684.281 L1445.6 684.281 L1446.15 684.281 L1446.71 684.281 L1447.27 684.281 L1447.83 684.281 L1448.39 684.281 L1448.95 684.281 L1449.51 684.281 L1450.07 684.281 L1450.63 684.281 L1451.19 684.281 L1451.75 684.281 L1452.31 684.281 L1452.87 684.281 L1453.42 684.281 L1453.98 684.281 L1454.54 684.281 L1455.1 684.281 L1455.66 684.281 L1456.22 684.281 L1456.78 684.281 L1457.34 684.281 L1457.9 684.281 L1458.46 684.281 L1459.02 684.281 L1459.58 684.281 L1460.14 684.281 L1460.7 684.281 L1461.25 684.281 L1461.81 684.281 L1462.37 684.281 L1462.93 684.281 L1463.49 684.281 L1464.05 684.281 L1464.61 684.281 L1465.17 684.281 L1465.73 684.281 L1466.29 684.281 L1466.85 684.281 L1467.41 684.281 L1467.97 684.281 L1468.52 684.281 L1469.08 684.281 L1469.64 684.281 L1470.2 684.281 L1470.76 684.281 L1471.32 684.281 L1471.88 684.281 L1472.44 684.281 L1473 684.281 L1473.56 684.281 L1474.12 684.281 L1474.68 684.281 L1475.24 684.281 L1475.79 684.281 L1476.35 684.281 L1476.91 684.281 L1477.47 684.281 L1478.03 684.281 L1478.59 684.281 L1479.15 684.281 L1479.71 684.281 L1480.27 684.281 L1480.83 684.281 L1481.39 684.281 L1481.95 684.281 L1482.51 684.281 L1483.07 684.281 L1483.62 684.281 L1484.18 684.281 L1484.74 684.281 L1485.3 684.281 L1485.86 684.281 L1486.42 684.281 L1486.98 684.281 L1487.54 684.281 L1488.1 684.281 L1488.66 684.281 L1489.22 684.281 L1489.78 684.281 L1490.34 684.281 L1490.89 684.281 L1491.45 684.281 L1492.01 684.281 L1492.57 684.281 L1493.13 684.281 L1493.69 684.281 L1494.25 684.281 L1494.81 684.281 L1495.37 684.281 L1495.93 684.281 L1496.49 684.281 L1497.05 684.281 L1497.61 684.281 L1498.16 684.281 L1498.72 684.281 L1499.28 684.281 L1499.84 684.281 L1500.4 684.281 L1500.96 684.281 L1501.52 684.281 L1502.08 684.281 L1502.64 684.281 L1503.2 684.281 L1503.76 684.281 L1504.32 684.281 L1504.88 684.281 L1505.44 684.281 L1505.99 684.281 L1506.55 684.281 L1507.11 684.281 L1507.67 684.281 L1508.23 684.281 L1508.79 684.281 L1509.35 684.281 L1509.91 684.281 L1510.47 684.281 L1511.03 684.281 L1511.59 684.281 L1512.15 684.281 L1512.71 684.281 L1513.26 684.281 L1513.82 684.281 L1514.38 684.281 L1514.94 684.281 L1515.5 684.281 L1516.06 684.281 L1516.62 684.281 L1517.18 684.281 L1517.74 684.281 L1518.3 684.281 L1518.86 684.281 L1519.42 684.281 L1519.98 684.281 L1520.53 684.281 L1521.09 684.281 L1521.65 684.281 L1522.21 684.281 L1522.77 684.281 L1523.33 684.281 L1523.89 684.281 L1524.45 684.281 L1525.01 684.281 L1525.57 684.281 L1526.13 684.281 L1526.69 684.281 L1527.25 684.281 L1527.81 684.281 L1528.36 684.281 L1528.92 684.281 L1529.48 684.281 L1530.04 684.281 L1530.6 684.281 L1531.16 684.281 L1531.72 684.281 L1532.28 684.281 L1532.84 684.281 L1533.4 684.281 L1533.96 684.281 L1534.52 684.281 L1535.08 684.281 L1535.63 684.281 L1536.19 684.281 L1536.75 684.281 L1537.31 684.281 L1537.87 684.281 L1538.43 684.281 L1538.99 684.281 L1539.55 684.281 L1540.11 684.281 L1540.67 684.281 L1541.23 684.281 L1541.79 684.281 L1542.35 684.281 L1542.9 684.281 L1543.46 684.281 L1544.02 684.281 L1544.58 684.281 L1545.14 684.281 L1545.7 684.281 L1546.26 684.281 L1546.82 684.281 L1547.38 684.281 L1547.94 684.281 L1548.5 684.281 L1549.06 684.281 L1549.62 684.281 L1550.18 684.281 L1550.73 684.281 L1551.29 684.281 L1551.85 684.281 L1552.41 684.281 L1552.97 684.281 L1553.53 684.281 L1554.09 684.281 L1554.65 684.281 L1555.21 684.281 L1555.77 684.281 L1556.33 684.281 L1556.89 684.281 L1557.45 684.281 L1558 684.281 L1558.56 684.281 L1559.12 684.281 L1559.68 684.281 L1560.24 684.281 L1560.8 684.281 L1561.36 684.281 L1561.92 684.281 L1562.48 684.281 L1563.04 684.281 L1563.6 684.281 L1564.16 684.281 L1564.72 684.281 L1565.28 684.281 L1565.83 684.281 L1566.39 684.281 L1566.95 684.281 L1567.51 684.281 L1568.07 684.281 L1568.63 684.281 L1569.19 684.281 L1569.75 684.281 L1570.31 684.281 L1570.87 684.281 L1571.43 684.281 L1571.99 684.281 L1572.55 684.281 L1573.1 684.281 L1573.66 684.281 L1574.22 684.281 L1574.78 684.281 L1575.34 684.281 L1575.9 684.281 L1576.46 684.281 L1577.02 684.281 L1577.58 684.281 L1578.14 684.281 L1578.7 684.281 L1579.26 684.281 L1579.82 684.281 L1580.37 684.281 L1580.93 684.281 L1581.49 684.281 L1582.05 684.281 L1582.61 684.281 L1583.17 684.281 L1583.73 684.281 L1584.29 684.281 L1584.85 684.281 L1585.41 684.281 L1585.97 684.281 L1586.53 684.281 L1587.09 684.281 L1587.65 684.281 L1588.2 684.281 L1588.76 684.281 L1589.32 684.281 L1589.88 684.281 L1590.44 684.281 L1591 684.281 L1591.56 684.281 L1592.12 684.281 L1592.68 684.281 L1593.24 684.281 L1593.8 684.281 L1594.36 684.281 L1594.92 684.281 L1595.47 684.281 L1596.03 684.281 L1596.59 684.281 L1597.15 684.281 L1597.71 684.281 L1598.27 684.281 L1598.83 684.281 L1599.39 684.281 L1599.95 684.281 L1600.51 684.281 L1601.07 684.281 L1601.63 684.281 L1602.19 684.281 L1602.74 684.281 L1603.3 684.281 L1603.86 684.281 L1604.42 684.281 L1604.98 684.281 L1605.54 684.281 L1606.1 684.281 L1606.66 684.281 L1607.22 684.281 L1607.78 684.281 L1608.34 684.281 L1608.9 684.281 L1609.46 684.281 L1610.02 684.281 L1610.57 684.281 L1611.13 684.281 L1611.69 684.281 L1612.25 684.281 L1612.81 684.281 L1613.37 684.281 L1613.93 684.281 L1614.49 684.281 L1615.05 684.281 L1615.61 684.281 L1616.17 684.281 L1616.73 684.281 L1617.29 684.281 L1617.84 684.281 L1618.4 684.281 L1618.96 684.281 L1619.52 684.281 L1620.08 684.281 L1620.64 684.281 L1621.2 684.281 L1621.76 684.281 L1622.32 684.281 L1622.88 684.281 L1623.44 684.281 L1624 684.281 L1624.56 684.281 L1625.11 684.281 L1625.67 684.281 L1626.23 684.281 L1626.79 684.281 L1627.35 684.281 L1627.91 684.281 L1628.47 684.281 L1629.03 684.281 L1629.59 684.281 L1630.15 684.281 L1630.71 684.281 L1631.27 684.281 L1631.83 684.281 L1632.39 684.281 L1632.94 684.281 L1633.5 684.281 L1634.06 684.281 L1634.62 684.281 L1635.18 684.281 L1635.74 684.281 L1636.3 684.281 L1636.86 684.281 L1637.42 684.281 L1637.98 684.281 L1638.54 684.281 L1639.1 684.281 L1639.66 684.281 L1640.21 684.281 L1640.77 684.281 L1641.33 684.281 L1641.89 684.281 L1642.45 684.281 L1643.01 684.281 L1643.57 684.281 L1644.13 684.281 L1644.69 684.281 L1645.25 684.281 L1645.81 684.281 L1646.37 684.281 L1646.93 684.281 L1647.48 684.281 L1648.04 684.281 L1648.6 684.281 L1649.16 684.281 L1649.72 684.281 L1650.28 684.281 L1650.84 684.281 L1651.4 684.281 L1651.96 684.281 L1652.52 684.281 L1653.08 684.281 L1653.64 684.281 L1654.2 684.281 L1654.76 684.281 L1655.31 684.281 L1655.87 684.281 L1656.43 684.281 L1656.99 684.281 L1657.55 684.281 L1658.11 684.281 L1658.67 684.281 L1659.23 684.281 L1659.79 684.281 L1660.35 684.281 L1660.91 684.281 L1661.47 684.281 L1662.03 684.281 L1662.58 684.281 L1663.14 684.281 L1663.7 684.281 L1664.26 684.281 L1664.82 684.281 L1665.38 684.281 L1665.94 684.281 L1666.5 684.281 L1667.06 684.281 L1667.62 684.281 L1668.18 684.281 L1668.74 684.281 L1669.3 684.281 L1669.85 684.281 L1670.41 684.281 L1670.97 684.281 L1671.53 684.281 L1672.09 684.281 L1672.65 684.281 L1673.21 684.281 L1673.77 684.281 L1674.33 684.281 L1674.89 684.281 L1675.45 684.281 L1676.01 684.281 L1676.57 684.281 L1677.13 684.281 L1677.68 684.281 L1678.24 684.281 L1678.8 684.281 L1679.36 684.281 L1679.92 684.281 L1680.48 684.281 L1681.04 684.281 L1681.6 684.281 L1682.16 684.281 L1682.72 684.281 L1683.28 684.281 L1683.84 684.281 L1684.4 684.281 L1684.95 684.281 L1685.51 684.281 L1686.07 684.281 L1686.63 684.281 L1687.19 684.281 L1687.75 684.281 L1688.31 684.281 L1688.87 684.281 L1689.43 684.281 L1689.99 684.281 L1690.55 684.281 L1691.11 684.281 L1691.67 684.281 L1692.23 684.281 L1692.78 684.281 L1693.34 684.281 L1693.9 684.281 L1694.46 684.281 L1695.02 684.281 L1695.58 684.281 L1696.14 684.281 L1696.7 684.281 L1697.26 684.281 L1697.82 684.281 L1698.38 684.281 L1698.94 684.281 L1699.5 684.281 L1700.05 684.281 L1700.61 684.281 L1701.17 684.281 L1701.73 684.281 L1702.29 684.281 L1702.85 684.281 L1703.41 684.281 L1703.97 684.281 L1704.53 684.281 L1705.09 684.281 L1705.65 684.281 L1706.21 684.281 L1706.77 684.281 L1707.32 684.281 L1707.88 684.281 L1708.44 684.281 L1709 684.281 L1709.56 684.281 L1710.12 684.281 L1710.68 684.281 L1711.24 684.281 L1711.8 684.281 L1712.36 684.281 L1712.92 684.281 L1713.48 684.281 L1714.04 684.281 L1714.6 684.281 L1715.15 684.281 L1715.71 684.281 L1716.27 684.281 L1716.83 684.281 L1717.39 684.281 L1717.95 684.281 L1718.51 684.281 L1719.07 684.281 L1719.63 684.281 L1720.19 684.281 L1720.75 684.281 L1721.31 684.281 L1721.87 684.281 L1722.42 684.281 L1722.98 684.281 L1723.54 684.281 L1724.1 684.281 L1724.66 684.281 L1725.22 684.281 L1725.78 684.281 L1726.34 684.281 L1726.9 684.281 L1727.46 684.281 L1728.02 684.281 L1728.58 684.281 L1729.14 684.281 L1729.69 684.281 L1730.25 684.281 L1730.81 684.281 L1731.37 684.281 L1731.93 684.281 L1732.49 684.281 L1733.05 684.281 L1733.61 684.281 L1734.17 684.281 L1734.73 684.281 L1735.29 684.281 L1735.85 684.281 L1736.41 684.281 L1736.97 684.281 L1737.52 684.281 L1738.08 684.281 L1738.64 684.281 L1739.2 684.281 L1739.76 684.281 L1740.32 684.281 L1740.88 684.281 L1741.44 684.281 L1742 684.281 L1742.56 684.281 L1743.12 684.281 L1743.68 684.281 L1744.24 684.281 L1744.79 684.281 L1745.35 684.281 L1745.91 684.281 L1746.47 684.281 L1747.03 684.281 L1747.59 684.281 L1748.15 684.281 L1748.71 684.281 L1749.27 684.281 L1749.83 684.281 L1750.39 684.281 L1750.95 684.281 L1751.51 684.281 L1752.06 684.281 L1752.62 684.281 L1753.18 684.281 L1753.74 684.281 L1754.3 684.281 L1754.86 684.281 L1755.42 684.281 L1755.98 684.281 L1756.54 684.281 L1757.1 684.281 L1757.66 684.281 L1758.22 684.281 L1758.78 684.281 L1759.34 684.281 L1759.89 684.281 L1760.45 684.281 L1761.01 684.281 L1761.57 684.281 L1762.13 684.281 L1762.69 684.281 L1763.25 684.281 L1763.81 684.281 L1764.37 684.281 L1764.93 684.281 L1765.49 684.281 L1766.05 684.281 L1766.61 684.281 L1767.16 684.281 L1767.72 684.281 L1768.28 684.281 L1768.84 684.281 L1769.4 684.281 L1769.96 684.281 L1770.52 684.281 L1771.08 684.281 L1771.64 684.281 L1772.2 684.281 L1772.76 684.281 L1773.32 684.281 L1773.88 684.281 L1774.43 684.281 L1774.99 684.281 L1775.55 684.281 L1776.11 684.281 L1776.67 684.281 L1777.23 684.281 L1777.79 684.281 L1778.35 684.281 L1778.91 684.281 L1779.47 684.281 L1780.03 684.281 L1780.59 684.281 L1781.15 684.281 L1781.71 684.281 L1782.26 684.281 L1782.82 684.281 L1783.38 684.281 L1783.94 684.281 L1784.5 684.281 L1785.06 684.281 L1785.62 684.281 L1786.18 684.281 L1786.74 684.281 L1787.3 684.281 L1787.86 684.281 L1788.42 684.281 L1788.98 684.281 L1789.53 684.281 L1790.09 684.281 L1790.65 684.281 L1791.21 684.281 L1791.77 684.281 L1792.33 684.281 L1792.89 684.281 L1793.45 684.281 L1794.01 684.281 L1794.57 684.281 L1795.13 684.281 L1795.69 684.281 L1796.25 684.281 L1796.8 684.281 L1797.36 684.281 L1797.92 684.281 L1798.48 684.281 L1799.04 684.281 L1799.6 684.281 L1800.16 684.281 L1800.72 684.281 L1801.28 684.281 L1801.84 684.281 L1802.4 684.281 L1802.96 684.281 L1803.52 684.281 L1804.08 684.281 L1804.63 684.281 L1805.19 684.281 L1805.75 684.281 L1806.31 684.281 L1806.87 684.281 L1807.43 684.281 L1807.99 684.281 L1808.55 684.281 L1809.11 684.281 L1809.67 684.281 L1810.23 684.281 L1810.79 684.281 L1811.35 684.281 L1811.9 684.281 L1812.46 684.281 L1813.02 684.281 L1813.58 684.281 L1814.14 684.281 L1814.7 684.281 L1815.26 684.281 L1815.82 684.281 L1816.38 684.281 L1816.94 684.281 L1817.5 684.281 L1818.06 684.281 L1818.62 684.281 L1819.18 684.281 L1819.73 684.281 L1820.29 684.281 L1820.85 684.281 L1821.41 684.281 L1821.97 684.281 L1822.53 684.281 L1823.09 684.281 L1823.65 684.281 L1824.21 684.281 L1824.77 684.281 L1825.33 684.281 L1825.89 684.281 L1826.45 684.281 L1827 684.281 L1827.56 684.281 L1828.12 684.281 L1828.68 684.281 L1829.24 684.281 L1829.8 684.281 L1830.36 684.281 L1830.92 684.281 L1831.48 684.281 L1832.04 684.281 L1832.6 684.281 L1833.16 684.281 L1833.72 684.281 L1834.27 684.281 L1834.83 684.281 L1835.39 684.281 L1835.95 684.281 L1836.51 684.281 L1837.07 684.281 L1837.63 684.281 L1838.19 684.281 L1838.19 682.55 L1837.63 682.55 L1837.07 682.55 L1836.51 682.55 L1835.95 682.55 L1835.39 682.55 L1834.83 682.55 L1834.27 682.55 L1833.72 682.55 L1833.16 682.55 L1832.6 682.55 L1832.04 682.55 L1831.48 682.55 L1830.92 682.55 L1830.36 682.55 L1829.8 682.55 L1829.24 682.55 L1828.68 682.55 L1828.12 682.55 L1827.56 682.55 L1827 682.55 L1826.45 682.55 L1825.89 682.55 L1825.33 682.55 L1824.77 682.55 L1824.21 682.55 L1823.65 682.55 L1823.09 682.55 L1822.53 682.55 L1821.97 682.55 L1821.41 682.55 L1820.85 682.55 L1820.29 682.55 L1819.73 682.55 L1819.18 682.55 L1818.62 682.55 L1818.06 682.55 L1817.5 682.55 L1816.94 682.55 L1816.38 682.55 L1815.82 682.55 L1815.26 682.55 L1814.7 682.55 L1814.14 682.55 L1813.58 682.55 L1813.02 682.55 L1812.46 682.55 L1811.9 682.55 L1811.35 682.55 L1810.79 682.55 L1810.23 682.55 L1809.67 682.55 L1809.11 682.55 L1808.55 682.55 L1807.99 682.55 L1807.43 682.55 L1806.87 682.55 L1806.31 682.55 L1805.75 682.55 L1805.19 682.55 L1804.63 682.55 L1804.08 682.55 L1803.52 682.55 L1802.96 682.55 L1802.4 682.55 L1801.84 682.55 L1801.28 682.55 L1800.72 682.55 L1800.16 682.55 L1799.6 682.55 L1799.04 682.55 L1798.48 682.55 L1797.92 682.55 L1797.36 682.55 L1796.8 682.55 L1796.25 682.55 L1795.69 682.55 L1795.13 682.55 L1794.57 682.55 L1794.01 682.55 L1793.45 682.55 L1792.89 682.55 L1792.33 682.55 L1791.77 682.55 L1791.21 682.55 L1790.65 682.55 L1790.09 682.55 L1789.53 682.55 L1788.98 682.55 L1788.42 682.55 L1787.86 682.55 L1787.3 682.55 L1786.74 682.55 L1786.18 682.55 L1785.62 682.55 L1785.06 682.55 L1784.5 682.55 L1783.94 682.55 L1783.38 682.55 L1782.82 682.55 L1782.26 682.55 L1781.71 682.55 L1781.15 682.55 L1780.59 682.55 L1780.03 682.55 L1779.47 682.55 L1778.91 682.55 L1778.35 682.55 L1777.79 682.55 L1777.23 682.55 L1776.67 682.55 L1776.11 682.55 L1775.55 682.55 L1774.99 682.55 L1774.43 682.55 L1773.88 682.55 L1773.32 682.55 L1772.76 682.55 L1772.2 682.55 L1771.64 682.55 L1771.08 682.55 L1770.52 682.55 L1769.96 682.55 L1769.4 682.55 L1768.84 682.55 L1768.28 682.55 L1767.72 682.55 L1767.16 682.55 L1766.61 682.55 L1766.05 682.55 L1765.49 682.55 L1764.93 682.55 L1764.37 682.55 L1763.81 682.55 L1763.25 682.55 L1762.69 682.55 L1762.13 682.55 L1761.57 682.55 L1761.01 682.55 L1760.45 682.55 L1759.89 682.55 L1759.34 682.55 L1758.78 682.55 L1758.22 682.55 L1757.66 682.55 L1757.1 682.55 L1756.54 682.55 L1755.98 682.55 L1755.42 682.55 L1754.86 682.55 L1754.3 682.55 L1753.74 682.55 L1753.18 682.55 L1752.62 682.55 L1752.06 682.55 L1751.51 682.55 L1750.95 682.55 L1750.39 682.55 L1749.83 682.55 L1749.27 682.55 L1748.71 682.55 L1748.15 682.55 L1747.59 682.55 L1747.03 682.55 L1746.47 682.55 L1745.91 682.55 L1745.35 682.55 L1744.79 682.55 L1744.24 682.55 L1743.68 682.55 L1743.12 682.55 L1742.56 682.55 L1742 682.55 L1741.44 682.55 L1740.88 682.55 L1740.32 682.55 L1739.76 682.55 L1739.2 682.55 L1738.64 682.55 L1738.08 682.55 L1737.52 682.55 L1736.97 682.55 L1736.41 682.55 L1735.85 682.55 L1735.29 682.55 L1734.73 682.55 L1734.17 682.55 L1733.61 682.55 L1733.05 682.55 L1732.49 682.55 L1731.93 682.55 L1731.37 682.55 L1730.81 682.55 L1730.25 682.55 L1729.69 682.55 L1729.14 682.55 L1728.58 682.55 L1728.02 682.55 L1727.46 682.55 L1726.9 682.55 L1726.34 682.55 L1725.78 682.55 L1725.22 682.55 L1724.66 682.55 L1724.1 682.55 L1723.54 682.55 L1722.98 682.55 L1722.42 682.55 L1721.87 682.55 L1721.31 682.55 L1720.75 682.55 L1720.19 682.55 L1719.63 682.55 L1719.07 682.55 L1718.51 682.55 L1717.95 682.55 L1717.39 682.55 L1716.83 682.55 L1716.27 682.55 L1715.71 682.55 L1715.15 682.55 L1714.6 682.55 L1714.04 682.55 L1713.48 682.55 L1712.92 682.55 L1712.36 682.55 L1711.8 682.55 L1711.24 682.55 L1710.68 682.55 L1710.12 682.55 L1709.56 682.55 L1709 682.55 L1708.44 682.55 L1707.88 682.55 L1707.32 682.55 L1706.77 682.55 L1706.21 682.55 L1705.65 682.55 L1705.09 682.55 L1704.53 682.55 L1703.97 682.55 L1703.41 682.55 L1702.85 682.55 L1702.29 682.55 L1701.73 682.55 L1701.17 682.55 L1700.61 682.55 L1700.05 682.55 L1699.5 682.55 L1698.94 682.55 L1698.38 682.55 L1697.82 682.55 L1697.26 682.55 L1696.7 682.55 L1696.14 682.55 L1695.58 682.55 L1695.02 682.55 L1694.46 682.55 L1693.9 682.55 L1693.34 682.55 L1692.78 682.55 L1692.23 682.55 L1691.67 682.55 L1691.11 682.55 L1690.55 682.55 L1689.99 682.55 L1689.43 682.55 L1688.87 682.55 L1688.31 682.55 L1687.75 682.55 L1687.19 682.55 L1686.63 682.55 L1686.07 682.55 L1685.51 682.55 L1684.95 682.55 L1684.4 682.55 L1683.84 682.55 L1683.28 682.55 L1682.72 682.55 L1682.16 682.55 L1681.6 682.55 L1681.04 682.55 L1680.48 682.55 L1679.92 682.55 L1679.36 682.55 L1678.8 682.55 L1678.24 682.55 L1677.68 682.55 L1677.13 682.55 L1676.57 682.55 L1676.01 682.55 L1675.45 682.55 L1674.89 682.55 L1674.33 682.55 L1673.77 682.55 L1673.21 682.55 L1672.65 682.55 L1672.09 682.55 L1671.53 682.55 L1670.97 682.55 L1670.41 682.55 L1669.85 682.55 L1669.3 682.55 L1668.74 682.55 L1668.18 682.55 L1667.62 682.55 L1667.06 682.55 L1666.5 682.55 L1665.94 682.55 L1665.38 682.55 L1664.82 682.55 L1664.26 682.55 L1663.7 682.55 L1663.14 682.55 L1662.58 682.55 L1662.03 682.55 L1661.47 682.55 L1660.91 682.55 L1660.35 682.55 L1659.79 682.55 L1659.23 682.55 L1658.67 682.55 L1658.11 682.55 L1657.55 682.55 L1656.99 682.55 L1656.43 682.55 L1655.87 682.55 L1655.31 682.55 L1654.76 682.55 L1654.2 682.55 L1653.64 682.55 L1653.08 682.55 L1652.52 682.55 L1651.96 682.55 L1651.4 682.55 L1650.84 682.55 L1650.28 682.55 L1649.72 682.55 L1649.16 682.55 L1648.6 682.55 L1648.04 682.55 L1647.48 682.55 L1646.93 682.55 L1646.37 682.55 L1645.81 682.55 L1645.25 682.55 L1644.69 682.55 L1644.13 682.55 L1643.57 682.55 L1643.01 682.55 L1642.45 682.55 L1641.89 682.55 L1641.33 682.55 L1640.77 682.55 L1640.21 682.55 L1639.66 682.55 L1639.1 682.55 L1638.54 682.55 L1637.98 682.55 L1637.42 682.55 L1636.86 682.55 L1636.3 682.55 L1635.74 682.55 L1635.18 682.55 L1634.62 682.55 L1634.06 682.55 L1633.5 682.55 L1632.94 682.55 L1632.39 682.55 L1631.83 682.55 L1631.27 682.55 L1630.71 682.55 L1630.15 682.55 L1629.59 682.55 L1629.03 682.55 L1628.47 682.55 L1627.91 682.55 L1627.35 682.55 L1626.79 682.55 L1626.23 682.55 L1625.67 682.55 L1625.11 682.55 L1624.56 682.55 L1624 682.55 L1623.44 682.55 L1622.88 682.55 L1622.32 682.55 L1621.76 682.55 L1621.2 682.55 L1620.64 682.55 L1620.08 682.55 L1619.52 682.55 L1618.96 682.55 L1618.4 682.55 L1617.84 682.55 L1617.29 682.55 L1616.73 682.55 L1616.17 682.55 L1615.61 682.55 L1615.05 682.55 L1614.49 682.55 L1613.93 682.55 L1613.37 682.55 L1612.81 682.55 L1612.25 682.55 L1611.69 682.55 L1611.13 682.55 L1610.57 682.55 L1610.02 682.55 L1609.46 682.55 L1608.9 682.55 L1608.34 682.55 L1607.78 682.55 L1607.22 682.55 L1606.66 682.55 L1606.1 682.55 L1605.54 682.55 L1604.98 682.55 L1604.42 682.55 L1603.86 682.55 L1603.3 682.55 L1602.74 682.55 L1602.19 682.55 L1601.63 682.55 L1601.07 682.55 L1600.51 682.55 L1599.95 682.55 L1599.39 682.55 L1598.83 682.55 L1598.27 682.55 L1597.71 682.55 L1597.15 682.55 L1596.59 682.55 L1596.03 682.55 L1595.47 682.55 L1594.92 682.55 L1594.36 682.55 L1593.8 682.55 L1593.24 682.55 L1592.68 682.55 L1592.12 682.55 L1591.56 682.55 L1591 682.55 L1590.44 682.55 L1589.88 682.55 L1589.32 682.55 L1588.76 682.55 L1588.2 682.55 L1587.65 682.55 L1587.09 682.55 L1586.53 682.55 L1585.97 682.55 L1585.41 682.55 L1584.85 682.55 L1584.29 682.55 L1583.73 682.55 L1583.17 682.55 L1582.61 682.55 L1582.05 682.55 L1581.49 682.55 L1580.93 682.55 L1580.37 682.55 L1579.82 682.55 L1579.26 682.55 L1578.7 682.55 L1578.14 682.55 L1577.58 682.55 L1577.02 682.55 L1576.46 682.55 L1575.9 682.55 L1575.34 682.55 L1574.78 682.55 L1574.22 682.55 L1573.66 682.55 L1573.1 682.55 L1572.55 682.55 L1571.99 682.55 L1571.43 682.55 L1570.87 682.55 L1570.31 682.55 L1569.75 682.55 L1569.19 682.55 L1568.63 682.55 L1568.07 682.55 L1567.51 682.55 L1566.95 682.55 L1566.39 682.55 L1565.83 682.55 L1565.28 682.55 L1564.72 682.55 L1564.16 682.55 L1563.6 682.55 L1563.04 682.55 L1562.48 682.55 L1561.92 682.55 L1561.36 682.55 L1560.8 682.55 L1560.24 682.55 L1559.68 682.55 L1559.12 682.55 L1558.56 682.55 L1558 682.55 L1557.45 682.55 L1556.89 682.55 L1556.33 682.55 L1555.77 682.55 L1555.21 682.55 L1554.65 682.55 L1554.09 682.55 L1553.53 682.55 L1552.97 682.55 L1552.41 682.55 L1551.85 682.55 L1551.29 682.55 L1550.73 682.55 L1550.18 682.55 L1549.62 682.55 L1549.06 682.55 L1548.5 682.55 L1547.94 682.55 L1547.38 682.55 L1546.82 682.55 L1546.26 682.55 L1545.7 682.55 L1545.14 682.55 L1544.58 682.55 L1544.02 682.55 L1543.46 682.55 L1542.9 682.55 L1542.35 682.55 L1541.79 682.55 L1541.23 682.55 L1540.67 682.55 L1540.11 682.55 L1539.55 682.55 L1538.99 682.55 L1538.43 682.55 L1537.87 682.55 L1537.31 682.55 L1536.75 682.55 L1536.19 682.55 L1535.63 682.55 L1535.08 682.55 L1534.52 682.55 L1533.96 682.55 L1533.4 682.55 L1532.84 682.55 L1532.28 682.55 L1531.72 682.55 L1531.16 682.55 L1530.6 682.55 L1530.04 682.55 L1529.48 682.55 L1528.92 682.55 L1528.36 682.55 L1527.81 682.55 L1527.25 682.55 L1526.69 682.55 L1526.13 682.55 L1525.57 682.55 L1525.01 682.55 L1524.45 682.55 L1523.89 682.55 L1523.33 682.55 L1522.77 682.55 L1522.21 682.55 L1521.65 682.55 L1521.09 682.55 L1520.53 682.55 L1519.98 682.55 L1519.42 682.55 L1518.86 682.55 L1518.3 682.55 L1517.74 682.55 L1517.18 682.55 L1516.62 682.55 L1516.06 682.55 L1515.5 682.55 L1514.94 682.55 L1514.38 682.55 L1513.82 682.55 L1513.26 682.55 L1512.71 682.55 L1512.15 682.55 L1511.59 682.55 L1511.03 682.55 L1510.47 682.55 L1509.91 682.55 L1509.35 682.55 L1508.79 682.55 L1508.23 682.55 L1507.67 682.55 L1507.11 682.55 L1506.55 682.55 L1505.99 682.55 L1505.44 682.55 L1504.88 682.55 L1504.32 682.55 L1503.76 682.55 L1503.2 682.55 L1502.64 682.55 L1502.08 682.55 L1501.52 682.55 L1500.96 682.55 L1500.4 682.55 L1499.84 682.55 L1499.28 682.55 L1498.72 682.55 L1498.16 682.55 L1497.61 682.55 L1497.05 682.55 L1496.49 682.55 L1495.93 682.55 L1495.37 682.55 L1494.81 682.55 L1494.25 682.55 L1493.69 682.55 L1493.13 682.55 L1492.57 682.55 L1492.01 682.55 L1491.45 682.55 L1490.89 682.55 L1490.34 682.55 L1489.78 682.55 L1489.22 682.55 L1488.66 682.55 L1488.1 682.55 L1487.54 682.55 L1486.98 682.55 L1486.42 682.55 L1485.86 682.55 L1485.3 682.55 L1484.74 682.55 L1484.18 682.55 L1483.62 682.55 L1483.07 682.55 L1482.51 682.55 L1481.95 682.55 L1481.39 682.55 L1480.83 682.55 L1480.27 682.55 L1479.71 682.55 L1479.15 682.55 L1478.59 682.55 L1478.03 682.55 L1477.47 682.55 L1476.91 682.55 L1476.35 682.55 L1475.79 682.55 L1475.24 682.55 L1474.68 682.55 L1474.12 682.55 L1473.56 682.55 L1473 682.55 L1472.44 682.55 L1471.88 682.55 L1471.32 682.55 L1470.76 682.55 L1470.2 682.55 L1469.64 682.55 L1469.08 682.55 L1468.52 682.55 L1467.97 682.55 L1467.41 682.55 L1466.85 682.55 L1466.29 682.55 L1465.73 682.55 L1465.17 682.55 L1464.61 682.55 L1464.05 682.55 L1463.49 682.55 L1462.93 682.55 L1462.37 682.55 L1461.81 682.55 L1461.25 682.55 L1460.7 682.55 L1460.14 682.55 L1459.58 682.55 L1459.02 682.55 L1458.46 682.55 L1457.9 682.55 L1457.34 682.55 L1456.78 682.55 L1456.22 682.55 L1455.66 682.55 L1455.1 682.55 L1454.54 682.55 L1453.98 682.55 L1453.42 682.55 L1452.87 682.55 L1452.31 682.55 L1451.75 682.55 L1451.19 682.55 L1450.63 682.55 L1450.07 682.55 L1449.51 682.55 L1448.95 682.55 L1448.39 682.55 L1447.83 682.55 L1447.27 682.55 L1446.71 682.55 L1446.15 682.55 L1445.6 682.55 L1445.04 682.55 L1444.48 682.55 L1443.92 682.55 L1443.36 682.55 L1442.8 682.55 L1442.24 682.55 L1441.68 682.55 L1441.12 682.55 L1440.56 682.55 L1440 682.55 L1439.44 682.55 L1438.88 682.55 L1438.33 682.55 L1437.77 682.55 L1437.21 682.55 L1436.65 682.55 L1436.09 682.55 L1435.53 682.55 L1434.97 682.55 L1434.41 682.55 L1433.85 682.55 L1433.29 682.55 L1432.73 682.55 L1432.17 682.55 L1431.61 682.55 L1431.05 682.55 L1430.5 682.55 L1429.94 682.55 L1429.38 682.55 L1428.82 682.55 L1428.26 682.55 L1427.7 682.55 L1427.14 682.55 L1426.58 682.55 L1426.02 682.55 L1425.46 682.55 L1424.9 682.55 L1424.34 682.55 L1423.78 682.55 L1423.23 682.55 L1422.67 682.55 L1422.11 682.55 L1421.55 682.55 L1420.99 682.55 L1420.43 682.55 L1419.87 682.55 L1419.31 682.55 L1418.75 682.55 L1418.19 682.55 L1417.63 682.55 L1417.07 682.55 L1416.51 682.55 L1415.95 682.55 L1415.4 682.55 L1414.84 682.55 L1414.28 682.55 L1413.72 682.55 L1413.16 682.55 L1412.6 682.55 L1412.04 682.55 L1411.48 682.55 L1410.92 682.55 L1410.36 682.55 L1409.8 682.55 L1409.24 682.55 L1408.68 682.55 L1408.13 682.55 L1407.57 682.55 L1407.01 682.55 L1406.45 682.55 L1405.89 682.55 L1405.33 682.55 L1404.77 682.55 L1404.21 682.55 L1403.65 682.55 L1403.09 682.55 L1402.53 682.55 L1401.97 682.55 L1401.41 682.55 L1400.86 682.55 L1400.3 682.55 L1399.74 682.55 L1399.18 682.55 L1398.62 682.55 L1398.06 682.55 L1397.5 682.55 L1396.94 682.55 L1396.38 682.55 L1395.82 682.55 L1395.26 682.55 L1394.7 682.55 L1394.14 682.55 L1393.58 682.55 L1393.03 682.55 L1392.47 682.55 L1391.91 682.55 L1391.35 682.55 L1390.79 682.55 L1390.23 682.55 L1389.67 682.55 L1389.11 682.55 L1388.55 682.55 L1387.99 682.55 L1387.43 682.55 L1386.87 682.55 L1386.31 682.55 L1385.76 682.55 L1385.2 682.55 L1384.64 682.55 L1384.08 682.55 L1383.52 682.55 L1382.96 682.55 L1382.4 682.55 L1381.84 682.55 L1381.28 682.55 L1380.72 682.55 L1380.16 682.55 L1379.6 682.55 L1379.04 682.55 L1378.49 682.55 L1377.93 682.55 L1377.37 682.55 L1376.81 682.55 L1376.25 682.55 L1375.69 682.55 L1375.13 682.55 L1374.57 682.55 L1374.01 682.55 L1373.45 682.55 L1372.89 682.55 L1372.33 682.55 L1371.77 682.55 L1371.21 682.55 L1370.66 682.55 L1370.1 682.55 L1369.54 682.55 L1368.98 682.55 L1368.42 682.55 L1367.86 682.55 L1367.3 682.55 L1366.74 682.55 L1366.18 682.55 L1365.62 682.55 L1365.06 682.55 L1364.5 682.55 L1363.94 682.55 L1363.39 682.55 L1362.83 682.55 L1362.27 682.55 L1361.71 682.55 L1361.15 682.55 L1360.59 682.55 L1360.03 682.55 L1359.47 682.55 L1358.91 682.55 L1358.35 682.55 L1357.79 682.55 L1357.23 682.55 L1356.67 682.55 L1356.12 682.55 L1355.56 682.55 L1355 682.55 L1354.44 682.55 L1353.88 682.55 L1353.32 682.55 L1352.76 682.55 L1352.2 682.55 L1351.64 682.55 L1351.08 682.55 L1350.52 682.55 L1349.96 682.55 L1349.4 682.55 L1348.84 682.55 L1348.29 682.55 L1347.73 682.55 L1347.17 682.55 L1346.61 682.55 L1346.05 682.55 L1345.49 682.55 L1344.93 682.55 L1344.37 682.55 L1343.81 682.55 L1343.25 682.55 L1342.69 682.55 L1342.13 682.55 L1341.57 682.55 L1341.02 682.55 L1340.46 682.55 L1339.9 682.55 L1339.34 682.55 L1338.78 682.55 L1338.22 682.55 L1337.66 682.55 L1337.1 682.55 L1336.54 682.55 L1335.98 682.55 L1335.42 682.55 L1334.86 682.55 L1334.3 682.55 L1333.75 682.55 L1333.19 682.55 L1332.63 682.55 L1332.07 682.55 L1331.51 682.55 L1330.95 682.55 L1330.39 682.55 L1329.83 682.55 L1329.27 682.55 L1328.71 682.55 L1328.15 682.55 L1327.59 682.55 L1327.03 682.55 L1326.47 682.55 L1325.92 682.55 L1325.36 682.55 L1324.8 682.55 L1324.24 682.55 L1323.68 682.55 L1323.12 682.55 L1322.56 682.55 L1322 682.55 L1321.44 682.55 L1320.88 682.55 L1320.32 682.55 L1319.76 682.55 L1319.2 682.55 L1318.65 682.55 L1318.09 682.55 L1317.53 682.55 L1316.97 682.55 L1316.41 682.55 L1315.85 682.55 L1315.29 682.55 L1314.73 682.55 L1314.17 682.55 L1313.61 682.55 L1313.05 682.55 L1312.49 682.55 L1311.93 682.55 L1311.38 682.55 L1310.82 682.55 L1310.26 682.55 L1309.7 682.55 L1309.14 682.55 L1308.58 682.55 L1308.02 682.55 L1307.46 682.55 L1306.9 682.55 L1306.34 682.55 L1305.78 682.55 L1305.22 682.55 L1304.66 682.55 L1304.1 682.55 L1303.55 682.55 L1302.99 682.55 L1302.43 682.55 L1301.87 682.55 L1301.31 682.55 L1300.75 682.55 L1300.19 682.55 L1299.63 682.55 L1299.07 682.55 L1298.51 682.55 L1297.95 682.55 L1297.39 682.55 L1296.83 682.55 L1296.28 682.55 L1295.72 682.55 L1295.16 682.55 L1294.6 682.55 L1294.04 682.55 L1293.48 682.55 L1292.92 682.55 L1292.36 682.55 L1291.8 682.55 L1291.24 682.55 L1290.68 682.55 L1290.12 682.55 L1289.56 682.55 L1289 682.55 L1288.45 682.55 L1287.89 682.55 L1287.33 682.55 L1286.77 682.55 L1286.21 682.55 L1285.65 682.55 L1285.09 682.55 L1284.53 682.55 L1283.97 682.55 L1283.41 682.55 L1282.85 682.55 L1282.29 682.55 L1281.73 682.55 L1281.18 682.55 L1280.62 682.55 L1280.06 682.55 L1279.5 682.55 L1278.94 682.55 L1278.38 682.55 L1277.82 682.55 L1277.26 682.55 L1276.7 682.55 L1276.14 682.55 L1275.58 682.55 L1275.02 682.55 L1274.46 682.55 L1273.91 682.55 L1273.35 682.55 L1272.79 682.55 L1272.23 682.55 L1271.67 682.55 L1271.11 682.55 L1270.55 682.55 L1269.99 682.55 L1269.43 682.55 L1268.87 682.55 L1268.31 682.55 L1267.75 682.55 L1267.19 682.55 L1266.63 682.55 L1266.08 682.55 L1265.52 682.55 L1264.96 682.55 L1264.4 682.55 L1263.84 682.55 L1263.28 682.55 L1262.72 682.55 L1262.16 682.55 L1261.6 682.55 L1261.04 682.55 L1260.48 682.55 L1259.92 682.55 L1259.36 682.55 L1258.81 682.55 L1258.25 682.55 L1257.69 682.55 L1257.13 682.55 L1256.57 682.55 L1256.01 682.55 L1255.45 682.55 L1254.89 682.55 L1254.33 682.55 L1253.77 682.55 L1253.21 682.55 L1252.65 682.55 L1252.09 682.55 L1251.54 682.55 L1250.98 682.55 L1250.42 682.55 L1249.86 682.55 L1249.3 682.55 L1248.74 682.55 L1248.18 682.55 L1247.62 682.55 L1247.06 682.55 L1246.5 682.55 L1245.94 682.55 L1245.38 682.55 L1244.82 682.55 L1244.26 682.55 L1243.71 682.55 L1243.15 682.55 L1242.59 682.55 L1242.03 682.55 L1241.47 682.55 L1240.91 682.55 L1240.35 682.55 L1239.79 682.55 L1239.23 682.55 L1238.67 682.55 L1238.11 682.55 L1237.55 682.55 L1236.99 682.55 L1236.44 682.55 L1235.88 682.55 L1235.32 682.55 L1234.76 682.55 L1234.2 682.55 L1233.64 682.55 L1233.08 682.55 L1232.52 682.55 L1231.96 682.55 L1231.4 682.55 L1230.84 682.55 L1230.28 682.55 L1229.72 682.55 L1229.17 682.55 L1228.61 682.55 L1228.05 682.55 L1227.49 682.55 L1226.93 682.55 L1226.37 682.55 L1225.81 682.55 L1225.25 682.55 L1224.69 682.55 L1224.13 682.55 L1223.57 682.55 L1223.01 682.55 L1222.45 682.55 L1221.89 682.55 L1221.34 682.55 L1220.78 682.55 L1220.22 682.55 L1219.66 682.55 L1219.1 682.55 L1218.54 682.55 L1217.98 682.55 L1217.42 682.55 L1216.86 682.55 L1216.3 682.55 L1215.74 682.55 L1215.18 682.55 L1214.62 682.55 L1214.07 682.55 L1213.51 682.55 L1212.95 682.55 L1212.39 682.55 L1211.83 682.55 L1211.27 682.55 L1210.71 682.55 L1210.15 682.55 L1209.59 682.55 L1209.03 682.55 L1208.47 682.55 L1207.91 682.55 L1207.35 682.55 L1206.8 682.55 L1206.24 682.55 L1205.68 682.55 L1205.12 682.55 L1204.56 682.55 L1204 682.55 L1203.44 682.55 L1202.88 682.55 L1202.32 682.55 L1201.76 682.55 L1201.2 682.55 L1200.64 682.55 L1200.08 682.55 L1199.52 682.55 L1198.97 682.55 L1198.41 682.55 L1197.85 682.55 L1197.29 682.55 L1196.73 682.55 L1196.17 682.55 L1195.61 682.55 L1195.05 682.55 L1194.49 682.55 L1193.93 682.55 L1193.37 682.55 L1192.81 682.55 L1192.25 682.55 L1191.7 682.55 L1191.14 682.55 L1190.58 682.55 L1190.02 682.55 L1189.46 682.55 L1188.9 682.55 L1188.34 682.55 L1187.78 682.55 L1187.22 682.55 L1186.66 682.55 L1186.1 682.55 L1185.54 682.55 L1184.98 682.55 L1184.43 682.55 L1183.87 682.55 L1183.31 682.55 L1182.75 682.55 L1182.19 682.55 L1181.63 682.55 L1181.07 682.55 L1180.51 682.55 L1179.95 682.55 L1179.39 682.55 L1178.83 682.55 L1178.27 682.55 L1177.71 682.55 L1177.15 682.55 L1176.6 682.55 L1176.04 682.55 L1175.48 682.55 L1174.92 682.55 L1174.36 682.55 L1173.8 682.55 L1173.24 682.55 L1172.68 682.55 L1172.12 682.55 L1171.56 682.55 L1171 682.55 L1170.44 682.55 L1169.88 682.55 L1169.33 682.55 L1168.77 682.55 L1168.21 682.55 L1167.65 682.55 L1167.09 682.55 L1166.53 682.55 L1165.97 682.55 L1165.41 682.55 L1164.85 682.55 L1164.29 682.55 L1163.73 682.55 L1163.17 682.55 L1162.61 682.55 L1162.05 682.55 L1161.5 682.55 L1160.94 682.55 L1160.38 682.55 L1159.82 682.55 L1159.26 682.55 L1158.7 682.55 L1158.14 682.55 L1157.58 682.55 L1157.02 682.55 L1156.46 682.55 L1155.9 682.55 L1155.34 682.55 L1154.78 682.55 L1154.23 682.55 L1153.67 682.55 L1153.11 682.55 L1152.55 682.55 L1151.99 682.55 L1151.43 682.55 L1150.87 682.55 L1150.31 682.55 L1149.75 682.55 L1149.19 682.55 L1148.63 682.55 L1148.07 682.55 L1147.51 682.55 L1146.96 682.55 L1146.4 682.55 L1145.84 682.55 L1145.28 682.55 L1144.72 682.55 L1144.16 682.55 L1143.6 682.55 L1143.04 682.55 L1142.48 682.55 L1141.92 682.55 L1141.36 682.55 L1140.8 682.55 L1140.24 682.55 L1139.68 682.55 L1139.13 682.55 L1138.57 682.55 L1138.01 682.55 L1137.45 682.55 L1136.89 682.55 L1136.33 682.55 L1135.77 682.55 L1135.21 682.55 L1134.65 682.55 L1134.09 682.55 L1133.53 682.55 L1132.97 682.55 L1132.41 682.55 L1131.86 682.55 L1131.3 682.55 L1130.74 682.55 L1130.18 682.55 L1129.62 682.55 L1129.06 682.55 L1128.5 682.55 L1127.94 682.55 L1127.38 682.55 L1126.82 682.55 L1126.26 682.55 L1125.7 682.55 L1125.14 682.55 L1124.59 682.55 L1124.03 682.55 L1123.47 682.55 L1122.91 682.55 L1122.35 682.55 L1121.79 682.55 L1121.23 682.55 L1120.67 682.55 L1120.11 682.55 L1119.55 682.55 L1118.99 682.55 L1118.43 682.55 L1117.87 682.55 L1117.31 682.55 L1116.76 682.55 L1116.2 682.55 L1115.64 682.55 L1115.08 682.55 L1114.52 682.55 L1113.96 682.55 L1113.4 682.55 L1112.84 682.55 L1112.28 682.55 L1111.72 682.55 L1111.16 682.55 L1110.6 682.55 L1110.04 682.55 L1109.49 682.55 L1108.93 682.55 L1108.37 682.55 L1107.81 682.55 L1107.25 682.55 L1106.69 682.55 L1106.13 682.55 L1105.57 682.55 L1105.01 682.55 L1104.45 682.55 L1103.89 682.55 L1103.33 682.55 L1102.77 682.55 L1102.22 682.55 L1101.66 682.55 L1101.1 682.55 L1100.54 682.55 L1099.98 682.55 L1099.42 682.55 L1098.86 682.55 L1098.3 682.55 L1097.74 682.55 L1097.18 682.55 L1096.62 682.55 L1096.06 682.55 L1095.5 682.55 L1094.94 682.55 L1094.39 682.55 L1093.83 682.55 L1093.27 682.55 L1092.71 682.55 L1092.15 682.55 L1091.59 682.55 L1091.03 682.55 L1090.47 682.55 L1089.91 682.55 L1089.35 682.55 L1088.79 682.55 L1088.23 682.55 L1087.67 682.55 L1087.12 682.55 L1086.56 682.55 L1086 682.55 L1085.44 682.55 L1084.88 682.55 L1084.32 682.55 L1083.76 682.55 L1083.2 682.55 L1082.64 682.55 L1082.08 682.55 L1081.52 682.55 L1080.96 682.55 L1080.4 682.55 L1079.85 682.55 L1079.29 682.55 L1078.73 682.55 L1078.17 682.55 L1077.61 682.55 L1077.05 682.55 L1076.49 682.55 L1075.93 682.55 L1075.37 682.55 L1074.81 682.55 L1074.25 682.55 L1073.69 682.55 L1073.13 682.55 L1072.57 682.55 L1072.02 682.55 L1071.46 682.55 L1070.9 682.55 L1070.34 682.55 L1069.78 682.55 L1069.22 682.55 L1068.66 682.55 L1068.1 682.55 L1067.54 682.55 L1066.98 682.55 L1066.42 682.55 L1065.86 682.55 L1065.3 682.55 L1064.75 682.55 L1064.19 682.55 L1063.63 682.55 L1063.07 682.55 L1062.51 682.55 L1061.95 682.55 L1061.39 682.55 L1060.83 682.55 L1060.27 682.55 L1059.71 682.55 L1059.15 682.55 L1058.59 682.55 L1058.03 682.55 L1057.48 682.55 L1056.92 682.55 L1056.36 682.55 L1055.8 682.55 L1055.24 682.55 L1054.68 682.55 L1054.12 682.55 L1053.56 682.55 L1053 682.55 L1052.44 682.55 L1051.88 682.55 L1051.32 682.55 L1050.76 682.55 L1050.2 682.55 L1049.65 682.55 L1049.09 682.55 L1048.53 682.55 L1047.97 682.55 L1047.41 682.55 L1046.85 682.55 L1046.29 682.55 L1045.73 682.55 L1045.17 682.55 L1044.61 682.55 L1044.05 682.55 L1043.49 682.55 L1042.93 682.55 L1042.38 682.55 L1041.82 682.55 L1041.26 682.55 L1040.7 682.55 L1040.14 682.55 L1039.58 682.55 L1039.02 682.55 L1038.46 682.55 L1037.9 682.55 L1037.34 682.55 L1036.78 682.55 L1036.22 682.55 L1035.66 682.55 L1035.1 682.55 L1034.55 682.55 L1033.99 682.55 L1033.43 682.55 L1032.87 682.55 L1032.31 682.55 L1031.75 682.55 L1031.19 682.55 L1030.63 682.55 L1030.07 682.55 L1029.51 682.55 L1028.95 682.55 L1028.39 682.55 L1027.83 682.55 L1027.28 682.55 L1026.72 682.55 L1026.16 682.55 L1025.6 682.55 L1025.04 682.55 L1024.48 682.55 L1023.92 682.55 L1023.36 682.55 L1022.8 682.55 L1022.24 682.55 L1021.68 682.55 L1021.12 682.55 L1020.56 682.55 L1020.01 682.55 L1019.45 682.55 L1018.89 682.55 L1018.33 682.55 L1017.77 682.55 L1017.21 682.55 L1016.65 682.55 L1016.09 682.55 L1015.53 682.55 L1014.97 682.55 L1014.41 682.55 L1013.85 682.55 L1013.29 682.55 L1012.73 682.55 L1012.18 682.55 L1011.62 682.55 L1011.06 682.55 L1010.5 682.55 L1009.94 682.55 L1009.38 682.55 L1008.82 682.55 L1008.26 682.55 L1007.7 682.55 L1007.14 682.55 L1006.58 682.55 L1006.02 682.55 L1005.46 682.55 L1004.91 682.55 L1004.35 682.55 L1003.79 682.55 L1003.23 682.55 L1002.67 682.55 L1002.11 682.55 L1001.55 682.55 L1000.99 682.55 L1000.43 682.55 L999.872 682.55 L999.313 682.55 L998.754 682.55 L998.194 682.55 L997.635 682.55 L997.076 682.55 L996.517 682.55 L995.957 682.55 L995.398 682.55 L994.839 682.55 L994.28 682.55 L993.72 682.55 L993.161 682.55 L992.602 682.55 L992.043 682.55 L991.483 682.55 L990.924 682.55 L990.365 682.55 L989.806 682.55 L989.246 682.55 L988.687 682.55 L988.128 682.55 L987.569 682.55 L987.009 682.55 L986.45 682.55 L985.891 682.55 L985.332 682.55 L984.772 682.55 L984.213 682.55 L983.654 682.55 L983.095 682.55 L982.535 682.55 L981.976 682.55 L981.417 682.55 L980.858 682.55 L980.298 682.55 L979.739 682.55 L979.18 682.55 L978.621 682.55 L978.061 682.55 L977.502 682.55 L976.943 682.55 L976.384 682.55 L975.824 682.55 L975.265 682.55 L974.706 682.55 L974.147 682.55 L973.587 682.55 L973.028 682.55 L972.469 682.55 L971.91 682.55 L971.35 682.55 L970.791 682.55 L970.232 682.55 L969.673 682.55 L969.113 682.55 L968.554 682.55 L967.995 682.55 L967.436 682.55 L966.876 682.55 L966.317 682.55 L965.758 682.55 L965.199 682.55 L964.639 682.55 L964.08 682.55 L963.521 682.55 L962.962 682.55 L962.402 682.55 L961.843 682.55 L961.284 682.55 L960.725 682.55 L960.165 682.55 L959.606 682.55 L959.047 682.55 L958.488 682.55 L957.928 682.55 L957.369 682.55 L956.81 682.55 L956.251 682.55 L955.691 682.55 L955.132 682.55 L954.573 682.55 L954.014 682.55 L953.454 682.55 L952.895 682.55 L952.336 682.55 L951.777 682.55 L951.217 682.55 L950.658 682.55 L950.099 682.55 L949.54 682.55 L948.98 682.55 L948.421 682.55 L947.862 682.55 L947.303 682.55 L946.743 682.55 L946.184 682.55 L945.625 682.55 L945.066 682.55 L944.506 682.55 L943.947 682.55 L943.388 682.55 L942.829 682.55 L942.269 682.55 L941.71 682.55 L941.151 682.55 L940.592 682.55 L940.032 682.55 L939.473 682.55 L938.914 682.55 L938.355 682.55 L937.795 682.55 L937.236 682.55 L936.677 682.55 L936.118 682.55 L935.558 682.55 L934.999 682.55 L934.44 682.55 L933.881 682.55 L933.321 682.55 L932.762 682.55 L932.203 682.55 L931.644 682.55 L931.084 682.55 L930.525 682.55 L929.966 682.55 L929.406 682.55 L928.847 682.55 L928.288 682.55 L927.729 682.55 L927.169 682.55 L926.61 682.55 L926.051 682.55 L925.492 682.55 L924.932 682.55 L924.373 682.55 L923.814 682.55 L923.255 682.55 L922.695 682.55 L922.136 682.55 L921.577 682.55 L921.018 682.55 L920.458 682.55 L919.899 682.55 L919.34 682.55 L918.781 682.55 L918.221 682.55 L917.662 682.55 L917.103 682.55 L916.544 682.55 L915.984 682.55 L915.425 682.55 L914.866 682.55 L914.307 682.55 L913.747 682.55 L913.188 682.55 L912.629 682.55 L912.07 682.55 L911.51 682.55 L910.951 682.55 L910.392 682.55 L909.833 682.55 L909.273 682.55 L908.714 682.55 L908.155 682.55 L907.596 682.55 L907.036 682.55 L906.477 682.55 L905.918 682.55 L905.359 682.55 L904.799 682.55 L904.24 682.55 L903.681 682.55 L903.122 682.55 L902.562 682.55 L902.003 682.55 L901.444 682.55 L900.885 682.55 L900.325 682.55 L899.766 682.55 L899.207 682.55 L898.648 682.55 L898.088 682.55 L897.529 682.55 L896.97 682.55 L896.411 682.55 L895.851 682.55 L895.292 682.55 L894.733 682.55 L894.174 682.55 L893.614 682.55 L893.055 682.55 L892.496 682.55 L891.937 682.55 L891.377 682.55 L890.818 682.55 L890.259 682.55 L889.7 682.55 L889.14 682.55 L888.581 682.55 L888.022 682.55 L887.463 682.55 L886.903 682.55 L886.344 682.55 L885.785 682.55 L885.226 682.55 L884.666 682.55 L884.107 682.55 L883.548 682.55 L882.989 682.55 L882.429 682.55 L881.87 682.55 L881.311 682.55 L880.752 682.55 L880.192 682.55 L879.633 682.55 L879.074 682.55 L878.515 682.55 L877.955 682.55 L877.396 682.55 L876.837 682.55 L876.278 682.55 L875.718 682.55 L875.159 682.55 L874.6 682.55 L874.041 682.55 L873.481 682.55 L872.922 682.55 L872.363 682.55 L871.804 682.55 L871.244 682.55 L870.685 682.55 L870.126 682.55 L869.567 682.55 L869.007 682.55 L868.448 682.55 L867.889 682.55 L867.33 682.55 L866.77 682.55 L866.211 682.55 L865.652 682.55 L865.093 682.55 L864.533 682.55 L863.974 682.55 L863.415 682.55 L862.856 682.55 L862.296 682.55 L861.737 682.55 L861.178 682.55 L860.619 682.55 L860.059 682.55 L859.5 682.55 L858.941 682.55 L858.382 682.55 L857.822 682.55 L857.263 682.55 L856.704 682.55 L856.145 682.55 L855.585 682.55 L855.026 682.55 L854.467 682.55 L853.908 682.55 L853.348 682.55 L852.789 682.55 L852.23 682.55 L851.671 682.55 L851.111 682.55 L850.552 682.55 L849.993 682.55 L849.434 682.55 L848.874 682.55 L848.315 682.55 L847.756 682.55 L847.197 682.55 L846.637 682.55 L846.078 682.55 L845.519 682.55 L844.96 682.55 L844.4 682.55 L843.841 682.55 L843.282 682.55 L842.723 682.55 L842.163 682.55 L841.604 682.55 L841.045 682.55 L840.486 682.55 L839.926 682.55 L839.367 682.55 L838.808 682.55 L838.249 682.55 L837.689 682.55 L837.13 682.55 L836.571 682.55 L836.012 682.55 L835.452 682.55 L834.893 682.55 L834.334 682.55 L833.775 682.55 L833.215 682.55 L832.656 682.55 L832.097 682.55 L831.538 682.55 L830.978 682.55 L830.419 682.55 L829.86 682.55 L829.301 682.55 L828.741 682.55 L828.182 682.55 L827.623 682.55 L827.064 682.55 L826.504 682.55 L825.945 682.55 L825.386 682.55 L824.827 682.55 L824.267 682.55 L823.708 682.55 L823.149 682.55 L822.59 682.55 L822.03 682.55 L821.471 682.55 L820.912 682.55 L820.353 682.55 L819.793 682.55 L819.234 682.55 L818.675 682.55 L818.116 682.55 L817.556 682.55 L816.997 682.55 L816.438 682.55 L815.879 682.55 L815.319 682.55 L814.76 682.55 L814.201 682.55 L813.642 682.55 L813.082 682.55 L812.523 682.55 L811.964 682.55 L811.405 682.55 L810.845 682.55 L810.286 682.55 L809.727 682.55 L809.168 682.55 L808.608 682.55 L808.049 682.55 L807.49 682.55 L806.931 682.55 L806.371 682.55 L805.812 682.55 L805.253 682.55 L804.693 682.55 L804.134 682.55 L803.575 682.55 L803.016 682.55 L802.456 682.55 L801.897 682.55 L801.338 682.55 L800.779 682.55 L800.219 682.55 L799.66 682.55 L799.101 682.55 L798.542 682.55 L797.982 682.55 L797.423 682.55 L796.864 682.55 L796.305 682.55 L795.745 682.55 L795.186 682.55 L794.627 682.55 L794.068 682.55 L793.508 682.55 L792.949 682.55 L792.39 682.55 L791.831 682.55 L791.271 682.55 L790.712 682.55 L790.153 682.55 L789.594 682.55 L789.034 682.55 L788.475 682.55 L787.916 682.55 L787.357 682.55 L786.797 682.55 L786.238 682.55 L785.679 682.55 L785.12 682.55 L784.56 682.55 L784.001 682.55 L783.442 682.55 L782.883 682.55 L782.323 682.55 L781.764 682.55 L781.205 682.55 L780.646 682.55 L780.086 682.55 L779.527 682.55 L778.968 682.55 L778.409 682.55 L777.849 682.55 L777.29 682.55 L776.731 682.55 L776.172 682.55 L775.612 682.55 L775.053 682.55 L774.494 682.55 L773.935 682.55 L773.375 682.55 L772.816 682.55 L772.257 682.55 L771.698 682.55 L771.138 682.55 L770.579 682.55 L770.02 682.55 L769.461 682.55 L768.901 682.55 L768.342 682.55 L767.783 682.55 L767.224 682.55 L766.664 682.55 L766.105 682.55 L765.546 682.55 L764.987 682.55 L764.427 682.55 L763.868 682.55 L763.309 682.55 L762.75 682.55 L762.19 682.55 L761.631 682.55 L761.072 682.55 L760.513 682.55 L759.953 682.55 L759.394 682.55 L758.835 682.55 L758.276 682.55 L757.716 682.55 L757.157 682.55 L756.598 682.55 L756.039 682.55 L755.479 682.55 L754.92 682.55 L754.361 682.55 L753.802 682.55 L753.242 682.55 L752.683 682.55 L752.124 682.55 L751.565 682.55 L751.005 682.55 L750.446 682.55 L749.887 682.55 L749.328 682.55 L748.768 682.55 L748.209 682.55 L747.65 682.55 L747.091 682.55 L746.531 682.55 L745.972 682.55 L745.413 682.55 L744.854 682.55 L744.294 682.55 L743.735 682.55 L743.176 682.55 L742.617 682.55 L742.057 682.55 L741.498 682.55 L740.939 682.55 L740.38 682.55 L739.82 682.55 L739.261 682.55 L738.702 682.55 L738.143 682.55 L737.583 682.55 L737.024 682.55 L736.465 682.55 L735.906 682.55 L735.346 682.55 L734.787 682.55 L734.228 682.55 L733.669 682.55 L733.109 682.55 L732.55 682.55 L731.991 682.55 L731.432 682.55 L730.872 682.55 L730.313 682.55 L729.754 682.55 L729.195 682.55 L728.635 682.55 L728.076 682.55 L727.517 682.55 L726.958 682.55 L726.398 682.55 L725.839 682.55 L725.28 682.55 L724.721 682.55 L724.161 682.55 L723.602 682.55 L723.043 682.55 L722.484 682.55 L721.924 682.55 L721.365 682.55 L720.806 682.55 L720.247 682.55  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip383)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.415 720.806,683.415 721.365,683.415 721.924,683.415 722.484,683.415 723.043,683.415 723.602,683.415 724.161,683.415 724.721,683.415 725.28,683.415 725.839,683.415 726.398,683.415 726.958,683.415 727.517,683.415 728.076,683.415 728.635,683.415 729.195,683.415 729.754,683.415 730.313,683.415 730.872,683.415 731.432,683.415 731.991,683.415 732.55,683.415 733.109,683.415 733.669,683.415 734.228,683.415 734.787,683.415 735.346,683.415 735.906,683.415 736.465,683.415 737.024,683.415 737.583,683.415 738.143,683.415 738.702,683.415 739.261,683.415 739.82,683.415 740.38,683.415 740.939,683.415 741.498,683.415 742.057,683.415 742.617,683.415 743.176,683.415 743.735,683.415 744.294,683.415 744.854,683.415 745.413,683.415 745.972,683.415 746.531,683.415 747.091,683.415 747.65,683.415 748.209,683.415 748.768,683.415 749.328,683.415 749.887,683.415 750.446,683.415 751.005,683.415 751.565,683.415 752.124,683.415 752.683,683.415 753.242,683.415 753.802,683.415 754.361,683.415 754.92,683.415 755.479,683.415 756.039,683.415 756.598,683.415 757.157,683.415 757.716,683.415 758.276,683.415 758.835,683.415 759.394,683.415 759.953,683.415 760.513,683.415 761.072,683.415 761.631,683.415 762.19,683.415 762.75,683.415 763.309,683.415 763.868,683.415 764.427,683.415 764.987,683.415 765.546,683.415 766.105,683.415 766.664,683.415 767.224,683.415 767.783,683.415 768.342,683.415 768.901,683.415 769.461,683.415 770.02,683.415 770.579,683.415 771.138,683.415 771.698,683.415 772.257,683.415 772.816,683.415 773.375,683.415 773.935,683.415 774.494,683.415 775.053,683.415 775.612,683.415 776.172,683.415 776.731,683.415 777.29,683.415 777.849,683.415 778.409,683.415 778.968,683.415 779.527,683.415 780.086,683.415 780.646,683.415 781.205,683.415 781.764,683.415 782.323,683.415 782.883,683.415 783.442,683.415 784.001,683.415 784.56,683.415 785.12,683.415 785.679,683.415 786.238,683.415 786.797,683.415 787.357,683.415 787.916,683.415 788.475,683.415 789.034,683.415 789.594,683.415 790.153,683.415 790.712,683.415 791.271,683.415 791.831,683.415 792.39,683.415 792.949,683.415 793.508,683.415 794.068,683.415 794.627,683.415 795.186,683.415 795.745,683.415 796.305,683.415 796.864,683.415 797.423,683.415 797.982,683.415 798.542,683.415 799.101,683.415 799.66,683.415 800.219,683.415 800.779,683.415 801.338,683.415 801.897,683.415 802.456,683.415 803.016,683.415 803.575,683.415 804.134,683.415 804.693,683.415 805.253,683.415 805.812,683.415 806.371,683.415 806.931,683.415 807.49,683.415 808.049,683.415 808.608,683.415 809.168,683.415 809.727,683.415 810.286,683.415 810.845,683.415 811.405,683.415 811.964,683.415 812.523,683.415 813.082,683.415 813.642,683.415 814.201,683.415 814.76,683.415 815.319,683.415 815.879,683.415 816.438,683.415 816.997,683.415 817.556,683.415 818.116,683.415 818.675,683.415 819.234,683.415 819.793,683.415 820.353,683.415 820.912,683.415 821.471,683.415 822.03,683.415 822.59,683.415 823.149,683.415 823.708,683.415 824.267,683.415 824.827,683.415 825.386,683.415 825.945,683.415 826.504,683.415 827.064,683.415 827.623,683.415 828.182,683.415 828.741,683.415 829.301,683.415 829.86,683.415 830.419,683.415 830.978,683.415 831.538,683.415 832.097,683.415 832.656,683.415 833.215,683.415 833.775,683.415 834.334,683.415 834.893,683.415 835.452,683.415 836.012,683.415 836.571,683.415 837.13,683.415 837.689,683.415 838.249,683.415 838.808,683.415 839.367,683.415 839.926,683.415 840.486,683.415 841.045,683.415 841.604,683.415 842.163,683.415 842.723,683.415 843.282,683.415 843.841,683.415 844.4,683.415 844.96,683.415 845.519,683.415 846.078,683.415 846.637,683.415 847.197,683.415 847.756,683.415 848.315,683.415 848.874,683.415 849.434,683.415 849.993,683.415 850.552,683.415 851.111,683.415 851.671,683.415 852.23,683.415 852.789,683.415 853.348,683.415 853.908,683.415 854.467,683.415 855.026,683.415 855.585,683.415 856.145,683.415 856.704,683.415 857.263,683.415 857.822,683.415 858.382,683.415 858.941,683.415 859.5,683.415 860.059,683.415 860.619,683.415 861.178,683.415 861.737,683.415 862.296,683.415 862.856,683.415 863.415,683.415 863.974,683.415 864.533,683.415 865.093,683.415 865.652,683.415 866.211,683.415 866.77,683.415 867.33,683.415 867.889,683.415 868.448,683.415 869.007,683.415 869.567,683.415 870.126,683.415 870.685,683.415 871.244,683.415 871.804,683.415 872.363,683.415 872.922,683.415 873.481,683.415 874.041,683.415 874.6,683.415 875.159,683.415 875.718,683.415 876.278,683.415 876.837,683.415 877.396,683.415 877.955,683.415 878.515,683.415 879.074,683.415 879.633,683.415 880.192,683.415 880.752,683.415 881.311,683.415 881.87,683.415 882.429,683.415 882.989,683.415 883.548,683.415 884.107,683.415 884.666,683.415 885.226,683.415 885.785,683.415 886.344,683.415 886.903,683.415 887.463,683.415 888.022,683.415 888.581,683.415 889.14,683.415 889.7,683.415 890.259,683.415 890.818,683.415 891.377,683.415 891.937,683.415 892.496,683.415 893.055,683.415 893.614,683.415 894.174,683.415 894.733,683.415 895.292,683.415 895.851,683.415 896.411,683.415 896.97,683.415 897.529,683.415 898.088,683.415 898.648,683.415 899.207,683.415 899.766,683.415 900.325,683.415 900.885,683.415 901.444,683.415 902.003,683.415 902.562,683.415 903.122,683.415 903.681,683.415 904.24,683.415 904.799,683.415 905.359,683.415 905.918,683.415 906.477,683.415 907.036,683.415 907.596,683.415 908.155,683.415 908.714,683.415 909.273,683.415 909.833,683.415 910.392,683.415 910.951,683.415 911.51,683.415 912.07,683.415 912.629,683.415 913.188,683.415 913.747,683.415 914.307,683.415 914.866,683.415 915.425,683.415 915.984,683.415 916.544,683.415 917.103,683.415 917.662,683.415 918.221,683.415 918.781,683.415 919.34,683.415 919.899,683.415 920.458,683.415 921.018,683.415 921.577,683.415 922.136,683.415 922.695,683.415 923.255,683.415 923.814,683.415 924.373,683.415 924.932,683.415 925.492,683.415 926.051,683.415 926.61,683.415 927.169,683.415 927.729,683.415 928.288,683.415 928.847,683.415 929.406,683.415 929.966,683.415 930.525,683.415 931.084,683.415 931.644,683.415 932.203,683.415 932.762,683.415 933.321,683.415 933.881,683.415 934.44,683.415 934.999,683.415 935.558,683.415 936.118,683.415 936.677,683.415 937.236,683.415 937.795,683.415 938.355,683.415 938.914,683.415 939.473,683.415 940.032,683.415 940.592,683.415 941.151,683.415 941.71,683.415 942.269,683.415 942.829,683.415 943.388,683.415 943.947,683.415 944.506,683.415 945.066,683.415 945.625,683.415 946.184,683.415 946.743,683.415 947.303,683.415 947.862,683.415 948.421,683.415 948.98,683.415 949.54,683.415 950.099,683.415 950.658,683.415 951.217,683.415 951.777,683.415 952.336,683.415 952.895,683.415 953.454,683.415 954.014,683.415 954.573,683.415 955.132,683.415 955.691,683.415 956.251,683.415 956.81,683.415 957.369,683.415 957.928,683.415 958.488,683.415 959.047,683.415 959.606,683.415 960.165,683.415 960.725,683.415 961.284,683.415 961.843,683.415 962.402,683.415 962.962,683.415 963.521,683.415 964.08,683.415 964.639,683.415 965.199,683.415 965.758,683.415 966.317,683.415 966.876,683.415 967.436,683.415 967.995,683.415 968.554,683.415 969.113,683.415 969.673,683.415 970.232,683.415 970.791,683.415 971.35,683.415 971.91,683.415 972.469,683.415 973.028,683.415 973.587,683.415 974.147,683.415 974.706,683.415 975.265,683.415 975.824,683.415 976.384,683.415 976.943,683.415 977.502,683.415 978.061,683.415 978.621,683.415 979.18,683.415 979.739,683.415 980.298,683.415 980.858,683.415 981.417,683.415 981.976,683.415 982.535,683.415 983.095,683.415 983.654,683.415 984.213,683.415 984.772,683.415 985.332,683.415 985.891,683.415 986.45,683.415 987.009,683.415 987.569,683.415 988.128,683.415 988.687,683.415 989.246,683.415 989.806,683.415 990.365,683.415 990.924,683.415 991.483,683.415 992.043,683.415 992.602,683.415 993.161,683.415 993.72,683.415 994.28,683.415 994.839,683.415 995.398,683.415 995.957,683.415 996.517,683.415 997.076,683.415 997.635,683.415 998.194,683.415 998.754,683.415 999.313,683.415 999.872,683.415 1000.43,683.415 1000.99,683.415 1001.55,683.415 1002.11,683.415 1002.67,683.415 1003.23,683.415 1003.79,683.415 1004.35,683.415 1004.91,683.415 1005.46,683.415 1006.02,683.415 1006.58,683.415 1007.14,683.415 1007.7,683.415 1008.26,683.415 1008.82,683.415 1009.38,683.415 1009.94,683.415 1010.5,683.415 1011.06,683.415 1011.62,683.415 1012.18,683.415 1012.73,683.415 1013.29,683.415 1013.85,683.415 1014.41,683.415 1014.97,683.415 1015.53,683.415 1016.09,683.415 1016.65,683.415 1017.21,683.415 1017.77,683.415 1018.33,683.415 1018.89,683.415 1019.45,683.415 1020.01,683.415 1020.56,683.415 1021.12,683.415 1021.68,683.415 1022.24,683.415 1022.8,683.415 1023.36,683.415 1023.92,683.415 1024.48,683.415 1025.04,683.415 1025.6,683.415 1026.16,683.415 1026.72,683.415 1027.28,683.415 1027.83,683.415 1028.39,683.415 1028.95,683.415 1029.51,683.415 1030.07,683.415 1030.63,683.415 1031.19,683.415 1031.75,683.415 1032.31,683.415 1032.87,683.415 1033.43,683.415 1033.99,683.415 1034.55,683.415 1035.1,683.415 1035.66,683.415 1036.22,683.415 1036.78,683.415 1037.34,683.415 1037.9,683.415 1038.46,683.415 1039.02,683.415 1039.58,683.415 1040.14,683.415 1040.7,683.415 1041.26,683.415 1041.82,683.415 1042.38,683.415 1042.93,683.415 1043.49,683.415 1044.05,683.415 1044.61,683.415 1045.17,683.415 1045.73,683.415 1046.29,683.415 1046.85,683.415 1047.41,683.415 1047.97,683.415 1048.53,683.415 1049.09,683.415 1049.65,683.415 1050.2,683.415 1050.76,683.415 1051.32,683.415 1051.88,683.415 1052.44,683.415 1053,683.415 1053.56,683.415 1054.12,683.415 1054.68,683.415 1055.24,683.415 1055.8,683.415 1056.36,683.415 1056.92,683.415 1057.48,683.415 1058.03,683.415 1058.59,683.415 1059.15,683.415 1059.71,683.415 1060.27,683.415 1060.83,683.415 1061.39,683.415 1061.95,683.415 1062.51,683.415 1063.07,683.415 1063.63,683.415 1064.19,683.415 1064.75,683.415 1065.3,683.415 1065.86,683.415 1066.42,683.415 1066.98,683.415 1067.54,683.415 1068.1,683.415 1068.66,683.415 1069.22,683.415 1069.78,683.415 1070.34,683.415 1070.9,683.415 1071.46,683.415 1072.02,683.415 1072.57,683.415 1073.13,683.415 1073.69,683.415 1074.25,683.415 1074.81,683.415 1075.37,683.415 1075.93,683.415 1076.49,683.415 1077.05,683.415 1077.61,683.415 1078.17,683.415 1078.73,683.415 1079.29,683.415 1079.85,683.415 1080.4,683.415 1080.96,683.415 1081.52,683.415 1082.08,683.415 1082.64,683.415 1083.2,683.415 1083.76,683.415 1084.32,683.415 1084.88,683.415 1085.44,683.415 1086,683.415 1086.56,683.415 1087.12,683.415 1087.67,683.415 1088.23,683.415 1088.79,683.415 1089.35,683.415 1089.91,683.415 1090.47,683.415 1091.03,683.415 1091.59,683.415 1092.15,683.415 1092.71,683.415 1093.27,683.415 1093.83,683.415 1094.39,683.415 1094.94,683.415 1095.5,683.415 1096.06,683.415 1096.62,683.415 1097.18,683.415 1097.74,683.415 1098.3,683.415 1098.86,683.415 1099.42,683.415 1099.98,683.415 1100.54,683.415 1101.1,683.415 1101.66,683.415 1102.22,683.415 1102.77,683.415 1103.33,683.415 1103.89,683.415 1104.45,683.415 1105.01,683.415 1105.57,683.415 1106.13,683.415 1106.69,683.415 1107.25,683.415 1107.81,683.415 1108.37,683.415 1108.93,683.415 1109.49,683.415 1110.04,683.415 1110.6,683.415 1111.16,683.415 1111.72,683.415 1112.28,683.415 1112.84,683.415 1113.4,683.415 1113.96,683.415 1114.52,683.415 1115.08,683.415 1115.64,683.415 1116.2,683.415 1116.76,683.415 1117.31,683.415 1117.87,683.415 1118.43,683.415 1118.99,683.415 1119.55,683.415 1120.11,683.415 1120.67,683.415 1121.23,683.415 1121.79,683.415 1122.35,683.415 1122.91,683.415 1123.47,683.415 1124.03,683.415 1124.59,683.415 1125.14,683.415 1125.7,683.415 1126.26,683.415 1126.82,683.415 1127.38,683.415 1127.94,683.415 1128.5,683.415 1129.06,683.415 1129.62,683.415 1130.18,683.415 1130.74,683.415 1131.3,683.415 1131.86,683.415 1132.41,683.415 1132.97,683.415 1133.53,683.415 1134.09,683.415 1134.65,683.415 1135.21,683.415 1135.77,683.415 1136.33,683.415 1136.89,683.415 1137.45,683.415 1138.01,683.415 1138.57,683.415 1139.13,683.415 1139.68,683.415 1140.24,683.415 1140.8,683.415 1141.36,683.415 1141.92,683.415 1142.48,683.415 1143.04,683.415 1143.6,683.415 1144.16,683.415 1144.72,683.415 1145.28,683.415 1145.84,683.415 1146.4,683.415 1146.96,683.415 1147.51,683.415 1148.07,683.415 1148.63,683.415 1149.19,683.415 1149.75,683.415 1150.31,683.415 1150.87,683.415 1151.43,683.415 1151.99,683.415 1152.55,683.415 1153.11,683.415 1153.67,683.415 1154.23,683.415 1154.78,683.415 1155.34,683.415 1155.9,683.415 1156.46,683.415 1157.02,683.415 1157.58,683.415 1158.14,683.415 1158.7,683.415 1159.26,683.415 1159.82,683.415 1160.38,683.415 1160.94,683.415 1161.5,683.415 1162.05,683.415 1162.61,683.415 1163.17,683.415 1163.73,683.415 1164.29,683.415 1164.85,683.415 1165.41,683.415 1165.97,683.415 1166.53,683.415 1167.09,683.415 1167.65,683.415 1168.21,683.415 1168.77,683.415 1169.33,683.415 1169.88,683.415 1170.44,683.415 1171,683.415 1171.56,683.415 1172.12,683.415 1172.68,683.415 1173.24,683.415 1173.8,683.415 1174.36,683.415 1174.92,683.415 1175.48,683.415 1176.04,683.415 1176.6,683.415 1177.15,683.415 1177.71,683.415 1178.27,683.415 1178.83,683.415 1179.39,683.415 1179.95,683.415 1180.51,683.415 1181.07,683.415 1181.63,683.415 1182.19,683.415 1182.75,683.415 1183.31,683.415 1183.87,683.415 1184.43,683.415 1184.98,683.415 1185.54,683.415 1186.1,683.415 1186.66,683.415 1187.22,683.415 1187.78,683.415 1188.34,683.415 1188.9,683.415 1189.46,683.415 1190.02,683.415 1190.58,683.415 1191.14,683.415 1191.7,683.415 1192.25,683.415 1192.81,683.415 1193.37,683.415 1193.93,683.415 1194.49,683.415 1195.05,683.415 1195.61,683.415 1196.17,683.415 1196.73,683.415 1197.29,683.415 1197.85,683.415 1198.41,683.415 1198.97,683.415 1199.52,683.415 1200.08,683.415 1200.64,683.415 1201.2,683.415 1201.76,683.415 1202.32,683.415 1202.88,683.415 1203.44,683.415 1204,683.415 1204.56,683.415 1205.12,683.415 1205.68,683.415 1206.24,683.415 1206.8,683.415 1207.35,683.415 1207.91,683.415 1208.47,683.415 1209.03,683.415 1209.59,683.415 1210.15,683.415 1210.71,683.415 1211.27,683.415 1211.83,683.415 1212.39,683.415 1212.95,683.415 1213.51,683.415 1214.07,683.415 1214.62,683.415 1215.18,683.415 1215.74,683.415 1216.3,683.415 1216.86,683.415 1217.42,683.415 1217.98,683.415 1218.54,683.415 1219.1,683.415 1219.66,683.415 1220.22,683.415 1220.78,683.415 1221.34,683.415 1221.89,683.415 1222.45,683.415 1223.01,683.415 1223.57,683.415 1224.13,683.415 1224.69,683.415 1225.25,683.415 1225.81,683.415 1226.37,683.415 1226.93,683.415 1227.49,683.415 1228.05,683.415 1228.61,683.415 1229.17,683.415 1229.72,683.415 1230.28,683.415 1230.84,683.415 1231.4,683.415 1231.96,683.415 1232.52,683.415 1233.08,683.415 1233.64,683.415 1234.2,683.415 1234.76,683.415 1235.32,683.415 1235.88,683.415 1236.44,683.415 1236.99,683.415 1237.55,683.415 1238.11,683.415 1238.67,683.415 1239.23,683.415 1239.79,683.415 1240.35,683.415 1240.91,683.415 1241.47,683.415 1242.03,683.415 1242.59,683.415 1243.15,683.415 1243.71,683.415 1244.26,683.415 1244.82,683.415 1245.38,683.415 1245.94,683.415 1246.5,683.415 1247.06,683.415 1247.62,683.415 1248.18,683.415 1248.74,683.415 1249.3,683.415 1249.86,683.415 1250.42,683.415 1250.98,683.415 1251.54,683.415 1252.09,683.415 1252.65,683.415 1253.21,683.415 1253.77,683.415 1254.33,683.415 1254.89,683.415 1255.45,683.415 1256.01,683.415 1256.57,683.415 1257.13,683.415 1257.69,683.415 1258.25,683.415 1258.81,683.415 1259.36,683.415 1259.92,683.415 1260.48,683.415 1261.04,683.415 1261.6,683.415 1262.16,683.415 1262.72,683.415 1263.28,683.415 1263.84,683.415 1264.4,683.415 1264.96,683.415 1265.52,683.415 1266.08,683.415 1266.63,683.415 1267.19,683.415 1267.75,683.415 1268.31,683.415 1268.87,683.415 1269.43,683.415 1269.99,683.415 1270.55,683.415 1271.11,683.415 1271.67,683.415 1272.23,683.415 1272.79,683.415 1273.35,683.415 1273.91,683.415 1274.46,683.415 1275.02,683.415 1275.58,683.415 1276.14,683.415 1276.7,683.415 1277.26,683.415 1277.82,683.415 1278.38,683.415 1278.94,683.415 1279.5,683.415 1280.06,683.415 1280.62,683.415 1281.18,683.415 1281.73,683.415 1282.29,683.415 1282.85,683.415 1283.41,683.415 1283.97,683.415 1284.53,683.415 1285.09,683.415 1285.65,683.415 1286.21,683.415 1286.77,683.415 1287.33,683.415 1287.89,683.415 1288.45,683.415 1289,683.415 1289.56,683.415 1290.12,683.415 1290.68,683.415 1291.24,683.415 1291.8,683.415 1292.36,683.415 1292.92,683.415 1293.48,683.415 1294.04,683.415 1294.6,683.415 1295.16,683.415 1295.72,683.415 1296.28,683.415 1296.83,683.415 1297.39,683.415 1297.95,683.415 1298.51,683.415 1299.07,683.415 1299.63,683.415 1300.19,683.415 1300.75,683.415 1301.31,683.415 1301.87,683.415 1302.43,683.415 1302.99,683.415 1303.55,683.415 1304.1,683.415 1304.66,683.415 1305.22,683.415 1305.78,683.415 1306.34,683.415 1306.9,683.415 1307.46,683.415 1308.02,683.415 1308.58,683.415 1309.14,683.415 1309.7,683.415 1310.26,683.415 1310.82,683.415 1311.38,683.415 1311.93,683.415 1312.49,683.415 1313.05,683.415 1313.61,683.415 1314.17,683.415 1314.73,683.415 1315.29,683.415 1315.85,683.415 1316.41,683.415 1316.97,683.415 1317.53,683.415 1318.09,683.415 1318.65,683.415 1319.2,683.415 1319.76,683.415 1320.32,683.415 1320.88,683.415 1321.44,683.415 1322,683.415 1322.56,683.415 1323.12,683.415 1323.68,683.415 1324.24,683.415 1324.8,683.415 1325.36,683.415 1325.92,683.415 1326.47,683.415 1327.03,683.415 1327.59,683.415 1328.15,683.415 1328.71,683.415 1329.27,683.415 1329.83,683.415 1330.39,683.415 1330.95,683.415 1331.51,683.415 1332.07,683.415 1332.63,683.415 1333.19,683.415 1333.75,683.415 1334.3,683.415 1334.86,683.415 1335.42,683.415 1335.98,683.415 1336.54,683.415 1337.1,683.415 1337.66,683.415 1338.22,683.415 1338.78,683.415 1339.34,683.415 1339.9,683.415 1340.46,683.415 1341.02,683.415 1341.57,683.415 1342.13,683.415 1342.69,683.415 1343.25,683.415 1343.81,683.415 1344.37,683.415 1344.93,683.415 1345.49,683.415 1346.05,683.415 1346.61,683.415 1347.17,683.415 1347.73,683.415 1348.29,683.415 1348.84,683.415 1349.4,683.415 1349.96,683.415 1350.52,683.415 1351.08,683.415 1351.64,683.415 1352.2,683.415 1352.76,683.415 1353.32,683.415 1353.88,683.415 1354.44,683.415 1355,683.415 1355.56,683.415 1356.12,683.415 1356.67,683.415 1357.23,683.415 1357.79,683.415 1358.35,683.415 1358.91,683.415 1359.47,683.415 1360.03,683.415 1360.59,683.415 1361.15,683.415 1361.71,683.415 1362.27,683.415 1362.83,683.415 1363.39,683.415 1363.94,683.415 1364.5,683.415 1365.06,683.415 1365.62,683.415 1366.18,683.415 1366.74,683.415 1367.3,683.415 1367.86,683.415 1368.42,683.415 1368.98,683.415 1369.54,683.415 1370.1,683.415 1370.66,683.415 1371.21,683.415 1371.77,683.415 1372.33,683.415 1372.89,683.415 1373.45,683.415 1374.01,683.415 1374.57,683.415 1375.13,683.415 1375.69,683.415 1376.25,683.415 1376.81,683.415 1377.37,683.415 1377.93,683.415 1378.49,683.415 1379.04,683.415 1379.6,683.415 1380.16,683.415 1380.72,683.415 1381.28,683.415 1381.84,683.415 1382.4,683.415 1382.96,683.415 1383.52,683.415 1384.08,683.415 1384.64,683.415 1385.2,683.415 1385.76,683.415 1386.31,683.415 1386.87,683.415 1387.43,683.415 1387.99,683.415 1388.55,683.415 1389.11,683.415 1389.67,683.415 1390.23,683.415 1390.79,683.415 1391.35,683.415 1391.91,683.415 1392.47,683.415 1393.03,683.415 1393.58,683.415 1394.14,683.415 1394.7,683.415 1395.26,683.415 1395.82,683.415 1396.38,683.415 1396.94,683.415 1397.5,683.415 1398.06,683.415 1398.62,683.415 1399.18,683.415 1399.74,683.415 1400.3,683.415 1400.86,683.415 1401.41,683.415 1401.97,683.415 1402.53,683.415 1403.09,683.415 1403.65,683.415 1404.21,683.415 1404.77,683.415 1405.33,683.415 1405.89,683.415 1406.45,683.415 1407.01,683.415 1407.57,683.415 1408.13,683.415 1408.68,683.415 1409.24,683.415 1409.8,683.415 1410.36,683.415 1410.92,683.415 1411.48,683.415 1412.04,683.415 1412.6,683.415 1413.16,683.415 1413.72,683.415 1414.28,683.415 1414.84,683.415 1415.4,683.415 1415.95,683.415 1416.51,683.415 1417.07,683.415 1417.63,683.415 1418.19,683.415 1418.75,683.415 1419.31,683.415 1419.87,683.415 1420.43,683.415 1420.99,683.415 1421.55,683.415 1422.11,683.415 1422.67,683.415 1423.23,683.415 1423.78,683.415 1424.34,683.415 1424.9,683.415 1425.46,683.415 1426.02,683.415 1426.58,683.415 1427.14,683.415 1427.7,683.415 1428.26,683.415 1428.82,683.415 1429.38,683.415 1429.94,683.415 1430.5,683.415 1431.05,683.415 1431.61,683.415 1432.17,683.415 1432.73,683.415 1433.29,683.415 1433.85,683.415 1434.41,683.415 1434.97,683.415 1435.53,683.415 1436.09,683.415 1436.65,683.415 1437.21,683.415 1437.77,683.415 1438.33,683.415 1438.88,683.415 1439.44,683.415 1440,683.415 1440.56,683.415 1441.12,683.415 1441.68,683.415 1442.24,683.415 1442.8,683.415 1443.36,683.415 1443.92,683.415 1444.48,683.415 1445.04,683.415 1445.6,683.415 1446.15,683.415 1446.71,683.415 1447.27,683.415 1447.83,683.415 1448.39,683.415 1448.95,683.415 1449.51,683.415 1450.07,683.415 1450.63,683.415 1451.19,683.415 1451.75,683.415 1452.31,683.415 1452.87,683.415 1453.42,683.415 1453.98,683.415 1454.54,683.415 1455.1,683.415 1455.66,683.415 1456.22,683.415 1456.78,683.415 1457.34,683.415 1457.9,683.415 1458.46,683.415 1459.02,683.415 1459.58,683.415 1460.14,683.415 1460.7,683.415 1461.25,683.415 1461.81,683.415 1462.37,683.415 1462.93,683.415 1463.49,683.415 1464.05,683.415 1464.61,683.415 1465.17,683.415 1465.73,683.415 1466.29,683.415 1466.85,683.415 1467.41,683.415 1467.97,683.415 1468.52,683.415 1469.08,683.415 1469.64,683.415 1470.2,683.415 1470.76,683.415 1471.32,683.415 1471.88,683.415 1472.44,683.415 1473,683.415 1473.56,683.415 1474.12,683.415 1474.68,683.415 1475.24,683.415 1475.79,683.415 1476.35,683.415 1476.91,683.415 1477.47,683.415 1478.03,683.415 1478.59,683.415 1479.15,683.415 1479.71,683.415 1480.27,683.415 1480.83,683.415 1481.39,683.415 1481.95,683.415 1482.51,683.415 1483.07,683.415 1483.62,683.415 1484.18,683.415 1484.74,683.415 1485.3,683.415 1485.86,683.415 1486.42,683.415 1486.98,683.415 1487.54,683.415 1488.1,683.415 1488.66,683.415 1489.22,683.415 1489.78,683.415 1490.34,683.415 1490.89,683.415 1491.45,683.415 1492.01,683.415 1492.57,683.415 1493.13,683.415 1493.69,683.415 1494.25,683.415 1494.81,683.415 1495.37,683.415 1495.93,683.415 1496.49,683.415 1497.05,683.415 1497.61,683.415 1498.16,683.415 1498.72,683.415 1499.28,683.415 1499.84,683.415 1500.4,683.415 1500.96,683.415 1501.52,683.415 1502.08,683.415 1502.64,683.415 1503.2,683.415 1503.76,683.415 1504.32,683.415 1504.88,683.415 1505.44,683.415 1505.99,683.415 1506.55,683.415 1507.11,683.415 1507.67,683.415 1508.23,683.415 1508.79,683.415 1509.35,683.415 1509.91,683.415 1510.47,683.415 1511.03,683.415 1511.59,683.415 1512.15,683.415 1512.71,683.415 1513.26,683.415 1513.82,683.415 1514.38,683.415 1514.94,683.415 1515.5,683.415 1516.06,683.415 1516.62,683.415 1517.18,683.415 1517.74,683.415 1518.3,683.415 1518.86,683.415 1519.42,683.415 1519.98,683.415 1520.53,683.415 1521.09,683.415 1521.65,683.415 1522.21,683.415 1522.77,683.415 1523.33,683.415 1523.89,683.415 1524.45,683.415 1525.01,683.415 1525.57,683.415 1526.13,683.415 1526.69,683.415 1527.25,683.415 1527.81,683.415 1528.36,683.415 1528.92,683.415 1529.48,683.415 1530.04,683.415 1530.6,683.415 1531.16,683.415 1531.72,683.415 1532.28,683.415 1532.84,683.415 1533.4,683.415 1533.96,683.415 1534.52,683.415 1535.08,683.415 1535.63,683.415 1536.19,683.415 1536.75,683.415 1537.31,683.415 1537.87,683.415 1538.43,683.415 1538.99,683.415 1539.55,683.415 1540.11,683.415 1540.67,683.415 1541.23,683.415 1541.79,683.415 1542.35,683.415 1542.9,683.415 1543.46,683.415 1544.02,683.415 1544.58,683.415 1545.14,683.415 1545.7,683.415 1546.26,683.415 1546.82,683.415 1547.38,683.415 1547.94,683.415 1548.5,683.415 1549.06,683.415 1549.62,683.415 1550.18,683.415 1550.73,683.415 1551.29,683.415 1551.85,683.415 1552.41,683.415 1552.97,683.415 1553.53,683.415 1554.09,683.415 1554.65,683.415 1555.21,683.415 1555.77,683.415 1556.33,683.415 1556.89,683.415 1557.45,683.415 1558,683.415 1558.56,683.415 1559.12,683.415 1559.68,683.415 1560.24,683.415 1560.8,683.415 1561.36,683.415 1561.92,683.415 1562.48,683.415 1563.04,683.415 1563.6,683.415 1564.16,683.415 1564.72,683.415 1565.28,683.415 1565.83,683.415 1566.39,683.415 1566.95,683.415 1567.51,683.415 1568.07,683.415 1568.63,683.415 1569.19,683.415 1569.75,683.415 1570.31,683.415 1570.87,683.415 1571.43,683.415 1571.99,683.415 1572.55,683.415 1573.1,683.415 1573.66,683.415 1574.22,683.415 1574.78,683.415 1575.34,683.415 1575.9,683.415 1576.46,683.415 1577.02,683.415 1577.58,683.415 1578.14,683.415 1578.7,683.415 1579.26,683.415 1579.82,683.415 1580.37,683.415 1580.93,683.415 1581.49,683.415 1582.05,683.415 1582.61,683.415 1583.17,683.415 1583.73,683.415 1584.29,683.415 1584.85,683.415 1585.41,683.415 1585.97,683.415 1586.53,683.415 1587.09,683.415 1587.65,683.415 1588.2,683.415 1588.76,683.415 1589.32,683.415 1589.88,683.415 1590.44,683.415 1591,683.415 1591.56,683.415 1592.12,683.415 1592.68,683.415 1593.24,683.415 1593.8,683.415 1594.36,683.415 1594.92,683.415 1595.47,683.415 1596.03,683.415 1596.59,683.415 1597.15,683.415 1597.71,683.415 1598.27,683.415 1598.83,683.415 1599.39,683.415 1599.95,683.415 1600.51,683.415 1601.07,683.415 1601.63,683.415 1602.19,683.415 1602.74,683.415 1603.3,683.415 1603.86,683.415 1604.42,683.415 1604.98,683.415 1605.54,683.415 1606.1,683.415 1606.66,683.415 1607.22,683.415 1607.78,683.415 1608.34,683.415 1608.9,683.415 1609.46,683.415 1610.02,683.415 1610.57,683.415 1611.13,683.415 1611.69,683.415 1612.25,683.415 1612.81,683.415 1613.37,683.415 1613.93,683.415 1614.49,683.415 1615.05,683.415 1615.61,683.415 1616.17,683.415 1616.73,683.415 1617.29,683.415 1617.84,683.415 1618.4,683.415 1618.96,683.415 1619.52,683.415 1620.08,683.415 1620.64,683.415 1621.2,683.415 1621.76,683.415 1622.32,683.415 1622.88,683.415 1623.44,683.415 1624,683.415 1624.56,683.415 1625.11,683.415 1625.67,683.415 1626.23,683.415 1626.79,683.415 1627.35,683.415 1627.91,683.415 1628.47,683.415 1629.03,683.415 1629.59,683.415 1630.15,683.415 1630.71,683.415 1631.27,683.415 1631.83,683.415 1632.39,683.415 1632.94,683.415 1633.5,683.415 1634.06,683.415 1634.62,683.415 1635.18,683.415 1635.74,683.415 1636.3,683.415 1636.86,683.415 1637.42,683.415 1637.98,683.415 1638.54,683.415 1639.1,683.415 1639.66,683.415 1640.21,683.415 1640.77,683.415 1641.33,683.415 1641.89,683.415 1642.45,683.415 1643.01,683.415 1643.57,683.415 1644.13,683.415 1644.69,683.415 1645.25,683.415 1645.81,683.415 1646.37,683.415 1646.93,683.415 1647.48,683.415 1648.04,683.415 1648.6,683.415 1649.16,683.415 1649.72,683.415 1650.28,683.415 1650.84,683.415 1651.4,683.415 1651.96,683.415 1652.52,683.415 1653.08,683.415 1653.64,683.415 1654.2,683.415 1654.76,683.415 1655.31,683.415 1655.87,683.415 1656.43,683.415 1656.99,683.415 1657.55,683.415 1658.11,683.415 1658.67,683.415 1659.23,683.415 1659.79,683.415 1660.35,683.415 1660.91,683.415 1661.47,683.415 1662.03,683.415 1662.58,683.415 1663.14,683.415 1663.7,683.415 1664.26,683.415 1664.82,683.415 1665.38,683.415 1665.94,683.415 1666.5,683.415 1667.06,683.415 1667.62,683.415 1668.18,683.415 1668.74,683.415 1669.3,683.415 1669.85,683.415 1670.41,683.415 1670.97,683.415 1671.53,683.415 1672.09,683.415 1672.65,683.415 1673.21,683.415 1673.77,683.415 1674.33,683.415 1674.89,683.415 1675.45,683.415 1676.01,683.415 1676.57,683.415 1677.13,683.415 1677.68,683.415 1678.24,683.415 1678.8,683.415 1679.36,683.415 1679.92,683.415 1680.48,683.415 1681.04,683.415 1681.6,683.415 1682.16,683.415 1682.72,683.415 1683.28,683.415 1683.84,683.415 1684.4,683.415 1684.95,683.415 1685.51,683.415 1686.07,683.415 1686.63,683.415 1687.19,683.415 1687.75,683.415 1688.31,683.415 1688.87,683.415 1689.43,683.415 1689.99,683.415 1690.55,683.415 1691.11,683.415 1691.67,683.415 1692.23,683.415 1692.78,683.415 1693.34,683.415 1693.9,683.415 1694.46,683.415 1695.02,683.415 1695.58,683.415 1696.14,683.415 1696.7,683.415 1697.26,683.415 1697.82,683.415 1698.38,683.415 1698.94,683.415 1699.5,683.415 1700.05,683.415 1700.61,683.415 1701.17,683.415 1701.73,683.415 1702.29,683.415 1702.85,683.415 1703.41,683.415 1703.97,683.415 1704.53,683.415 1705.09,683.415 1705.65,683.415 1706.21,683.415 1706.77,683.415 1707.32,683.415 1707.88,683.415 1708.44,683.415 1709,683.415 1709.56,683.415 1710.12,683.415 1710.68,683.415 1711.24,683.415 1711.8,683.415 1712.36,683.415 1712.92,683.415 1713.48,683.415 1714.04,683.415 1714.6,683.415 1715.15,683.415 1715.71,683.415 1716.27,683.415 1716.83,683.415 1717.39,683.415 1717.95,683.415 1718.51,683.415 1719.07,683.415 1719.63,683.415 1720.19,683.415 1720.75,683.415 1721.31,683.415 1721.87,683.415 1722.42,683.415 1722.98,683.415 1723.54,683.415 1724.1,683.415 1724.66,683.415 1725.22,683.415 1725.78,683.415 1726.34,683.415 1726.9,683.415 1727.46,683.415 1728.02,683.415 1728.58,683.415 1729.14,683.415 1729.69,683.415 1730.25,683.415 1730.81,683.415 1731.37,683.415 1731.93,683.415 1732.49,683.415 1733.05,683.415 1733.61,683.415 1734.17,683.415 1734.73,683.415 1735.29,683.415 1735.85,683.415 1736.41,683.415 1736.97,683.415 1737.52,683.415 1738.08,683.415 1738.64,683.415 1739.2,683.415 1739.76,683.415 1740.32,683.415 1740.88,683.415 1741.44,683.415 1742,683.415 1742.56,683.415 1743.12,683.415 1743.68,683.415 1744.24,683.415 1744.79,683.415 1745.35,683.415 1745.91,683.415 1746.47,683.415 1747.03,683.415 1747.59,683.415 1748.15,683.415 1748.71,683.415 1749.27,683.415 1749.83,683.415 1750.39,683.415 1750.95,683.415 1751.51,683.415 1752.06,683.415 1752.62,683.415 1753.18,683.415 1753.74,683.415 1754.3,683.415 1754.86,683.415 1755.42,683.415 1755.98,683.415 1756.54,683.415 1757.1,683.415 1757.66,683.415 1758.22,683.415 1758.78,683.415 1759.34,683.415 1759.89,683.415 1760.45,683.415 1761.01,683.415 1761.57,683.415 1762.13,683.415 1762.69,683.415 1763.25,683.415 1763.81,683.415 1764.37,683.415 1764.93,683.415 1765.49,683.415 1766.05,683.415 1766.61,683.415 1767.16,683.415 1767.72,683.415 1768.28,683.415 1768.84,683.415 1769.4,683.415 1769.96,683.415 1770.52,683.415 1771.08,683.415 1771.64,683.415 1772.2,683.415 1772.76,683.415 1773.32,683.415 1773.88,683.415 1774.43,683.415 1774.99,683.415 1775.55,683.415 1776.11,683.415 1776.67,683.415 1777.23,683.415 1777.79,683.415 1778.35,683.415 1778.91,683.415 1779.47,683.415 1780.03,683.415 1780.59,683.415 1781.15,683.415 1781.71,683.415 1782.26,683.415 1782.82,683.415 1783.38,683.415 1783.94,683.415 1784.5,683.415 1785.06,683.415 1785.62,683.415 1786.18,683.415 1786.74,683.415 1787.3,683.415 1787.86,683.415 1788.42,683.415 1788.98,683.415 1789.53,683.415 1790.09,683.415 1790.65,683.415 1791.21,683.415 1791.77,683.415 1792.33,683.415 1792.89,683.415 1793.45,683.415 1794.01,683.415 1794.57,683.415 1795.13,683.415 1795.69,683.415 1796.25,683.415 1796.8,683.415 1797.36,683.415 1797.92,683.415 1798.48,683.415 1799.04,683.415 1799.6,683.415 1800.16,683.415 1800.72,683.415 1801.28,683.415 1801.84,683.415 1802.4,683.415 1802.96,683.415 1803.52,683.415 1804.08,683.415 1804.63,683.415 1805.19,683.415 1805.75,683.415 1806.31,683.415 1806.87,683.415 1807.43,683.415 1807.99,683.415 1808.55,683.415 1809.11,683.415 1809.67,683.415 1810.23,683.415 1810.79,683.415 1811.35,683.415 1811.9,683.415 1812.46,683.415 1813.02,683.415 1813.58,683.415 1814.14,683.415 1814.7,683.415 1815.26,683.415 1815.82,683.415 1816.38,683.415 1816.94,683.415 1817.5,683.415 1818.06,683.415 1818.62,683.415 1819.18,683.415 1819.73,683.415 1820.29,683.415 1820.85,683.415 1821.41,683.415 1821.97,683.415 1822.53,683.415 1823.09,683.415 1823.65,683.415 1824.21,683.415 1824.77,683.415 1825.33,683.415 1825.89,683.415 1826.45,683.415 1827,683.415 1827.56,683.415 1828.12,683.415 1828.68,683.415 1829.24,683.415 1829.8,683.415 1830.36,683.415 1830.92,683.415 1831.48,683.415 1832.04,683.415 1832.6,683.415 1833.16,683.415 1833.72,683.415 1834.27,683.415 1834.83,683.415 1835.39,683.415 1835.95,683.415 1836.51,683.415 1837.07,683.415 1837.63,683.415 1838.19,683.415 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.031591108922788 ± 0.02096187088107105\nProjected Energy: -4.01423019851471 ± (0.004359037614690919, 0.004356605312871409)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.474988</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4447e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.4297e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.387e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.252e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.494e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.827e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
