var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip010\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip010)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip011\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip010)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip012\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip010)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.34 2211.02,1003.34 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.848 2211.02,745.848 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.358 2211.02,488.358 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.867 2211.02,230.867 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.34 423.181,1003.34 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.848 423.181,745.848 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.358 423.181,488.358 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.867 423.181,230.867 \"/>\n<path clip-path=\"url(#clip010)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.53 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.53 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M290.043 1016.68 L306.363 1016.68 L306.363 1020.62 L284.418 1020.62 L284.418 1016.68 Q287.08 1013.93 291.664 1009.3 Q296.27 1004.65 297.451 1003.3 Q299.696 1000.78 300.576 999.044 Q301.478 997.285 301.478 995.595 Q301.478 992.84 299.534 991.104 Q297.613 989.368 294.511 989.368 Q292.312 989.368 289.858 990.132 Q287.427 990.896 284.65 992.447 L284.65 987.725 Q287.474 986.59 289.927 986.012 Q292.381 985.433 294.418 985.433 Q299.789 985.433 302.983 988.118 Q306.177 990.803 306.177 995.294 Q306.177 997.424 305.367 999.345 Q304.58 1001.24 302.474 1003.84 Q301.895 1004.51 298.793 1007.72 Q295.691 1010.92 290.043 1016.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M316.224 986.058 L334.58 986.058 L334.58 989.993 L320.506 989.993 L320.506 998.465 Q321.524 998.118 322.543 997.956 Q323.562 997.771 324.58 997.771 Q330.367 997.771 333.747 1000.94 Q337.126 1004.11 337.126 1009.53 Q337.126 1015.11 333.654 1018.21 Q330.182 1021.29 323.862 1021.29 Q321.687 1021.29 319.418 1020.92 Q317.173 1020.55 314.765 1019.81 L314.765 1015.11 Q316.849 1016.24 319.071 1016.8 Q321.293 1017.35 323.77 1017.35 Q327.774 1017.35 330.112 1015.25 Q332.45 1013.14 332.45 1009.53 Q332.45 1005.92 330.112 1003.81 Q327.774 1001.71 323.77 1001.71 Q321.895 1001.71 320.02 1002.12 Q318.168 1002.54 316.224 1003.42 L316.224 986.058 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M356.339 989.137 Q352.728 989.137 350.899 992.701 Q349.094 996.243 349.094 1003.37 Q349.094 1010.48 350.899 1014.04 Q352.728 1017.59 356.339 1017.59 Q359.973 1017.59 361.779 1014.04 Q363.608 1010.48 363.608 1003.37 Q363.608 996.243 361.779 992.701 Q359.973 989.137 356.339 989.137 M356.339 985.433 Q362.149 985.433 365.205 990.039 Q368.284 994.623 368.284 1003.37 Q368.284 1012.1 365.205 1016.71 Q362.149 1021.29 356.339 1021.29 Q350.529 1021.29 347.45 1016.71 Q344.395 1012.1 344.395 1003.37 Q344.395 994.623 347.45 990.039 Q350.529 985.433 356.339 985.433 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M286.062 728.568 L304.418 728.568 L304.418 732.503 L290.344 732.503 L290.344 740.975 Q291.363 740.628 292.381 740.466 Q293.4 740.281 294.418 740.281 Q300.205 740.281 303.585 743.452 Q306.964 746.623 306.964 752.04 Q306.964 757.619 303.492 760.72 Q300.02 763.799 293.701 763.799 Q291.525 763.799 289.256 763.429 Q287.011 763.058 284.603 762.318 L284.603 757.619 Q286.687 758.753 288.909 759.308 Q291.131 759.864 293.608 759.864 Q297.613 759.864 299.951 757.757 Q302.288 755.651 302.288 752.04 Q302.288 748.429 299.951 746.322 Q297.613 744.216 293.608 744.216 Q291.733 744.216 289.858 744.633 Q288.006 745.049 286.062 745.929 L286.062 728.568 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M326.177 731.647 Q322.566 731.647 320.737 735.211 Q318.932 738.753 318.932 745.883 Q318.932 752.989 320.737 756.554 Q322.566 760.095 326.177 760.095 Q329.811 760.095 331.617 756.554 Q333.446 752.989 333.446 745.883 Q333.446 738.753 331.617 735.211 Q329.811 731.647 326.177 731.647 M326.177 727.943 Q331.987 727.943 335.043 732.549 Q338.122 737.133 338.122 745.883 Q338.122 754.609 335.043 759.216 Q331.987 763.799 326.177 763.799 Q320.367 763.799 317.288 759.216 Q314.233 754.609 314.233 745.883 Q314.233 737.133 317.288 732.549 Q320.367 727.943 326.177 727.943 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M356.339 731.647 Q352.728 731.647 350.899 735.211 Q349.094 738.753 349.094 745.883 Q349.094 752.989 350.899 756.554 Q352.728 760.095 356.339 760.095 Q359.973 760.095 361.779 756.554 Q363.608 752.989 363.608 745.883 Q363.608 738.753 361.779 735.211 Q359.973 731.647 356.339 731.647 M356.339 727.943 Q362.149 727.943 365.205 732.549 Q368.284 737.133 368.284 745.883 Q368.284 754.609 365.205 759.216 Q362.149 763.799 356.339 763.799 Q350.529 763.799 347.45 759.216 Q344.395 754.609 344.395 745.883 Q344.395 737.133 347.45 732.549 Q350.529 727.943 356.339 727.943 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M284.835 471.078 L307.057 471.078 L307.057 473.068 L294.511 505.638 L289.627 505.638 L301.432 475.013 L284.835 475.013 L284.835 471.078 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M316.224 471.078 L334.58 471.078 L334.58 475.013 L320.506 475.013 L320.506 483.485 Q321.524 483.138 322.543 482.976 Q323.562 482.791 324.58 482.791 Q330.367 482.791 333.747 485.962 Q337.126 489.133 337.126 494.55 Q337.126 500.128 333.654 503.23 Q330.182 506.309 323.862 506.309 Q321.687 506.309 319.418 505.939 Q317.173 505.568 314.765 504.827 L314.765 500.128 Q316.849 501.263 319.071 501.818 Q321.293 502.374 323.77 502.374 Q327.774 502.374 330.112 500.267 Q332.45 498.161 332.45 494.55 Q332.45 490.939 330.112 488.832 Q327.774 486.726 323.77 486.726 Q321.895 486.726 320.02 487.142 Q318.168 487.559 316.224 488.439 L316.224 471.078 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M356.339 474.156 Q352.728 474.156 350.899 477.721 Q349.094 481.263 349.094 488.392 Q349.094 495.499 350.899 499.064 Q352.728 502.605 356.339 502.605 Q359.973 502.605 361.779 499.064 Q363.608 495.499 363.608 488.392 Q363.608 481.263 361.779 477.721 Q359.973 474.156 356.339 474.156 M356.339 470.453 Q362.149 470.453 365.205 475.059 Q368.284 479.642 368.284 488.392 Q368.284 497.119 365.205 501.726 Q362.149 506.309 356.339 506.309 Q350.529 506.309 347.45 501.726 Q344.395 497.119 344.395 488.392 Q344.395 479.642 347.45 475.059 Q350.529 470.453 356.339 470.453 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M256.664 244.212 L264.303 244.212 L264.303 217.847 L255.992 219.513 L255.992 215.254 L264.256 213.587 L268.932 213.587 L268.932 244.212 L276.571 244.212 L276.571 248.147 L256.664 248.147 L256.664 244.212 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M296.015 216.666 Q292.404 216.666 290.576 220.231 Q288.77 223.773 288.77 230.902 Q288.77 238.009 290.576 241.573 Q292.404 245.115 296.015 245.115 Q299.65 245.115 301.455 241.573 Q303.284 238.009 303.284 230.902 Q303.284 223.773 301.455 220.231 Q299.65 216.666 296.015 216.666 M296.015 212.962 Q301.826 212.962 304.881 217.569 Q307.96 222.152 307.96 230.902 Q307.96 239.629 304.881 244.235 Q301.826 248.819 296.015 248.819 Q290.205 248.819 287.127 244.235 Q284.071 239.629 284.071 230.902 Q284.071 222.152 287.127 217.569 Q290.205 212.962 296.015 212.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M326.177 216.666 Q322.566 216.666 320.737 220.231 Q318.932 223.773 318.932 230.902 Q318.932 238.009 320.737 241.573 Q322.566 245.115 326.177 245.115 Q329.811 245.115 331.617 241.573 Q333.446 238.009 333.446 230.902 Q333.446 223.773 331.617 220.231 Q329.811 216.666 326.177 216.666 M326.177 212.962 Q331.987 212.962 335.043 217.569 Q338.122 222.152 338.122 230.902 Q338.122 239.629 335.043 244.235 Q331.987 248.819 326.177 248.819 Q320.367 248.819 317.288 244.235 Q314.233 239.629 314.233 230.902 Q314.233 222.152 317.288 217.569 Q320.367 212.962 326.177 212.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M356.339 216.666 Q352.728 216.666 350.899 220.231 Q349.094 223.773 349.094 230.902 Q349.094 238.009 350.899 241.573 Q352.728 245.115 356.339 245.115 Q359.973 245.115 361.779 241.573 Q363.608 238.009 363.608 230.902 Q363.608 223.773 361.779 220.231 Q359.973 216.666 356.339 216.666 M356.339 212.962 Q362.149 212.962 365.205 217.569 Q368.284 222.152 368.284 230.902 Q368.284 239.629 365.205 244.235 Q362.149 248.819 356.339 248.819 Q350.529 248.819 347.45 244.235 Q344.395 239.629 344.395 230.902 Q344.395 222.152 347.45 217.569 Q350.529 212.962 356.339 212.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip012)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.867 4017.76,230.867 \"/>\n<polyline clip-path=\"url(#clip012)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.58 459.964,1248.04 460.533,1247.43 461.101,1246.75 461.669,1245.99 462.238,1245.15 462.806,1244.23 463.375,1242.19 463.943,1241.08 464.511,1238.85 465.08,1237.55 465.648,1236.14 466.216,1234.61 466.785,1232.96 467.353,1230.15 467.921,1228.22 468.49,1226.13 469.058,1222.89 469.626,1220.51 470.195,1217.96 470.763,1214.21 471.331,1211.3 471.9,1207.18 472.468,1202.9 473.036,1198.37 473.605,1193.7 474.173,1189.85 474.741,1184.74 475.31,1180.37 475.878,1174.84 476.446,1170.05 477.015,1164.01 477.583,1158.65 478.152,1152.07 478.72,1146.33 479.288,1140.37 479.857,1134.2 480.425,1126.81 480.993,1120.24 481.562,1112.41 482.13,1103.35 482.698,1094.06 483.267,1086.72 483.835,1076.07 484.403,1066.29 484.972,1056.34 485.54,1047.21 486.108,1037.01 486.677,1026.75 487.245,1016.43 487.813,1005.88 488.382,996.371 488.95,987.767 489.518,976.908 490.087,962.029 490.655,953.549 491.224,944.791 491.792,934.04 492.36,925.073 492.929,915.166 493.497,906.208 494.065,895.049 494.634,882.923 495.202,872.898 495.77,863.96 496.339,852.891 496.907,839.837 497.475,828.919 498.044,820.116 498.612,810.127 499.18,800.276 499.749,791.479 500.317,781.519 500.885,771.657 501.454,761.898 502.022,753.087 502.59,743.388 503.159,732.663 503.727,722.961 504.295,713.338 504.864,702.858 505.432,691.334 506.001,683.131 506.569,674.893 507.137,666.664 507.706,657.441 508.274,648.374 508.842,639.361 509.411,628.388 509.979,620.73 510.547,612.215 511.116,603.89 511.684,596.681 512.252,587.42 512.821,577.25 513.389,569.073 513.957,562.358 514.526,555.628 515.094,548.908 515.662,542.287 516.231,533.744 516.799,525.431 517.367,519.348 517.936,511.222 518.504,505.45 519.072,498.65 519.641,493.052 520.209,485.362 520.778,478.945 521.346,473.748 521.914,467.656 522.483,461.763 523.051,456.886 523.619,452.099 524.188,446.332 524.756,442.883 525.324,437.271 525.893,431.675 526.461,426.19 527.029,418.848 527.598,413.879 528.166,410.22 528.734,404.357 529.303,399.767 529.871,396.335 530.439,390.976 531.008,384.819 531.576,378.687 532.144,373.908 532.713,371.449 533.281,364.77 533.85,361.264 534.418,359.138 534.986,355.806 535.555,352.776 536.123,349.659 536.691,343.734 537.26,337.954 537.828,333.655 538.396,331.312 538.965,329.131 539.533,330.063 540.101,327.984 540.67,323.663 541.238,325.657 541.806,323.411 542.375,322.072 542.943,320.64 543.511,317.545 544.08,317.474 544.648,316.258 545.216,314.133 545.785,313.87 546.353,311.639 546.921,308.368 547.49,306.304 548.058,303.231 548.627,301.309 549.195,298.429 549.763,297.88 550.332,296.35 550.9,295.881 551.468,294.129 552.037,292.417 552.605,293.991 553.173,293.097 553.742,292.522 554.31,291.609 554.878,290.846 555.447,287.016 556.015,284.373 556.583,283.729 557.152,283.273 557.72,281.729 558.288,280.135 558.857,281.021 559.425,281.423 559.993,282.053 560.562,279.477 561.13,278.019 561.698,279.634 562.267,281.03 562.835,282.025 563.404,279.178 563.972,277.161 564.54,276.391 565.109,274.676 565.677,272.972 566.245,272.43 566.814,270.693 567.382,268.344 567.95,266.955 568.519,265.558 569.087,264.41 569.655,264.287 570.224,262.07 570.792,260.09 571.36,261.026 571.929,259.059 572.497,259.15 573.065,259.174 573.634,258.121 574.202,257.274 574.77,256.522 575.339,254.499 575.907,254.653 576.476,253.624 577.044,252.036 577.612,251.651 578.181,251.923 578.749,250.408 579.317,249.556 579.886,252.061 580.454,249.194 581.022,248.662 581.591,248.949 582.159,249.52 582.727,251.819 583.296,253.138 583.864,253.178 584.432,253.265 585.001,252.254 585.569,250.301 586.137,249.498 586.706,249.54 587.274,248.699 587.842,247.912 588.411,250.107 588.979,251.195 589.547,249.949 590.116,250.051 590.684,249.992 591.253,249.197 591.821,247.198 592.389,247.463 592.958,244.427 593.526,246.856 594.094,246.186 594.663,243.335 595.231,240.56 595.799,240.939 596.368,241.563 596.936,242.368 597.504,241.717 598.073,240.262 598.641,239.892 599.209,240.522 599.778,245.147 600.346,245.281 600.914,245.241 601.483,244.46 602.051,247.087 602.619,246.95 603.188,246.111 603.756,245.075 604.325,246.286 604.893,247.499 605.461,248.522 606.03,249.578 606.598,248.664 607.166,246.431 607.735,248.35 608.303,249.369 608.871,250.179 609.44,247.741 610.008,246.591 610.576,244.328 611.145,245.507 611.713,245.475 612.281,243.476 612.85,243.359 613.418,243.283 613.986,243.432 614.555,242.327 615.123,242.247 615.691,242.335 616.26,241.219 616.828,240.709 617.396,239.802 617.965,239.818 618.533,240.002 619.102,239.218 619.67,236.601 620.238,238.175 620.807,238.486 621.375,238.762 621.943,242.182 622.512,241.169 623.08,240.161 623.648,241.476 624.217,241.646 624.785,239.746 625.353,239.032 625.922,239.281 626.49,238.384 627.058,236.408 627.627,235.7 628.195,237.179 628.763,237.449 629.332,238.804 629.9,238.862 630.468,242.072 631.037,242.928 631.605,241.72 632.173,242.712 632.742,242.56 633.31,241.411 633.879,242.362 634.447,242.142 635.015,243.208 635.584,244.031 636.152,241.556 636.72,245.475 637.289,242.046 637.857,239.832 638.425,239.675 638.994,238.638 639.562,237.955 640.13,241.347 640.699,242.144 641.267,241.011 641.835,241.848 642.404,240.66 642.972,239.385 643.54,239.533 644.109,241.422 644.677,242.338 645.245,241.022 645.814,239.834 646.382,238.703 646.951,238.726 647.519,240.691 648.087,241.447 648.656,240.208 649.224,241.109 649.792,239.826 650.361,236.603 650.929,235.483 651.497,234.569 652.066,232.68 652.634,230.846 653.202,231.199 653.771,231.67 654.339,232.047 654.907,233.374 655.476,232.61 656.044,232.781 656.612,233.114 657.181,233.315 657.749,233.41 658.317,232.65 658.886,233.007 659.454,233.116 660.022,233.531 660.591,234.87 661.159,235.018 661.728,235.064 662.296,236.059 662.864,236.181 663.433,236.07 664.001,235.133 664.569,235.366 665.138,236.441 665.706,236.511 666.274,236.632 666.843,236.52 667.411,236.535 667.979,235.494 668.548,235.591 669.116,235.555 669.684,234.721 670.253,233.975 670.821,234.145 671.389,236.649 671.958,237.69 672.526,236.601 673.094,236.576 673.663,237.674 674.231,238.6 674.799,238.432 675.368,238.104 675.936,237.214 676.505,237.116 677.073,238.866 677.641,236.822 678.21,235.997 678.778,235.834 679.346,235.766 679.915,234.797 680.483,237.122 681.051,234.941 681.62,235.998 682.188,236.998 682.756,236.95 683.325,235.547 683.893,236.549 684.461,236.37 685.03,235.311 685.598,238.41 686.166,239.183 686.735,238.052 687.303,238.875 687.871,237.648 688.44,237.594 689.008,236.251 689.577,235.933 690.145,233.749 690.713,237.051 691.282,235.912 691.85,235.749 692.418,236.69 692.987,236.307 693.555,234.21 694.123,232.976 694.692,231.204 695.26,231.422 695.828,231.726 696.397,234.985 696.965,234.848 697.533,233.938 698.102,233.085 698.67,234.237 699.238,236.307 699.807,234.127 700.375,233.325 700.943,234.31 701.512,234.279 702.08,233.303 702.648,235.397 703.217,235.305 703.785,234.295 704.354,235.441 704.922,235.281 705.49,234.385 706.059,234.238 706.627,234.086 707.195,232.078 707.764,232.167 708.332,231.181 708.9,230.327 709.469,230.787 710.037,232.001 710.605,229.981 711.174,232.338 711.742,231.378 712.31,231.7 712.879,230.885 713.447,231.239 714.015,230.457 714.584,230.66 715.152,230 715.72,230.448 716.289,230.565 716.857,229.837 717.425,227.037 717.994,226.501 718.562,222.858 719.131,228.006 719.699,227.48 720.267,226.887 720.836,229.489 721.404,229.931 721.972,232.282 722.541,232.489 723.109,232.645 723.677,233.932 724.246,233.163 724.814,234.329 725.382,235.292 725.951,234.421 726.519,234.403 727.087,235.487 727.656,234.324 728.224,232.063 728.792,233.394 729.361,232.491 729.929,230.467 730.497,231.728 731.066,232.088 731.634,234.362 732.203,234.555 732.771,234.654 733.339,233.699 733.908,233.797 734.476,234.847 735.044,232.541 735.613,232.586 736.181,232.661 736.749,231.624 737.318,231.92 737.886,230.123 738.454,232.436 739.023,232.482 739.591,232.936 740.159,233.091 740.728,234.187 741.296,236.406 741.864,238.293 742.433,235.893 743.001,234.89 743.569,235.025 744.138,234.008 744.706,235.067 745.274,236.182 745.843,237.143 746.411,239.889 746.98,238.343 747.548,235.991 748.116,235.692 748.685,236.543 749.253,236.316 749.821,237.002 750.39,238.585 750.958,239.109 751.526,236.65 752.095,236.478 752.663,234.183 753.231,235.069 753.8,234.721 754.368,234.622 754.936,232.298 755.505,230.205 756.073,231.311 756.641,231.464 757.21,232.507 757.778,230.323 758.346,228.194 758.915,230.505 759.483,232.378 760.052,231.321 760.62,230.453 761.188,226.417 761.757,226.792 762.325,227.08 762.893,226.583 763.462,222.693 764.03,224.516 764.598,227.273 765.167,225.694 765.735,227.409 766.303,228.017 766.872,225.309 767.44,226.928 768.008,227.347 768.577,226.666 769.145,227.051 769.713,228.437 770.282,228.831 770.85,229.21 771.418,229.436 771.987,228.67 772.555,230.009 773.123,227.17 773.692,226.679 774.26,228.337 774.829,228.707 775.397,229.024 775.965,229.49 776.534,231.934 777.102,232.142 777.67,232.426 778.239,230.67 778.807,231.036 779.375,230.176 779.944,230.716 780.512,231.942 781.08,231.997 781.649,235.177 782.217,237.463 782.785,235.993 783.354,235.771 783.922,235.662 784.49,235.493 785.059,237.458 785.627,238.6 786.195,238.266 786.764,240.016 787.332,239.603 787.9,239.068 788.469,239.621 789.037,238.23 789.606,238 790.174,238.639 790.742,240.408 791.311,240.072 791.879,240.668 792.447,239.123 793.016,237.597 793.584,238.338 794.152,237.859 794.721,237.627 795.289,236.196 795.857,236.922 796.426,238.859 796.994,238.603 797.562,238.252 798.131,237.749 798.699,233.351 799.267,234.397 799.836,232.88 800.404,233.643 800.972,234.564 801.541,234.164 802.109,238.127 802.678,238.46 803.246,236.83 803.814,236.333 804.383,232.694 804.951,235.741 805.519,234.32 806.088,235.067 806.656,234.695 807.224,233.31 807.793,230.777 808.361,226.593 808.929,226.57 809.498,228.876 810.066,231.266 810.634,233.285 811.203,232.156 811.771,230.989 812.339,231.948 812.908,228.77 813.476,231.265 814.044,232.21 814.613,230.106 815.181,230.138 815.749,230.247 816.318,230.142 816.886,230.097 817.455,230.085 818.023,229.244 818.591,230.366 819.16,230.682 819.728,231.978 820.296,234.005 820.865,233.925 821.433,232.769 822.001,231.383 822.57,231.315 823.138,231.24 823.706,229.249 824.275,228.178 824.843,230.612 825.411,230.654 825.98,230.667 826.548,229.316 827.116,230.484 827.685,232.471 828.253,232.325 828.821,232.097 829.39,231.027 829.958,232.085 830.526,232.137 831.095,231.732 831.663,230.742 832.232,229.592 832.8,227.626 833.368,226.801 833.937,227.044 834.505,227.395 835.073,227.496 835.642,227.836 836.21,227.971 836.778,230.254 837.347,230.428 837.915,231.582 838.483,229.524 839.052,229.674 839.62,231.805 840.188,231.886 840.757,229.8 841.325,228.833 841.893,229.145 842.462,230.421 843.03,229.473 843.598,230.665 844.167,229.798 844.735,228.956 845.304,228.138 845.872,228.307 846.44,228.537 847.009,227.578 847.577,228.024 848.145,229.537 848.714,228.682 849.282,227.86 849.85,226.204 850.419,225.512 850.987,230.095 851.555,228.268 852.124,229.5 852.692,227.636 853.26,228.057 853.829,226.495 854.397,229.039 854.965,230.413 855.534,230.696 856.102,230.788 856.67,229.899 857.239,229.16 857.807,230.36 858.375,230.631 858.944,229.535 859.512,229.57 860.081,231.897 860.649,231.916 861.217,232.142 861.786,230.219 862.354,230.28 862.922,230.315 863.491,230.451 864.059,229.706 864.627,229.769 865.196,229.1 865.764,229.167 866.332,229.103 866.901,229.299 867.469,229.476 868.037,228.627 868.606,228.051 869.174,230.562 869.742,228.684 870.311,229.959 870.879,232.336 871.447,231.206 872.016,231.524 872.584,231.503 873.152,231.601 873.721,231.711 874.289,231.036 874.858,231.106 875.426,231.22 875.994,230.294 876.563,230.396 877.131,228.614 877.699,229.12 878.268,229.481 878.836,230.984 879.404,230.281 879.973,230.479 880.541,229.782 881.109,232.164 881.678,233.298 882.246,235.534 882.814,234.393 883.383,233.293 883.951,235.118 884.519,232.825 885.088,235.902 885.656,234.591 886.224,232.47 886.793,234.674 887.361,232.388 887.93,232.493 888.498,232.356 889.066,233.401 889.635,233.356 890.203,234.458 890.771,234.384 891.34,234.181 891.908,233.89 892.476,234.952 893.045,235.984 893.613,232.463 894.181,234.935 894.75,234.65 895.318,232.163 895.886,232.333 896.455,231.427 897.023,230.42 897.591,232.512 898.16,233.594 898.728,232.458 899.296,230.399 899.865,230.558 900.433,233.942 901.001,235.805 901.57,233.418 902.138,232.078 902.707,231.204 903.275,230.297 903.843,230.749 904.412,230.92 904.98,231.944 905.548,232.149 906.117,232.944 906.685,232.858 907.253,232.615 907.822,232.678 908.39,231.489 908.958,232.527 909.527,231.324 910.095,231.326 910.663,230.653 911.232,230.747 911.8,229.92 912.368,229.27 912.937,228.702 913.505,228.789 914.073,226.778 914.642,225.223 915.21,225.665 915.779,226.018 916.347,227.486 916.915,225.673 917.484,227.196 918.052,227.476 918.62,227.926 919.189,228.456 919.757,228.894 920.325,229.217 920.894,229.421 921.462,232.781 922.03,231.785 922.599,234.032 923.167,231.083 923.735,231.158 924.304,231.418 924.872,231.644 925.44,230.878 926.009,230.827 926.577,232.058 927.145,232.053 927.714,232.08 928.282,233.965 928.85,232.999 929.419,233.968 929.987,234.993 930.556,236.905 931.124,237.414 931.692,236.227 932.261,237.043 932.829,236.484 933.397,235.082 933.966,234.85 934.534,231.846 935.102,232.909 935.671,231.761 936.239,231.066 936.807,233.212 937.376,233.276 937.944,232.138 938.512,234.141 939.081,233.888 939.649,231.518 940.217,231.683 940.786,232.588 941.354,232.474 941.922,233.399 942.491,232.383 943.059,232.119 943.627,234.125 944.196,234.031 944.764,233.98 945.333,233.58 945.901,231.201 946.469,233.197 947.038,233.068 947.606,234.053 948.174,234.808 948.743,234.55 949.311,235.352 949.879,233.01 950.448,232.92 951.016,231.726 951.584,229.736 952.153,231.883 952.721,233.623 953.289,234.419 953.858,234.143 954.426,233.8 954.994,235.377 955.563,237.035 956.131,237.567 956.699,236.058 957.268,237.734 957.836,235.947 958.405,236.512 958.973,233.968 959.541,232.608 960.11,232.493 960.678,231.277 961.246,231.098 961.815,231.894 962.383,232.908 962.951,232.829 963.52,232.688 964.088,231.523 964.656,229.232 965.225,229.149 965.793,225.158 966.361,228.592 966.93,227.782 967.498,229.081 968.066,228.262 968.635,227.31 969.203,227.452 969.771,228.716 970.34,227.745 970.908,226.963 971.476,229.33 972.045,228.723 972.613,230.029 973.182,232.188 973.75,232.378 974.318,232.333 974.887,230.073 975.455,231.269 976.023,229.142 976.592,226.254 977.16,228.446 977.728,228.347 978.297,229.357 978.865,228.473 979.433,228.703 980.002,229.888 980.57,229.929 981.138,229.933 981.707,229.805 982.275,231.956 982.843,231.821 983.412,231.729 983.98,231.571 984.548,231.659 985.117,232.851 985.685,231.675 986.253,230.559 986.822,231.469 987.39,229.313 987.959,228.534 988.527,228.75 989.095,226.999 989.664,226.503 990.232,228.986 990.8,226.007 991.369,226.321 991.937,227.66 992.505,228.062 993.074,226.239 993.642,226.77 994.21,227.017 994.779,229.356 995.347,230.58 995.915,231.672 996.484,231.41 997.052,230.492 997.62,228.567 998.189,231.798 998.757,230.764 999.325,230.806 999.894,227.78 1000.46,229.135 1001.03,227.196 1001.6,227.483 1002.17,227.031 1002.74,228.163 1003.3,226.41 1003.87,226.835 1004.44,226.174 1005.01,223.404 1005.58,224.962 1006.15,225.518 1006.71,224.825 1007.28,225.25 1007.85,226.741 1008.42,228.287 1008.99,228.335 1009.56,227.676 1010.12,228.902 1010.69,228.205 1011.26,229.497 1011.83,228.635 1012.4,228.036 1012.97,230.601 1013.53,228.807 1014.1,231.019 1014.67,231.936 1015.24,231.891 1015.81,230.688 1016.38,231.725 1016.94,231.686 1017.51,232.911 1018.08,237.123 1018.65,235.71 1019.22,235.36 1019.79,236.217 1020.35,232.926 1020.92,230.886 1021.49,232.988 1022.06,234.975 1022.63,234.741 1023.2,233.659 1023.76,234.585 1024.33,235.554 1024.9,237.336 1025.47,239.177 1026.04,239.696 1026.61,237.327 1027.17,237.098 1027.74,239.85 1028.31,240.564 1028.88,238.689 1029.45,239.13 1030.02,236.576 1030.58,236.119 1031.15,236.67 1031.72,237.219 1032.29,240.061 1032.86,239.559 1033.43,239.819 1033.99,239.448 1034.56,237.975 1035.13,238.429 1035.7,239.818 1036.27,238.92 1036.84,237.129 1037.4,235.619 1037.97,235.105 1038.54,235.702 1039.11,232.165 1039.68,232.991 1040.25,232.014 1040.81,231.742 1041.38,231.493 1041.95,232.509 1042.52,232.274 1043.09,234.123 1043.66,232.869 1044.22,233.699 1044.79,232.192 1045.36,231.097 1045.93,228.908 1046.5,229.903 1047.07,228.802 1047.63,228.972 1048.2,227.955 1048.77,230.076 1049.34,232.31 1049.91,230.937 1050.48,231.782 1051.05,231.623 1051.61,233.484 1052.18,234.067 1052.75,231.58 1053.32,231.002 1053.89,231.969 1054.46,226.722 1055.02,226.943 1055.59,227.113 1056.16,225.174 1056.73,226.457 1057.3,226.613 1057.87,225.945 1058.43,226.131 1059,224.49 1059.57,223.906 1060.14,226.729 1060.71,228.07 1061.28,229.374 1061.84,231.632 1062.41,231.661 1062.98,230.615 1063.55,230.61 1064.12,230.507 1064.69,231.34 1065.25,230.25 1065.82,229.044 1066.39,229.224 1066.96,227.263 1067.53,228.67 1068.1,226.707 1068.66,226.691 1069.23,226.137 1069.8,225.464 1070.37,222.905 1070.94,221.632 1071.51,221.149 1072.07,222.974 1072.64,223.63 1073.21,226.198 1073.78,227.751 1074.35,225.989 1074.92,226.498 1075.48,226.98 1076.05,227.324 1076.62,227.659 1077.19,228.07 1077.76,228.231 1078.33,229.538 1078.89,229.823 1079.46,228.919 1080.03,230.098 1080.6,232.412 1081.17,230.286 1081.74,228.394 1082.3,227.647 1082.87,228.043 1083.44,227.484 1084.01,229.857 1084.58,230.822 1085.15,231.816 1085.71,232.79 1086.28,233.568 1086.85,233.316 1087.42,235.151 1087.99,233.906 1088.56,232.925 1089.12,233.008 1089.69,231.866 1090.26,233.03 1090.83,235.87 1091.4,235.621 1091.97,237.336 1092.53,235.958 1093.1,236.747 1093.67,236.086 1094.24,233.831 1094.81,233.761 1095.38,233.708 1095.94,233.954 1096.51,231.637 1097.08,231.708 1097.65,230.788 1098.22,230.789 1098.79,231.84 1099.35,231.654 1099.92,229.425 1100.49,228.626 1101.06,227.878 1101.63,228.365 1102.2,229.676 1102.76,228.658 1103.33,227.616 1103.9,228.98 1104.47,230.346 1105.04,230.462 1105.61,231.669 1106.17,232.461 1106.74,233.37 1107.31,237.412 1107.88,237.904 1108.45,235.412 1109.02,237.093 1109.58,236.828 1110.15,237.313 1110.72,236.835 1111.29,235.537 1111.86,235.268 1112.43,235.995 1112.99,233.533 1113.56,230.218 1114.13,229.189 1114.7,228.353 1115.27,227.743 1115.84,227.948 1116.4,225.195 1116.97,226.406 1117.54,224.52 1118.11,223.798 1118.68,224.218 1119.25,224.622 1119.81,224.983 1120.38,225.331 1120.95,226.757 1121.52,227.137 1122.09,230.58 1122.66,230.614 1123.23,229.573 1123.79,227.741 1124.36,225.905 1124.93,227.393 1125.5,228.842 1126.07,229.006 1126.64,228.113 1127.2,229.501 1127.77,230.729 1128.34,232.805 1128.91,232.859 1129.48,234.887 1130.05,233.709 1130.61,232.479 1131.18,231.308 1131.75,232.306 1132.32,230.121 1132.89,230.387 1133.46,234.528 1134.02,235.552 1134.59,238.618 1135.16,237.028 1135.73,235.479 1136.3,234.185 1136.87,235.062 1137.43,233.719 1138,234.654 1138.57,235.404 1139.14,234.218 1139.71,236.995 1140.28,235.625 1140.84,235.348 1141.41,233.916 1141.98,233.594 1142.55,232.453 1143.12,230.224 1143.69,230.277 1144.25,229.27 1144.82,228.332 1145.39,228.359 1145.96,228.506 1146.53,225.663 1147.1,226.142 1147.66,226.649 1148.23,225.82 1148.8,226.109 1149.37,226.468 1149.94,226.665 1150.51,226.098 1151.07,227.395 1151.64,227.717 1152.21,229.146 1152.78,228.519 1153.35,228.684 1153.92,227.648 1154.48,227.823 1155.05,229.016 1155.62,229.266 1156.19,230.493 1156.76,232.714 1157.33,233.834 1157.89,231.701 1158.46,230.642 1159.03,230.822 1159.6,231.838 1160.17,230.937 1160.74,233.324 1161.3,232.278 1161.87,232.132 1162.44,233.184 1163.01,236.173 1163.58,237.882 1164.15,237.27 1164.71,236.618 1165.28,236.375 1165.85,236.182 1166.42,235.794 1166.99,237.613 1167.56,238.333 1168.12,239.905 1168.69,236.928 1169.26,237.368 1169.83,235.859 1170.4,236.58 1170.97,234.882 1171.53,234.452 1172.1,236.174 1172.67,235.673 1173.24,235.208 1173.81,234.759 1174.38,234.379 1174.94,234.049 1175.51,233.712 1176.08,233.332 1176.65,230.003 1177.22,228.837 1177.79,228.107 1178.35,227.213 1178.92,227.454 1179.49,226.416 1180.06,226.821 1180.63,227.854 1181.2,228.148 1181.76,231.532 1182.33,231.454 1182.9,232.481 1183.47,231.217 1184.04,228.15 1184.61,229.217 1185.17,230.437 1185.74,229.555 1186.31,232.845 1186.88,230.739 1187.45,229.841 1188.02,228.701 1188.58,229.025 1189.15,228.135 1189.72,228.243 1190.29,228.335 1190.86,226.579 1191.43,228.617 1192,229.736 1192.56,228.881 1193.13,230.161 1193.7,231.355 1194.27,233.446 1194.84,234.421 1195.41,232.914 1195.97,234.131 1196.54,233.894 1197.11,232.629 1197.68,232.359 1198.25,234.323 1198.82,234.936 1199.38,233.666 1199.95,234.501 1200.52,231.917 1201.09,233.031 1201.66,232.854 1202.23,235.63 1202.79,235.144 1203.36,232.761 1203.93,230.393 1204.5,230.281 1205.07,230.2 1205.64,229.014 1206.2,227.913 1206.77,226.04 1207.34,227.229 1207.91,225.507 1208.48,223.778 1209.05,224.269 1209.61,223.503 1210.18,224.044 1210.75,223.231 1211.32,223.583 1211.89,228.42 1212.46,229.659 1213.02,233.599 1213.59,233.223 1214.16,233.043 1214.73,232.717 1215.3,232.802 1215.87,233.592 1216.43,233.395 1217,234.157 1217.57,234.906 1218.14,234.619 1218.71,233.601 1219.28,234.499 1219.84,233.002 1220.41,230.735 1220.98,229.669 1221.55,228.608 1222.12,226.653 1222.69,226.82 1223.25,228.023 1223.82,230.366 1224.39,230.335 1224.96,230.196 1225.53,230.175 1226.1,229.012 1226.66,230.007 1227.23,228.817 1227.8,229.031 1228.37,229.143 1228.94,228.072 1229.51,228.21 1230.07,229.32 1230.64,231.586 1231.21,233.653 1231.78,232.573 1232.35,232.302 1232.92,232.12 1233.48,229.823 1234.05,230.039 1234.62,229.817 1235.19,229.677 1235.76,230.909 1236.33,230.904 1236.89,229.03 1237.46,227.121 1238.03,227.61 1238.6,227.03 1239.17,227.141 1239.74,226.285 1240.3,226.425 1240.87,227.039 1241.44,228.386 1242.01,228.491 1242.58,233.014 1243.15,232.792 1243.71,233.567 1244.28,234.517 1244.85,236.5 1245.42,236.22 1245.99,234.905 1246.56,236.847 1247.12,236.171 1247.69,234.622 1248.26,236.42 1248.83,239.184 1249.4,238.527 1249.97,236.845 1250.53,236.205 1251.1,236.81 1251.67,233.057 1252.24,233.959 1252.81,232.58 1253.38,228.285 1253.94,227.37 1254.51,228.736 1255.08,228.676 1255.65,229.741 1256.22,230.706 1256.79,229.541 1257.35,232.682 1257.92,232.532 1258.49,233.401 1259.06,235.234 1259.63,233.836 1260.2,232.64 1260.76,231.505 1261.33,231.337 1261.9,229.154 1262.47,228.241 1263.04,227.234 1263.61,227.656 1264.18,227.801 1264.74,227.727 1265.31,226.905 1265.88,227.99 1266.45,228.984 1267.02,228.175 1267.59,229.365 1268.15,228.232 1268.72,227.344 1269.29,227.638 1269.86,229.679 1270.43,228.893 1271,229.056 1271.56,228.95 1272.13,227.354 1272.7,229.825 1273.27,229.913 1273.84,228.868 1274.41,228.914 1274.97,229.847 1275.54,230.144 1276.11,229.167 1276.68,229.263 1277.25,229.357 1277.82,229.593 1278.38,229.574 1278.95,229.559 1279.52,227.654 1280.09,225.672 1280.66,225.223 1281.23,225.6 1281.79,225.905 1282.36,227.591 1282.93,227.9 1283.5,229.105 1284.07,229.312 1284.64,230.462 1285.2,229.294 1285.77,229.522 1286.34,230.49 1286.91,232.539 1287.48,231.348 1288.05,231.318 1288.61,231.249 1289.18,234.231 1289.75,236.057 1290.32,235.814 1290.89,235.293 1291.46,232.869 1292.02,232.543 1292.59,234.399 1293.16,234.259 1293.73,234.974 1294.3,233.912 1294.87,233.837 1295.43,233.55 1296,233.431 1296.57,234.343 1297.14,234.216 1297.71,232.084 1298.28,230.883 1298.84,229.647 1299.41,227.579 1299.98,228.712 1300.55,229.913 1301.12,230.14 1301.69,231.106 1302.25,229.145 1302.82,229.442 1303.39,227.631 1303.96,232.329 1304.53,232.071 1305.1,231.814 1305.66,231.615 1306.23,231.558 1306.8,230.507 1307.37,231.536 1307.94,232.619 1308.51,230.533 1309.07,231.684 1309.64,234.769 1310.21,233.073 1310.78,234.99 1311.35,235.752 1311.92,235.509 1312.48,236.226 1313.05,235.829 1313.62,233.45 1314.19,232.248 1314.76,233.223 1315.33,233.935 1315.89,232.647 1316.46,234.603 1317.03,234.372 1317.6,234.852 1318.17,235.478 1318.74,233.853 1319.3,232.634 1319.87,233.513 1320.44,232.119 1321.01,230.888 1321.58,228.614 1322.15,226.513 1322.71,224.638 1323.28,225.178 1323.85,225.754 1324.42,226.113 1324.99,225.211 1325.56,226.709 1326.12,226.083 1326.69,226.446 1327.26,226.65 1327.83,227.804 1328.4,228.834 1328.97,230.002 1329.53,229.834 1330.1,229.68 1330.67,229.74 1331.24,228.686 1331.81,228.693 1332.38,229.921 1332.94,230.924 1333.51,229.675 1334.08,227.81 1334.65,226.943 1335.22,227.203 1335.79,227.442 1336.36,226.832 1336.92,225.076 1337.49,226.695 1338.06,227.098 1338.63,230.739 1339.2,229.749 1339.77,230.983 1340.33,231.069 1340.9,231.053 1341.47,231.116 1342.04,232.019 1342.61,232.946 1343.18,232.854 1343.74,231.79 1344.31,232.881 1344.88,232.66 1345.45,231.555 1346.02,232.482 1346.59,232.281 1347.15,231.199 1347.72,232.024 1348.29,232.015 1348.86,231.866 1349.43,230.784 1350,227.875 1350.56,229.132 1351.13,229.103 1351.7,231.332 1352.27,231.373 1352.84,232.185 1353.41,232.097 1353.97,234.856 1354.54,232.527 1355.11,232.324 1355.68,233.105 1356.25,233.641 1356.82,231.525 1357.38,234.773 1357.95,233.488 1358.52,233.486 1359.09,231.248 1359.66,232.282 1360.23,232.29 1360.79,231.165 1361.36,230.112 1361.93,230.186 1362.5,230.314 1363.07,231.26 1363.64,227.092 1364.2,228.034 1364.77,228.14 1365.34,228.113 1365.91,228.328 1366.48,226.605 1367.05,227.99 1367.61,229.132 1368.18,230.196 1368.75,230.193 1369.32,230.356 1369.89,230.446 1370.46,230.509 1371.02,229.431 1371.59,229.484 1372.16,229.39 1372.73,230.731 1373.3,231.693 1373.87,230.558 1374.43,230.649 1375,230.528 1375.57,230.58 1376.14,227.591 1376.71,227.996 1377.28,228.187 1377.84,230.538 1378.41,230.485 1378.98,227.487 1379.55,224.436 1380.12,224.668 1380.69,225.043 1381.25,226.333 1381.82,227.889 1382.39,229.158 1382.96,229.581 1383.53,228.649 1384.1,229.007 1384.66,229.171 1385.23,230.614 1385.8,231.814 1386.37,230.871 1386.94,233.159 1387.51,231.934 1388.07,231.887 1388.64,231.94 1389.21,231.702 1389.78,233.838 1390.35,232.946 1390.92,232.864 1391.48,229.816 1392.05,231.906 1392.62,234.086 1393.19,232.789 1393.76,232.542 1394.33,231.545 1394.89,230.379 1395.46,229.436 1396.03,228.532 1396.6,227.785 1397.17,229.932 1397.74,231.164 1398.3,232.141 1398.87,233.025 1399.44,231.859 1400.01,231.983 1400.58,232.9 1401.15,232.779 1401.71,230.502 1402.28,231.489 1402.85,230.521 1403.42,228.42 1403.99,226.568 1404.56,226.996 1405.13,229.378 1405.69,230.694 1406.26,230.627 1406.83,230.742 1407.4,229.813 1407.97,228.976 1408.54,225.181 1409.1,227.005 1409.67,228.249 1410.24,227.715 1410.81,231.192 1411.38,233.39 1411.95,233.272 1412.51,233.332 1413.08,234.363 1413.65,232.304 1414.22,233.461 1414.79,233.449 1415.36,233.238 1415.92,232.944 1416.49,231.844 1417.06,233.883 1417.63,233.505 1418.2,235.476 1418.77,235.288 1419.33,232.988 1419.9,234.785 1420.47,232.642 1421.04,232.701 1421.61,233.598 1422.18,230.156 1422.74,230.191 1423.31,228.208 1423.88,228.388 1424.45,226.452 1425.02,228.959 1425.59,228.095 1426.15,229.479 1426.72,228.522 1427.29,229.673 1427.86,227.906 1428.43,228.017 1429,228.353 1429.56,228.698 1430.13,228.887 1430.7,226.941 1431.27,226.382 1431.84,224.657 1432.41,227.551 1432.97,228.725 1433.54,230.949 1434.11,231.03 1434.68,232.345 1435.25,231.167 1435.82,230.271 1436.38,231.283 1436.95,232.509 1437.52,230.498 1438.09,231.47 1438.66,232.529 1439.23,233.567 1439.79,232.31 1440.36,232.113 1440.93,233.139 1441.5,234.898 1442.07,233.619 1442.64,233.183 1443.2,233.309 1443.77,231.031 1444.34,233.114 1444.91,233.004 1445.48,232.816 1446.05,230.726 1446.61,230.006 1447.18,229.116 1447.75,228.41 1448.32,227.562 1448.89,230.004 1449.46,229.233 1450.02,229.354 1450.59,229.659 1451.16,231.024 1451.73,233.26 1452.3,232.103 1452.87,232.019 1453.43,232.019 1454,232.922 1454.57,232.851 1455.14,232.894 1455.71,231.984 1456.28,233.013 1456.84,234.039 1457.41,233.758 1457.98,232.429 1458.55,234.341 1459.12,235.206 1459.69,230.561 1460.25,228.476 1460.82,228.768 1461.39,228.979 1461.96,229.268 1462.53,230.515 1463.1,228.635 1463.66,227.072 1464.23,227.482 1464.8,231.781 1465.37,231.817 1465.94,230.837 1466.51,230.732 1467.07,228.851 1467.64,231.048 1468.21,232.289 1468.78,232.186 1469.35,232.027 1469.92,234.019 1470.48,235.967 1471.05,234.803 1471.62,233.658 1472.19,235.554 1472.76,237.189 1473.33,236.64 1473.89,235.218 1474.46,234.752 1475.03,232.331 1475.6,232.198 1476.17,233.282 1476.74,232.18 1477.31,229.031 1477.87,229.038 1478.44,232.135 1479.01,230.952 1479.58,231.006 1480.15,232.121 1480.72,233.313 1481.28,235.236 1481.85,235.094 1482.42,235.764 1482.99,234.256 1483.56,234.992 1484.13,234.776 1484.69,233.329 1485.26,233.146 1485.83,231.96 1486.4,232.917 1486.97,231.549 1487.54,232.698 1488.1,232.469 1488.67,232.126 1489.24,233.192 1489.81,231.015 1490.38,230.93 1490.95,229.857 1491.51,229.979 1492.08,231.792 1492.65,230.674 1493.22,231.803 1493.79,231.011 1494.36,230.032 1494.92,231.942 1495.49,230.805 1496.06,230.772 1496.63,229.759 1497.2,231.717 1497.77,233.572 1498.33,236.285 1498.9,235.865 1499.47,236.6 1500.04,234.919 1500.61,234.584 1501.18,234.203 1501.74,232.628 1502.31,235.391 1502.88,235.062 1503.45,234.586 1504.02,234.097 1504.59,233.672 1505.15,233.306 1505.72,232.105 1506.29,231.744 1506.86,232.847 1507.43,231.544 1508,231.314 1508.56,231.329 1509.13,231.318 1509.7,232 1510.27,230.732 1510.84,228.549 1511.41,227.71 1511.97,227.765 1512.54,227.855 1513.11,227.851 1513.68,228.976 1514.25,229.079 1514.82,227.995 1515.38,229.089 1515.95,228.04 1516.52,229.102 1517.09,230.183 1517.66,231.026 1518.23,232.933 1518.79,230.649 1519.36,229.633 1519.93,230.596 1520.5,229.41 1521.07,229.636 1521.64,230.391 1522.2,229.345 1522.77,229.257 1523.34,227.973 1523.91,228.083 1524.48,228.099 1525.05,227.056 1525.61,228.124 1526.18,226.186 1526.75,229.571 1527.32,227.709 1527.89,228.726 1528.46,229.777 1529.02,227.9 1529.59,228.041 1530.16,229.109 1530.73,228.02 1531.3,227.17 1531.87,226.148 1532.43,225.444 1533,226.962 1533.57,228.195 1534.14,227.386 1534.71,227.772 1535.28,228.942 1535.84,229.921 1536.41,229.712 1536.98,229.814 1537.55,227.79 1538.12,229.155 1538.69,230.29 1539.25,230.002 1539.82,230.328 1540.39,231.388 1540.96,232.52 1541.53,233.473 1542.1,235.292 1542.66,233.929 1543.23,231.675 1543.8,231.429 1544.37,229.37 1544.94,229.433 1545.51,228.332 1546.08,227.368 1546.64,227.535 1547.21,227.673 1547.78,227.931 1548.35,228.276 1548.92,230.671 1549.49,229.642 1550.05,229.872 1550.62,228.909 1551.19,226.971 1551.76,226.526 1552.33,225.744 1552.9,225.108 1553.46,224.457 1554.03,227.062 1554.6,228.707 1555.17,228.986 1555.74,229.179 1556.31,231.611 1556.87,232.715 1557.44,232.608 1558.01,232.484 1558.58,230.182 1559.15,230.082 1559.72,226.813 1560.28,227.19 1560.85,228.593 1561.42,227.779 1561.99,229.298 1562.56,229.441 1563.13,228.848 1563.69,229.023 1564.26,230.346 1564.83,230.651 1565.4,230.62 1565.97,228.724 1566.54,229 1567.1,228.356 1567.67,227.68 1568.24,230.2 1568.81,230.164 1569.38,228.297 1569.95,230.823 1570.51,230.058 1571.08,230.239 1571.65,230.44 1572.22,230.947 1572.79,232.041 1573.36,233.018 1573.92,234.136 1574.49,235.285 1575.06,232.931 1575.63,233.695 1576.2,234.487 1576.77,234.362 1577.33,233.158 1577.9,231.039 1578.47,229.987 1579.04,227.997 1579.61,226.413 1580.18,224.646 1580.74,225.129 1581.31,224.632 1581.88,227.198 1582.45,230.755 1583.02,230.777 1583.59,230.649 1584.15,230.816 1584.72,231.762 1585.29,232.875 1585.86,234.733 1586.43,235.764 1587,235.43 1587.56,235.505 1588.13,234.201 1588.7,231.881 1589.27,232.132 1589.84,230.012 1590.41,230.231 1590.97,231.467 1591.54,234.62 1592.11,232.334 1592.68,234.348 1593.25,233.128 1593.82,232.022 1594.38,233.152 1594.95,234.085 1595.52,234.928 1596.09,233.667 1596.66,232.404 1597.23,234.177 1597.79,231.767 1598.36,231.697 1598.93,232.717 1599.5,235.61 1600.07,234.189 1600.64,235.15 1601.2,234.812 1601.77,235.615 1602.34,236.301 1602.91,234.76 1603.48,235.491 1604.05,236.353 1604.61,234.797 1605.18,234.575 1605.75,234.156 1606.32,233.642 1606.89,233.317 1607.46,233.117 1608.02,233.934 1608.59,232.534 1609.16,232.499 1609.73,231.209 1610.3,231.23 1610.87,230.029 1611.43,226.665 1612,227.929 1612.57,229.133 1613.14,229.222 1613.71,229.21 1614.28,229.192 1614.84,229.348 1615.41,231.479 1615.98,231.429 1616.55,233.327 1617.12,233.943 1617.69,234.479 1618.26,234.265 1618.82,231.891 1619.39,230.55 1619.96,228.37 1620.53,227.313 1621.1,224.386 1621.67,226.605 1622.23,226.976 1622.8,228.074 1623.37,228.267 1623.94,229.288 1624.51,230.345 1625.08,229.309 1625.64,229.446 1626.21,229.631 1626.78,229.905 1627.35,231.073 1627.92,230.16 1628.49,230.099 1629.05,229.075 1629.62,228.066 1630.19,225.249 1630.76,225.55 1631.33,226.981 1631.9,227.261 1632.46,227.479 1633.03,228.649 1633.6,229.808 1634.17,230.906 1634.74,233.118 1635.31,234.802 1635.87,234.691 1636.44,234.237 1637.01,230.815 1637.58,230.82 1638.15,232.816 1638.72,232.825 1639.28,231.689 1639.85,233.755 1640.42,235.647 1640.99,236.347 1641.56,234.839 1642.13,234.455 1642.69,232.088 1643.26,232.073 1643.83,230.831 1644.4,232.819 1644.97,232.787 1645.54,231.669 1646.1,231.677 1646.67,232.436 1647.24,232.376 1647.81,234.213 1648.38,234.893 1648.95,234.512 1649.51,234.043 1650.08,235.06 1650.65,231.454 1651.22,232.483 1651.79,232.586 1652.36,235.368 1652.92,235.898 1653.49,236.464 1654.06,236.007 1654.63,236.617 1655.2,235.883 1655.77,233.515 1656.33,232.399 1656.9,234.31 1657.47,233.895 1658.04,232.502 1658.61,232.331 1659.18,232.375 1659.74,229.966 1660.31,229.925 1660.88,230.796 1661.45,230.806 1662.02,230.821 1662.59,228.635 1663.15,230.687 1663.72,229.694 1664.29,228.646 1664.86,227.565 1665.43,228.576 1666,230.697 1666.56,230.564 1667.13,230.38 1667.7,229.281 1668.27,230.317 1668.84,228.092 1669.41,229.01 1669.97,228.955 1670.54,231.168 1671.11,232.224 1671.68,231.1 1672.25,228.806 1672.82,229.854 1673.38,230.731 1673.95,229.556 1674.52,228.567 1675.09,228.773 1675.66,228.666 1676.23,228.971 1676.79,228.137 1677.36,226.348 1677.93,228.629 1678.5,227.826 1679.07,225.896 1679.64,222.215 1680.2,223.889 1680.77,223.437 1681.34,221 1681.91,220.657 1682.48,220.542 1683.05,220.201 1683.61,219.895 1684.18,221.676 1684.75,220.362 1685.32,220.144 1685.89,224.092 1686.46,227.02 1687.02,227.394 1687.59,227.854 1688.16,229.341 1688.73,230.661 1689.3,230.506 1689.87,233.636 1690.44,232.456 1691,230.242 1691.57,231.458 1692.14,229.603 1692.71,229.624 1693.28,230.971 1693.85,231.112 1694.41,230.425 1694.98,228.509 1695.55,227.681 1696.12,228.075 1696.69,228.27 1697.26,227.563 1697.82,227.962 1698.39,228.505 1698.96,226.99 1699.53,227.385 1700.1,228.645 1700.67,230.912 1701.23,230.795 1701.8,232.004 1702.37,231.994 1702.94,234.072 1703.51,233.734 1704.08,235.716 1704.64,236.586 1705.21,234.314 1705.78,234.914 1706.35,235.717 1706.92,235.3 1707.49,234.973 1708.05,233.703 1708.62,230.315 1709.19,233.769 1709.76,233.807 1710.33,236.743 1710.9,236.487 1711.46,234.1 1712.03,234.842 1712.6,235.612 1713.17,235.346 1713.74,234.993 1714.31,235.649 1714.87,235.056 1715.44,234.758 1716.01,235.479 1716.58,232.351 1717.15,233.139 1717.72,230.984 1718.28,226.892 1718.85,230.344 1719.42,231.076 1719.99,231.998 1720.56,232.816 1721.13,233.461 1721.69,235.34 1722.26,234.05 1722.83,232.947 1723.4,231.688 1723.97,231.267 1724.54,229.297 1725.1,229.283 1725.67,228.323 1726.24,229.546 1726.81,229.697 1727.38,226.902 1727.95,226.121 1728.51,223.608 1729.08,224.019 1729.65,226.336 1730.22,224.891 1730.79,224.506 1731.36,222.911 1731.92,224.688 1732.49,226.169 1733.06,229.569 1733.63,227.755 1734.2,230.137 1734.77,229.279 1735.33,230.522 1735.9,231.68 1736.47,231.616 1737.04,232.669 1737.61,231.594 1738.18,231.726 1738.74,233.49 1739.31,233.238 1739.88,233.047 1740.45,231.022 1741.02,232.24 1741.59,232.117 1742.15,231.301 1742.72,230.463 1743.29,233.448 1743.86,233.26 1744.43,234.182 1745,233.995 1745.56,234.904 1746.13,235.722 1746.7,233.323 1747.27,236.351 1747.84,234.876 1748.41,232.549 1748.97,233.484 1749.54,232.689 1750.11,232.63 1750.68,233.467 1751.25,234.271 1751.82,232.885 1752.38,232.801 1752.95,231.532 1753.52,233.491 1754.09,234.396 1754.66,233.025 1755.23,233.856 1755.79,232.517 1756.36,233.5 1756.93,233.086 1757.5,233.947 1758.07,235.706 1758.64,231.023 1759.21,233.049 1759.77,233.943 1760.34,232.67 1760.91,233.391 1761.48,231.047 1762.05,230.788 1762.62,230.729 1763.18,230.664 1763.75,231.567 1764.32,231.55 1764.89,231.507 1765.46,230.621 1766.03,231.462 1766.59,231.389 1767.16,230.182 1767.73,229.172 1768.3,228.278 1768.87,227.661 1769.44,228.008 1770,229.157 1770.57,229.338 1771.14,229.581 1771.71,227.543 1772.28,226.832 1772.85,226.253 1773.41,227.53 1773.98,230.905 1774.55,230.867 1775.12,230.022 1775.69,229.801 1776.26,229.984 1776.82,229.885 1777.39,229.03 1777.96,228.213 1778.53,229.488 1779.1,233.698 1779.67,233.404 1780.23,233.45 1780.8,234.347 1781.37,232.939 1781.94,231.517 1782.51,229.542 1783.08,229.616 1783.64,229.604 1784.21,229.662 1784.78,228.577 1785.35,227.677 1785.92,229.925 1786.49,230.95 1787.05,231.889 1787.62,231.011 1788.19,229.845 1788.76,229.907 1789.33,229.851 1789.9,230.982 1790.46,231.212 1791.03,231.318 1791.6,232.285 1792.17,228.947 1792.74,228.027 1793.31,226.312 1793.87,227.529 1794.44,225.784 1795.01,228.152 1795.58,229.451 1796.15,228.551 1796.72,228.773 1797.28,229.071 1797.85,230.296 1798.42,228.344 1798.99,227.369 1799.56,228.68 1800.13,229.853 1800.69,230.035 1801.26,229.255 1801.83,232.505 1802.4,231.4 1802.97,230.558 1803.54,231.544 1804.1,229.473 1804.67,228.704 1805.24,228.98 1805.81,230.223 1806.38,230.176 1806.95,229.987 1807.51,230.152 1808.08,231.24 1808.65,231.089 1809.22,231.055 1809.79,228.014 1810.36,227.336 1810.92,227.5 1811.49,228.788 1812.06,231.201 1812.63,233.205 1813.2,233.337 1813.77,234.259 1814.33,235.198 1814.9,238.986 1815.47,238.575 1816.04,239.995 1816.61,240.325 1817.18,240.761 1817.74,238.944 1818.31,239.228 1818.88,238.627 1819.45,238.324 1820.02,237.809 1820.59,235.24 1821.15,236.681 1821.72,236.941 1822.29,236.225 1822.86,234.87 1823.43,233.467 1824,232.066 1824.56,231.154 1825.13,233.03 1825.7,230.78 1826.27,229.64 1826.84,229.653 1827.41,229.814 1827.97,228.702 1828.54,225.675 1829.11,226.103 1829.68,226.483 1830.25,226.751 1830.82,226.043 1831.39,225.177 1831.95,225.553 1832.52,227.935 1833.09,228.134 1833.66,228.082 1834.23,229.246 1834.8,229.442 1835.36,230.393 1835.93,228.394 1836.5,227.306 1837.07,227.684 1837.64,227.939 1838.21,229.067 1838.77,229.097 1839.34,229.121 1839.91,227.355 1840.48,228.741 1841.05,230.843 1841.62,230.814 1842.18,230.942 1842.75,231.852 1843.32,231.955 1843.89,231.044 1844.46,229.969 1845.03,232.203 1845.59,233.236 1846.16,230.132 1846.73,230.254 1847.3,229.256 1847.87,228.397 1848.44,228.341 1849,226.51 1849.57,225.919 1850.14,227.208 1850.71,227.502 1851.28,225.495 1851.85,227.832 1852.41,228.076 1852.98,228.291 1853.55,228.655 1854.12,227.799 1854.69,228.169 1855.26,229.463 1855.82,229.847 1856.39,228.953 1856.96,229.247 1857.53,229.629 1858.1,233.969 1858.67,233.915 1859.23,233.76 1859.8,233.713 1860.37,228.344 1860.94,228.551 1861.51,230.835 1862.08,232.91 1862.64,232.886 1863.21,233.019 1863.78,230.908 1864.35,230.816 1864.92,232.925 1865.49,233.751 1866.05,235.6 1866.62,236.15 1867.19,233.471 1867.76,235.284 1868.33,234.918 1868.9,234.656 1869.46,234.53 1870.03,234.213 1870.6,231.993 1871.17,231.941 1871.74,232.937 1872.31,232.779 1872.87,233.462 1873.44,231.047 1874.01,232.088 1874.58,230.976 1875.15,228.708 1875.72,228.622 1876.28,230.769 1876.85,232.85 1877.42,233.685 1877.99,235.774 1878.56,234.44 1879.13,233.275 1879.69,233.028 1880.26,232.637 1880.83,230.426 1881.4,231.465 1881.97,229.466 1882.54,233.556 1883.1,234.383 1883.67,234.948 1884.24,233.522 1884.81,231.164 1885.38,233.144 1885.95,231.94 1886.51,231.889 1887.08,230.525 1887.65,230.414 1888.22,232.776 1888.79,230.463 1889.36,231.53 1889.92,230.434 1890.49,229.265 1891.06,229.416 1891.63,228.438 1892.2,228.476 1892.77,227.56 1893.33,228.755 1893.9,228.866 1894.47,230.018 1895.04,226.919 1895.61,225.108 1896.18,226.504 1896.74,227.836 1897.31,228.05 1897.88,228.236 1898.45,229.635 1899.02,229.974 1899.59,229.936 1900.16,232.29 1900.72,232.065 1901.29,233.903 1901.86,232.704 1902.43,234.664 1903,234.438 1903.57,236.097 1904.13,234.521 1904.7,234.255 1905.27,233.924 1905.84,230.715 1906.41,229.724 1906.98,229.885 1907.54,231.751 1908.11,231.555 1908.68,229.427 1909.25,227.362 1909.82,228.744 1910.39,228.804 1910.95,227.943 1911.52,228.067 1912.09,226.303 1912.66,226.478 1913.23,225.644 1913.8,226.773 1914.36,225.06 1914.93,227.525 1915.5,225.862 1916.07,227.011 1916.64,227.332 1917.21,228.801 1917.77,228.953 1918.34,231.28 1918.91,231.364 1919.48,231.206 1920.05,228.931 1920.62,230.352 1921.18,231.654 1921.75,232.634 1922.32,233.544 1922.89,232.279 1923.46,231.353 1924.03,232.269 1924.59,235.342 1925.16,235.047 1925.73,235.581 1926.3,235.476 1926.87,235.349 1927.44,234.022 1928,235.826 1928.57,234.257 1929.14,232.978 1929.71,231.683 1930.28,231.576 1930.85,232.453 1931.41,232.603 1931.98,230.465 1932.55,228.195 1933.12,229.323 1933.69,229.398 1934.26,230.462 1934.82,230.362 1935.39,231.262 1935.96,232.366 1936.53,231.139 1937.1,230.181 1937.67,230.218 1938.23,231.175 1938.8,231.317 1939.37,230.308 1939.94,231.463 1940.51,231.346 1941.08,233.434 1941.64,233.235 1942.21,233.152 1942.78,234.101 1943.35,232.779 1943.92,232.594 1944.49,231.41 1945.05,230.345 1945.62,232.421 1946.19,234.618 1946.76,233.215 1947.33,233.917 1947.9,232.808 1948.46,229.743 1949.03,231.858 1949.6,232.929 1950.17,233.624 1950.74,232.422 1951.31,235.394 1951.87,234.985 1952.44,233.584 1953.01,235.322 1953.58,234.183 1954.15,234.987 1954.72,236.477 1955.28,232.909 1955.85,232.768 1956.42,233.526 1956.99,232.007 1957.56,230.717 1958.13,229.586 1958.69,230.792 1959.26,231.654 1959.83,232.61 1960.4,233.357 1960.97,231.999 1961.54,231.687 1962.1,234.515 1962.67,234.044 1963.24,233.516 1963.81,233.118 1964.38,232.672 1964.95,231.429 1965.51,228.091 1966.08,227.053 1966.65,227.237 1967.22,227.441 1967.79,226.58 1968.36,226.786 1968.92,225.878 1969.49,225.294 1970.06,224.677 1970.63,224.199 1971.2,224.565 1971.77,226.165 1972.34,226.526 1972.9,225.804 1973.47,226.118 1974.04,226.482 1974.61,227.822 1975.18,228.053 1975.75,229.255 1976.31,227.102 1976.88,229.412 1977.45,229.514 1978.02,229.514 1978.59,226.421 1979.16,227.76 1979.72,227.797 1980.29,227.896 1980.86,230.244 1981.43,230.422 1982,231.473 1982.57,230.419 1983.13,227.391 1983.7,229.639 1984.27,230.952 1984.84,230.872 1985.41,232.105 1985.98,231.121 1986.54,230.125 1987.11,230.184 1987.68,230.08 1988.25,229.123 1988.82,230.171 1989.39,230.15 1989.95,230.573 1990.52,230.674 1991.09,230.555 1991.66,229.267 1992.23,231.415 1992.8,231.406 1993.36,229.352 1993.93,229.256 1994.5,229.317 1995.07,230.423 1995.64,228.49 1996.21,231.823 1996.77,233.749 1997.34,232.321 1997.91,229.965 1998.48,229.076 1999.05,229.268 1999.62,229.384 2000.18,229.351 2000.75,227.392 2001.32,225.536 2001.89,222.673 2002.46,226.278 2003.03,225.382 2003.59,227.799 2004.16,227.057 2004.73,231.405 2005.3,232.307 2005.87,233.203 2006.44,232.451 2007,232.625 2007.57,234.614 2008.14,234.471 2008.71,235.313 2009.28,234.242 2009.85,230.881 2010.41,232.941 2010.98,229.791 2011.55,231.006 2012.12,233.377 2012.69,235.296 2013.26,237.077 2013.82,237.851 2014.39,236.256 2014.96,236.927 2015.53,234.443 2016.1,235.269 2016.67,235.094 2017.23,232.757 2017.8,229.244 2018.37,230.556 2018.94,227.614 2019.51,228.914 2020.08,230.882 2020.64,228.725 2021.21,229.886 2021.78,229.895 2022.35,230.762 2022.92,230.855 2023.49,231.955 2024.05,230.979 2024.62,231.074 2025.19,231.007 2025.76,228.932 2026.33,228.018 2026.9,228.422 2027.46,228.52 2028.03,229.685 2028.6,231.485 2029.17,229.202 2029.74,230.25 2030.31,231.145 2030.87,233.274 2031.44,232.135 2032.01,231.134 2032.58,231.304 2033.15,232.422 2033.72,230.13 2034.28,230.1 2034.85,228.295 2035.42,229.404 2035.99,227.188 2036.56,227.351 2037.13,227.517 2037.69,228.783 2038.26,229.914 2038.83,229.745 2039.4,229.99 2039.97,230.082 2040.54,230.335 2041.11,230.348 2041.67,229.673 2042.24,230.032 2042.81,230.253 2043.38,228.204 2043.95,228.33 2044.52,227.53 2045.08,226.946 2045.65,227.251 2046.22,224.368 2046.79,223.202 2047.36,221.884 2047.93,223.615 2048.49,224.307 2049.06,224.733 2049.63,229.219 2050.2,230.545 2050.77,230.825 2051.34,228.805 2051.9,229.122 2052.47,231.321 2053.04,232.207 2053.61,232.22 2054.18,231.32 2054.75,233.768 2055.31,235.636 2055.88,238.543 2056.45,238.242 2057.02,238.981 2057.59,237.686 2058.16,238.134 2058.72,238.654 2059.29,237.196 2059.86,235.758 2060.43,236.745 2061,236.256 2061.57,234.955 2062.13,234.797 2062.7,234.498 2063.27,235.301 2063.84,236.914 2064.41,234.421 2064.98,234.186 2065.54,232.87 2066.11,231.803 2066.68,231.613 2067.25,231.529 2067.82,230.282 2068.39,231.434 2068.95,231.486 2069.52,232.291 2070.09,234.169 2070.66,235.052 2071.23,236.823 2071.8,235.11 2072.36,233.857 2072.93,233.713 2073.5,233.529 2074.07,234.274 2074.64,233.014 2075.21,233.03 2075.77,231.032 2076.34,226.88 2076.91,228.168 2077.48,230.369 2078.05,230.247 2078.62,228.929 2079.18,230.263 2079.75,231.423 2080.32,231.254 2080.89,229.12 2081.46,228.282 2082.03,230.695 2082.59,229.727 2083.16,229.628 2083.73,229.715 2084.3,227.951 2084.87,227.148 2085.44,226.382 2086,226.399 2086.57,227.819 2087.14,225.965 2087.71,226.404 2088.28,224.478 2088.85,224.869 2089.41,226.384 2089.98,227.651 2090.55,224.822 2091.12,225.217 2091.69,225.745 2092.26,229.293 2092.82,230.559 2093.39,228.491 2093.96,228.622 2094.53,228.905 2095.1,230.965 2095.67,232.25 2096.23,233.408 2096.8,234.177 2097.37,234.061 2097.94,232.954 2098.51,233.869 2099.08,234.727 2099.64,234.523 2100.21,231.311 2100.78,231.267 2101.35,232.33 2101.92,232.325 2102.49,229.071 2103.05,228.208 2103.62,231.447 2104.19,233.434 2104.76,232.258 2105.33,230.971 2105.9,230.774 2106.46,230.009 2107.03,232.165 2107.6,229.966 2108.17,230.027 2108.74,229.01 2109.31,229.294 2109.87,230.501 2110.44,230.432 2111.01,230.509 2111.58,228.603 2112.15,229.818 2112.72,227.756 2113.29,225.762 2113.85,227.395 2114.42,228.602 2114.99,228.97 2115.56,228.059 2116.13,229.497 2116.7,228.534 2117.26,228.634 2117.83,230.966 2118.4,231.951 2118.97,232.845 2119.54,231.649 2120.11,232.874 2120.67,230.788 2121.24,230.78 2121.81,228.784 2122.38,228.991 2122.95,229.106 2123.52,230.333 2124.08,229.421 2124.65,231.808 2125.22,231.691 2125.79,233.589 2126.36,229.376 2126.93,228.591 2127.49,227.915 2128.06,228.152 2128.63,227.415 2129.2,225.436 2129.77,225.641 2130.34,225.849 2130.9,226.262 2131.47,225.574 2132.04,227.254 2132.61,227.583 2133.18,226.951 2133.75,228.224 2134.31,228.506 2134.88,228.716 2135.45,230.062 2136.02,230.353 2136.59,232.612 2137.16,233.68 2137.72,232.641 2138.29,233.949 2138.86,234.039 2139.43,234.897 2140,234.765 2140.57,234.8 2141.13,236.743 2141.7,236.466 2142.27,236.178 2142.84,237.045 2143.41,236.411 2143.98,236.086 2144.54,234.738 2145.11,234.532 2145.68,233.362 2146.25,233.197 2146.82,235.009 2147.39,233.779 2147.95,232.581 2148.52,233.582 2149.09,233.325 2149.66,233.109 2150.23,231.935 2150.8,232.083 2151.36,231.009 2151.93,231.159 2152.5,232.228 2153.07,233.147 2153.64,234.053 2154.21,234.561 2154.77,233.975 2155.34,233.999 2155.91,234.891 2156.48,235.921 2157.05,236.65 2157.62,235.914 2158.18,235.569 2158.75,234.025 2159.32,235.865 2159.89,234.348 \"/>\n<path clip-path=\"url(#clip010)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip010)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip010)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip010)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip010)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip010)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.027 ± 0.018\n  with uncertainty of ± 0.0011632751388483957\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01689 ± (0.00387623, 0.00381226) (MC)\n  95% confidence interval: [-4.024, -4.00938]) (MC)\n  linear error propagation: -4.01733 ± 0.00367757\n  |δ_y| = |0.00194957| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016888459487259, val_l = 0.007112715085527022, val_u = 0.007505658030434681)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip040\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip040)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip041\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip040)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip042\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1152.32 2211.02,1152.32 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1001.8 2211.02,1001.8 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,851.267 2211.02,851.267 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,700.739 2211.02,700.739 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,550.211 2211.02,550.211 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,399.683 2211.02,399.683 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,249.155 2211.02,249.155 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1152.32 365.751,1152.32 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1001.8 365.751,1001.8 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,851.267 365.751,851.267 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,700.739 365.751,700.739 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,550.211 365.751,550.211 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,399.683 365.751,399.683 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,249.155 365.751,249.155 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M298.909 1138.12 Q295.298 1138.12 293.469 1141.69 Q291.664 1145.23 291.664 1152.36 Q291.664 1159.46 293.469 1163.03 Q295.298 1166.57 298.909 1166.57 Q302.543 1166.57 304.349 1163.03 Q306.177 1159.46 306.177 1152.36 Q306.177 1145.23 304.349 1141.69 Q302.543 1138.12 298.909 1138.12 M298.909 1134.42 Q304.719 1134.42 307.775 1139.02 Q310.853 1143.61 310.853 1152.36 Q310.853 1161.08 307.775 1165.69 Q304.719 1170.27 298.909 1170.27 Q293.099 1170.27 290.02 1165.69 Q286.964 1161.08 286.964 1152.36 Q286.964 1143.61 290.02 1139.02 Q293.099 1134.42 298.909 1134.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M259.557 1015.14 L267.196 1015.14 L267.196 988.774 L258.886 990.441 L258.886 986.182 L267.15 984.515 L271.826 984.515 L271.826 1015.14 L279.465 1015.14 L279.465 1019.08 L259.557 1019.08 L259.557 1015.14 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M298.909 987.594 Q295.298 987.594 293.469 991.159 Q291.664 994.7 291.664 1001.83 Q291.664 1008.94 293.469 1012.5 Q295.298 1016.04 298.909 1016.04 Q302.543 1016.04 304.349 1012.5 Q306.177 1008.94 306.177 1001.83 Q306.177 994.7 304.349 991.159 Q302.543 987.594 298.909 987.594 M298.909 983.89 Q304.719 983.89 307.775 988.497 Q310.853 993.08 310.853 1001.83 Q310.853 1010.56 307.775 1015.16 Q304.719 1019.75 298.909 1019.75 Q293.099 1019.75 290.02 1015.16 Q286.964 1010.56 286.964 1001.83 Q286.964 993.08 290.02 988.497 Q293.099 983.89 298.909 983.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M262.775 864.612 L279.094 864.612 L279.094 868.547 L257.15 868.547 L257.15 864.612 Q259.812 861.857 264.395 857.228 Q269.002 852.575 270.182 851.232 Q272.428 848.709 273.307 846.973 Q274.21 845.214 274.21 843.524 Q274.21 840.769 272.266 839.033 Q270.344 837.297 267.242 837.297 Q265.043 837.297 262.59 838.061 Q260.159 838.825 257.381 840.376 L257.381 835.654 Q260.205 834.519 262.659 833.941 Q265.113 833.362 267.15 833.362 Q272.52 833.362 275.715 836.047 Q278.909 838.732 278.909 843.223 Q278.909 845.353 278.099 847.274 Q277.312 849.172 275.205 851.765 Q274.627 852.436 271.525 855.654 Q268.423 858.848 262.775 864.612 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M298.909 837.066 Q295.298 837.066 293.469 840.631 Q291.664 844.172 291.664 851.302 Q291.664 858.408 293.469 861.973 Q295.298 865.515 298.909 865.515 Q302.543 865.515 304.349 861.973 Q306.177 858.408 306.177 851.302 Q306.177 844.172 304.349 840.631 Q302.543 837.066 298.909 837.066 M298.909 833.362 Q304.719 833.362 307.775 837.968 Q310.853 842.552 310.853 851.302 Q310.853 860.029 307.775 864.635 Q304.719 869.218 298.909 869.218 Q293.099 869.218 290.02 864.635 Q286.964 860.029 286.964 851.302 Q286.964 842.552 290.02 837.968 Q293.099 833.362 298.909 833.362 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M272.914 699.385 Q276.27 700.102 278.145 702.371 Q280.043 704.639 280.043 707.973 Q280.043 713.088 276.525 715.889 Q273.006 718.69 266.525 718.69 Q264.349 718.69 262.034 718.25 Q259.742 717.834 257.289 716.977 L257.289 712.463 Q259.233 713.598 261.548 714.176 Q263.863 714.755 266.386 714.755 Q270.784 714.755 273.076 713.019 Q275.39 711.283 275.39 707.973 Q275.39 704.917 273.238 703.204 Q271.108 701.468 267.289 701.468 L263.261 701.468 L263.261 697.626 L267.474 697.626 Q270.923 697.626 272.752 696.26 Q274.58 694.871 274.58 692.278 Q274.58 689.616 272.682 688.204 Q270.807 686.769 267.289 686.769 Q265.367 686.769 263.168 687.186 Q260.969 687.602 258.33 688.482 L258.33 684.315 Q260.992 683.575 263.307 683.204 Q265.645 682.834 267.705 682.834 Q273.029 682.834 276.131 685.265 Q279.233 687.672 279.233 691.792 Q279.233 694.663 277.59 696.653 Q275.946 698.621 272.914 699.385 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M298.909 686.538 Q295.298 686.538 293.469 690.102 Q291.664 693.644 291.664 700.774 Q291.664 707.88 293.469 711.445 Q295.298 714.987 298.909 714.987 Q302.543 714.987 304.349 711.445 Q306.177 707.88 306.177 700.774 Q306.177 693.644 304.349 690.102 Q302.543 686.538 298.909 686.538 M298.909 682.834 Q304.719 682.834 307.775 687.44 Q310.853 692.024 310.853 700.774 Q310.853 709.501 307.775 714.107 Q304.719 718.69 298.909 718.69 Q293.099 718.69 290.02 714.107 Q286.964 709.501 286.964 700.774 Q286.964 692.024 290.02 687.44 Q293.099 682.834 298.909 682.834 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M271.594 537.005 L259.789 555.454 L271.594 555.454 L271.594 537.005 M270.367 532.931 L276.247 532.931 L276.247 555.454 L281.177 555.454 L281.177 559.343 L276.247 559.343 L276.247 567.491 L271.594 567.491 L271.594 559.343 L255.992 559.343 L255.992 554.829 L270.367 532.931 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M298.909 536.01 Q295.298 536.01 293.469 539.574 Q291.664 543.116 291.664 550.246 Q291.664 557.352 293.469 560.917 Q295.298 564.459 298.909 564.459 Q302.543 564.459 304.349 560.917 Q306.177 557.352 306.177 550.246 Q306.177 543.116 304.349 539.574 Q302.543 536.01 298.909 536.01 M298.909 532.306 Q304.719 532.306 307.775 536.912 Q310.853 541.496 310.853 550.246 Q310.853 558.972 307.775 563.579 Q304.719 568.162 298.909 568.162 Q293.099 568.162 290.02 563.579 Q286.964 558.972 286.964 550.246 Q286.964 541.496 290.02 536.912 Q293.099 532.306 298.909 532.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M258.793 382.403 L277.15 382.403 L277.15 386.338 L263.076 386.338 L263.076 394.81 Q264.094 394.463 265.113 394.301 Q266.131 394.116 267.15 394.116 Q272.937 394.116 276.316 397.287 Q279.696 400.458 279.696 405.875 Q279.696 411.454 276.224 414.555 Q272.752 417.634 266.432 417.634 Q264.256 417.634 261.988 417.264 Q259.742 416.893 257.335 416.153 L257.335 411.454 Q259.418 412.588 261.641 413.143 Q263.863 413.699 266.34 413.699 Q270.344 413.699 272.682 411.593 Q275.02 409.486 275.02 405.875 Q275.02 402.264 272.682 400.157 Q270.344 398.051 266.34 398.051 Q264.465 398.051 262.59 398.468 Q260.738 398.884 258.793 399.764 L258.793 382.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M298.909 385.482 Q295.298 385.482 293.469 389.046 Q291.664 392.588 291.664 399.718 Q291.664 406.824 293.469 410.389 Q295.298 413.93 298.909 413.93 Q302.543 413.93 304.349 410.389 Q306.177 406.824 306.177 399.718 Q306.177 392.588 304.349 389.046 Q302.543 385.482 298.909 385.482 M298.909 381.778 Q304.719 381.778 307.775 386.384 Q310.853 390.968 310.853 399.718 Q310.853 408.444 307.775 413.051 Q304.719 417.634 298.909 417.634 Q293.099 417.634 290.02 413.051 Q286.964 408.444 286.964 399.718 Q286.964 390.968 290.02 386.384 Q293.099 381.778 298.909 381.778 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M269.326 247.291 Q266.178 247.291 264.326 249.444 Q262.497 251.597 262.497 255.347 Q262.497 259.074 264.326 261.25 Q266.178 263.402 269.326 263.402 Q272.474 263.402 274.303 261.25 Q276.154 259.074 276.154 255.347 Q276.154 251.597 274.303 249.444 Q272.474 247.291 269.326 247.291 M278.608 232.639 L278.608 236.898 Q276.849 236.065 275.043 235.625 Q273.261 235.185 271.502 235.185 Q266.872 235.185 264.418 238.31 Q261.988 241.435 261.641 247.754 Q263.006 245.74 265.066 244.676 Q267.127 243.588 269.603 243.588 Q274.812 243.588 277.821 246.759 Q280.853 249.907 280.853 255.347 Q280.853 260.671 277.705 263.889 Q274.557 267.106 269.326 267.106 Q263.33 267.106 260.159 262.523 Q256.988 257.916 256.988 249.19 Q256.988 240.995 260.877 236.134 Q264.766 231.25 271.316 231.25 Q273.076 231.25 274.858 231.597 Q276.664 231.944 278.608 232.639 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M298.909 234.954 Q295.298 234.954 293.469 238.518 Q291.664 242.06 291.664 249.19 Q291.664 256.296 293.469 259.861 Q295.298 263.402 298.909 263.402 Q302.543 263.402 304.349 259.861 Q306.177 256.296 306.177 249.19 Q306.177 242.06 304.349 238.518 Q302.543 234.954 298.909 234.954 M298.909 231.25 Q304.719 231.25 307.775 235.856 Q310.853 240.44 310.853 249.19 Q310.853 257.916 307.775 262.523 Q304.719 267.106 298.909 267.106 Q293.099 267.106 290.02 262.523 Q286.964 257.916 286.964 249.19 Q286.964 240.44 290.02 235.856 Q293.099 231.25 298.909 231.25 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip042)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1041.41 400.199,939.514 400.786,846.021 401.372,760.366 401.958,682.028 402.545,610.523 403.131,545.403 403.718,486.254 404.304,432.688 404.891,384.343 405.477,340.882 406.063,301.989 406.65,267.369 407.236,236.743 407.823,279.675 408.409,254.339 408.995,290.387 409.582,268.371 410.168,249.418 410.755,233.324 411.341,219.895 411.927,250.894 412.514,240.969 413.1,234.173 413.687,262.249 414.273,257.571 414.86,254.68 415.446,281.305 416.032,281.084 416.619,306.096 417.205,329.167 417.792,352.425 418.378,373.393 418.964,376.198 419.551,397.216 420.137,403.023 420.724,423.159 421.31,430.056 421.896,450.692 422.483,459.819 423.069,480.889 423.656,489.865 424.242,499.35 424.829,508.984 425.415,528.168 426.001,537.892 426.588,556.445 427.174,582.605 427.761,607.737 428.347,616.807 428.933,646.97 429.52,668.945 430.106,690.028 430.693,704.762 431.279,724.172 431.865,742.477 432.452,759.743 433.038,777.015 433.625,788.385 434.211,794.965 434.798,810.89 435.384,842.595 435.97,847.165 436.557,852.555 437.143,865.191 437.73,870.793 438.316,879.515 438.902,884.645 439.489,897.021 440.075,912.148 440.662,920.16 441.248,924.623 441.835,935.444 442.421,951.827 443.007,961.728 443.594,965.58 444.18,972.665 444.767,979.319 445.353,983.175 445.939,990.04 446.526,996.634 447.112,1002.96 447.699,1007.01 448.285,1013.22 448.871,1021.84 449.458,1028.11 450.044,1034.24 450.631,1042.31 451.217,1052.66 451.804,1055.96 452.39,1059.42 452.976,1062.97 453.563,1068.64 454.149,1074.08 454.736,1079.51 455.322,1088.84 455.908,1091.88 456.495,1096.65 457.081,1101.18 457.668,1103.75 458.254,1110.2 458.84,1118.37 459.427,1123.11 460.013,1125.39 460.6,1127.81 461.186,1130.34 461.773,1132.81 462.359,1138.66 462.945,1144.24 463.532,1146.24 464.118,1151.71 464.705,1153.48 465.291,1157.02 465.877,1158.76 466.464,1163.93 467.05,1167.21 467.637,1168.71 468.223,1171.71 468.809,1174.51 469.396,1175.87 469.982,1177.19 470.569,1180.1 471.155,1179.64 471.742,1182.48 472.328,1185.41 472.914,1188.29 473.501,1193.98 474.087,1196.36 474.674,1196.94 475.26,1200.77 475.846,1202.89 476.433,1203.47 477.019,1206.84 477.606,1211.43 478.192,1216.1 478.778,1219.01 479.365,1218.81 479.951,1224.46 480.538,1225.9 481.124,1225.54 481.711,1226.87 482.297,1227.86 482.883,1229.04 483.47,1234.05 484.056,1238.97 484.643,1242.03 485.229,1242.6 485.815,1243.01 486.402,1239.36 486.988,1239.66 487.575,1242.96 488.161,1238.07 488.748,1238.69 489.334,1238.17 489.92,1237.81 490.507,1239.65 491.093,1237.63 491.68,1237.09 492.266,1237.77 492.852,1236.08 493.439,1236.95 494.025,1239.21 494.612,1239.98 495.198,1242.1 495.784,1242.81 496.371,1244.78 496.957,1243.85 497.544,1244.18 498.13,1243.19 498.717,1243.85 499.303,1244.5 499.889,1241.01 500.476,1240.63 501.062,1239.86 501.649,1239.53 502.235,1239.03 502.821,1242.42 503.408,1244.4 503.994,1243.93 504.581,1243.23 505.167,1243.91 505.753,1244.69 506.34,1242.4 506.926,1240.7 507.513,1238.69 508.099,1240.69 508.686,1241.35 509.272,1238.2 509.858,1235.29 510.445,1232.84 511.031,1235.18 511.618,1236.54 512.204,1236.39 512.79,1237.44 513.377,1238.52 513.963,1238.18 514.55,1239.35 515.136,1241.31 515.722,1242.14 516.309,1243 516.895,1243.59 517.482,1242.95 518.068,1244.88 518.655,1246.57 519.241,1244.73 519.827,1246.43 520.414,1245.65 521,1244.95 521.587,1245.57 522.173,1245.96 522.759,1246.26 523.346,1248.12 523.932,1247.37 524.519,1248.07 525.105,1249.46 525.691,1249.43 526.278,1248.61 526.864,1249.95 527.451,1250.53 528.037,1247.04 528.624,1250.03 529.21,1250.24 529.796,1249.47 530.383,1248.35 530.969,1245.12 531.556,1243.01 532.142,1242.44 532.728,1241.81 533.315,1242.51 533.901,1244.38 534.488,1244.9 535.074,1244.4 535.661,1244.98 536.247,1245.52 536.833,1242.45 537.42,1240.68 538.006,1241.71 538.593,1241.14 539.179,1240.76 539.765,1241.27 540.352,1243.26 540.938,1242.56 541.525,1245.84 542.111,1242.58 542.697,1243.01 543.284,1246.1 543.87,1249.15 544.457,1248.47 545.043,1247.48 545.63,1246.26 546.216,1246.77 546.802,1248.27 547.389,1248.5 547.975,1247.53 548.562,1241.72 549.148,1241.22 549.734,1240.93 550.321,1241.53 550.907,1238.03 551.494,1237.82 552.08,1238.46 552.666,1239.35 553.253,1237.55 553.839,1235.72 554.426,1234.08 555.012,1232.39 555.599,1233.05 556.185,1235.34 556.771,1232.65 557.358,1231 557.944,1229.58 558.531,1232.08 559.117,1233.08 559.703,1235.45 560.29,1233.7 560.876,1233.4 561.463,1235.47 562.049,1235.31 562.635,1235.11 563.222,1234.64 563.808,1235.68 564.395,1235.5 564.981,1235.13 565.568,1236.21 566.154,1236.58 566.74,1237.44 567.327,1237.21 567.913,1236.78 568.5,1237.51 569.086,1240.45 569.672,1238.43 570.259,1237.88 570.845,1237.37 571.432,1233.07 572.018,1234.02 572.605,1235 573.191,1233.2 573.777,1232.74 574.364,1234.77 574.95,1235.43 575.537,1234.93 576.123,1235.81 576.709,1238.01 577.296,1238.73 577.882,1236.84 578.469,1236.37 579.055,1234.59 579.641,1234.33 580.228,1230.28 580.814,1228.98 581.401,1230.16 581.987,1228.71 582.574,1228.61 583.16,1229.72 583.746,1228.33 584.333,1228.32 584.919,1226.77 585.506,1225.49 586.092,1228.16 586.678,1223.18 587.265,1226.98 587.851,1229.38 588.438,1229.36 589.024,1230.4 589.61,1231.04 590.197,1226.79 590.783,1225.58 591.37,1226.68 591.956,1225.44 592.543,1226.61 593.129,1227.91 593.715,1227.54 594.302,1225.06 594.888,1223.71 595.475,1225.02 596.061,1226.21 596.647,1227.36 597.234,1227.15 597.82,1224.6 598.407,1223.46 598.993,1224.71 599.579,1223.4 600.166,1224.71 600.752,1228.37 601.339,1229.57 601.925,1230.56 602.512,1232.73 603.098,1234.88 603.684,1234.46 604.271,1233.89 604.857,1233.42 605.444,1231.81 606.03,1232.66 606.616,1232.42 607.203,1231.97 607.789,1231.68 608.376,1231.51 608.962,1232.36 609.548,1231.89 610.135,1231.71 610.721,1231.16 611.308,1229.5 611.894,1229.23 612.481,1229.07 613.067,1227.78 613.653,1227.51 614.24,1227.52 614.826,1228.52 615.413,1228.14 615.999,1226.75 616.585,1226.54 617.172,1226.26 617.758,1226.26 618.345,1226.11 618.931,1227.22 619.518,1227 620.104,1226.93 620.69,1227.82 621.277,1228.62 621.863,1228.35 622.45,1225.27 623.036,1223.89 623.622,1225.03 624.209,1224.93 624.795,1223.48 625.382,1222.2 625.968,1222.22 626.554,1222.44 627.141,1223.34 627.727,1223.31 628.314,1221.06 628.9,1223.33 629.487,1224.18 630.073,1224.25 630.659,1224.22 631.246,1225.26 631.832,1222.38 632.419,1224.85 633.005,1223.49 633.591,1222.17 634.178,1222.08 634.764,1223.62 635.351,1222.31 635.937,1222.39 636.523,1223.53 637.11,1219.71 637.696,1218.61 638.283,1219.77 638.869,1218.61 639.456,1219.9 640.042,1219.8 640.628,1221.26 641.215,1221.51 641.801,1224.01 642.388,1219.99 642.974,1221.21 643.56,1221.28 644.147,1220.04 644.733,1220.36 645.32,1222.75 645.906,1224.14 646.492,1226.21 647.079,1225.94 647.665,1225.57 648.252,1221.65 648.838,1221.72 649.425,1222.71 650.011,1223.66 650.597,1222.23 651.184,1219.68 651.77,1222.16 652.357,1223.04 652.943,1221.81 653.529,1221.76 654.116,1222.85 654.702,1220.29 655.289,1220.29 655.875,1221.4 656.462,1219.94 657.048,1220.03 657.634,1221 658.221,1221.09 658.807,1221.19 659.394,1223.52 659.98,1223.38 660.566,1224.53 661.153,1225.54 661.739,1225.01 662.326,1223.56 662.912,1225.94 663.498,1223.15 664.085,1224.26 664.671,1223.87 665.258,1224.82 665.844,1224.4 666.431,1225.32 667.017,1225.09 667.603,1225.88 668.19,1225.37 668.776,1225.24 669.363,1226.11 669.949,1229.47 670.535,1230.19 671.122,1234.61 671.708,1228.69 672.295,1229.38 672.881,1230.17 673.467,1227.17 674.054,1226.67 674.64,1223.89 675.227,1223.61 675.813,1223.38 676.4,1221.8 676.986,1222.65 677.572,1221.2 678.159,1219.97 678.745,1220.91 679.332,1220.85 679.918,1219.47 680.504,1220.75 681.091,1223.37 681.677,1221.75 682.264,1222.77 682.85,1225.15 683.436,1223.66 684.023,1223.21 684.609,1220.46 685.196,1220.15 685.782,1219.94 686.369,1221 686.955,1220.81 687.541,1219.49 688.128,1222.15 688.714,1222.06 689.301,1221.93 689.887,1223.12 690.473,1222.75 691.06,1224.87 691.646,1222.13 692.233,1222.04 692.819,1221.46 693.405,1221.23 693.992,1219.86 694.578,1217.13 695.165,1214.73 695.751,1217.44 696.338,1218.52 696.924,1218.27 697.51,1219.38 698.097,1218.04 698.683,1216.61 699.27,1215.33 699.856,1211.89 700.442,1213.53 701.029,1216.18 701.615,1216.42 702.202,1215.28 702.788,1215.42 703.375,1214.47 703.961,1212.43 704.547,1211.62 705.134,1214.38 705.72,1214.45 706.307,1217.06 706.893,1215.93 707.479,1216.24 708.066,1216.27 708.652,1218.96 709.239,1221.43 709.825,1220.12 710.411,1219.93 710.998,1218.67 711.584,1221.24 712.171,1223.79 712.757,1221.1 713.344,1218.87 713.93,1220.1 714.516,1221.12 715.103,1225.93 715.689,1225.59 716.276,1225.35 716.862,1226.02 717.448,1230.74 718.035,1228.77 718.621,1225.64 719.208,1227.6 719.794,1225.69 720.38,1225.04 720.967,1228.33 721.553,1226.53 722.14,1226.13 722.726,1227.02 723.313,1226.66 723.899,1225.1 724.485,1224.69 725.072,1224.29 725.658,1224.06 726.245,1225 726.831,1223.46 727.417,1226.86 728.004,1227.53 728.59,1225.65 729.177,1225.27 729.763,1224.94 730.349,1224.43 730.936,1221.55 731.522,1221.28 732.109,1220.91 732.695,1222.97 733.282,1222.54 733.868,1223.56 734.454,1222.93 735.041,1221.47 735.627,1221.38 736.214,1217.55 736.8,1214.71 737.386,1216.32 737.973,1216.46 738.559,1216.48 739.146,1216.57 739.732,1214.1 740.318,1212.58 740.905,1212.8 741.491,1210.52 742.078,1210.8 742.664,1211.24 743.251,1210.38 743.837,1211.85 744.423,1211.95 745.01,1211.02 745.596,1208.71 746.183,1208.89 746.769,1207.95 747.355,1209.58 747.942,1211.22 748.528,1210.18 749.115,1210.57 749.701,1210.69 750.288,1212.25 750.874,1211.25 751.46,1208.78 752.047,1208.9 752.633,1209.14 753.22,1209.58 753.806,1214.68 754.392,1213.37 754.979,1215.1 755.565,1214.14 756.152,1212.98 756.738,1213.37 757.324,1208.54 757.911,1207.97 758.497,1209.75 759.084,1210.21 759.67,1214.43 760.257,1210.75 760.843,1212.33 761.429,1211.36 762.016,1211.71 762.602,1213.27 763.189,1216.24 763.775,1221.22 764.361,1221.35 764.948,1218.71 765.534,1215.9 766.121,1213.48 766.707,1214.78 767.293,1216.14 767.88,1214.99 768.466,1218.75 769.053,1215.83 769.639,1214.69 770.226,1217.17 770.812,1217.15 771.398,1217.04 771.985,1217.18 772.571,1217.25 773.158,1217.28 773.744,1218.3 774.33,1217 774.917,1216.64 775.503,1215.1 776.09,1212.65 776.676,1212.67 777.262,1213.98 777.849,1215.59 778.435,1215.66 779.022,1215.74 779.608,1218.1 780.195,1219.41 780.781,1216.58 781.367,1216.53 781.954,1216.52 782.54,1218.14 783.127,1216.78 783.713,1214.42 784.299,1214.56 784.886,1214.8 785.472,1216.04 786.059,1214.78 786.645,1214.69 787.232,1215.14 787.818,1216.3 788.404,1217.68 788.991,1220.05 789.577,1221.1 790.164,1220.91 790.75,1220.58 791.336,1220.54 791.923,1220.22 792.509,1220.13 793.096,1217.48 793.682,1217.28 794.268,1215.92 794.855,1218.35 795.441,1218.2 796.028,1215.69 796.614,1215.57 797.201,1218.04 797.787,1219.21 798.373,1218.89 798.96,1217.41 799.546,1218.55 800.133,1217.16 800.719,1218.2 801.305,1219.23 801.892,1220.25 802.478,1220.11 803.065,1219.89 803.651,1221.09 804.237,1220.64 804.824,1218.9 805.41,1219.95 805.997,1220.98 806.583,1223.02 807.17,1223.95 807.756,1218.62 808.342,1220.82 808.929,1219.41 809.515,1221.66 810.102,1221.24 810.688,1223.16 811.274,1220.23 811.861,1218.64 812.447,1218.31 813.034,1218.21 813.62,1219.27 814.206,1220.17 814.793,1218.78 815.379,1218.47 815.966,1219.78 816.552,1219.77 817.139,1217.03 817.725,1216.98 818.311,1216.69 818.898,1218.95 819.484,1218.89 820.071,1218.87 820.657,1218.72 821.243,1219.61 821.83,1219.57 822.416,1220.39 823.003,1220.35 823.589,1220.47 824.175,1220.27 824.762,1220.1 825.348,1221.14 825.935,1221.88 826.521,1218.96 827.108,1221.2 827.694,1219.73 828.28,1216.92 828.867,1218.23 829.453,1217.85 830.04,1217.86 830.626,1217.72 831.212,1217.58 831.799,1218.36 832.385,1218.27 832.972,1218.13 833.558,1219.23 834.145,1219.12 834.731,1221.25 835.317,1220.7 835.904,1220.31 836.49,1218.56 837.077,1219.39 837.663,1219.17 838.249,1220.01 838.836,1217.19 839.422,1215.81 840.009,1213.08 840.595,1214.33 841.181,1215.56 841.768,1213.32 842.354,1215.97 842.941,1212.24 843.527,1213.69 844.114,1216.14 844.7,1213.47 845.286,1216.11 845.873,1215.95 846.459,1216.08 847.046,1214.79 847.632,1214.79 848.218,1213.41 848.805,1213.42 849.391,1213.58 849.978,1213.85 850.564,1212.5 851.15,1211.17 851.737,1215.27 852.323,1212.27 852.91,1212.52 853.496,1215.4 854.083,1215.17 854.669,1216.22 855.255,1217.4 855.842,1214.92 856.428,1213.59 857.015,1214.88 857.601,1217.3 858.187,1217.12 858.774,1213.09 859.36,1210.79 859.947,1213.53 860.533,1215.07 861.119,1216.08 861.706,1217.16 862.292,1216.63 862.879,1216.43 863.465,1215.21 864.052,1214.94 864.638,1213.96 865.224,1214.01 865.811,1214.26 866.397,1214.14 866.984,1215.52 867.57,1214.26 868.156,1215.66 868.743,1215.65 869.329,1216.44 869.916,1216.33 870.502,1217.32 871.089,1218.12 871.675,1218.83 872.261,1218.78 872.848,1221.22 873.434,1223.16 874.021,1222.77 874.607,1222.47 875.193,1220.84 875.78,1223.07 876.366,1221.38 876.953,1221.13 877.539,1220.68 878.125,1220.12 878.712,1219.65 879.298,1219.31 879.885,1219.11 880.471,1215.14 881.058,1216.28 881.644,1213.57 882.23,1217.02 882.817,1216.93 883.403,1216.61 883.99,1216.33 884.576,1217.22 885.162,1217.28 885.749,1215.82 886.335,1215.79 886.922,1215.73 887.508,1213.45 888.094,1214.54 888.681,1213.33 889.267,1212.03 889.854,1209.64 890.44,1208.89 891.027,1210.16 891.613,1209.05 892.199,1209.58 892.786,1211.13 893.372,1211.31 893.959,1214.8 894.545,1213.51 895.131,1214.84 895.718,1215.64 896.304,1213.08 896.891,1212.94 897.477,1214.25 898.063,1211.82 898.65,1212.05 899.236,1214.81 899.823,1214.6 900.409,1213.5 900.996,1213.6 901.582,1212.45 902.168,1213.61 902.755,1213.89 903.341,1211.46 903.928,1211.5 904.514,1211.48 905.1,1211.89 905.687,1214.67 906.273,1212.28 906.86,1212.37 907.446,1211.15 908.032,1210.17 908.619,1210.38 909.205,1209.34 909.792,1212.03 910.378,1212.09 910.965,1213.47 911.551,1215.82 912.137,1213.29 912.724,1211.19 913.31,1210.17 913.897,1210.42 914.483,1210.75 915.069,1208.79 915.656,1206.7 916.242,1205.92 916.829,1207.57 917.415,1205.44 918.002,1207.42 918.588,1206.62 919.174,1209.54 919.761,1211.09 920.347,1211.19 920.934,1212.6 921.52,1212.81 922.106,1211.85 922.693,1210.62 923.279,1210.66 923.866,1210.78 924.452,1212.13 925.038,1214.85 925.625,1214.99 926.211,1219.77 926.798,1215.82 927.384,1216.84 927.971,1215.36 928.557,1216.38 929.143,1217.57 929.73,1217.49 930.316,1216.06 930.903,1217.27 931.489,1218.27 932.075,1215.55 932.662,1216.31 933.248,1214.8 933.835,1212.25 934.421,1211.99 935.007,1212.01 935.594,1214.67 936.18,1213.26 936.767,1215.79 937.353,1219.26 937.94,1216.76 938.526,1216.94 939.112,1215.79 939.699,1216.88 940.285,1216.66 940.872,1215.3 941.458,1215.28 942.044,1215.29 942.631,1215.47 943.217,1212.93 943.804,1213.06 944.39,1213.15 944.976,1213.32 945.563,1213.2 946.149,1211.76 946.736,1213.11 947.322,1214.43 947.909,1213.35 948.495,1215.9 949.081,1216.87 949.668,1216.67 950.254,1218.8 950.841,1219.48 951.427,1216.63 952.013,1220.21 952.6,1219.95 953.186,1218.47 953.773,1218.06 954.359,1220.3 954.945,1219.77 955.532,1219.58 956.118,1216.88 956.705,1215.46 957.291,1214.16 957.878,1214.46 958.464,1215.54 959.05,1217.84 959.637,1214.04 960.223,1215.26 960.81,1215.21 961.396,1218.81 961.982,1217.27 962.569,1219.62 963.155,1219.37 963.742,1219.98 964.328,1218.73 964.915,1220.87 965.501,1220.47 966.087,1221.35 966.674,1224.74 967.26,1223.07 967.847,1222.55 968.433,1223.5 969.019,1223.13 969.606,1221.49 970.192,1219.75 970.779,1219.76 971.365,1220.6 971.951,1219.21 972.538,1220.09 973.124,1218.61 973.711,1219.67 974.297,1220.44 974.884,1217.45 975.47,1219.59 976.056,1217.01 976.643,1215.91 977.229,1215.94 977.816,1217.35 978.402,1216.11 978.988,1216.14 979.575,1214.66 980.161,1209.57 980.748,1211.11 981.334,1211.42 981.92,1210.29 982.507,1214.1 983.093,1216.49 983.68,1213.98 984.266,1211.55 984.853,1211.74 985.439,1212.94 986.025,1211.77 986.612,1210.52 987.198,1208.27 987.785,1205.91 988.371,1205.09 988.957,1207.73 989.544,1207.85 990.13,1204.4 990.717,1203.33 991.303,1205.36 991.889,1204.64 992.476,1207.52 993.062,1207.93 993.649,1207.15 994.235,1206.35 994.822,1202.79 995.408,1203.18 995.994,1202.66 996.581,1202.9 997.167,1204.46 997.754,1203.75 998.34,1201.9 998.926,1202.78 999.513,1204.74 1000.1,1206.4 1000.69,1206.9 1001.27,1206.09 1001.86,1210.21 1002.44,1209.19 1003.03,1210.31 1003.62,1210.61 1004.2,1210.88 1004.79,1209.65 1005.38,1209.9 1005.96,1207.65 1006.55,1209.08 1007.14,1208.04 1007.72,1209.77 1008.31,1211.05 1008.9,1213.65 1009.48,1212.51 1010.07,1213.85 1010.65,1213.69 1011.24,1214.95 1011.83,1212.49 1012.41,1209.84 1013,1211.45 1013.59,1210.44 1014.17,1210.61 1014.76,1208.37 1015.35,1207.61 1015.93,1210.5 1016.52,1211.18 1017.11,1210.02 1017.69,1216.24 1018.28,1216.08 1018.86,1215.97 1019.45,1218.35 1020.04,1216.97 1020.62,1216.88 1021.21,1217.78 1021.8,1217.67 1022.38,1219.73 1022.97,1220.57 1023.56,1217.38 1024.14,1215.88 1024.73,1214.4 1025.32,1211.74 1025.9,1211.69 1026.49,1212.92 1027.07,1212.93 1027.66,1213.06 1028.25,1212.07 1028.83,1213.36 1029.42,1214.81 1030.01,1214.64 1030.59,1217.01 1031.18,1215.42 1031.77,1217.81 1032.35,1217.92 1032.94,1218.68 1033.52,1219.59 1034.11,1222.75 1034.7,1224.44 1035.28,1225.22 1035.87,1223.29 1036.46,1222.7 1037.04,1219.82 1037.63,1218.09 1038.22,1220.25 1038.8,1219.76 1039.39,1219.29 1039.98,1218.97 1040.56,1218.66 1041.15,1218.24 1041.73,1218.12 1042.32,1216.62 1042.91,1216.31 1043.49,1217.41 1044.08,1216.06 1044.67,1213.31 1045.25,1215.81 1045.84,1218.08 1046.43,1219.03 1047.01,1218.63 1047.6,1219.36 1048.19,1216.62 1048.77,1215.49 1049.36,1214.31 1049.94,1213.12 1050.53,1212.15 1051.12,1212.38 1051.7,1210.13 1052.29,1211.52 1052.88,1212.62 1053.46,1212.47 1054.05,1213.79 1054.64,1212.37 1055.22,1208.93 1055.81,1209.11 1056.39,1206.94 1056.98,1208.44 1057.57,1207.37 1058.15,1208.03 1058.74,1210.61 1059.33,1210.62 1059.91,1210.62 1060.5,1210.26 1061.09,1212.95 1061.67,1212.85 1062.26,1213.93 1062.85,1213.93 1063.43,1212.68 1064.02,1212.88 1064.6,1215.51 1065.19,1216.5 1065.78,1217.44 1066.36,1216.93 1066.95,1215.43 1067.54,1216.67 1068.12,1217.96 1068.71,1216.41 1069.3,1214.83 1069.88,1214.7 1070.47,1213.27 1071.06,1212.31 1071.64,1211.19 1072.23,1206.29 1072.81,1205.54 1073.4,1208.37 1073.99,1206.24 1074.57,1206.42 1075.16,1205.69 1075.75,1206.12 1076.33,1207.53 1076.92,1207.75 1077.51,1206.77 1078.09,1209.6 1078.68,1213.49 1079.26,1214.73 1079.85,1215.77 1080.44,1216.55 1081.02,1216.38 1081.61,1219.72 1082.2,1218.41 1082.78,1220.76 1083.37,1221.76 1083.96,1221.43 1084.54,1221.1 1085.13,1220.82 1085.72,1220.54 1086.3,1218.98 1086.89,1218.63 1087.47,1214.62 1088.06,1214.58 1088.65,1215.83 1089.23,1218.04 1089.82,1220.29 1090.41,1218.64 1090.99,1217 1091.58,1216.85 1092.17,1217.96 1092.75,1216.37 1093.34,1214.94 1093.93,1212.46 1094.51,1212.35 1095.1,1209.88 1095.68,1211.2 1096.27,1212.6 1096.86,1213.96 1097.44,1212.76 1098.03,1215.33 1098.62,1215.03 1099.2,1210.1 1099.79,1208.78 1100.38,1205 1100.96,1206.72 1101.55,1208.44 1102.14,1209.88 1102.72,1208.75 1103.31,1210.26 1103.89,1209.07 1104.48,1208.09 1105.07,1209.4 1105.65,1205.99 1106.24,1207.49 1106.83,1207.71 1107.41,1209.32 1108,1209.64 1108.59,1210.93 1109.17,1213.56 1109.76,1213.51 1110.34,1214.72 1110.93,1215.88 1111.52,1215.9 1112.1,1215.79 1112.69,1219.22 1113.28,1218.77 1113.86,1218.28 1114.45,1219.36 1115.04,1219.14 1115.62,1218.82 1116.21,1218.69 1116.8,1219.46 1117.38,1218.04 1117.97,1217.73 1118.55,1216.11 1119.14,1216.89 1119.73,1216.75 1120.31,1218.03 1120.9,1217.9 1121.49,1216.55 1122.07,1216.3 1122.66,1214.87 1123.25,1212.23 1123.83,1210.85 1124.42,1213.33 1125.01,1214.57 1125.59,1214.36 1126.18,1213.15 1126.76,1214.2 1127.35,1211.35 1127.94,1212.55 1128.52,1212.69 1129.11,1211.4 1129.7,1207.77 1130.28,1205.59 1130.87,1206.16 1131.46,1206.8 1132.04,1206.95 1132.63,1207.06 1133.21,1207.4 1133.8,1205.1 1134.39,1204.08 1134.97,1202.01 1135.56,1205.37 1136.15,1204.7 1136.73,1206.36 1137.32,1205.38 1137.91,1207.28 1138.49,1207.7 1139.08,1205.55 1139.67,1206.03 1140.25,1206.48 1140.84,1206.91 1141.42,1207.27 1142.01,1207.59 1142.6,1207.92 1143.18,1208.3 1143.77,1212.22 1144.36,1213.63 1144.94,1214.54 1145.53,1215.67 1146.12,1215.47 1146.7,1216.78 1147.29,1216.41 1147.88,1215.27 1148.46,1214.99 1149.05,1211.03 1149.63,1211.1 1150.22,1209.86 1150.81,1211.33 1151.39,1214.98 1151.98,1213.77 1152.57,1212.36 1153.15,1213.42 1153.74,1209.52 1154.33,1211.99 1154.91,1213.07 1155.5,1214.45 1156.09,1214.11 1156.67,1215.21 1157.26,1215.15 1157.84,1215.1 1158.43,1217.25 1159.02,1214.93 1159.6,1213.65 1160.19,1214.69 1160.78,1213.21 1161.36,1211.8 1161.95,1209.3 1162.54,1208.07 1163.12,1209.79 1163.71,1208.28 1164.29,1208.49 1164.88,1209.93 1165.47,1210.21 1166.05,1207.83 1166.64,1207.02 1167.23,1208.44 1167.81,1207.38 1168.4,1210.38 1168.99,1209.03 1169.57,1209.19 1170.16,1205.82 1170.75,1206.29 1171.33,1209.04 1171.92,1211.82 1172.5,1211.97 1173.09,1212.08 1173.68,1213.5 1174.26,1214.86 1174.85,1217.15 1175.44,1215.85 1176.02,1217.98 1176.61,1220.16 1177.2,1219.74 1177.78,1220.8 1178.37,1220.33 1178.96,1221.45 1179.54,1221.21 1180.13,1215.64 1180.71,1214.23 1181.3,1209.55 1181.89,1209.94 1182.47,1210.1 1183.06,1210.44 1183.65,1210.29 1184.23,1209.3 1184.82,1209.47 1185.41,1208.5 1185.99,1207.53 1186.58,1207.78 1187.16,1208.91 1187.75,1207.77 1188.34,1209.47 1188.92,1212.13 1189.51,1213.4 1190.1,1214.7 1190.68,1217.07 1191.27,1216.97 1191.86,1215.64 1192.44,1212.91 1193.03,1212.96 1193.62,1213.14 1194.2,1213.18 1194.79,1214.58 1195.37,1213.44 1195.96,1214.88 1196.55,1214.67 1197.13,1214.58 1197.72,1215.9 1198.31,1215.8 1198.89,1214.54 1199.48,1211.87 1200.07,1209.39 1200.65,1210.61 1201.24,1210.9 1201.83,1211.08 1202.41,1213.79 1203,1213.56 1203.58,1213.84 1204.17,1214.03 1204.76,1212.59 1205.34,1212.6 1205.93,1214.83 1206.52,1217.14 1207.1,1216.65 1207.69,1217.41 1208.28,1217.37 1208.86,1218.48 1209.45,1218.42 1210.03,1217.79 1210.62,1216.28 1211.21,1216.21 1211.79,1210.87 1212.38,1211.09 1212.97,1210.12 1213.55,1208.92 1214.14,1206.46 1214.73,1206.66 1215.31,1208.11 1215.9,1205.69 1216.49,1206.36 1217.07,1208.09 1217.66,1205.85 1218.24,1202.4 1218.83,1202.99 1219.42,1204.83 1220,1205.46 1220.59,1204.61 1221.18,1208.96 1221.76,1207.83 1222.35,1209.41 1222.94,1214.49 1223.52,1215.64 1224.11,1214.09 1224.7,1214.22 1225.28,1213 1225.87,1211.88 1226.45,1213.27 1227.04,1209.55 1227.63,1209.69 1228.21,1208.61 1228.8,1206.36 1229.39,1207.93 1229.97,1209.29 1230.56,1210.6 1231.15,1210.79 1231.73,1213.38 1232.32,1214.51 1232.91,1215.76 1233.49,1215.35 1234.08,1215.25 1234.66,1215.41 1235.25,1216.46 1235.84,1215.26 1236.42,1214.15 1237.01,1215.15 1237.6,1213.8 1238.18,1215.18 1238.77,1216.3 1239.36,1216.03 1239.94,1213.68 1240.53,1214.64 1241.11,1214.5 1241.7,1214.67 1242.29,1216.61 1242.87,1213.75 1243.46,1213.67 1244.05,1214.94 1244.63,1214.93 1245.22,1213.86 1245.81,1213.53 1246.39,1214.71 1246.98,1214.64 1247.57,1214.56 1248.15,1214.32 1248.74,1214.37 1249.32,1214.42 1249.91,1216.72 1250.5,1219.15 1251.08,1219.8 1251.67,1219.48 1252.26,1219.25 1252.84,1217.36 1253.43,1217.07 1254.02,1215.7 1254.6,1215.5 1255.19,1214.16 1255.78,1215.57 1256.36,1215.33 1256.95,1214.21 1257.53,1211.77 1258.12,1213.15 1258.71,1213.18 1259.29,1213.25 1259.88,1209.68 1260.47,1207.41 1261.05,1207.58 1261.64,1208.09 1262.23,1210.89 1262.81,1211.23 1263.4,1208.97 1263.98,1209.06 1264.57,1208.12 1265.16,1209.3 1265.74,1209.31 1266.33,1209.59 1266.92,1209.67 1267.5,1208.52 1268.09,1208.59 1268.68,1211.06 1269.26,1212.46 1269.85,1213.93 1270.44,1216.42 1271.02,1215.15 1271.61,1213.77 1272.19,1213.53 1272.78,1212.39 1273.37,1214.72 1273.95,1214.41 1274.54,1216.6 1275.13,1211.07 1275.71,1211.35 1276.3,1211.63 1276.89,1211.84 1277.47,1211.89 1278.06,1213.13 1278.65,1211.91 1279.23,1210.6 1279.82,1213.05 1280.4,1211.69 1280.99,1207.98 1281.58,1209.92 1282.16,1207.57 1282.75,1206.56 1283.34,1206.74 1283.92,1205.77 1284.51,1206.12 1285.1,1208.85 1285.68,1210.23 1286.27,1209.03 1286.86,1208.12 1287.44,1209.59 1288.03,1207.21 1288.61,1207.4 1289.2,1206.74 1289.79,1205.9 1290.37,1207.74 1290.96,1209.13 1291.55,1208.03 1292.13,1209.64 1292.72,1211.08 1293.31,1213.79 1293.89,1216.34 1294.48,1218.66 1295.06,1218.17 1295.65,1217.62 1296.24,1217.31 1296.82,1218.49 1297.41,1216.84 1298,1217.68 1298.58,1217.37 1299.17,1217.23 1299.76,1215.95 1300.34,1214.8 1300.93,1213.46 1301.52,1213.68 1302.1,1213.88 1302.69,1213.84 1303.27,1215.12 1303.86,1215.16 1304.45,1213.75 1305.03,1212.58 1305.62,1214.07 1306.21,1216.31 1306.79,1217.42 1307.38,1217.2 1307.97,1217 1308.55,1217.81 1309.14,1219.98 1309.73,1218.2 1310.31,1217.82 1310.9,1213.57 1311.48,1214.75 1312.07,1213.31 1312.66,1213.2 1313.24,1213.22 1313.83,1213.14 1314.42,1212.05 1315,1210.92 1315.59,1210.98 1316.18,1212.21 1316.76,1210.88 1317.35,1211.1 1317.93,1212.38 1318.52,1211.25 1319.11,1211.45 1319.69,1212.71 1320.28,1211.72 1320.87,1211.7 1321.45,1211.85 1322.04,1213.12 1322.63,1216.59 1323.21,1215.16 1323.8,1215.24 1324.39,1212.62 1324.97,1212.56 1325.56,1211.58 1326.14,1211.66 1326.73,1208.33 1327.32,1211.02 1327.9,1211.22 1328.49,1210.26 1329.08,1209.56 1329.66,1212.03 1330.25,1208.13 1330.84,1209.58 1331.42,1209.52 1332.01,1212.13 1332.6,1210.88 1333.18,1210.84 1333.77,1212.15 1334.35,1213.4 1334.94,1213.33 1335.53,1213.19 1336.11,1212.08 1336.7,1217.03 1337.29,1216 1337.87,1215.94 1338.46,1216.04 1339.05,1215.84 1339.63,1217.95 1340.22,1216.4 1340.8,1215.11 1341.39,1213.89 1341.98,1213.91 1342.56,1213.73 1343.15,1213.63 1343.74,1213.57 1344.32,1214.86 1344.91,1214.83 1345.5,1214.97 1346.08,1213.41 1346.67,1212.27 1347.26,1213.6 1347.84,1213.5 1348.43,1213.65 1349.01,1213.59 1349.6,1217.16 1350.19,1216.75 1350.77,1216.59 1351.36,1213.86 1351.95,1213.93 1352.53,1217.51 1353.12,1221.21 1353.71,1221.08 1354.29,1220.78 1354.88,1219.39 1355.47,1217.64 1356.05,1216.2 1356.64,1215.74 1357.22,1216.88 1357.81,1216.5 1358.4,1216.35 1358.98,1214.67 1359.57,1213.25 1360.16,1214.35 1360.74,1211.62 1361.33,1213.03 1361.92,1213.06 1362.5,1212.97 1363.09,1213.23 1363.68,1210.66 1364.26,1211.66 1364.85,1211.71 1365.43,1215.3 1366.02,1212.83 1366.61,1210.2 1367.19,1211.67 1367.78,1211.92 1368.37,1213.07 1368.95,1214.45 1369.54,1215.58 1370.13,1216.69 1370.71,1217.64 1371.3,1215.15 1371.88,1213.71 1372.47,1212.53 1373.06,1211.45 1373.64,1212.79 1374.23,1212.62 1374.82,1211.5 1375.4,1211.59 1375.99,1214.27 1376.58,1213.1 1377.16,1214.24 1377.75,1216.75 1378.34,1219.01 1378.92,1218.6 1379.51,1215.86 1380.09,1214.32 1380.68,1214.41 1381.27,1214.28 1381.85,1215.39 1382.44,1216.41 1383.03,1220.96 1383.61,1218.93 1384.2,1217.54 1384.79,1218.24 1385.37,1214.17 1385.96,1211.53 1386.55,1211.62 1387.13,1211.49 1387.72,1210.2 1388.3,1212.58 1388.89,1211.16 1389.48,1211.12 1390.06,1211.31 1390.65,1211.6 1391.24,1212.87 1391.82,1210.41 1392.41,1210.79 1393,1208.37 1393.58,1208.49 1394.17,1211.14 1394.75,1208.94 1395.34,1211.41 1395.93,1211.3 1396.51,1210.18 1397.1,1214.23 1397.69,1214.2 1398.27,1216.58 1398.86,1216.43 1399.45,1218.78 1400.03,1215.91 1400.62,1216.98 1401.21,1215.4 1401.79,1216.57 1402.38,1215.25 1402.96,1217.38 1403.55,1217.32 1404.14,1216.99 1404.72,1216.64 1405.31,1216.46 1405.9,1218.82 1406.48,1219.58 1407.07,1221.73 1407.66,1218.44 1408.24,1217.12 1408.83,1214.52 1409.42,1214.42 1410,1212.85 1410.59,1214.22 1411.17,1215.28 1411.76,1214.09 1412.35,1212.61 1412.93,1214.98 1413.52,1213.82 1414.11,1212.55 1414.69,1211.27 1415.28,1212.71 1415.87,1212.91 1416.45,1211.65 1417.04,1209.5 1417.63,1210.93 1418.21,1211.39 1418.8,1211.18 1419.38,1213.85 1419.97,1211.36 1420.56,1211.43 1421.14,1211.61 1421.73,1214.06 1422.32,1214.92 1422.9,1216 1423.49,1216.88 1424.08,1217.95 1424.66,1215.12 1425.25,1216.06 1425.83,1215.95 1426.42,1215.62 1427.01,1214.02 1427.59,1211.35 1428.18,1212.68 1428.77,1212.75 1429.35,1212.72 1429.94,1211.62 1430.53,1211.65 1431.11,1211.55 1431.7,1212.59 1432.29,1211.34 1432.87,1210.06 1433.46,1210.32 1434.04,1211.84 1434.63,1209.52 1435.22,1208.4 1435.8,1213.85 1436.39,1216.34 1436.98,1216.05 1437.56,1215.85 1438.15,1215.55 1438.74,1214.1 1439.32,1216.35 1439.91,1218.26 1440.5,1217.86 1441.08,1212.82 1441.67,1212.76 1442.25,1213.9 1442.84,1214.03 1443.43,1216.27 1444.01,1213.7 1444.6,1212.22 1445.19,1212.31 1445.77,1212.47 1446.36,1210.06 1446.95,1207.65 1447.53,1208.93 1448.12,1210.2 1448.7,1207.87 1449.29,1205.8 1449.88,1206.31 1450.46,1207.88 1451.05,1208.33 1451.64,1211.14 1452.22,1211.26 1452.81,1209.94 1453.4,1211.2 1453.98,1214.92 1454.57,1214.95 1455.16,1211.3 1455.74,1212.69 1456.33,1212.62 1456.91,1211.29 1457.5,1209.83 1458.09,1207.48 1458.67,1207.54 1459.26,1206.64 1459.85,1208.33 1460.43,1207.37 1461.02,1207.53 1461.61,1209.17 1462.19,1209.33 1462.78,1210.7 1463.37,1209.53 1463.95,1211.12 1464.54,1209.73 1465.12,1209.96 1465.71,1210.33 1466.3,1209.03 1466.88,1211.57 1467.47,1211.67 1468.06,1212.95 1468.64,1212.83 1469.23,1210.68 1469.82,1212 1470.4,1210.65 1470.99,1211.58 1471.57,1212.74 1472.16,1210.48 1472.75,1211.81 1473.33,1211.85 1473.92,1213.06 1474.51,1210.76 1475.09,1208.52 1475.68,1205.21 1476.27,1205.58 1476.85,1204.59 1477.44,1206.47 1478.03,1206.77 1478.61,1207.14 1479.2,1208.95 1479.78,1205.6 1480.37,1205.89 1480.96,1206.36 1481.54,1206.86 1482.13,1207.29 1482.72,1207.66 1483.3,1209.04 1483.89,1209.44 1484.48,1208.1 1485.06,1209.61 1485.65,1209.87 1486.24,1209.84 1486.82,1209.85 1487.41,1209.02 1487.99,1210.51 1488.58,1213.11 1489.17,1214.16 1489.75,1214.17 1490.34,1214.14 1490.93,1214.21 1491.51,1212.94 1492.1,1212.87 1492.69,1214.2 1493.27,1212.96 1493.86,1214.25 1494.45,1213.05 1495.03,1211.81 1495.62,1210.82 1496.2,1208.54 1496.79,1211.22 1497.38,1212.43 1497.96,1211.31 1498.55,1212.73 1499.14,1212.5 1499.72,1211.63 1500.31,1212.89 1500.9,1213.03 1501.48,1214.59 1502.07,1214.53 1502.65,1214.57 1503.24,1215.88 1503.83,1214.7 1504.41,1217.06 1505,1213.15 1505.59,1215.39 1506.17,1214.26 1506.76,1213.06 1507.35,1215.32 1507.93,1215.22 1508.52,1214.01 1509.11,1215.35 1509.69,1216.43 1510.28,1217.73 1510.86,1218.67 1511.45,1217 1512.04,1215.62 1512.62,1216.65 1513.21,1216.27 1513.8,1214.95 1514.38,1213.83 1514.97,1214.1 1515.56,1214.01 1516.14,1216.44 1516.73,1214.89 1517.32,1213.57 1517.9,1213.93 1518.49,1213.56 1519.07,1212.31 1519.66,1210.95 1520.25,1209.77 1520.83,1207.53 1521.42,1209.06 1522.01,1211.68 1522.59,1211.96 1523.18,1214.4 1523.77,1214.36 1524.35,1215.7 1524.94,1216.91 1525.52,1216.79 1526.11,1216.7 1526.7,1216.47 1527.28,1216.13 1527.87,1213.34 1528.46,1214.57 1529.04,1214.32 1529.63,1215.49 1530.22,1217.84 1530.8,1218.46 1531.39,1219.49 1531.98,1220.37 1532.56,1221.27 1533.15,1218.33 1533.73,1216.46 1534.32,1216.18 1534.91,1216 1535.49,1213.14 1536.08,1211.8 1536.67,1211.89 1537.25,1211.99 1537.84,1214.7 1538.43,1214.84 1539.01,1218.75 1539.6,1218.39 1540.19,1216.81 1540.77,1217.83 1541.36,1216.1 1541.94,1215.96 1542.53,1216.7 1543.12,1216.54 1543.7,1215.01 1544.29,1214.66 1544.88,1214.7 1545.46,1216.96 1546.05,1216.68 1546.64,1217.49 1547.22,1218.36 1547.81,1215.43 1548.4,1215.49 1548.98,1217.73 1549.57,1214.78 1550.15,1215.69 1550.74,1215.5 1551.33,1215.27 1551.91,1214.68 1552.5,1213.37 1553.09,1212.18 1553.67,1210.79 1554.26,1209.34 1554.85,1212.05 1555.43,1211.09 1556.02,1210.07 1556.6,1210.14 1557.19,1211.5 1557.78,1213.97 1558.36,1215.22 1558.95,1217.61 1559.54,1219.56 1560.12,1221.76 1560.71,1221.33 1561.3,1222.06 1561.88,1219.16 1562.47,1215.01 1563.06,1214.99 1563.64,1215.14 1564.23,1214.95 1564.81,1213.82 1565.4,1212.47 1565.99,1210.2 1566.57,1208.87 1567.16,1209.16 1567.75,1208.96 1568.33,1210.42 1568.92,1213.11 1569.51,1212.79 1570.09,1215.29 1570.68,1215.04 1571.27,1213.59 1571.85,1209.8 1572.44,1212.45 1573.02,1210.01 1573.61,1211.38 1574.2,1212.65 1574.78,1211.28 1575.37,1210.11 1575.96,1209.02 1576.54,1210.44 1577.13,1211.88 1577.72,1209.72 1578.3,1212.53 1578.89,1212.59 1579.47,1211.35 1580.06,1207.85 1580.65,1209.44 1581.23,1208.21 1581.82,1208.51 1582.41,1207.46 1582.99,1206.53 1583.58,1208.24 1584.17,1207.28 1584.75,1206.14 1585.34,1207.87 1585.93,1208.05 1586.51,1208.46 1587.1,1209 1587.68,1209.32 1588.27,1209.5 1588.86,1208.47 1589.44,1210.08 1590.03,1210.08 1590.62,1211.58 1591.2,1211.55 1591.79,1212.97 1592.38,1216.99 1592.96,1215.59 1593.55,1214.22 1594.14,1214.16 1594.72,1214.21 1595.31,1214.27 1595.89,1214.12 1596.48,1211.62 1597.07,1211.67 1597.65,1209.39 1598.24,1208.59 1598.83,1207.88 1599.41,1208.05 1600,1210.81 1600.59,1212.38 1601.17,1214.99 1601.76,1216.3 1602.34,1219.86 1602.93,1217.38 1603.52,1217.04 1604.1,1215.82 1604.69,1215.66 1605.28,1214.5 1605.86,1213.28 1606.45,1214.53 1607.04,1214.4 1607.62,1214.21 1608.21,1213.92 1608.8,1212.55 1609.38,1213.63 1609.97,1213.72 1610.55,1214.96 1611.14,1216.2 1611.73,1219.61 1612.31,1219.38 1612.9,1217.81 1613.49,1217.57 1614.07,1217.39 1614.66,1216.08 1615.25,1214.75 1615.83,1213.47 1616.42,1210.83 1617.01,1208.76 1617.59,1208.8 1618.18,1209.25 1618.76,1213.26 1619.35,1213.26 1619.94,1210.88 1620.52,1210.82 1621.11,1212.13 1621.7,1209.64 1622.28,1207.31 1622.87,1206.36 1623.46,1208.04 1624.04,1208.4 1624.63,1211.15 1625.22,1211.14 1625.8,1212.59 1626.39,1210.22 1626.97,1210.21 1627.56,1211.5 1628.15,1211.48 1628.73,1210.55 1629.32,1210.58 1629.91,1208.35 1630.49,1207.46 1631.08,1207.82 1631.67,1208.3 1632.25,1207.01 1632.84,1211.22 1633.42,1209.98 1634.01,1209.82 1634.6,1206.45 1635.18,1205.71 1635.77,1204.91 1636.36,1205.33 1636.94,1204.48 1637.53,1205.22 1638.12,1207.94 1638.7,1209.21 1639.29,1206.89 1639.88,1207.31 1640.46,1208.9 1641.05,1209.07 1641.63,1208.98 1642.22,1211.82 1642.81,1211.89 1643.39,1210.87 1643.98,1210.86 1644.57,1210.84 1645.15,1213.45 1645.74,1211.06 1646.33,1212.24 1646.91,1213.52 1647.5,1214.86 1648.09,1213.73 1648.67,1211.26 1649.26,1211.42 1649.84,1211.65 1650.43,1212.97 1651.02,1211.77 1651.6,1214.43 1652.19,1213.41 1652.78,1213.52 1653.36,1210.92 1653.95,1209.66 1654.54,1210.97 1655.12,1213.69 1655.71,1212.49 1656.29,1211.47 1656.88,1212.88 1657.47,1214.08 1658.05,1213.89 1658.64,1214.07 1659.23,1213.76 1659.81,1214.79 1660.4,1216.98 1660.99,1214.38 1661.57,1215.38 1662.16,1217.75 1662.75,1222.23 1663.33,1220.45 1663.92,1221.14 1664.5,1224.2 1665.09,1224.83 1665.68,1225.21 1666.26,1225.85 1666.85,1226.46 1667.44,1224.61 1668.02,1226.38 1668.61,1226.88 1669.2,1222.46 1669.78,1219.14 1670.37,1218.79 1670.96,1218.32 1671.54,1216.62 1672.13,1215.09 1672.71,1215.28 1673.3,1211.55 1673.89,1212.89 1674.47,1215.5 1675.06,1214.06 1675.65,1216.26 1676.23,1216.26 1676.82,1214.69 1677.41,1214.52 1677.99,1215.33 1678.58,1217.62 1679.17,1218.66 1679.75,1218.27 1680.34,1218.1 1680.92,1219 1681.51,1218.61 1682.1,1218.03 1682.68,1219.89 1683.27,1219.51 1683.86,1218.09 1684.44,1215.44 1685.03,1215.58 1685.62,1214.14 1686.2,1214.12 1686.79,1211.61 1687.37,1211.94 1687.96,1209.5 1688.55,1208.35 1689.13,1210.93 1689.72,1210.13 1690.31,1209.08 1690.89,1209.46 1691.48,1209.75 1692.07,1211.17 1692.65,1215.15 1693.24,1211.04 1693.83,1210.93 1694.41,1207.34 1695,1207.51 1695.58,1210.24 1696.17,1209.28 1696.76,1208.26 1697.34,1208.47 1697.93,1208.79 1698.52,1207.9 1699.1,1208.5 1699.69,1208.76 1700.28,1207.81 1700.86,1211.44 1701.45,1210.46 1702.04,1212.98 1702.62,1217.85 1703.21,1213.84 1703.79,1212.98 1704.38,1211.87 1704.97,1210.87 1705.55,1210.05 1706.14,1207.74 1706.73,1209.18 1707.31,1210.43 1707.9,1211.88 1708.49,1212.36 1709.07,1214.7 1709.66,1214.76 1710.24,1215.94 1710.83,1214.54 1711.42,1214.39 1712,1217.74 1712.59,1218.76 1713.18,1221.85 1713.76,1221.54 1714.35,1218.95 1714.94,1220.77 1715.52,1221.36 1716.11,1223.4 1716.7,1221.48 1717.28,1219.87 1717.87,1215.93 1718.45,1218.12 1719.04,1215.36 1719.63,1216.4 1720.21,1214.96 1720.8,1213.58 1721.39,1213.64 1721.97,1212.36 1722.56,1213.61 1723.15,1213.43 1723.73,1211.3 1724.32,1211.54 1724.91,1211.72 1725.49,1214.08 1726.08,1212.63 1726.66,1212.74 1727.25,1213.69 1727.84,1214.68 1728.42,1211.12 1729.01,1211.29 1729.6,1210.13 1730.18,1210.27 1730.77,1209.11 1731.36,1208.04 1731.94,1210.8 1732.53,1207.11 1733.11,1208.75 1733.7,1211.44 1734.29,1210.28 1734.87,1211.17 1735.46,1211.2 1736.05,1210.16 1736.63,1209.14 1737.22,1210.71 1737.81,1210.77 1738.39,1212.24 1738.98,1209.88 1739.57,1208.74 1740.15,1210.29 1740.74,1209.25 1741.32,1210.78 1741.91,1209.57 1742.5,1210 1743.08,1208.92 1743.67,1206.74 1744.26,1212.23 1744.84,1209.8 1745.43,1208.68 1746.02,1210.13 1746.6,1209.23 1747.19,1211.97 1747.78,1212.27 1748.36,1212.35 1748.95,1212.43 1749.53,1211.35 1750.12,1211.36 1750.71,1211.39 1751.29,1212.44 1751.88,1211.44 1752.47,1211.51 1753.05,1212.94 1753.64,1214.16 1754.23,1215.26 1754.81,1216.06 1755.4,1215.72 1755.99,1214.42 1756.57,1214.24 1757.16,1213.99 1757.74,1216.44 1758.33,1217.37 1758.92,1218.15 1759.5,1216.74 1760.09,1212.8 1760.68,1212.84 1761.26,1213.85 1761.85,1214.13 1762.44,1213.94 1763.02,1214.08 1763.61,1215.12 1764.19,1216.13 1764.78,1214.68 1765.37,1209.69 1765.95,1209.97 1766.54,1209.86 1767.13,1208.72 1767.71,1210.33 1768.3,1211.98 1768.89,1214.32 1769.47,1214.26 1770.06,1214.3 1770.65,1214.26 1771.23,1215.58 1771.82,1216.71 1772.4,1214.1 1772.99,1212.91 1773.58,1211.78 1774.16,1212.81 1774.75,1214.19 1775.34,1214.14 1775.92,1214.23 1776.51,1212.91 1777.1,1212.63 1777.68,1212.5 1778.27,1211.33 1778.86,1215.28 1779.44,1216.42 1780.03,1218.52 1780.61,1217.18 1781.2,1219.33 1781.79,1216.64 1782.37,1215.16 1782.96,1216.26 1783.55,1216.05 1784.13,1215.74 1784.72,1214.33 1785.31,1216.67 1785.89,1217.88 1786.48,1216.41 1787.06,1215.06 1787.65,1214.87 1788.24,1215.82 1788.82,1211.98 1789.41,1213.26 1790,1214.25 1790.58,1213.08 1791.17,1215.53 1791.76,1216.48 1792.34,1216.2 1792.93,1214.77 1793.52,1214.84 1794.1,1215.08 1794.69,1214.9 1795.27,1213.62 1795.86,1213.8 1796.45,1213.83 1797.03,1217.45 1797.62,1218.32 1798.21,1218.21 1798.79,1216.75 1799.38,1213.93 1799.97,1211.53 1800.55,1211.31 1801.14,1210.15 1801.73,1208.95 1802.31,1204.3 1802.9,1204.61 1803.48,1202.72 1804.07,1202.11 1804.66,1201.36 1805.24,1203.31 1805.83,1202.78 1806.42,1203.31 1807,1203.49 1807.59,1203.93 1808.18,1206.85 1808.76,1205.02 1809.35,1204.57 1809.94,1205.29 1810.52,1206.79 1811.11,1208.37 1811.69,1209.99 1812.28,1211.05 1812.87,1208.8 1813.45,1211.44 1814.04,1212.8 1814.63,1212.81 1815.21,1212.65 1815.8,1214 1816.39,1217.64 1816.97,1217.26 1817.56,1216.92 1818.14,1216.7 1818.73,1217.64 1819.32,1218.78 1819.9,1218.46 1820.49,1215.76 1821.08,1215.59 1821.66,1215.71 1822.25,1214.39 1822.84,1214.2 1823.42,1213.1 1824.01,1215.49 1824.6,1216.84 1825.18,1216.48 1825.77,1216.25 1826.35,1214.97 1826.94,1214.98 1827.53,1214.99 1828.11,1217.13 1828.7,1215.57 1829.29,1213.11 1829.87,1213.15 1830.46,1213 1831.05,1211.91 1831.63,1211.76 1832.22,1212.83 1832.81,1214.1 1833.39,1211.46 1833.98,1210.19 1834.56,1213.84 1835.15,1213.72 1835.74,1214.92 1836.32,1215.98 1836.91,1216.1 1837.5,1218.34 1838.08,1219.14 1838.67,1217.73 1839.26,1217.46 1839.84,1219.92 1840.43,1217.27 1841.01,1217.05 1841.6,1216.86 1842.19,1216.49 1842.77,1217.56 1843.36,1217.19 1843.95,1215.72 1844.53,1215.29 1845.12,1216.38 1845.71,1216.07 1846.29,1215.66 1846.88,1210.5 1847.47,1210.5 1848.05,1210.61 1848.64,1210.6 1849.22,1216.94 1849.81,1216.75 1850.4,1214.08 1850.98,1211.61 1851.57,1211.59 1852.16,1211.38 1852.74,1213.85 1853.33,1213.96 1853.92,1211.44 1854.5,1210.41 1855.09,1208.13 1855.68,1207.36 1856.26,1210.44 1856.85,1208.21 1857.43,1208.55 1858.02,1208.76 1858.61,1208.83 1859.19,1209.12 1859.78,1211.69 1860.37,1211.73 1860.95,1210.51 1861.54,1210.66 1862.13,1209.79 1862.71,1212.62 1863.3,1211.37 1863.88,1212.67 1864.47,1215.37 1865.06,1215.52 1865.64,1213.02 1866.23,1210.53 1866.82,1209.49 1867.4,1206.92 1867.99,1208.41 1868.58,1209.72 1869.16,1209.96 1869.75,1210.37 1870.34,1212.97 1870.92,1211.74 1871.51,1214.11 1872.09,1209.26 1872.68,1208.21 1873.27,1207.45 1873.85,1209.06 1874.44,1211.81 1875.03,1209.44 1875.61,1210.83 1876.2,1210.86 1876.79,1212.47 1877.37,1212.61 1877.96,1209.8 1878.55,1212.52 1879.13,1211.25 1879.72,1212.54 1880.3,1213.95 1880.89,1213.8 1881.48,1215 1882.06,1215.01 1882.65,1216.16 1883.24,1214.81 1883.82,1214.73 1884.41,1213.41 1885,1217.11 1885.58,1219.36 1886.17,1217.83 1886.76,1216.35 1887.34,1216.17 1887.93,1216.01 1888.51,1214.41 1889.1,1214.04 1889.69,1214.1 1890.27,1211.31 1890.86,1211.55 1891.45,1209.33 1892.03,1210.69 1892.62,1208.3 1893.21,1208.48 1893.79,1206.41 1894.38,1208.18 1894.96,1208.41 1895.55,1208.73 1896.14,1212.49 1896.72,1213.67 1897.31,1213.51 1897.9,1211.3 1898.48,1211.52 1899.07,1214.04 1899.66,1216.53 1900.24,1214.97 1900.83,1214.95 1901.42,1216.02 1902,1215.94 1902.59,1218.1 1903.17,1218 1903.76,1219.09 1904.35,1217.87 1904.93,1220 1905.52,1217.21 1906.11,1219.26 1906.69,1218.02 1907.28,1217.72 1907.87,1216.06 1908.45,1215.93 1909.04,1213.2 1909.63,1213.09 1910.21,1213.27 1910.8,1215.97 1911.38,1214.32 1911.97,1212.78 1912.56,1211.59 1913.14,1210.46 1913.73,1211.91 1914.32,1212.98 1914.9,1211.88 1915.49,1208.17 1916.08,1208.42 1916.66,1207.68 1917.25,1207.7 1917.83,1207.74 1918.42,1209.23 1919.01,1206.99 1919.59,1208.75 1920.18,1210.2 1920.77,1211.7 1921.35,1211.81 1921.94,1210.75 1922.53,1210.53 1923.11,1213.04 1923.7,1215.75 1924.29,1214.47 1924.87,1214.42 1925.46,1213.19 1926.04,1213.32 1926.63,1212.25 1927.22,1210.93 1927.8,1212.36 1928.39,1213.49 1928.98,1213.46 1929.56,1212.34 1930.15,1212.16 1930.74,1213.35 1931.32,1211.99 1931.91,1212.12 1932.5,1209.61 1933.08,1209.79 1933.67,1209.83 1934.25,1208.64 1934.84,1210.15 1935.43,1210.33 1936.01,1211.7 1936.6,1212.96 1937.19,1210.49 1937.77,1207.83 1938.36,1209.42 1938.95,1208.52 1939.53,1209.78 1940.12,1213.39 1940.71,1210.89 1941.29,1209.59 1941.88,1208.71 1942.46,1210.08 1943.05,1206.49 1943.64,1206.88 1944.22,1208.46 1944.81,1206.31 1945.4,1207.57 1945.98,1206.53 1946.57,1204.65 1947.16,1208.79 1947.74,1208.91 1948.33,1207.96 1948.91,1209.71 1949.5,1211.22 1950.09,1212.58 1950.67,1211.17 1951.26,1210.14 1951.85,1208.98 1952.43,1208.05 1953.02,1209.61 1953.61,1209.96 1954.19,1206.56 1954.78,1207.04 1955.37,1207.59 1955.95,1208.01 1956.54,1208.49 1957.12,1209.93 1957.71,1213.89 1958.3,1215.19 1958.88,1215.06 1959.47,1214.91 1960.06,1216.01 1960.64,1215.86 1961.23,1217.04 1961.82,1217.85 1962.4,1218.71 1962.99,1219.42 1963.58,1219.14 1964.16,1217.39 1964.75,1217.07 1965.33,1218.03 1965.92,1217.77 1966.51,1217.45 1967.09,1215.96 1967.68,1215.76 1968.27,1214.39 1968.85,1216.99 1969.44,1214.33 1970.03,1214.25 1970.61,1214.28 1971.2,1217.99 1971.78,1216.5 1972.37,1216.53 1972.96,1216.48 1973.54,1213.76 1974.13,1213.56 1974.72,1212.32 1975.3,1213.56 1975.89,1217.17 1976.48,1214.58 1977.06,1213.04 1977.65,1213.14 1978.24,1211.67 1978.82,1212.81 1979.41,1213.99 1979.99,1213.94 1980.58,1214.08 1981.17,1215.24 1981.75,1214.03 1982.34,1214.07 1982.93,1213.58 1983.51,1213.47 1984.1,1213.62 1984.69,1215.16 1985.27,1212.64 1985.86,1212.63 1986.45,1215.07 1987.03,1215.22 1987.62,1215.18 1988.2,1213.9 1988.79,1216.22 1989.38,1212.3 1989.96,1209.98 1990.55,1211.61 1991.14,1214.39 1991.72,1215.47 1992.31,1215.28 1992.9,1215.18 1993.48,1215.26 1994.07,1217.62 1994.65,1219.91 1995.24,1223.43 1995.83,1219.34 1996.41,1220.51 1997,1217.77 1997.59,1218.72 1998.17,1213.64 1998.76,1212.55 1999.35,1211.44 1999.93,1212.29 2000.52,1212.04 2001.11,1209.62 2001.69,1209.71 2002.28,1208.61 2002.86,1209.79 2003.45,1213.73 2004.04,1211.27 2004.62,1214.98 2005.21,1213.55 2005.8,1210.72 2006.38,1208.37 2006.97,1206.13 2007.56,1205.05 2008.14,1206.8 2008.73,1205.87 2009.32,1208.7 2009.9,1207.63 2010.49,1207.74 2011.07,1210.43 2011.66,1214.58 2012.25,1213.05 2012.83,1216.57 2013.42,1215.09 2014.01,1212.79 2014.59,1215.36 2015.18,1214.03 2015.77,1214.04 2016.35,1213.03 2016.94,1212.92 2017.53,1211.61 2018.11,1212.75 2018.7,1212.64 2019.28,1212.71 2019.87,1215.18 2020.46,1216.31 2021.04,1215.9 2021.63,1215.84 2022.22,1214.51 2022.8,1212.39 2023.39,1215.1 2023.98,1213.89 2024.56,1212.83 2025.15,1210.28 2025.73,1211.59 2026.32,1212.75 2026.91,1212.55 2027.49,1211.2 2028.08,1213.9 2028.67,1213.95 2029.25,1216.12 2029.84,1214.86 2030.43,1217.53 2031.01,1217.42 2031.6,1217.31 2032.19,1215.88 2032.77,1214.58 2033.36,1214.8 2033.94,1214.54 2034.53,1214.45 2035.12,1214.17 2035.7,1214.16 2036.29,1214.98 2036.88,1214.58 2037.46,1214.34 2038.05,1216.79 2038.64,1216.7 2039.22,1217.71 2039.81,1218.48 2040.4,1218.21 2040.98,1221.72 2041.57,1223.25 2042.15,1224.99 2042.74,1223.15 2043.33,1222.5 2043.91,1222.15 2044.5,1216.96 2045.09,1215.42 2045.67,1215.09 2046.26,1217.5 2046.85,1217.17 2047.43,1214.59 2048.02,1213.52 2048.6,1213.48 2049.19,1214.52 2049.78,1211.59 2050.36,1209.28 2050.95,1205.68 2051.54,1205.86 2052.12,1204.8 2052.71,1206.17 2053.3,1205.47 2053.88,1204.67 2054.47,1206.24 2055.06,1207.82 2055.64,1206.52 2056.23,1206.97 2056.81,1208.4 2057.4,1208.49 2057.99,1208.76 2058.57,1207.71 2059.16,1205.68 2059.75,1208.52 2060.33,1208.72 2060.92,1210.21 2061.51,1211.44 2062.09,1211.65 2062.68,1211.73 2063.27,1213.2 2063.85,1211.84 2064.44,1211.77 2065.02,1210.79 2065.61,1208.51 2066.2,1207.38 2066.78,1205.16 2067.37,1207.07 2067.96,1208.47 2068.54,1208.57 2069.13,1208.73 2069.72,1207.77 2070.3,1209.2 2070.89,1209.13 2071.48,1211.47 2072.06,1216.41 2072.65,1214.97 2073.23,1212.41 2073.82,1212.57 2074.41,1214.15 2074.99,1212.61 2075.58,1211.24 2076.17,1211.43 2076.75,1213.96 2077.34,1215 2077.93,1212.19 2078.51,1213.34 2079.1,1213.49 2079.68,1213.41 2080.27,1215.54 2080.86,1216.56 2081.44,1217.56 2082.03,1217.64 2082.62,1216.06 2083.2,1218.33 2083.79,1217.93 2084.38,1220.32 2084.96,1220 2085.55,1218.34 2086.14,1216.94 2086.72,1220.38 2087.31,1220.05 2087.89,1219.55 2088.48,1215.46 2089.07,1213.99 2089.65,1216.45 2090.24,1216.36 2090.83,1216.07 2091.41,1213.66 2092,1212.13 2092.59,1210.71 2093.17,1209.73 2093.76,1209.79 2094.35,1211.04 2094.93,1209.9 2095.52,1208.8 2096.1,1208.95 2096.69,1212.71 2097.28,1212.75 2097.86,1211.47 2098.45,1211.44 2099.04,1215.29 2099.62,1216.36 2100.21,1212.56 2100.8,1210.17 2101.38,1211.52 2101.97,1213.02 2102.55,1213.26 2103.14,1214.17 2103.73,1211.62 2104.31,1214.21 2104.9,1214.16 2105.49,1215.39 2106.07,1215.1 2106.66,1213.69 2107.25,1213.78 2107.83,1213.7 2108.42,1215.98 2109.01,1214.59 2109.59,1217.07 2110.18,1219.51 2110.76,1217.69 2111.35,1216.33 2111.94,1215.95 2112.52,1217.08 2113.11,1215.43 2113.7,1216.61 2114.28,1216.54 2114.87,1213.82 2115.46,1212.64 2116.04,1211.55 2116.63,1212.93 2117.22,1211.45 2117.8,1213.89 2118.39,1213.9 2118.97,1216.28 2119.56,1216.08 2120.15,1215.99 2120.73,1214.57 2121.32,1215.67 2121.91,1212.86 2122.49,1212.98 2123.08,1210.69 2123.67,1215.65 2124.25,1216.62 2124.84,1217.48 2125.42,1217.27 2126.01,1218.21 2126.6,1220.64 2127.18,1220.52 2127.77,1220.4 2128.36,1220.02 2128.94,1220.95 2129.53,1219.07 2130.12,1218.77 2130.7,1219.6 2131.29,1218.17 2131.88,1217.9 2132.46,1217.71 2133.05,1216.15 2133.63,1215.82 2134.22,1213.14 2134.81,1211.82 2135.39,1213 2135.98,1211.39 2136.57,1211.22 2137.15,1210.11 2137.74,1210.18 2138.33,1210.04 2138.91,1207.62 2139.5,1207.82 2140.09,1208.03 2140.67,1206.87 2141.26,1207.48 2141.84,1207.74 2142.43,1209.24 2143.02,1209.39 2143.6,1210.71 2144.19,1210.84 2144.78,1208.62 2145.36,1210 2145.95,1211.36 2146.54,1210.12 2147.12,1210.37 2147.71,1210.57 2148.3,1211.92 2148.88,1211.72 2149.47,1212.97 2150.05,1212.79 2150.64,1211.5 2151.23,1210.37 2151.81,1209.24 2152.4,1208.56 2152.99,1209.17 2153.57,1209.07 2154.16,1207.93 2154.75,1206.6 2155.33,1205.61 2155.92,1206.35 2156.5,1206.65 2157.09,1208.39 2157.68,1206.11 2158.26,1207.81 \"/>\n<path clip-path=\"url(#clip042)\" d=\"M986.025 1213.21 L986.612 1213.21 L987.198 1213.21 L987.785 1213.21 L988.371 1213.21 L988.957 1213.21 L989.544 1213.21 L990.13 1213.21 L990.717 1213.21 L991.303 1213.21 L991.889 1213.21 L992.476 1213.21 L993.062 1213.21 L993.649 1213.21 L994.235 1213.21 L994.822 1213.21 L995.408 1213.21 L995.994 1213.21 L996.581 1213.21 L997.167 1213.21 L997.754 1213.21 L998.34 1213.21 L998.926 1213.21 L999.513 1213.21 L1000.1 1213.21 L1000.69 1213.21 L1001.27 1213.21 L1001.86 1213.21 L1002.44 1213.21 L1003.03 1213.21 L1003.62 1213.21 L1004.2 1213.21 L1004.79 1213.21 L1005.38 1213.21 L1005.96 1213.21 L1006.55 1213.21 L1007.14 1213.21 L1007.72 1213.21 L1008.31 1213.21 L1008.9 1213.21 L1009.48 1213.21 L1010.07 1213.21 L1010.65 1213.21 L1011.24 1213.21 L1011.83 1213.21 L1012.41 1213.21 L1013 1213.21 L1013.59 1213.21 L1014.17 1213.21 L1014.76 1213.21 L1015.35 1213.21 L1015.93 1213.21 L1016.52 1213.21 L1017.11 1213.21 L1017.69 1213.21 L1018.28 1213.21 L1018.86 1213.21 L1019.45 1213.21 L1020.04 1213.21 L1020.62 1213.21 L1021.21 1213.21 L1021.8 1213.21 L1022.38 1213.21 L1022.97 1213.21 L1023.56 1213.21 L1024.14 1213.21 L1024.73 1213.21 L1025.32 1213.21 L1025.9 1213.21 L1026.49 1213.21 L1027.07 1213.21 L1027.66 1213.21 L1028.25 1213.21 L1028.83 1213.21 L1029.42 1213.21 L1030.01 1213.21 L1030.59 1213.21 L1031.18 1213.21 L1031.77 1213.21 L1032.35 1213.21 L1032.94 1213.21 L1033.52 1213.21 L1034.11 1213.21 L1034.7 1213.21 L1035.28 1213.21 L1035.87 1213.21 L1036.46 1213.21 L1037.04 1213.21 L1037.63 1213.21 L1038.22 1213.21 L1038.8 1213.21 L1039.39 1213.21 L1039.98 1213.21 L1040.56 1213.21 L1041.15 1213.21 L1041.73 1213.21 L1042.32 1213.21 L1042.91 1213.21 L1043.49 1213.21 L1044.08 1213.21 L1044.67 1213.21 L1045.25 1213.21 L1045.84 1213.21 L1046.43 1213.21 L1047.01 1213.21 L1047.6 1213.21 L1048.19 1213.21 L1048.77 1213.21 L1049.36 1213.21 L1049.94 1213.21 L1050.53 1213.21 L1051.12 1213.21 L1051.7 1213.21 L1052.29 1213.21 L1052.88 1213.21 L1053.46 1213.21 L1054.05 1213.21 L1054.64 1213.21 L1055.22 1213.21 L1055.81 1213.21 L1056.39 1213.21 L1056.98 1213.21 L1057.57 1213.21 L1058.15 1213.21 L1058.74 1213.21 L1059.33 1213.21 L1059.91 1213.21 L1060.5 1213.21 L1061.09 1213.21 L1061.67 1213.21 L1062.26 1213.21 L1062.85 1213.21 L1063.43 1213.21 L1064.02 1213.21 L1064.6 1213.21 L1065.19 1213.21 L1065.78 1213.21 L1066.36 1213.21 L1066.95 1213.21 L1067.54 1213.21 L1068.12 1213.21 L1068.71 1213.21 L1069.3 1213.21 L1069.88 1213.21 L1070.47 1213.21 L1071.06 1213.21 L1071.64 1213.21 L1072.23 1213.21 L1072.81 1213.21 L1073.4 1213.21 L1073.99 1213.21 L1074.57 1213.21 L1075.16 1213.21 L1075.75 1213.21 L1076.33 1213.21 L1076.92 1213.21 L1077.51 1213.21 L1078.09 1213.21 L1078.68 1213.21 L1079.26 1213.21 L1079.85 1213.21 L1080.44 1213.21 L1081.02 1213.21 L1081.61 1213.21 L1082.2 1213.21 L1082.78 1213.21 L1083.37 1213.21 L1083.96 1213.21 L1084.54 1213.21 L1085.13 1213.21 L1085.72 1213.21 L1086.3 1213.21 L1086.89 1213.21 L1087.47 1213.21 L1088.06 1213.21 L1088.65 1213.21 L1089.23 1213.21 L1089.82 1213.21 L1090.41 1213.21 L1090.99 1213.21 L1091.58 1213.21 L1092.17 1213.21 L1092.75 1213.21 L1093.34 1213.21 L1093.93 1213.21 L1094.51 1213.21 L1095.1 1213.21 L1095.68 1213.21 L1096.27 1213.21 L1096.86 1213.21 L1097.44 1213.21 L1098.03 1213.21 L1098.62 1213.21 L1099.2 1213.21 L1099.79 1213.21 L1100.38 1213.21 L1100.96 1213.21 L1101.55 1213.21 L1102.14 1213.21 L1102.72 1213.21 L1103.31 1213.21 L1103.89 1213.21 L1104.48 1213.21 L1105.07 1213.21 L1105.65 1213.21 L1106.24 1213.21 L1106.83 1213.21 L1107.41 1213.21 L1108 1213.21 L1108.59 1213.21 L1109.17 1213.21 L1109.76 1213.21 L1110.34 1213.21 L1110.93 1213.21 L1111.52 1213.21 L1112.1 1213.21 L1112.69 1213.21 L1113.28 1213.21 L1113.86 1213.21 L1114.45 1213.21 L1115.04 1213.21 L1115.62 1213.21 L1116.21 1213.21 L1116.8 1213.21 L1117.38 1213.21 L1117.97 1213.21 L1118.55 1213.21 L1119.14 1213.21 L1119.73 1213.21 L1120.31 1213.21 L1120.9 1213.21 L1121.49 1213.21 L1122.07 1213.21 L1122.66 1213.21 L1123.25 1213.21 L1123.83 1213.21 L1124.42 1213.21 L1125.01 1213.21 L1125.59 1213.21 L1126.18 1213.21 L1126.76 1213.21 L1127.35 1213.21 L1127.94 1213.21 L1128.52 1213.21 L1129.11 1213.21 L1129.7 1213.21 L1130.28 1213.21 L1130.87 1213.21 L1131.46 1213.21 L1132.04 1213.21 L1132.63 1213.21 L1133.21 1213.21 L1133.8 1213.21 L1134.39 1213.21 L1134.97 1213.21 L1135.56 1213.21 L1136.15 1213.21 L1136.73 1213.21 L1137.32 1213.21 L1137.91 1213.21 L1138.49 1213.21 L1139.08 1213.21 L1139.67 1213.21 L1140.25 1213.21 L1140.84 1213.21 L1141.42 1213.21 L1142.01 1213.21 L1142.6 1213.21 L1143.18 1213.21 L1143.77 1213.21 L1144.36 1213.21 L1144.94 1213.21 L1145.53 1213.21 L1146.12 1213.21 L1146.7 1213.21 L1147.29 1213.21 L1147.88 1213.21 L1148.46 1213.21 L1149.05 1213.21 L1149.63 1213.21 L1150.22 1213.21 L1150.81 1213.21 L1151.39 1213.21 L1151.98 1213.21 L1152.57 1213.21 L1153.15 1213.21 L1153.74 1213.21 L1154.33 1213.21 L1154.91 1213.21 L1155.5 1213.21 L1156.09 1213.21 L1156.67 1213.21 L1157.26 1213.21 L1157.84 1213.21 L1158.43 1213.21 L1159.02 1213.21 L1159.6 1213.21 L1160.19 1213.21 L1160.78 1213.21 L1161.36 1213.21 L1161.95 1213.21 L1162.54 1213.21 L1163.12 1213.21 L1163.71 1213.21 L1164.29 1213.21 L1164.88 1213.21 L1165.47 1213.21 L1166.05 1213.21 L1166.64 1213.21 L1167.23 1213.21 L1167.81 1213.21 L1168.4 1213.21 L1168.99 1213.21 L1169.57 1213.21 L1170.16 1213.21 L1170.75 1213.21 L1171.33 1213.21 L1171.92 1213.21 L1172.5 1213.21 L1173.09 1213.21 L1173.68 1213.21 L1174.26 1213.21 L1174.85 1213.21 L1175.44 1213.21 L1176.02 1213.21 L1176.61 1213.21 L1177.2 1213.21 L1177.78 1213.21 L1178.37 1213.21 L1178.96 1213.21 L1179.54 1213.21 L1180.13 1213.21 L1180.71 1213.21 L1181.3 1213.21 L1181.89 1213.21 L1182.47 1213.21 L1183.06 1213.21 L1183.65 1213.21 L1184.23 1213.21 L1184.82 1213.21 L1185.41 1213.21 L1185.99 1213.21 L1186.58 1213.21 L1187.16 1213.21 L1187.75 1213.21 L1188.34 1213.21 L1188.92 1213.21 L1189.51 1213.21 L1190.1 1213.21 L1190.68 1213.21 L1191.27 1213.21 L1191.86 1213.21 L1192.44 1213.21 L1193.03 1213.21 L1193.62 1213.21 L1194.2 1213.21 L1194.79 1213.21 L1195.37 1213.21 L1195.96 1213.21 L1196.55 1213.21 L1197.13 1213.21 L1197.72 1213.21 L1198.31 1213.21 L1198.89 1213.21 L1199.48 1213.21 L1200.07 1213.21 L1200.65 1213.21 L1201.24 1213.21 L1201.83 1213.21 L1202.41 1213.21 L1203 1213.21 L1203.58 1213.21 L1204.17 1213.21 L1204.76 1213.21 L1205.34 1213.21 L1205.93 1213.21 L1206.52 1213.21 L1207.1 1213.21 L1207.69 1213.21 L1208.28 1213.21 L1208.86 1213.21 L1209.45 1213.21 L1210.03 1213.21 L1210.62 1213.21 L1211.21 1213.21 L1211.79 1213.21 L1212.38 1213.21 L1212.97 1213.21 L1213.55 1213.21 L1214.14 1213.21 L1214.73 1213.21 L1215.31 1213.21 L1215.9 1213.21 L1216.49 1213.21 L1217.07 1213.21 L1217.66 1213.21 L1218.24 1213.21 L1218.83 1213.21 L1219.42 1213.21 L1220 1213.21 L1220.59 1213.21 L1221.18 1213.21 L1221.76 1213.21 L1222.35 1213.21 L1222.94 1213.21 L1223.52 1213.21 L1224.11 1213.21 L1224.7 1213.21 L1225.28 1213.21 L1225.87 1213.21 L1226.45 1213.21 L1227.04 1213.21 L1227.63 1213.21 L1228.21 1213.21 L1228.8 1213.21 L1229.39 1213.21 L1229.97 1213.21 L1230.56 1213.21 L1231.15 1213.21 L1231.73 1213.21 L1232.32 1213.21 L1232.91 1213.21 L1233.49 1213.21 L1234.08 1213.21 L1234.66 1213.21 L1235.25 1213.21 L1235.84 1213.21 L1236.42 1213.21 L1237.01 1213.21 L1237.6 1213.21 L1238.18 1213.21 L1238.77 1213.21 L1239.36 1213.21 L1239.94 1213.21 L1240.53 1213.21 L1241.11 1213.21 L1241.7 1213.21 L1242.29 1213.21 L1242.87 1213.21 L1243.46 1213.21 L1244.05 1213.21 L1244.63 1213.21 L1245.22 1213.21 L1245.81 1213.21 L1246.39 1213.21 L1246.98 1213.21 L1247.57 1213.21 L1248.15 1213.21 L1248.74 1213.21 L1249.32 1213.21 L1249.91 1213.21 L1250.5 1213.21 L1251.08 1213.21 L1251.67 1213.21 L1252.26 1213.21 L1252.84 1213.21 L1253.43 1213.21 L1254.02 1213.21 L1254.6 1213.21 L1255.19 1213.21 L1255.78 1213.21 L1256.36 1213.21 L1256.95 1213.21 L1257.53 1213.21 L1258.12 1213.21 L1258.71 1213.21 L1259.29 1213.21 L1259.88 1213.21 L1260.47 1213.21 L1261.05 1213.21 L1261.64 1213.21 L1262.23 1213.21 L1262.81 1213.21 L1263.4 1213.21 L1263.98 1213.21 L1264.57 1213.21 L1265.16 1213.21 L1265.74 1213.21 L1266.33 1213.21 L1266.92 1213.21 L1267.5 1213.21 L1268.09 1213.21 L1268.68 1213.21 L1269.26 1213.21 L1269.85 1213.21 L1270.44 1213.21 L1271.02 1213.21 L1271.61 1213.21 L1272.19 1213.21 L1272.78 1213.21 L1273.37 1213.21 L1273.95 1213.21 L1274.54 1213.21 L1275.13 1213.21 L1275.71 1213.21 L1276.3 1213.21 L1276.89 1213.21 L1277.47 1213.21 L1278.06 1213.21 L1278.65 1213.21 L1279.23 1213.21 L1279.82 1213.21 L1280.4 1213.21 L1280.99 1213.21 L1281.58 1213.21 L1282.16 1213.21 L1282.75 1213.21 L1283.34 1213.21 L1283.92 1213.21 L1284.51 1213.21 L1285.1 1213.21 L1285.68 1213.21 L1286.27 1213.21 L1286.86 1213.21 L1287.44 1213.21 L1288.03 1213.21 L1288.61 1213.21 L1289.2 1213.21 L1289.79 1213.21 L1290.37 1213.21 L1290.96 1213.21 L1291.55 1213.21 L1292.13 1213.21 L1292.72 1213.21 L1293.31 1213.21 L1293.89 1213.21 L1294.48 1213.21 L1295.06 1213.21 L1295.65 1213.21 L1296.24 1213.21 L1296.82 1213.21 L1297.41 1213.21 L1298 1213.21 L1298.58 1213.21 L1299.17 1213.21 L1299.76 1213.21 L1300.34 1213.21 L1300.93 1213.21 L1301.52 1213.21 L1302.1 1213.21 L1302.69 1213.21 L1303.27 1213.21 L1303.86 1213.21 L1304.45 1213.21 L1305.03 1213.21 L1305.62 1213.21 L1306.21 1213.21 L1306.79 1213.21 L1307.38 1213.21 L1307.97 1213.21 L1308.55 1213.21 L1309.14 1213.21 L1309.73 1213.21 L1310.31 1213.21 L1310.9 1213.21 L1311.48 1213.21 L1312.07 1213.21 L1312.66 1213.21 L1313.24 1213.21 L1313.83 1213.21 L1314.42 1213.21 L1315 1213.21 L1315.59 1213.21 L1316.18 1213.21 L1316.76 1213.21 L1317.35 1213.21 L1317.93 1213.21 L1318.52 1213.21 L1319.11 1213.21 L1319.69 1213.21 L1320.28 1213.21 L1320.87 1213.21 L1321.45 1213.21 L1322.04 1213.21 L1322.63 1213.21 L1323.21 1213.21 L1323.8 1213.21 L1324.39 1213.21 L1324.97 1213.21 L1325.56 1213.21 L1326.14 1213.21 L1326.73 1213.21 L1327.32 1213.21 L1327.9 1213.21 L1328.49 1213.21 L1329.08 1213.21 L1329.66 1213.21 L1330.25 1213.21 L1330.84 1213.21 L1331.42 1213.21 L1332.01 1213.21 L1332.6 1213.21 L1333.18 1213.21 L1333.77 1213.21 L1334.35 1213.21 L1334.94 1213.21 L1335.53 1213.21 L1336.11 1213.21 L1336.7 1213.21 L1337.29 1213.21 L1337.87 1213.21 L1338.46 1213.21 L1339.05 1213.21 L1339.63 1213.21 L1340.22 1213.21 L1340.8 1213.21 L1341.39 1213.21 L1341.98 1213.21 L1342.56 1213.21 L1343.15 1213.21 L1343.74 1213.21 L1344.32 1213.21 L1344.91 1213.21 L1345.5 1213.21 L1346.08 1213.21 L1346.67 1213.21 L1347.26 1213.21 L1347.84 1213.21 L1348.43 1213.21 L1349.01 1213.21 L1349.6 1213.21 L1350.19 1213.21 L1350.77 1213.21 L1351.36 1213.21 L1351.95 1213.21 L1352.53 1213.21 L1353.12 1213.21 L1353.71 1213.21 L1354.29 1213.21 L1354.88 1213.21 L1355.47 1213.21 L1356.05 1213.21 L1356.64 1213.21 L1357.22 1213.21 L1357.81 1213.21 L1358.4 1213.21 L1358.98 1213.21 L1359.57 1213.21 L1360.16 1213.21 L1360.74 1213.21 L1361.33 1213.21 L1361.92 1213.21 L1362.5 1213.21 L1363.09 1213.21 L1363.68 1213.21 L1364.26 1213.21 L1364.85 1213.21 L1365.43 1213.21 L1366.02 1213.21 L1366.61 1213.21 L1367.19 1213.21 L1367.78 1213.21 L1368.37 1213.21 L1368.95 1213.21 L1369.54 1213.21 L1370.13 1213.21 L1370.71 1213.21 L1371.3 1213.21 L1371.88 1213.21 L1372.47 1213.21 L1373.06 1213.21 L1373.64 1213.21 L1374.23 1213.21 L1374.82 1213.21 L1375.4 1213.21 L1375.99 1213.21 L1376.58 1213.21 L1377.16 1213.21 L1377.75 1213.21 L1378.34 1213.21 L1378.92 1213.21 L1379.51 1213.21 L1380.09 1213.21 L1380.68 1213.21 L1381.27 1213.21 L1381.85 1213.21 L1382.44 1213.21 L1383.03 1213.21 L1383.61 1213.21 L1384.2 1213.21 L1384.79 1213.21 L1385.37 1213.21 L1385.96 1213.21 L1386.55 1213.21 L1387.13 1213.21 L1387.72 1213.21 L1388.3 1213.21 L1388.89 1213.21 L1389.48 1213.21 L1390.06 1213.21 L1390.65 1213.21 L1391.24 1213.21 L1391.82 1213.21 L1392.41 1213.21 L1393 1213.21 L1393.58 1213.21 L1394.17 1213.21 L1394.75 1213.21 L1395.34 1213.21 L1395.93 1213.21 L1396.51 1213.21 L1397.1 1213.21 L1397.69 1213.21 L1398.27 1213.21 L1398.86 1213.21 L1399.45 1213.21 L1400.03 1213.21 L1400.62 1213.21 L1401.21 1213.21 L1401.79 1213.21 L1402.38 1213.21 L1402.96 1213.21 L1403.55 1213.21 L1404.14 1213.21 L1404.72 1213.21 L1405.31 1213.21 L1405.9 1213.21 L1406.48 1213.21 L1407.07 1213.21 L1407.66 1213.21 L1408.24 1213.21 L1408.83 1213.21 L1409.42 1213.21 L1410 1213.21 L1410.59 1213.21 L1411.17 1213.21 L1411.76 1213.21 L1412.35 1213.21 L1412.93 1213.21 L1413.52 1213.21 L1414.11 1213.21 L1414.69 1213.21 L1415.28 1213.21 L1415.87 1213.21 L1416.45 1213.21 L1417.04 1213.21 L1417.63 1213.21 L1418.21 1213.21 L1418.8 1213.21 L1419.38 1213.21 L1419.97 1213.21 L1420.56 1213.21 L1421.14 1213.21 L1421.73 1213.21 L1422.32 1213.21 L1422.9 1213.21 L1423.49 1213.21 L1424.08 1213.21 L1424.66 1213.21 L1425.25 1213.21 L1425.83 1213.21 L1426.42 1213.21 L1427.01 1213.21 L1427.59 1213.21 L1428.18 1213.21 L1428.77 1213.21 L1429.35 1213.21 L1429.94 1213.21 L1430.53 1213.21 L1431.11 1213.21 L1431.7 1213.21 L1432.29 1213.21 L1432.87 1213.21 L1433.46 1213.21 L1434.04 1213.21 L1434.63 1213.21 L1435.22 1213.21 L1435.8 1213.21 L1436.39 1213.21 L1436.98 1213.21 L1437.56 1213.21 L1438.15 1213.21 L1438.74 1213.21 L1439.32 1213.21 L1439.91 1213.21 L1440.5 1213.21 L1441.08 1213.21 L1441.67 1213.21 L1442.25 1213.21 L1442.84 1213.21 L1443.43 1213.21 L1444.01 1213.21 L1444.6 1213.21 L1445.19 1213.21 L1445.77 1213.21 L1446.36 1213.21 L1446.95 1213.21 L1447.53 1213.21 L1448.12 1213.21 L1448.7 1213.21 L1449.29 1213.21 L1449.88 1213.21 L1450.46 1213.21 L1451.05 1213.21 L1451.64 1213.21 L1452.22 1213.21 L1452.81 1213.21 L1453.4 1213.21 L1453.98 1213.21 L1454.57 1213.21 L1455.16 1213.21 L1455.74 1213.21 L1456.33 1213.21 L1456.91 1213.21 L1457.5 1213.21 L1458.09 1213.21 L1458.67 1213.21 L1459.26 1213.21 L1459.85 1213.21 L1460.43 1213.21 L1461.02 1213.21 L1461.61 1213.21 L1462.19 1213.21 L1462.78 1213.21 L1463.37 1213.21 L1463.95 1213.21 L1464.54 1213.21 L1465.12 1213.21 L1465.71 1213.21 L1466.3 1213.21 L1466.88 1213.21 L1467.47 1213.21 L1468.06 1213.21 L1468.64 1213.21 L1469.23 1213.21 L1469.82 1213.21 L1470.4 1213.21 L1470.99 1213.21 L1471.57 1213.21 L1472.16 1213.21 L1472.75 1213.21 L1473.33 1213.21 L1473.92 1213.21 L1474.51 1213.21 L1475.09 1213.21 L1475.68 1213.21 L1476.27 1213.21 L1476.85 1213.21 L1477.44 1213.21 L1478.03 1213.21 L1478.61 1213.21 L1479.2 1213.21 L1479.78 1213.21 L1480.37 1213.21 L1480.96 1213.21 L1481.54 1213.21 L1482.13 1213.21 L1482.72 1213.21 L1483.3 1213.21 L1483.89 1213.21 L1484.48 1213.21 L1485.06 1213.21 L1485.65 1213.21 L1486.24 1213.21 L1486.82 1213.21 L1487.41 1213.21 L1487.99 1213.21 L1488.58 1213.21 L1489.17 1213.21 L1489.75 1213.21 L1490.34 1213.21 L1490.93 1213.21 L1491.51 1213.21 L1492.1 1213.21 L1492.69 1213.21 L1493.27 1213.21 L1493.86 1213.21 L1494.45 1213.21 L1495.03 1213.21 L1495.62 1213.21 L1496.2 1213.21 L1496.79 1213.21 L1497.38 1213.21 L1497.96 1213.21 L1498.55 1213.21 L1499.14 1213.21 L1499.72 1213.21 L1500.31 1213.21 L1500.9 1213.21 L1501.48 1213.21 L1502.07 1213.21 L1502.65 1213.21 L1503.24 1213.21 L1503.83 1213.21 L1504.41 1213.21 L1505 1213.21 L1505.59 1213.21 L1506.17 1213.21 L1506.76 1213.21 L1507.35 1213.21 L1507.93 1213.21 L1508.52 1213.21 L1509.11 1213.21 L1509.69 1213.21 L1510.28 1213.21 L1510.86 1213.21 L1511.45 1213.21 L1512.04 1213.21 L1512.62 1213.21 L1513.21 1213.21 L1513.8 1213.21 L1514.38 1213.21 L1514.97 1213.21 L1515.56 1213.21 L1516.14 1213.21 L1516.73 1213.21 L1517.32 1213.21 L1517.9 1213.21 L1518.49 1213.21 L1519.07 1213.21 L1519.66 1213.21 L1520.25 1213.21 L1520.83 1213.21 L1521.42 1213.21 L1522.01 1213.21 L1522.59 1213.21 L1523.18 1213.21 L1523.77 1213.21 L1524.35 1213.21 L1524.94 1213.21 L1525.52 1213.21 L1526.11 1213.21 L1526.7 1213.21 L1527.28 1213.21 L1527.87 1213.21 L1528.46 1213.21 L1529.04 1213.21 L1529.63 1213.21 L1530.22 1213.21 L1530.8 1213.21 L1531.39 1213.21 L1531.98 1213.21 L1532.56 1213.21 L1533.15 1213.21 L1533.73 1213.21 L1534.32 1213.21 L1534.91 1213.21 L1535.49 1213.21 L1536.08 1213.21 L1536.67 1213.21 L1537.25 1213.21 L1537.84 1213.21 L1538.43 1213.21 L1539.01 1213.21 L1539.6 1213.21 L1540.19 1213.21 L1540.77 1213.21 L1541.36 1213.21 L1541.94 1213.21 L1542.53 1213.21 L1543.12 1213.21 L1543.7 1213.21 L1544.29 1213.21 L1544.88 1213.21 L1545.46 1213.21 L1546.05 1213.21 L1546.64 1213.21 L1547.22 1213.21 L1547.81 1213.21 L1548.4 1213.21 L1548.98 1213.21 L1549.57 1213.21 L1550.15 1213.21 L1550.74 1213.21 L1551.33 1213.21 L1551.91 1213.21 L1552.5 1213.21 L1553.09 1213.21 L1553.67 1213.21 L1554.26 1213.21 L1554.85 1213.21 L1555.43 1213.21 L1556.02 1213.21 L1556.6 1213.21 L1557.19 1213.21 L1557.78 1213.21 L1558.36 1213.21 L1558.95 1213.21 L1559.54 1213.21 L1560.12 1213.21 L1560.71 1213.21 L1561.3 1213.21 L1561.88 1213.21 L1562.47 1213.21 L1563.06 1213.21 L1563.64 1213.21 L1564.23 1213.21 L1564.81 1213.21 L1565.4 1213.21 L1565.99 1213.21 L1566.57 1213.21 L1567.16 1213.21 L1567.75 1213.21 L1568.33 1213.21 L1568.92 1213.21 L1569.51 1213.21 L1570.09 1213.21 L1570.68 1213.21 L1571.27 1213.21 L1571.85 1213.21 L1572.44 1213.21 L1573.02 1213.21 L1573.61 1213.21 L1574.2 1213.21 L1574.78 1213.21 L1575.37 1213.21 L1575.96 1213.21 L1576.54 1213.21 L1577.13 1213.21 L1577.72 1213.21 L1578.3 1213.21 L1578.89 1213.21 L1579.47 1213.21 L1580.06 1213.21 L1580.65 1213.21 L1581.23 1213.21 L1581.82 1213.21 L1582.41 1213.21 L1582.99 1213.21 L1583.58 1213.21 L1584.17 1213.21 L1584.75 1213.21 L1585.34 1213.21 L1585.93 1213.21 L1586.51 1213.21 L1587.1 1213.21 L1587.68 1213.21 L1588.27 1213.21 L1588.86 1213.21 L1589.44 1213.21 L1590.03 1213.21 L1590.62 1213.21 L1591.2 1213.21 L1591.79 1213.21 L1592.38 1213.21 L1592.96 1213.21 L1593.55 1213.21 L1594.14 1213.21 L1594.72 1213.21 L1595.31 1213.21 L1595.89 1213.21 L1596.48 1213.21 L1597.07 1213.21 L1597.65 1213.21 L1598.24 1213.21 L1598.83 1213.21 L1599.41 1213.21 L1600 1213.21 L1600.59 1213.21 L1601.17 1213.21 L1601.76 1213.21 L1602.34 1213.21 L1602.93 1213.21 L1603.52 1213.21 L1604.1 1213.21 L1604.69 1213.21 L1605.28 1213.21 L1605.86 1213.21 L1606.45 1213.21 L1607.04 1213.21 L1607.62 1213.21 L1608.21 1213.21 L1608.8 1213.21 L1609.38 1213.21 L1609.97 1213.21 L1610.55 1213.21 L1611.14 1213.21 L1611.73 1213.21 L1612.31 1213.21 L1612.9 1213.21 L1613.49 1213.21 L1614.07 1213.21 L1614.66 1213.21 L1615.25 1213.21 L1615.83 1213.21 L1616.42 1213.21 L1617.01 1213.21 L1617.59 1213.21 L1618.18 1213.21 L1618.76 1213.21 L1619.35 1213.21 L1619.94 1213.21 L1620.52 1213.21 L1621.11 1213.21 L1621.7 1213.21 L1622.28 1213.21 L1622.87 1213.21 L1623.46 1213.21 L1624.04 1213.21 L1624.63 1213.21 L1625.22 1213.21 L1625.8 1213.21 L1626.39 1213.21 L1626.97 1213.21 L1627.56 1213.21 L1628.15 1213.21 L1628.73 1213.21 L1629.32 1213.21 L1629.91 1213.21 L1630.49 1213.21 L1631.08 1213.21 L1631.67 1213.21 L1632.25 1213.21 L1632.84 1213.21 L1633.42 1213.21 L1634.01 1213.21 L1634.6 1213.21 L1635.18 1213.21 L1635.77 1213.21 L1636.36 1213.21 L1636.94 1213.21 L1637.53 1213.21 L1638.12 1213.21 L1638.7 1213.21 L1639.29 1213.21 L1639.88 1213.21 L1640.46 1213.21 L1641.05 1213.21 L1641.63 1213.21 L1642.22 1213.21 L1642.81 1213.21 L1643.39 1213.21 L1643.98 1213.21 L1644.57 1213.21 L1645.15 1213.21 L1645.74 1213.21 L1646.33 1213.21 L1646.91 1213.21 L1647.5 1213.21 L1648.09 1213.21 L1648.67 1213.21 L1649.26 1213.21 L1649.84 1213.21 L1650.43 1213.21 L1651.02 1213.21 L1651.6 1213.21 L1652.19 1213.21 L1652.78 1213.21 L1653.36 1213.21 L1653.95 1213.21 L1654.54 1213.21 L1655.12 1213.21 L1655.71 1213.21 L1656.29 1213.21 L1656.88 1213.21 L1657.47 1213.21 L1658.05 1213.21 L1658.64 1213.21 L1659.23 1213.21 L1659.81 1213.21 L1660.4 1213.21 L1660.99 1213.21 L1661.57 1213.21 L1662.16 1213.21 L1662.75 1213.21 L1663.33 1213.21 L1663.92 1213.21 L1664.5 1213.21 L1665.09 1213.21 L1665.68 1213.21 L1666.26 1213.21 L1666.85 1213.21 L1667.44 1213.21 L1668.02 1213.21 L1668.61 1213.21 L1669.2 1213.21 L1669.78 1213.21 L1670.37 1213.21 L1670.96 1213.21 L1671.54 1213.21 L1672.13 1213.21 L1672.71 1213.21 L1673.3 1213.21 L1673.89 1213.21 L1674.47 1213.21 L1675.06 1213.21 L1675.65 1213.21 L1676.23 1213.21 L1676.82 1213.21 L1677.41 1213.21 L1677.99 1213.21 L1678.58 1213.21 L1679.17 1213.21 L1679.75 1213.21 L1680.34 1213.21 L1680.92 1213.21 L1681.51 1213.21 L1682.1 1213.21 L1682.68 1213.21 L1683.27 1213.21 L1683.86 1213.21 L1684.44 1213.21 L1685.03 1213.21 L1685.62 1213.21 L1686.2 1213.21 L1686.79 1213.21 L1687.37 1213.21 L1687.96 1213.21 L1688.55 1213.21 L1689.13 1213.21 L1689.72 1213.21 L1690.31 1213.21 L1690.89 1213.21 L1691.48 1213.21 L1692.07 1213.21 L1692.65 1213.21 L1693.24 1213.21 L1693.83 1213.21 L1694.41 1213.21 L1695 1213.21 L1695.58 1213.21 L1696.17 1213.21 L1696.76 1213.21 L1697.34 1213.21 L1697.93 1213.21 L1698.52 1213.21 L1699.1 1213.21 L1699.69 1213.21 L1700.28 1213.21 L1700.86 1213.21 L1701.45 1213.21 L1702.04 1213.21 L1702.62 1213.21 L1703.21 1213.21 L1703.79 1213.21 L1704.38 1213.21 L1704.97 1213.21 L1705.55 1213.21 L1706.14 1213.21 L1706.73 1213.21 L1707.31 1213.21 L1707.9 1213.21 L1708.49 1213.21 L1709.07 1213.21 L1709.66 1213.21 L1710.24 1213.21 L1710.83 1213.21 L1711.42 1213.21 L1712 1213.21 L1712.59 1213.21 L1713.18 1213.21 L1713.76 1213.21 L1714.35 1213.21 L1714.94 1213.21 L1715.52 1213.21 L1716.11 1213.21 L1716.7 1213.21 L1717.28 1213.21 L1717.87 1213.21 L1718.45 1213.21 L1719.04 1213.21 L1719.63 1213.21 L1720.21 1213.21 L1720.8 1213.21 L1721.39 1213.21 L1721.97 1213.21 L1722.56 1213.21 L1723.15 1213.21 L1723.73 1213.21 L1724.32 1213.21 L1724.91 1213.21 L1725.49 1213.21 L1726.08 1213.21 L1726.66 1213.21 L1727.25 1213.21 L1727.84 1213.21 L1728.42 1213.21 L1729.01 1213.21 L1729.6 1213.21 L1730.18 1213.21 L1730.77 1213.21 L1731.36 1213.21 L1731.94 1213.21 L1732.53 1213.21 L1733.11 1213.21 L1733.7 1213.21 L1734.29 1213.21 L1734.87 1213.21 L1735.46 1213.21 L1736.05 1213.21 L1736.63 1213.21 L1737.22 1213.21 L1737.81 1213.21 L1738.39 1213.21 L1738.98 1213.21 L1739.57 1213.21 L1740.15 1213.21 L1740.74 1213.21 L1741.32 1213.21 L1741.91 1213.21 L1742.5 1213.21 L1743.08 1213.21 L1743.67 1213.21 L1744.26 1213.21 L1744.84 1213.21 L1745.43 1213.21 L1746.02 1213.21 L1746.6 1213.21 L1747.19 1213.21 L1747.78 1213.21 L1748.36 1213.21 L1748.95 1213.21 L1749.53 1213.21 L1750.12 1213.21 L1750.71 1213.21 L1751.29 1213.21 L1751.88 1213.21 L1752.47 1213.21 L1753.05 1213.21 L1753.64 1213.21 L1754.23 1213.21 L1754.81 1213.21 L1755.4 1213.21 L1755.99 1213.21 L1756.57 1213.21 L1757.16 1213.21 L1757.74 1213.21 L1758.33 1213.21 L1758.92 1213.21 L1759.5 1213.21 L1760.09 1213.21 L1760.68 1213.21 L1761.26 1213.21 L1761.85 1213.21 L1762.44 1213.21 L1763.02 1213.21 L1763.61 1213.21 L1764.19 1213.21 L1764.78 1213.21 L1765.37 1213.21 L1765.95 1213.21 L1766.54 1213.21 L1767.13 1213.21 L1767.71 1213.21 L1768.3 1213.21 L1768.89 1213.21 L1769.47 1213.21 L1770.06 1213.21 L1770.65 1213.21 L1771.23 1213.21 L1771.82 1213.21 L1772.4 1213.21 L1772.99 1213.21 L1773.58 1213.21 L1774.16 1213.21 L1774.75 1213.21 L1775.34 1213.21 L1775.92 1213.21 L1776.51 1213.21 L1777.1 1213.21 L1777.68 1213.21 L1778.27 1213.21 L1778.86 1213.21 L1779.44 1213.21 L1780.03 1213.21 L1780.61 1213.21 L1781.2 1213.21 L1781.79 1213.21 L1782.37 1213.21 L1782.96 1213.21 L1783.55 1213.21 L1784.13 1213.21 L1784.72 1213.21 L1785.31 1213.21 L1785.89 1213.21 L1786.48 1213.21 L1787.06 1213.21 L1787.65 1213.21 L1788.24 1213.21 L1788.82 1213.21 L1789.41 1213.21 L1790 1213.21 L1790.58 1213.21 L1791.17 1213.21 L1791.76 1213.21 L1792.34 1213.21 L1792.93 1213.21 L1793.52 1213.21 L1794.1 1213.21 L1794.69 1213.21 L1795.27 1213.21 L1795.86 1213.21 L1796.45 1213.21 L1797.03 1213.21 L1797.62 1213.21 L1798.21 1213.21 L1798.79 1213.21 L1799.38 1213.21 L1799.97 1213.21 L1800.55 1213.21 L1801.14 1213.21 L1801.73 1213.21 L1802.31 1213.21 L1802.9 1213.21 L1803.48 1213.21 L1804.07 1213.21 L1804.66 1213.21 L1805.24 1213.21 L1805.83 1213.21 L1806.42 1213.21 L1807 1213.21 L1807.59 1213.21 L1808.18 1213.21 L1808.76 1213.21 L1809.35 1213.21 L1809.94 1213.21 L1810.52 1213.21 L1811.11 1213.21 L1811.69 1213.21 L1812.28 1213.21 L1812.87 1213.21 L1813.45 1213.21 L1814.04 1213.21 L1814.63 1213.21 L1815.21 1213.21 L1815.8 1213.21 L1816.39 1213.21 L1816.97 1213.21 L1817.56 1213.21 L1818.14 1213.21 L1818.73 1213.21 L1819.32 1213.21 L1819.9 1213.21 L1820.49 1213.21 L1821.08 1213.21 L1821.66 1213.21 L1822.25 1213.21 L1822.84 1213.21 L1823.42 1213.21 L1824.01 1213.21 L1824.6 1213.21 L1825.18 1213.21 L1825.77 1213.21 L1826.35 1213.21 L1826.94 1213.21 L1827.53 1213.21 L1828.11 1213.21 L1828.7 1213.21 L1829.29 1213.21 L1829.87 1213.21 L1830.46 1213.21 L1831.05 1213.21 L1831.63 1213.21 L1832.22 1213.21 L1832.81 1213.21 L1833.39 1213.21 L1833.98 1213.21 L1834.56 1213.21 L1835.15 1213.21 L1835.74 1213.21 L1836.32 1213.21 L1836.91 1213.21 L1837.5 1213.21 L1838.08 1213.21 L1838.67 1213.21 L1839.26 1213.21 L1839.84 1213.21 L1840.43 1213.21 L1841.01 1213.21 L1841.6 1213.21 L1842.19 1213.21 L1842.77 1213.21 L1843.36 1213.21 L1843.95 1213.21 L1844.53 1213.21 L1845.12 1213.21 L1845.71 1213.21 L1846.29 1213.21 L1846.88 1213.21 L1847.47 1213.21 L1848.05 1213.21 L1848.64 1213.21 L1849.22 1213.21 L1849.81 1213.21 L1850.4 1213.21 L1850.98 1213.21 L1851.57 1213.21 L1852.16 1213.21 L1852.74 1213.21 L1853.33 1213.21 L1853.92 1213.21 L1854.5 1213.21 L1855.09 1213.21 L1855.68 1213.21 L1856.26 1213.21 L1856.85 1213.21 L1857.43 1213.21 L1858.02 1213.21 L1858.61 1213.21 L1859.19 1213.21 L1859.78 1213.21 L1860.37 1213.21 L1860.95 1213.21 L1861.54 1213.21 L1862.13 1213.21 L1862.71 1213.21 L1863.3 1213.21 L1863.88 1213.21 L1864.47 1213.21 L1865.06 1213.21 L1865.64 1213.21 L1866.23 1213.21 L1866.82 1213.21 L1867.4 1213.21 L1867.99 1213.21 L1868.58 1213.21 L1869.16 1213.21 L1869.75 1213.21 L1870.34 1213.21 L1870.92 1213.21 L1871.51 1213.21 L1872.09 1213.21 L1872.68 1213.21 L1873.27 1213.21 L1873.85 1213.21 L1874.44 1213.21 L1875.03 1213.21 L1875.61 1213.21 L1876.2 1213.21 L1876.79 1213.21 L1877.37 1213.21 L1877.96 1213.21 L1878.55 1213.21 L1879.13 1213.21 L1879.72 1213.21 L1880.3 1213.21 L1880.89 1213.21 L1881.48 1213.21 L1882.06 1213.21 L1882.65 1213.21 L1883.24 1213.21 L1883.82 1213.21 L1884.41 1213.21 L1885 1213.21 L1885.58 1213.21 L1886.17 1213.21 L1886.76 1213.21 L1887.34 1213.21 L1887.93 1213.21 L1888.51 1213.21 L1889.1 1213.21 L1889.69 1213.21 L1890.27 1213.21 L1890.86 1213.21 L1891.45 1213.21 L1892.03 1213.21 L1892.62 1213.21 L1893.21 1213.21 L1893.79 1213.21 L1894.38 1213.21 L1894.96 1213.21 L1895.55 1213.21 L1896.14 1213.21 L1896.72 1213.21 L1897.31 1213.21 L1897.9 1213.21 L1898.48 1213.21 L1899.07 1213.21 L1899.66 1213.21 L1900.24 1213.21 L1900.83 1213.21 L1901.42 1213.21 L1902 1213.21 L1902.59 1213.21 L1903.17 1213.21 L1903.76 1213.21 L1904.35 1213.21 L1904.93 1213.21 L1905.52 1213.21 L1906.11 1213.21 L1906.69 1213.21 L1907.28 1213.21 L1907.87 1213.21 L1908.45 1213.21 L1909.04 1213.21 L1909.63 1213.21 L1910.21 1213.21 L1910.8 1213.21 L1911.38 1213.21 L1911.97 1213.21 L1912.56 1213.21 L1913.14 1213.21 L1913.73 1213.21 L1914.32 1213.21 L1914.9 1213.21 L1915.49 1213.21 L1916.08 1213.21 L1916.66 1213.21 L1917.25 1213.21 L1917.83 1213.21 L1918.42 1213.21 L1919.01 1213.21 L1919.59 1213.21 L1920.18 1213.21 L1920.77 1213.21 L1921.35 1213.21 L1921.94 1213.21 L1922.53 1213.21 L1923.11 1213.21 L1923.7 1213.21 L1924.29 1213.21 L1924.87 1213.21 L1925.46 1213.21 L1926.04 1213.21 L1926.63 1213.21 L1927.22 1213.21 L1927.8 1213.21 L1928.39 1213.21 L1928.98 1213.21 L1929.56 1213.21 L1930.15 1213.21 L1930.74 1213.21 L1931.32 1213.21 L1931.91 1213.21 L1932.5 1213.21 L1933.08 1213.21 L1933.67 1213.21 L1934.25 1213.21 L1934.84 1213.21 L1935.43 1213.21 L1936.01 1213.21 L1936.6 1213.21 L1937.19 1213.21 L1937.77 1213.21 L1938.36 1213.21 L1938.95 1213.21 L1939.53 1213.21 L1940.12 1213.21 L1940.71 1213.21 L1941.29 1213.21 L1941.88 1213.21 L1942.46 1213.21 L1943.05 1213.21 L1943.64 1213.21 L1944.22 1213.21 L1944.81 1213.21 L1945.4 1213.21 L1945.98 1213.21 L1946.57 1213.21 L1947.16 1213.21 L1947.74 1213.21 L1948.33 1213.21 L1948.91 1213.21 L1949.5 1213.21 L1950.09 1213.21 L1950.67 1213.21 L1951.26 1213.21 L1951.85 1213.21 L1952.43 1213.21 L1953.02 1213.21 L1953.61 1213.21 L1954.19 1213.21 L1954.78 1213.21 L1955.37 1213.21 L1955.95 1213.21 L1956.54 1213.21 L1957.12 1213.21 L1957.71 1213.21 L1958.3 1213.21 L1958.88 1213.21 L1959.47 1213.21 L1960.06 1213.21 L1960.64 1213.21 L1961.23 1213.21 L1961.82 1213.21 L1962.4 1213.21 L1962.99 1213.21 L1963.58 1213.21 L1964.16 1213.21 L1964.75 1213.21 L1965.33 1213.21 L1965.92 1213.21 L1966.51 1213.21 L1967.09 1213.21 L1967.68 1213.21 L1968.27 1213.21 L1968.85 1213.21 L1969.44 1213.21 L1970.03 1213.21 L1970.61 1213.21 L1971.2 1213.21 L1971.78 1213.21 L1972.37 1213.21 L1972.96 1213.21 L1973.54 1213.21 L1974.13 1213.21 L1974.72 1213.21 L1975.3 1213.21 L1975.89 1213.21 L1976.48 1213.21 L1977.06 1213.21 L1977.65 1213.21 L1978.24 1213.21 L1978.82 1213.21 L1979.41 1213.21 L1979.99 1213.21 L1980.58 1213.21 L1981.17 1213.21 L1981.75 1213.21 L1982.34 1213.21 L1982.93 1213.21 L1983.51 1213.21 L1984.1 1213.21 L1984.69 1213.21 L1985.27 1213.21 L1985.86 1213.21 L1986.45 1213.21 L1987.03 1213.21 L1987.62 1213.21 L1988.2 1213.21 L1988.79 1213.21 L1989.38 1213.21 L1989.96 1213.21 L1990.55 1213.21 L1991.14 1213.21 L1991.72 1213.21 L1992.31 1213.21 L1992.9 1213.21 L1993.48 1213.21 L1994.07 1213.21 L1994.65 1213.21 L1995.24 1213.21 L1995.83 1213.21 L1996.41 1213.21 L1997 1213.21 L1997.59 1213.21 L1998.17 1213.21 L1998.76 1213.21 L1999.35 1213.21 L1999.93 1213.21 L2000.52 1213.21 L2001.11 1213.21 L2001.69 1213.21 L2002.28 1213.21 L2002.86 1213.21 L2003.45 1213.21 L2004.04 1213.21 L2004.62 1213.21 L2005.21 1213.21 L2005.8 1213.21 L2006.38 1213.21 L2006.97 1213.21 L2007.56 1213.21 L2008.14 1213.21 L2008.73 1213.21 L2009.32 1213.21 L2009.9 1213.21 L2010.49 1213.21 L2011.07 1213.21 L2011.66 1213.21 L2012.25 1213.21 L2012.83 1213.21 L2013.42 1213.21 L2014.01 1213.21 L2014.59 1213.21 L2015.18 1213.21 L2015.77 1213.21 L2016.35 1213.21 L2016.94 1213.21 L2017.53 1213.21 L2018.11 1213.21 L2018.7 1213.21 L2019.28 1213.21 L2019.87 1213.21 L2020.46 1213.21 L2021.04 1213.21 L2021.63 1213.21 L2022.22 1213.21 L2022.8 1213.21 L2023.39 1213.21 L2023.98 1213.21 L2024.56 1213.21 L2025.15 1213.21 L2025.73 1213.21 L2026.32 1213.21 L2026.91 1213.21 L2027.49 1213.21 L2028.08 1213.21 L2028.67 1213.21 L2029.25 1213.21 L2029.84 1213.21 L2030.43 1213.21 L2031.01 1213.21 L2031.6 1213.21 L2032.19 1213.21 L2032.77 1213.21 L2033.36 1213.21 L2033.94 1213.21 L2034.53 1213.21 L2035.12 1213.21 L2035.7 1213.21 L2036.29 1213.21 L2036.88 1213.21 L2037.46 1213.21 L2038.05 1213.21 L2038.64 1213.21 L2039.22 1213.21 L2039.81 1213.21 L2040.4 1213.21 L2040.98 1213.21 L2041.57 1213.21 L2042.15 1213.21 L2042.74 1213.21 L2043.33 1213.21 L2043.91 1213.21 L2044.5 1213.21 L2045.09 1213.21 L2045.67 1213.21 L2046.26 1213.21 L2046.85 1213.21 L2047.43 1213.21 L2048.02 1213.21 L2048.6 1213.21 L2049.19 1213.21 L2049.78 1213.21 L2050.36 1213.21 L2050.95 1213.21 L2051.54 1213.21 L2052.12 1213.21 L2052.71 1213.21 L2053.3 1213.21 L2053.88 1213.21 L2054.47 1213.21 L2055.06 1213.21 L2055.64 1213.21 L2056.23 1213.21 L2056.81 1213.21 L2057.4 1213.21 L2057.99 1213.21 L2058.57 1213.21 L2059.16 1213.21 L2059.75 1213.21 L2060.33 1213.21 L2060.92 1213.21 L2061.51 1213.21 L2062.09 1213.21 L2062.68 1213.21 L2063.27 1213.21 L2063.85 1213.21 L2064.44 1213.21 L2065.02 1213.21 L2065.61 1213.21 L2066.2 1213.21 L2066.78 1213.21 L2067.37 1213.21 L2067.96 1213.21 L2068.54 1213.21 L2069.13 1213.21 L2069.72 1213.21 L2070.3 1213.21 L2070.89 1213.21 L2071.48 1213.21 L2072.06 1213.21 L2072.65 1213.21 L2073.23 1213.21 L2073.82 1213.21 L2074.41 1213.21 L2074.99 1213.21 L2075.58 1213.21 L2076.17 1213.21 L2076.75 1213.21 L2077.34 1213.21 L2077.93 1213.21 L2078.51 1213.21 L2079.1 1213.21 L2079.68 1213.21 L2080.27 1213.21 L2080.86 1213.21 L2081.44 1213.21 L2082.03 1213.21 L2082.62 1213.21 L2083.2 1213.21 L2083.79 1213.21 L2084.38 1213.21 L2084.96 1213.21 L2085.55 1213.21 L2086.14 1213.21 L2086.72 1213.21 L2087.31 1213.21 L2087.89 1213.21 L2088.48 1213.21 L2089.07 1213.21 L2089.65 1213.21 L2090.24 1213.21 L2090.83 1213.21 L2091.41 1213.21 L2092 1213.21 L2092.59 1213.21 L2093.17 1213.21 L2093.76 1213.21 L2094.35 1213.21 L2094.93 1213.21 L2095.52 1213.21 L2096.1 1213.21 L2096.69 1213.21 L2097.28 1213.21 L2097.86 1213.21 L2098.45 1213.21 L2099.04 1213.21 L2099.62 1213.21 L2100.21 1213.21 L2100.8 1213.21 L2101.38 1213.21 L2101.97 1213.21 L2102.55 1213.21 L2103.14 1213.21 L2103.73 1213.21 L2104.31 1213.21 L2104.9 1213.21 L2105.49 1213.21 L2106.07 1213.21 L2106.66 1213.21 L2107.25 1213.21 L2107.83 1213.21 L2108.42 1213.21 L2109.01 1213.21 L2109.59 1213.21 L2110.18 1213.21 L2110.76 1213.21 L2111.35 1213.21 L2111.94 1213.21 L2112.52 1213.21 L2113.11 1213.21 L2113.7 1213.21 L2114.28 1213.21 L2114.87 1213.21 L2115.46 1213.21 L2116.04 1213.21 L2116.63 1213.21 L2117.22 1213.21 L2117.8 1213.21 L2118.39 1213.21 L2118.97 1213.21 L2119.56 1213.21 L2120.15 1213.21 L2120.73 1213.21 L2121.32 1213.21 L2121.91 1213.21 L2122.49 1213.21 L2123.08 1213.21 L2123.67 1213.21 L2124.25 1213.21 L2124.84 1213.21 L2125.42 1213.21 L2126.01 1213.21 L2126.6 1213.21 L2127.18 1213.21 L2127.77 1213.21 L2128.36 1213.21 L2128.94 1213.21 L2129.53 1213.21 L2130.12 1213.21 L2130.7 1213.21 L2131.29 1213.21 L2131.88 1213.21 L2132.46 1213.21 L2133.05 1213.21 L2133.63 1213.21 L2134.22 1213.21 L2134.81 1213.21 L2135.39 1213.21 L2135.98 1213.21 L2136.57 1213.21 L2137.15 1213.21 L2137.74 1213.21 L2138.33 1213.21 L2138.91 1213.21 L2139.5 1213.21 L2140.09 1213.21 L2140.67 1213.21 L2141.26 1213.21 L2141.84 1213.21 L2142.43 1213.21 L2143.02 1213.21 L2143.6 1213.21 L2144.19 1213.21 L2144.78 1213.21 L2145.36 1213.21 L2145.95 1213.21 L2146.54 1213.21 L2147.12 1213.21 L2147.71 1213.21 L2148.3 1213.21 L2148.88 1213.21 L2149.47 1213.21 L2150.05 1213.21 L2150.64 1213.21 L2151.23 1213.21 L2151.81 1213.21 L2152.4 1213.21 L2152.99 1213.21 L2153.57 1213.21 L2154.16 1213.21 L2154.75 1213.21 L2155.33 1213.21 L2155.92 1213.21 L2156.5 1213.21 L2157.09 1213.21 L2157.68 1213.21 L2158.26 1213.21 L2158.26 1212.66 L2157.68 1212.66 L2157.09 1212.66 L2156.5 1212.66 L2155.92 1212.66 L2155.33 1212.66 L2154.75 1212.66 L2154.16 1212.66 L2153.57 1212.66 L2152.99 1212.66 L2152.4 1212.66 L2151.81 1212.66 L2151.23 1212.66 L2150.64 1212.66 L2150.05 1212.66 L2149.47 1212.66 L2148.88 1212.66 L2148.3 1212.66 L2147.71 1212.66 L2147.12 1212.66 L2146.54 1212.66 L2145.95 1212.66 L2145.36 1212.66 L2144.78 1212.66 L2144.19 1212.66 L2143.6 1212.66 L2143.02 1212.66 L2142.43 1212.66 L2141.84 1212.66 L2141.26 1212.66 L2140.67 1212.66 L2140.09 1212.66 L2139.5 1212.66 L2138.91 1212.66 L2138.33 1212.66 L2137.74 1212.66 L2137.15 1212.66 L2136.57 1212.66 L2135.98 1212.66 L2135.39 1212.66 L2134.81 1212.66 L2134.22 1212.66 L2133.63 1212.66 L2133.05 1212.66 L2132.46 1212.66 L2131.88 1212.66 L2131.29 1212.66 L2130.7 1212.66 L2130.12 1212.66 L2129.53 1212.66 L2128.94 1212.66 L2128.36 1212.66 L2127.77 1212.66 L2127.18 1212.66 L2126.6 1212.66 L2126.01 1212.66 L2125.42 1212.66 L2124.84 1212.66 L2124.25 1212.66 L2123.67 1212.66 L2123.08 1212.66 L2122.49 1212.66 L2121.91 1212.66 L2121.32 1212.66 L2120.73 1212.66 L2120.15 1212.66 L2119.56 1212.66 L2118.97 1212.66 L2118.39 1212.66 L2117.8 1212.66 L2117.22 1212.66 L2116.63 1212.66 L2116.04 1212.66 L2115.46 1212.66 L2114.87 1212.66 L2114.28 1212.66 L2113.7 1212.66 L2113.11 1212.66 L2112.52 1212.66 L2111.94 1212.66 L2111.35 1212.66 L2110.76 1212.66 L2110.18 1212.66 L2109.59 1212.66 L2109.01 1212.66 L2108.42 1212.66 L2107.83 1212.66 L2107.25 1212.66 L2106.66 1212.66 L2106.07 1212.66 L2105.49 1212.66 L2104.9 1212.66 L2104.31 1212.66 L2103.73 1212.66 L2103.14 1212.66 L2102.55 1212.66 L2101.97 1212.66 L2101.38 1212.66 L2100.8 1212.66 L2100.21 1212.66 L2099.62 1212.66 L2099.04 1212.66 L2098.45 1212.66 L2097.86 1212.66 L2097.28 1212.66 L2096.69 1212.66 L2096.1 1212.66 L2095.52 1212.66 L2094.93 1212.66 L2094.35 1212.66 L2093.76 1212.66 L2093.17 1212.66 L2092.59 1212.66 L2092 1212.66 L2091.41 1212.66 L2090.83 1212.66 L2090.24 1212.66 L2089.65 1212.66 L2089.07 1212.66 L2088.48 1212.66 L2087.89 1212.66 L2087.31 1212.66 L2086.72 1212.66 L2086.14 1212.66 L2085.55 1212.66 L2084.96 1212.66 L2084.38 1212.66 L2083.79 1212.66 L2083.2 1212.66 L2082.62 1212.66 L2082.03 1212.66 L2081.44 1212.66 L2080.86 1212.66 L2080.27 1212.66 L2079.68 1212.66 L2079.1 1212.66 L2078.51 1212.66 L2077.93 1212.66 L2077.34 1212.66 L2076.75 1212.66 L2076.17 1212.66 L2075.58 1212.66 L2074.99 1212.66 L2074.41 1212.66 L2073.82 1212.66 L2073.23 1212.66 L2072.65 1212.66 L2072.06 1212.66 L2071.48 1212.66 L2070.89 1212.66 L2070.3 1212.66 L2069.72 1212.66 L2069.13 1212.66 L2068.54 1212.66 L2067.96 1212.66 L2067.37 1212.66 L2066.78 1212.66 L2066.2 1212.66 L2065.61 1212.66 L2065.02 1212.66 L2064.44 1212.66 L2063.85 1212.66 L2063.27 1212.66 L2062.68 1212.66 L2062.09 1212.66 L2061.51 1212.66 L2060.92 1212.66 L2060.33 1212.66 L2059.75 1212.66 L2059.16 1212.66 L2058.57 1212.66 L2057.99 1212.66 L2057.4 1212.66 L2056.81 1212.66 L2056.23 1212.66 L2055.64 1212.66 L2055.06 1212.66 L2054.47 1212.66 L2053.88 1212.66 L2053.3 1212.66 L2052.71 1212.66 L2052.12 1212.66 L2051.54 1212.66 L2050.95 1212.66 L2050.36 1212.66 L2049.78 1212.66 L2049.19 1212.66 L2048.6 1212.66 L2048.02 1212.66 L2047.43 1212.66 L2046.85 1212.66 L2046.26 1212.66 L2045.67 1212.66 L2045.09 1212.66 L2044.5 1212.66 L2043.91 1212.66 L2043.33 1212.66 L2042.74 1212.66 L2042.15 1212.66 L2041.57 1212.66 L2040.98 1212.66 L2040.4 1212.66 L2039.81 1212.66 L2039.22 1212.66 L2038.64 1212.66 L2038.05 1212.66 L2037.46 1212.66 L2036.88 1212.66 L2036.29 1212.66 L2035.7 1212.66 L2035.12 1212.66 L2034.53 1212.66 L2033.94 1212.66 L2033.36 1212.66 L2032.77 1212.66 L2032.19 1212.66 L2031.6 1212.66 L2031.01 1212.66 L2030.43 1212.66 L2029.84 1212.66 L2029.25 1212.66 L2028.67 1212.66 L2028.08 1212.66 L2027.49 1212.66 L2026.91 1212.66 L2026.32 1212.66 L2025.73 1212.66 L2025.15 1212.66 L2024.56 1212.66 L2023.98 1212.66 L2023.39 1212.66 L2022.8 1212.66 L2022.22 1212.66 L2021.63 1212.66 L2021.04 1212.66 L2020.46 1212.66 L2019.87 1212.66 L2019.28 1212.66 L2018.7 1212.66 L2018.11 1212.66 L2017.53 1212.66 L2016.94 1212.66 L2016.35 1212.66 L2015.77 1212.66 L2015.18 1212.66 L2014.59 1212.66 L2014.01 1212.66 L2013.42 1212.66 L2012.83 1212.66 L2012.25 1212.66 L2011.66 1212.66 L2011.07 1212.66 L2010.49 1212.66 L2009.9 1212.66 L2009.32 1212.66 L2008.73 1212.66 L2008.14 1212.66 L2007.56 1212.66 L2006.97 1212.66 L2006.38 1212.66 L2005.8 1212.66 L2005.21 1212.66 L2004.62 1212.66 L2004.04 1212.66 L2003.45 1212.66 L2002.86 1212.66 L2002.28 1212.66 L2001.69 1212.66 L2001.11 1212.66 L2000.52 1212.66 L1999.93 1212.66 L1999.35 1212.66 L1998.76 1212.66 L1998.17 1212.66 L1997.59 1212.66 L1997 1212.66 L1996.41 1212.66 L1995.83 1212.66 L1995.24 1212.66 L1994.65 1212.66 L1994.07 1212.66 L1993.48 1212.66 L1992.9 1212.66 L1992.31 1212.66 L1991.72 1212.66 L1991.14 1212.66 L1990.55 1212.66 L1989.96 1212.66 L1989.38 1212.66 L1988.79 1212.66 L1988.2 1212.66 L1987.62 1212.66 L1987.03 1212.66 L1986.45 1212.66 L1985.86 1212.66 L1985.27 1212.66 L1984.69 1212.66 L1984.1 1212.66 L1983.51 1212.66 L1982.93 1212.66 L1982.34 1212.66 L1981.75 1212.66 L1981.17 1212.66 L1980.58 1212.66 L1979.99 1212.66 L1979.41 1212.66 L1978.82 1212.66 L1978.24 1212.66 L1977.65 1212.66 L1977.06 1212.66 L1976.48 1212.66 L1975.89 1212.66 L1975.3 1212.66 L1974.72 1212.66 L1974.13 1212.66 L1973.54 1212.66 L1972.96 1212.66 L1972.37 1212.66 L1971.78 1212.66 L1971.2 1212.66 L1970.61 1212.66 L1970.03 1212.66 L1969.44 1212.66 L1968.85 1212.66 L1968.27 1212.66 L1967.68 1212.66 L1967.09 1212.66 L1966.51 1212.66 L1965.92 1212.66 L1965.33 1212.66 L1964.75 1212.66 L1964.16 1212.66 L1963.58 1212.66 L1962.99 1212.66 L1962.4 1212.66 L1961.82 1212.66 L1961.23 1212.66 L1960.64 1212.66 L1960.06 1212.66 L1959.47 1212.66 L1958.88 1212.66 L1958.3 1212.66 L1957.71 1212.66 L1957.12 1212.66 L1956.54 1212.66 L1955.95 1212.66 L1955.37 1212.66 L1954.78 1212.66 L1954.19 1212.66 L1953.61 1212.66 L1953.02 1212.66 L1952.43 1212.66 L1951.85 1212.66 L1951.26 1212.66 L1950.67 1212.66 L1950.09 1212.66 L1949.5 1212.66 L1948.91 1212.66 L1948.33 1212.66 L1947.74 1212.66 L1947.16 1212.66 L1946.57 1212.66 L1945.98 1212.66 L1945.4 1212.66 L1944.81 1212.66 L1944.22 1212.66 L1943.64 1212.66 L1943.05 1212.66 L1942.46 1212.66 L1941.88 1212.66 L1941.29 1212.66 L1940.71 1212.66 L1940.12 1212.66 L1939.53 1212.66 L1938.95 1212.66 L1938.36 1212.66 L1937.77 1212.66 L1937.19 1212.66 L1936.6 1212.66 L1936.01 1212.66 L1935.43 1212.66 L1934.84 1212.66 L1934.25 1212.66 L1933.67 1212.66 L1933.08 1212.66 L1932.5 1212.66 L1931.91 1212.66 L1931.32 1212.66 L1930.74 1212.66 L1930.15 1212.66 L1929.56 1212.66 L1928.98 1212.66 L1928.39 1212.66 L1927.8 1212.66 L1927.22 1212.66 L1926.63 1212.66 L1926.04 1212.66 L1925.46 1212.66 L1924.87 1212.66 L1924.29 1212.66 L1923.7 1212.66 L1923.11 1212.66 L1922.53 1212.66 L1921.94 1212.66 L1921.35 1212.66 L1920.77 1212.66 L1920.18 1212.66 L1919.59 1212.66 L1919.01 1212.66 L1918.42 1212.66 L1917.83 1212.66 L1917.25 1212.66 L1916.66 1212.66 L1916.08 1212.66 L1915.49 1212.66 L1914.9 1212.66 L1914.32 1212.66 L1913.73 1212.66 L1913.14 1212.66 L1912.56 1212.66 L1911.97 1212.66 L1911.38 1212.66 L1910.8 1212.66 L1910.21 1212.66 L1909.63 1212.66 L1909.04 1212.66 L1908.45 1212.66 L1907.87 1212.66 L1907.28 1212.66 L1906.69 1212.66 L1906.11 1212.66 L1905.52 1212.66 L1904.93 1212.66 L1904.35 1212.66 L1903.76 1212.66 L1903.17 1212.66 L1902.59 1212.66 L1902 1212.66 L1901.42 1212.66 L1900.83 1212.66 L1900.24 1212.66 L1899.66 1212.66 L1899.07 1212.66 L1898.48 1212.66 L1897.9 1212.66 L1897.31 1212.66 L1896.72 1212.66 L1896.14 1212.66 L1895.55 1212.66 L1894.96 1212.66 L1894.38 1212.66 L1893.79 1212.66 L1893.21 1212.66 L1892.62 1212.66 L1892.03 1212.66 L1891.45 1212.66 L1890.86 1212.66 L1890.27 1212.66 L1889.69 1212.66 L1889.1 1212.66 L1888.51 1212.66 L1887.93 1212.66 L1887.34 1212.66 L1886.76 1212.66 L1886.17 1212.66 L1885.58 1212.66 L1885 1212.66 L1884.41 1212.66 L1883.82 1212.66 L1883.24 1212.66 L1882.65 1212.66 L1882.06 1212.66 L1881.48 1212.66 L1880.89 1212.66 L1880.3 1212.66 L1879.72 1212.66 L1879.13 1212.66 L1878.55 1212.66 L1877.96 1212.66 L1877.37 1212.66 L1876.79 1212.66 L1876.2 1212.66 L1875.61 1212.66 L1875.03 1212.66 L1874.44 1212.66 L1873.85 1212.66 L1873.27 1212.66 L1872.68 1212.66 L1872.09 1212.66 L1871.51 1212.66 L1870.92 1212.66 L1870.34 1212.66 L1869.75 1212.66 L1869.16 1212.66 L1868.58 1212.66 L1867.99 1212.66 L1867.4 1212.66 L1866.82 1212.66 L1866.23 1212.66 L1865.64 1212.66 L1865.06 1212.66 L1864.47 1212.66 L1863.88 1212.66 L1863.3 1212.66 L1862.71 1212.66 L1862.13 1212.66 L1861.54 1212.66 L1860.95 1212.66 L1860.37 1212.66 L1859.78 1212.66 L1859.19 1212.66 L1858.61 1212.66 L1858.02 1212.66 L1857.43 1212.66 L1856.85 1212.66 L1856.26 1212.66 L1855.68 1212.66 L1855.09 1212.66 L1854.5 1212.66 L1853.92 1212.66 L1853.33 1212.66 L1852.74 1212.66 L1852.16 1212.66 L1851.57 1212.66 L1850.98 1212.66 L1850.4 1212.66 L1849.81 1212.66 L1849.22 1212.66 L1848.64 1212.66 L1848.05 1212.66 L1847.47 1212.66 L1846.88 1212.66 L1846.29 1212.66 L1845.71 1212.66 L1845.12 1212.66 L1844.53 1212.66 L1843.95 1212.66 L1843.36 1212.66 L1842.77 1212.66 L1842.19 1212.66 L1841.6 1212.66 L1841.01 1212.66 L1840.43 1212.66 L1839.84 1212.66 L1839.26 1212.66 L1838.67 1212.66 L1838.08 1212.66 L1837.5 1212.66 L1836.91 1212.66 L1836.32 1212.66 L1835.74 1212.66 L1835.15 1212.66 L1834.56 1212.66 L1833.98 1212.66 L1833.39 1212.66 L1832.81 1212.66 L1832.22 1212.66 L1831.63 1212.66 L1831.05 1212.66 L1830.46 1212.66 L1829.87 1212.66 L1829.29 1212.66 L1828.7 1212.66 L1828.11 1212.66 L1827.53 1212.66 L1826.94 1212.66 L1826.35 1212.66 L1825.77 1212.66 L1825.18 1212.66 L1824.6 1212.66 L1824.01 1212.66 L1823.42 1212.66 L1822.84 1212.66 L1822.25 1212.66 L1821.66 1212.66 L1821.08 1212.66 L1820.49 1212.66 L1819.9 1212.66 L1819.32 1212.66 L1818.73 1212.66 L1818.14 1212.66 L1817.56 1212.66 L1816.97 1212.66 L1816.39 1212.66 L1815.8 1212.66 L1815.21 1212.66 L1814.63 1212.66 L1814.04 1212.66 L1813.45 1212.66 L1812.87 1212.66 L1812.28 1212.66 L1811.69 1212.66 L1811.11 1212.66 L1810.52 1212.66 L1809.94 1212.66 L1809.35 1212.66 L1808.76 1212.66 L1808.18 1212.66 L1807.59 1212.66 L1807 1212.66 L1806.42 1212.66 L1805.83 1212.66 L1805.24 1212.66 L1804.66 1212.66 L1804.07 1212.66 L1803.48 1212.66 L1802.9 1212.66 L1802.31 1212.66 L1801.73 1212.66 L1801.14 1212.66 L1800.55 1212.66 L1799.97 1212.66 L1799.38 1212.66 L1798.79 1212.66 L1798.21 1212.66 L1797.62 1212.66 L1797.03 1212.66 L1796.45 1212.66 L1795.86 1212.66 L1795.27 1212.66 L1794.69 1212.66 L1794.1 1212.66 L1793.52 1212.66 L1792.93 1212.66 L1792.34 1212.66 L1791.76 1212.66 L1791.17 1212.66 L1790.58 1212.66 L1790 1212.66 L1789.41 1212.66 L1788.82 1212.66 L1788.24 1212.66 L1787.65 1212.66 L1787.06 1212.66 L1786.48 1212.66 L1785.89 1212.66 L1785.31 1212.66 L1784.72 1212.66 L1784.13 1212.66 L1783.55 1212.66 L1782.96 1212.66 L1782.37 1212.66 L1781.79 1212.66 L1781.2 1212.66 L1780.61 1212.66 L1780.03 1212.66 L1779.44 1212.66 L1778.86 1212.66 L1778.27 1212.66 L1777.68 1212.66 L1777.1 1212.66 L1776.51 1212.66 L1775.92 1212.66 L1775.34 1212.66 L1774.75 1212.66 L1774.16 1212.66 L1773.58 1212.66 L1772.99 1212.66 L1772.4 1212.66 L1771.82 1212.66 L1771.23 1212.66 L1770.65 1212.66 L1770.06 1212.66 L1769.47 1212.66 L1768.89 1212.66 L1768.3 1212.66 L1767.71 1212.66 L1767.13 1212.66 L1766.54 1212.66 L1765.95 1212.66 L1765.37 1212.66 L1764.78 1212.66 L1764.19 1212.66 L1763.61 1212.66 L1763.02 1212.66 L1762.44 1212.66 L1761.85 1212.66 L1761.26 1212.66 L1760.68 1212.66 L1760.09 1212.66 L1759.5 1212.66 L1758.92 1212.66 L1758.33 1212.66 L1757.74 1212.66 L1757.16 1212.66 L1756.57 1212.66 L1755.99 1212.66 L1755.4 1212.66 L1754.81 1212.66 L1754.23 1212.66 L1753.64 1212.66 L1753.05 1212.66 L1752.47 1212.66 L1751.88 1212.66 L1751.29 1212.66 L1750.71 1212.66 L1750.12 1212.66 L1749.53 1212.66 L1748.95 1212.66 L1748.36 1212.66 L1747.78 1212.66 L1747.19 1212.66 L1746.6 1212.66 L1746.02 1212.66 L1745.43 1212.66 L1744.84 1212.66 L1744.26 1212.66 L1743.67 1212.66 L1743.08 1212.66 L1742.5 1212.66 L1741.91 1212.66 L1741.32 1212.66 L1740.74 1212.66 L1740.15 1212.66 L1739.57 1212.66 L1738.98 1212.66 L1738.39 1212.66 L1737.81 1212.66 L1737.22 1212.66 L1736.63 1212.66 L1736.05 1212.66 L1735.46 1212.66 L1734.87 1212.66 L1734.29 1212.66 L1733.7 1212.66 L1733.11 1212.66 L1732.53 1212.66 L1731.94 1212.66 L1731.36 1212.66 L1730.77 1212.66 L1730.18 1212.66 L1729.6 1212.66 L1729.01 1212.66 L1728.42 1212.66 L1727.84 1212.66 L1727.25 1212.66 L1726.66 1212.66 L1726.08 1212.66 L1725.49 1212.66 L1724.91 1212.66 L1724.32 1212.66 L1723.73 1212.66 L1723.15 1212.66 L1722.56 1212.66 L1721.97 1212.66 L1721.39 1212.66 L1720.8 1212.66 L1720.21 1212.66 L1719.63 1212.66 L1719.04 1212.66 L1718.45 1212.66 L1717.87 1212.66 L1717.28 1212.66 L1716.7 1212.66 L1716.11 1212.66 L1715.52 1212.66 L1714.94 1212.66 L1714.35 1212.66 L1713.76 1212.66 L1713.18 1212.66 L1712.59 1212.66 L1712 1212.66 L1711.42 1212.66 L1710.83 1212.66 L1710.24 1212.66 L1709.66 1212.66 L1709.07 1212.66 L1708.49 1212.66 L1707.9 1212.66 L1707.31 1212.66 L1706.73 1212.66 L1706.14 1212.66 L1705.55 1212.66 L1704.97 1212.66 L1704.38 1212.66 L1703.79 1212.66 L1703.21 1212.66 L1702.62 1212.66 L1702.04 1212.66 L1701.45 1212.66 L1700.86 1212.66 L1700.28 1212.66 L1699.69 1212.66 L1699.1 1212.66 L1698.52 1212.66 L1697.93 1212.66 L1697.34 1212.66 L1696.76 1212.66 L1696.17 1212.66 L1695.58 1212.66 L1695 1212.66 L1694.41 1212.66 L1693.83 1212.66 L1693.24 1212.66 L1692.65 1212.66 L1692.07 1212.66 L1691.48 1212.66 L1690.89 1212.66 L1690.31 1212.66 L1689.72 1212.66 L1689.13 1212.66 L1688.55 1212.66 L1687.96 1212.66 L1687.37 1212.66 L1686.79 1212.66 L1686.2 1212.66 L1685.62 1212.66 L1685.03 1212.66 L1684.44 1212.66 L1683.86 1212.66 L1683.27 1212.66 L1682.68 1212.66 L1682.1 1212.66 L1681.51 1212.66 L1680.92 1212.66 L1680.34 1212.66 L1679.75 1212.66 L1679.17 1212.66 L1678.58 1212.66 L1677.99 1212.66 L1677.41 1212.66 L1676.82 1212.66 L1676.23 1212.66 L1675.65 1212.66 L1675.06 1212.66 L1674.47 1212.66 L1673.89 1212.66 L1673.3 1212.66 L1672.71 1212.66 L1672.13 1212.66 L1671.54 1212.66 L1670.96 1212.66 L1670.37 1212.66 L1669.78 1212.66 L1669.2 1212.66 L1668.61 1212.66 L1668.02 1212.66 L1667.44 1212.66 L1666.85 1212.66 L1666.26 1212.66 L1665.68 1212.66 L1665.09 1212.66 L1664.5 1212.66 L1663.92 1212.66 L1663.33 1212.66 L1662.75 1212.66 L1662.16 1212.66 L1661.57 1212.66 L1660.99 1212.66 L1660.4 1212.66 L1659.81 1212.66 L1659.23 1212.66 L1658.64 1212.66 L1658.05 1212.66 L1657.47 1212.66 L1656.88 1212.66 L1656.29 1212.66 L1655.71 1212.66 L1655.12 1212.66 L1654.54 1212.66 L1653.95 1212.66 L1653.36 1212.66 L1652.78 1212.66 L1652.19 1212.66 L1651.6 1212.66 L1651.02 1212.66 L1650.43 1212.66 L1649.84 1212.66 L1649.26 1212.66 L1648.67 1212.66 L1648.09 1212.66 L1647.5 1212.66 L1646.91 1212.66 L1646.33 1212.66 L1645.74 1212.66 L1645.15 1212.66 L1644.57 1212.66 L1643.98 1212.66 L1643.39 1212.66 L1642.81 1212.66 L1642.22 1212.66 L1641.63 1212.66 L1641.05 1212.66 L1640.46 1212.66 L1639.88 1212.66 L1639.29 1212.66 L1638.7 1212.66 L1638.12 1212.66 L1637.53 1212.66 L1636.94 1212.66 L1636.36 1212.66 L1635.77 1212.66 L1635.18 1212.66 L1634.6 1212.66 L1634.01 1212.66 L1633.42 1212.66 L1632.84 1212.66 L1632.25 1212.66 L1631.67 1212.66 L1631.08 1212.66 L1630.49 1212.66 L1629.91 1212.66 L1629.32 1212.66 L1628.73 1212.66 L1628.15 1212.66 L1627.56 1212.66 L1626.97 1212.66 L1626.39 1212.66 L1625.8 1212.66 L1625.22 1212.66 L1624.63 1212.66 L1624.04 1212.66 L1623.46 1212.66 L1622.87 1212.66 L1622.28 1212.66 L1621.7 1212.66 L1621.11 1212.66 L1620.52 1212.66 L1619.94 1212.66 L1619.35 1212.66 L1618.76 1212.66 L1618.18 1212.66 L1617.59 1212.66 L1617.01 1212.66 L1616.42 1212.66 L1615.83 1212.66 L1615.25 1212.66 L1614.66 1212.66 L1614.07 1212.66 L1613.49 1212.66 L1612.9 1212.66 L1612.31 1212.66 L1611.73 1212.66 L1611.14 1212.66 L1610.55 1212.66 L1609.97 1212.66 L1609.38 1212.66 L1608.8 1212.66 L1608.21 1212.66 L1607.62 1212.66 L1607.04 1212.66 L1606.45 1212.66 L1605.86 1212.66 L1605.28 1212.66 L1604.69 1212.66 L1604.1 1212.66 L1603.52 1212.66 L1602.93 1212.66 L1602.34 1212.66 L1601.76 1212.66 L1601.17 1212.66 L1600.59 1212.66 L1600 1212.66 L1599.41 1212.66 L1598.83 1212.66 L1598.24 1212.66 L1597.65 1212.66 L1597.07 1212.66 L1596.48 1212.66 L1595.89 1212.66 L1595.31 1212.66 L1594.72 1212.66 L1594.14 1212.66 L1593.55 1212.66 L1592.96 1212.66 L1592.38 1212.66 L1591.79 1212.66 L1591.2 1212.66 L1590.62 1212.66 L1590.03 1212.66 L1589.44 1212.66 L1588.86 1212.66 L1588.27 1212.66 L1587.68 1212.66 L1587.1 1212.66 L1586.51 1212.66 L1585.93 1212.66 L1585.34 1212.66 L1584.75 1212.66 L1584.17 1212.66 L1583.58 1212.66 L1582.99 1212.66 L1582.41 1212.66 L1581.82 1212.66 L1581.23 1212.66 L1580.65 1212.66 L1580.06 1212.66 L1579.47 1212.66 L1578.89 1212.66 L1578.3 1212.66 L1577.72 1212.66 L1577.13 1212.66 L1576.54 1212.66 L1575.96 1212.66 L1575.37 1212.66 L1574.78 1212.66 L1574.2 1212.66 L1573.61 1212.66 L1573.02 1212.66 L1572.44 1212.66 L1571.85 1212.66 L1571.27 1212.66 L1570.68 1212.66 L1570.09 1212.66 L1569.51 1212.66 L1568.92 1212.66 L1568.33 1212.66 L1567.75 1212.66 L1567.16 1212.66 L1566.57 1212.66 L1565.99 1212.66 L1565.4 1212.66 L1564.81 1212.66 L1564.23 1212.66 L1563.64 1212.66 L1563.06 1212.66 L1562.47 1212.66 L1561.88 1212.66 L1561.3 1212.66 L1560.71 1212.66 L1560.12 1212.66 L1559.54 1212.66 L1558.95 1212.66 L1558.36 1212.66 L1557.78 1212.66 L1557.19 1212.66 L1556.6 1212.66 L1556.02 1212.66 L1555.43 1212.66 L1554.85 1212.66 L1554.26 1212.66 L1553.67 1212.66 L1553.09 1212.66 L1552.5 1212.66 L1551.91 1212.66 L1551.33 1212.66 L1550.74 1212.66 L1550.15 1212.66 L1549.57 1212.66 L1548.98 1212.66 L1548.4 1212.66 L1547.81 1212.66 L1547.22 1212.66 L1546.64 1212.66 L1546.05 1212.66 L1545.46 1212.66 L1544.88 1212.66 L1544.29 1212.66 L1543.7 1212.66 L1543.12 1212.66 L1542.53 1212.66 L1541.94 1212.66 L1541.36 1212.66 L1540.77 1212.66 L1540.19 1212.66 L1539.6 1212.66 L1539.01 1212.66 L1538.43 1212.66 L1537.84 1212.66 L1537.25 1212.66 L1536.67 1212.66 L1536.08 1212.66 L1535.49 1212.66 L1534.91 1212.66 L1534.32 1212.66 L1533.73 1212.66 L1533.15 1212.66 L1532.56 1212.66 L1531.98 1212.66 L1531.39 1212.66 L1530.8 1212.66 L1530.22 1212.66 L1529.63 1212.66 L1529.04 1212.66 L1528.46 1212.66 L1527.87 1212.66 L1527.28 1212.66 L1526.7 1212.66 L1526.11 1212.66 L1525.52 1212.66 L1524.94 1212.66 L1524.35 1212.66 L1523.77 1212.66 L1523.18 1212.66 L1522.59 1212.66 L1522.01 1212.66 L1521.42 1212.66 L1520.83 1212.66 L1520.25 1212.66 L1519.66 1212.66 L1519.07 1212.66 L1518.49 1212.66 L1517.9 1212.66 L1517.32 1212.66 L1516.73 1212.66 L1516.14 1212.66 L1515.56 1212.66 L1514.97 1212.66 L1514.38 1212.66 L1513.8 1212.66 L1513.21 1212.66 L1512.62 1212.66 L1512.04 1212.66 L1511.45 1212.66 L1510.86 1212.66 L1510.28 1212.66 L1509.69 1212.66 L1509.11 1212.66 L1508.52 1212.66 L1507.93 1212.66 L1507.35 1212.66 L1506.76 1212.66 L1506.17 1212.66 L1505.59 1212.66 L1505 1212.66 L1504.41 1212.66 L1503.83 1212.66 L1503.24 1212.66 L1502.65 1212.66 L1502.07 1212.66 L1501.48 1212.66 L1500.9 1212.66 L1500.31 1212.66 L1499.72 1212.66 L1499.14 1212.66 L1498.55 1212.66 L1497.96 1212.66 L1497.38 1212.66 L1496.79 1212.66 L1496.2 1212.66 L1495.62 1212.66 L1495.03 1212.66 L1494.45 1212.66 L1493.86 1212.66 L1493.27 1212.66 L1492.69 1212.66 L1492.1 1212.66 L1491.51 1212.66 L1490.93 1212.66 L1490.34 1212.66 L1489.75 1212.66 L1489.17 1212.66 L1488.58 1212.66 L1487.99 1212.66 L1487.41 1212.66 L1486.82 1212.66 L1486.24 1212.66 L1485.65 1212.66 L1485.06 1212.66 L1484.48 1212.66 L1483.89 1212.66 L1483.3 1212.66 L1482.72 1212.66 L1482.13 1212.66 L1481.54 1212.66 L1480.96 1212.66 L1480.37 1212.66 L1479.78 1212.66 L1479.2 1212.66 L1478.61 1212.66 L1478.03 1212.66 L1477.44 1212.66 L1476.85 1212.66 L1476.27 1212.66 L1475.68 1212.66 L1475.09 1212.66 L1474.51 1212.66 L1473.92 1212.66 L1473.33 1212.66 L1472.75 1212.66 L1472.16 1212.66 L1471.57 1212.66 L1470.99 1212.66 L1470.4 1212.66 L1469.82 1212.66 L1469.23 1212.66 L1468.64 1212.66 L1468.06 1212.66 L1467.47 1212.66 L1466.88 1212.66 L1466.3 1212.66 L1465.71 1212.66 L1465.12 1212.66 L1464.54 1212.66 L1463.95 1212.66 L1463.37 1212.66 L1462.78 1212.66 L1462.19 1212.66 L1461.61 1212.66 L1461.02 1212.66 L1460.43 1212.66 L1459.85 1212.66 L1459.26 1212.66 L1458.67 1212.66 L1458.09 1212.66 L1457.5 1212.66 L1456.91 1212.66 L1456.33 1212.66 L1455.74 1212.66 L1455.16 1212.66 L1454.57 1212.66 L1453.98 1212.66 L1453.4 1212.66 L1452.81 1212.66 L1452.22 1212.66 L1451.64 1212.66 L1451.05 1212.66 L1450.46 1212.66 L1449.88 1212.66 L1449.29 1212.66 L1448.7 1212.66 L1448.12 1212.66 L1447.53 1212.66 L1446.95 1212.66 L1446.36 1212.66 L1445.77 1212.66 L1445.19 1212.66 L1444.6 1212.66 L1444.01 1212.66 L1443.43 1212.66 L1442.84 1212.66 L1442.25 1212.66 L1441.67 1212.66 L1441.08 1212.66 L1440.5 1212.66 L1439.91 1212.66 L1439.32 1212.66 L1438.74 1212.66 L1438.15 1212.66 L1437.56 1212.66 L1436.98 1212.66 L1436.39 1212.66 L1435.8 1212.66 L1435.22 1212.66 L1434.63 1212.66 L1434.04 1212.66 L1433.46 1212.66 L1432.87 1212.66 L1432.29 1212.66 L1431.7 1212.66 L1431.11 1212.66 L1430.53 1212.66 L1429.94 1212.66 L1429.35 1212.66 L1428.77 1212.66 L1428.18 1212.66 L1427.59 1212.66 L1427.01 1212.66 L1426.42 1212.66 L1425.83 1212.66 L1425.25 1212.66 L1424.66 1212.66 L1424.08 1212.66 L1423.49 1212.66 L1422.9 1212.66 L1422.32 1212.66 L1421.73 1212.66 L1421.14 1212.66 L1420.56 1212.66 L1419.97 1212.66 L1419.38 1212.66 L1418.8 1212.66 L1418.21 1212.66 L1417.63 1212.66 L1417.04 1212.66 L1416.45 1212.66 L1415.87 1212.66 L1415.28 1212.66 L1414.69 1212.66 L1414.11 1212.66 L1413.52 1212.66 L1412.93 1212.66 L1412.35 1212.66 L1411.76 1212.66 L1411.17 1212.66 L1410.59 1212.66 L1410 1212.66 L1409.42 1212.66 L1408.83 1212.66 L1408.24 1212.66 L1407.66 1212.66 L1407.07 1212.66 L1406.48 1212.66 L1405.9 1212.66 L1405.31 1212.66 L1404.72 1212.66 L1404.14 1212.66 L1403.55 1212.66 L1402.96 1212.66 L1402.38 1212.66 L1401.79 1212.66 L1401.21 1212.66 L1400.62 1212.66 L1400.03 1212.66 L1399.45 1212.66 L1398.86 1212.66 L1398.27 1212.66 L1397.69 1212.66 L1397.1 1212.66 L1396.51 1212.66 L1395.93 1212.66 L1395.34 1212.66 L1394.75 1212.66 L1394.17 1212.66 L1393.58 1212.66 L1393 1212.66 L1392.41 1212.66 L1391.82 1212.66 L1391.24 1212.66 L1390.65 1212.66 L1390.06 1212.66 L1389.48 1212.66 L1388.89 1212.66 L1388.3 1212.66 L1387.72 1212.66 L1387.13 1212.66 L1386.55 1212.66 L1385.96 1212.66 L1385.37 1212.66 L1384.79 1212.66 L1384.2 1212.66 L1383.61 1212.66 L1383.03 1212.66 L1382.44 1212.66 L1381.85 1212.66 L1381.27 1212.66 L1380.68 1212.66 L1380.09 1212.66 L1379.51 1212.66 L1378.92 1212.66 L1378.34 1212.66 L1377.75 1212.66 L1377.16 1212.66 L1376.58 1212.66 L1375.99 1212.66 L1375.4 1212.66 L1374.82 1212.66 L1374.23 1212.66 L1373.64 1212.66 L1373.06 1212.66 L1372.47 1212.66 L1371.88 1212.66 L1371.3 1212.66 L1370.71 1212.66 L1370.13 1212.66 L1369.54 1212.66 L1368.95 1212.66 L1368.37 1212.66 L1367.78 1212.66 L1367.19 1212.66 L1366.61 1212.66 L1366.02 1212.66 L1365.43 1212.66 L1364.85 1212.66 L1364.26 1212.66 L1363.68 1212.66 L1363.09 1212.66 L1362.5 1212.66 L1361.92 1212.66 L1361.33 1212.66 L1360.74 1212.66 L1360.16 1212.66 L1359.57 1212.66 L1358.98 1212.66 L1358.4 1212.66 L1357.81 1212.66 L1357.22 1212.66 L1356.64 1212.66 L1356.05 1212.66 L1355.47 1212.66 L1354.88 1212.66 L1354.29 1212.66 L1353.71 1212.66 L1353.12 1212.66 L1352.53 1212.66 L1351.95 1212.66 L1351.36 1212.66 L1350.77 1212.66 L1350.19 1212.66 L1349.6 1212.66 L1349.01 1212.66 L1348.43 1212.66 L1347.84 1212.66 L1347.26 1212.66 L1346.67 1212.66 L1346.08 1212.66 L1345.5 1212.66 L1344.91 1212.66 L1344.32 1212.66 L1343.74 1212.66 L1343.15 1212.66 L1342.56 1212.66 L1341.98 1212.66 L1341.39 1212.66 L1340.8 1212.66 L1340.22 1212.66 L1339.63 1212.66 L1339.05 1212.66 L1338.46 1212.66 L1337.87 1212.66 L1337.29 1212.66 L1336.7 1212.66 L1336.11 1212.66 L1335.53 1212.66 L1334.94 1212.66 L1334.35 1212.66 L1333.77 1212.66 L1333.18 1212.66 L1332.6 1212.66 L1332.01 1212.66 L1331.42 1212.66 L1330.84 1212.66 L1330.25 1212.66 L1329.66 1212.66 L1329.08 1212.66 L1328.49 1212.66 L1327.9 1212.66 L1327.32 1212.66 L1326.73 1212.66 L1326.14 1212.66 L1325.56 1212.66 L1324.97 1212.66 L1324.39 1212.66 L1323.8 1212.66 L1323.21 1212.66 L1322.63 1212.66 L1322.04 1212.66 L1321.45 1212.66 L1320.87 1212.66 L1320.28 1212.66 L1319.69 1212.66 L1319.11 1212.66 L1318.52 1212.66 L1317.93 1212.66 L1317.35 1212.66 L1316.76 1212.66 L1316.18 1212.66 L1315.59 1212.66 L1315 1212.66 L1314.42 1212.66 L1313.83 1212.66 L1313.24 1212.66 L1312.66 1212.66 L1312.07 1212.66 L1311.48 1212.66 L1310.9 1212.66 L1310.31 1212.66 L1309.73 1212.66 L1309.14 1212.66 L1308.55 1212.66 L1307.97 1212.66 L1307.38 1212.66 L1306.79 1212.66 L1306.21 1212.66 L1305.62 1212.66 L1305.03 1212.66 L1304.45 1212.66 L1303.86 1212.66 L1303.27 1212.66 L1302.69 1212.66 L1302.1 1212.66 L1301.52 1212.66 L1300.93 1212.66 L1300.34 1212.66 L1299.76 1212.66 L1299.17 1212.66 L1298.58 1212.66 L1298 1212.66 L1297.41 1212.66 L1296.82 1212.66 L1296.24 1212.66 L1295.65 1212.66 L1295.06 1212.66 L1294.48 1212.66 L1293.89 1212.66 L1293.31 1212.66 L1292.72 1212.66 L1292.13 1212.66 L1291.55 1212.66 L1290.96 1212.66 L1290.37 1212.66 L1289.79 1212.66 L1289.2 1212.66 L1288.61 1212.66 L1288.03 1212.66 L1287.44 1212.66 L1286.86 1212.66 L1286.27 1212.66 L1285.68 1212.66 L1285.1 1212.66 L1284.51 1212.66 L1283.92 1212.66 L1283.34 1212.66 L1282.75 1212.66 L1282.16 1212.66 L1281.58 1212.66 L1280.99 1212.66 L1280.4 1212.66 L1279.82 1212.66 L1279.23 1212.66 L1278.65 1212.66 L1278.06 1212.66 L1277.47 1212.66 L1276.89 1212.66 L1276.3 1212.66 L1275.71 1212.66 L1275.13 1212.66 L1274.54 1212.66 L1273.95 1212.66 L1273.37 1212.66 L1272.78 1212.66 L1272.19 1212.66 L1271.61 1212.66 L1271.02 1212.66 L1270.44 1212.66 L1269.85 1212.66 L1269.26 1212.66 L1268.68 1212.66 L1268.09 1212.66 L1267.5 1212.66 L1266.92 1212.66 L1266.33 1212.66 L1265.74 1212.66 L1265.16 1212.66 L1264.57 1212.66 L1263.98 1212.66 L1263.4 1212.66 L1262.81 1212.66 L1262.23 1212.66 L1261.64 1212.66 L1261.05 1212.66 L1260.47 1212.66 L1259.88 1212.66 L1259.29 1212.66 L1258.71 1212.66 L1258.12 1212.66 L1257.53 1212.66 L1256.95 1212.66 L1256.36 1212.66 L1255.78 1212.66 L1255.19 1212.66 L1254.6 1212.66 L1254.02 1212.66 L1253.43 1212.66 L1252.84 1212.66 L1252.26 1212.66 L1251.67 1212.66 L1251.08 1212.66 L1250.5 1212.66 L1249.91 1212.66 L1249.32 1212.66 L1248.74 1212.66 L1248.15 1212.66 L1247.57 1212.66 L1246.98 1212.66 L1246.39 1212.66 L1245.81 1212.66 L1245.22 1212.66 L1244.63 1212.66 L1244.05 1212.66 L1243.46 1212.66 L1242.87 1212.66 L1242.29 1212.66 L1241.7 1212.66 L1241.11 1212.66 L1240.53 1212.66 L1239.94 1212.66 L1239.36 1212.66 L1238.77 1212.66 L1238.18 1212.66 L1237.6 1212.66 L1237.01 1212.66 L1236.42 1212.66 L1235.84 1212.66 L1235.25 1212.66 L1234.66 1212.66 L1234.08 1212.66 L1233.49 1212.66 L1232.91 1212.66 L1232.32 1212.66 L1231.73 1212.66 L1231.15 1212.66 L1230.56 1212.66 L1229.97 1212.66 L1229.39 1212.66 L1228.8 1212.66 L1228.21 1212.66 L1227.63 1212.66 L1227.04 1212.66 L1226.45 1212.66 L1225.87 1212.66 L1225.28 1212.66 L1224.7 1212.66 L1224.11 1212.66 L1223.52 1212.66 L1222.94 1212.66 L1222.35 1212.66 L1221.76 1212.66 L1221.18 1212.66 L1220.59 1212.66 L1220 1212.66 L1219.42 1212.66 L1218.83 1212.66 L1218.24 1212.66 L1217.66 1212.66 L1217.07 1212.66 L1216.49 1212.66 L1215.9 1212.66 L1215.31 1212.66 L1214.73 1212.66 L1214.14 1212.66 L1213.55 1212.66 L1212.97 1212.66 L1212.38 1212.66 L1211.79 1212.66 L1211.21 1212.66 L1210.62 1212.66 L1210.03 1212.66 L1209.45 1212.66 L1208.86 1212.66 L1208.28 1212.66 L1207.69 1212.66 L1207.1 1212.66 L1206.52 1212.66 L1205.93 1212.66 L1205.34 1212.66 L1204.76 1212.66 L1204.17 1212.66 L1203.58 1212.66 L1203 1212.66 L1202.41 1212.66 L1201.83 1212.66 L1201.24 1212.66 L1200.65 1212.66 L1200.07 1212.66 L1199.48 1212.66 L1198.89 1212.66 L1198.31 1212.66 L1197.72 1212.66 L1197.13 1212.66 L1196.55 1212.66 L1195.96 1212.66 L1195.37 1212.66 L1194.79 1212.66 L1194.2 1212.66 L1193.62 1212.66 L1193.03 1212.66 L1192.44 1212.66 L1191.86 1212.66 L1191.27 1212.66 L1190.68 1212.66 L1190.1 1212.66 L1189.51 1212.66 L1188.92 1212.66 L1188.34 1212.66 L1187.75 1212.66 L1187.16 1212.66 L1186.58 1212.66 L1185.99 1212.66 L1185.41 1212.66 L1184.82 1212.66 L1184.23 1212.66 L1183.65 1212.66 L1183.06 1212.66 L1182.47 1212.66 L1181.89 1212.66 L1181.3 1212.66 L1180.71 1212.66 L1180.13 1212.66 L1179.54 1212.66 L1178.96 1212.66 L1178.37 1212.66 L1177.78 1212.66 L1177.2 1212.66 L1176.61 1212.66 L1176.02 1212.66 L1175.44 1212.66 L1174.85 1212.66 L1174.26 1212.66 L1173.68 1212.66 L1173.09 1212.66 L1172.5 1212.66 L1171.92 1212.66 L1171.33 1212.66 L1170.75 1212.66 L1170.16 1212.66 L1169.57 1212.66 L1168.99 1212.66 L1168.4 1212.66 L1167.81 1212.66 L1167.23 1212.66 L1166.64 1212.66 L1166.05 1212.66 L1165.47 1212.66 L1164.88 1212.66 L1164.29 1212.66 L1163.71 1212.66 L1163.12 1212.66 L1162.54 1212.66 L1161.95 1212.66 L1161.36 1212.66 L1160.78 1212.66 L1160.19 1212.66 L1159.6 1212.66 L1159.02 1212.66 L1158.43 1212.66 L1157.84 1212.66 L1157.26 1212.66 L1156.67 1212.66 L1156.09 1212.66 L1155.5 1212.66 L1154.91 1212.66 L1154.33 1212.66 L1153.74 1212.66 L1153.15 1212.66 L1152.57 1212.66 L1151.98 1212.66 L1151.39 1212.66 L1150.81 1212.66 L1150.22 1212.66 L1149.63 1212.66 L1149.05 1212.66 L1148.46 1212.66 L1147.88 1212.66 L1147.29 1212.66 L1146.7 1212.66 L1146.12 1212.66 L1145.53 1212.66 L1144.94 1212.66 L1144.36 1212.66 L1143.77 1212.66 L1143.18 1212.66 L1142.6 1212.66 L1142.01 1212.66 L1141.42 1212.66 L1140.84 1212.66 L1140.25 1212.66 L1139.67 1212.66 L1139.08 1212.66 L1138.49 1212.66 L1137.91 1212.66 L1137.32 1212.66 L1136.73 1212.66 L1136.15 1212.66 L1135.56 1212.66 L1134.97 1212.66 L1134.39 1212.66 L1133.8 1212.66 L1133.21 1212.66 L1132.63 1212.66 L1132.04 1212.66 L1131.46 1212.66 L1130.87 1212.66 L1130.28 1212.66 L1129.7 1212.66 L1129.11 1212.66 L1128.52 1212.66 L1127.94 1212.66 L1127.35 1212.66 L1126.76 1212.66 L1126.18 1212.66 L1125.59 1212.66 L1125.01 1212.66 L1124.42 1212.66 L1123.83 1212.66 L1123.25 1212.66 L1122.66 1212.66 L1122.07 1212.66 L1121.49 1212.66 L1120.9 1212.66 L1120.31 1212.66 L1119.73 1212.66 L1119.14 1212.66 L1118.55 1212.66 L1117.97 1212.66 L1117.38 1212.66 L1116.8 1212.66 L1116.21 1212.66 L1115.62 1212.66 L1115.04 1212.66 L1114.45 1212.66 L1113.86 1212.66 L1113.28 1212.66 L1112.69 1212.66 L1112.1 1212.66 L1111.52 1212.66 L1110.93 1212.66 L1110.34 1212.66 L1109.76 1212.66 L1109.17 1212.66 L1108.59 1212.66 L1108 1212.66 L1107.41 1212.66 L1106.83 1212.66 L1106.24 1212.66 L1105.65 1212.66 L1105.07 1212.66 L1104.48 1212.66 L1103.89 1212.66 L1103.31 1212.66 L1102.72 1212.66 L1102.14 1212.66 L1101.55 1212.66 L1100.96 1212.66 L1100.38 1212.66 L1099.79 1212.66 L1099.2 1212.66 L1098.62 1212.66 L1098.03 1212.66 L1097.44 1212.66 L1096.86 1212.66 L1096.27 1212.66 L1095.68 1212.66 L1095.1 1212.66 L1094.51 1212.66 L1093.93 1212.66 L1093.34 1212.66 L1092.75 1212.66 L1092.17 1212.66 L1091.58 1212.66 L1090.99 1212.66 L1090.41 1212.66 L1089.82 1212.66 L1089.23 1212.66 L1088.65 1212.66 L1088.06 1212.66 L1087.47 1212.66 L1086.89 1212.66 L1086.3 1212.66 L1085.72 1212.66 L1085.13 1212.66 L1084.54 1212.66 L1083.96 1212.66 L1083.37 1212.66 L1082.78 1212.66 L1082.2 1212.66 L1081.61 1212.66 L1081.02 1212.66 L1080.44 1212.66 L1079.85 1212.66 L1079.26 1212.66 L1078.68 1212.66 L1078.09 1212.66 L1077.51 1212.66 L1076.92 1212.66 L1076.33 1212.66 L1075.75 1212.66 L1075.16 1212.66 L1074.57 1212.66 L1073.99 1212.66 L1073.4 1212.66 L1072.81 1212.66 L1072.23 1212.66 L1071.64 1212.66 L1071.06 1212.66 L1070.47 1212.66 L1069.88 1212.66 L1069.3 1212.66 L1068.71 1212.66 L1068.12 1212.66 L1067.54 1212.66 L1066.95 1212.66 L1066.36 1212.66 L1065.78 1212.66 L1065.19 1212.66 L1064.6 1212.66 L1064.02 1212.66 L1063.43 1212.66 L1062.85 1212.66 L1062.26 1212.66 L1061.67 1212.66 L1061.09 1212.66 L1060.5 1212.66 L1059.91 1212.66 L1059.33 1212.66 L1058.74 1212.66 L1058.15 1212.66 L1057.57 1212.66 L1056.98 1212.66 L1056.39 1212.66 L1055.81 1212.66 L1055.22 1212.66 L1054.64 1212.66 L1054.05 1212.66 L1053.46 1212.66 L1052.88 1212.66 L1052.29 1212.66 L1051.7 1212.66 L1051.12 1212.66 L1050.53 1212.66 L1049.94 1212.66 L1049.36 1212.66 L1048.77 1212.66 L1048.19 1212.66 L1047.6 1212.66 L1047.01 1212.66 L1046.43 1212.66 L1045.84 1212.66 L1045.25 1212.66 L1044.67 1212.66 L1044.08 1212.66 L1043.49 1212.66 L1042.91 1212.66 L1042.32 1212.66 L1041.73 1212.66 L1041.15 1212.66 L1040.56 1212.66 L1039.98 1212.66 L1039.39 1212.66 L1038.8 1212.66 L1038.22 1212.66 L1037.63 1212.66 L1037.04 1212.66 L1036.46 1212.66 L1035.87 1212.66 L1035.28 1212.66 L1034.7 1212.66 L1034.11 1212.66 L1033.52 1212.66 L1032.94 1212.66 L1032.35 1212.66 L1031.77 1212.66 L1031.18 1212.66 L1030.59 1212.66 L1030.01 1212.66 L1029.42 1212.66 L1028.83 1212.66 L1028.25 1212.66 L1027.66 1212.66 L1027.07 1212.66 L1026.49 1212.66 L1025.9 1212.66 L1025.32 1212.66 L1024.73 1212.66 L1024.14 1212.66 L1023.56 1212.66 L1022.97 1212.66 L1022.38 1212.66 L1021.8 1212.66 L1021.21 1212.66 L1020.62 1212.66 L1020.04 1212.66 L1019.45 1212.66 L1018.86 1212.66 L1018.28 1212.66 L1017.69 1212.66 L1017.11 1212.66 L1016.52 1212.66 L1015.93 1212.66 L1015.35 1212.66 L1014.76 1212.66 L1014.17 1212.66 L1013.59 1212.66 L1013 1212.66 L1012.41 1212.66 L1011.83 1212.66 L1011.24 1212.66 L1010.65 1212.66 L1010.07 1212.66 L1009.48 1212.66 L1008.9 1212.66 L1008.31 1212.66 L1007.72 1212.66 L1007.14 1212.66 L1006.55 1212.66 L1005.96 1212.66 L1005.38 1212.66 L1004.79 1212.66 L1004.2 1212.66 L1003.62 1212.66 L1003.03 1212.66 L1002.44 1212.66 L1001.86 1212.66 L1001.27 1212.66 L1000.69 1212.66 L1000.1 1212.66 L999.513 1212.66 L998.926 1212.66 L998.34 1212.66 L997.754 1212.66 L997.167 1212.66 L996.581 1212.66 L995.994 1212.66 L995.408 1212.66 L994.822 1212.66 L994.235 1212.66 L993.649 1212.66 L993.062 1212.66 L992.476 1212.66 L991.889 1212.66 L991.303 1212.66 L990.717 1212.66 L990.13 1212.66 L989.544 1212.66 L988.957 1212.66 L988.371 1212.66 L987.785 1212.66 L987.198 1212.66 L986.612 1212.66 L986.025 1212.66  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.94 986.612,1212.94 987.198,1212.94 987.785,1212.94 988.371,1212.94 988.957,1212.94 989.544,1212.94 990.13,1212.94 990.717,1212.94 991.303,1212.94 991.889,1212.94 992.476,1212.94 993.062,1212.94 993.649,1212.94 994.235,1212.94 994.822,1212.94 995.408,1212.94 995.994,1212.94 996.581,1212.94 997.167,1212.94 997.754,1212.94 998.34,1212.94 998.926,1212.94 999.513,1212.94 1000.1,1212.94 1000.69,1212.94 1001.27,1212.94 1001.86,1212.94 1002.44,1212.94 1003.03,1212.94 1003.62,1212.94 1004.2,1212.94 1004.79,1212.94 1005.38,1212.94 1005.96,1212.94 1006.55,1212.94 1007.14,1212.94 1007.72,1212.94 1008.31,1212.94 1008.9,1212.94 1009.48,1212.94 1010.07,1212.94 1010.65,1212.94 1011.24,1212.94 1011.83,1212.94 1012.41,1212.94 1013,1212.94 1013.59,1212.94 1014.17,1212.94 1014.76,1212.94 1015.35,1212.94 1015.93,1212.94 1016.52,1212.94 1017.11,1212.94 1017.69,1212.94 1018.28,1212.94 1018.86,1212.94 1019.45,1212.94 1020.04,1212.94 1020.62,1212.94 1021.21,1212.94 1021.8,1212.94 1022.38,1212.94 1022.97,1212.94 1023.56,1212.94 1024.14,1212.94 1024.73,1212.94 1025.32,1212.94 1025.9,1212.94 1026.49,1212.94 1027.07,1212.94 1027.66,1212.94 1028.25,1212.94 1028.83,1212.94 1029.42,1212.94 1030.01,1212.94 1030.59,1212.94 1031.18,1212.94 1031.77,1212.94 1032.35,1212.94 1032.94,1212.94 1033.52,1212.94 1034.11,1212.94 1034.7,1212.94 1035.28,1212.94 1035.87,1212.94 1036.46,1212.94 1037.04,1212.94 1037.63,1212.94 1038.22,1212.94 1038.8,1212.94 1039.39,1212.94 1039.98,1212.94 1040.56,1212.94 1041.15,1212.94 1041.73,1212.94 1042.32,1212.94 1042.91,1212.94 1043.49,1212.94 1044.08,1212.94 1044.67,1212.94 1045.25,1212.94 1045.84,1212.94 1046.43,1212.94 1047.01,1212.94 1047.6,1212.94 1048.19,1212.94 1048.77,1212.94 1049.36,1212.94 1049.94,1212.94 1050.53,1212.94 1051.12,1212.94 1051.7,1212.94 1052.29,1212.94 1052.88,1212.94 1053.46,1212.94 1054.05,1212.94 1054.64,1212.94 1055.22,1212.94 1055.81,1212.94 1056.39,1212.94 1056.98,1212.94 1057.57,1212.94 1058.15,1212.94 1058.74,1212.94 1059.33,1212.94 1059.91,1212.94 1060.5,1212.94 1061.09,1212.94 1061.67,1212.94 1062.26,1212.94 1062.85,1212.94 1063.43,1212.94 1064.02,1212.94 1064.6,1212.94 1065.19,1212.94 1065.78,1212.94 1066.36,1212.94 1066.95,1212.94 1067.54,1212.94 1068.12,1212.94 1068.71,1212.94 1069.3,1212.94 1069.88,1212.94 1070.47,1212.94 1071.06,1212.94 1071.64,1212.94 1072.23,1212.94 1072.81,1212.94 1073.4,1212.94 1073.99,1212.94 1074.57,1212.94 1075.16,1212.94 1075.75,1212.94 1076.33,1212.94 1076.92,1212.94 1077.51,1212.94 1078.09,1212.94 1078.68,1212.94 1079.26,1212.94 1079.85,1212.94 1080.44,1212.94 1081.02,1212.94 1081.61,1212.94 1082.2,1212.94 1082.78,1212.94 1083.37,1212.94 1083.96,1212.94 1084.54,1212.94 1085.13,1212.94 1085.72,1212.94 1086.3,1212.94 1086.89,1212.94 1087.47,1212.94 1088.06,1212.94 1088.65,1212.94 1089.23,1212.94 1089.82,1212.94 1090.41,1212.94 1090.99,1212.94 1091.58,1212.94 1092.17,1212.94 1092.75,1212.94 1093.34,1212.94 1093.93,1212.94 1094.51,1212.94 1095.1,1212.94 1095.68,1212.94 1096.27,1212.94 1096.86,1212.94 1097.44,1212.94 1098.03,1212.94 1098.62,1212.94 1099.2,1212.94 1099.79,1212.94 1100.38,1212.94 1100.96,1212.94 1101.55,1212.94 1102.14,1212.94 1102.72,1212.94 1103.31,1212.94 1103.89,1212.94 1104.48,1212.94 1105.07,1212.94 1105.65,1212.94 1106.24,1212.94 1106.83,1212.94 1107.41,1212.94 1108,1212.94 1108.59,1212.94 1109.17,1212.94 1109.76,1212.94 1110.34,1212.94 1110.93,1212.94 1111.52,1212.94 1112.1,1212.94 1112.69,1212.94 1113.28,1212.94 1113.86,1212.94 1114.45,1212.94 1115.04,1212.94 1115.62,1212.94 1116.21,1212.94 1116.8,1212.94 1117.38,1212.94 1117.97,1212.94 1118.55,1212.94 1119.14,1212.94 1119.73,1212.94 1120.31,1212.94 1120.9,1212.94 1121.49,1212.94 1122.07,1212.94 1122.66,1212.94 1123.25,1212.94 1123.83,1212.94 1124.42,1212.94 1125.01,1212.94 1125.59,1212.94 1126.18,1212.94 1126.76,1212.94 1127.35,1212.94 1127.94,1212.94 1128.52,1212.94 1129.11,1212.94 1129.7,1212.94 1130.28,1212.94 1130.87,1212.94 1131.46,1212.94 1132.04,1212.94 1132.63,1212.94 1133.21,1212.94 1133.8,1212.94 1134.39,1212.94 1134.97,1212.94 1135.56,1212.94 1136.15,1212.94 1136.73,1212.94 1137.32,1212.94 1137.91,1212.94 1138.49,1212.94 1139.08,1212.94 1139.67,1212.94 1140.25,1212.94 1140.84,1212.94 1141.42,1212.94 1142.01,1212.94 1142.6,1212.94 1143.18,1212.94 1143.77,1212.94 1144.36,1212.94 1144.94,1212.94 1145.53,1212.94 1146.12,1212.94 1146.7,1212.94 1147.29,1212.94 1147.88,1212.94 1148.46,1212.94 1149.05,1212.94 1149.63,1212.94 1150.22,1212.94 1150.81,1212.94 1151.39,1212.94 1151.98,1212.94 1152.57,1212.94 1153.15,1212.94 1153.74,1212.94 1154.33,1212.94 1154.91,1212.94 1155.5,1212.94 1156.09,1212.94 1156.67,1212.94 1157.26,1212.94 1157.84,1212.94 1158.43,1212.94 1159.02,1212.94 1159.6,1212.94 1160.19,1212.94 1160.78,1212.94 1161.36,1212.94 1161.95,1212.94 1162.54,1212.94 1163.12,1212.94 1163.71,1212.94 1164.29,1212.94 1164.88,1212.94 1165.47,1212.94 1166.05,1212.94 1166.64,1212.94 1167.23,1212.94 1167.81,1212.94 1168.4,1212.94 1168.99,1212.94 1169.57,1212.94 1170.16,1212.94 1170.75,1212.94 1171.33,1212.94 1171.92,1212.94 1172.5,1212.94 1173.09,1212.94 1173.68,1212.94 1174.26,1212.94 1174.85,1212.94 1175.44,1212.94 1176.02,1212.94 1176.61,1212.94 1177.2,1212.94 1177.78,1212.94 1178.37,1212.94 1178.96,1212.94 1179.54,1212.94 1180.13,1212.94 1180.71,1212.94 1181.3,1212.94 1181.89,1212.94 1182.47,1212.94 1183.06,1212.94 1183.65,1212.94 1184.23,1212.94 1184.82,1212.94 1185.41,1212.94 1185.99,1212.94 1186.58,1212.94 1187.16,1212.94 1187.75,1212.94 1188.34,1212.94 1188.92,1212.94 1189.51,1212.94 1190.1,1212.94 1190.68,1212.94 1191.27,1212.94 1191.86,1212.94 1192.44,1212.94 1193.03,1212.94 1193.62,1212.94 1194.2,1212.94 1194.79,1212.94 1195.37,1212.94 1195.96,1212.94 1196.55,1212.94 1197.13,1212.94 1197.72,1212.94 1198.31,1212.94 1198.89,1212.94 1199.48,1212.94 1200.07,1212.94 1200.65,1212.94 1201.24,1212.94 1201.83,1212.94 1202.41,1212.94 1203,1212.94 1203.58,1212.94 1204.17,1212.94 1204.76,1212.94 1205.34,1212.94 1205.93,1212.94 1206.52,1212.94 1207.1,1212.94 1207.69,1212.94 1208.28,1212.94 1208.86,1212.94 1209.45,1212.94 1210.03,1212.94 1210.62,1212.94 1211.21,1212.94 1211.79,1212.94 1212.38,1212.94 1212.97,1212.94 1213.55,1212.94 1214.14,1212.94 1214.73,1212.94 1215.31,1212.94 1215.9,1212.94 1216.49,1212.94 1217.07,1212.94 1217.66,1212.94 1218.24,1212.94 1218.83,1212.94 1219.42,1212.94 1220,1212.94 1220.59,1212.94 1221.18,1212.94 1221.76,1212.94 1222.35,1212.94 1222.94,1212.94 1223.52,1212.94 1224.11,1212.94 1224.7,1212.94 1225.28,1212.94 1225.87,1212.94 1226.45,1212.94 1227.04,1212.94 1227.63,1212.94 1228.21,1212.94 1228.8,1212.94 1229.39,1212.94 1229.97,1212.94 1230.56,1212.94 1231.15,1212.94 1231.73,1212.94 1232.32,1212.94 1232.91,1212.94 1233.49,1212.94 1234.08,1212.94 1234.66,1212.94 1235.25,1212.94 1235.84,1212.94 1236.42,1212.94 1237.01,1212.94 1237.6,1212.94 1238.18,1212.94 1238.77,1212.94 1239.36,1212.94 1239.94,1212.94 1240.53,1212.94 1241.11,1212.94 1241.7,1212.94 1242.29,1212.94 1242.87,1212.94 1243.46,1212.94 1244.05,1212.94 1244.63,1212.94 1245.22,1212.94 1245.81,1212.94 1246.39,1212.94 1246.98,1212.94 1247.57,1212.94 1248.15,1212.94 1248.74,1212.94 1249.32,1212.94 1249.91,1212.94 1250.5,1212.94 1251.08,1212.94 1251.67,1212.94 1252.26,1212.94 1252.84,1212.94 1253.43,1212.94 1254.02,1212.94 1254.6,1212.94 1255.19,1212.94 1255.78,1212.94 1256.36,1212.94 1256.95,1212.94 1257.53,1212.94 1258.12,1212.94 1258.71,1212.94 1259.29,1212.94 1259.88,1212.94 1260.47,1212.94 1261.05,1212.94 1261.64,1212.94 1262.23,1212.94 1262.81,1212.94 1263.4,1212.94 1263.98,1212.94 1264.57,1212.94 1265.16,1212.94 1265.74,1212.94 1266.33,1212.94 1266.92,1212.94 1267.5,1212.94 1268.09,1212.94 1268.68,1212.94 1269.26,1212.94 1269.85,1212.94 1270.44,1212.94 1271.02,1212.94 1271.61,1212.94 1272.19,1212.94 1272.78,1212.94 1273.37,1212.94 1273.95,1212.94 1274.54,1212.94 1275.13,1212.94 1275.71,1212.94 1276.3,1212.94 1276.89,1212.94 1277.47,1212.94 1278.06,1212.94 1278.65,1212.94 1279.23,1212.94 1279.82,1212.94 1280.4,1212.94 1280.99,1212.94 1281.58,1212.94 1282.16,1212.94 1282.75,1212.94 1283.34,1212.94 1283.92,1212.94 1284.51,1212.94 1285.1,1212.94 1285.68,1212.94 1286.27,1212.94 1286.86,1212.94 1287.44,1212.94 1288.03,1212.94 1288.61,1212.94 1289.2,1212.94 1289.79,1212.94 1290.37,1212.94 1290.96,1212.94 1291.55,1212.94 1292.13,1212.94 1292.72,1212.94 1293.31,1212.94 1293.89,1212.94 1294.48,1212.94 1295.06,1212.94 1295.65,1212.94 1296.24,1212.94 1296.82,1212.94 1297.41,1212.94 1298,1212.94 1298.58,1212.94 1299.17,1212.94 1299.76,1212.94 1300.34,1212.94 1300.93,1212.94 1301.52,1212.94 1302.1,1212.94 1302.69,1212.94 1303.27,1212.94 1303.86,1212.94 1304.45,1212.94 1305.03,1212.94 1305.62,1212.94 1306.21,1212.94 1306.79,1212.94 1307.38,1212.94 1307.97,1212.94 1308.55,1212.94 1309.14,1212.94 1309.73,1212.94 1310.31,1212.94 1310.9,1212.94 1311.48,1212.94 1312.07,1212.94 1312.66,1212.94 1313.24,1212.94 1313.83,1212.94 1314.42,1212.94 1315,1212.94 1315.59,1212.94 1316.18,1212.94 1316.76,1212.94 1317.35,1212.94 1317.93,1212.94 1318.52,1212.94 1319.11,1212.94 1319.69,1212.94 1320.28,1212.94 1320.87,1212.94 1321.45,1212.94 1322.04,1212.94 1322.63,1212.94 1323.21,1212.94 1323.8,1212.94 1324.39,1212.94 1324.97,1212.94 1325.56,1212.94 1326.14,1212.94 1326.73,1212.94 1327.32,1212.94 1327.9,1212.94 1328.49,1212.94 1329.08,1212.94 1329.66,1212.94 1330.25,1212.94 1330.84,1212.94 1331.42,1212.94 1332.01,1212.94 1332.6,1212.94 1333.18,1212.94 1333.77,1212.94 1334.35,1212.94 1334.94,1212.94 1335.53,1212.94 1336.11,1212.94 1336.7,1212.94 1337.29,1212.94 1337.87,1212.94 1338.46,1212.94 1339.05,1212.94 1339.63,1212.94 1340.22,1212.94 1340.8,1212.94 1341.39,1212.94 1341.98,1212.94 1342.56,1212.94 1343.15,1212.94 1343.74,1212.94 1344.32,1212.94 1344.91,1212.94 1345.5,1212.94 1346.08,1212.94 1346.67,1212.94 1347.26,1212.94 1347.84,1212.94 1348.43,1212.94 1349.01,1212.94 1349.6,1212.94 1350.19,1212.94 1350.77,1212.94 1351.36,1212.94 1351.95,1212.94 1352.53,1212.94 1353.12,1212.94 1353.71,1212.94 1354.29,1212.94 1354.88,1212.94 1355.47,1212.94 1356.05,1212.94 1356.64,1212.94 1357.22,1212.94 1357.81,1212.94 1358.4,1212.94 1358.98,1212.94 1359.57,1212.94 1360.16,1212.94 1360.74,1212.94 1361.33,1212.94 1361.92,1212.94 1362.5,1212.94 1363.09,1212.94 1363.68,1212.94 1364.26,1212.94 1364.85,1212.94 1365.43,1212.94 1366.02,1212.94 1366.61,1212.94 1367.19,1212.94 1367.78,1212.94 1368.37,1212.94 1368.95,1212.94 1369.54,1212.94 1370.13,1212.94 1370.71,1212.94 1371.3,1212.94 1371.88,1212.94 1372.47,1212.94 1373.06,1212.94 1373.64,1212.94 1374.23,1212.94 1374.82,1212.94 1375.4,1212.94 1375.99,1212.94 1376.58,1212.94 1377.16,1212.94 1377.75,1212.94 1378.34,1212.94 1378.92,1212.94 1379.51,1212.94 1380.09,1212.94 1380.68,1212.94 1381.27,1212.94 1381.85,1212.94 1382.44,1212.94 1383.03,1212.94 1383.61,1212.94 1384.2,1212.94 1384.79,1212.94 1385.37,1212.94 1385.96,1212.94 1386.55,1212.94 1387.13,1212.94 1387.72,1212.94 1388.3,1212.94 1388.89,1212.94 1389.48,1212.94 1390.06,1212.94 1390.65,1212.94 1391.24,1212.94 1391.82,1212.94 1392.41,1212.94 1393,1212.94 1393.58,1212.94 1394.17,1212.94 1394.75,1212.94 1395.34,1212.94 1395.93,1212.94 1396.51,1212.94 1397.1,1212.94 1397.69,1212.94 1398.27,1212.94 1398.86,1212.94 1399.45,1212.94 1400.03,1212.94 1400.62,1212.94 1401.21,1212.94 1401.79,1212.94 1402.38,1212.94 1402.96,1212.94 1403.55,1212.94 1404.14,1212.94 1404.72,1212.94 1405.31,1212.94 1405.9,1212.94 1406.48,1212.94 1407.07,1212.94 1407.66,1212.94 1408.24,1212.94 1408.83,1212.94 1409.42,1212.94 1410,1212.94 1410.59,1212.94 1411.17,1212.94 1411.76,1212.94 1412.35,1212.94 1412.93,1212.94 1413.52,1212.94 1414.11,1212.94 1414.69,1212.94 1415.28,1212.94 1415.87,1212.94 1416.45,1212.94 1417.04,1212.94 1417.63,1212.94 1418.21,1212.94 1418.8,1212.94 1419.38,1212.94 1419.97,1212.94 1420.56,1212.94 1421.14,1212.94 1421.73,1212.94 1422.32,1212.94 1422.9,1212.94 1423.49,1212.94 1424.08,1212.94 1424.66,1212.94 1425.25,1212.94 1425.83,1212.94 1426.42,1212.94 1427.01,1212.94 1427.59,1212.94 1428.18,1212.94 1428.77,1212.94 1429.35,1212.94 1429.94,1212.94 1430.53,1212.94 1431.11,1212.94 1431.7,1212.94 1432.29,1212.94 1432.87,1212.94 1433.46,1212.94 1434.04,1212.94 1434.63,1212.94 1435.22,1212.94 1435.8,1212.94 1436.39,1212.94 1436.98,1212.94 1437.56,1212.94 1438.15,1212.94 1438.74,1212.94 1439.32,1212.94 1439.91,1212.94 1440.5,1212.94 1441.08,1212.94 1441.67,1212.94 1442.25,1212.94 1442.84,1212.94 1443.43,1212.94 1444.01,1212.94 1444.6,1212.94 1445.19,1212.94 1445.77,1212.94 1446.36,1212.94 1446.95,1212.94 1447.53,1212.94 1448.12,1212.94 1448.7,1212.94 1449.29,1212.94 1449.88,1212.94 1450.46,1212.94 1451.05,1212.94 1451.64,1212.94 1452.22,1212.94 1452.81,1212.94 1453.4,1212.94 1453.98,1212.94 1454.57,1212.94 1455.16,1212.94 1455.74,1212.94 1456.33,1212.94 1456.91,1212.94 1457.5,1212.94 1458.09,1212.94 1458.67,1212.94 1459.26,1212.94 1459.85,1212.94 1460.43,1212.94 1461.02,1212.94 1461.61,1212.94 1462.19,1212.94 1462.78,1212.94 1463.37,1212.94 1463.95,1212.94 1464.54,1212.94 1465.12,1212.94 1465.71,1212.94 1466.3,1212.94 1466.88,1212.94 1467.47,1212.94 1468.06,1212.94 1468.64,1212.94 1469.23,1212.94 1469.82,1212.94 1470.4,1212.94 1470.99,1212.94 1471.57,1212.94 1472.16,1212.94 1472.75,1212.94 1473.33,1212.94 1473.92,1212.94 1474.51,1212.94 1475.09,1212.94 1475.68,1212.94 1476.27,1212.94 1476.85,1212.94 1477.44,1212.94 1478.03,1212.94 1478.61,1212.94 1479.2,1212.94 1479.78,1212.94 1480.37,1212.94 1480.96,1212.94 1481.54,1212.94 1482.13,1212.94 1482.72,1212.94 1483.3,1212.94 1483.89,1212.94 1484.48,1212.94 1485.06,1212.94 1485.65,1212.94 1486.24,1212.94 1486.82,1212.94 1487.41,1212.94 1487.99,1212.94 1488.58,1212.94 1489.17,1212.94 1489.75,1212.94 1490.34,1212.94 1490.93,1212.94 1491.51,1212.94 1492.1,1212.94 1492.69,1212.94 1493.27,1212.94 1493.86,1212.94 1494.45,1212.94 1495.03,1212.94 1495.62,1212.94 1496.2,1212.94 1496.79,1212.94 1497.38,1212.94 1497.96,1212.94 1498.55,1212.94 1499.14,1212.94 1499.72,1212.94 1500.31,1212.94 1500.9,1212.94 1501.48,1212.94 1502.07,1212.94 1502.65,1212.94 1503.24,1212.94 1503.83,1212.94 1504.41,1212.94 1505,1212.94 1505.59,1212.94 1506.17,1212.94 1506.76,1212.94 1507.35,1212.94 1507.93,1212.94 1508.52,1212.94 1509.11,1212.94 1509.69,1212.94 1510.28,1212.94 1510.86,1212.94 1511.45,1212.94 1512.04,1212.94 1512.62,1212.94 1513.21,1212.94 1513.8,1212.94 1514.38,1212.94 1514.97,1212.94 1515.56,1212.94 1516.14,1212.94 1516.73,1212.94 1517.32,1212.94 1517.9,1212.94 1518.49,1212.94 1519.07,1212.94 1519.66,1212.94 1520.25,1212.94 1520.83,1212.94 1521.42,1212.94 1522.01,1212.94 1522.59,1212.94 1523.18,1212.94 1523.77,1212.94 1524.35,1212.94 1524.94,1212.94 1525.52,1212.94 1526.11,1212.94 1526.7,1212.94 1527.28,1212.94 1527.87,1212.94 1528.46,1212.94 1529.04,1212.94 1529.63,1212.94 1530.22,1212.94 1530.8,1212.94 1531.39,1212.94 1531.98,1212.94 1532.56,1212.94 1533.15,1212.94 1533.73,1212.94 1534.32,1212.94 1534.91,1212.94 1535.49,1212.94 1536.08,1212.94 1536.67,1212.94 1537.25,1212.94 1537.84,1212.94 1538.43,1212.94 1539.01,1212.94 1539.6,1212.94 1540.19,1212.94 1540.77,1212.94 1541.36,1212.94 1541.94,1212.94 1542.53,1212.94 1543.12,1212.94 1543.7,1212.94 1544.29,1212.94 1544.88,1212.94 1545.46,1212.94 1546.05,1212.94 1546.64,1212.94 1547.22,1212.94 1547.81,1212.94 1548.4,1212.94 1548.98,1212.94 1549.57,1212.94 1550.15,1212.94 1550.74,1212.94 1551.33,1212.94 1551.91,1212.94 1552.5,1212.94 1553.09,1212.94 1553.67,1212.94 1554.26,1212.94 1554.85,1212.94 1555.43,1212.94 1556.02,1212.94 1556.6,1212.94 1557.19,1212.94 1557.78,1212.94 1558.36,1212.94 1558.95,1212.94 1559.54,1212.94 1560.12,1212.94 1560.71,1212.94 1561.3,1212.94 1561.88,1212.94 1562.47,1212.94 1563.06,1212.94 1563.64,1212.94 1564.23,1212.94 1564.81,1212.94 1565.4,1212.94 1565.99,1212.94 1566.57,1212.94 1567.16,1212.94 1567.75,1212.94 1568.33,1212.94 1568.92,1212.94 1569.51,1212.94 1570.09,1212.94 1570.68,1212.94 1571.27,1212.94 1571.85,1212.94 1572.44,1212.94 1573.02,1212.94 1573.61,1212.94 1574.2,1212.94 1574.78,1212.94 1575.37,1212.94 1575.96,1212.94 1576.54,1212.94 1577.13,1212.94 1577.72,1212.94 1578.3,1212.94 1578.89,1212.94 1579.47,1212.94 1580.06,1212.94 1580.65,1212.94 1581.23,1212.94 1581.82,1212.94 1582.41,1212.94 1582.99,1212.94 1583.58,1212.94 1584.17,1212.94 1584.75,1212.94 1585.34,1212.94 1585.93,1212.94 1586.51,1212.94 1587.1,1212.94 1587.68,1212.94 1588.27,1212.94 1588.86,1212.94 1589.44,1212.94 1590.03,1212.94 1590.62,1212.94 1591.2,1212.94 1591.79,1212.94 1592.38,1212.94 1592.96,1212.94 1593.55,1212.94 1594.14,1212.94 1594.72,1212.94 1595.31,1212.94 1595.89,1212.94 1596.48,1212.94 1597.07,1212.94 1597.65,1212.94 1598.24,1212.94 1598.83,1212.94 1599.41,1212.94 1600,1212.94 1600.59,1212.94 1601.17,1212.94 1601.76,1212.94 1602.34,1212.94 1602.93,1212.94 1603.52,1212.94 1604.1,1212.94 1604.69,1212.94 1605.28,1212.94 1605.86,1212.94 1606.45,1212.94 1607.04,1212.94 1607.62,1212.94 1608.21,1212.94 1608.8,1212.94 1609.38,1212.94 1609.97,1212.94 1610.55,1212.94 1611.14,1212.94 1611.73,1212.94 1612.31,1212.94 1612.9,1212.94 1613.49,1212.94 1614.07,1212.94 1614.66,1212.94 1615.25,1212.94 1615.83,1212.94 1616.42,1212.94 1617.01,1212.94 1617.59,1212.94 1618.18,1212.94 1618.76,1212.94 1619.35,1212.94 1619.94,1212.94 1620.52,1212.94 1621.11,1212.94 1621.7,1212.94 1622.28,1212.94 1622.87,1212.94 1623.46,1212.94 1624.04,1212.94 1624.63,1212.94 1625.22,1212.94 1625.8,1212.94 1626.39,1212.94 1626.97,1212.94 1627.56,1212.94 1628.15,1212.94 1628.73,1212.94 1629.32,1212.94 1629.91,1212.94 1630.49,1212.94 1631.08,1212.94 1631.67,1212.94 1632.25,1212.94 1632.84,1212.94 1633.42,1212.94 1634.01,1212.94 1634.6,1212.94 1635.18,1212.94 1635.77,1212.94 1636.36,1212.94 1636.94,1212.94 1637.53,1212.94 1638.12,1212.94 1638.7,1212.94 1639.29,1212.94 1639.88,1212.94 1640.46,1212.94 1641.05,1212.94 1641.63,1212.94 1642.22,1212.94 1642.81,1212.94 1643.39,1212.94 1643.98,1212.94 1644.57,1212.94 1645.15,1212.94 1645.74,1212.94 1646.33,1212.94 1646.91,1212.94 1647.5,1212.94 1648.09,1212.94 1648.67,1212.94 1649.26,1212.94 1649.84,1212.94 1650.43,1212.94 1651.02,1212.94 1651.6,1212.94 1652.19,1212.94 1652.78,1212.94 1653.36,1212.94 1653.95,1212.94 1654.54,1212.94 1655.12,1212.94 1655.71,1212.94 1656.29,1212.94 1656.88,1212.94 1657.47,1212.94 1658.05,1212.94 1658.64,1212.94 1659.23,1212.94 1659.81,1212.94 1660.4,1212.94 1660.99,1212.94 1661.57,1212.94 1662.16,1212.94 1662.75,1212.94 1663.33,1212.94 1663.92,1212.94 1664.5,1212.94 1665.09,1212.94 1665.68,1212.94 1666.26,1212.94 1666.85,1212.94 1667.44,1212.94 1668.02,1212.94 1668.61,1212.94 1669.2,1212.94 1669.78,1212.94 1670.37,1212.94 1670.96,1212.94 1671.54,1212.94 1672.13,1212.94 1672.71,1212.94 1673.3,1212.94 1673.89,1212.94 1674.47,1212.94 1675.06,1212.94 1675.65,1212.94 1676.23,1212.94 1676.82,1212.94 1677.41,1212.94 1677.99,1212.94 1678.58,1212.94 1679.17,1212.94 1679.75,1212.94 1680.34,1212.94 1680.92,1212.94 1681.51,1212.94 1682.1,1212.94 1682.68,1212.94 1683.27,1212.94 1683.86,1212.94 1684.44,1212.94 1685.03,1212.94 1685.62,1212.94 1686.2,1212.94 1686.79,1212.94 1687.37,1212.94 1687.96,1212.94 1688.55,1212.94 1689.13,1212.94 1689.72,1212.94 1690.31,1212.94 1690.89,1212.94 1691.48,1212.94 1692.07,1212.94 1692.65,1212.94 1693.24,1212.94 1693.83,1212.94 1694.41,1212.94 1695,1212.94 1695.58,1212.94 1696.17,1212.94 1696.76,1212.94 1697.34,1212.94 1697.93,1212.94 1698.52,1212.94 1699.1,1212.94 1699.69,1212.94 1700.28,1212.94 1700.86,1212.94 1701.45,1212.94 1702.04,1212.94 1702.62,1212.94 1703.21,1212.94 1703.79,1212.94 1704.38,1212.94 1704.97,1212.94 1705.55,1212.94 1706.14,1212.94 1706.73,1212.94 1707.31,1212.94 1707.9,1212.94 1708.49,1212.94 1709.07,1212.94 1709.66,1212.94 1710.24,1212.94 1710.83,1212.94 1711.42,1212.94 1712,1212.94 1712.59,1212.94 1713.18,1212.94 1713.76,1212.94 1714.35,1212.94 1714.94,1212.94 1715.52,1212.94 1716.11,1212.94 1716.7,1212.94 1717.28,1212.94 1717.87,1212.94 1718.45,1212.94 1719.04,1212.94 1719.63,1212.94 1720.21,1212.94 1720.8,1212.94 1721.39,1212.94 1721.97,1212.94 1722.56,1212.94 1723.15,1212.94 1723.73,1212.94 1724.32,1212.94 1724.91,1212.94 1725.49,1212.94 1726.08,1212.94 1726.66,1212.94 1727.25,1212.94 1727.84,1212.94 1728.42,1212.94 1729.01,1212.94 1729.6,1212.94 1730.18,1212.94 1730.77,1212.94 1731.36,1212.94 1731.94,1212.94 1732.53,1212.94 1733.11,1212.94 1733.7,1212.94 1734.29,1212.94 1734.87,1212.94 1735.46,1212.94 1736.05,1212.94 1736.63,1212.94 1737.22,1212.94 1737.81,1212.94 1738.39,1212.94 1738.98,1212.94 1739.57,1212.94 1740.15,1212.94 1740.74,1212.94 1741.32,1212.94 1741.91,1212.94 1742.5,1212.94 1743.08,1212.94 1743.67,1212.94 1744.26,1212.94 1744.84,1212.94 1745.43,1212.94 1746.02,1212.94 1746.6,1212.94 1747.19,1212.94 1747.78,1212.94 1748.36,1212.94 1748.95,1212.94 1749.53,1212.94 1750.12,1212.94 1750.71,1212.94 1751.29,1212.94 1751.88,1212.94 1752.47,1212.94 1753.05,1212.94 1753.64,1212.94 1754.23,1212.94 1754.81,1212.94 1755.4,1212.94 1755.99,1212.94 1756.57,1212.94 1757.16,1212.94 1757.74,1212.94 1758.33,1212.94 1758.92,1212.94 1759.5,1212.94 1760.09,1212.94 1760.68,1212.94 1761.26,1212.94 1761.85,1212.94 1762.44,1212.94 1763.02,1212.94 1763.61,1212.94 1764.19,1212.94 1764.78,1212.94 1765.37,1212.94 1765.95,1212.94 1766.54,1212.94 1767.13,1212.94 1767.71,1212.94 1768.3,1212.94 1768.89,1212.94 1769.47,1212.94 1770.06,1212.94 1770.65,1212.94 1771.23,1212.94 1771.82,1212.94 1772.4,1212.94 1772.99,1212.94 1773.58,1212.94 1774.16,1212.94 1774.75,1212.94 1775.34,1212.94 1775.92,1212.94 1776.51,1212.94 1777.1,1212.94 1777.68,1212.94 1778.27,1212.94 1778.86,1212.94 1779.44,1212.94 1780.03,1212.94 1780.61,1212.94 1781.2,1212.94 1781.79,1212.94 1782.37,1212.94 1782.96,1212.94 1783.55,1212.94 1784.13,1212.94 1784.72,1212.94 1785.31,1212.94 1785.89,1212.94 1786.48,1212.94 1787.06,1212.94 1787.65,1212.94 1788.24,1212.94 1788.82,1212.94 1789.41,1212.94 1790,1212.94 1790.58,1212.94 1791.17,1212.94 1791.76,1212.94 1792.34,1212.94 1792.93,1212.94 1793.52,1212.94 1794.1,1212.94 1794.69,1212.94 1795.27,1212.94 1795.86,1212.94 1796.45,1212.94 1797.03,1212.94 1797.62,1212.94 1798.21,1212.94 1798.79,1212.94 1799.38,1212.94 1799.97,1212.94 1800.55,1212.94 1801.14,1212.94 1801.73,1212.94 1802.31,1212.94 1802.9,1212.94 1803.48,1212.94 1804.07,1212.94 1804.66,1212.94 1805.24,1212.94 1805.83,1212.94 1806.42,1212.94 1807,1212.94 1807.59,1212.94 1808.18,1212.94 1808.76,1212.94 1809.35,1212.94 1809.94,1212.94 1810.52,1212.94 1811.11,1212.94 1811.69,1212.94 1812.28,1212.94 1812.87,1212.94 1813.45,1212.94 1814.04,1212.94 1814.63,1212.94 1815.21,1212.94 1815.8,1212.94 1816.39,1212.94 1816.97,1212.94 1817.56,1212.94 1818.14,1212.94 1818.73,1212.94 1819.32,1212.94 1819.9,1212.94 1820.49,1212.94 1821.08,1212.94 1821.66,1212.94 1822.25,1212.94 1822.84,1212.94 1823.42,1212.94 1824.01,1212.94 1824.6,1212.94 1825.18,1212.94 1825.77,1212.94 1826.35,1212.94 1826.94,1212.94 1827.53,1212.94 1828.11,1212.94 1828.7,1212.94 1829.29,1212.94 1829.87,1212.94 1830.46,1212.94 1831.05,1212.94 1831.63,1212.94 1832.22,1212.94 1832.81,1212.94 1833.39,1212.94 1833.98,1212.94 1834.56,1212.94 1835.15,1212.94 1835.74,1212.94 1836.32,1212.94 1836.91,1212.94 1837.5,1212.94 1838.08,1212.94 1838.67,1212.94 1839.26,1212.94 1839.84,1212.94 1840.43,1212.94 1841.01,1212.94 1841.6,1212.94 1842.19,1212.94 1842.77,1212.94 1843.36,1212.94 1843.95,1212.94 1844.53,1212.94 1845.12,1212.94 1845.71,1212.94 1846.29,1212.94 1846.88,1212.94 1847.47,1212.94 1848.05,1212.94 1848.64,1212.94 1849.22,1212.94 1849.81,1212.94 1850.4,1212.94 1850.98,1212.94 1851.57,1212.94 1852.16,1212.94 1852.74,1212.94 1853.33,1212.94 1853.92,1212.94 1854.5,1212.94 1855.09,1212.94 1855.68,1212.94 1856.26,1212.94 1856.85,1212.94 1857.43,1212.94 1858.02,1212.94 1858.61,1212.94 1859.19,1212.94 1859.78,1212.94 1860.37,1212.94 1860.95,1212.94 1861.54,1212.94 1862.13,1212.94 1862.71,1212.94 1863.3,1212.94 1863.88,1212.94 1864.47,1212.94 1865.06,1212.94 1865.64,1212.94 1866.23,1212.94 1866.82,1212.94 1867.4,1212.94 1867.99,1212.94 1868.58,1212.94 1869.16,1212.94 1869.75,1212.94 1870.34,1212.94 1870.92,1212.94 1871.51,1212.94 1872.09,1212.94 1872.68,1212.94 1873.27,1212.94 1873.85,1212.94 1874.44,1212.94 1875.03,1212.94 1875.61,1212.94 1876.2,1212.94 1876.79,1212.94 1877.37,1212.94 1877.96,1212.94 1878.55,1212.94 1879.13,1212.94 1879.72,1212.94 1880.3,1212.94 1880.89,1212.94 1881.48,1212.94 1882.06,1212.94 1882.65,1212.94 1883.24,1212.94 1883.82,1212.94 1884.41,1212.94 1885,1212.94 1885.58,1212.94 1886.17,1212.94 1886.76,1212.94 1887.34,1212.94 1887.93,1212.94 1888.51,1212.94 1889.1,1212.94 1889.69,1212.94 1890.27,1212.94 1890.86,1212.94 1891.45,1212.94 1892.03,1212.94 1892.62,1212.94 1893.21,1212.94 1893.79,1212.94 1894.38,1212.94 1894.96,1212.94 1895.55,1212.94 1896.14,1212.94 1896.72,1212.94 1897.31,1212.94 1897.9,1212.94 1898.48,1212.94 1899.07,1212.94 1899.66,1212.94 1900.24,1212.94 1900.83,1212.94 1901.42,1212.94 1902,1212.94 1902.59,1212.94 1903.17,1212.94 1903.76,1212.94 1904.35,1212.94 1904.93,1212.94 1905.52,1212.94 1906.11,1212.94 1906.69,1212.94 1907.28,1212.94 1907.87,1212.94 1908.45,1212.94 1909.04,1212.94 1909.63,1212.94 1910.21,1212.94 1910.8,1212.94 1911.38,1212.94 1911.97,1212.94 1912.56,1212.94 1913.14,1212.94 1913.73,1212.94 1914.32,1212.94 1914.9,1212.94 1915.49,1212.94 1916.08,1212.94 1916.66,1212.94 1917.25,1212.94 1917.83,1212.94 1918.42,1212.94 1919.01,1212.94 1919.59,1212.94 1920.18,1212.94 1920.77,1212.94 1921.35,1212.94 1921.94,1212.94 1922.53,1212.94 1923.11,1212.94 1923.7,1212.94 1924.29,1212.94 1924.87,1212.94 1925.46,1212.94 1926.04,1212.94 1926.63,1212.94 1927.22,1212.94 1927.8,1212.94 1928.39,1212.94 1928.98,1212.94 1929.56,1212.94 1930.15,1212.94 1930.74,1212.94 1931.32,1212.94 1931.91,1212.94 1932.5,1212.94 1933.08,1212.94 1933.67,1212.94 1934.25,1212.94 1934.84,1212.94 1935.43,1212.94 1936.01,1212.94 1936.6,1212.94 1937.19,1212.94 1937.77,1212.94 1938.36,1212.94 1938.95,1212.94 1939.53,1212.94 1940.12,1212.94 1940.71,1212.94 1941.29,1212.94 1941.88,1212.94 1942.46,1212.94 1943.05,1212.94 1943.64,1212.94 1944.22,1212.94 1944.81,1212.94 1945.4,1212.94 1945.98,1212.94 1946.57,1212.94 1947.16,1212.94 1947.74,1212.94 1948.33,1212.94 1948.91,1212.94 1949.5,1212.94 1950.09,1212.94 1950.67,1212.94 1951.26,1212.94 1951.85,1212.94 1952.43,1212.94 1953.02,1212.94 1953.61,1212.94 1954.19,1212.94 1954.78,1212.94 1955.37,1212.94 1955.95,1212.94 1956.54,1212.94 1957.12,1212.94 1957.71,1212.94 1958.3,1212.94 1958.88,1212.94 1959.47,1212.94 1960.06,1212.94 1960.64,1212.94 1961.23,1212.94 1961.82,1212.94 1962.4,1212.94 1962.99,1212.94 1963.58,1212.94 1964.16,1212.94 1964.75,1212.94 1965.33,1212.94 1965.92,1212.94 1966.51,1212.94 1967.09,1212.94 1967.68,1212.94 1968.27,1212.94 1968.85,1212.94 1969.44,1212.94 1970.03,1212.94 1970.61,1212.94 1971.2,1212.94 1971.78,1212.94 1972.37,1212.94 1972.96,1212.94 1973.54,1212.94 1974.13,1212.94 1974.72,1212.94 1975.3,1212.94 1975.89,1212.94 1976.48,1212.94 1977.06,1212.94 1977.65,1212.94 1978.24,1212.94 1978.82,1212.94 1979.41,1212.94 1979.99,1212.94 1980.58,1212.94 1981.17,1212.94 1981.75,1212.94 1982.34,1212.94 1982.93,1212.94 1983.51,1212.94 1984.1,1212.94 1984.69,1212.94 1985.27,1212.94 1985.86,1212.94 1986.45,1212.94 1987.03,1212.94 1987.62,1212.94 1988.2,1212.94 1988.79,1212.94 1989.38,1212.94 1989.96,1212.94 1990.55,1212.94 1991.14,1212.94 1991.72,1212.94 1992.31,1212.94 1992.9,1212.94 1993.48,1212.94 1994.07,1212.94 1994.65,1212.94 1995.24,1212.94 1995.83,1212.94 1996.41,1212.94 1997,1212.94 1997.59,1212.94 1998.17,1212.94 1998.76,1212.94 1999.35,1212.94 1999.93,1212.94 2000.52,1212.94 2001.11,1212.94 2001.69,1212.94 2002.28,1212.94 2002.86,1212.94 2003.45,1212.94 2004.04,1212.94 2004.62,1212.94 2005.21,1212.94 2005.8,1212.94 2006.38,1212.94 2006.97,1212.94 2007.56,1212.94 2008.14,1212.94 2008.73,1212.94 2009.32,1212.94 2009.9,1212.94 2010.49,1212.94 2011.07,1212.94 2011.66,1212.94 2012.25,1212.94 2012.83,1212.94 2013.42,1212.94 2014.01,1212.94 2014.59,1212.94 2015.18,1212.94 2015.77,1212.94 2016.35,1212.94 2016.94,1212.94 2017.53,1212.94 2018.11,1212.94 2018.7,1212.94 2019.28,1212.94 2019.87,1212.94 2020.46,1212.94 2021.04,1212.94 2021.63,1212.94 2022.22,1212.94 2022.8,1212.94 2023.39,1212.94 2023.98,1212.94 2024.56,1212.94 2025.15,1212.94 2025.73,1212.94 2026.32,1212.94 2026.91,1212.94 2027.49,1212.94 2028.08,1212.94 2028.67,1212.94 2029.25,1212.94 2029.84,1212.94 2030.43,1212.94 2031.01,1212.94 2031.6,1212.94 2032.19,1212.94 2032.77,1212.94 2033.36,1212.94 2033.94,1212.94 2034.53,1212.94 2035.12,1212.94 2035.7,1212.94 2036.29,1212.94 2036.88,1212.94 2037.46,1212.94 2038.05,1212.94 2038.64,1212.94 2039.22,1212.94 2039.81,1212.94 2040.4,1212.94 2040.98,1212.94 2041.57,1212.94 2042.15,1212.94 2042.74,1212.94 2043.33,1212.94 2043.91,1212.94 2044.5,1212.94 2045.09,1212.94 2045.67,1212.94 2046.26,1212.94 2046.85,1212.94 2047.43,1212.94 2048.02,1212.94 2048.6,1212.94 2049.19,1212.94 2049.78,1212.94 2050.36,1212.94 2050.95,1212.94 2051.54,1212.94 2052.12,1212.94 2052.71,1212.94 2053.3,1212.94 2053.88,1212.94 2054.47,1212.94 2055.06,1212.94 2055.64,1212.94 2056.23,1212.94 2056.81,1212.94 2057.4,1212.94 2057.99,1212.94 2058.57,1212.94 2059.16,1212.94 2059.75,1212.94 2060.33,1212.94 2060.92,1212.94 2061.51,1212.94 2062.09,1212.94 2062.68,1212.94 2063.27,1212.94 2063.85,1212.94 2064.44,1212.94 2065.02,1212.94 2065.61,1212.94 2066.2,1212.94 2066.78,1212.94 2067.37,1212.94 2067.96,1212.94 2068.54,1212.94 2069.13,1212.94 2069.72,1212.94 2070.3,1212.94 2070.89,1212.94 2071.48,1212.94 2072.06,1212.94 2072.65,1212.94 2073.23,1212.94 2073.82,1212.94 2074.41,1212.94 2074.99,1212.94 2075.58,1212.94 2076.17,1212.94 2076.75,1212.94 2077.34,1212.94 2077.93,1212.94 2078.51,1212.94 2079.1,1212.94 2079.68,1212.94 2080.27,1212.94 2080.86,1212.94 2081.44,1212.94 2082.03,1212.94 2082.62,1212.94 2083.2,1212.94 2083.79,1212.94 2084.38,1212.94 2084.96,1212.94 2085.55,1212.94 2086.14,1212.94 2086.72,1212.94 2087.31,1212.94 2087.89,1212.94 2088.48,1212.94 2089.07,1212.94 2089.65,1212.94 2090.24,1212.94 2090.83,1212.94 2091.41,1212.94 2092,1212.94 2092.59,1212.94 2093.17,1212.94 2093.76,1212.94 2094.35,1212.94 2094.93,1212.94 2095.52,1212.94 2096.1,1212.94 2096.69,1212.94 2097.28,1212.94 2097.86,1212.94 2098.45,1212.94 2099.04,1212.94 2099.62,1212.94 2100.21,1212.94 2100.8,1212.94 2101.38,1212.94 2101.97,1212.94 2102.55,1212.94 2103.14,1212.94 2103.73,1212.94 2104.31,1212.94 2104.9,1212.94 2105.49,1212.94 2106.07,1212.94 2106.66,1212.94 2107.25,1212.94 2107.83,1212.94 2108.42,1212.94 2109.01,1212.94 2109.59,1212.94 2110.18,1212.94 2110.76,1212.94 2111.35,1212.94 2111.94,1212.94 2112.52,1212.94 2113.11,1212.94 2113.7,1212.94 2114.28,1212.94 2114.87,1212.94 2115.46,1212.94 2116.04,1212.94 2116.63,1212.94 2117.22,1212.94 2117.8,1212.94 2118.39,1212.94 2118.97,1212.94 2119.56,1212.94 2120.15,1212.94 2120.73,1212.94 2121.32,1212.94 2121.91,1212.94 2122.49,1212.94 2123.08,1212.94 2123.67,1212.94 2124.25,1212.94 2124.84,1212.94 2125.42,1212.94 2126.01,1212.94 2126.6,1212.94 2127.18,1212.94 2127.77,1212.94 2128.36,1212.94 2128.94,1212.94 2129.53,1212.94 2130.12,1212.94 2130.7,1212.94 2131.29,1212.94 2131.88,1212.94 2132.46,1212.94 2133.05,1212.94 2133.63,1212.94 2134.22,1212.94 2134.81,1212.94 2135.39,1212.94 2135.98,1212.94 2136.57,1212.94 2137.15,1212.94 2137.74,1212.94 2138.33,1212.94 2138.91,1212.94 2139.5,1212.94 2140.09,1212.94 2140.67,1212.94 2141.26,1212.94 2141.84,1212.94 2142.43,1212.94 2143.02,1212.94 2143.6,1212.94 2144.19,1212.94 2144.78,1212.94 2145.36,1212.94 2145.95,1212.94 2146.54,1212.94 2147.12,1212.94 2147.71,1212.94 2148.3,1212.94 2148.88,1212.94 2149.47,1212.94 2150.05,1212.94 2150.64,1212.94 2151.23,1212.94 2151.81,1212.94 2152.4,1212.94 2152.99,1212.94 2153.57,1212.94 2154.16,1212.94 2154.75,1212.94 2155.33,1212.94 2155.92,1212.94 2156.5,1212.94 2157.09,1212.94 2157.68,1212.94 2158.26,1212.94 \"/>\n<path clip-path=\"url(#clip042)\" d=\"M986.025 1212.9 L986.612 1212.9 L987.198 1212.9 L987.785 1212.9 L988.371 1212.9 L988.957 1212.9 L989.544 1212.9 L990.13 1212.9 L990.717 1212.9 L991.303 1212.9 L991.889 1212.9 L992.476 1212.9 L993.062 1212.9 L993.649 1212.9 L994.235 1212.9 L994.822 1212.9 L995.408 1212.9 L995.994 1212.9 L996.581 1212.9 L997.167 1212.9 L997.754 1212.9 L998.34 1212.9 L998.926 1212.9 L999.513 1212.9 L1000.1 1212.9 L1000.69 1212.9 L1001.27 1212.9 L1001.86 1212.9 L1002.44 1212.9 L1003.03 1212.9 L1003.62 1212.9 L1004.2 1212.9 L1004.79 1212.9 L1005.38 1212.9 L1005.96 1212.9 L1006.55 1212.9 L1007.14 1212.9 L1007.72 1212.9 L1008.31 1212.9 L1008.9 1212.9 L1009.48 1212.9 L1010.07 1212.9 L1010.65 1212.9 L1011.24 1212.9 L1011.83 1212.9 L1012.41 1212.9 L1013 1212.9 L1013.59 1212.9 L1014.17 1212.9 L1014.76 1212.9 L1015.35 1212.9 L1015.93 1212.9 L1016.52 1212.9 L1017.11 1212.9 L1017.69 1212.9 L1018.28 1212.9 L1018.86 1212.9 L1019.45 1212.9 L1020.04 1212.9 L1020.62 1212.9 L1021.21 1212.9 L1021.8 1212.9 L1022.38 1212.9 L1022.97 1212.9 L1023.56 1212.9 L1024.14 1212.9 L1024.73 1212.9 L1025.32 1212.9 L1025.9 1212.9 L1026.49 1212.9 L1027.07 1212.9 L1027.66 1212.9 L1028.25 1212.9 L1028.83 1212.9 L1029.42 1212.9 L1030.01 1212.9 L1030.59 1212.9 L1031.18 1212.9 L1031.77 1212.9 L1032.35 1212.9 L1032.94 1212.9 L1033.52 1212.9 L1034.11 1212.9 L1034.7 1212.9 L1035.28 1212.9 L1035.87 1212.9 L1036.46 1212.9 L1037.04 1212.9 L1037.63 1212.9 L1038.22 1212.9 L1038.8 1212.9 L1039.39 1212.9 L1039.98 1212.9 L1040.56 1212.9 L1041.15 1212.9 L1041.73 1212.9 L1042.32 1212.9 L1042.91 1212.9 L1043.49 1212.9 L1044.08 1212.9 L1044.67 1212.9 L1045.25 1212.9 L1045.84 1212.9 L1046.43 1212.9 L1047.01 1212.9 L1047.6 1212.9 L1048.19 1212.9 L1048.77 1212.9 L1049.36 1212.9 L1049.94 1212.9 L1050.53 1212.9 L1051.12 1212.9 L1051.7 1212.9 L1052.29 1212.9 L1052.88 1212.9 L1053.46 1212.9 L1054.05 1212.9 L1054.64 1212.9 L1055.22 1212.9 L1055.81 1212.9 L1056.39 1212.9 L1056.98 1212.9 L1057.57 1212.9 L1058.15 1212.9 L1058.74 1212.9 L1059.33 1212.9 L1059.91 1212.9 L1060.5 1212.9 L1061.09 1212.9 L1061.67 1212.9 L1062.26 1212.9 L1062.85 1212.9 L1063.43 1212.9 L1064.02 1212.9 L1064.6 1212.9 L1065.19 1212.9 L1065.78 1212.9 L1066.36 1212.9 L1066.95 1212.9 L1067.54 1212.9 L1068.12 1212.9 L1068.71 1212.9 L1069.3 1212.9 L1069.88 1212.9 L1070.47 1212.9 L1071.06 1212.9 L1071.64 1212.9 L1072.23 1212.9 L1072.81 1212.9 L1073.4 1212.9 L1073.99 1212.9 L1074.57 1212.9 L1075.16 1212.9 L1075.75 1212.9 L1076.33 1212.9 L1076.92 1212.9 L1077.51 1212.9 L1078.09 1212.9 L1078.68 1212.9 L1079.26 1212.9 L1079.85 1212.9 L1080.44 1212.9 L1081.02 1212.9 L1081.61 1212.9 L1082.2 1212.9 L1082.78 1212.9 L1083.37 1212.9 L1083.96 1212.9 L1084.54 1212.9 L1085.13 1212.9 L1085.72 1212.9 L1086.3 1212.9 L1086.89 1212.9 L1087.47 1212.9 L1088.06 1212.9 L1088.65 1212.9 L1089.23 1212.9 L1089.82 1212.9 L1090.41 1212.9 L1090.99 1212.9 L1091.58 1212.9 L1092.17 1212.9 L1092.75 1212.9 L1093.34 1212.9 L1093.93 1212.9 L1094.51 1212.9 L1095.1 1212.9 L1095.68 1212.9 L1096.27 1212.9 L1096.86 1212.9 L1097.44 1212.9 L1098.03 1212.9 L1098.62 1212.9 L1099.2 1212.9 L1099.79 1212.9 L1100.38 1212.9 L1100.96 1212.9 L1101.55 1212.9 L1102.14 1212.9 L1102.72 1212.9 L1103.31 1212.9 L1103.89 1212.9 L1104.48 1212.9 L1105.07 1212.9 L1105.65 1212.9 L1106.24 1212.9 L1106.83 1212.9 L1107.41 1212.9 L1108 1212.9 L1108.59 1212.9 L1109.17 1212.9 L1109.76 1212.9 L1110.34 1212.9 L1110.93 1212.9 L1111.52 1212.9 L1112.1 1212.9 L1112.69 1212.9 L1113.28 1212.9 L1113.86 1212.9 L1114.45 1212.9 L1115.04 1212.9 L1115.62 1212.9 L1116.21 1212.9 L1116.8 1212.9 L1117.38 1212.9 L1117.97 1212.9 L1118.55 1212.9 L1119.14 1212.9 L1119.73 1212.9 L1120.31 1212.9 L1120.9 1212.9 L1121.49 1212.9 L1122.07 1212.9 L1122.66 1212.9 L1123.25 1212.9 L1123.83 1212.9 L1124.42 1212.9 L1125.01 1212.9 L1125.59 1212.9 L1126.18 1212.9 L1126.76 1212.9 L1127.35 1212.9 L1127.94 1212.9 L1128.52 1212.9 L1129.11 1212.9 L1129.7 1212.9 L1130.28 1212.9 L1130.87 1212.9 L1131.46 1212.9 L1132.04 1212.9 L1132.63 1212.9 L1133.21 1212.9 L1133.8 1212.9 L1134.39 1212.9 L1134.97 1212.9 L1135.56 1212.9 L1136.15 1212.9 L1136.73 1212.9 L1137.32 1212.9 L1137.91 1212.9 L1138.49 1212.9 L1139.08 1212.9 L1139.67 1212.9 L1140.25 1212.9 L1140.84 1212.9 L1141.42 1212.9 L1142.01 1212.9 L1142.6 1212.9 L1143.18 1212.9 L1143.77 1212.9 L1144.36 1212.9 L1144.94 1212.9 L1145.53 1212.9 L1146.12 1212.9 L1146.7 1212.9 L1147.29 1212.9 L1147.88 1212.9 L1148.46 1212.9 L1149.05 1212.9 L1149.63 1212.9 L1150.22 1212.9 L1150.81 1212.9 L1151.39 1212.9 L1151.98 1212.9 L1152.57 1212.9 L1153.15 1212.9 L1153.74 1212.9 L1154.33 1212.9 L1154.91 1212.9 L1155.5 1212.9 L1156.09 1212.9 L1156.67 1212.9 L1157.26 1212.9 L1157.84 1212.9 L1158.43 1212.9 L1159.02 1212.9 L1159.6 1212.9 L1160.19 1212.9 L1160.78 1212.9 L1161.36 1212.9 L1161.95 1212.9 L1162.54 1212.9 L1163.12 1212.9 L1163.71 1212.9 L1164.29 1212.9 L1164.88 1212.9 L1165.47 1212.9 L1166.05 1212.9 L1166.64 1212.9 L1167.23 1212.9 L1167.81 1212.9 L1168.4 1212.9 L1168.99 1212.9 L1169.57 1212.9 L1170.16 1212.9 L1170.75 1212.9 L1171.33 1212.9 L1171.92 1212.9 L1172.5 1212.9 L1173.09 1212.9 L1173.68 1212.9 L1174.26 1212.9 L1174.85 1212.9 L1175.44 1212.9 L1176.02 1212.9 L1176.61 1212.9 L1177.2 1212.9 L1177.78 1212.9 L1178.37 1212.9 L1178.96 1212.9 L1179.54 1212.9 L1180.13 1212.9 L1180.71 1212.9 L1181.3 1212.9 L1181.89 1212.9 L1182.47 1212.9 L1183.06 1212.9 L1183.65 1212.9 L1184.23 1212.9 L1184.82 1212.9 L1185.41 1212.9 L1185.99 1212.9 L1186.58 1212.9 L1187.16 1212.9 L1187.75 1212.9 L1188.34 1212.9 L1188.92 1212.9 L1189.51 1212.9 L1190.1 1212.9 L1190.68 1212.9 L1191.27 1212.9 L1191.86 1212.9 L1192.44 1212.9 L1193.03 1212.9 L1193.62 1212.9 L1194.2 1212.9 L1194.79 1212.9 L1195.37 1212.9 L1195.96 1212.9 L1196.55 1212.9 L1197.13 1212.9 L1197.72 1212.9 L1198.31 1212.9 L1198.89 1212.9 L1199.48 1212.9 L1200.07 1212.9 L1200.65 1212.9 L1201.24 1212.9 L1201.83 1212.9 L1202.41 1212.9 L1203 1212.9 L1203.58 1212.9 L1204.17 1212.9 L1204.76 1212.9 L1205.34 1212.9 L1205.93 1212.9 L1206.52 1212.9 L1207.1 1212.9 L1207.69 1212.9 L1208.28 1212.9 L1208.86 1212.9 L1209.45 1212.9 L1210.03 1212.9 L1210.62 1212.9 L1211.21 1212.9 L1211.79 1212.9 L1212.38 1212.9 L1212.97 1212.9 L1213.55 1212.9 L1214.14 1212.9 L1214.73 1212.9 L1215.31 1212.9 L1215.9 1212.9 L1216.49 1212.9 L1217.07 1212.9 L1217.66 1212.9 L1218.24 1212.9 L1218.83 1212.9 L1219.42 1212.9 L1220 1212.9 L1220.59 1212.9 L1221.18 1212.9 L1221.76 1212.9 L1222.35 1212.9 L1222.94 1212.9 L1223.52 1212.9 L1224.11 1212.9 L1224.7 1212.9 L1225.28 1212.9 L1225.87 1212.9 L1226.45 1212.9 L1227.04 1212.9 L1227.63 1212.9 L1228.21 1212.9 L1228.8 1212.9 L1229.39 1212.9 L1229.97 1212.9 L1230.56 1212.9 L1231.15 1212.9 L1231.73 1212.9 L1232.32 1212.9 L1232.91 1212.9 L1233.49 1212.9 L1234.08 1212.9 L1234.66 1212.9 L1235.25 1212.9 L1235.84 1212.9 L1236.42 1212.9 L1237.01 1212.9 L1237.6 1212.9 L1238.18 1212.9 L1238.77 1212.9 L1239.36 1212.9 L1239.94 1212.9 L1240.53 1212.9 L1241.11 1212.9 L1241.7 1212.9 L1242.29 1212.9 L1242.87 1212.9 L1243.46 1212.9 L1244.05 1212.9 L1244.63 1212.9 L1245.22 1212.9 L1245.81 1212.9 L1246.39 1212.9 L1246.98 1212.9 L1247.57 1212.9 L1248.15 1212.9 L1248.74 1212.9 L1249.32 1212.9 L1249.91 1212.9 L1250.5 1212.9 L1251.08 1212.9 L1251.67 1212.9 L1252.26 1212.9 L1252.84 1212.9 L1253.43 1212.9 L1254.02 1212.9 L1254.6 1212.9 L1255.19 1212.9 L1255.78 1212.9 L1256.36 1212.9 L1256.95 1212.9 L1257.53 1212.9 L1258.12 1212.9 L1258.71 1212.9 L1259.29 1212.9 L1259.88 1212.9 L1260.47 1212.9 L1261.05 1212.9 L1261.64 1212.9 L1262.23 1212.9 L1262.81 1212.9 L1263.4 1212.9 L1263.98 1212.9 L1264.57 1212.9 L1265.16 1212.9 L1265.74 1212.9 L1266.33 1212.9 L1266.92 1212.9 L1267.5 1212.9 L1268.09 1212.9 L1268.68 1212.9 L1269.26 1212.9 L1269.85 1212.9 L1270.44 1212.9 L1271.02 1212.9 L1271.61 1212.9 L1272.19 1212.9 L1272.78 1212.9 L1273.37 1212.9 L1273.95 1212.9 L1274.54 1212.9 L1275.13 1212.9 L1275.71 1212.9 L1276.3 1212.9 L1276.89 1212.9 L1277.47 1212.9 L1278.06 1212.9 L1278.65 1212.9 L1279.23 1212.9 L1279.82 1212.9 L1280.4 1212.9 L1280.99 1212.9 L1281.58 1212.9 L1282.16 1212.9 L1282.75 1212.9 L1283.34 1212.9 L1283.92 1212.9 L1284.51 1212.9 L1285.1 1212.9 L1285.68 1212.9 L1286.27 1212.9 L1286.86 1212.9 L1287.44 1212.9 L1288.03 1212.9 L1288.61 1212.9 L1289.2 1212.9 L1289.79 1212.9 L1290.37 1212.9 L1290.96 1212.9 L1291.55 1212.9 L1292.13 1212.9 L1292.72 1212.9 L1293.31 1212.9 L1293.89 1212.9 L1294.48 1212.9 L1295.06 1212.9 L1295.65 1212.9 L1296.24 1212.9 L1296.82 1212.9 L1297.41 1212.9 L1298 1212.9 L1298.58 1212.9 L1299.17 1212.9 L1299.76 1212.9 L1300.34 1212.9 L1300.93 1212.9 L1301.52 1212.9 L1302.1 1212.9 L1302.69 1212.9 L1303.27 1212.9 L1303.86 1212.9 L1304.45 1212.9 L1305.03 1212.9 L1305.62 1212.9 L1306.21 1212.9 L1306.79 1212.9 L1307.38 1212.9 L1307.97 1212.9 L1308.55 1212.9 L1309.14 1212.9 L1309.73 1212.9 L1310.31 1212.9 L1310.9 1212.9 L1311.48 1212.9 L1312.07 1212.9 L1312.66 1212.9 L1313.24 1212.9 L1313.83 1212.9 L1314.42 1212.9 L1315 1212.9 L1315.59 1212.9 L1316.18 1212.9 L1316.76 1212.9 L1317.35 1212.9 L1317.93 1212.9 L1318.52 1212.9 L1319.11 1212.9 L1319.69 1212.9 L1320.28 1212.9 L1320.87 1212.9 L1321.45 1212.9 L1322.04 1212.9 L1322.63 1212.9 L1323.21 1212.9 L1323.8 1212.9 L1324.39 1212.9 L1324.97 1212.9 L1325.56 1212.9 L1326.14 1212.9 L1326.73 1212.9 L1327.32 1212.9 L1327.9 1212.9 L1328.49 1212.9 L1329.08 1212.9 L1329.66 1212.9 L1330.25 1212.9 L1330.84 1212.9 L1331.42 1212.9 L1332.01 1212.9 L1332.6 1212.9 L1333.18 1212.9 L1333.77 1212.9 L1334.35 1212.9 L1334.94 1212.9 L1335.53 1212.9 L1336.11 1212.9 L1336.7 1212.9 L1337.29 1212.9 L1337.87 1212.9 L1338.46 1212.9 L1339.05 1212.9 L1339.63 1212.9 L1340.22 1212.9 L1340.8 1212.9 L1341.39 1212.9 L1341.98 1212.9 L1342.56 1212.9 L1343.15 1212.9 L1343.74 1212.9 L1344.32 1212.9 L1344.91 1212.9 L1345.5 1212.9 L1346.08 1212.9 L1346.67 1212.9 L1347.26 1212.9 L1347.84 1212.9 L1348.43 1212.9 L1349.01 1212.9 L1349.6 1212.9 L1350.19 1212.9 L1350.77 1212.9 L1351.36 1212.9 L1351.95 1212.9 L1352.53 1212.9 L1353.12 1212.9 L1353.71 1212.9 L1354.29 1212.9 L1354.88 1212.9 L1355.47 1212.9 L1356.05 1212.9 L1356.64 1212.9 L1357.22 1212.9 L1357.81 1212.9 L1358.4 1212.9 L1358.98 1212.9 L1359.57 1212.9 L1360.16 1212.9 L1360.74 1212.9 L1361.33 1212.9 L1361.92 1212.9 L1362.5 1212.9 L1363.09 1212.9 L1363.68 1212.9 L1364.26 1212.9 L1364.85 1212.9 L1365.43 1212.9 L1366.02 1212.9 L1366.61 1212.9 L1367.19 1212.9 L1367.78 1212.9 L1368.37 1212.9 L1368.95 1212.9 L1369.54 1212.9 L1370.13 1212.9 L1370.71 1212.9 L1371.3 1212.9 L1371.88 1212.9 L1372.47 1212.9 L1373.06 1212.9 L1373.64 1212.9 L1374.23 1212.9 L1374.82 1212.9 L1375.4 1212.9 L1375.99 1212.9 L1376.58 1212.9 L1377.16 1212.9 L1377.75 1212.9 L1378.34 1212.9 L1378.92 1212.9 L1379.51 1212.9 L1380.09 1212.9 L1380.68 1212.9 L1381.27 1212.9 L1381.85 1212.9 L1382.44 1212.9 L1383.03 1212.9 L1383.61 1212.9 L1384.2 1212.9 L1384.79 1212.9 L1385.37 1212.9 L1385.96 1212.9 L1386.55 1212.9 L1387.13 1212.9 L1387.72 1212.9 L1388.3 1212.9 L1388.89 1212.9 L1389.48 1212.9 L1390.06 1212.9 L1390.65 1212.9 L1391.24 1212.9 L1391.82 1212.9 L1392.41 1212.9 L1393 1212.9 L1393.58 1212.9 L1394.17 1212.9 L1394.75 1212.9 L1395.34 1212.9 L1395.93 1212.9 L1396.51 1212.9 L1397.1 1212.9 L1397.69 1212.9 L1398.27 1212.9 L1398.86 1212.9 L1399.45 1212.9 L1400.03 1212.9 L1400.62 1212.9 L1401.21 1212.9 L1401.79 1212.9 L1402.38 1212.9 L1402.96 1212.9 L1403.55 1212.9 L1404.14 1212.9 L1404.72 1212.9 L1405.31 1212.9 L1405.9 1212.9 L1406.48 1212.9 L1407.07 1212.9 L1407.66 1212.9 L1408.24 1212.9 L1408.83 1212.9 L1409.42 1212.9 L1410 1212.9 L1410.59 1212.9 L1411.17 1212.9 L1411.76 1212.9 L1412.35 1212.9 L1412.93 1212.9 L1413.52 1212.9 L1414.11 1212.9 L1414.69 1212.9 L1415.28 1212.9 L1415.87 1212.9 L1416.45 1212.9 L1417.04 1212.9 L1417.63 1212.9 L1418.21 1212.9 L1418.8 1212.9 L1419.38 1212.9 L1419.97 1212.9 L1420.56 1212.9 L1421.14 1212.9 L1421.73 1212.9 L1422.32 1212.9 L1422.9 1212.9 L1423.49 1212.9 L1424.08 1212.9 L1424.66 1212.9 L1425.25 1212.9 L1425.83 1212.9 L1426.42 1212.9 L1427.01 1212.9 L1427.59 1212.9 L1428.18 1212.9 L1428.77 1212.9 L1429.35 1212.9 L1429.94 1212.9 L1430.53 1212.9 L1431.11 1212.9 L1431.7 1212.9 L1432.29 1212.9 L1432.87 1212.9 L1433.46 1212.9 L1434.04 1212.9 L1434.63 1212.9 L1435.22 1212.9 L1435.8 1212.9 L1436.39 1212.9 L1436.98 1212.9 L1437.56 1212.9 L1438.15 1212.9 L1438.74 1212.9 L1439.32 1212.9 L1439.91 1212.9 L1440.5 1212.9 L1441.08 1212.9 L1441.67 1212.9 L1442.25 1212.9 L1442.84 1212.9 L1443.43 1212.9 L1444.01 1212.9 L1444.6 1212.9 L1445.19 1212.9 L1445.77 1212.9 L1446.36 1212.9 L1446.95 1212.9 L1447.53 1212.9 L1448.12 1212.9 L1448.7 1212.9 L1449.29 1212.9 L1449.88 1212.9 L1450.46 1212.9 L1451.05 1212.9 L1451.64 1212.9 L1452.22 1212.9 L1452.81 1212.9 L1453.4 1212.9 L1453.98 1212.9 L1454.57 1212.9 L1455.16 1212.9 L1455.74 1212.9 L1456.33 1212.9 L1456.91 1212.9 L1457.5 1212.9 L1458.09 1212.9 L1458.67 1212.9 L1459.26 1212.9 L1459.85 1212.9 L1460.43 1212.9 L1461.02 1212.9 L1461.61 1212.9 L1462.19 1212.9 L1462.78 1212.9 L1463.37 1212.9 L1463.95 1212.9 L1464.54 1212.9 L1465.12 1212.9 L1465.71 1212.9 L1466.3 1212.9 L1466.88 1212.9 L1467.47 1212.9 L1468.06 1212.9 L1468.64 1212.9 L1469.23 1212.9 L1469.82 1212.9 L1470.4 1212.9 L1470.99 1212.9 L1471.57 1212.9 L1472.16 1212.9 L1472.75 1212.9 L1473.33 1212.9 L1473.92 1212.9 L1474.51 1212.9 L1475.09 1212.9 L1475.68 1212.9 L1476.27 1212.9 L1476.85 1212.9 L1477.44 1212.9 L1478.03 1212.9 L1478.61 1212.9 L1479.2 1212.9 L1479.78 1212.9 L1480.37 1212.9 L1480.96 1212.9 L1481.54 1212.9 L1482.13 1212.9 L1482.72 1212.9 L1483.3 1212.9 L1483.89 1212.9 L1484.48 1212.9 L1485.06 1212.9 L1485.65 1212.9 L1486.24 1212.9 L1486.82 1212.9 L1487.41 1212.9 L1487.99 1212.9 L1488.58 1212.9 L1489.17 1212.9 L1489.75 1212.9 L1490.34 1212.9 L1490.93 1212.9 L1491.51 1212.9 L1492.1 1212.9 L1492.69 1212.9 L1493.27 1212.9 L1493.86 1212.9 L1494.45 1212.9 L1495.03 1212.9 L1495.62 1212.9 L1496.2 1212.9 L1496.79 1212.9 L1497.38 1212.9 L1497.96 1212.9 L1498.55 1212.9 L1499.14 1212.9 L1499.72 1212.9 L1500.31 1212.9 L1500.9 1212.9 L1501.48 1212.9 L1502.07 1212.9 L1502.65 1212.9 L1503.24 1212.9 L1503.83 1212.9 L1504.41 1212.9 L1505 1212.9 L1505.59 1212.9 L1506.17 1212.9 L1506.76 1212.9 L1507.35 1212.9 L1507.93 1212.9 L1508.52 1212.9 L1509.11 1212.9 L1509.69 1212.9 L1510.28 1212.9 L1510.86 1212.9 L1511.45 1212.9 L1512.04 1212.9 L1512.62 1212.9 L1513.21 1212.9 L1513.8 1212.9 L1514.38 1212.9 L1514.97 1212.9 L1515.56 1212.9 L1516.14 1212.9 L1516.73 1212.9 L1517.32 1212.9 L1517.9 1212.9 L1518.49 1212.9 L1519.07 1212.9 L1519.66 1212.9 L1520.25 1212.9 L1520.83 1212.9 L1521.42 1212.9 L1522.01 1212.9 L1522.59 1212.9 L1523.18 1212.9 L1523.77 1212.9 L1524.35 1212.9 L1524.94 1212.9 L1525.52 1212.9 L1526.11 1212.9 L1526.7 1212.9 L1527.28 1212.9 L1527.87 1212.9 L1528.46 1212.9 L1529.04 1212.9 L1529.63 1212.9 L1530.22 1212.9 L1530.8 1212.9 L1531.39 1212.9 L1531.98 1212.9 L1532.56 1212.9 L1533.15 1212.9 L1533.73 1212.9 L1534.32 1212.9 L1534.91 1212.9 L1535.49 1212.9 L1536.08 1212.9 L1536.67 1212.9 L1537.25 1212.9 L1537.84 1212.9 L1538.43 1212.9 L1539.01 1212.9 L1539.6 1212.9 L1540.19 1212.9 L1540.77 1212.9 L1541.36 1212.9 L1541.94 1212.9 L1542.53 1212.9 L1543.12 1212.9 L1543.7 1212.9 L1544.29 1212.9 L1544.88 1212.9 L1545.46 1212.9 L1546.05 1212.9 L1546.64 1212.9 L1547.22 1212.9 L1547.81 1212.9 L1548.4 1212.9 L1548.98 1212.9 L1549.57 1212.9 L1550.15 1212.9 L1550.74 1212.9 L1551.33 1212.9 L1551.91 1212.9 L1552.5 1212.9 L1553.09 1212.9 L1553.67 1212.9 L1554.26 1212.9 L1554.85 1212.9 L1555.43 1212.9 L1556.02 1212.9 L1556.6 1212.9 L1557.19 1212.9 L1557.78 1212.9 L1558.36 1212.9 L1558.95 1212.9 L1559.54 1212.9 L1560.12 1212.9 L1560.71 1212.9 L1561.3 1212.9 L1561.88 1212.9 L1562.47 1212.9 L1563.06 1212.9 L1563.64 1212.9 L1564.23 1212.9 L1564.81 1212.9 L1565.4 1212.9 L1565.99 1212.9 L1566.57 1212.9 L1567.16 1212.9 L1567.75 1212.9 L1568.33 1212.9 L1568.92 1212.9 L1569.51 1212.9 L1570.09 1212.9 L1570.68 1212.9 L1571.27 1212.9 L1571.85 1212.9 L1572.44 1212.9 L1573.02 1212.9 L1573.61 1212.9 L1574.2 1212.9 L1574.78 1212.9 L1575.37 1212.9 L1575.96 1212.9 L1576.54 1212.9 L1577.13 1212.9 L1577.72 1212.9 L1578.3 1212.9 L1578.89 1212.9 L1579.47 1212.9 L1580.06 1212.9 L1580.65 1212.9 L1581.23 1212.9 L1581.82 1212.9 L1582.41 1212.9 L1582.99 1212.9 L1583.58 1212.9 L1584.17 1212.9 L1584.75 1212.9 L1585.34 1212.9 L1585.93 1212.9 L1586.51 1212.9 L1587.1 1212.9 L1587.68 1212.9 L1588.27 1212.9 L1588.86 1212.9 L1589.44 1212.9 L1590.03 1212.9 L1590.62 1212.9 L1591.2 1212.9 L1591.79 1212.9 L1592.38 1212.9 L1592.96 1212.9 L1593.55 1212.9 L1594.14 1212.9 L1594.72 1212.9 L1595.31 1212.9 L1595.89 1212.9 L1596.48 1212.9 L1597.07 1212.9 L1597.65 1212.9 L1598.24 1212.9 L1598.83 1212.9 L1599.41 1212.9 L1600 1212.9 L1600.59 1212.9 L1601.17 1212.9 L1601.76 1212.9 L1602.34 1212.9 L1602.93 1212.9 L1603.52 1212.9 L1604.1 1212.9 L1604.69 1212.9 L1605.28 1212.9 L1605.86 1212.9 L1606.45 1212.9 L1607.04 1212.9 L1607.62 1212.9 L1608.21 1212.9 L1608.8 1212.9 L1609.38 1212.9 L1609.97 1212.9 L1610.55 1212.9 L1611.14 1212.9 L1611.73 1212.9 L1612.31 1212.9 L1612.9 1212.9 L1613.49 1212.9 L1614.07 1212.9 L1614.66 1212.9 L1615.25 1212.9 L1615.83 1212.9 L1616.42 1212.9 L1617.01 1212.9 L1617.59 1212.9 L1618.18 1212.9 L1618.76 1212.9 L1619.35 1212.9 L1619.94 1212.9 L1620.52 1212.9 L1621.11 1212.9 L1621.7 1212.9 L1622.28 1212.9 L1622.87 1212.9 L1623.46 1212.9 L1624.04 1212.9 L1624.63 1212.9 L1625.22 1212.9 L1625.8 1212.9 L1626.39 1212.9 L1626.97 1212.9 L1627.56 1212.9 L1628.15 1212.9 L1628.73 1212.9 L1629.32 1212.9 L1629.91 1212.9 L1630.49 1212.9 L1631.08 1212.9 L1631.67 1212.9 L1632.25 1212.9 L1632.84 1212.9 L1633.42 1212.9 L1634.01 1212.9 L1634.6 1212.9 L1635.18 1212.9 L1635.77 1212.9 L1636.36 1212.9 L1636.94 1212.9 L1637.53 1212.9 L1638.12 1212.9 L1638.7 1212.9 L1639.29 1212.9 L1639.88 1212.9 L1640.46 1212.9 L1641.05 1212.9 L1641.63 1212.9 L1642.22 1212.9 L1642.81 1212.9 L1643.39 1212.9 L1643.98 1212.9 L1644.57 1212.9 L1645.15 1212.9 L1645.74 1212.9 L1646.33 1212.9 L1646.91 1212.9 L1647.5 1212.9 L1648.09 1212.9 L1648.67 1212.9 L1649.26 1212.9 L1649.84 1212.9 L1650.43 1212.9 L1651.02 1212.9 L1651.6 1212.9 L1652.19 1212.9 L1652.78 1212.9 L1653.36 1212.9 L1653.95 1212.9 L1654.54 1212.9 L1655.12 1212.9 L1655.71 1212.9 L1656.29 1212.9 L1656.88 1212.9 L1657.47 1212.9 L1658.05 1212.9 L1658.64 1212.9 L1659.23 1212.9 L1659.81 1212.9 L1660.4 1212.9 L1660.99 1212.9 L1661.57 1212.9 L1662.16 1212.9 L1662.75 1212.9 L1663.33 1212.9 L1663.92 1212.9 L1664.5 1212.9 L1665.09 1212.9 L1665.68 1212.9 L1666.26 1212.9 L1666.85 1212.9 L1667.44 1212.9 L1668.02 1212.9 L1668.61 1212.9 L1669.2 1212.9 L1669.78 1212.9 L1670.37 1212.9 L1670.96 1212.9 L1671.54 1212.9 L1672.13 1212.9 L1672.71 1212.9 L1673.3 1212.9 L1673.89 1212.9 L1674.47 1212.9 L1675.06 1212.9 L1675.65 1212.9 L1676.23 1212.9 L1676.82 1212.9 L1677.41 1212.9 L1677.99 1212.9 L1678.58 1212.9 L1679.17 1212.9 L1679.75 1212.9 L1680.34 1212.9 L1680.92 1212.9 L1681.51 1212.9 L1682.1 1212.9 L1682.68 1212.9 L1683.27 1212.9 L1683.86 1212.9 L1684.44 1212.9 L1685.03 1212.9 L1685.62 1212.9 L1686.2 1212.9 L1686.79 1212.9 L1687.37 1212.9 L1687.96 1212.9 L1688.55 1212.9 L1689.13 1212.9 L1689.72 1212.9 L1690.31 1212.9 L1690.89 1212.9 L1691.48 1212.9 L1692.07 1212.9 L1692.65 1212.9 L1693.24 1212.9 L1693.83 1212.9 L1694.41 1212.9 L1695 1212.9 L1695.58 1212.9 L1696.17 1212.9 L1696.76 1212.9 L1697.34 1212.9 L1697.93 1212.9 L1698.52 1212.9 L1699.1 1212.9 L1699.69 1212.9 L1700.28 1212.9 L1700.86 1212.9 L1701.45 1212.9 L1702.04 1212.9 L1702.62 1212.9 L1703.21 1212.9 L1703.79 1212.9 L1704.38 1212.9 L1704.97 1212.9 L1705.55 1212.9 L1706.14 1212.9 L1706.73 1212.9 L1707.31 1212.9 L1707.9 1212.9 L1708.49 1212.9 L1709.07 1212.9 L1709.66 1212.9 L1710.24 1212.9 L1710.83 1212.9 L1711.42 1212.9 L1712 1212.9 L1712.59 1212.9 L1713.18 1212.9 L1713.76 1212.9 L1714.35 1212.9 L1714.94 1212.9 L1715.52 1212.9 L1716.11 1212.9 L1716.7 1212.9 L1717.28 1212.9 L1717.87 1212.9 L1718.45 1212.9 L1719.04 1212.9 L1719.63 1212.9 L1720.21 1212.9 L1720.8 1212.9 L1721.39 1212.9 L1721.97 1212.9 L1722.56 1212.9 L1723.15 1212.9 L1723.73 1212.9 L1724.32 1212.9 L1724.91 1212.9 L1725.49 1212.9 L1726.08 1212.9 L1726.66 1212.9 L1727.25 1212.9 L1727.84 1212.9 L1728.42 1212.9 L1729.01 1212.9 L1729.6 1212.9 L1730.18 1212.9 L1730.77 1212.9 L1731.36 1212.9 L1731.94 1212.9 L1732.53 1212.9 L1733.11 1212.9 L1733.7 1212.9 L1734.29 1212.9 L1734.87 1212.9 L1735.46 1212.9 L1736.05 1212.9 L1736.63 1212.9 L1737.22 1212.9 L1737.81 1212.9 L1738.39 1212.9 L1738.98 1212.9 L1739.57 1212.9 L1740.15 1212.9 L1740.74 1212.9 L1741.32 1212.9 L1741.91 1212.9 L1742.5 1212.9 L1743.08 1212.9 L1743.67 1212.9 L1744.26 1212.9 L1744.84 1212.9 L1745.43 1212.9 L1746.02 1212.9 L1746.6 1212.9 L1747.19 1212.9 L1747.78 1212.9 L1748.36 1212.9 L1748.95 1212.9 L1749.53 1212.9 L1750.12 1212.9 L1750.71 1212.9 L1751.29 1212.9 L1751.88 1212.9 L1752.47 1212.9 L1753.05 1212.9 L1753.64 1212.9 L1754.23 1212.9 L1754.81 1212.9 L1755.4 1212.9 L1755.99 1212.9 L1756.57 1212.9 L1757.16 1212.9 L1757.74 1212.9 L1758.33 1212.9 L1758.92 1212.9 L1759.5 1212.9 L1760.09 1212.9 L1760.68 1212.9 L1761.26 1212.9 L1761.85 1212.9 L1762.44 1212.9 L1763.02 1212.9 L1763.61 1212.9 L1764.19 1212.9 L1764.78 1212.9 L1765.37 1212.9 L1765.95 1212.9 L1766.54 1212.9 L1767.13 1212.9 L1767.71 1212.9 L1768.3 1212.9 L1768.89 1212.9 L1769.47 1212.9 L1770.06 1212.9 L1770.65 1212.9 L1771.23 1212.9 L1771.82 1212.9 L1772.4 1212.9 L1772.99 1212.9 L1773.58 1212.9 L1774.16 1212.9 L1774.75 1212.9 L1775.34 1212.9 L1775.92 1212.9 L1776.51 1212.9 L1777.1 1212.9 L1777.68 1212.9 L1778.27 1212.9 L1778.86 1212.9 L1779.44 1212.9 L1780.03 1212.9 L1780.61 1212.9 L1781.2 1212.9 L1781.79 1212.9 L1782.37 1212.9 L1782.96 1212.9 L1783.55 1212.9 L1784.13 1212.9 L1784.72 1212.9 L1785.31 1212.9 L1785.89 1212.9 L1786.48 1212.9 L1787.06 1212.9 L1787.65 1212.9 L1788.24 1212.9 L1788.82 1212.9 L1789.41 1212.9 L1790 1212.9 L1790.58 1212.9 L1791.17 1212.9 L1791.76 1212.9 L1792.34 1212.9 L1792.93 1212.9 L1793.52 1212.9 L1794.1 1212.9 L1794.69 1212.9 L1795.27 1212.9 L1795.86 1212.9 L1796.45 1212.9 L1797.03 1212.9 L1797.62 1212.9 L1798.21 1212.9 L1798.79 1212.9 L1799.38 1212.9 L1799.97 1212.9 L1800.55 1212.9 L1801.14 1212.9 L1801.73 1212.9 L1802.31 1212.9 L1802.9 1212.9 L1803.48 1212.9 L1804.07 1212.9 L1804.66 1212.9 L1805.24 1212.9 L1805.83 1212.9 L1806.42 1212.9 L1807 1212.9 L1807.59 1212.9 L1808.18 1212.9 L1808.76 1212.9 L1809.35 1212.9 L1809.94 1212.9 L1810.52 1212.9 L1811.11 1212.9 L1811.69 1212.9 L1812.28 1212.9 L1812.87 1212.9 L1813.45 1212.9 L1814.04 1212.9 L1814.63 1212.9 L1815.21 1212.9 L1815.8 1212.9 L1816.39 1212.9 L1816.97 1212.9 L1817.56 1212.9 L1818.14 1212.9 L1818.73 1212.9 L1819.32 1212.9 L1819.9 1212.9 L1820.49 1212.9 L1821.08 1212.9 L1821.66 1212.9 L1822.25 1212.9 L1822.84 1212.9 L1823.42 1212.9 L1824.01 1212.9 L1824.6 1212.9 L1825.18 1212.9 L1825.77 1212.9 L1826.35 1212.9 L1826.94 1212.9 L1827.53 1212.9 L1828.11 1212.9 L1828.7 1212.9 L1829.29 1212.9 L1829.87 1212.9 L1830.46 1212.9 L1831.05 1212.9 L1831.63 1212.9 L1832.22 1212.9 L1832.81 1212.9 L1833.39 1212.9 L1833.98 1212.9 L1834.56 1212.9 L1835.15 1212.9 L1835.74 1212.9 L1836.32 1212.9 L1836.91 1212.9 L1837.5 1212.9 L1838.08 1212.9 L1838.67 1212.9 L1839.26 1212.9 L1839.84 1212.9 L1840.43 1212.9 L1841.01 1212.9 L1841.6 1212.9 L1842.19 1212.9 L1842.77 1212.9 L1843.36 1212.9 L1843.95 1212.9 L1844.53 1212.9 L1845.12 1212.9 L1845.71 1212.9 L1846.29 1212.9 L1846.88 1212.9 L1847.47 1212.9 L1848.05 1212.9 L1848.64 1212.9 L1849.22 1212.9 L1849.81 1212.9 L1850.4 1212.9 L1850.98 1212.9 L1851.57 1212.9 L1852.16 1212.9 L1852.74 1212.9 L1853.33 1212.9 L1853.92 1212.9 L1854.5 1212.9 L1855.09 1212.9 L1855.68 1212.9 L1856.26 1212.9 L1856.85 1212.9 L1857.43 1212.9 L1858.02 1212.9 L1858.61 1212.9 L1859.19 1212.9 L1859.78 1212.9 L1860.37 1212.9 L1860.95 1212.9 L1861.54 1212.9 L1862.13 1212.9 L1862.71 1212.9 L1863.3 1212.9 L1863.88 1212.9 L1864.47 1212.9 L1865.06 1212.9 L1865.64 1212.9 L1866.23 1212.9 L1866.82 1212.9 L1867.4 1212.9 L1867.99 1212.9 L1868.58 1212.9 L1869.16 1212.9 L1869.75 1212.9 L1870.34 1212.9 L1870.92 1212.9 L1871.51 1212.9 L1872.09 1212.9 L1872.68 1212.9 L1873.27 1212.9 L1873.85 1212.9 L1874.44 1212.9 L1875.03 1212.9 L1875.61 1212.9 L1876.2 1212.9 L1876.79 1212.9 L1877.37 1212.9 L1877.96 1212.9 L1878.55 1212.9 L1879.13 1212.9 L1879.72 1212.9 L1880.3 1212.9 L1880.89 1212.9 L1881.48 1212.9 L1882.06 1212.9 L1882.65 1212.9 L1883.24 1212.9 L1883.82 1212.9 L1884.41 1212.9 L1885 1212.9 L1885.58 1212.9 L1886.17 1212.9 L1886.76 1212.9 L1887.34 1212.9 L1887.93 1212.9 L1888.51 1212.9 L1889.1 1212.9 L1889.69 1212.9 L1890.27 1212.9 L1890.86 1212.9 L1891.45 1212.9 L1892.03 1212.9 L1892.62 1212.9 L1893.21 1212.9 L1893.79 1212.9 L1894.38 1212.9 L1894.96 1212.9 L1895.55 1212.9 L1896.14 1212.9 L1896.72 1212.9 L1897.31 1212.9 L1897.9 1212.9 L1898.48 1212.9 L1899.07 1212.9 L1899.66 1212.9 L1900.24 1212.9 L1900.83 1212.9 L1901.42 1212.9 L1902 1212.9 L1902.59 1212.9 L1903.17 1212.9 L1903.76 1212.9 L1904.35 1212.9 L1904.93 1212.9 L1905.52 1212.9 L1906.11 1212.9 L1906.69 1212.9 L1907.28 1212.9 L1907.87 1212.9 L1908.45 1212.9 L1909.04 1212.9 L1909.63 1212.9 L1910.21 1212.9 L1910.8 1212.9 L1911.38 1212.9 L1911.97 1212.9 L1912.56 1212.9 L1913.14 1212.9 L1913.73 1212.9 L1914.32 1212.9 L1914.9 1212.9 L1915.49 1212.9 L1916.08 1212.9 L1916.66 1212.9 L1917.25 1212.9 L1917.83 1212.9 L1918.42 1212.9 L1919.01 1212.9 L1919.59 1212.9 L1920.18 1212.9 L1920.77 1212.9 L1921.35 1212.9 L1921.94 1212.9 L1922.53 1212.9 L1923.11 1212.9 L1923.7 1212.9 L1924.29 1212.9 L1924.87 1212.9 L1925.46 1212.9 L1926.04 1212.9 L1926.63 1212.9 L1927.22 1212.9 L1927.8 1212.9 L1928.39 1212.9 L1928.98 1212.9 L1929.56 1212.9 L1930.15 1212.9 L1930.74 1212.9 L1931.32 1212.9 L1931.91 1212.9 L1932.5 1212.9 L1933.08 1212.9 L1933.67 1212.9 L1934.25 1212.9 L1934.84 1212.9 L1935.43 1212.9 L1936.01 1212.9 L1936.6 1212.9 L1937.19 1212.9 L1937.77 1212.9 L1938.36 1212.9 L1938.95 1212.9 L1939.53 1212.9 L1940.12 1212.9 L1940.71 1212.9 L1941.29 1212.9 L1941.88 1212.9 L1942.46 1212.9 L1943.05 1212.9 L1943.64 1212.9 L1944.22 1212.9 L1944.81 1212.9 L1945.4 1212.9 L1945.98 1212.9 L1946.57 1212.9 L1947.16 1212.9 L1947.74 1212.9 L1948.33 1212.9 L1948.91 1212.9 L1949.5 1212.9 L1950.09 1212.9 L1950.67 1212.9 L1951.26 1212.9 L1951.85 1212.9 L1952.43 1212.9 L1953.02 1212.9 L1953.61 1212.9 L1954.19 1212.9 L1954.78 1212.9 L1955.37 1212.9 L1955.95 1212.9 L1956.54 1212.9 L1957.12 1212.9 L1957.71 1212.9 L1958.3 1212.9 L1958.88 1212.9 L1959.47 1212.9 L1960.06 1212.9 L1960.64 1212.9 L1961.23 1212.9 L1961.82 1212.9 L1962.4 1212.9 L1962.99 1212.9 L1963.58 1212.9 L1964.16 1212.9 L1964.75 1212.9 L1965.33 1212.9 L1965.92 1212.9 L1966.51 1212.9 L1967.09 1212.9 L1967.68 1212.9 L1968.27 1212.9 L1968.85 1212.9 L1969.44 1212.9 L1970.03 1212.9 L1970.61 1212.9 L1971.2 1212.9 L1971.78 1212.9 L1972.37 1212.9 L1972.96 1212.9 L1973.54 1212.9 L1974.13 1212.9 L1974.72 1212.9 L1975.3 1212.9 L1975.89 1212.9 L1976.48 1212.9 L1977.06 1212.9 L1977.65 1212.9 L1978.24 1212.9 L1978.82 1212.9 L1979.41 1212.9 L1979.99 1212.9 L1980.58 1212.9 L1981.17 1212.9 L1981.75 1212.9 L1982.34 1212.9 L1982.93 1212.9 L1983.51 1212.9 L1984.1 1212.9 L1984.69 1212.9 L1985.27 1212.9 L1985.86 1212.9 L1986.45 1212.9 L1987.03 1212.9 L1987.62 1212.9 L1988.2 1212.9 L1988.79 1212.9 L1989.38 1212.9 L1989.96 1212.9 L1990.55 1212.9 L1991.14 1212.9 L1991.72 1212.9 L1992.31 1212.9 L1992.9 1212.9 L1993.48 1212.9 L1994.07 1212.9 L1994.65 1212.9 L1995.24 1212.9 L1995.83 1212.9 L1996.41 1212.9 L1997 1212.9 L1997.59 1212.9 L1998.17 1212.9 L1998.76 1212.9 L1999.35 1212.9 L1999.93 1212.9 L2000.52 1212.9 L2001.11 1212.9 L2001.69 1212.9 L2002.28 1212.9 L2002.86 1212.9 L2003.45 1212.9 L2004.04 1212.9 L2004.62 1212.9 L2005.21 1212.9 L2005.8 1212.9 L2006.38 1212.9 L2006.97 1212.9 L2007.56 1212.9 L2008.14 1212.9 L2008.73 1212.9 L2009.32 1212.9 L2009.9 1212.9 L2010.49 1212.9 L2011.07 1212.9 L2011.66 1212.9 L2012.25 1212.9 L2012.83 1212.9 L2013.42 1212.9 L2014.01 1212.9 L2014.59 1212.9 L2015.18 1212.9 L2015.77 1212.9 L2016.35 1212.9 L2016.94 1212.9 L2017.53 1212.9 L2018.11 1212.9 L2018.7 1212.9 L2019.28 1212.9 L2019.87 1212.9 L2020.46 1212.9 L2021.04 1212.9 L2021.63 1212.9 L2022.22 1212.9 L2022.8 1212.9 L2023.39 1212.9 L2023.98 1212.9 L2024.56 1212.9 L2025.15 1212.9 L2025.73 1212.9 L2026.32 1212.9 L2026.91 1212.9 L2027.49 1212.9 L2028.08 1212.9 L2028.67 1212.9 L2029.25 1212.9 L2029.84 1212.9 L2030.43 1212.9 L2031.01 1212.9 L2031.6 1212.9 L2032.19 1212.9 L2032.77 1212.9 L2033.36 1212.9 L2033.94 1212.9 L2034.53 1212.9 L2035.12 1212.9 L2035.7 1212.9 L2036.29 1212.9 L2036.88 1212.9 L2037.46 1212.9 L2038.05 1212.9 L2038.64 1212.9 L2039.22 1212.9 L2039.81 1212.9 L2040.4 1212.9 L2040.98 1212.9 L2041.57 1212.9 L2042.15 1212.9 L2042.74 1212.9 L2043.33 1212.9 L2043.91 1212.9 L2044.5 1212.9 L2045.09 1212.9 L2045.67 1212.9 L2046.26 1212.9 L2046.85 1212.9 L2047.43 1212.9 L2048.02 1212.9 L2048.6 1212.9 L2049.19 1212.9 L2049.78 1212.9 L2050.36 1212.9 L2050.95 1212.9 L2051.54 1212.9 L2052.12 1212.9 L2052.71 1212.9 L2053.3 1212.9 L2053.88 1212.9 L2054.47 1212.9 L2055.06 1212.9 L2055.64 1212.9 L2056.23 1212.9 L2056.81 1212.9 L2057.4 1212.9 L2057.99 1212.9 L2058.57 1212.9 L2059.16 1212.9 L2059.75 1212.9 L2060.33 1212.9 L2060.92 1212.9 L2061.51 1212.9 L2062.09 1212.9 L2062.68 1212.9 L2063.27 1212.9 L2063.85 1212.9 L2064.44 1212.9 L2065.02 1212.9 L2065.61 1212.9 L2066.2 1212.9 L2066.78 1212.9 L2067.37 1212.9 L2067.96 1212.9 L2068.54 1212.9 L2069.13 1212.9 L2069.72 1212.9 L2070.3 1212.9 L2070.89 1212.9 L2071.48 1212.9 L2072.06 1212.9 L2072.65 1212.9 L2073.23 1212.9 L2073.82 1212.9 L2074.41 1212.9 L2074.99 1212.9 L2075.58 1212.9 L2076.17 1212.9 L2076.75 1212.9 L2077.34 1212.9 L2077.93 1212.9 L2078.51 1212.9 L2079.1 1212.9 L2079.68 1212.9 L2080.27 1212.9 L2080.86 1212.9 L2081.44 1212.9 L2082.03 1212.9 L2082.62 1212.9 L2083.2 1212.9 L2083.79 1212.9 L2084.38 1212.9 L2084.96 1212.9 L2085.55 1212.9 L2086.14 1212.9 L2086.72 1212.9 L2087.31 1212.9 L2087.89 1212.9 L2088.48 1212.9 L2089.07 1212.9 L2089.65 1212.9 L2090.24 1212.9 L2090.83 1212.9 L2091.41 1212.9 L2092 1212.9 L2092.59 1212.9 L2093.17 1212.9 L2093.76 1212.9 L2094.35 1212.9 L2094.93 1212.9 L2095.52 1212.9 L2096.1 1212.9 L2096.69 1212.9 L2097.28 1212.9 L2097.86 1212.9 L2098.45 1212.9 L2099.04 1212.9 L2099.62 1212.9 L2100.21 1212.9 L2100.8 1212.9 L2101.38 1212.9 L2101.97 1212.9 L2102.55 1212.9 L2103.14 1212.9 L2103.73 1212.9 L2104.31 1212.9 L2104.9 1212.9 L2105.49 1212.9 L2106.07 1212.9 L2106.66 1212.9 L2107.25 1212.9 L2107.83 1212.9 L2108.42 1212.9 L2109.01 1212.9 L2109.59 1212.9 L2110.18 1212.9 L2110.76 1212.9 L2111.35 1212.9 L2111.94 1212.9 L2112.52 1212.9 L2113.11 1212.9 L2113.7 1212.9 L2114.28 1212.9 L2114.87 1212.9 L2115.46 1212.9 L2116.04 1212.9 L2116.63 1212.9 L2117.22 1212.9 L2117.8 1212.9 L2118.39 1212.9 L2118.97 1212.9 L2119.56 1212.9 L2120.15 1212.9 L2120.73 1212.9 L2121.32 1212.9 L2121.91 1212.9 L2122.49 1212.9 L2123.08 1212.9 L2123.67 1212.9 L2124.25 1212.9 L2124.84 1212.9 L2125.42 1212.9 L2126.01 1212.9 L2126.6 1212.9 L2127.18 1212.9 L2127.77 1212.9 L2128.36 1212.9 L2128.94 1212.9 L2129.53 1212.9 L2130.12 1212.9 L2130.7 1212.9 L2131.29 1212.9 L2131.88 1212.9 L2132.46 1212.9 L2133.05 1212.9 L2133.63 1212.9 L2134.22 1212.9 L2134.81 1212.9 L2135.39 1212.9 L2135.98 1212.9 L2136.57 1212.9 L2137.15 1212.9 L2137.74 1212.9 L2138.33 1212.9 L2138.91 1212.9 L2139.5 1212.9 L2140.09 1212.9 L2140.67 1212.9 L2141.26 1212.9 L2141.84 1212.9 L2142.43 1212.9 L2143.02 1212.9 L2143.6 1212.9 L2144.19 1212.9 L2144.78 1212.9 L2145.36 1212.9 L2145.95 1212.9 L2146.54 1212.9 L2147.12 1212.9 L2147.71 1212.9 L2148.3 1212.9 L2148.88 1212.9 L2149.47 1212.9 L2150.05 1212.9 L2150.64 1212.9 L2151.23 1212.9 L2151.81 1212.9 L2152.4 1212.9 L2152.99 1212.9 L2153.57 1212.9 L2154.16 1212.9 L2154.75 1212.9 L2155.33 1212.9 L2155.92 1212.9 L2156.5 1212.9 L2157.09 1212.9 L2157.68 1212.9 L2158.26 1212.9 L2158.26 1212.68 L2157.68 1212.68 L2157.09 1212.68 L2156.5 1212.68 L2155.92 1212.68 L2155.33 1212.68 L2154.75 1212.68 L2154.16 1212.68 L2153.57 1212.68 L2152.99 1212.68 L2152.4 1212.68 L2151.81 1212.68 L2151.23 1212.68 L2150.64 1212.68 L2150.05 1212.68 L2149.47 1212.68 L2148.88 1212.68 L2148.3 1212.68 L2147.71 1212.68 L2147.12 1212.68 L2146.54 1212.68 L2145.95 1212.68 L2145.36 1212.68 L2144.78 1212.68 L2144.19 1212.68 L2143.6 1212.68 L2143.02 1212.68 L2142.43 1212.68 L2141.84 1212.68 L2141.26 1212.68 L2140.67 1212.68 L2140.09 1212.68 L2139.5 1212.68 L2138.91 1212.68 L2138.33 1212.68 L2137.74 1212.68 L2137.15 1212.68 L2136.57 1212.68 L2135.98 1212.68 L2135.39 1212.68 L2134.81 1212.68 L2134.22 1212.68 L2133.63 1212.68 L2133.05 1212.68 L2132.46 1212.68 L2131.88 1212.68 L2131.29 1212.68 L2130.7 1212.68 L2130.12 1212.68 L2129.53 1212.68 L2128.94 1212.68 L2128.36 1212.68 L2127.77 1212.68 L2127.18 1212.68 L2126.6 1212.68 L2126.01 1212.68 L2125.42 1212.68 L2124.84 1212.68 L2124.25 1212.68 L2123.67 1212.68 L2123.08 1212.68 L2122.49 1212.68 L2121.91 1212.68 L2121.32 1212.68 L2120.73 1212.68 L2120.15 1212.68 L2119.56 1212.68 L2118.97 1212.68 L2118.39 1212.68 L2117.8 1212.68 L2117.22 1212.68 L2116.63 1212.68 L2116.04 1212.68 L2115.46 1212.68 L2114.87 1212.68 L2114.28 1212.68 L2113.7 1212.68 L2113.11 1212.68 L2112.52 1212.68 L2111.94 1212.68 L2111.35 1212.68 L2110.76 1212.68 L2110.18 1212.68 L2109.59 1212.68 L2109.01 1212.68 L2108.42 1212.68 L2107.83 1212.68 L2107.25 1212.68 L2106.66 1212.68 L2106.07 1212.68 L2105.49 1212.68 L2104.9 1212.68 L2104.31 1212.68 L2103.73 1212.68 L2103.14 1212.68 L2102.55 1212.68 L2101.97 1212.68 L2101.38 1212.68 L2100.8 1212.68 L2100.21 1212.68 L2099.62 1212.68 L2099.04 1212.68 L2098.45 1212.68 L2097.86 1212.68 L2097.28 1212.68 L2096.69 1212.68 L2096.1 1212.68 L2095.52 1212.68 L2094.93 1212.68 L2094.35 1212.68 L2093.76 1212.68 L2093.17 1212.68 L2092.59 1212.68 L2092 1212.68 L2091.41 1212.68 L2090.83 1212.68 L2090.24 1212.68 L2089.65 1212.68 L2089.07 1212.68 L2088.48 1212.68 L2087.89 1212.68 L2087.31 1212.68 L2086.72 1212.68 L2086.14 1212.68 L2085.55 1212.68 L2084.96 1212.68 L2084.38 1212.68 L2083.79 1212.68 L2083.2 1212.68 L2082.62 1212.68 L2082.03 1212.68 L2081.44 1212.68 L2080.86 1212.68 L2080.27 1212.68 L2079.68 1212.68 L2079.1 1212.68 L2078.51 1212.68 L2077.93 1212.68 L2077.34 1212.68 L2076.75 1212.68 L2076.17 1212.68 L2075.58 1212.68 L2074.99 1212.68 L2074.41 1212.68 L2073.82 1212.68 L2073.23 1212.68 L2072.65 1212.68 L2072.06 1212.68 L2071.48 1212.68 L2070.89 1212.68 L2070.3 1212.68 L2069.72 1212.68 L2069.13 1212.68 L2068.54 1212.68 L2067.96 1212.68 L2067.37 1212.68 L2066.78 1212.68 L2066.2 1212.68 L2065.61 1212.68 L2065.02 1212.68 L2064.44 1212.68 L2063.85 1212.68 L2063.27 1212.68 L2062.68 1212.68 L2062.09 1212.68 L2061.51 1212.68 L2060.92 1212.68 L2060.33 1212.68 L2059.75 1212.68 L2059.16 1212.68 L2058.57 1212.68 L2057.99 1212.68 L2057.4 1212.68 L2056.81 1212.68 L2056.23 1212.68 L2055.64 1212.68 L2055.06 1212.68 L2054.47 1212.68 L2053.88 1212.68 L2053.3 1212.68 L2052.71 1212.68 L2052.12 1212.68 L2051.54 1212.68 L2050.95 1212.68 L2050.36 1212.68 L2049.78 1212.68 L2049.19 1212.68 L2048.6 1212.68 L2048.02 1212.68 L2047.43 1212.68 L2046.85 1212.68 L2046.26 1212.68 L2045.67 1212.68 L2045.09 1212.68 L2044.5 1212.68 L2043.91 1212.68 L2043.33 1212.68 L2042.74 1212.68 L2042.15 1212.68 L2041.57 1212.68 L2040.98 1212.68 L2040.4 1212.68 L2039.81 1212.68 L2039.22 1212.68 L2038.64 1212.68 L2038.05 1212.68 L2037.46 1212.68 L2036.88 1212.68 L2036.29 1212.68 L2035.7 1212.68 L2035.12 1212.68 L2034.53 1212.68 L2033.94 1212.68 L2033.36 1212.68 L2032.77 1212.68 L2032.19 1212.68 L2031.6 1212.68 L2031.01 1212.68 L2030.43 1212.68 L2029.84 1212.68 L2029.25 1212.68 L2028.67 1212.68 L2028.08 1212.68 L2027.49 1212.68 L2026.91 1212.68 L2026.32 1212.68 L2025.73 1212.68 L2025.15 1212.68 L2024.56 1212.68 L2023.98 1212.68 L2023.39 1212.68 L2022.8 1212.68 L2022.22 1212.68 L2021.63 1212.68 L2021.04 1212.68 L2020.46 1212.68 L2019.87 1212.68 L2019.28 1212.68 L2018.7 1212.68 L2018.11 1212.68 L2017.53 1212.68 L2016.94 1212.68 L2016.35 1212.68 L2015.77 1212.68 L2015.18 1212.68 L2014.59 1212.68 L2014.01 1212.68 L2013.42 1212.68 L2012.83 1212.68 L2012.25 1212.68 L2011.66 1212.68 L2011.07 1212.68 L2010.49 1212.68 L2009.9 1212.68 L2009.32 1212.68 L2008.73 1212.68 L2008.14 1212.68 L2007.56 1212.68 L2006.97 1212.68 L2006.38 1212.68 L2005.8 1212.68 L2005.21 1212.68 L2004.62 1212.68 L2004.04 1212.68 L2003.45 1212.68 L2002.86 1212.68 L2002.28 1212.68 L2001.69 1212.68 L2001.11 1212.68 L2000.52 1212.68 L1999.93 1212.68 L1999.35 1212.68 L1998.76 1212.68 L1998.17 1212.68 L1997.59 1212.68 L1997 1212.68 L1996.41 1212.68 L1995.83 1212.68 L1995.24 1212.68 L1994.65 1212.68 L1994.07 1212.68 L1993.48 1212.68 L1992.9 1212.68 L1992.31 1212.68 L1991.72 1212.68 L1991.14 1212.68 L1990.55 1212.68 L1989.96 1212.68 L1989.38 1212.68 L1988.79 1212.68 L1988.2 1212.68 L1987.62 1212.68 L1987.03 1212.68 L1986.45 1212.68 L1985.86 1212.68 L1985.27 1212.68 L1984.69 1212.68 L1984.1 1212.68 L1983.51 1212.68 L1982.93 1212.68 L1982.34 1212.68 L1981.75 1212.68 L1981.17 1212.68 L1980.58 1212.68 L1979.99 1212.68 L1979.41 1212.68 L1978.82 1212.68 L1978.24 1212.68 L1977.65 1212.68 L1977.06 1212.68 L1976.48 1212.68 L1975.89 1212.68 L1975.3 1212.68 L1974.72 1212.68 L1974.13 1212.68 L1973.54 1212.68 L1972.96 1212.68 L1972.37 1212.68 L1971.78 1212.68 L1971.2 1212.68 L1970.61 1212.68 L1970.03 1212.68 L1969.44 1212.68 L1968.85 1212.68 L1968.27 1212.68 L1967.68 1212.68 L1967.09 1212.68 L1966.51 1212.68 L1965.92 1212.68 L1965.33 1212.68 L1964.75 1212.68 L1964.16 1212.68 L1963.58 1212.68 L1962.99 1212.68 L1962.4 1212.68 L1961.82 1212.68 L1961.23 1212.68 L1960.64 1212.68 L1960.06 1212.68 L1959.47 1212.68 L1958.88 1212.68 L1958.3 1212.68 L1957.71 1212.68 L1957.12 1212.68 L1956.54 1212.68 L1955.95 1212.68 L1955.37 1212.68 L1954.78 1212.68 L1954.19 1212.68 L1953.61 1212.68 L1953.02 1212.68 L1952.43 1212.68 L1951.85 1212.68 L1951.26 1212.68 L1950.67 1212.68 L1950.09 1212.68 L1949.5 1212.68 L1948.91 1212.68 L1948.33 1212.68 L1947.74 1212.68 L1947.16 1212.68 L1946.57 1212.68 L1945.98 1212.68 L1945.4 1212.68 L1944.81 1212.68 L1944.22 1212.68 L1943.64 1212.68 L1943.05 1212.68 L1942.46 1212.68 L1941.88 1212.68 L1941.29 1212.68 L1940.71 1212.68 L1940.12 1212.68 L1939.53 1212.68 L1938.95 1212.68 L1938.36 1212.68 L1937.77 1212.68 L1937.19 1212.68 L1936.6 1212.68 L1936.01 1212.68 L1935.43 1212.68 L1934.84 1212.68 L1934.25 1212.68 L1933.67 1212.68 L1933.08 1212.68 L1932.5 1212.68 L1931.91 1212.68 L1931.32 1212.68 L1930.74 1212.68 L1930.15 1212.68 L1929.56 1212.68 L1928.98 1212.68 L1928.39 1212.68 L1927.8 1212.68 L1927.22 1212.68 L1926.63 1212.68 L1926.04 1212.68 L1925.46 1212.68 L1924.87 1212.68 L1924.29 1212.68 L1923.7 1212.68 L1923.11 1212.68 L1922.53 1212.68 L1921.94 1212.68 L1921.35 1212.68 L1920.77 1212.68 L1920.18 1212.68 L1919.59 1212.68 L1919.01 1212.68 L1918.42 1212.68 L1917.83 1212.68 L1917.25 1212.68 L1916.66 1212.68 L1916.08 1212.68 L1915.49 1212.68 L1914.9 1212.68 L1914.32 1212.68 L1913.73 1212.68 L1913.14 1212.68 L1912.56 1212.68 L1911.97 1212.68 L1911.38 1212.68 L1910.8 1212.68 L1910.21 1212.68 L1909.63 1212.68 L1909.04 1212.68 L1908.45 1212.68 L1907.87 1212.68 L1907.28 1212.68 L1906.69 1212.68 L1906.11 1212.68 L1905.52 1212.68 L1904.93 1212.68 L1904.35 1212.68 L1903.76 1212.68 L1903.17 1212.68 L1902.59 1212.68 L1902 1212.68 L1901.42 1212.68 L1900.83 1212.68 L1900.24 1212.68 L1899.66 1212.68 L1899.07 1212.68 L1898.48 1212.68 L1897.9 1212.68 L1897.31 1212.68 L1896.72 1212.68 L1896.14 1212.68 L1895.55 1212.68 L1894.96 1212.68 L1894.38 1212.68 L1893.79 1212.68 L1893.21 1212.68 L1892.62 1212.68 L1892.03 1212.68 L1891.45 1212.68 L1890.86 1212.68 L1890.27 1212.68 L1889.69 1212.68 L1889.1 1212.68 L1888.51 1212.68 L1887.93 1212.68 L1887.34 1212.68 L1886.76 1212.68 L1886.17 1212.68 L1885.58 1212.68 L1885 1212.68 L1884.41 1212.68 L1883.82 1212.68 L1883.24 1212.68 L1882.65 1212.68 L1882.06 1212.68 L1881.48 1212.68 L1880.89 1212.68 L1880.3 1212.68 L1879.72 1212.68 L1879.13 1212.68 L1878.55 1212.68 L1877.96 1212.68 L1877.37 1212.68 L1876.79 1212.68 L1876.2 1212.68 L1875.61 1212.68 L1875.03 1212.68 L1874.44 1212.68 L1873.85 1212.68 L1873.27 1212.68 L1872.68 1212.68 L1872.09 1212.68 L1871.51 1212.68 L1870.92 1212.68 L1870.34 1212.68 L1869.75 1212.68 L1869.16 1212.68 L1868.58 1212.68 L1867.99 1212.68 L1867.4 1212.68 L1866.82 1212.68 L1866.23 1212.68 L1865.64 1212.68 L1865.06 1212.68 L1864.47 1212.68 L1863.88 1212.68 L1863.3 1212.68 L1862.71 1212.68 L1862.13 1212.68 L1861.54 1212.68 L1860.95 1212.68 L1860.37 1212.68 L1859.78 1212.68 L1859.19 1212.68 L1858.61 1212.68 L1858.02 1212.68 L1857.43 1212.68 L1856.85 1212.68 L1856.26 1212.68 L1855.68 1212.68 L1855.09 1212.68 L1854.5 1212.68 L1853.92 1212.68 L1853.33 1212.68 L1852.74 1212.68 L1852.16 1212.68 L1851.57 1212.68 L1850.98 1212.68 L1850.4 1212.68 L1849.81 1212.68 L1849.22 1212.68 L1848.64 1212.68 L1848.05 1212.68 L1847.47 1212.68 L1846.88 1212.68 L1846.29 1212.68 L1845.71 1212.68 L1845.12 1212.68 L1844.53 1212.68 L1843.95 1212.68 L1843.36 1212.68 L1842.77 1212.68 L1842.19 1212.68 L1841.6 1212.68 L1841.01 1212.68 L1840.43 1212.68 L1839.84 1212.68 L1839.26 1212.68 L1838.67 1212.68 L1838.08 1212.68 L1837.5 1212.68 L1836.91 1212.68 L1836.32 1212.68 L1835.74 1212.68 L1835.15 1212.68 L1834.56 1212.68 L1833.98 1212.68 L1833.39 1212.68 L1832.81 1212.68 L1832.22 1212.68 L1831.63 1212.68 L1831.05 1212.68 L1830.46 1212.68 L1829.87 1212.68 L1829.29 1212.68 L1828.7 1212.68 L1828.11 1212.68 L1827.53 1212.68 L1826.94 1212.68 L1826.35 1212.68 L1825.77 1212.68 L1825.18 1212.68 L1824.6 1212.68 L1824.01 1212.68 L1823.42 1212.68 L1822.84 1212.68 L1822.25 1212.68 L1821.66 1212.68 L1821.08 1212.68 L1820.49 1212.68 L1819.9 1212.68 L1819.32 1212.68 L1818.73 1212.68 L1818.14 1212.68 L1817.56 1212.68 L1816.97 1212.68 L1816.39 1212.68 L1815.8 1212.68 L1815.21 1212.68 L1814.63 1212.68 L1814.04 1212.68 L1813.45 1212.68 L1812.87 1212.68 L1812.28 1212.68 L1811.69 1212.68 L1811.11 1212.68 L1810.52 1212.68 L1809.94 1212.68 L1809.35 1212.68 L1808.76 1212.68 L1808.18 1212.68 L1807.59 1212.68 L1807 1212.68 L1806.42 1212.68 L1805.83 1212.68 L1805.24 1212.68 L1804.66 1212.68 L1804.07 1212.68 L1803.48 1212.68 L1802.9 1212.68 L1802.31 1212.68 L1801.73 1212.68 L1801.14 1212.68 L1800.55 1212.68 L1799.97 1212.68 L1799.38 1212.68 L1798.79 1212.68 L1798.21 1212.68 L1797.62 1212.68 L1797.03 1212.68 L1796.45 1212.68 L1795.86 1212.68 L1795.27 1212.68 L1794.69 1212.68 L1794.1 1212.68 L1793.52 1212.68 L1792.93 1212.68 L1792.34 1212.68 L1791.76 1212.68 L1791.17 1212.68 L1790.58 1212.68 L1790 1212.68 L1789.41 1212.68 L1788.82 1212.68 L1788.24 1212.68 L1787.65 1212.68 L1787.06 1212.68 L1786.48 1212.68 L1785.89 1212.68 L1785.31 1212.68 L1784.72 1212.68 L1784.13 1212.68 L1783.55 1212.68 L1782.96 1212.68 L1782.37 1212.68 L1781.79 1212.68 L1781.2 1212.68 L1780.61 1212.68 L1780.03 1212.68 L1779.44 1212.68 L1778.86 1212.68 L1778.27 1212.68 L1777.68 1212.68 L1777.1 1212.68 L1776.51 1212.68 L1775.92 1212.68 L1775.34 1212.68 L1774.75 1212.68 L1774.16 1212.68 L1773.58 1212.68 L1772.99 1212.68 L1772.4 1212.68 L1771.82 1212.68 L1771.23 1212.68 L1770.65 1212.68 L1770.06 1212.68 L1769.47 1212.68 L1768.89 1212.68 L1768.3 1212.68 L1767.71 1212.68 L1767.13 1212.68 L1766.54 1212.68 L1765.95 1212.68 L1765.37 1212.68 L1764.78 1212.68 L1764.19 1212.68 L1763.61 1212.68 L1763.02 1212.68 L1762.44 1212.68 L1761.85 1212.68 L1761.26 1212.68 L1760.68 1212.68 L1760.09 1212.68 L1759.5 1212.68 L1758.92 1212.68 L1758.33 1212.68 L1757.74 1212.68 L1757.16 1212.68 L1756.57 1212.68 L1755.99 1212.68 L1755.4 1212.68 L1754.81 1212.68 L1754.23 1212.68 L1753.64 1212.68 L1753.05 1212.68 L1752.47 1212.68 L1751.88 1212.68 L1751.29 1212.68 L1750.71 1212.68 L1750.12 1212.68 L1749.53 1212.68 L1748.95 1212.68 L1748.36 1212.68 L1747.78 1212.68 L1747.19 1212.68 L1746.6 1212.68 L1746.02 1212.68 L1745.43 1212.68 L1744.84 1212.68 L1744.26 1212.68 L1743.67 1212.68 L1743.08 1212.68 L1742.5 1212.68 L1741.91 1212.68 L1741.32 1212.68 L1740.74 1212.68 L1740.15 1212.68 L1739.57 1212.68 L1738.98 1212.68 L1738.39 1212.68 L1737.81 1212.68 L1737.22 1212.68 L1736.63 1212.68 L1736.05 1212.68 L1735.46 1212.68 L1734.87 1212.68 L1734.29 1212.68 L1733.7 1212.68 L1733.11 1212.68 L1732.53 1212.68 L1731.94 1212.68 L1731.36 1212.68 L1730.77 1212.68 L1730.18 1212.68 L1729.6 1212.68 L1729.01 1212.68 L1728.42 1212.68 L1727.84 1212.68 L1727.25 1212.68 L1726.66 1212.68 L1726.08 1212.68 L1725.49 1212.68 L1724.91 1212.68 L1724.32 1212.68 L1723.73 1212.68 L1723.15 1212.68 L1722.56 1212.68 L1721.97 1212.68 L1721.39 1212.68 L1720.8 1212.68 L1720.21 1212.68 L1719.63 1212.68 L1719.04 1212.68 L1718.45 1212.68 L1717.87 1212.68 L1717.28 1212.68 L1716.7 1212.68 L1716.11 1212.68 L1715.52 1212.68 L1714.94 1212.68 L1714.35 1212.68 L1713.76 1212.68 L1713.18 1212.68 L1712.59 1212.68 L1712 1212.68 L1711.42 1212.68 L1710.83 1212.68 L1710.24 1212.68 L1709.66 1212.68 L1709.07 1212.68 L1708.49 1212.68 L1707.9 1212.68 L1707.31 1212.68 L1706.73 1212.68 L1706.14 1212.68 L1705.55 1212.68 L1704.97 1212.68 L1704.38 1212.68 L1703.79 1212.68 L1703.21 1212.68 L1702.62 1212.68 L1702.04 1212.68 L1701.45 1212.68 L1700.86 1212.68 L1700.28 1212.68 L1699.69 1212.68 L1699.1 1212.68 L1698.52 1212.68 L1697.93 1212.68 L1697.34 1212.68 L1696.76 1212.68 L1696.17 1212.68 L1695.58 1212.68 L1695 1212.68 L1694.41 1212.68 L1693.83 1212.68 L1693.24 1212.68 L1692.65 1212.68 L1692.07 1212.68 L1691.48 1212.68 L1690.89 1212.68 L1690.31 1212.68 L1689.72 1212.68 L1689.13 1212.68 L1688.55 1212.68 L1687.96 1212.68 L1687.37 1212.68 L1686.79 1212.68 L1686.2 1212.68 L1685.62 1212.68 L1685.03 1212.68 L1684.44 1212.68 L1683.86 1212.68 L1683.27 1212.68 L1682.68 1212.68 L1682.1 1212.68 L1681.51 1212.68 L1680.92 1212.68 L1680.34 1212.68 L1679.75 1212.68 L1679.17 1212.68 L1678.58 1212.68 L1677.99 1212.68 L1677.41 1212.68 L1676.82 1212.68 L1676.23 1212.68 L1675.65 1212.68 L1675.06 1212.68 L1674.47 1212.68 L1673.89 1212.68 L1673.3 1212.68 L1672.71 1212.68 L1672.13 1212.68 L1671.54 1212.68 L1670.96 1212.68 L1670.37 1212.68 L1669.78 1212.68 L1669.2 1212.68 L1668.61 1212.68 L1668.02 1212.68 L1667.44 1212.68 L1666.85 1212.68 L1666.26 1212.68 L1665.68 1212.68 L1665.09 1212.68 L1664.5 1212.68 L1663.92 1212.68 L1663.33 1212.68 L1662.75 1212.68 L1662.16 1212.68 L1661.57 1212.68 L1660.99 1212.68 L1660.4 1212.68 L1659.81 1212.68 L1659.23 1212.68 L1658.64 1212.68 L1658.05 1212.68 L1657.47 1212.68 L1656.88 1212.68 L1656.29 1212.68 L1655.71 1212.68 L1655.12 1212.68 L1654.54 1212.68 L1653.95 1212.68 L1653.36 1212.68 L1652.78 1212.68 L1652.19 1212.68 L1651.6 1212.68 L1651.02 1212.68 L1650.43 1212.68 L1649.84 1212.68 L1649.26 1212.68 L1648.67 1212.68 L1648.09 1212.68 L1647.5 1212.68 L1646.91 1212.68 L1646.33 1212.68 L1645.74 1212.68 L1645.15 1212.68 L1644.57 1212.68 L1643.98 1212.68 L1643.39 1212.68 L1642.81 1212.68 L1642.22 1212.68 L1641.63 1212.68 L1641.05 1212.68 L1640.46 1212.68 L1639.88 1212.68 L1639.29 1212.68 L1638.7 1212.68 L1638.12 1212.68 L1637.53 1212.68 L1636.94 1212.68 L1636.36 1212.68 L1635.77 1212.68 L1635.18 1212.68 L1634.6 1212.68 L1634.01 1212.68 L1633.42 1212.68 L1632.84 1212.68 L1632.25 1212.68 L1631.67 1212.68 L1631.08 1212.68 L1630.49 1212.68 L1629.91 1212.68 L1629.32 1212.68 L1628.73 1212.68 L1628.15 1212.68 L1627.56 1212.68 L1626.97 1212.68 L1626.39 1212.68 L1625.8 1212.68 L1625.22 1212.68 L1624.63 1212.68 L1624.04 1212.68 L1623.46 1212.68 L1622.87 1212.68 L1622.28 1212.68 L1621.7 1212.68 L1621.11 1212.68 L1620.52 1212.68 L1619.94 1212.68 L1619.35 1212.68 L1618.76 1212.68 L1618.18 1212.68 L1617.59 1212.68 L1617.01 1212.68 L1616.42 1212.68 L1615.83 1212.68 L1615.25 1212.68 L1614.66 1212.68 L1614.07 1212.68 L1613.49 1212.68 L1612.9 1212.68 L1612.31 1212.68 L1611.73 1212.68 L1611.14 1212.68 L1610.55 1212.68 L1609.97 1212.68 L1609.38 1212.68 L1608.8 1212.68 L1608.21 1212.68 L1607.62 1212.68 L1607.04 1212.68 L1606.45 1212.68 L1605.86 1212.68 L1605.28 1212.68 L1604.69 1212.68 L1604.1 1212.68 L1603.52 1212.68 L1602.93 1212.68 L1602.34 1212.68 L1601.76 1212.68 L1601.17 1212.68 L1600.59 1212.68 L1600 1212.68 L1599.41 1212.68 L1598.83 1212.68 L1598.24 1212.68 L1597.65 1212.68 L1597.07 1212.68 L1596.48 1212.68 L1595.89 1212.68 L1595.31 1212.68 L1594.72 1212.68 L1594.14 1212.68 L1593.55 1212.68 L1592.96 1212.68 L1592.38 1212.68 L1591.79 1212.68 L1591.2 1212.68 L1590.62 1212.68 L1590.03 1212.68 L1589.44 1212.68 L1588.86 1212.68 L1588.27 1212.68 L1587.68 1212.68 L1587.1 1212.68 L1586.51 1212.68 L1585.93 1212.68 L1585.34 1212.68 L1584.75 1212.68 L1584.17 1212.68 L1583.58 1212.68 L1582.99 1212.68 L1582.41 1212.68 L1581.82 1212.68 L1581.23 1212.68 L1580.65 1212.68 L1580.06 1212.68 L1579.47 1212.68 L1578.89 1212.68 L1578.3 1212.68 L1577.72 1212.68 L1577.13 1212.68 L1576.54 1212.68 L1575.96 1212.68 L1575.37 1212.68 L1574.78 1212.68 L1574.2 1212.68 L1573.61 1212.68 L1573.02 1212.68 L1572.44 1212.68 L1571.85 1212.68 L1571.27 1212.68 L1570.68 1212.68 L1570.09 1212.68 L1569.51 1212.68 L1568.92 1212.68 L1568.33 1212.68 L1567.75 1212.68 L1567.16 1212.68 L1566.57 1212.68 L1565.99 1212.68 L1565.4 1212.68 L1564.81 1212.68 L1564.23 1212.68 L1563.64 1212.68 L1563.06 1212.68 L1562.47 1212.68 L1561.88 1212.68 L1561.3 1212.68 L1560.71 1212.68 L1560.12 1212.68 L1559.54 1212.68 L1558.95 1212.68 L1558.36 1212.68 L1557.78 1212.68 L1557.19 1212.68 L1556.6 1212.68 L1556.02 1212.68 L1555.43 1212.68 L1554.85 1212.68 L1554.26 1212.68 L1553.67 1212.68 L1553.09 1212.68 L1552.5 1212.68 L1551.91 1212.68 L1551.33 1212.68 L1550.74 1212.68 L1550.15 1212.68 L1549.57 1212.68 L1548.98 1212.68 L1548.4 1212.68 L1547.81 1212.68 L1547.22 1212.68 L1546.64 1212.68 L1546.05 1212.68 L1545.46 1212.68 L1544.88 1212.68 L1544.29 1212.68 L1543.7 1212.68 L1543.12 1212.68 L1542.53 1212.68 L1541.94 1212.68 L1541.36 1212.68 L1540.77 1212.68 L1540.19 1212.68 L1539.6 1212.68 L1539.01 1212.68 L1538.43 1212.68 L1537.84 1212.68 L1537.25 1212.68 L1536.67 1212.68 L1536.08 1212.68 L1535.49 1212.68 L1534.91 1212.68 L1534.32 1212.68 L1533.73 1212.68 L1533.15 1212.68 L1532.56 1212.68 L1531.98 1212.68 L1531.39 1212.68 L1530.8 1212.68 L1530.22 1212.68 L1529.63 1212.68 L1529.04 1212.68 L1528.46 1212.68 L1527.87 1212.68 L1527.28 1212.68 L1526.7 1212.68 L1526.11 1212.68 L1525.52 1212.68 L1524.94 1212.68 L1524.35 1212.68 L1523.77 1212.68 L1523.18 1212.68 L1522.59 1212.68 L1522.01 1212.68 L1521.42 1212.68 L1520.83 1212.68 L1520.25 1212.68 L1519.66 1212.68 L1519.07 1212.68 L1518.49 1212.68 L1517.9 1212.68 L1517.32 1212.68 L1516.73 1212.68 L1516.14 1212.68 L1515.56 1212.68 L1514.97 1212.68 L1514.38 1212.68 L1513.8 1212.68 L1513.21 1212.68 L1512.62 1212.68 L1512.04 1212.68 L1511.45 1212.68 L1510.86 1212.68 L1510.28 1212.68 L1509.69 1212.68 L1509.11 1212.68 L1508.52 1212.68 L1507.93 1212.68 L1507.35 1212.68 L1506.76 1212.68 L1506.17 1212.68 L1505.59 1212.68 L1505 1212.68 L1504.41 1212.68 L1503.83 1212.68 L1503.24 1212.68 L1502.65 1212.68 L1502.07 1212.68 L1501.48 1212.68 L1500.9 1212.68 L1500.31 1212.68 L1499.72 1212.68 L1499.14 1212.68 L1498.55 1212.68 L1497.96 1212.68 L1497.38 1212.68 L1496.79 1212.68 L1496.2 1212.68 L1495.62 1212.68 L1495.03 1212.68 L1494.45 1212.68 L1493.86 1212.68 L1493.27 1212.68 L1492.69 1212.68 L1492.1 1212.68 L1491.51 1212.68 L1490.93 1212.68 L1490.34 1212.68 L1489.75 1212.68 L1489.17 1212.68 L1488.58 1212.68 L1487.99 1212.68 L1487.41 1212.68 L1486.82 1212.68 L1486.24 1212.68 L1485.65 1212.68 L1485.06 1212.68 L1484.48 1212.68 L1483.89 1212.68 L1483.3 1212.68 L1482.72 1212.68 L1482.13 1212.68 L1481.54 1212.68 L1480.96 1212.68 L1480.37 1212.68 L1479.78 1212.68 L1479.2 1212.68 L1478.61 1212.68 L1478.03 1212.68 L1477.44 1212.68 L1476.85 1212.68 L1476.27 1212.68 L1475.68 1212.68 L1475.09 1212.68 L1474.51 1212.68 L1473.92 1212.68 L1473.33 1212.68 L1472.75 1212.68 L1472.16 1212.68 L1471.57 1212.68 L1470.99 1212.68 L1470.4 1212.68 L1469.82 1212.68 L1469.23 1212.68 L1468.64 1212.68 L1468.06 1212.68 L1467.47 1212.68 L1466.88 1212.68 L1466.3 1212.68 L1465.71 1212.68 L1465.12 1212.68 L1464.54 1212.68 L1463.95 1212.68 L1463.37 1212.68 L1462.78 1212.68 L1462.19 1212.68 L1461.61 1212.68 L1461.02 1212.68 L1460.43 1212.68 L1459.85 1212.68 L1459.26 1212.68 L1458.67 1212.68 L1458.09 1212.68 L1457.5 1212.68 L1456.91 1212.68 L1456.33 1212.68 L1455.74 1212.68 L1455.16 1212.68 L1454.57 1212.68 L1453.98 1212.68 L1453.4 1212.68 L1452.81 1212.68 L1452.22 1212.68 L1451.64 1212.68 L1451.05 1212.68 L1450.46 1212.68 L1449.88 1212.68 L1449.29 1212.68 L1448.7 1212.68 L1448.12 1212.68 L1447.53 1212.68 L1446.95 1212.68 L1446.36 1212.68 L1445.77 1212.68 L1445.19 1212.68 L1444.6 1212.68 L1444.01 1212.68 L1443.43 1212.68 L1442.84 1212.68 L1442.25 1212.68 L1441.67 1212.68 L1441.08 1212.68 L1440.5 1212.68 L1439.91 1212.68 L1439.32 1212.68 L1438.74 1212.68 L1438.15 1212.68 L1437.56 1212.68 L1436.98 1212.68 L1436.39 1212.68 L1435.8 1212.68 L1435.22 1212.68 L1434.63 1212.68 L1434.04 1212.68 L1433.46 1212.68 L1432.87 1212.68 L1432.29 1212.68 L1431.7 1212.68 L1431.11 1212.68 L1430.53 1212.68 L1429.94 1212.68 L1429.35 1212.68 L1428.77 1212.68 L1428.18 1212.68 L1427.59 1212.68 L1427.01 1212.68 L1426.42 1212.68 L1425.83 1212.68 L1425.25 1212.68 L1424.66 1212.68 L1424.08 1212.68 L1423.49 1212.68 L1422.9 1212.68 L1422.32 1212.68 L1421.73 1212.68 L1421.14 1212.68 L1420.56 1212.68 L1419.97 1212.68 L1419.38 1212.68 L1418.8 1212.68 L1418.21 1212.68 L1417.63 1212.68 L1417.04 1212.68 L1416.45 1212.68 L1415.87 1212.68 L1415.28 1212.68 L1414.69 1212.68 L1414.11 1212.68 L1413.52 1212.68 L1412.93 1212.68 L1412.35 1212.68 L1411.76 1212.68 L1411.17 1212.68 L1410.59 1212.68 L1410 1212.68 L1409.42 1212.68 L1408.83 1212.68 L1408.24 1212.68 L1407.66 1212.68 L1407.07 1212.68 L1406.48 1212.68 L1405.9 1212.68 L1405.31 1212.68 L1404.72 1212.68 L1404.14 1212.68 L1403.55 1212.68 L1402.96 1212.68 L1402.38 1212.68 L1401.79 1212.68 L1401.21 1212.68 L1400.62 1212.68 L1400.03 1212.68 L1399.45 1212.68 L1398.86 1212.68 L1398.27 1212.68 L1397.69 1212.68 L1397.1 1212.68 L1396.51 1212.68 L1395.93 1212.68 L1395.34 1212.68 L1394.75 1212.68 L1394.17 1212.68 L1393.58 1212.68 L1393 1212.68 L1392.41 1212.68 L1391.82 1212.68 L1391.24 1212.68 L1390.65 1212.68 L1390.06 1212.68 L1389.48 1212.68 L1388.89 1212.68 L1388.3 1212.68 L1387.72 1212.68 L1387.13 1212.68 L1386.55 1212.68 L1385.96 1212.68 L1385.37 1212.68 L1384.79 1212.68 L1384.2 1212.68 L1383.61 1212.68 L1383.03 1212.68 L1382.44 1212.68 L1381.85 1212.68 L1381.27 1212.68 L1380.68 1212.68 L1380.09 1212.68 L1379.51 1212.68 L1378.92 1212.68 L1378.34 1212.68 L1377.75 1212.68 L1377.16 1212.68 L1376.58 1212.68 L1375.99 1212.68 L1375.4 1212.68 L1374.82 1212.68 L1374.23 1212.68 L1373.64 1212.68 L1373.06 1212.68 L1372.47 1212.68 L1371.88 1212.68 L1371.3 1212.68 L1370.71 1212.68 L1370.13 1212.68 L1369.54 1212.68 L1368.95 1212.68 L1368.37 1212.68 L1367.78 1212.68 L1367.19 1212.68 L1366.61 1212.68 L1366.02 1212.68 L1365.43 1212.68 L1364.85 1212.68 L1364.26 1212.68 L1363.68 1212.68 L1363.09 1212.68 L1362.5 1212.68 L1361.92 1212.68 L1361.33 1212.68 L1360.74 1212.68 L1360.16 1212.68 L1359.57 1212.68 L1358.98 1212.68 L1358.4 1212.68 L1357.81 1212.68 L1357.22 1212.68 L1356.64 1212.68 L1356.05 1212.68 L1355.47 1212.68 L1354.88 1212.68 L1354.29 1212.68 L1353.71 1212.68 L1353.12 1212.68 L1352.53 1212.68 L1351.95 1212.68 L1351.36 1212.68 L1350.77 1212.68 L1350.19 1212.68 L1349.6 1212.68 L1349.01 1212.68 L1348.43 1212.68 L1347.84 1212.68 L1347.26 1212.68 L1346.67 1212.68 L1346.08 1212.68 L1345.5 1212.68 L1344.91 1212.68 L1344.32 1212.68 L1343.74 1212.68 L1343.15 1212.68 L1342.56 1212.68 L1341.98 1212.68 L1341.39 1212.68 L1340.8 1212.68 L1340.22 1212.68 L1339.63 1212.68 L1339.05 1212.68 L1338.46 1212.68 L1337.87 1212.68 L1337.29 1212.68 L1336.7 1212.68 L1336.11 1212.68 L1335.53 1212.68 L1334.94 1212.68 L1334.35 1212.68 L1333.77 1212.68 L1333.18 1212.68 L1332.6 1212.68 L1332.01 1212.68 L1331.42 1212.68 L1330.84 1212.68 L1330.25 1212.68 L1329.66 1212.68 L1329.08 1212.68 L1328.49 1212.68 L1327.9 1212.68 L1327.32 1212.68 L1326.73 1212.68 L1326.14 1212.68 L1325.56 1212.68 L1324.97 1212.68 L1324.39 1212.68 L1323.8 1212.68 L1323.21 1212.68 L1322.63 1212.68 L1322.04 1212.68 L1321.45 1212.68 L1320.87 1212.68 L1320.28 1212.68 L1319.69 1212.68 L1319.11 1212.68 L1318.52 1212.68 L1317.93 1212.68 L1317.35 1212.68 L1316.76 1212.68 L1316.18 1212.68 L1315.59 1212.68 L1315 1212.68 L1314.42 1212.68 L1313.83 1212.68 L1313.24 1212.68 L1312.66 1212.68 L1312.07 1212.68 L1311.48 1212.68 L1310.9 1212.68 L1310.31 1212.68 L1309.73 1212.68 L1309.14 1212.68 L1308.55 1212.68 L1307.97 1212.68 L1307.38 1212.68 L1306.79 1212.68 L1306.21 1212.68 L1305.62 1212.68 L1305.03 1212.68 L1304.45 1212.68 L1303.86 1212.68 L1303.27 1212.68 L1302.69 1212.68 L1302.1 1212.68 L1301.52 1212.68 L1300.93 1212.68 L1300.34 1212.68 L1299.76 1212.68 L1299.17 1212.68 L1298.58 1212.68 L1298 1212.68 L1297.41 1212.68 L1296.82 1212.68 L1296.24 1212.68 L1295.65 1212.68 L1295.06 1212.68 L1294.48 1212.68 L1293.89 1212.68 L1293.31 1212.68 L1292.72 1212.68 L1292.13 1212.68 L1291.55 1212.68 L1290.96 1212.68 L1290.37 1212.68 L1289.79 1212.68 L1289.2 1212.68 L1288.61 1212.68 L1288.03 1212.68 L1287.44 1212.68 L1286.86 1212.68 L1286.27 1212.68 L1285.68 1212.68 L1285.1 1212.68 L1284.51 1212.68 L1283.92 1212.68 L1283.34 1212.68 L1282.75 1212.68 L1282.16 1212.68 L1281.58 1212.68 L1280.99 1212.68 L1280.4 1212.68 L1279.82 1212.68 L1279.23 1212.68 L1278.65 1212.68 L1278.06 1212.68 L1277.47 1212.68 L1276.89 1212.68 L1276.3 1212.68 L1275.71 1212.68 L1275.13 1212.68 L1274.54 1212.68 L1273.95 1212.68 L1273.37 1212.68 L1272.78 1212.68 L1272.19 1212.68 L1271.61 1212.68 L1271.02 1212.68 L1270.44 1212.68 L1269.85 1212.68 L1269.26 1212.68 L1268.68 1212.68 L1268.09 1212.68 L1267.5 1212.68 L1266.92 1212.68 L1266.33 1212.68 L1265.74 1212.68 L1265.16 1212.68 L1264.57 1212.68 L1263.98 1212.68 L1263.4 1212.68 L1262.81 1212.68 L1262.23 1212.68 L1261.64 1212.68 L1261.05 1212.68 L1260.47 1212.68 L1259.88 1212.68 L1259.29 1212.68 L1258.71 1212.68 L1258.12 1212.68 L1257.53 1212.68 L1256.95 1212.68 L1256.36 1212.68 L1255.78 1212.68 L1255.19 1212.68 L1254.6 1212.68 L1254.02 1212.68 L1253.43 1212.68 L1252.84 1212.68 L1252.26 1212.68 L1251.67 1212.68 L1251.08 1212.68 L1250.5 1212.68 L1249.91 1212.68 L1249.32 1212.68 L1248.74 1212.68 L1248.15 1212.68 L1247.57 1212.68 L1246.98 1212.68 L1246.39 1212.68 L1245.81 1212.68 L1245.22 1212.68 L1244.63 1212.68 L1244.05 1212.68 L1243.46 1212.68 L1242.87 1212.68 L1242.29 1212.68 L1241.7 1212.68 L1241.11 1212.68 L1240.53 1212.68 L1239.94 1212.68 L1239.36 1212.68 L1238.77 1212.68 L1238.18 1212.68 L1237.6 1212.68 L1237.01 1212.68 L1236.42 1212.68 L1235.84 1212.68 L1235.25 1212.68 L1234.66 1212.68 L1234.08 1212.68 L1233.49 1212.68 L1232.91 1212.68 L1232.32 1212.68 L1231.73 1212.68 L1231.15 1212.68 L1230.56 1212.68 L1229.97 1212.68 L1229.39 1212.68 L1228.8 1212.68 L1228.21 1212.68 L1227.63 1212.68 L1227.04 1212.68 L1226.45 1212.68 L1225.87 1212.68 L1225.28 1212.68 L1224.7 1212.68 L1224.11 1212.68 L1223.52 1212.68 L1222.94 1212.68 L1222.35 1212.68 L1221.76 1212.68 L1221.18 1212.68 L1220.59 1212.68 L1220 1212.68 L1219.42 1212.68 L1218.83 1212.68 L1218.24 1212.68 L1217.66 1212.68 L1217.07 1212.68 L1216.49 1212.68 L1215.9 1212.68 L1215.31 1212.68 L1214.73 1212.68 L1214.14 1212.68 L1213.55 1212.68 L1212.97 1212.68 L1212.38 1212.68 L1211.79 1212.68 L1211.21 1212.68 L1210.62 1212.68 L1210.03 1212.68 L1209.45 1212.68 L1208.86 1212.68 L1208.28 1212.68 L1207.69 1212.68 L1207.1 1212.68 L1206.52 1212.68 L1205.93 1212.68 L1205.34 1212.68 L1204.76 1212.68 L1204.17 1212.68 L1203.58 1212.68 L1203 1212.68 L1202.41 1212.68 L1201.83 1212.68 L1201.24 1212.68 L1200.65 1212.68 L1200.07 1212.68 L1199.48 1212.68 L1198.89 1212.68 L1198.31 1212.68 L1197.72 1212.68 L1197.13 1212.68 L1196.55 1212.68 L1195.96 1212.68 L1195.37 1212.68 L1194.79 1212.68 L1194.2 1212.68 L1193.62 1212.68 L1193.03 1212.68 L1192.44 1212.68 L1191.86 1212.68 L1191.27 1212.68 L1190.68 1212.68 L1190.1 1212.68 L1189.51 1212.68 L1188.92 1212.68 L1188.34 1212.68 L1187.75 1212.68 L1187.16 1212.68 L1186.58 1212.68 L1185.99 1212.68 L1185.41 1212.68 L1184.82 1212.68 L1184.23 1212.68 L1183.65 1212.68 L1183.06 1212.68 L1182.47 1212.68 L1181.89 1212.68 L1181.3 1212.68 L1180.71 1212.68 L1180.13 1212.68 L1179.54 1212.68 L1178.96 1212.68 L1178.37 1212.68 L1177.78 1212.68 L1177.2 1212.68 L1176.61 1212.68 L1176.02 1212.68 L1175.44 1212.68 L1174.85 1212.68 L1174.26 1212.68 L1173.68 1212.68 L1173.09 1212.68 L1172.5 1212.68 L1171.92 1212.68 L1171.33 1212.68 L1170.75 1212.68 L1170.16 1212.68 L1169.57 1212.68 L1168.99 1212.68 L1168.4 1212.68 L1167.81 1212.68 L1167.23 1212.68 L1166.64 1212.68 L1166.05 1212.68 L1165.47 1212.68 L1164.88 1212.68 L1164.29 1212.68 L1163.71 1212.68 L1163.12 1212.68 L1162.54 1212.68 L1161.95 1212.68 L1161.36 1212.68 L1160.78 1212.68 L1160.19 1212.68 L1159.6 1212.68 L1159.02 1212.68 L1158.43 1212.68 L1157.84 1212.68 L1157.26 1212.68 L1156.67 1212.68 L1156.09 1212.68 L1155.5 1212.68 L1154.91 1212.68 L1154.33 1212.68 L1153.74 1212.68 L1153.15 1212.68 L1152.57 1212.68 L1151.98 1212.68 L1151.39 1212.68 L1150.81 1212.68 L1150.22 1212.68 L1149.63 1212.68 L1149.05 1212.68 L1148.46 1212.68 L1147.88 1212.68 L1147.29 1212.68 L1146.7 1212.68 L1146.12 1212.68 L1145.53 1212.68 L1144.94 1212.68 L1144.36 1212.68 L1143.77 1212.68 L1143.18 1212.68 L1142.6 1212.68 L1142.01 1212.68 L1141.42 1212.68 L1140.84 1212.68 L1140.25 1212.68 L1139.67 1212.68 L1139.08 1212.68 L1138.49 1212.68 L1137.91 1212.68 L1137.32 1212.68 L1136.73 1212.68 L1136.15 1212.68 L1135.56 1212.68 L1134.97 1212.68 L1134.39 1212.68 L1133.8 1212.68 L1133.21 1212.68 L1132.63 1212.68 L1132.04 1212.68 L1131.46 1212.68 L1130.87 1212.68 L1130.28 1212.68 L1129.7 1212.68 L1129.11 1212.68 L1128.52 1212.68 L1127.94 1212.68 L1127.35 1212.68 L1126.76 1212.68 L1126.18 1212.68 L1125.59 1212.68 L1125.01 1212.68 L1124.42 1212.68 L1123.83 1212.68 L1123.25 1212.68 L1122.66 1212.68 L1122.07 1212.68 L1121.49 1212.68 L1120.9 1212.68 L1120.31 1212.68 L1119.73 1212.68 L1119.14 1212.68 L1118.55 1212.68 L1117.97 1212.68 L1117.38 1212.68 L1116.8 1212.68 L1116.21 1212.68 L1115.62 1212.68 L1115.04 1212.68 L1114.45 1212.68 L1113.86 1212.68 L1113.28 1212.68 L1112.69 1212.68 L1112.1 1212.68 L1111.52 1212.68 L1110.93 1212.68 L1110.34 1212.68 L1109.76 1212.68 L1109.17 1212.68 L1108.59 1212.68 L1108 1212.68 L1107.41 1212.68 L1106.83 1212.68 L1106.24 1212.68 L1105.65 1212.68 L1105.07 1212.68 L1104.48 1212.68 L1103.89 1212.68 L1103.31 1212.68 L1102.72 1212.68 L1102.14 1212.68 L1101.55 1212.68 L1100.96 1212.68 L1100.38 1212.68 L1099.79 1212.68 L1099.2 1212.68 L1098.62 1212.68 L1098.03 1212.68 L1097.44 1212.68 L1096.86 1212.68 L1096.27 1212.68 L1095.68 1212.68 L1095.1 1212.68 L1094.51 1212.68 L1093.93 1212.68 L1093.34 1212.68 L1092.75 1212.68 L1092.17 1212.68 L1091.58 1212.68 L1090.99 1212.68 L1090.41 1212.68 L1089.82 1212.68 L1089.23 1212.68 L1088.65 1212.68 L1088.06 1212.68 L1087.47 1212.68 L1086.89 1212.68 L1086.3 1212.68 L1085.72 1212.68 L1085.13 1212.68 L1084.54 1212.68 L1083.96 1212.68 L1083.37 1212.68 L1082.78 1212.68 L1082.2 1212.68 L1081.61 1212.68 L1081.02 1212.68 L1080.44 1212.68 L1079.85 1212.68 L1079.26 1212.68 L1078.68 1212.68 L1078.09 1212.68 L1077.51 1212.68 L1076.92 1212.68 L1076.33 1212.68 L1075.75 1212.68 L1075.16 1212.68 L1074.57 1212.68 L1073.99 1212.68 L1073.4 1212.68 L1072.81 1212.68 L1072.23 1212.68 L1071.64 1212.68 L1071.06 1212.68 L1070.47 1212.68 L1069.88 1212.68 L1069.3 1212.68 L1068.71 1212.68 L1068.12 1212.68 L1067.54 1212.68 L1066.95 1212.68 L1066.36 1212.68 L1065.78 1212.68 L1065.19 1212.68 L1064.6 1212.68 L1064.02 1212.68 L1063.43 1212.68 L1062.85 1212.68 L1062.26 1212.68 L1061.67 1212.68 L1061.09 1212.68 L1060.5 1212.68 L1059.91 1212.68 L1059.33 1212.68 L1058.74 1212.68 L1058.15 1212.68 L1057.57 1212.68 L1056.98 1212.68 L1056.39 1212.68 L1055.81 1212.68 L1055.22 1212.68 L1054.64 1212.68 L1054.05 1212.68 L1053.46 1212.68 L1052.88 1212.68 L1052.29 1212.68 L1051.7 1212.68 L1051.12 1212.68 L1050.53 1212.68 L1049.94 1212.68 L1049.36 1212.68 L1048.77 1212.68 L1048.19 1212.68 L1047.6 1212.68 L1047.01 1212.68 L1046.43 1212.68 L1045.84 1212.68 L1045.25 1212.68 L1044.67 1212.68 L1044.08 1212.68 L1043.49 1212.68 L1042.91 1212.68 L1042.32 1212.68 L1041.73 1212.68 L1041.15 1212.68 L1040.56 1212.68 L1039.98 1212.68 L1039.39 1212.68 L1038.8 1212.68 L1038.22 1212.68 L1037.63 1212.68 L1037.04 1212.68 L1036.46 1212.68 L1035.87 1212.68 L1035.28 1212.68 L1034.7 1212.68 L1034.11 1212.68 L1033.52 1212.68 L1032.94 1212.68 L1032.35 1212.68 L1031.77 1212.68 L1031.18 1212.68 L1030.59 1212.68 L1030.01 1212.68 L1029.42 1212.68 L1028.83 1212.68 L1028.25 1212.68 L1027.66 1212.68 L1027.07 1212.68 L1026.49 1212.68 L1025.9 1212.68 L1025.32 1212.68 L1024.73 1212.68 L1024.14 1212.68 L1023.56 1212.68 L1022.97 1212.68 L1022.38 1212.68 L1021.8 1212.68 L1021.21 1212.68 L1020.62 1212.68 L1020.04 1212.68 L1019.45 1212.68 L1018.86 1212.68 L1018.28 1212.68 L1017.69 1212.68 L1017.11 1212.68 L1016.52 1212.68 L1015.93 1212.68 L1015.35 1212.68 L1014.76 1212.68 L1014.17 1212.68 L1013.59 1212.68 L1013 1212.68 L1012.41 1212.68 L1011.83 1212.68 L1011.24 1212.68 L1010.65 1212.68 L1010.07 1212.68 L1009.48 1212.68 L1008.9 1212.68 L1008.31 1212.68 L1007.72 1212.68 L1007.14 1212.68 L1006.55 1212.68 L1005.96 1212.68 L1005.38 1212.68 L1004.79 1212.68 L1004.2 1212.68 L1003.62 1212.68 L1003.03 1212.68 L1002.44 1212.68 L1001.86 1212.68 L1001.27 1212.68 L1000.69 1212.68 L1000.1 1212.68 L999.513 1212.68 L998.926 1212.68 L998.34 1212.68 L997.754 1212.68 L997.167 1212.68 L996.581 1212.68 L995.994 1212.68 L995.408 1212.68 L994.822 1212.68 L994.235 1212.68 L993.649 1212.68 L993.062 1212.68 L992.476 1212.68 L991.889 1212.68 L991.303 1212.68 L990.717 1212.68 L990.13 1212.68 L989.544 1212.68 L988.957 1212.68 L988.371 1212.68 L987.785 1212.68 L987.198 1212.68 L986.612 1212.68 L986.025 1212.68  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.79 986.612,1212.79 987.198,1212.79 987.785,1212.79 988.371,1212.79 988.957,1212.79 989.544,1212.79 990.13,1212.79 990.717,1212.79 991.303,1212.79 991.889,1212.79 992.476,1212.79 993.062,1212.79 993.649,1212.79 994.235,1212.79 994.822,1212.79 995.408,1212.79 995.994,1212.79 996.581,1212.79 997.167,1212.79 997.754,1212.79 998.34,1212.79 998.926,1212.79 999.513,1212.79 1000.1,1212.79 1000.69,1212.79 1001.27,1212.79 1001.86,1212.79 1002.44,1212.79 1003.03,1212.79 1003.62,1212.79 1004.2,1212.79 1004.79,1212.79 1005.38,1212.79 1005.96,1212.79 1006.55,1212.79 1007.14,1212.79 1007.72,1212.79 1008.31,1212.79 1008.9,1212.79 1009.48,1212.79 1010.07,1212.79 1010.65,1212.79 1011.24,1212.79 1011.83,1212.79 1012.41,1212.79 1013,1212.79 1013.59,1212.79 1014.17,1212.79 1014.76,1212.79 1015.35,1212.79 1015.93,1212.79 1016.52,1212.79 1017.11,1212.79 1017.69,1212.79 1018.28,1212.79 1018.86,1212.79 1019.45,1212.79 1020.04,1212.79 1020.62,1212.79 1021.21,1212.79 1021.8,1212.79 1022.38,1212.79 1022.97,1212.79 1023.56,1212.79 1024.14,1212.79 1024.73,1212.79 1025.32,1212.79 1025.9,1212.79 1026.49,1212.79 1027.07,1212.79 1027.66,1212.79 1028.25,1212.79 1028.83,1212.79 1029.42,1212.79 1030.01,1212.79 1030.59,1212.79 1031.18,1212.79 1031.77,1212.79 1032.35,1212.79 1032.94,1212.79 1033.52,1212.79 1034.11,1212.79 1034.7,1212.79 1035.28,1212.79 1035.87,1212.79 1036.46,1212.79 1037.04,1212.79 1037.63,1212.79 1038.22,1212.79 1038.8,1212.79 1039.39,1212.79 1039.98,1212.79 1040.56,1212.79 1041.15,1212.79 1041.73,1212.79 1042.32,1212.79 1042.91,1212.79 1043.49,1212.79 1044.08,1212.79 1044.67,1212.79 1045.25,1212.79 1045.84,1212.79 1046.43,1212.79 1047.01,1212.79 1047.6,1212.79 1048.19,1212.79 1048.77,1212.79 1049.36,1212.79 1049.94,1212.79 1050.53,1212.79 1051.12,1212.79 1051.7,1212.79 1052.29,1212.79 1052.88,1212.79 1053.46,1212.79 1054.05,1212.79 1054.64,1212.79 1055.22,1212.79 1055.81,1212.79 1056.39,1212.79 1056.98,1212.79 1057.57,1212.79 1058.15,1212.79 1058.74,1212.79 1059.33,1212.79 1059.91,1212.79 1060.5,1212.79 1061.09,1212.79 1061.67,1212.79 1062.26,1212.79 1062.85,1212.79 1063.43,1212.79 1064.02,1212.79 1064.6,1212.79 1065.19,1212.79 1065.78,1212.79 1066.36,1212.79 1066.95,1212.79 1067.54,1212.79 1068.12,1212.79 1068.71,1212.79 1069.3,1212.79 1069.88,1212.79 1070.47,1212.79 1071.06,1212.79 1071.64,1212.79 1072.23,1212.79 1072.81,1212.79 1073.4,1212.79 1073.99,1212.79 1074.57,1212.79 1075.16,1212.79 1075.75,1212.79 1076.33,1212.79 1076.92,1212.79 1077.51,1212.79 1078.09,1212.79 1078.68,1212.79 1079.26,1212.79 1079.85,1212.79 1080.44,1212.79 1081.02,1212.79 1081.61,1212.79 1082.2,1212.79 1082.78,1212.79 1083.37,1212.79 1083.96,1212.79 1084.54,1212.79 1085.13,1212.79 1085.72,1212.79 1086.3,1212.79 1086.89,1212.79 1087.47,1212.79 1088.06,1212.79 1088.65,1212.79 1089.23,1212.79 1089.82,1212.79 1090.41,1212.79 1090.99,1212.79 1091.58,1212.79 1092.17,1212.79 1092.75,1212.79 1093.34,1212.79 1093.93,1212.79 1094.51,1212.79 1095.1,1212.79 1095.68,1212.79 1096.27,1212.79 1096.86,1212.79 1097.44,1212.79 1098.03,1212.79 1098.62,1212.79 1099.2,1212.79 1099.79,1212.79 1100.38,1212.79 1100.96,1212.79 1101.55,1212.79 1102.14,1212.79 1102.72,1212.79 1103.31,1212.79 1103.89,1212.79 1104.48,1212.79 1105.07,1212.79 1105.65,1212.79 1106.24,1212.79 1106.83,1212.79 1107.41,1212.79 1108,1212.79 1108.59,1212.79 1109.17,1212.79 1109.76,1212.79 1110.34,1212.79 1110.93,1212.79 1111.52,1212.79 1112.1,1212.79 1112.69,1212.79 1113.28,1212.79 1113.86,1212.79 1114.45,1212.79 1115.04,1212.79 1115.62,1212.79 1116.21,1212.79 1116.8,1212.79 1117.38,1212.79 1117.97,1212.79 1118.55,1212.79 1119.14,1212.79 1119.73,1212.79 1120.31,1212.79 1120.9,1212.79 1121.49,1212.79 1122.07,1212.79 1122.66,1212.79 1123.25,1212.79 1123.83,1212.79 1124.42,1212.79 1125.01,1212.79 1125.59,1212.79 1126.18,1212.79 1126.76,1212.79 1127.35,1212.79 1127.94,1212.79 1128.52,1212.79 1129.11,1212.79 1129.7,1212.79 1130.28,1212.79 1130.87,1212.79 1131.46,1212.79 1132.04,1212.79 1132.63,1212.79 1133.21,1212.79 1133.8,1212.79 1134.39,1212.79 1134.97,1212.79 1135.56,1212.79 1136.15,1212.79 1136.73,1212.79 1137.32,1212.79 1137.91,1212.79 1138.49,1212.79 1139.08,1212.79 1139.67,1212.79 1140.25,1212.79 1140.84,1212.79 1141.42,1212.79 1142.01,1212.79 1142.6,1212.79 1143.18,1212.79 1143.77,1212.79 1144.36,1212.79 1144.94,1212.79 1145.53,1212.79 1146.12,1212.79 1146.7,1212.79 1147.29,1212.79 1147.88,1212.79 1148.46,1212.79 1149.05,1212.79 1149.63,1212.79 1150.22,1212.79 1150.81,1212.79 1151.39,1212.79 1151.98,1212.79 1152.57,1212.79 1153.15,1212.79 1153.74,1212.79 1154.33,1212.79 1154.91,1212.79 1155.5,1212.79 1156.09,1212.79 1156.67,1212.79 1157.26,1212.79 1157.84,1212.79 1158.43,1212.79 1159.02,1212.79 1159.6,1212.79 1160.19,1212.79 1160.78,1212.79 1161.36,1212.79 1161.95,1212.79 1162.54,1212.79 1163.12,1212.79 1163.71,1212.79 1164.29,1212.79 1164.88,1212.79 1165.47,1212.79 1166.05,1212.79 1166.64,1212.79 1167.23,1212.79 1167.81,1212.79 1168.4,1212.79 1168.99,1212.79 1169.57,1212.79 1170.16,1212.79 1170.75,1212.79 1171.33,1212.79 1171.92,1212.79 1172.5,1212.79 1173.09,1212.79 1173.68,1212.79 1174.26,1212.79 1174.85,1212.79 1175.44,1212.79 1176.02,1212.79 1176.61,1212.79 1177.2,1212.79 1177.78,1212.79 1178.37,1212.79 1178.96,1212.79 1179.54,1212.79 1180.13,1212.79 1180.71,1212.79 1181.3,1212.79 1181.89,1212.79 1182.47,1212.79 1183.06,1212.79 1183.65,1212.79 1184.23,1212.79 1184.82,1212.79 1185.41,1212.79 1185.99,1212.79 1186.58,1212.79 1187.16,1212.79 1187.75,1212.79 1188.34,1212.79 1188.92,1212.79 1189.51,1212.79 1190.1,1212.79 1190.68,1212.79 1191.27,1212.79 1191.86,1212.79 1192.44,1212.79 1193.03,1212.79 1193.62,1212.79 1194.2,1212.79 1194.79,1212.79 1195.37,1212.79 1195.96,1212.79 1196.55,1212.79 1197.13,1212.79 1197.72,1212.79 1198.31,1212.79 1198.89,1212.79 1199.48,1212.79 1200.07,1212.79 1200.65,1212.79 1201.24,1212.79 1201.83,1212.79 1202.41,1212.79 1203,1212.79 1203.58,1212.79 1204.17,1212.79 1204.76,1212.79 1205.34,1212.79 1205.93,1212.79 1206.52,1212.79 1207.1,1212.79 1207.69,1212.79 1208.28,1212.79 1208.86,1212.79 1209.45,1212.79 1210.03,1212.79 1210.62,1212.79 1211.21,1212.79 1211.79,1212.79 1212.38,1212.79 1212.97,1212.79 1213.55,1212.79 1214.14,1212.79 1214.73,1212.79 1215.31,1212.79 1215.9,1212.79 1216.49,1212.79 1217.07,1212.79 1217.66,1212.79 1218.24,1212.79 1218.83,1212.79 1219.42,1212.79 1220,1212.79 1220.59,1212.79 1221.18,1212.79 1221.76,1212.79 1222.35,1212.79 1222.94,1212.79 1223.52,1212.79 1224.11,1212.79 1224.7,1212.79 1225.28,1212.79 1225.87,1212.79 1226.45,1212.79 1227.04,1212.79 1227.63,1212.79 1228.21,1212.79 1228.8,1212.79 1229.39,1212.79 1229.97,1212.79 1230.56,1212.79 1231.15,1212.79 1231.73,1212.79 1232.32,1212.79 1232.91,1212.79 1233.49,1212.79 1234.08,1212.79 1234.66,1212.79 1235.25,1212.79 1235.84,1212.79 1236.42,1212.79 1237.01,1212.79 1237.6,1212.79 1238.18,1212.79 1238.77,1212.79 1239.36,1212.79 1239.94,1212.79 1240.53,1212.79 1241.11,1212.79 1241.7,1212.79 1242.29,1212.79 1242.87,1212.79 1243.46,1212.79 1244.05,1212.79 1244.63,1212.79 1245.22,1212.79 1245.81,1212.79 1246.39,1212.79 1246.98,1212.79 1247.57,1212.79 1248.15,1212.79 1248.74,1212.79 1249.32,1212.79 1249.91,1212.79 1250.5,1212.79 1251.08,1212.79 1251.67,1212.79 1252.26,1212.79 1252.84,1212.79 1253.43,1212.79 1254.02,1212.79 1254.6,1212.79 1255.19,1212.79 1255.78,1212.79 1256.36,1212.79 1256.95,1212.79 1257.53,1212.79 1258.12,1212.79 1258.71,1212.79 1259.29,1212.79 1259.88,1212.79 1260.47,1212.79 1261.05,1212.79 1261.64,1212.79 1262.23,1212.79 1262.81,1212.79 1263.4,1212.79 1263.98,1212.79 1264.57,1212.79 1265.16,1212.79 1265.74,1212.79 1266.33,1212.79 1266.92,1212.79 1267.5,1212.79 1268.09,1212.79 1268.68,1212.79 1269.26,1212.79 1269.85,1212.79 1270.44,1212.79 1271.02,1212.79 1271.61,1212.79 1272.19,1212.79 1272.78,1212.79 1273.37,1212.79 1273.95,1212.79 1274.54,1212.79 1275.13,1212.79 1275.71,1212.79 1276.3,1212.79 1276.89,1212.79 1277.47,1212.79 1278.06,1212.79 1278.65,1212.79 1279.23,1212.79 1279.82,1212.79 1280.4,1212.79 1280.99,1212.79 1281.58,1212.79 1282.16,1212.79 1282.75,1212.79 1283.34,1212.79 1283.92,1212.79 1284.51,1212.79 1285.1,1212.79 1285.68,1212.79 1286.27,1212.79 1286.86,1212.79 1287.44,1212.79 1288.03,1212.79 1288.61,1212.79 1289.2,1212.79 1289.79,1212.79 1290.37,1212.79 1290.96,1212.79 1291.55,1212.79 1292.13,1212.79 1292.72,1212.79 1293.31,1212.79 1293.89,1212.79 1294.48,1212.79 1295.06,1212.79 1295.65,1212.79 1296.24,1212.79 1296.82,1212.79 1297.41,1212.79 1298,1212.79 1298.58,1212.79 1299.17,1212.79 1299.76,1212.79 1300.34,1212.79 1300.93,1212.79 1301.52,1212.79 1302.1,1212.79 1302.69,1212.79 1303.27,1212.79 1303.86,1212.79 1304.45,1212.79 1305.03,1212.79 1305.62,1212.79 1306.21,1212.79 1306.79,1212.79 1307.38,1212.79 1307.97,1212.79 1308.55,1212.79 1309.14,1212.79 1309.73,1212.79 1310.31,1212.79 1310.9,1212.79 1311.48,1212.79 1312.07,1212.79 1312.66,1212.79 1313.24,1212.79 1313.83,1212.79 1314.42,1212.79 1315,1212.79 1315.59,1212.79 1316.18,1212.79 1316.76,1212.79 1317.35,1212.79 1317.93,1212.79 1318.52,1212.79 1319.11,1212.79 1319.69,1212.79 1320.28,1212.79 1320.87,1212.79 1321.45,1212.79 1322.04,1212.79 1322.63,1212.79 1323.21,1212.79 1323.8,1212.79 1324.39,1212.79 1324.97,1212.79 1325.56,1212.79 1326.14,1212.79 1326.73,1212.79 1327.32,1212.79 1327.9,1212.79 1328.49,1212.79 1329.08,1212.79 1329.66,1212.79 1330.25,1212.79 1330.84,1212.79 1331.42,1212.79 1332.01,1212.79 1332.6,1212.79 1333.18,1212.79 1333.77,1212.79 1334.35,1212.79 1334.94,1212.79 1335.53,1212.79 1336.11,1212.79 1336.7,1212.79 1337.29,1212.79 1337.87,1212.79 1338.46,1212.79 1339.05,1212.79 1339.63,1212.79 1340.22,1212.79 1340.8,1212.79 1341.39,1212.79 1341.98,1212.79 1342.56,1212.79 1343.15,1212.79 1343.74,1212.79 1344.32,1212.79 1344.91,1212.79 1345.5,1212.79 1346.08,1212.79 1346.67,1212.79 1347.26,1212.79 1347.84,1212.79 1348.43,1212.79 1349.01,1212.79 1349.6,1212.79 1350.19,1212.79 1350.77,1212.79 1351.36,1212.79 1351.95,1212.79 1352.53,1212.79 1353.12,1212.79 1353.71,1212.79 1354.29,1212.79 1354.88,1212.79 1355.47,1212.79 1356.05,1212.79 1356.64,1212.79 1357.22,1212.79 1357.81,1212.79 1358.4,1212.79 1358.98,1212.79 1359.57,1212.79 1360.16,1212.79 1360.74,1212.79 1361.33,1212.79 1361.92,1212.79 1362.5,1212.79 1363.09,1212.79 1363.68,1212.79 1364.26,1212.79 1364.85,1212.79 1365.43,1212.79 1366.02,1212.79 1366.61,1212.79 1367.19,1212.79 1367.78,1212.79 1368.37,1212.79 1368.95,1212.79 1369.54,1212.79 1370.13,1212.79 1370.71,1212.79 1371.3,1212.79 1371.88,1212.79 1372.47,1212.79 1373.06,1212.79 1373.64,1212.79 1374.23,1212.79 1374.82,1212.79 1375.4,1212.79 1375.99,1212.79 1376.58,1212.79 1377.16,1212.79 1377.75,1212.79 1378.34,1212.79 1378.92,1212.79 1379.51,1212.79 1380.09,1212.79 1380.68,1212.79 1381.27,1212.79 1381.85,1212.79 1382.44,1212.79 1383.03,1212.79 1383.61,1212.79 1384.2,1212.79 1384.79,1212.79 1385.37,1212.79 1385.96,1212.79 1386.55,1212.79 1387.13,1212.79 1387.72,1212.79 1388.3,1212.79 1388.89,1212.79 1389.48,1212.79 1390.06,1212.79 1390.65,1212.79 1391.24,1212.79 1391.82,1212.79 1392.41,1212.79 1393,1212.79 1393.58,1212.79 1394.17,1212.79 1394.75,1212.79 1395.34,1212.79 1395.93,1212.79 1396.51,1212.79 1397.1,1212.79 1397.69,1212.79 1398.27,1212.79 1398.86,1212.79 1399.45,1212.79 1400.03,1212.79 1400.62,1212.79 1401.21,1212.79 1401.79,1212.79 1402.38,1212.79 1402.96,1212.79 1403.55,1212.79 1404.14,1212.79 1404.72,1212.79 1405.31,1212.79 1405.9,1212.79 1406.48,1212.79 1407.07,1212.79 1407.66,1212.79 1408.24,1212.79 1408.83,1212.79 1409.42,1212.79 1410,1212.79 1410.59,1212.79 1411.17,1212.79 1411.76,1212.79 1412.35,1212.79 1412.93,1212.79 1413.52,1212.79 1414.11,1212.79 1414.69,1212.79 1415.28,1212.79 1415.87,1212.79 1416.45,1212.79 1417.04,1212.79 1417.63,1212.79 1418.21,1212.79 1418.8,1212.79 1419.38,1212.79 1419.97,1212.79 1420.56,1212.79 1421.14,1212.79 1421.73,1212.79 1422.32,1212.79 1422.9,1212.79 1423.49,1212.79 1424.08,1212.79 1424.66,1212.79 1425.25,1212.79 1425.83,1212.79 1426.42,1212.79 1427.01,1212.79 1427.59,1212.79 1428.18,1212.79 1428.77,1212.79 1429.35,1212.79 1429.94,1212.79 1430.53,1212.79 1431.11,1212.79 1431.7,1212.79 1432.29,1212.79 1432.87,1212.79 1433.46,1212.79 1434.04,1212.79 1434.63,1212.79 1435.22,1212.79 1435.8,1212.79 1436.39,1212.79 1436.98,1212.79 1437.56,1212.79 1438.15,1212.79 1438.74,1212.79 1439.32,1212.79 1439.91,1212.79 1440.5,1212.79 1441.08,1212.79 1441.67,1212.79 1442.25,1212.79 1442.84,1212.79 1443.43,1212.79 1444.01,1212.79 1444.6,1212.79 1445.19,1212.79 1445.77,1212.79 1446.36,1212.79 1446.95,1212.79 1447.53,1212.79 1448.12,1212.79 1448.7,1212.79 1449.29,1212.79 1449.88,1212.79 1450.46,1212.79 1451.05,1212.79 1451.64,1212.79 1452.22,1212.79 1452.81,1212.79 1453.4,1212.79 1453.98,1212.79 1454.57,1212.79 1455.16,1212.79 1455.74,1212.79 1456.33,1212.79 1456.91,1212.79 1457.5,1212.79 1458.09,1212.79 1458.67,1212.79 1459.26,1212.79 1459.85,1212.79 1460.43,1212.79 1461.02,1212.79 1461.61,1212.79 1462.19,1212.79 1462.78,1212.79 1463.37,1212.79 1463.95,1212.79 1464.54,1212.79 1465.12,1212.79 1465.71,1212.79 1466.3,1212.79 1466.88,1212.79 1467.47,1212.79 1468.06,1212.79 1468.64,1212.79 1469.23,1212.79 1469.82,1212.79 1470.4,1212.79 1470.99,1212.79 1471.57,1212.79 1472.16,1212.79 1472.75,1212.79 1473.33,1212.79 1473.92,1212.79 1474.51,1212.79 1475.09,1212.79 1475.68,1212.79 1476.27,1212.79 1476.85,1212.79 1477.44,1212.79 1478.03,1212.79 1478.61,1212.79 1479.2,1212.79 1479.78,1212.79 1480.37,1212.79 1480.96,1212.79 1481.54,1212.79 1482.13,1212.79 1482.72,1212.79 1483.3,1212.79 1483.89,1212.79 1484.48,1212.79 1485.06,1212.79 1485.65,1212.79 1486.24,1212.79 1486.82,1212.79 1487.41,1212.79 1487.99,1212.79 1488.58,1212.79 1489.17,1212.79 1489.75,1212.79 1490.34,1212.79 1490.93,1212.79 1491.51,1212.79 1492.1,1212.79 1492.69,1212.79 1493.27,1212.79 1493.86,1212.79 1494.45,1212.79 1495.03,1212.79 1495.62,1212.79 1496.2,1212.79 1496.79,1212.79 1497.38,1212.79 1497.96,1212.79 1498.55,1212.79 1499.14,1212.79 1499.72,1212.79 1500.31,1212.79 1500.9,1212.79 1501.48,1212.79 1502.07,1212.79 1502.65,1212.79 1503.24,1212.79 1503.83,1212.79 1504.41,1212.79 1505,1212.79 1505.59,1212.79 1506.17,1212.79 1506.76,1212.79 1507.35,1212.79 1507.93,1212.79 1508.52,1212.79 1509.11,1212.79 1509.69,1212.79 1510.28,1212.79 1510.86,1212.79 1511.45,1212.79 1512.04,1212.79 1512.62,1212.79 1513.21,1212.79 1513.8,1212.79 1514.38,1212.79 1514.97,1212.79 1515.56,1212.79 1516.14,1212.79 1516.73,1212.79 1517.32,1212.79 1517.9,1212.79 1518.49,1212.79 1519.07,1212.79 1519.66,1212.79 1520.25,1212.79 1520.83,1212.79 1521.42,1212.79 1522.01,1212.79 1522.59,1212.79 1523.18,1212.79 1523.77,1212.79 1524.35,1212.79 1524.94,1212.79 1525.52,1212.79 1526.11,1212.79 1526.7,1212.79 1527.28,1212.79 1527.87,1212.79 1528.46,1212.79 1529.04,1212.79 1529.63,1212.79 1530.22,1212.79 1530.8,1212.79 1531.39,1212.79 1531.98,1212.79 1532.56,1212.79 1533.15,1212.79 1533.73,1212.79 1534.32,1212.79 1534.91,1212.79 1535.49,1212.79 1536.08,1212.79 1536.67,1212.79 1537.25,1212.79 1537.84,1212.79 1538.43,1212.79 1539.01,1212.79 1539.6,1212.79 1540.19,1212.79 1540.77,1212.79 1541.36,1212.79 1541.94,1212.79 1542.53,1212.79 1543.12,1212.79 1543.7,1212.79 1544.29,1212.79 1544.88,1212.79 1545.46,1212.79 1546.05,1212.79 1546.64,1212.79 1547.22,1212.79 1547.81,1212.79 1548.4,1212.79 1548.98,1212.79 1549.57,1212.79 1550.15,1212.79 1550.74,1212.79 1551.33,1212.79 1551.91,1212.79 1552.5,1212.79 1553.09,1212.79 1553.67,1212.79 1554.26,1212.79 1554.85,1212.79 1555.43,1212.79 1556.02,1212.79 1556.6,1212.79 1557.19,1212.79 1557.78,1212.79 1558.36,1212.79 1558.95,1212.79 1559.54,1212.79 1560.12,1212.79 1560.71,1212.79 1561.3,1212.79 1561.88,1212.79 1562.47,1212.79 1563.06,1212.79 1563.64,1212.79 1564.23,1212.79 1564.81,1212.79 1565.4,1212.79 1565.99,1212.79 1566.57,1212.79 1567.16,1212.79 1567.75,1212.79 1568.33,1212.79 1568.92,1212.79 1569.51,1212.79 1570.09,1212.79 1570.68,1212.79 1571.27,1212.79 1571.85,1212.79 1572.44,1212.79 1573.02,1212.79 1573.61,1212.79 1574.2,1212.79 1574.78,1212.79 1575.37,1212.79 1575.96,1212.79 1576.54,1212.79 1577.13,1212.79 1577.72,1212.79 1578.3,1212.79 1578.89,1212.79 1579.47,1212.79 1580.06,1212.79 1580.65,1212.79 1581.23,1212.79 1581.82,1212.79 1582.41,1212.79 1582.99,1212.79 1583.58,1212.79 1584.17,1212.79 1584.75,1212.79 1585.34,1212.79 1585.93,1212.79 1586.51,1212.79 1587.1,1212.79 1587.68,1212.79 1588.27,1212.79 1588.86,1212.79 1589.44,1212.79 1590.03,1212.79 1590.62,1212.79 1591.2,1212.79 1591.79,1212.79 1592.38,1212.79 1592.96,1212.79 1593.55,1212.79 1594.14,1212.79 1594.72,1212.79 1595.31,1212.79 1595.89,1212.79 1596.48,1212.79 1597.07,1212.79 1597.65,1212.79 1598.24,1212.79 1598.83,1212.79 1599.41,1212.79 1600,1212.79 1600.59,1212.79 1601.17,1212.79 1601.76,1212.79 1602.34,1212.79 1602.93,1212.79 1603.52,1212.79 1604.1,1212.79 1604.69,1212.79 1605.28,1212.79 1605.86,1212.79 1606.45,1212.79 1607.04,1212.79 1607.62,1212.79 1608.21,1212.79 1608.8,1212.79 1609.38,1212.79 1609.97,1212.79 1610.55,1212.79 1611.14,1212.79 1611.73,1212.79 1612.31,1212.79 1612.9,1212.79 1613.49,1212.79 1614.07,1212.79 1614.66,1212.79 1615.25,1212.79 1615.83,1212.79 1616.42,1212.79 1617.01,1212.79 1617.59,1212.79 1618.18,1212.79 1618.76,1212.79 1619.35,1212.79 1619.94,1212.79 1620.52,1212.79 1621.11,1212.79 1621.7,1212.79 1622.28,1212.79 1622.87,1212.79 1623.46,1212.79 1624.04,1212.79 1624.63,1212.79 1625.22,1212.79 1625.8,1212.79 1626.39,1212.79 1626.97,1212.79 1627.56,1212.79 1628.15,1212.79 1628.73,1212.79 1629.32,1212.79 1629.91,1212.79 1630.49,1212.79 1631.08,1212.79 1631.67,1212.79 1632.25,1212.79 1632.84,1212.79 1633.42,1212.79 1634.01,1212.79 1634.6,1212.79 1635.18,1212.79 1635.77,1212.79 1636.36,1212.79 1636.94,1212.79 1637.53,1212.79 1638.12,1212.79 1638.7,1212.79 1639.29,1212.79 1639.88,1212.79 1640.46,1212.79 1641.05,1212.79 1641.63,1212.79 1642.22,1212.79 1642.81,1212.79 1643.39,1212.79 1643.98,1212.79 1644.57,1212.79 1645.15,1212.79 1645.74,1212.79 1646.33,1212.79 1646.91,1212.79 1647.5,1212.79 1648.09,1212.79 1648.67,1212.79 1649.26,1212.79 1649.84,1212.79 1650.43,1212.79 1651.02,1212.79 1651.6,1212.79 1652.19,1212.79 1652.78,1212.79 1653.36,1212.79 1653.95,1212.79 1654.54,1212.79 1655.12,1212.79 1655.71,1212.79 1656.29,1212.79 1656.88,1212.79 1657.47,1212.79 1658.05,1212.79 1658.64,1212.79 1659.23,1212.79 1659.81,1212.79 1660.4,1212.79 1660.99,1212.79 1661.57,1212.79 1662.16,1212.79 1662.75,1212.79 1663.33,1212.79 1663.92,1212.79 1664.5,1212.79 1665.09,1212.79 1665.68,1212.79 1666.26,1212.79 1666.85,1212.79 1667.44,1212.79 1668.02,1212.79 1668.61,1212.79 1669.2,1212.79 1669.78,1212.79 1670.37,1212.79 1670.96,1212.79 1671.54,1212.79 1672.13,1212.79 1672.71,1212.79 1673.3,1212.79 1673.89,1212.79 1674.47,1212.79 1675.06,1212.79 1675.65,1212.79 1676.23,1212.79 1676.82,1212.79 1677.41,1212.79 1677.99,1212.79 1678.58,1212.79 1679.17,1212.79 1679.75,1212.79 1680.34,1212.79 1680.92,1212.79 1681.51,1212.79 1682.1,1212.79 1682.68,1212.79 1683.27,1212.79 1683.86,1212.79 1684.44,1212.79 1685.03,1212.79 1685.62,1212.79 1686.2,1212.79 1686.79,1212.79 1687.37,1212.79 1687.96,1212.79 1688.55,1212.79 1689.13,1212.79 1689.72,1212.79 1690.31,1212.79 1690.89,1212.79 1691.48,1212.79 1692.07,1212.79 1692.65,1212.79 1693.24,1212.79 1693.83,1212.79 1694.41,1212.79 1695,1212.79 1695.58,1212.79 1696.17,1212.79 1696.76,1212.79 1697.34,1212.79 1697.93,1212.79 1698.52,1212.79 1699.1,1212.79 1699.69,1212.79 1700.28,1212.79 1700.86,1212.79 1701.45,1212.79 1702.04,1212.79 1702.62,1212.79 1703.21,1212.79 1703.79,1212.79 1704.38,1212.79 1704.97,1212.79 1705.55,1212.79 1706.14,1212.79 1706.73,1212.79 1707.31,1212.79 1707.9,1212.79 1708.49,1212.79 1709.07,1212.79 1709.66,1212.79 1710.24,1212.79 1710.83,1212.79 1711.42,1212.79 1712,1212.79 1712.59,1212.79 1713.18,1212.79 1713.76,1212.79 1714.35,1212.79 1714.94,1212.79 1715.52,1212.79 1716.11,1212.79 1716.7,1212.79 1717.28,1212.79 1717.87,1212.79 1718.45,1212.79 1719.04,1212.79 1719.63,1212.79 1720.21,1212.79 1720.8,1212.79 1721.39,1212.79 1721.97,1212.79 1722.56,1212.79 1723.15,1212.79 1723.73,1212.79 1724.32,1212.79 1724.91,1212.79 1725.49,1212.79 1726.08,1212.79 1726.66,1212.79 1727.25,1212.79 1727.84,1212.79 1728.42,1212.79 1729.01,1212.79 1729.6,1212.79 1730.18,1212.79 1730.77,1212.79 1731.36,1212.79 1731.94,1212.79 1732.53,1212.79 1733.11,1212.79 1733.7,1212.79 1734.29,1212.79 1734.87,1212.79 1735.46,1212.79 1736.05,1212.79 1736.63,1212.79 1737.22,1212.79 1737.81,1212.79 1738.39,1212.79 1738.98,1212.79 1739.57,1212.79 1740.15,1212.79 1740.74,1212.79 1741.32,1212.79 1741.91,1212.79 1742.5,1212.79 1743.08,1212.79 1743.67,1212.79 1744.26,1212.79 1744.84,1212.79 1745.43,1212.79 1746.02,1212.79 1746.6,1212.79 1747.19,1212.79 1747.78,1212.79 1748.36,1212.79 1748.95,1212.79 1749.53,1212.79 1750.12,1212.79 1750.71,1212.79 1751.29,1212.79 1751.88,1212.79 1752.47,1212.79 1753.05,1212.79 1753.64,1212.79 1754.23,1212.79 1754.81,1212.79 1755.4,1212.79 1755.99,1212.79 1756.57,1212.79 1757.16,1212.79 1757.74,1212.79 1758.33,1212.79 1758.92,1212.79 1759.5,1212.79 1760.09,1212.79 1760.68,1212.79 1761.26,1212.79 1761.85,1212.79 1762.44,1212.79 1763.02,1212.79 1763.61,1212.79 1764.19,1212.79 1764.78,1212.79 1765.37,1212.79 1765.95,1212.79 1766.54,1212.79 1767.13,1212.79 1767.71,1212.79 1768.3,1212.79 1768.89,1212.79 1769.47,1212.79 1770.06,1212.79 1770.65,1212.79 1771.23,1212.79 1771.82,1212.79 1772.4,1212.79 1772.99,1212.79 1773.58,1212.79 1774.16,1212.79 1774.75,1212.79 1775.34,1212.79 1775.92,1212.79 1776.51,1212.79 1777.1,1212.79 1777.68,1212.79 1778.27,1212.79 1778.86,1212.79 1779.44,1212.79 1780.03,1212.79 1780.61,1212.79 1781.2,1212.79 1781.79,1212.79 1782.37,1212.79 1782.96,1212.79 1783.55,1212.79 1784.13,1212.79 1784.72,1212.79 1785.31,1212.79 1785.89,1212.79 1786.48,1212.79 1787.06,1212.79 1787.65,1212.79 1788.24,1212.79 1788.82,1212.79 1789.41,1212.79 1790,1212.79 1790.58,1212.79 1791.17,1212.79 1791.76,1212.79 1792.34,1212.79 1792.93,1212.79 1793.52,1212.79 1794.1,1212.79 1794.69,1212.79 1795.27,1212.79 1795.86,1212.79 1796.45,1212.79 1797.03,1212.79 1797.62,1212.79 1798.21,1212.79 1798.79,1212.79 1799.38,1212.79 1799.97,1212.79 1800.55,1212.79 1801.14,1212.79 1801.73,1212.79 1802.31,1212.79 1802.9,1212.79 1803.48,1212.79 1804.07,1212.79 1804.66,1212.79 1805.24,1212.79 1805.83,1212.79 1806.42,1212.79 1807,1212.79 1807.59,1212.79 1808.18,1212.79 1808.76,1212.79 1809.35,1212.79 1809.94,1212.79 1810.52,1212.79 1811.11,1212.79 1811.69,1212.79 1812.28,1212.79 1812.87,1212.79 1813.45,1212.79 1814.04,1212.79 1814.63,1212.79 1815.21,1212.79 1815.8,1212.79 1816.39,1212.79 1816.97,1212.79 1817.56,1212.79 1818.14,1212.79 1818.73,1212.79 1819.32,1212.79 1819.9,1212.79 1820.49,1212.79 1821.08,1212.79 1821.66,1212.79 1822.25,1212.79 1822.84,1212.79 1823.42,1212.79 1824.01,1212.79 1824.6,1212.79 1825.18,1212.79 1825.77,1212.79 1826.35,1212.79 1826.94,1212.79 1827.53,1212.79 1828.11,1212.79 1828.7,1212.79 1829.29,1212.79 1829.87,1212.79 1830.46,1212.79 1831.05,1212.79 1831.63,1212.79 1832.22,1212.79 1832.81,1212.79 1833.39,1212.79 1833.98,1212.79 1834.56,1212.79 1835.15,1212.79 1835.74,1212.79 1836.32,1212.79 1836.91,1212.79 1837.5,1212.79 1838.08,1212.79 1838.67,1212.79 1839.26,1212.79 1839.84,1212.79 1840.43,1212.79 1841.01,1212.79 1841.6,1212.79 1842.19,1212.79 1842.77,1212.79 1843.36,1212.79 1843.95,1212.79 1844.53,1212.79 1845.12,1212.79 1845.71,1212.79 1846.29,1212.79 1846.88,1212.79 1847.47,1212.79 1848.05,1212.79 1848.64,1212.79 1849.22,1212.79 1849.81,1212.79 1850.4,1212.79 1850.98,1212.79 1851.57,1212.79 1852.16,1212.79 1852.74,1212.79 1853.33,1212.79 1853.92,1212.79 1854.5,1212.79 1855.09,1212.79 1855.68,1212.79 1856.26,1212.79 1856.85,1212.79 1857.43,1212.79 1858.02,1212.79 1858.61,1212.79 1859.19,1212.79 1859.78,1212.79 1860.37,1212.79 1860.95,1212.79 1861.54,1212.79 1862.13,1212.79 1862.71,1212.79 1863.3,1212.79 1863.88,1212.79 1864.47,1212.79 1865.06,1212.79 1865.64,1212.79 1866.23,1212.79 1866.82,1212.79 1867.4,1212.79 1867.99,1212.79 1868.58,1212.79 1869.16,1212.79 1869.75,1212.79 1870.34,1212.79 1870.92,1212.79 1871.51,1212.79 1872.09,1212.79 1872.68,1212.79 1873.27,1212.79 1873.85,1212.79 1874.44,1212.79 1875.03,1212.79 1875.61,1212.79 1876.2,1212.79 1876.79,1212.79 1877.37,1212.79 1877.96,1212.79 1878.55,1212.79 1879.13,1212.79 1879.72,1212.79 1880.3,1212.79 1880.89,1212.79 1881.48,1212.79 1882.06,1212.79 1882.65,1212.79 1883.24,1212.79 1883.82,1212.79 1884.41,1212.79 1885,1212.79 1885.58,1212.79 1886.17,1212.79 1886.76,1212.79 1887.34,1212.79 1887.93,1212.79 1888.51,1212.79 1889.1,1212.79 1889.69,1212.79 1890.27,1212.79 1890.86,1212.79 1891.45,1212.79 1892.03,1212.79 1892.62,1212.79 1893.21,1212.79 1893.79,1212.79 1894.38,1212.79 1894.96,1212.79 1895.55,1212.79 1896.14,1212.79 1896.72,1212.79 1897.31,1212.79 1897.9,1212.79 1898.48,1212.79 1899.07,1212.79 1899.66,1212.79 1900.24,1212.79 1900.83,1212.79 1901.42,1212.79 1902,1212.79 1902.59,1212.79 1903.17,1212.79 1903.76,1212.79 1904.35,1212.79 1904.93,1212.79 1905.52,1212.79 1906.11,1212.79 1906.69,1212.79 1907.28,1212.79 1907.87,1212.79 1908.45,1212.79 1909.04,1212.79 1909.63,1212.79 1910.21,1212.79 1910.8,1212.79 1911.38,1212.79 1911.97,1212.79 1912.56,1212.79 1913.14,1212.79 1913.73,1212.79 1914.32,1212.79 1914.9,1212.79 1915.49,1212.79 1916.08,1212.79 1916.66,1212.79 1917.25,1212.79 1917.83,1212.79 1918.42,1212.79 1919.01,1212.79 1919.59,1212.79 1920.18,1212.79 1920.77,1212.79 1921.35,1212.79 1921.94,1212.79 1922.53,1212.79 1923.11,1212.79 1923.7,1212.79 1924.29,1212.79 1924.87,1212.79 1925.46,1212.79 1926.04,1212.79 1926.63,1212.79 1927.22,1212.79 1927.8,1212.79 1928.39,1212.79 1928.98,1212.79 1929.56,1212.79 1930.15,1212.79 1930.74,1212.79 1931.32,1212.79 1931.91,1212.79 1932.5,1212.79 1933.08,1212.79 1933.67,1212.79 1934.25,1212.79 1934.84,1212.79 1935.43,1212.79 1936.01,1212.79 1936.6,1212.79 1937.19,1212.79 1937.77,1212.79 1938.36,1212.79 1938.95,1212.79 1939.53,1212.79 1940.12,1212.79 1940.71,1212.79 1941.29,1212.79 1941.88,1212.79 1942.46,1212.79 1943.05,1212.79 1943.64,1212.79 1944.22,1212.79 1944.81,1212.79 1945.4,1212.79 1945.98,1212.79 1946.57,1212.79 1947.16,1212.79 1947.74,1212.79 1948.33,1212.79 1948.91,1212.79 1949.5,1212.79 1950.09,1212.79 1950.67,1212.79 1951.26,1212.79 1951.85,1212.79 1952.43,1212.79 1953.02,1212.79 1953.61,1212.79 1954.19,1212.79 1954.78,1212.79 1955.37,1212.79 1955.95,1212.79 1956.54,1212.79 1957.12,1212.79 1957.71,1212.79 1958.3,1212.79 1958.88,1212.79 1959.47,1212.79 1960.06,1212.79 1960.64,1212.79 1961.23,1212.79 1961.82,1212.79 1962.4,1212.79 1962.99,1212.79 1963.58,1212.79 1964.16,1212.79 1964.75,1212.79 1965.33,1212.79 1965.92,1212.79 1966.51,1212.79 1967.09,1212.79 1967.68,1212.79 1968.27,1212.79 1968.85,1212.79 1969.44,1212.79 1970.03,1212.79 1970.61,1212.79 1971.2,1212.79 1971.78,1212.79 1972.37,1212.79 1972.96,1212.79 1973.54,1212.79 1974.13,1212.79 1974.72,1212.79 1975.3,1212.79 1975.89,1212.79 1976.48,1212.79 1977.06,1212.79 1977.65,1212.79 1978.24,1212.79 1978.82,1212.79 1979.41,1212.79 1979.99,1212.79 1980.58,1212.79 1981.17,1212.79 1981.75,1212.79 1982.34,1212.79 1982.93,1212.79 1983.51,1212.79 1984.1,1212.79 1984.69,1212.79 1985.27,1212.79 1985.86,1212.79 1986.45,1212.79 1987.03,1212.79 1987.62,1212.79 1988.2,1212.79 1988.79,1212.79 1989.38,1212.79 1989.96,1212.79 1990.55,1212.79 1991.14,1212.79 1991.72,1212.79 1992.31,1212.79 1992.9,1212.79 1993.48,1212.79 1994.07,1212.79 1994.65,1212.79 1995.24,1212.79 1995.83,1212.79 1996.41,1212.79 1997,1212.79 1997.59,1212.79 1998.17,1212.79 1998.76,1212.79 1999.35,1212.79 1999.93,1212.79 2000.52,1212.79 2001.11,1212.79 2001.69,1212.79 2002.28,1212.79 2002.86,1212.79 2003.45,1212.79 2004.04,1212.79 2004.62,1212.79 2005.21,1212.79 2005.8,1212.79 2006.38,1212.79 2006.97,1212.79 2007.56,1212.79 2008.14,1212.79 2008.73,1212.79 2009.32,1212.79 2009.9,1212.79 2010.49,1212.79 2011.07,1212.79 2011.66,1212.79 2012.25,1212.79 2012.83,1212.79 2013.42,1212.79 2014.01,1212.79 2014.59,1212.79 2015.18,1212.79 2015.77,1212.79 2016.35,1212.79 2016.94,1212.79 2017.53,1212.79 2018.11,1212.79 2018.7,1212.79 2019.28,1212.79 2019.87,1212.79 2020.46,1212.79 2021.04,1212.79 2021.63,1212.79 2022.22,1212.79 2022.8,1212.79 2023.39,1212.79 2023.98,1212.79 2024.56,1212.79 2025.15,1212.79 2025.73,1212.79 2026.32,1212.79 2026.91,1212.79 2027.49,1212.79 2028.08,1212.79 2028.67,1212.79 2029.25,1212.79 2029.84,1212.79 2030.43,1212.79 2031.01,1212.79 2031.6,1212.79 2032.19,1212.79 2032.77,1212.79 2033.36,1212.79 2033.94,1212.79 2034.53,1212.79 2035.12,1212.79 2035.7,1212.79 2036.29,1212.79 2036.88,1212.79 2037.46,1212.79 2038.05,1212.79 2038.64,1212.79 2039.22,1212.79 2039.81,1212.79 2040.4,1212.79 2040.98,1212.79 2041.57,1212.79 2042.15,1212.79 2042.74,1212.79 2043.33,1212.79 2043.91,1212.79 2044.5,1212.79 2045.09,1212.79 2045.67,1212.79 2046.26,1212.79 2046.85,1212.79 2047.43,1212.79 2048.02,1212.79 2048.6,1212.79 2049.19,1212.79 2049.78,1212.79 2050.36,1212.79 2050.95,1212.79 2051.54,1212.79 2052.12,1212.79 2052.71,1212.79 2053.3,1212.79 2053.88,1212.79 2054.47,1212.79 2055.06,1212.79 2055.64,1212.79 2056.23,1212.79 2056.81,1212.79 2057.4,1212.79 2057.99,1212.79 2058.57,1212.79 2059.16,1212.79 2059.75,1212.79 2060.33,1212.79 2060.92,1212.79 2061.51,1212.79 2062.09,1212.79 2062.68,1212.79 2063.27,1212.79 2063.85,1212.79 2064.44,1212.79 2065.02,1212.79 2065.61,1212.79 2066.2,1212.79 2066.78,1212.79 2067.37,1212.79 2067.96,1212.79 2068.54,1212.79 2069.13,1212.79 2069.72,1212.79 2070.3,1212.79 2070.89,1212.79 2071.48,1212.79 2072.06,1212.79 2072.65,1212.79 2073.23,1212.79 2073.82,1212.79 2074.41,1212.79 2074.99,1212.79 2075.58,1212.79 2076.17,1212.79 2076.75,1212.79 2077.34,1212.79 2077.93,1212.79 2078.51,1212.79 2079.1,1212.79 2079.68,1212.79 2080.27,1212.79 2080.86,1212.79 2081.44,1212.79 2082.03,1212.79 2082.62,1212.79 2083.2,1212.79 2083.79,1212.79 2084.38,1212.79 2084.96,1212.79 2085.55,1212.79 2086.14,1212.79 2086.72,1212.79 2087.31,1212.79 2087.89,1212.79 2088.48,1212.79 2089.07,1212.79 2089.65,1212.79 2090.24,1212.79 2090.83,1212.79 2091.41,1212.79 2092,1212.79 2092.59,1212.79 2093.17,1212.79 2093.76,1212.79 2094.35,1212.79 2094.93,1212.79 2095.52,1212.79 2096.1,1212.79 2096.69,1212.79 2097.28,1212.79 2097.86,1212.79 2098.45,1212.79 2099.04,1212.79 2099.62,1212.79 2100.21,1212.79 2100.8,1212.79 2101.38,1212.79 2101.97,1212.79 2102.55,1212.79 2103.14,1212.79 2103.73,1212.79 2104.31,1212.79 2104.9,1212.79 2105.49,1212.79 2106.07,1212.79 2106.66,1212.79 2107.25,1212.79 2107.83,1212.79 2108.42,1212.79 2109.01,1212.79 2109.59,1212.79 2110.18,1212.79 2110.76,1212.79 2111.35,1212.79 2111.94,1212.79 2112.52,1212.79 2113.11,1212.79 2113.7,1212.79 2114.28,1212.79 2114.87,1212.79 2115.46,1212.79 2116.04,1212.79 2116.63,1212.79 2117.22,1212.79 2117.8,1212.79 2118.39,1212.79 2118.97,1212.79 2119.56,1212.79 2120.15,1212.79 2120.73,1212.79 2121.32,1212.79 2121.91,1212.79 2122.49,1212.79 2123.08,1212.79 2123.67,1212.79 2124.25,1212.79 2124.84,1212.79 2125.42,1212.79 2126.01,1212.79 2126.6,1212.79 2127.18,1212.79 2127.77,1212.79 2128.36,1212.79 2128.94,1212.79 2129.53,1212.79 2130.12,1212.79 2130.7,1212.79 2131.29,1212.79 2131.88,1212.79 2132.46,1212.79 2133.05,1212.79 2133.63,1212.79 2134.22,1212.79 2134.81,1212.79 2135.39,1212.79 2135.98,1212.79 2136.57,1212.79 2137.15,1212.79 2137.74,1212.79 2138.33,1212.79 2138.91,1212.79 2139.5,1212.79 2140.09,1212.79 2140.67,1212.79 2141.26,1212.79 2141.84,1212.79 2142.43,1212.79 2143.02,1212.79 2143.6,1212.79 2144.19,1212.79 2144.78,1212.79 2145.36,1212.79 2145.95,1212.79 2146.54,1212.79 2147.12,1212.79 2147.71,1212.79 2148.3,1212.79 2148.88,1212.79 2149.47,1212.79 2150.05,1212.79 2150.64,1212.79 2151.23,1212.79 2151.81,1212.79 2152.4,1212.79 2152.99,1212.79 2153.57,1212.79 2154.16,1212.79 2154.75,1212.79 2155.33,1212.79 2155.92,1212.79 2156.5,1212.79 2157.09,1212.79 2157.68,1212.79 2158.26,1212.79 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.73,1195.98 1399.25,899.083 \"/>\n<polyline clip-path=\"url(#clip042)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1229.09 985.439,1195.98 2158.26,1195.98 2158.26,1229.09 985.439,1229.09 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip040)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip040)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip043\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip040)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip040)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip040)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip043)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-11334.6 167.706,-11791.5 168.266,-12195.6 168.825,-11629.1 169.384,-11963.4 169.943,-11487.7 170.503,-11778.2 171.062,-12028.3 171.621,-12240.7 172.18,-12417.9 172.74,-12008.9 173.299,-12139.8 173.858,-12229.5 174.417,-11859 174.977,-11920.8 175.536,-11958.9 176.095,-11607.6 176.655,-11610.5 177.214,-11280.4 177.773,-10976 178.332,-10669.1 178.892,-10392.4 179.451,-10355.4 180.01,-10078 180.569,-10001.4 181.129,-9735.72 181.688,-9644.7 182.247,-9372.39 182.806,-9251.96 183.366,-8973.93 183.925,-8855.48 184.484,-8730.32 185.043,-8603.2 185.603,-8350.05 186.162,-8221.73 186.721,-7976.92 187.28,-7631.73 187.84,-7300.09 188.399,-7180.41 188.958,-6782.39 189.517,-6492.41 190.077,-6214.2 190.636,-6019.78 191.195,-5763.65 191.754,-5522.1 192.314,-5294.28 192.873,-5066.35 193.432,-4916.33 193.991,-4829.5 194.551,-4619.36 195.11,-4200.99 195.669,-4140.69 196.228,-4069.56 196.788,-3902.82 197.347,-3828.9 197.906,-3713.81 198.465,-3646.12 199.025,-3482.81 199.584,-3283.2 200.143,-3177.47 200.702,-3118.58 201.262,-2975.79 201.821,-2759.6 202.38,-2628.96 202.939,-2578.13 203.499,-2484.64 204.058,-2396.83 204.617,-2345.95 205.176,-2255.36 205.736,-2168.36 206.295,-2084.82 206.854,-2031.44 207.413,-1949.55 207.973,-1835.8 208.532,-1753.02 209.091,-1672.07 209.65,-1565.58 210.21,-1429.03 210.769,-1385.55 211.328,-1339.82 211.887,-1293.02 212.447,-1218.19 213.006,-1146.39 213.565,-1074.8 214.124,-951.676 214.684,-911.571 215.243,-848.555 215.802,-788.812 216.361,-754.823 216.921,-669.818 217.48,-561.929 218.039,-499.464 218.598,-469.395 219.158,-437.409 219.717,-404.071 220.276,-371.392 220.835,-294.252 221.395,-220.651 221.954,-194.193 222.513,-121.977 223.072,-98.6194 223.632,-51.9177 224.191,-28.993 224.75,39.1878 225.309,82.5471 225.869,102.359 226.428,141.851 226.987,178.803 227.546,196.745 228.106,214.241 228.665,252.559 229.224,246.468 229.783,284.031 230.343,322.716 230.902,360.673 231.461,435.79 232.02,467.115 232.58,474.828 233.139,525.35 233.698,553.36 234.257,560.92 234.817,605.423 235.376,666.045 235.935,727.659 236.494,765.985 237.054,763.352 237.613,837.976 238.172,857.006 238.731,852.246 239.291,869.756 239.85,882.83 240.409,898.333 240.968,964.444 241.528,1029.39 242.087,1069.83 242.646,1077.33 243.205,1082.7 243.765,1034.61 244.324,1038.59 244.883,1082.03 245.442,1017.5 246.002,1025.69 246.561,1018.91 247.12,1014.14 247.679,1038.43 248.239,1011.71 248.798,1004.67 249.357,1013.58 249.916,991.307 250.476,1002.74 251.035,1032.55 251.594,1042.76 252.153,1070.69 252.713,1080.04 253.272,1106.1 253.831,1093.79 254.39,1098.14 254.95,1085.14 255.509,1093.83 256.068,1102.36 256.627,1056.4 257.187,1051.29 257.746,1041.1 258.305,1036.76 258.864,1030.2 259.424,1075 259.983,1101.11 260.542,1094.86 261.101,1085.68 261.661,1094.66 262.22,1104.93 262.779,1074.69 263.338,1052.19 263.898,1025.75 264.457,1052.15 265.016,1060.86 265.575,1019.31 266.135,980.818 266.694,948.481 267.253,979.369 267.812,997.372 268.372,995.433 268.931,1009.28 269.49,1023.44 270.049,1019.06 270.609,1034.44 271.168,1060.32 271.727,1071.2 272.286,1082.63 272.846,1090.44 273.405,1081.91 273.964,1107.44 274.523,1129.77 275.083,1105.45 275.642,1127.86 276.201,1117.57 276.76,1108.34 277.32,1116.51 277.879,1121.67 278.438,1125.56 278.997,1150.15 279.557,1140.29 280.116,1149.45 280.675,1167.87 281.234,1167.47 281.794,1156.61 282.353,1174.37 282.912,1181.95 283.471,1135.92 284.031,1175.32 284.59,1178.13 285.149,1167.99 285.708,1153.21 286.268,1110.53 286.827,1082.78 287.386,1075.21 287.945,1066.84 288.505,1076.11 289.064,1100.8 289.623,1107.62 290.182,1101.14 290.742,1108.79 291.301,1115.85 291.86,1075.38 292.419,1051.93 292.979,1065.58 293.538,1058.01 294.097,1052.99 294.656,1059.77 295.216,1086.06 295.775,1076.74 296.334,1120.05 296.893,1077.07 297.453,1082.8 298.012,1123.53 298.571,1163.79 299.13,1154.77 299.69,1141.73 300.249,1125.59 300.808,1132.39 301.368,1152.15 301.927,1155.12 302.486,1142.31 303.045,1065.68 303.605,1059.1 304.164,1055.26 304.723,1063.26 305.282,1017.08 305.842,1014.23 306.401,1022.63 306.96,1034.44 307.519,1010.69 308.079,986.496 308.638,964.96 309.197,942.549 309.756,951.363 310.316,981.544 310.875,946.015 311.434,924.243 311.993,905.505 312.553,938.545 313.112,951.677 313.671,982.92 314.23,959.925 314.79,955.886 315.349,983.229 315.908,981.18 316.467,978.509 317.027,972.279 317.586,985.976 318.145,983.682 318.704,978.758 319.264,992.948 319.823,997.848 320.382,1009.2 320.941,1006.18 321.501,1000.48 322.06,1010.1 322.619,1048.98 323.178,1022.27 323.738,1015.08 324.297,1008.35 324.856,951.577 325.415,964.169 325.975,976.994 326.534,953.222 327.093,947.215 327.652,974.064 328.212,982.649 328.771,976.165 329.33,987.79 329.889,1016.76 330.449,1026.23 331.008,1001.33 331.567,995.104 332.126,971.602 332.686,968.224 333.245,914.755 333.804,897.656 334.363,913.126 334.923,893.974 335.482,892.729 336.041,907.381 336.6,888.976 337.16,888.912 337.719,868.439 338.278,851.5 338.837,886.809 339.397,821.067 339.956,871.165 340.515,902.879 341.074,902.596 341.634,916.314 342.193,924.738 342.752,868.705 343.311,852.783 343.871,867.292 344.43,850.847 344.989,866.33 345.548,883.537 346.108,878.546 346.667,845.845 347.226,828.008 347.785,845.383 348.345,861.092 348.904,876.269 349.463,873.477 350.022,839.854 350.582,824.794 351.141,841.189 351.7,823.985 352.259,841.188 352.819,889.503 353.378,905.429 353.937,918.446 354.496,947.112 355.056,975.432 355.615,969.89 356.174,962.373 356.733,956.18 357.293,934.899 357.852,946.167 358.411,942.939 358.97,937.095 359.53,933.236 360.089,930.977 360.648,942.179 361.207,936.003 361.767,933.617 362.326,926.379 362.885,904.41 363.444,900.842 364.004,898.832 364.563,881.804 365.122,878.262 365.681,878.383 366.241,891.59 366.8,886.579 367.359,868.19 367.918,865.356 368.478,861.705 369.037,861.68 369.596,859.693 370.155,874.409 370.715,871.447 371.274,870.546 371.833,882.287 372.392,892.868 372.952,889.229 373.511,848.639 374.07,830.371 374.629,845.492 375.189,844.119 375.748,824.968 376.307,808.187 376.866,808.449 377.426,811.306 377.985,823.17 378.544,822.746 379.103,793.089 379.663,822.997 380.222,834.203 380.781,835.201 381.34,834.728 381.9,848.536 382.459,810.557 383.018,843.109 383.577,825.149 384.137,807.731 384.696,806.592 385.255,826.899 385.814,809.616 386.374,810.679 386.933,825.733 387.492,775.294 388.051,760.703 388.611,776.07 389.17,760.798 389.729,777.765 390.288,776.508 390.848,795.694 391.407,799.049 391.966,831.997 392.525,778.912 393.085,795.012 393.644,796.039 394.203,779.634 394.762,783.892 395.322,815.353 395.881,833.786 396.44,861.056 396.999,857.52 397.559,852.559 398.118,800.893 398.677,801.79 399.236,814.928 399.796,827.437 400.355,808.572 400.914,774.814 401.473,807.572 402.033,819.228 402.592,802.921 403.151,802.357 403.71,816.698 404.27,782.874 404.829,782.938 405.388,797.512 405.947,778.359 406.507,779.471 407.066,792.263 407.625,793.497 408.184,794.843 408.744,825.525 409.303,823.74 409.862,838.869 410.421,852.218 410.981,845.147 411.54,826.061 412.099,857.498 412.658,820.673 413.218,835.331 413.777,830.11 414.336,842.682 414.895,837.103 415.455,849.293 416.014,846.225 416.573,856.68 417.132,849.901 417.692,848.185 418.251,859.727 418.81,904.011 419.369,913.582 419.929,971.91 420.488,893.795 421.047,902.918 421.606,913.272 422.166,873.654 422.725,867.124 423.284,830.407 423.843,826.71 424.403,823.753 424.962,802.896 425.521,814.088 426.08,794.974 426.64,778.704 427.199,791.089 427.758,790.271 428.318,772.06 428.877,788.995 429.436,823.597 429.995,802.237 430.555,815.702 431.114,847.072 431.673,827.346 432.232,821.406 432.792,785.165 433.351,781.033 433.91,778.334 434.469,792.233 435.029,789.823 435.588,772.337 436.147,807.483 436.706,806.267 437.266,804.545 437.825,820.337 438.384,815.441 438.943,843.403 439.503,807.22 440.062,806.003 440.621,798.342 441.18,795.27 441.74,777.281 442.299,741.194 442.858,709.588 443.417,745.295 443.977,759.595 444.536,756.217 445.095,770.985 445.654,753.29 446.214,734.37 446.773,717.52 447.332,672.039 447.891,693.759 448.451,728.695 449.01,731.829 449.569,716.884 450.128,718.721 450.688,706.168 451.247,679.2 451.806,668.502 452.365,704.902 452.925,705.833 453.484,740.368 454.043,725.347 454.602,729.551 455.162,729.918 455.721,765.424 456.28,797.939 456.839,780.734 457.399,778.188 457.958,761.578 458.517,795.463 459.076,829.086 459.636,793.585 460.195,764.202 460.754,780.389 461.313,793.906 461.873,857.403 462.432,852.897 462.991,849.64 463.55,858.594 464.11,920.764 464.669,894.781 465.228,853.565 465.787,879.409 466.347,854.126 466.906,845.663 467.465,888.974 468.024,865.319 468.584,859.968 469.143,871.727 469.702,866.981 470.261,846.422 470.821,840.986 471.38,835.656 471.939,832.611 472.498,845.09 473.058,824.731 473.617,869.562 474.176,878.399 474.735,853.695 475.295,848.653 475.854,844.346 476.413,837.592 476.972,799.56 477.532,795.957 478.091,791.084 478.65,818.251 479.209,812.557 479.769,826.041 480.328,817.76 480.887,798.501 481.446,797.31 482.006,746.773 482.565,709.286 483.124,730.499 483.683,732.426 484.243,732.641 484.802,733.823 485.361,701.306 485.92,681.162 486.48,684.071 487.039,654.017 487.598,657.732 488.157,663.507 488.717,652.194 489.276,671.542 489.835,672.919 490.394,660.574 490.954,630.089 491.513,632.466 492.072,620.161 492.631,641.649 493.191,663.271 493.75,649.456 494.309,654.723 494.868,656.244 495.428,676.799 495.987,663.663 496.546,631.097 497.105,632.675 497.665,635.857 498.224,641.539 498.783,708.923 499.342,691.648 499.902,714.495 500.461,701.836 501.02,686.442 501.579,691.617 502.139,627.915 502.698,620.383 503.257,643.852 503.816,649.878 504.376,705.658 504.935,656.985 505.494,677.936 506.053,665.058 506.613,669.649 507.172,690.32 507.731,729.473 508.29,795.209 508.85,796.875 509.409,762.026 509.968,725.065 510.527,693.12 511.087,710.177 511.646,728.147 512.205,713.017 512.764,762.66 513.324,724.085 513.883,709.069 514.442,741.786 515.001,741.508 515.561,740.031 516.12,741.869 516.679,742.796 517.238,743.219 517.798,756.686 518.357,739.548 518.916,734.726 519.475,714.389 520.035,682.068 520.594,682.366 521.153,699.665 521.712,720.914 522.272,721.814 522.831,722.858 523.39,754.065 523.949,771.378 524.509,733.966 525.068,733.376 525.627,733.236 526.186,754.544 526.746,736.655 527.305,705.494 527.864,707.287 528.423,710.438 528.983,726.899 529.542,710.194 530.101,709.006 530.66,714.993 531.22,730.302 531.779,748.432 532.338,779.696 532.897,793.637 533.457,791.069 534.016,786.754 534.575,786.238 535.134,781.944 535.694,780.756 536.253,745.786 536.812,743.238 537.371,725.199 537.931,757.359 538.49,755.412 539.049,722.252 539.608,720.695 540.168,753.208 540.727,768.725 541.286,764.458 541.845,744.93 542.405,759.963 542.964,741.657 543.523,755.35 544.082,768.915 544.642,782.341 545.201,780.539 545.76,777.714 546.319,793.48 546.879,787.499 547.438,764.611 547.997,778.453 548.556,792.023 549.116,818.916 549.675,831.2 550.234,760.93 550.793,789.882 551.353,771.324 551.912,801.015 552.471,795.408 553.031,820.774 553.59,782.201 554.149,761.162 554.708,756.859 555.268,755.461 555.827,769.469 556.386,781.384 556.945,763.046 557.505,758.936 558.064,776.237 558.623,776.103 559.182,739.892 559.742,739.27 560.301,735.394 560.86,765.265 561.419,764.512 561.979,764.139 562.538,762.174 563.097,774.013 563.656,773.383 564.216,784.228 564.775,783.717 565.334,785.256 565.893,782.722 566.453,780.42 567.012,794.189 567.571,803.92 568.13,765.333 568.69,794.936 569.249,775.586 569.808,738.454 570.367,755.789 570.927,750.677 571.486,750.8 572.045,749.066 572.604,747.106 573.164,757.48 573.723,756.319 574.282,754.45 574.841,768.918 575.401,767.493 575.96,795.645 576.519,788.39 577.078,783.254 577.638,760.048 578.197,771.075 578.756,768.142 579.315,779.21 579.875,742.064 580.434,723.784 580.993,687.723 581.552,704.31 582.112,720.575 582.671,691.018 583.23,725.902 583.789,676.706 584.349,695.862 584.908,728.186 585.467,692.905 586.026,727.804 586.586,725.683 587.145,727.333 587.704,710.403 588.263,710.325 588.823,692.161 589.382,692.224 589.941,694.338 590.5,697.914 591.06,680.197 591.619,662.625 592.178,716.638 592.737,677.13 593.297,680.38 593.856,718.442 594.415,715.371 594.974,729.18 595.534,744.852 596.093,712.055 596.652,694.492 597.211,711.555 597.771,743.49 598.33,741.131 598.889,687.894 599.448,657.52 600.008,693.697 600.567,714.027 601.126,727.413 601.685,741.587 602.245,734.658 602.804,731.994 603.363,715.864 603.922,712.295 604.482,699.377 605.041,700.077 605.6,703.3 606.159,701.767 606.719,719.939 607.278,703.393 607.837,721.833 608.396,721.67 608.956,732.113 609.515,730.704 610.074,743.75 610.633,754.251 611.193,763.665 611.752,762.966 612.311,795.165 612.87,820.78 613.43,815.594 613.989,811.675 614.548,790.153 615.107,819.607 615.667,797.341 616.226,794.074 616.785,788.058 617.344,780.646 617.904,774.511 618.463,770.059 619.022,767.362 619.581,714.917 620.141,730.024 620.7,694.308 621.259,739.817 621.818,738.56 622.378,734.384 622.937,730.647 623.496,742.465 624.055,743.275 624.615,723.902 625.174,723.609 625.733,722.816 626.292,692.722 626.852,707.008 627.411,691.052 627.97,673.906 628.529,642.392 629.089,632.466 629.648,649.232 630.207,634.657 630.766,641.59 631.326,662.021 631.885,664.391 632.444,710.54 633.003,693.487 633.563,710.949 634.122,721.619 634.681,687.743 635.24,686.005 635.8,703.21 636.359,671.227 636.918,674.202 637.477,710.629 638.037,707.838 638.596,693.324 639.155,694.588 639.714,679.509 640.274,694.742 640.833,698.431 641.392,666.417 641.951,666.899 642.511,666.721 643.07,672.074 643.629,708.731 644.188,677.175 644.748,678.485 645.307,662.258 645.866,649.362 646.425,652.207 646.985,638.411 647.544,673.989 648.103,674.751 648.662,692.935 649.222,723.979 649.781,690.549 650.34,662.799 650.899,649.378 651.459,652.646 652.018,657.037 652.577,631.223 653.136,603.605 653.696,593.281 654.255,615.078 654.814,586.944 655.373,613.116 655.933,602.601 656.492,641.056 657.051,661.558 657.61,662.834 658.17,681.488 658.729,684.175 659.288,671.56 659.847,655.263 660.407,655.881 660.966,657.499 661.525,675.297 662.084,711.136 662.644,712.939 663.203,776.049 663.762,723.974 664.321,737.391 664.881,717.937 665.44,731.351 665.999,747.097 666.558,745.958 667.118,727.171 667.677,743.087 668.236,756.309 668.795,720.361 669.355,730.367 669.914,710.503 670.473,676.789 671.032,673.374 671.592,673.63 672.151,708.745 672.71,690.179 673.269,723.508 673.829,769.338 674.388,736.393 674.947,738.688 675.506,723.608 676.066,737.949 676.625,735.077 677.184,717.124 677.743,716.784 678.303,717.013 678.862,719.316 679.421,685.785 679.981,687.579 680.54,688.729 681.099,690.954 681.658,689.355 682.218,670.329 682.777,688.241 683.336,705.566 683.895,691.329 684.455,725.064 685.014,737.77 685.573,735.101 686.132,763.233 686.692,772.198 687.251,734.578 687.81,781.893 688.369,778.463 688.929,758.876 689.488,753.555 690.047,783.004 690.606,776.105 691.166,773.502 691.725,737.971 692.284,719.197 692.843,702.098 693.403,705.965 693.962,720.243 694.521,750.627 695.08,700.519 695.64,716.516 696.199,715.883 696.758,763.441 697.317,743.119 697.877,774.094 698.436,770.725 698.995,778.859 699.554,762.279 700.114,790.6 700.673,785.314 701.232,796.909 701.791,841.69 702.351,819.623 702.91,812.75 703.469,825.239 704.028,820.447 704.588,798.819 705.147,775.847 705.706,775.875 706.265,787.009 706.825,768.742 707.384,780.29 707.943,760.814 708.502,774.782 709.062,784.877 709.621,745.438 710.18,773.718 710.739,739.587 711.299,725.09 711.858,725.477 712.417,744.095 712.976,727.835 713.536,728.18 714.095,708.627 714.654,641.445 715.213,661.855 715.773,665.901 716.332,650.951 716.891,701.284 717.45,732.781 718.01,699.651 718.569,667.636 719.128,670.07 719.687,685.953 720.247,670.467 720.806,654.006 721.365,624.371 721.924,593.179 722.484,582.373 723.043,617.187 723.602,618.825 724.161,573.265 724.721,559.134 725.28,585.89 725.839,576.48 726.398,614.385 726.958,619.838 727.517,609.502 728.076,599.014 728.635,551.979 729.195,557.109 729.754,550.28 730.313,553.404 730.872,574.101 731.432,564.701 731.991,540.322 732.55,551.808 733.109,577.691 733.669,599.643 734.228,606.289 734.787,595.548 735.346,649.874 735.906,636.458 736.465,651.203 737.024,655.135 737.583,658.781 738.143,642.585 738.702,645.776 739.261,616.191 739.82,634.957 740.38,621.251 740.939,644.146 741.498,660.974 742.057,695.323 742.617,680.295 743.176,697.888 743.735,695.859 744.294,712.407 744.854,679.985 745.413,645.065 745.972,666.249 746.531,652.922 747.091,655.145 747.65,625.576 748.209,615.568 748.768,653.79 749.328,662.664 749.887,647.397 750.446,729.514 751.005,727.313 751.565,725.866 752.124,757.388 752.683,739.06 753.242,737.974 753.802,749.743 754.361,748.351 754.92,775.489 755.479,786.577 756.039,744.535 756.598,724.771 757.157,705.16 757.716,670.107 758.276,669.407 758.835,685.622 759.394,685.781 759.953,687.484 760.513,674.488 761.072,691.489 761.631,710.645 762.19,708.378 762.75,739.665 763.309,718.689 763.868,750.159 764.427,751.697 764.987,761.669 765.546,773.663 766.105,815.33 766.664,837.643 767.224,848.012 767.783,822.522 768.342,814.698 768.901,776.753 769.461,753.845 770.02,782.42 770.579,775.956 771.138,769.74 771.698,765.536 772.257,761.373 772.816,755.926 773.375,754.257 773.935,734.536 774.494,730.474 775.053,744.989 775.612,727.065 776.172,690.879 776.731,723.873 777.29,753.787 777.849,766.262 778.409,761.041 778.968,770.685 779.527,734.464 780.086,719.6 780.646,703.961 781.205,688.313 781.764,675.454 782.323,678.59 782.883,648.872 783.442,667.209 784.001,681.741 784.56,679.792 785.12,697.139 785.679,678.479 786.238,632.973 786.797,635.349 787.357,606.744 787.916,626.555 788.475,612.498 789.034,621.137 789.594,655.153 790.153,655.344 790.712,655.284 791.271,650.523 791.831,686.103 792.39,684.741 792.949,698.967 793.508,698.974 794.068,682.458 794.627,685.087 795.186,719.905 795.745,732.899 796.305,745.328 796.864,738.615 797.423,718.792 797.982,735.145 798.542,752.178 799.101,731.78 799.66,710.893 800.219,709.22 800.779,690.341 801.338,677.624 801.897,662.804 802.456,598.138 803.016,588.309 803.575,625.572 804.134,597.576 804.693,599.847 805.253,590.325 805.812,595.888 806.371,614.581 806.931,617.395 807.49,604.539 808.049,641.846 808.608,693.241 809.168,709.617 809.727,723.261 810.286,733.609 810.845,731.349 811.405,775.387 811.964,758.173 812.523,789.081 813.082,802.314 813.642,797.929 814.201,793.656 814.76,789.922 815.319,786.291 815.879,765.651 816.438,760.968 816.997,708.044 817.556,707.585 818.116,724.04 818.675,753.208 819.234,782.945 819.793,761.159 820.353,739.487 820.912,737.539 821.471,752.133 822.03,731.184 822.59,712.285 823.149,679.635 823.708,678.189 824.267,645.568 824.827,662.923 825.386,681.435 825.945,699.381 826.504,683.524 827.064,717.489 827.623,713.526 828.182,648.407 828.741,631.105 829.301,581.102 829.86,603.9 830.419,626.5 830.978,645.507 831.538,630.635 832.097,650.544 832.656,634.91 833.215,621.887 833.775,639.214 834.334,594.282 834.893,614.056 835.452,616.963 836.012,638.198 836.571,642.336 837.13,659.483 837.689,694.085 838.249,693.454 838.808,709.461 839.367,724.688 839.926,725.043 840.486,723.513 841.045,768.814 841.604,762.919 842.163,756.433 842.723,770.72 843.282,767.74 843.841,763.577 844.4,761.846 844.96,772.026 845.519,753.173 846.078,749.181 846.637,727.715 847.197,738.098 847.756,736.235 848.315,753.165 848.874,751.409 849.434,733.617 849.993,730.256 850.552,711.466 851.111,676.601 851.671,658.375 852.23,691.076 852.789,707.493 853.348,704.73 853.908,688.754 854.467,702.628 855.026,665.002 855.585,680.729 856.145,682.608 856.704,665.626 857.263,617.705 857.822,588.999 858.382,596.519 858.941,604.866 859.5,606.926 860.059,608.286 860.619,612.777 861.178,582.458 861.737,568.967 862.296,541.711 862.856,586.101 863.415,577.26 863.974,599.127 864.533,586.189 865.093,611.265 865.652,616.82 866.211,588.491 866.77,594.77 867.33,600.637 867.889,606.393 868.448,611.185 869.007,615.302 869.567,619.649 870.126,624.766 870.685,676.43 871.244,695.022 871.804,707.111 872.363,721.988 872.922,719.32 873.481,736.658 874.041,731.678 874.6,716.72 875.159,713.031 875.718,660.672 876.278,661.698 876.837,645.333 877.396,664.746 877.955,712.848 878.515,696.927 879.074,678.255 879.633,692.258 880.192,640.868 880.752,673.436 881.311,687.597 881.87,705.835 882.429,701.411 882.989,715.952 883.548,715.091 884.107,714.458 884.666,742.792 885.226,712.142 885.785,695.249 886.344,709.037 886.903,689.53 887.463,670.951 888.022,637.852 888.581,621.669 889.14,644.356 889.7,624.513 890.259,627.243 890.818,646.265 891.377,649.982 891.937,618.53 892.496,607.793 893.055,626.586 893.614,612.536 894.174,652.16 894.733,634.291 895.292,636.415 895.851,591.972 896.411,598.178 896.97,634.46 897.529,671.174 898.088,673.081 898.648,674.536 899.207,693.387 899.766,711.244 900.325,741.518 900.885,724.372 901.444,752.464 902.003,781.157 902.562,775.665 903.122,789.672 903.681,783.475 904.24,798.285 904.799,795.125 905.359,721.607 905.918,702.903 906.477,641.216 907.036,646.304 907.596,648.419 908.155,652.888 908.714,650.977 909.273,637.92 909.833,640.193 910.392,627.388 910.951,614.537 911.51,617.817 912.07,632.735 912.629,617.712 913.188,640.213 913.747,675.264 914.307,692.07 914.866,709.113 915.425,740.47 915.984,739.15 916.544,721.538 917.103,685.588 917.662,686.237 918.221,688.589 918.781,689.131 919.34,707.621 919.899,692.554 920.458,711.523 921.018,708.783 921.577,707.592 922.136,724.949 922.695,723.643 923.255,707.022 923.814,671.867 924.373,639.051 924.932,655.219 925.492,658.966 926.051,661.389 926.61,697.158 927.169,694.087 927.729,697.834 928.288,700.357 928.847,681.355 929.406,681.419 929.966,710.871 930.525,741.399 931.084,734.883 931.644,744.978 932.203,744.421 932.762,758.98 933.321,758.203 933.881,749.941 934.44,729.994 934.999,729.103 935.558,658.666 936.118,661.507 936.677,648.695 937.236,632.855 937.795,600.391 938.355,603.064 938.914,622.211 939.473,590.248 940.032,599.089 940.592,621.941 941.151,592.344 941.71,546.836 942.269,554.682 942.829,578.962 943.388,587.241 943.947,576.008 944.506,633.463 945.066,618.554 945.625,639.36 946.184,706.393 946.743,721.541 947.303,701.181 947.862,702.785 948.421,686.723 948.98,671.901 949.54,690.272 950.099,641.232 950.658,643.032 951.217,628.826 951.777,599.09 952.336,619.824 952.895,637.766 953.454,655.098 954.014,657.546 954.573,691.732 955.132,706.599 955.691,723.213 956.251,717.717 956.81,716.431 957.369,718.527 957.928,732.388 958.488,716.59 959.047,701.883 959.606,715.166 960.165,697.307 960.725,715.557 961.284,730.301 961.843,726.772 962.402,695.717 962.962,708.43 963.521,706.492 964.08,708.709 964.639,734.347 965.199,696.639 965.758,695.578 966.317,712.292 966.876,712.187 967.436,698.128 967.995,693.764 968.554,709.339 969.113,708.37 969.673,707.375 970.232,704.131 970.791,704.831 971.35,705.463 971.91,735.775 972.469,767.826 973.028,776.468 973.587,772.291 974.147,769.15 974.706,744.248 975.265,740.401 975.824,722.403 976.384,719.69 976.943,702.097 977.502,720.581 978.061,717.484 978.621,702.672 979.18,670.522 979.739,688.771 980.298,689.101 980.858,690.047 981.417,642.919 981.976,613.019 982.535,615.251 983.095,621.957 983.654,658.865 984.213,663.379 984.772,633.575 985.332,634.694 985.891,622.352 986.45,637.861 987.009,638.104 987.569,641.709 988.128,642.762 988.687,627.572 989.246,628.514 989.806,661.104 990.365,679.628 990.924,699.068 991.483,731.916 992.043,715.148 992.602,696.935 993.161,693.667 993.72,678.694 994.28,709.462 994.839,705.317 995.398,734.19 995.957,661.331 996.517,664.939 997.076,668.616 997.635,671.459 998.194,672.125 998.754,688.452 999.313,672.365 999.872,655.096 1000.43,687.412 1000.99,669.389 1001.55,620.488 1002.11,646.048 1002.67,615.103 1003.23,601.784 1003.79,604.108 1004.35,591.349 1004.91,595.955 1005.46,632.009 1006.02,650.15 1006.58,634.352 1007.14,622.4 1007.7,641.763 1008.26,610.36 1008.82,612.844 1009.38,604.187 1009.94,593.062 1010.5,617.292 1011.06,635.605 1011.62,621.196 1012.18,642.355 1012.73,661.361 1013.29,697.091 1013.85,730.753 1014.41,761.448 1014.97,754.915 1015.53,747.64 1016.09,743.591 1016.65,759.176 1017.21,737.461 1017.77,748.552 1018.33,744.335 1018.89,742.501 1019.45,725.711 1020.01,710.479 1020.56,692.746 1021.12,695.665 1021.68,698.4 1022.24,697.828 1022.8,714.722 1023.36,715.292 1023.92,696.672 1024.48,681.176 1025.04,700.809 1025.6,730.462 1026.16,745.001 1026.72,742.133 1027.28,739.518 1027.83,750.144 1028.39,778.88 1028.95,755.305 1029.51,750.272 1030.07,694.241 1030.63,709.859 1031.19,690.788 1031.75,689.397 1032.31,689.586 1032.87,688.539 1033.43,674.246 1033.99,659.275 1034.55,660.097 1035.1,676.246 1035.66,658.767 1036.22,661.621 1036.78,678.487 1037.34,663.671 1037.9,666.329 1038.46,682.948 1039.02,669.85 1039.58,669.64 1040.14,671.622 1040.7,688.354 1041.26,734.085 1041.82,715.272 1042.38,716.266 1042.93,681.753 1043.49,680.966 1044.05,668.019 1044.61,668.997 1045.17,625.092 1045.73,660.617 1046.29,663.297 1046.85,650.539 1047.41,641.391 1047.97,673.886 1048.53,622.456 1049.09,641.542 1049.65,640.759 1050.2,675.212 1050.76,658.814 1051.32,658.254 1051.88,675.526 1052.44,692.014 1053,691.081 1053.56,689.273 1054.12,674.557 1054.68,739.915 1055.24,726.309 1055.8,725.51 1056.36,726.784 1056.92,724.262 1057.48,752.055 1058.03,731.652 1058.59,714.604 1059.15,698.428 1059.71,698.677 1060.27,696.315 1060.83,695.056 1061.39,694.196 1061.95,711.259 1062.51,710.874 1063.07,712.779 1063.63,692.137 1064.19,677.047 1064.75,694.645 1065.3,693.319 1065.86,695.29 1066.42,694.571 1066.98,741.614 1067.54,736.281 1068.1,734.159 1068.66,698.038 1069.22,698.98 1069.78,746.184 1070.34,795.021 1070.9,793.366 1071.46,789.408 1072.02,770.995 1072.57,747.995 1073.13,728.985 1073.69,722.866 1074.25,737.911 1074.81,732.965 1075.37,730.97 1075.93,708.802 1076.49,689.998 1077.05,704.543 1077.61,668.496 1078.17,687.104 1078.73,687.51 1079.29,686.357 1079.85,689.772 1080.4,655.848 1080.96,668.999 1081.52,669.654 1082.08,717.028 1082.64,684.456 1083.2,649.757 1083.76,669.22 1084.32,672.533 1084.88,687.712 1085.44,705.851 1086,720.836 1086.56,735.479 1087.12,747.917 1087.67,715.148 1088.23,696.061 1088.79,680.582 1089.35,666.249 1089.91,683.968 1090.47,681.705 1091.03,666.902 1091.59,668.184 1092.15,703.457 1092.71,688.034 1093.27,703.08 1093.83,736.207 1094.39,766.01 1094.94,760.615 1095.5,724.428 1096.06,704.197 1096.62,705.292 1097.18,703.559 1097.74,718.211 1098.3,731.684 1098.86,791.771 1099.42,764.951 1099.98,746.63 1100.54,755.823 1101.1,702.141 1101.66,667.401 1102.22,668.483 1102.77,666.799 1103.33,649.766 1103.89,681.16 1104.45,662.479 1105.01,661.875 1105.57,664.392 1106.13,668.295 1106.69,684.996 1107.25,652.545 1107.81,657.585 1108.37,625.64 1108.93,627.188 1109.49,662.132 1110.04,633.106 1110.6,665.714 1111.16,664.238 1111.72,649.527 1112.28,702.899 1112.84,702.573 1113.4,733.937 1113.96,731.932 1114.52,763.055 1115.08,725.087 1115.64,739.233 1116.2,718.361 1116.76,733.816 1117.31,716.465 1117.87,744.579 1118.43,743.751 1118.99,739.352 1119.55,734.706 1120.11,732.418 1120.67,763.566 1121.23,773.523 1121.79,801.909 1122.35,758.493 1122.91,741.087 1123.47,706.789 1124.03,705.483 1124.59,684.721 1125.14,702.817 1125.7,716.835 1126.26,701.093 1126.82,681.642 1127.38,712.805 1127.94,697.617 1128.5,680.749 1129.06,663.864 1129.62,682.865 1130.18,685.522 1130.74,668.965 1131.3,640.483 1131.86,659.443 1132.41,665.473 1132.97,662.762 1133.53,697.903 1134.09,665.037 1134.65,666.081 1135.21,668.387 1135.77,700.703 1136.33,712.062 1136.89,726.319 1137.45,737.953 1138.01,752.012 1138.57,714.687 1139.13,727.07 1139.68,725.67 1140.24,721.34 1140.8,700.24 1141.36,664.957 1141.92,682.457 1142.48,683.4 1143.04,683.057 1143.6,668.468 1144.16,668.952 1144.72,667.652 1145.28,681.381 1145.84,664.803 1146.4,647.964 1146.96,651.409 1147.51,671.485 1148.07,640.84 1148.63,626.098 1149.19,698.005 1149.75,730.865 1150.31,727.013 1150.87,724.344 1151.43,720.394 1151.99,701.268 1152.55,730.934 1153.11,756.149 1153.67,750.885 1154.23,684.364 1154.78,683.509 1155.34,698.651 1155.9,700.31 1156.46,729.916 1157.02,695.992 1157.58,676.388 1158.14,677.572 1158.7,679.681 1159.26,647.902 1159.82,616.151 1160.38,632.977 1160.94,649.832 1161.5,619.025 1162.05,591.709 1162.61,598.446 1163.17,619.147 1163.73,625.156 1164.29,662.16 1164.85,663.801 1165.41,646.309 1165.97,662.936 1166.53,712.072 1167.09,712.519 1167.65,664.366 1168.21,682.603 1168.77,681.723 1169.33,664.132 1169.88,644.951 1170.44,613.835 1171,614.721 1171.56,602.825 1172.12,625.135 1172.68,612.459 1173.24,614.601 1173.8,636.24 1174.36,638.355 1174.92,656.349 1175.48,640.931 1176.04,661.861 1176.6,643.536 1177.15,646.587 1177.71,651.494 1178.27,634.307 1178.83,667.887 1179.39,669.176 1179.95,686.032 1180.51,684.433 1181.07,656.179 1181.63,673.492 1182.19,655.768 1182.75,667.957 1183.31,683.312 1183.87,653.506 1184.43,671.084 1184.98,671.612 1185.54,687.576 1186.1,657.111 1186.66,627.607 1187.22,583.916 1187.78,588.871 1188.34,575.703 1188.9,600.501 1189.46,604.547 1190.02,609.41 1190.58,633.234 1191.14,589.079 1191.7,592.879 1192.25,599.1 1192.81,605.676 1193.37,611.383 1193.93,616.279 1194.49,634.459 1195.05,639.766 1195.61,622.112 1196.17,642.031 1196.73,645.455 1197.29,645.08 1197.85,645.112 1198.41,634.229 1198.97,653.84 1199.52,688.195 1200.08,702.083 1200.64,702.197 1201.2,701.726 1201.76,702.726 1202.32,685.993 1202.88,684.963 1203.44,702.536 1204,686.237 1204.56,703.254 1205.12,687.446 1205.68,670.999 1206.24,657.955 1206.8,627.86 1207.35,663.197 1207.91,679.241 1208.47,664.484 1209.03,683.217 1209.59,680.116 1210.15,668.621 1210.71,685.218 1211.27,687.068 1211.83,707.727 1212.39,706.889 1212.95,707.491 1213.51,724.711 1214.07,709.124 1214.62,740.366 1215.18,688.694 1215.74,718.325 1216.3,703.344 1216.86,687.485 1217.42,717.304 1217.98,716.004 1218.54,700.108 1219.1,717.749 1219.66,731.952 1220.22,749.12 1220.78,761.59 1221.34,739.471 1221.89,721.335 1222.45,734.851 1223.01,729.875 1223.57,712.467 1224.13,697.673 1224.69,701.241 1225.25,699.999 1225.81,732.105 1226.37,711.635 1226.93,694.313 1227.49,699.029 1228.05,694.162 1228.61,677.641 1229.17,659.658 1229.72,644.116 1230.28,614.589 1230.84,634.754 1231.4,669.339 1231.96,672.96 1232.52,705.174 1233.08,704.653 1233.64,722.388 1234.2,738.295 1234.76,736.746 1235.32,735.616 1235.88,732.548 1236.44,728.044 1236.99,691.199 1237.55,707.447 1238.11,704.207 1238.67,719.637 1239.23,750.653 1239.79,758.826 1240.35,772.426 1240.91,783.953 1241.47,795.907 1242.03,757.09 1242.59,732.442 1243.15,728.738 1243.71,726.276 1244.26,688.551 1244.82,670.919 1245.38,672.039 1245.94,673.452 1246.5,709.199 1247.06,710.988 1247.62,762.55 1248.18,757.879 1248.74,736.996 1249.3,750.486 1249.86,727.586 1250.42,725.819 1250.98,735.58 1251.54,733.457 1252.09,713.23 1252.65,708.586 1253.21,709.134 1253.77,739.022 1254.33,735.346 1254.89,746.029 1255.45,757.42 1256.01,718.809 1256.57,719.591 1257.13,749.14 1257.69,710.235 1258.25,722.276 1258.81,719.679 1259.36,716.712 1259.92,708.869 1260.48,691.612 1261.04,675.862 1261.6,657.552 1262.16,638.384 1262.72,674.183 1263.28,661.491 1263.84,648.118 1264.4,648.981 1264.96,666.9 1265.52,699.579 1266.08,716.07 1266.63,747.608 1267.19,773.328 1267.75,802.357 1268.31,796.714 1268.87,806.26 1269.43,767.987 1269.99,713.248 1270.55,712.941 1271.11,714.97 1271.67,712.413 1272.23,697.541 1272.79,679.726 1273.35,649.778 1273.91,632.285 1274.46,636.066 1275.02,633.46 1275.58,652.631 1276.14,688.188 1276.7,683.917 1277.26,716.902 1277.82,713.709 1278.38,694.469 1278.94,644.556 1279.5,679.462 1280.06,647.232 1280.62,665.416 1281.18,682.155 1281.73,663.972 1282.29,648.545 1282.85,634.242 1283.41,652.897 1283.97,671.956 1284.53,643.503 1285.09,680.492 1285.65,681.317 1286.21,664.979 1286.77,618.749 1287.33,639.719 1287.89,623.521 1288.45,627.531 1289,613.633 1289.56,601.302 1290.12,623.985 1290.68,611.227 1291.24,596.176 1291.8,619.079 1292.36,621.359 1292.92,626.832 1293.48,633.929 1294.04,638.195 1294.6,640.598 1295.16,627.02 1295.72,648.148 1296.28,648.19 1296.83,667.998 1297.39,667.574 1297.95,686.35 1298.51,739.418 1299.07,720.896 1299.63,702.886 1300.19,702.03 1300.75,702.716 1301.31,703.511 1301.87,701.577 1302.43,668.525 1302.99,669.128 1303.55,639.049 1304.1,628.556 1304.66,619.146 1305.22,621.415 1305.78,657.808 1306.34,678.593 1306.9,712.959 1307.46,730.305 1308.02,777.239 1308.58,744.493 1309.14,739.989 1309.7,723.969 1310.26,721.802 1310.82,706.565 1311.38,690.442 1311.93,706.893 1312.49,705.218 1313.05,702.739 1313.61,698.816 1314.17,680.736 1314.73,695.048 1315.29,696.213 1315.85,712.545 1316.41,728.952 1316.97,773.953 1317.53,770.978 1318.09,750.195 1318.65,747.007 1319.2,744.693 1319.76,727.38 1320.32,709.854 1320.88,692.913 1321.44,658.044 1322,630.776 1322.56,631.312 1323.12,637.288 1323.68,690.188 1324.24,690.126 1324.8,658.697 1325.36,657.955 1325.92,675.262 1326.47,642.426 1327.03,611.657 1327.59,599.103 1328.15,621.249 1328.71,626.091 1329.27,662.311 1329.83,662.18 1330.39,681.356 1330.95,650.055 1331.51,649.961 1332.07,666.982 1332.63,666.615 1333.19,654.394 1333.75,654.854 1334.3,625.42 1334.86,613.637 1335.42,618.417 1335.98,624.695 1336.54,607.654 1337.1,663.243 1337.66,646.853 1338.22,644.727 1338.78,600.272 1339.34,590.51 1339.9,580.005 1340.46,585.491 1341.02,574.26 1341.57,584.092 1342.13,619.937 1342.69,636.716 1343.25,606.103 1343.81,611.594 1344.37,632.622 1344.93,634.812 1345.49,633.671 1346.05,671.133 1346.61,672.056 1347.17,658.643 1347.73,658.501 1348.29,658.286 1348.84,692.657 1349.4,661.097 1349.96,676.77 1350.52,693.596 1351.08,711.246 1351.64,696.391 1352.2,663.773 1352.76,665.914 1353.32,668.903 1353.88,686.334 1354.44,670.525 1355,705.66 1355.56,692.1 1356.12,693.53 1356.67,659.334 1357.23,642.605 1357.79,659.894 1358.35,695.881 1358.91,680.046 1359.47,666.573 1360.03,685.096 1360.59,701.035 1361.15,698.505 1361.71,700.831 1362.27,696.716 1362.83,710.406 1363.39,739.3 1363.94,704.916 1364.5,718.195 1365.06,749.402 1365.62,808.472 1366.18,784.98 1366.74,794.197 1367.3,834.514 1367.86,842.888 1368.42,847.812 1368.98,856.289 1369.54,864.33 1370.1,839.943 1370.66,863.26 1371.21,869.867 1371.77,811.565 1372.33,767.805 1372.89,763.131 1373.45,756.975 1374.01,734.557 1374.57,714.266 1375.13,716.767 1375.69,667.567 1376.25,685.331 1376.81,719.688 1377.37,700.756 1377.93,729.744 1378.49,729.807 1379.04,709.013 1379.6,706.749 1380.16,717.494 1380.72,747.743 1381.28,761.463 1381.84,756.262 1382.4,754.052 1382.96,765.947 1383.52,760.714 1384.08,753.084 1384.64,777.586 1385.2,772.587 1385.76,753.876 1386.31,718.926 1386.87,720.756 1387.43,701.745 1387.99,701.542 1388.55,668.436 1389.11,672.779 1389.67,640.583 1390.23,625.32 1390.79,659.463 1391.35,648.919 1391.91,634.983 1392.47,640.079 1393.03,643.873 1393.58,662.648 1394.14,715.159 1394.7,660.905 1395.26,659.404 1395.82,612.106 1396.38,614.338 1396.94,650.323 1397.5,637.6 1398.06,624.198 1398.62,626.945 1399.18,631.131 1399.74,619.494 1400.3,627.383 1400.86,630.801 1401.41,618.197 1401.97,666.153 1402.53,653.262 1403.09,686.52 1403.65,750.753 1404.21,697.774 1404.77,686.416 1405.33,671.835 1405.89,658.598 1406.45,647.818 1407.01,617.352 1407.57,636.341 1408.13,652.762 1408.68,671.959 1409.24,678.328 1409.8,709.198 1410.36,709.902 1410.92,725.463 1411.48,707.045 1412.04,705.072 1412.6,749.303 1413.16,762.766 1413.72,803.549 1414.28,799.362 1414.84,765.206 1415.4,789.215 1415.95,797.079 1416.51,823.962 1417.07,798.636 1417.63,777.351 1418.19,725.451 1418.75,754.338 1419.31,717.881 1419.87,731.595 1420.43,712.534 1420.99,694.42 1421.55,695.181 1422.11,678.347 1422.67,694.733 1423.23,692.435 1423.78,664.358 1424.34,667.532 1424.9,669.805 1425.46,701.028 1426.02,681.807 1426.58,683.317 1427.14,695.787 1427.7,708.838 1428.26,661.948 1428.82,664.104 1429.38,648.823 1429.94,650.748 1430.5,635.431 1431.05,621.256 1431.61,657.643 1432.17,609.035 1432.73,630.666 1433.29,666.149 1433.85,650.889 1434.41,662.614 1434.97,662.982 1435.53,649.241 1436.09,635.737 1436.65,656.555 1437.21,657.262 1437.77,676.656 1438.33,645.571 1438.88,630.488 1439.44,651.022 1440,637.254 1440.56,657.452 1441.12,641.436 1441.68,647.146 1442.24,632.885 1442.8,604.147 1443.36,676.52 1443.92,644.555 1444.48,629.777 1445.04,648.905 1445.6,636.971 1446.15,673.134 1446.71,677.154 1447.27,678.108 1447.83,679.179 1448.39,665.016 1448.95,665.068 1449.51,665.545 1450.07,679.291 1450.63,666.122 1451.19,667.095 1451.75,685.922 1452.31,702.007 1452.87,716.569 1453.42,727.062 1453.98,722.603 1454.54,705.437 1455.1,703.123 1455.66,699.769 1456.22,732.177 1456.78,744.341 1457.34,754.659 1457.9,736.056 1458.46,684.062 1459.02,684.651 1459.58,697.943 1460.14,701.676 1460.7,699.135 1461.25,700.956 1461.81,714.7 1462.37,728.094 1462.93,708.883 1463.49,643.012 1464.05,646.783 1464.61,645.265 1465.17,630.309 1465.73,651.453 1466.29,673.229 1466.85,704.087 1467.41,703.335 1467.97,703.911 1468.52,703.395 1469.08,720.802 1469.64,735.632 1470.2,701.308 1470.76,685.482 1471.32,670.67 1471.88,684.176 1472.44,702.484 1473,701.825 1473.56,703 1474.12,685.511 1474.68,681.861 1475.24,680.089 1475.79,664.723 1476.35,716.804 1476.91,731.833 1477.47,759.602 1478.03,741.919 1478.59,770.307 1479.15,734.74 1479.71,715.181 1480.27,729.76 1480.83,726.975 1481.39,722.952 1481.95,704.245 1482.51,735.099 1483.07,751.174 1483.62,731.68 1484.18,713.924 1484.74,711.361 1485.3,723.887 1485.86,673.229 1486.42,690.137 1486.98,703.223 1487.54,687.808 1488.1,720.177 1488.66,732.691 1489.22,729.01 1489.78,710.063 1490.34,711.005 1490.89,714.187 1491.45,711.867 1492.01,694.963 1492.57,697.227 1493.13,697.692 1493.69,745.421 1494.25,756.94 1494.81,755.461 1495.37,736.273 1495.93,698.978 1496.49,667.305 1497.05,664.493 1497.61,649.183 1498.16,633.309 1498.72,571.984 1499.28,575.999 1499.84,551.078 1500.4,543.011 1500.96,533.145 1501.52,558.92 1502.08,551.925 1502.64,558.852 1503.2,561.261 1503.76,567.108 1504.32,605.61 1504.88,581.47 1505.44,575.554 1505.99,585.009 1506.55,604.776 1507.11,625.686 1507.67,646.976 1508.23,660.967 1508.79,631.319 1509.35,666.092 1509.91,684.045 1510.47,684.215 1511.03,682.06 1511.59,699.866 1512.15,748.003 1512.71,742.893 1513.26,738.408 1513.82,735.559 1514.38,747.915 1514.94,762.964 1515.5,758.819 1516.06,723.132 1516.62,720.91 1517.18,722.557 1517.74,705.14 1518.3,702.565 1518.86,688.052 1519.42,719.614 1519.98,737.438 1520.53,732.618 1521.09,729.589 1521.65,712.778 1522.21,712.864 1522.77,713.039 1523.33,741.296 1523.89,720.619 1524.45,688.244 1525.01,688.695 1525.57,686.702 1526.13,672.355 1526.69,670.418 1527.25,684.442 1527.81,701.286 1528.36,666.403 1528.92,649.712 1529.48,697.861 1530.04,696.173 1530.6,712.047 1531.16,726.04 1531.72,727.67 1532.28,757.173 1532.84,767.774 1533.4,749.097 1533.96,745.618 1534.52,778.101 1535.08,743.134 1535.63,740.239 1536.19,737.72 1536.75,732.794 1537.31,746.913 1537.87,742.057 1538.43,722.56 1538.99,716.961 1539.55,731.317 1540.11,727.302 1540.67,721.785 1541.23,653.81 1541.79,653.711 1542.35,655.211 1542.9,655.065 1543.46,738.678 1544.02,736.215 1544.58,701.027 1545.14,668.346 1545.7,668.094 1546.26,665.372 1546.82,697.961 1547.38,699.405 1547.94,666.199 1548.5,652.533 1549.06,622.435 1549.62,612.281 1550.18,652.959 1550.73,623.532 1551.29,627.947 1551.85,630.826 1552.41,631.653 1552.97,635.527 1553.53,669.501 1554.09,669.967 1554.65,653.941 1555.21,655.795 1555.77,644.428 1556.33,681.693 1556.89,665.246 1557.45,682.366 1558,717.992 1558.56,720.013 1559.12,686.949 1559.68,654.205 1560.24,640.427 1560.8,606.553 1561.36,626.122 1561.92,643.406 1562.48,646.558 1563.04,652.052 1563.6,686.32 1564.16,670.102 1564.72,701.362 1565.28,637.386 1565.83,623.514 1566.39,613.492 1566.95,634.751 1567.51,671.086 1568.07,639.795 1568.63,658.075 1569.19,658.553 1569.75,679.699 1570.31,681.563 1570.87,644.505 1571.43,680.341 1571.99,663.67 1572.55,680.712 1573.1,699.221 1573.66,697.347 1574.22,713.159 1574.78,713.305 1575.34,728.422 1575.9,710.679 1576.46,709.588 1577.02,692.1 1577.58,741.018 1578.14,770.608 1578.7,750.507 1579.26,730.976 1579.82,728.545 1580.37,726.503 1580.93,705.337 1581.49,700.39 1582.05,701.256 1582.61,664.497 1583.17,667.594 1583.73,638.247 1584.29,656.216 1584.85,624.72 1585.41,627.111 1585.97,599.787 1586.53,623.087 1587.09,626.164 1587.65,630.337 1588.2,679.969 1588.76,695.589 1589.32,693.412 1589.88,664.355 1590.44,667.163 1591,700.425 1591.56,733.292 1592.12,712.689 1592.68,712.4 1593.24,726.549 1593.8,725.511 1594.36,754.026 1594.92,752.696 1595.47,767.102 1596.03,751.028 1596.59,779.114 1597.15,742.286 1597.71,769.386 1598.27,752.919 1598.83,749.072 1599.39,727.11 1599.95,725.354 1600.51,689.349 1601.07,687.895 1601.63,690.23 1602.19,725.905 1602.74,704.166 1603.3,683.827 1603.86,668.156 1604.42,653.252 1604.98,672.372 1605.54,686.515 1606.1,671.939 1606.66,623.018 1607.22,626.297 1607.78,616.559 1608.34,616.768 1608.9,617.34 1609.46,636.92 1610.02,607.448 1610.57,630.699 1611.13,649.836 1611.69,669.592 1612.25,671.021 1612.81,656.993 1613.37,654.139 1613.93,687.268 1614.49,723.058 1615.05,706.168 1615.61,705.469 1616.17,689.188 1616.73,690.896 1617.29,676.885 1617.84,659.366 1618.4,678.227 1618.96,693.219 1619.52,692.86 1620.08,677.998 1620.64,675.672 1621.2,691.4 1621.76,673.4 1622.32,675.056 1622.88,641.997 1623.44,644.343 1624,644.93 1624.56,629.243 1625.11,649.097 1625.67,651.436 1626.23,669.556 1626.79,686.147 1627.35,653.618 1627.91,618.482 1628.47,639.463 1629.03,627.662 1629.59,644.219 1630.15,691.857 1630.71,658.929 1631.27,641.741 1631.83,630.138 1632.39,648.242 1632.94,600.865 1633.5,605.928 1634.06,626.773 1634.62,598.492 1635.18,615.108 1635.74,601.374 1636.3,576.552 1636.86,631.163 1637.42,632.762 1637.98,620.219 1638.54,643.343 1639.1,663.296 1639.66,681.135 1640.21,662.565 1640.77,649.025 1641.33,633.707 1641.89,621.391 1642.45,642.041 1643.01,646.595 1643.57,601.742 1644.13,608.05 1644.69,615.403 1645.25,620.867 1645.81,627.199 1646.37,646.223 1646.93,698.533 1647.48,715.67 1648.04,713.958 1648.6,711.871 1649.16,726.427 1649.72,724.517 1650.28,740.002 1650.84,750.688 1651.4,762.06 1651.96,771.426 1652.52,767.759 1653.08,744.657 1653.64,740.448 1654.2,753.088 1654.76,749.734 1655.31,745.488 1655.87,725.828 1656.43,723.143 1656.99,705.139 1657.55,739.432 1658.11,704.327 1658.67,703.178 1659.23,703.59 1659.79,752.538 1660.35,732.913 1660.91,733.304 1661.47,732.687 1662.03,696.718 1662.58,694.11 1663.14,677.71 1663.7,694.115 1664.26,741.801 1664.82,707.581 1665.38,687.303 1665.94,688.551 1666.5,669.131 1667.06,684.237 1667.62,699.826 1668.18,699.142 1668.74,700.988 1669.3,716.273 1669.85,700.338 1670.41,700.876 1670.97,694.444 1671.53,692.943 1672.09,694.871 1672.65,715.232 1673.21,681.936 1673.77,681.912 1674.33,714.054 1674.89,716.023 1675.45,715.559 1676.01,698.657 1676.57,729.168 1677.13,677.483 1677.68,646.829 1678.24,668.449 1678.8,705.095 1679.36,719.335 1679.92,716.884 1680.48,715.543 1681.04,716.52 1681.6,747.741 1682.16,777.903 1682.72,824.301 1683.28,770.439 1683.84,785.885 1684.4,749.694 1684.95,762.276 1685.51,695.13 1686.07,680.765 1686.63,666.185 1687.19,677.32 1687.75,674.084 1688.31,642.161 1688.87,643.26 1689.43,628.854 1689.99,644.392 1690.55,696.333 1691.11,663.873 1691.67,712.834 1692.23,694.041 1692.78,656.638 1693.34,625.572 1693.9,596.022 1694.46,581.852 1695.02,604.93 1695.58,592.653 1696.14,630.054 1696.7,615.901 1697.26,617.305 1697.82,652.882 1698.38,707.585 1698.94,687.454 1699.5,733.779 1700.05,714.365 1700.61,684.022 1701.17,717.93 1701.73,700.355 1702.29,700.508 1702.85,687.179 1703.41,685.739 1703.97,668.429 1704.53,683.47 1705.09,681.935 1705.65,682.93 1706.21,715.505 1706.77,730.456 1707.32,724.99 1707.88,724.2 1708.44,706.629 1709,678.665 1709.56,714.392 1710.12,698.424 1710.68,684.544 1711.24,650.901 1711.8,668.123 1712.36,683.49 1712.92,680.73 1713.48,662.993 1714.04,698.592 1714.6,699.292 1715.15,727.884 1715.71,711.262 1716.27,746.499 1716.83,745.071 1717.39,743.549 1717.95,724.713 1718.51,707.591 1719.07,710.532 1719.63,707.029 1720.19,705.856 1720.75,702.115 1721.31,702.081 1721.87,712.857 1722.42,707.576 1722.98,704.357 1723.54,736.744 1724.1,735.583 1724.66,748.917 1725.22,759.1 1725.78,755.525 1726.34,801.797 1726.9,822.015 1727.46,844.95 1728.02,820.677 1728.58,812.091 1729.14,807.45 1729.69,739.013 1730.25,718.66 1730.81,714.358 1731.37,746.122 1731.93,741.786 1732.49,707.734 1733.05,693.643 1733.61,693.024 1734.17,706.789 1734.73,668.067 1735.29,637.661 1735.85,590.154 1736.41,592.555 1736.97,578.545 1737.52,596.57 1738.08,587.362 1738.64,576.868 1739.2,597.554 1739.76,618.344 1740.32,601.218 1740.88,607.141 1741.44,626.047 1742,627.278 1742.56,630.788 1743.12,616.974 1743.68,590.087 1744.24,627.632 1744.79,630.248 1745.35,649.979 1745.91,666.187 1746.47,668.877 1747.03,669.98 1747.59,689.401 1748.15,671.45 1748.71,670.455 1749.27,657.579 1749.83,627.52 1750.39,612.553 1750.95,583.259 1751.51,608.503 1752.06,626.976 1752.62,628.322 1753.18,630.342 1753.74,617.764 1754.3,636.604 1754.86,635.684 1755.42,666.499 1755.98,731.664 1756.54,712.685 1757.1,678.936 1757.66,681.01 1758.22,701.907 1758.78,681.542 1759.34,663.479 1759.89,665.967 1760.45,699.4 1761.01,713.112 1761.57,675.983 1762.13,691.257 1762.69,693.169 1763.25,692.183 1763.81,720.244 1764.37,733.74 1764.93,746.893 1765.49,747.997 1766.05,727.117 1766.61,757.117 1767.16,751.748 1767.72,783.278 1768.28,779.121 1768.84,757.241 1769.4,738.756 1769.96,784.075 1770.52,779.749 1771.08,773.229 1771.64,719.147 1772.2,699.73 1772.76,732.322 1773.32,731.008 1773.88,727.253 1774.43,695.46 1774.99,675.195 1775.55,656.517 1776.11,643.595 1776.67,644.394 1777.23,660.883 1777.79,645.803 1778.35,631.322 1778.91,633.356 1779.47,682.87 1780.03,683.431 1780.59,666.558 1781.15,666.182 1781.71,716.942 1782.26,731.048 1782.82,680.94 1783.38,649.454 1783.94,667.195 1784.5,687.036 1785.06,690.101 1785.62,702.161 1786.18,668.491 1786.74,702.71 1787.3,702.031 1787.86,718.262 1788.42,714.379 1788.98,695.88 1789.53,697.086 1790.09,696.012 1790.65,726.074 1791.21,707.679 1791.77,740.398 1792.33,772.599 1792.89,748.589 1793.45,730.707 1794.01,725.624 1794.57,740.52 1795.13,718.797 1795.69,734.354 1796.25,733.499 1796.8,697.535 1797.36,681.989 1797.92,667.563 1798.48,685.793 1799.04,666.249 1799.6,698.493 1800.16,698.648 1800.72,730.042 1801.28,727.436 1801.84,726.209 1802.4,707.473 1802.96,721.97 1803.52,684.867 1804.08,686.414 1804.63,656.231 1805.19,721.733 1805.75,734.534 1806.31,745.837 1806.87,743.024 1807.43,755.438 1807.99,787.509 1808.55,785.965 1809.11,784.319 1809.67,779.401 1810.23,791.585 1810.79,766.895 1811.35,762.844 1811.9,773.76 1812.46,755.003 1813.02,751.388 1813.58,748.83 1814.14,728.331 1814.7,724.005 1815.26,688.588 1815.82,671.217 1816.38,686.733 1816.94,665.545 1817.5,663.182 1818.06,648.65 1818.62,649.481 1819.18,647.736 1819.73,615.793 1820.29,618.348 1820.85,621.181 1821.41,605.81 1821.97,613.94 1822.53,617.367 1823.09,637.062 1823.65,639.111 1824.21,656.45 1824.77,658.277 1825.33,628.958 1825.89,647.098 1826.45,665.101 1827,648.77 1827.56,651.998 1828.12,654.648 1828.68,672.454 1829.24,669.786 1829.8,686.33 1830.36,683.922 1830.92,666.995 1831.48,652.088 1832.04,637.085 1832.6,628.092 1833.16,636.198 1833.72,634.859 1834.27,619.802 1834.83,602.277 1835.39,589.189 1835.95,599.031 1836.51,602.932 1837.07,625.872 1837.63,595.824 1838.19,618.253 \"/>\n<path clip-path=\"url(#clip043)\" d=\"M720.247 689.528 L720.806 689.528 L721.365 689.528 L721.924 689.528 L722.484 689.528 L723.043 689.528 L723.602 689.528 L724.161 689.528 L724.721 689.528 L725.28 689.528 L725.839 689.528 L726.398 689.528 L726.958 689.528 L727.517 689.528 L728.076 689.528 L728.635 689.528 L729.195 689.528 L729.754 689.528 L730.313 689.528 L730.872 689.528 L731.432 689.528 L731.991 689.528 L732.55 689.528 L733.109 689.528 L733.669 689.528 L734.228 689.528 L734.787 689.528 L735.346 689.528 L735.906 689.528 L736.465 689.528 L737.024 689.528 L737.583 689.528 L738.143 689.528 L738.702 689.528 L739.261 689.528 L739.82 689.528 L740.38 689.528 L740.939 689.528 L741.498 689.528 L742.057 689.528 L742.617 689.528 L743.176 689.528 L743.735 689.528 L744.294 689.528 L744.854 689.528 L745.413 689.528 L745.972 689.528 L746.531 689.528 L747.091 689.528 L747.65 689.528 L748.209 689.528 L748.768 689.528 L749.328 689.528 L749.887 689.528 L750.446 689.528 L751.005 689.528 L751.565 689.528 L752.124 689.528 L752.683 689.528 L753.242 689.528 L753.802 689.528 L754.361 689.528 L754.92 689.528 L755.479 689.528 L756.039 689.528 L756.598 689.528 L757.157 689.528 L757.716 689.528 L758.276 689.528 L758.835 689.528 L759.394 689.528 L759.953 689.528 L760.513 689.528 L761.072 689.528 L761.631 689.528 L762.19 689.528 L762.75 689.528 L763.309 689.528 L763.868 689.528 L764.427 689.528 L764.987 689.528 L765.546 689.528 L766.105 689.528 L766.664 689.528 L767.224 689.528 L767.783 689.528 L768.342 689.528 L768.901 689.528 L769.461 689.528 L770.02 689.528 L770.579 689.528 L771.138 689.528 L771.698 689.528 L772.257 689.528 L772.816 689.528 L773.375 689.528 L773.935 689.528 L774.494 689.528 L775.053 689.528 L775.612 689.528 L776.172 689.528 L776.731 689.528 L777.29 689.528 L777.849 689.528 L778.409 689.528 L778.968 689.528 L779.527 689.528 L780.086 689.528 L780.646 689.528 L781.205 689.528 L781.764 689.528 L782.323 689.528 L782.883 689.528 L783.442 689.528 L784.001 689.528 L784.56 689.528 L785.12 689.528 L785.679 689.528 L786.238 689.528 L786.797 689.528 L787.357 689.528 L787.916 689.528 L788.475 689.528 L789.034 689.528 L789.594 689.528 L790.153 689.528 L790.712 689.528 L791.271 689.528 L791.831 689.528 L792.39 689.528 L792.949 689.528 L793.508 689.528 L794.068 689.528 L794.627 689.528 L795.186 689.528 L795.745 689.528 L796.305 689.528 L796.864 689.528 L797.423 689.528 L797.982 689.528 L798.542 689.528 L799.101 689.528 L799.66 689.528 L800.219 689.528 L800.779 689.528 L801.338 689.528 L801.897 689.528 L802.456 689.528 L803.016 689.528 L803.575 689.528 L804.134 689.528 L804.693 689.528 L805.253 689.528 L805.812 689.528 L806.371 689.528 L806.931 689.528 L807.49 689.528 L808.049 689.528 L808.608 689.528 L809.168 689.528 L809.727 689.528 L810.286 689.528 L810.845 689.528 L811.405 689.528 L811.964 689.528 L812.523 689.528 L813.082 689.528 L813.642 689.528 L814.201 689.528 L814.76 689.528 L815.319 689.528 L815.879 689.528 L816.438 689.528 L816.997 689.528 L817.556 689.528 L818.116 689.528 L818.675 689.528 L819.234 689.528 L819.793 689.528 L820.353 689.528 L820.912 689.528 L821.471 689.528 L822.03 689.528 L822.59 689.528 L823.149 689.528 L823.708 689.528 L824.267 689.528 L824.827 689.528 L825.386 689.528 L825.945 689.528 L826.504 689.528 L827.064 689.528 L827.623 689.528 L828.182 689.528 L828.741 689.528 L829.301 689.528 L829.86 689.528 L830.419 689.528 L830.978 689.528 L831.538 689.528 L832.097 689.528 L832.656 689.528 L833.215 689.528 L833.775 689.528 L834.334 689.528 L834.893 689.528 L835.452 689.528 L836.012 689.528 L836.571 689.528 L837.13 689.528 L837.689 689.528 L838.249 689.528 L838.808 689.528 L839.367 689.528 L839.926 689.528 L840.486 689.528 L841.045 689.528 L841.604 689.528 L842.163 689.528 L842.723 689.528 L843.282 689.528 L843.841 689.528 L844.4 689.528 L844.96 689.528 L845.519 689.528 L846.078 689.528 L846.637 689.528 L847.197 689.528 L847.756 689.528 L848.315 689.528 L848.874 689.528 L849.434 689.528 L849.993 689.528 L850.552 689.528 L851.111 689.528 L851.671 689.528 L852.23 689.528 L852.789 689.528 L853.348 689.528 L853.908 689.528 L854.467 689.528 L855.026 689.528 L855.585 689.528 L856.145 689.528 L856.704 689.528 L857.263 689.528 L857.822 689.528 L858.382 689.528 L858.941 689.528 L859.5 689.528 L860.059 689.528 L860.619 689.528 L861.178 689.528 L861.737 689.528 L862.296 689.528 L862.856 689.528 L863.415 689.528 L863.974 689.528 L864.533 689.528 L865.093 689.528 L865.652 689.528 L866.211 689.528 L866.77 689.528 L867.33 689.528 L867.889 689.528 L868.448 689.528 L869.007 689.528 L869.567 689.528 L870.126 689.528 L870.685 689.528 L871.244 689.528 L871.804 689.528 L872.363 689.528 L872.922 689.528 L873.481 689.528 L874.041 689.528 L874.6 689.528 L875.159 689.528 L875.718 689.528 L876.278 689.528 L876.837 689.528 L877.396 689.528 L877.955 689.528 L878.515 689.528 L879.074 689.528 L879.633 689.528 L880.192 689.528 L880.752 689.528 L881.311 689.528 L881.87 689.528 L882.429 689.528 L882.989 689.528 L883.548 689.528 L884.107 689.528 L884.666 689.528 L885.226 689.528 L885.785 689.528 L886.344 689.528 L886.903 689.528 L887.463 689.528 L888.022 689.528 L888.581 689.528 L889.14 689.528 L889.7 689.528 L890.259 689.528 L890.818 689.528 L891.377 689.528 L891.937 689.528 L892.496 689.528 L893.055 689.528 L893.614 689.528 L894.174 689.528 L894.733 689.528 L895.292 689.528 L895.851 689.528 L896.411 689.528 L896.97 689.528 L897.529 689.528 L898.088 689.528 L898.648 689.528 L899.207 689.528 L899.766 689.528 L900.325 689.528 L900.885 689.528 L901.444 689.528 L902.003 689.528 L902.562 689.528 L903.122 689.528 L903.681 689.528 L904.24 689.528 L904.799 689.528 L905.359 689.528 L905.918 689.528 L906.477 689.528 L907.036 689.528 L907.596 689.528 L908.155 689.528 L908.714 689.528 L909.273 689.528 L909.833 689.528 L910.392 689.528 L910.951 689.528 L911.51 689.528 L912.07 689.528 L912.629 689.528 L913.188 689.528 L913.747 689.528 L914.307 689.528 L914.866 689.528 L915.425 689.528 L915.984 689.528 L916.544 689.528 L917.103 689.528 L917.662 689.528 L918.221 689.528 L918.781 689.528 L919.34 689.528 L919.899 689.528 L920.458 689.528 L921.018 689.528 L921.577 689.528 L922.136 689.528 L922.695 689.528 L923.255 689.528 L923.814 689.528 L924.373 689.528 L924.932 689.528 L925.492 689.528 L926.051 689.528 L926.61 689.528 L927.169 689.528 L927.729 689.528 L928.288 689.528 L928.847 689.528 L929.406 689.528 L929.966 689.528 L930.525 689.528 L931.084 689.528 L931.644 689.528 L932.203 689.528 L932.762 689.528 L933.321 689.528 L933.881 689.528 L934.44 689.528 L934.999 689.528 L935.558 689.528 L936.118 689.528 L936.677 689.528 L937.236 689.528 L937.795 689.528 L938.355 689.528 L938.914 689.528 L939.473 689.528 L940.032 689.528 L940.592 689.528 L941.151 689.528 L941.71 689.528 L942.269 689.528 L942.829 689.528 L943.388 689.528 L943.947 689.528 L944.506 689.528 L945.066 689.528 L945.625 689.528 L946.184 689.528 L946.743 689.528 L947.303 689.528 L947.862 689.528 L948.421 689.528 L948.98 689.528 L949.54 689.528 L950.099 689.528 L950.658 689.528 L951.217 689.528 L951.777 689.528 L952.336 689.528 L952.895 689.528 L953.454 689.528 L954.014 689.528 L954.573 689.528 L955.132 689.528 L955.691 689.528 L956.251 689.528 L956.81 689.528 L957.369 689.528 L957.928 689.528 L958.488 689.528 L959.047 689.528 L959.606 689.528 L960.165 689.528 L960.725 689.528 L961.284 689.528 L961.843 689.528 L962.402 689.528 L962.962 689.528 L963.521 689.528 L964.08 689.528 L964.639 689.528 L965.199 689.528 L965.758 689.528 L966.317 689.528 L966.876 689.528 L967.436 689.528 L967.995 689.528 L968.554 689.528 L969.113 689.528 L969.673 689.528 L970.232 689.528 L970.791 689.528 L971.35 689.528 L971.91 689.528 L972.469 689.528 L973.028 689.528 L973.587 689.528 L974.147 689.528 L974.706 689.528 L975.265 689.528 L975.824 689.528 L976.384 689.528 L976.943 689.528 L977.502 689.528 L978.061 689.528 L978.621 689.528 L979.18 689.528 L979.739 689.528 L980.298 689.528 L980.858 689.528 L981.417 689.528 L981.976 689.528 L982.535 689.528 L983.095 689.528 L983.654 689.528 L984.213 689.528 L984.772 689.528 L985.332 689.528 L985.891 689.528 L986.45 689.528 L987.009 689.528 L987.569 689.528 L988.128 689.528 L988.687 689.528 L989.246 689.528 L989.806 689.528 L990.365 689.528 L990.924 689.528 L991.483 689.528 L992.043 689.528 L992.602 689.528 L993.161 689.528 L993.72 689.528 L994.28 689.528 L994.839 689.528 L995.398 689.528 L995.957 689.528 L996.517 689.528 L997.076 689.528 L997.635 689.528 L998.194 689.528 L998.754 689.528 L999.313 689.528 L999.872 689.528 L1000.43 689.528 L1000.99 689.528 L1001.55 689.528 L1002.11 689.528 L1002.67 689.528 L1003.23 689.528 L1003.79 689.528 L1004.35 689.528 L1004.91 689.528 L1005.46 689.528 L1006.02 689.528 L1006.58 689.528 L1007.14 689.528 L1007.7 689.528 L1008.26 689.528 L1008.82 689.528 L1009.38 689.528 L1009.94 689.528 L1010.5 689.528 L1011.06 689.528 L1011.62 689.528 L1012.18 689.528 L1012.73 689.528 L1013.29 689.528 L1013.85 689.528 L1014.41 689.528 L1014.97 689.528 L1015.53 689.528 L1016.09 689.528 L1016.65 689.528 L1017.21 689.528 L1017.77 689.528 L1018.33 689.528 L1018.89 689.528 L1019.45 689.528 L1020.01 689.528 L1020.56 689.528 L1021.12 689.528 L1021.68 689.528 L1022.24 689.528 L1022.8 689.528 L1023.36 689.528 L1023.92 689.528 L1024.48 689.528 L1025.04 689.528 L1025.6 689.528 L1026.16 689.528 L1026.72 689.528 L1027.28 689.528 L1027.83 689.528 L1028.39 689.528 L1028.95 689.528 L1029.51 689.528 L1030.07 689.528 L1030.63 689.528 L1031.19 689.528 L1031.75 689.528 L1032.31 689.528 L1032.87 689.528 L1033.43 689.528 L1033.99 689.528 L1034.55 689.528 L1035.1 689.528 L1035.66 689.528 L1036.22 689.528 L1036.78 689.528 L1037.34 689.528 L1037.9 689.528 L1038.46 689.528 L1039.02 689.528 L1039.58 689.528 L1040.14 689.528 L1040.7 689.528 L1041.26 689.528 L1041.82 689.528 L1042.38 689.528 L1042.93 689.528 L1043.49 689.528 L1044.05 689.528 L1044.61 689.528 L1045.17 689.528 L1045.73 689.528 L1046.29 689.528 L1046.85 689.528 L1047.41 689.528 L1047.97 689.528 L1048.53 689.528 L1049.09 689.528 L1049.65 689.528 L1050.2 689.528 L1050.76 689.528 L1051.32 689.528 L1051.88 689.528 L1052.44 689.528 L1053 689.528 L1053.56 689.528 L1054.12 689.528 L1054.68 689.528 L1055.24 689.528 L1055.8 689.528 L1056.36 689.528 L1056.92 689.528 L1057.48 689.528 L1058.03 689.528 L1058.59 689.528 L1059.15 689.528 L1059.71 689.528 L1060.27 689.528 L1060.83 689.528 L1061.39 689.528 L1061.95 689.528 L1062.51 689.528 L1063.07 689.528 L1063.63 689.528 L1064.19 689.528 L1064.75 689.528 L1065.3 689.528 L1065.86 689.528 L1066.42 689.528 L1066.98 689.528 L1067.54 689.528 L1068.1 689.528 L1068.66 689.528 L1069.22 689.528 L1069.78 689.528 L1070.34 689.528 L1070.9 689.528 L1071.46 689.528 L1072.02 689.528 L1072.57 689.528 L1073.13 689.528 L1073.69 689.528 L1074.25 689.528 L1074.81 689.528 L1075.37 689.528 L1075.93 689.528 L1076.49 689.528 L1077.05 689.528 L1077.61 689.528 L1078.17 689.528 L1078.73 689.528 L1079.29 689.528 L1079.85 689.528 L1080.4 689.528 L1080.96 689.528 L1081.52 689.528 L1082.08 689.528 L1082.64 689.528 L1083.2 689.528 L1083.76 689.528 L1084.32 689.528 L1084.88 689.528 L1085.44 689.528 L1086 689.528 L1086.56 689.528 L1087.12 689.528 L1087.67 689.528 L1088.23 689.528 L1088.79 689.528 L1089.35 689.528 L1089.91 689.528 L1090.47 689.528 L1091.03 689.528 L1091.59 689.528 L1092.15 689.528 L1092.71 689.528 L1093.27 689.528 L1093.83 689.528 L1094.39 689.528 L1094.94 689.528 L1095.5 689.528 L1096.06 689.528 L1096.62 689.528 L1097.18 689.528 L1097.74 689.528 L1098.3 689.528 L1098.86 689.528 L1099.42 689.528 L1099.98 689.528 L1100.54 689.528 L1101.1 689.528 L1101.66 689.528 L1102.22 689.528 L1102.77 689.528 L1103.33 689.528 L1103.89 689.528 L1104.45 689.528 L1105.01 689.528 L1105.57 689.528 L1106.13 689.528 L1106.69 689.528 L1107.25 689.528 L1107.81 689.528 L1108.37 689.528 L1108.93 689.528 L1109.49 689.528 L1110.04 689.528 L1110.6 689.528 L1111.16 689.528 L1111.72 689.528 L1112.28 689.528 L1112.84 689.528 L1113.4 689.528 L1113.96 689.528 L1114.52 689.528 L1115.08 689.528 L1115.64 689.528 L1116.2 689.528 L1116.76 689.528 L1117.31 689.528 L1117.87 689.528 L1118.43 689.528 L1118.99 689.528 L1119.55 689.528 L1120.11 689.528 L1120.67 689.528 L1121.23 689.528 L1121.79 689.528 L1122.35 689.528 L1122.91 689.528 L1123.47 689.528 L1124.03 689.528 L1124.59 689.528 L1125.14 689.528 L1125.7 689.528 L1126.26 689.528 L1126.82 689.528 L1127.38 689.528 L1127.94 689.528 L1128.5 689.528 L1129.06 689.528 L1129.62 689.528 L1130.18 689.528 L1130.74 689.528 L1131.3 689.528 L1131.86 689.528 L1132.41 689.528 L1132.97 689.528 L1133.53 689.528 L1134.09 689.528 L1134.65 689.528 L1135.21 689.528 L1135.77 689.528 L1136.33 689.528 L1136.89 689.528 L1137.45 689.528 L1138.01 689.528 L1138.57 689.528 L1139.13 689.528 L1139.68 689.528 L1140.24 689.528 L1140.8 689.528 L1141.36 689.528 L1141.92 689.528 L1142.48 689.528 L1143.04 689.528 L1143.6 689.528 L1144.16 689.528 L1144.72 689.528 L1145.28 689.528 L1145.84 689.528 L1146.4 689.528 L1146.96 689.528 L1147.51 689.528 L1148.07 689.528 L1148.63 689.528 L1149.19 689.528 L1149.75 689.528 L1150.31 689.528 L1150.87 689.528 L1151.43 689.528 L1151.99 689.528 L1152.55 689.528 L1153.11 689.528 L1153.67 689.528 L1154.23 689.528 L1154.78 689.528 L1155.34 689.528 L1155.9 689.528 L1156.46 689.528 L1157.02 689.528 L1157.58 689.528 L1158.14 689.528 L1158.7 689.528 L1159.26 689.528 L1159.82 689.528 L1160.38 689.528 L1160.94 689.528 L1161.5 689.528 L1162.05 689.528 L1162.61 689.528 L1163.17 689.528 L1163.73 689.528 L1164.29 689.528 L1164.85 689.528 L1165.41 689.528 L1165.97 689.528 L1166.53 689.528 L1167.09 689.528 L1167.65 689.528 L1168.21 689.528 L1168.77 689.528 L1169.33 689.528 L1169.88 689.528 L1170.44 689.528 L1171 689.528 L1171.56 689.528 L1172.12 689.528 L1172.68 689.528 L1173.24 689.528 L1173.8 689.528 L1174.36 689.528 L1174.92 689.528 L1175.48 689.528 L1176.04 689.528 L1176.6 689.528 L1177.15 689.528 L1177.71 689.528 L1178.27 689.528 L1178.83 689.528 L1179.39 689.528 L1179.95 689.528 L1180.51 689.528 L1181.07 689.528 L1181.63 689.528 L1182.19 689.528 L1182.75 689.528 L1183.31 689.528 L1183.87 689.528 L1184.43 689.528 L1184.98 689.528 L1185.54 689.528 L1186.1 689.528 L1186.66 689.528 L1187.22 689.528 L1187.78 689.528 L1188.34 689.528 L1188.9 689.528 L1189.46 689.528 L1190.02 689.528 L1190.58 689.528 L1191.14 689.528 L1191.7 689.528 L1192.25 689.528 L1192.81 689.528 L1193.37 689.528 L1193.93 689.528 L1194.49 689.528 L1195.05 689.528 L1195.61 689.528 L1196.17 689.528 L1196.73 689.528 L1197.29 689.528 L1197.85 689.528 L1198.41 689.528 L1198.97 689.528 L1199.52 689.528 L1200.08 689.528 L1200.64 689.528 L1201.2 689.528 L1201.76 689.528 L1202.32 689.528 L1202.88 689.528 L1203.44 689.528 L1204 689.528 L1204.56 689.528 L1205.12 689.528 L1205.68 689.528 L1206.24 689.528 L1206.8 689.528 L1207.35 689.528 L1207.91 689.528 L1208.47 689.528 L1209.03 689.528 L1209.59 689.528 L1210.15 689.528 L1210.71 689.528 L1211.27 689.528 L1211.83 689.528 L1212.39 689.528 L1212.95 689.528 L1213.51 689.528 L1214.07 689.528 L1214.62 689.528 L1215.18 689.528 L1215.74 689.528 L1216.3 689.528 L1216.86 689.528 L1217.42 689.528 L1217.98 689.528 L1218.54 689.528 L1219.1 689.528 L1219.66 689.528 L1220.22 689.528 L1220.78 689.528 L1221.34 689.528 L1221.89 689.528 L1222.45 689.528 L1223.01 689.528 L1223.57 689.528 L1224.13 689.528 L1224.69 689.528 L1225.25 689.528 L1225.81 689.528 L1226.37 689.528 L1226.93 689.528 L1227.49 689.528 L1228.05 689.528 L1228.61 689.528 L1229.17 689.528 L1229.72 689.528 L1230.28 689.528 L1230.84 689.528 L1231.4 689.528 L1231.96 689.528 L1232.52 689.528 L1233.08 689.528 L1233.64 689.528 L1234.2 689.528 L1234.76 689.528 L1235.32 689.528 L1235.88 689.528 L1236.44 689.528 L1236.99 689.528 L1237.55 689.528 L1238.11 689.528 L1238.67 689.528 L1239.23 689.528 L1239.79 689.528 L1240.35 689.528 L1240.91 689.528 L1241.47 689.528 L1242.03 689.528 L1242.59 689.528 L1243.15 689.528 L1243.71 689.528 L1244.26 689.528 L1244.82 689.528 L1245.38 689.528 L1245.94 689.528 L1246.5 689.528 L1247.06 689.528 L1247.62 689.528 L1248.18 689.528 L1248.74 689.528 L1249.3 689.528 L1249.86 689.528 L1250.42 689.528 L1250.98 689.528 L1251.54 689.528 L1252.09 689.528 L1252.65 689.528 L1253.21 689.528 L1253.77 689.528 L1254.33 689.528 L1254.89 689.528 L1255.45 689.528 L1256.01 689.528 L1256.57 689.528 L1257.13 689.528 L1257.69 689.528 L1258.25 689.528 L1258.81 689.528 L1259.36 689.528 L1259.92 689.528 L1260.48 689.528 L1261.04 689.528 L1261.6 689.528 L1262.16 689.528 L1262.72 689.528 L1263.28 689.528 L1263.84 689.528 L1264.4 689.528 L1264.96 689.528 L1265.52 689.528 L1266.08 689.528 L1266.63 689.528 L1267.19 689.528 L1267.75 689.528 L1268.31 689.528 L1268.87 689.528 L1269.43 689.528 L1269.99 689.528 L1270.55 689.528 L1271.11 689.528 L1271.67 689.528 L1272.23 689.528 L1272.79 689.528 L1273.35 689.528 L1273.91 689.528 L1274.46 689.528 L1275.02 689.528 L1275.58 689.528 L1276.14 689.528 L1276.7 689.528 L1277.26 689.528 L1277.82 689.528 L1278.38 689.528 L1278.94 689.528 L1279.5 689.528 L1280.06 689.528 L1280.62 689.528 L1281.18 689.528 L1281.73 689.528 L1282.29 689.528 L1282.85 689.528 L1283.41 689.528 L1283.97 689.528 L1284.53 689.528 L1285.09 689.528 L1285.65 689.528 L1286.21 689.528 L1286.77 689.528 L1287.33 689.528 L1287.89 689.528 L1288.45 689.528 L1289 689.528 L1289.56 689.528 L1290.12 689.528 L1290.68 689.528 L1291.24 689.528 L1291.8 689.528 L1292.36 689.528 L1292.92 689.528 L1293.48 689.528 L1294.04 689.528 L1294.6 689.528 L1295.16 689.528 L1295.72 689.528 L1296.28 689.528 L1296.83 689.528 L1297.39 689.528 L1297.95 689.528 L1298.51 689.528 L1299.07 689.528 L1299.63 689.528 L1300.19 689.528 L1300.75 689.528 L1301.31 689.528 L1301.87 689.528 L1302.43 689.528 L1302.99 689.528 L1303.55 689.528 L1304.1 689.528 L1304.66 689.528 L1305.22 689.528 L1305.78 689.528 L1306.34 689.528 L1306.9 689.528 L1307.46 689.528 L1308.02 689.528 L1308.58 689.528 L1309.14 689.528 L1309.7 689.528 L1310.26 689.528 L1310.82 689.528 L1311.38 689.528 L1311.93 689.528 L1312.49 689.528 L1313.05 689.528 L1313.61 689.528 L1314.17 689.528 L1314.73 689.528 L1315.29 689.528 L1315.85 689.528 L1316.41 689.528 L1316.97 689.528 L1317.53 689.528 L1318.09 689.528 L1318.65 689.528 L1319.2 689.528 L1319.76 689.528 L1320.32 689.528 L1320.88 689.528 L1321.44 689.528 L1322 689.528 L1322.56 689.528 L1323.12 689.528 L1323.68 689.528 L1324.24 689.528 L1324.8 689.528 L1325.36 689.528 L1325.92 689.528 L1326.47 689.528 L1327.03 689.528 L1327.59 689.528 L1328.15 689.528 L1328.71 689.528 L1329.27 689.528 L1329.83 689.528 L1330.39 689.528 L1330.95 689.528 L1331.51 689.528 L1332.07 689.528 L1332.63 689.528 L1333.19 689.528 L1333.75 689.528 L1334.3 689.528 L1334.86 689.528 L1335.42 689.528 L1335.98 689.528 L1336.54 689.528 L1337.1 689.528 L1337.66 689.528 L1338.22 689.528 L1338.78 689.528 L1339.34 689.528 L1339.9 689.528 L1340.46 689.528 L1341.02 689.528 L1341.57 689.528 L1342.13 689.528 L1342.69 689.528 L1343.25 689.528 L1343.81 689.528 L1344.37 689.528 L1344.93 689.528 L1345.49 689.528 L1346.05 689.528 L1346.61 689.528 L1347.17 689.528 L1347.73 689.528 L1348.29 689.528 L1348.84 689.528 L1349.4 689.528 L1349.96 689.528 L1350.52 689.528 L1351.08 689.528 L1351.64 689.528 L1352.2 689.528 L1352.76 689.528 L1353.32 689.528 L1353.88 689.528 L1354.44 689.528 L1355 689.528 L1355.56 689.528 L1356.12 689.528 L1356.67 689.528 L1357.23 689.528 L1357.79 689.528 L1358.35 689.528 L1358.91 689.528 L1359.47 689.528 L1360.03 689.528 L1360.59 689.528 L1361.15 689.528 L1361.71 689.528 L1362.27 689.528 L1362.83 689.528 L1363.39 689.528 L1363.94 689.528 L1364.5 689.528 L1365.06 689.528 L1365.62 689.528 L1366.18 689.528 L1366.74 689.528 L1367.3 689.528 L1367.86 689.528 L1368.42 689.528 L1368.98 689.528 L1369.54 689.528 L1370.1 689.528 L1370.66 689.528 L1371.21 689.528 L1371.77 689.528 L1372.33 689.528 L1372.89 689.528 L1373.45 689.528 L1374.01 689.528 L1374.57 689.528 L1375.13 689.528 L1375.69 689.528 L1376.25 689.528 L1376.81 689.528 L1377.37 689.528 L1377.93 689.528 L1378.49 689.528 L1379.04 689.528 L1379.6 689.528 L1380.16 689.528 L1380.72 689.528 L1381.28 689.528 L1381.84 689.528 L1382.4 689.528 L1382.96 689.528 L1383.52 689.528 L1384.08 689.528 L1384.64 689.528 L1385.2 689.528 L1385.76 689.528 L1386.31 689.528 L1386.87 689.528 L1387.43 689.528 L1387.99 689.528 L1388.55 689.528 L1389.11 689.528 L1389.67 689.528 L1390.23 689.528 L1390.79 689.528 L1391.35 689.528 L1391.91 689.528 L1392.47 689.528 L1393.03 689.528 L1393.58 689.528 L1394.14 689.528 L1394.7 689.528 L1395.26 689.528 L1395.82 689.528 L1396.38 689.528 L1396.94 689.528 L1397.5 689.528 L1398.06 689.528 L1398.62 689.528 L1399.18 689.528 L1399.74 689.528 L1400.3 689.528 L1400.86 689.528 L1401.41 689.528 L1401.97 689.528 L1402.53 689.528 L1403.09 689.528 L1403.65 689.528 L1404.21 689.528 L1404.77 689.528 L1405.33 689.528 L1405.89 689.528 L1406.45 689.528 L1407.01 689.528 L1407.57 689.528 L1408.13 689.528 L1408.68 689.528 L1409.24 689.528 L1409.8 689.528 L1410.36 689.528 L1410.92 689.528 L1411.48 689.528 L1412.04 689.528 L1412.6 689.528 L1413.16 689.528 L1413.72 689.528 L1414.28 689.528 L1414.84 689.528 L1415.4 689.528 L1415.95 689.528 L1416.51 689.528 L1417.07 689.528 L1417.63 689.528 L1418.19 689.528 L1418.75 689.528 L1419.31 689.528 L1419.87 689.528 L1420.43 689.528 L1420.99 689.528 L1421.55 689.528 L1422.11 689.528 L1422.67 689.528 L1423.23 689.528 L1423.78 689.528 L1424.34 689.528 L1424.9 689.528 L1425.46 689.528 L1426.02 689.528 L1426.58 689.528 L1427.14 689.528 L1427.7 689.528 L1428.26 689.528 L1428.82 689.528 L1429.38 689.528 L1429.94 689.528 L1430.5 689.528 L1431.05 689.528 L1431.61 689.528 L1432.17 689.528 L1432.73 689.528 L1433.29 689.528 L1433.85 689.528 L1434.41 689.528 L1434.97 689.528 L1435.53 689.528 L1436.09 689.528 L1436.65 689.528 L1437.21 689.528 L1437.77 689.528 L1438.33 689.528 L1438.88 689.528 L1439.44 689.528 L1440 689.528 L1440.56 689.528 L1441.12 689.528 L1441.68 689.528 L1442.24 689.528 L1442.8 689.528 L1443.36 689.528 L1443.92 689.528 L1444.48 689.528 L1445.04 689.528 L1445.6 689.528 L1446.15 689.528 L1446.71 689.528 L1447.27 689.528 L1447.83 689.528 L1448.39 689.528 L1448.95 689.528 L1449.51 689.528 L1450.07 689.528 L1450.63 689.528 L1451.19 689.528 L1451.75 689.528 L1452.31 689.528 L1452.87 689.528 L1453.42 689.528 L1453.98 689.528 L1454.54 689.528 L1455.1 689.528 L1455.66 689.528 L1456.22 689.528 L1456.78 689.528 L1457.34 689.528 L1457.9 689.528 L1458.46 689.528 L1459.02 689.528 L1459.58 689.528 L1460.14 689.528 L1460.7 689.528 L1461.25 689.528 L1461.81 689.528 L1462.37 689.528 L1462.93 689.528 L1463.49 689.528 L1464.05 689.528 L1464.61 689.528 L1465.17 689.528 L1465.73 689.528 L1466.29 689.528 L1466.85 689.528 L1467.41 689.528 L1467.97 689.528 L1468.52 689.528 L1469.08 689.528 L1469.64 689.528 L1470.2 689.528 L1470.76 689.528 L1471.32 689.528 L1471.88 689.528 L1472.44 689.528 L1473 689.528 L1473.56 689.528 L1474.12 689.528 L1474.68 689.528 L1475.24 689.528 L1475.79 689.528 L1476.35 689.528 L1476.91 689.528 L1477.47 689.528 L1478.03 689.528 L1478.59 689.528 L1479.15 689.528 L1479.71 689.528 L1480.27 689.528 L1480.83 689.528 L1481.39 689.528 L1481.95 689.528 L1482.51 689.528 L1483.07 689.528 L1483.62 689.528 L1484.18 689.528 L1484.74 689.528 L1485.3 689.528 L1485.86 689.528 L1486.42 689.528 L1486.98 689.528 L1487.54 689.528 L1488.1 689.528 L1488.66 689.528 L1489.22 689.528 L1489.78 689.528 L1490.34 689.528 L1490.89 689.528 L1491.45 689.528 L1492.01 689.528 L1492.57 689.528 L1493.13 689.528 L1493.69 689.528 L1494.25 689.528 L1494.81 689.528 L1495.37 689.528 L1495.93 689.528 L1496.49 689.528 L1497.05 689.528 L1497.61 689.528 L1498.16 689.528 L1498.72 689.528 L1499.28 689.528 L1499.84 689.528 L1500.4 689.528 L1500.96 689.528 L1501.52 689.528 L1502.08 689.528 L1502.64 689.528 L1503.2 689.528 L1503.76 689.528 L1504.32 689.528 L1504.88 689.528 L1505.44 689.528 L1505.99 689.528 L1506.55 689.528 L1507.11 689.528 L1507.67 689.528 L1508.23 689.528 L1508.79 689.528 L1509.35 689.528 L1509.91 689.528 L1510.47 689.528 L1511.03 689.528 L1511.59 689.528 L1512.15 689.528 L1512.71 689.528 L1513.26 689.528 L1513.82 689.528 L1514.38 689.528 L1514.94 689.528 L1515.5 689.528 L1516.06 689.528 L1516.62 689.528 L1517.18 689.528 L1517.74 689.528 L1518.3 689.528 L1518.86 689.528 L1519.42 689.528 L1519.98 689.528 L1520.53 689.528 L1521.09 689.528 L1521.65 689.528 L1522.21 689.528 L1522.77 689.528 L1523.33 689.528 L1523.89 689.528 L1524.45 689.528 L1525.01 689.528 L1525.57 689.528 L1526.13 689.528 L1526.69 689.528 L1527.25 689.528 L1527.81 689.528 L1528.36 689.528 L1528.92 689.528 L1529.48 689.528 L1530.04 689.528 L1530.6 689.528 L1531.16 689.528 L1531.72 689.528 L1532.28 689.528 L1532.84 689.528 L1533.4 689.528 L1533.96 689.528 L1534.52 689.528 L1535.08 689.528 L1535.63 689.528 L1536.19 689.528 L1536.75 689.528 L1537.31 689.528 L1537.87 689.528 L1538.43 689.528 L1538.99 689.528 L1539.55 689.528 L1540.11 689.528 L1540.67 689.528 L1541.23 689.528 L1541.79 689.528 L1542.35 689.528 L1542.9 689.528 L1543.46 689.528 L1544.02 689.528 L1544.58 689.528 L1545.14 689.528 L1545.7 689.528 L1546.26 689.528 L1546.82 689.528 L1547.38 689.528 L1547.94 689.528 L1548.5 689.528 L1549.06 689.528 L1549.62 689.528 L1550.18 689.528 L1550.73 689.528 L1551.29 689.528 L1551.85 689.528 L1552.41 689.528 L1552.97 689.528 L1553.53 689.528 L1554.09 689.528 L1554.65 689.528 L1555.21 689.528 L1555.77 689.528 L1556.33 689.528 L1556.89 689.528 L1557.45 689.528 L1558 689.528 L1558.56 689.528 L1559.12 689.528 L1559.68 689.528 L1560.24 689.528 L1560.8 689.528 L1561.36 689.528 L1561.92 689.528 L1562.48 689.528 L1563.04 689.528 L1563.6 689.528 L1564.16 689.528 L1564.72 689.528 L1565.28 689.528 L1565.83 689.528 L1566.39 689.528 L1566.95 689.528 L1567.51 689.528 L1568.07 689.528 L1568.63 689.528 L1569.19 689.528 L1569.75 689.528 L1570.31 689.528 L1570.87 689.528 L1571.43 689.528 L1571.99 689.528 L1572.55 689.528 L1573.1 689.528 L1573.66 689.528 L1574.22 689.528 L1574.78 689.528 L1575.34 689.528 L1575.9 689.528 L1576.46 689.528 L1577.02 689.528 L1577.58 689.528 L1578.14 689.528 L1578.7 689.528 L1579.26 689.528 L1579.82 689.528 L1580.37 689.528 L1580.93 689.528 L1581.49 689.528 L1582.05 689.528 L1582.61 689.528 L1583.17 689.528 L1583.73 689.528 L1584.29 689.528 L1584.85 689.528 L1585.41 689.528 L1585.97 689.528 L1586.53 689.528 L1587.09 689.528 L1587.65 689.528 L1588.2 689.528 L1588.76 689.528 L1589.32 689.528 L1589.88 689.528 L1590.44 689.528 L1591 689.528 L1591.56 689.528 L1592.12 689.528 L1592.68 689.528 L1593.24 689.528 L1593.8 689.528 L1594.36 689.528 L1594.92 689.528 L1595.47 689.528 L1596.03 689.528 L1596.59 689.528 L1597.15 689.528 L1597.71 689.528 L1598.27 689.528 L1598.83 689.528 L1599.39 689.528 L1599.95 689.528 L1600.51 689.528 L1601.07 689.528 L1601.63 689.528 L1602.19 689.528 L1602.74 689.528 L1603.3 689.528 L1603.86 689.528 L1604.42 689.528 L1604.98 689.528 L1605.54 689.528 L1606.1 689.528 L1606.66 689.528 L1607.22 689.528 L1607.78 689.528 L1608.34 689.528 L1608.9 689.528 L1609.46 689.528 L1610.02 689.528 L1610.57 689.528 L1611.13 689.528 L1611.69 689.528 L1612.25 689.528 L1612.81 689.528 L1613.37 689.528 L1613.93 689.528 L1614.49 689.528 L1615.05 689.528 L1615.61 689.528 L1616.17 689.528 L1616.73 689.528 L1617.29 689.528 L1617.84 689.528 L1618.4 689.528 L1618.96 689.528 L1619.52 689.528 L1620.08 689.528 L1620.64 689.528 L1621.2 689.528 L1621.76 689.528 L1622.32 689.528 L1622.88 689.528 L1623.44 689.528 L1624 689.528 L1624.56 689.528 L1625.11 689.528 L1625.67 689.528 L1626.23 689.528 L1626.79 689.528 L1627.35 689.528 L1627.91 689.528 L1628.47 689.528 L1629.03 689.528 L1629.59 689.528 L1630.15 689.528 L1630.71 689.528 L1631.27 689.528 L1631.83 689.528 L1632.39 689.528 L1632.94 689.528 L1633.5 689.528 L1634.06 689.528 L1634.62 689.528 L1635.18 689.528 L1635.74 689.528 L1636.3 689.528 L1636.86 689.528 L1637.42 689.528 L1637.98 689.528 L1638.54 689.528 L1639.1 689.528 L1639.66 689.528 L1640.21 689.528 L1640.77 689.528 L1641.33 689.528 L1641.89 689.528 L1642.45 689.528 L1643.01 689.528 L1643.57 689.528 L1644.13 689.528 L1644.69 689.528 L1645.25 689.528 L1645.81 689.528 L1646.37 689.528 L1646.93 689.528 L1647.48 689.528 L1648.04 689.528 L1648.6 689.528 L1649.16 689.528 L1649.72 689.528 L1650.28 689.528 L1650.84 689.528 L1651.4 689.528 L1651.96 689.528 L1652.52 689.528 L1653.08 689.528 L1653.64 689.528 L1654.2 689.528 L1654.76 689.528 L1655.31 689.528 L1655.87 689.528 L1656.43 689.528 L1656.99 689.528 L1657.55 689.528 L1658.11 689.528 L1658.67 689.528 L1659.23 689.528 L1659.79 689.528 L1660.35 689.528 L1660.91 689.528 L1661.47 689.528 L1662.03 689.528 L1662.58 689.528 L1663.14 689.528 L1663.7 689.528 L1664.26 689.528 L1664.82 689.528 L1665.38 689.528 L1665.94 689.528 L1666.5 689.528 L1667.06 689.528 L1667.62 689.528 L1668.18 689.528 L1668.74 689.528 L1669.3 689.528 L1669.85 689.528 L1670.41 689.528 L1670.97 689.528 L1671.53 689.528 L1672.09 689.528 L1672.65 689.528 L1673.21 689.528 L1673.77 689.528 L1674.33 689.528 L1674.89 689.528 L1675.45 689.528 L1676.01 689.528 L1676.57 689.528 L1677.13 689.528 L1677.68 689.528 L1678.24 689.528 L1678.8 689.528 L1679.36 689.528 L1679.92 689.528 L1680.48 689.528 L1681.04 689.528 L1681.6 689.528 L1682.16 689.528 L1682.72 689.528 L1683.28 689.528 L1683.84 689.528 L1684.4 689.528 L1684.95 689.528 L1685.51 689.528 L1686.07 689.528 L1686.63 689.528 L1687.19 689.528 L1687.75 689.528 L1688.31 689.528 L1688.87 689.528 L1689.43 689.528 L1689.99 689.528 L1690.55 689.528 L1691.11 689.528 L1691.67 689.528 L1692.23 689.528 L1692.78 689.528 L1693.34 689.528 L1693.9 689.528 L1694.46 689.528 L1695.02 689.528 L1695.58 689.528 L1696.14 689.528 L1696.7 689.528 L1697.26 689.528 L1697.82 689.528 L1698.38 689.528 L1698.94 689.528 L1699.5 689.528 L1700.05 689.528 L1700.61 689.528 L1701.17 689.528 L1701.73 689.528 L1702.29 689.528 L1702.85 689.528 L1703.41 689.528 L1703.97 689.528 L1704.53 689.528 L1705.09 689.528 L1705.65 689.528 L1706.21 689.528 L1706.77 689.528 L1707.32 689.528 L1707.88 689.528 L1708.44 689.528 L1709 689.528 L1709.56 689.528 L1710.12 689.528 L1710.68 689.528 L1711.24 689.528 L1711.8 689.528 L1712.36 689.528 L1712.92 689.528 L1713.48 689.528 L1714.04 689.528 L1714.6 689.528 L1715.15 689.528 L1715.71 689.528 L1716.27 689.528 L1716.83 689.528 L1717.39 689.528 L1717.95 689.528 L1718.51 689.528 L1719.07 689.528 L1719.63 689.528 L1720.19 689.528 L1720.75 689.528 L1721.31 689.528 L1721.87 689.528 L1722.42 689.528 L1722.98 689.528 L1723.54 689.528 L1724.1 689.528 L1724.66 689.528 L1725.22 689.528 L1725.78 689.528 L1726.34 689.528 L1726.9 689.528 L1727.46 689.528 L1728.02 689.528 L1728.58 689.528 L1729.14 689.528 L1729.69 689.528 L1730.25 689.528 L1730.81 689.528 L1731.37 689.528 L1731.93 689.528 L1732.49 689.528 L1733.05 689.528 L1733.61 689.528 L1734.17 689.528 L1734.73 689.528 L1735.29 689.528 L1735.85 689.528 L1736.41 689.528 L1736.97 689.528 L1737.52 689.528 L1738.08 689.528 L1738.64 689.528 L1739.2 689.528 L1739.76 689.528 L1740.32 689.528 L1740.88 689.528 L1741.44 689.528 L1742 689.528 L1742.56 689.528 L1743.12 689.528 L1743.68 689.528 L1744.24 689.528 L1744.79 689.528 L1745.35 689.528 L1745.91 689.528 L1746.47 689.528 L1747.03 689.528 L1747.59 689.528 L1748.15 689.528 L1748.71 689.528 L1749.27 689.528 L1749.83 689.528 L1750.39 689.528 L1750.95 689.528 L1751.51 689.528 L1752.06 689.528 L1752.62 689.528 L1753.18 689.528 L1753.74 689.528 L1754.3 689.528 L1754.86 689.528 L1755.42 689.528 L1755.98 689.528 L1756.54 689.528 L1757.1 689.528 L1757.66 689.528 L1758.22 689.528 L1758.78 689.528 L1759.34 689.528 L1759.89 689.528 L1760.45 689.528 L1761.01 689.528 L1761.57 689.528 L1762.13 689.528 L1762.69 689.528 L1763.25 689.528 L1763.81 689.528 L1764.37 689.528 L1764.93 689.528 L1765.49 689.528 L1766.05 689.528 L1766.61 689.528 L1767.16 689.528 L1767.72 689.528 L1768.28 689.528 L1768.84 689.528 L1769.4 689.528 L1769.96 689.528 L1770.52 689.528 L1771.08 689.528 L1771.64 689.528 L1772.2 689.528 L1772.76 689.528 L1773.32 689.528 L1773.88 689.528 L1774.43 689.528 L1774.99 689.528 L1775.55 689.528 L1776.11 689.528 L1776.67 689.528 L1777.23 689.528 L1777.79 689.528 L1778.35 689.528 L1778.91 689.528 L1779.47 689.528 L1780.03 689.528 L1780.59 689.528 L1781.15 689.528 L1781.71 689.528 L1782.26 689.528 L1782.82 689.528 L1783.38 689.528 L1783.94 689.528 L1784.5 689.528 L1785.06 689.528 L1785.62 689.528 L1786.18 689.528 L1786.74 689.528 L1787.3 689.528 L1787.86 689.528 L1788.42 689.528 L1788.98 689.528 L1789.53 689.528 L1790.09 689.528 L1790.65 689.528 L1791.21 689.528 L1791.77 689.528 L1792.33 689.528 L1792.89 689.528 L1793.45 689.528 L1794.01 689.528 L1794.57 689.528 L1795.13 689.528 L1795.69 689.528 L1796.25 689.528 L1796.8 689.528 L1797.36 689.528 L1797.92 689.528 L1798.48 689.528 L1799.04 689.528 L1799.6 689.528 L1800.16 689.528 L1800.72 689.528 L1801.28 689.528 L1801.84 689.528 L1802.4 689.528 L1802.96 689.528 L1803.52 689.528 L1804.08 689.528 L1804.63 689.528 L1805.19 689.528 L1805.75 689.528 L1806.31 689.528 L1806.87 689.528 L1807.43 689.528 L1807.99 689.528 L1808.55 689.528 L1809.11 689.528 L1809.67 689.528 L1810.23 689.528 L1810.79 689.528 L1811.35 689.528 L1811.9 689.528 L1812.46 689.528 L1813.02 689.528 L1813.58 689.528 L1814.14 689.528 L1814.7 689.528 L1815.26 689.528 L1815.82 689.528 L1816.38 689.528 L1816.94 689.528 L1817.5 689.528 L1818.06 689.528 L1818.62 689.528 L1819.18 689.528 L1819.73 689.528 L1820.29 689.528 L1820.85 689.528 L1821.41 689.528 L1821.97 689.528 L1822.53 689.528 L1823.09 689.528 L1823.65 689.528 L1824.21 689.528 L1824.77 689.528 L1825.33 689.528 L1825.89 689.528 L1826.45 689.528 L1827 689.528 L1827.56 689.528 L1828.12 689.528 L1828.68 689.528 L1829.24 689.528 L1829.8 689.528 L1830.36 689.528 L1830.92 689.528 L1831.48 689.528 L1832.04 689.528 L1832.6 689.528 L1833.16 689.528 L1833.72 689.528 L1834.27 689.528 L1834.83 689.528 L1835.39 689.528 L1835.95 689.528 L1836.51 689.528 L1837.07 689.528 L1837.63 689.528 L1838.19 689.528 L1838.19 682.251 L1837.63 682.251 L1837.07 682.251 L1836.51 682.251 L1835.95 682.251 L1835.39 682.251 L1834.83 682.251 L1834.27 682.251 L1833.72 682.251 L1833.16 682.251 L1832.6 682.251 L1832.04 682.251 L1831.48 682.251 L1830.92 682.251 L1830.36 682.251 L1829.8 682.251 L1829.24 682.251 L1828.68 682.251 L1828.12 682.251 L1827.56 682.251 L1827 682.251 L1826.45 682.251 L1825.89 682.251 L1825.33 682.251 L1824.77 682.251 L1824.21 682.251 L1823.65 682.251 L1823.09 682.251 L1822.53 682.251 L1821.97 682.251 L1821.41 682.251 L1820.85 682.251 L1820.29 682.251 L1819.73 682.251 L1819.18 682.251 L1818.62 682.251 L1818.06 682.251 L1817.5 682.251 L1816.94 682.251 L1816.38 682.251 L1815.82 682.251 L1815.26 682.251 L1814.7 682.251 L1814.14 682.251 L1813.58 682.251 L1813.02 682.251 L1812.46 682.251 L1811.9 682.251 L1811.35 682.251 L1810.79 682.251 L1810.23 682.251 L1809.67 682.251 L1809.11 682.251 L1808.55 682.251 L1807.99 682.251 L1807.43 682.251 L1806.87 682.251 L1806.31 682.251 L1805.75 682.251 L1805.19 682.251 L1804.63 682.251 L1804.08 682.251 L1803.52 682.251 L1802.96 682.251 L1802.4 682.251 L1801.84 682.251 L1801.28 682.251 L1800.72 682.251 L1800.16 682.251 L1799.6 682.251 L1799.04 682.251 L1798.48 682.251 L1797.92 682.251 L1797.36 682.251 L1796.8 682.251 L1796.25 682.251 L1795.69 682.251 L1795.13 682.251 L1794.57 682.251 L1794.01 682.251 L1793.45 682.251 L1792.89 682.251 L1792.33 682.251 L1791.77 682.251 L1791.21 682.251 L1790.65 682.251 L1790.09 682.251 L1789.53 682.251 L1788.98 682.251 L1788.42 682.251 L1787.86 682.251 L1787.3 682.251 L1786.74 682.251 L1786.18 682.251 L1785.62 682.251 L1785.06 682.251 L1784.5 682.251 L1783.94 682.251 L1783.38 682.251 L1782.82 682.251 L1782.26 682.251 L1781.71 682.251 L1781.15 682.251 L1780.59 682.251 L1780.03 682.251 L1779.47 682.251 L1778.91 682.251 L1778.35 682.251 L1777.79 682.251 L1777.23 682.251 L1776.67 682.251 L1776.11 682.251 L1775.55 682.251 L1774.99 682.251 L1774.43 682.251 L1773.88 682.251 L1773.32 682.251 L1772.76 682.251 L1772.2 682.251 L1771.64 682.251 L1771.08 682.251 L1770.52 682.251 L1769.96 682.251 L1769.4 682.251 L1768.84 682.251 L1768.28 682.251 L1767.72 682.251 L1767.16 682.251 L1766.61 682.251 L1766.05 682.251 L1765.49 682.251 L1764.93 682.251 L1764.37 682.251 L1763.81 682.251 L1763.25 682.251 L1762.69 682.251 L1762.13 682.251 L1761.57 682.251 L1761.01 682.251 L1760.45 682.251 L1759.89 682.251 L1759.34 682.251 L1758.78 682.251 L1758.22 682.251 L1757.66 682.251 L1757.1 682.251 L1756.54 682.251 L1755.98 682.251 L1755.42 682.251 L1754.86 682.251 L1754.3 682.251 L1753.74 682.251 L1753.18 682.251 L1752.62 682.251 L1752.06 682.251 L1751.51 682.251 L1750.95 682.251 L1750.39 682.251 L1749.83 682.251 L1749.27 682.251 L1748.71 682.251 L1748.15 682.251 L1747.59 682.251 L1747.03 682.251 L1746.47 682.251 L1745.91 682.251 L1745.35 682.251 L1744.79 682.251 L1744.24 682.251 L1743.68 682.251 L1743.12 682.251 L1742.56 682.251 L1742 682.251 L1741.44 682.251 L1740.88 682.251 L1740.32 682.251 L1739.76 682.251 L1739.2 682.251 L1738.64 682.251 L1738.08 682.251 L1737.52 682.251 L1736.97 682.251 L1736.41 682.251 L1735.85 682.251 L1735.29 682.251 L1734.73 682.251 L1734.17 682.251 L1733.61 682.251 L1733.05 682.251 L1732.49 682.251 L1731.93 682.251 L1731.37 682.251 L1730.81 682.251 L1730.25 682.251 L1729.69 682.251 L1729.14 682.251 L1728.58 682.251 L1728.02 682.251 L1727.46 682.251 L1726.9 682.251 L1726.34 682.251 L1725.78 682.251 L1725.22 682.251 L1724.66 682.251 L1724.1 682.251 L1723.54 682.251 L1722.98 682.251 L1722.42 682.251 L1721.87 682.251 L1721.31 682.251 L1720.75 682.251 L1720.19 682.251 L1719.63 682.251 L1719.07 682.251 L1718.51 682.251 L1717.95 682.251 L1717.39 682.251 L1716.83 682.251 L1716.27 682.251 L1715.71 682.251 L1715.15 682.251 L1714.6 682.251 L1714.04 682.251 L1713.48 682.251 L1712.92 682.251 L1712.36 682.251 L1711.8 682.251 L1711.24 682.251 L1710.68 682.251 L1710.12 682.251 L1709.56 682.251 L1709 682.251 L1708.44 682.251 L1707.88 682.251 L1707.32 682.251 L1706.77 682.251 L1706.21 682.251 L1705.65 682.251 L1705.09 682.251 L1704.53 682.251 L1703.97 682.251 L1703.41 682.251 L1702.85 682.251 L1702.29 682.251 L1701.73 682.251 L1701.17 682.251 L1700.61 682.251 L1700.05 682.251 L1699.5 682.251 L1698.94 682.251 L1698.38 682.251 L1697.82 682.251 L1697.26 682.251 L1696.7 682.251 L1696.14 682.251 L1695.58 682.251 L1695.02 682.251 L1694.46 682.251 L1693.9 682.251 L1693.34 682.251 L1692.78 682.251 L1692.23 682.251 L1691.67 682.251 L1691.11 682.251 L1690.55 682.251 L1689.99 682.251 L1689.43 682.251 L1688.87 682.251 L1688.31 682.251 L1687.75 682.251 L1687.19 682.251 L1686.63 682.251 L1686.07 682.251 L1685.51 682.251 L1684.95 682.251 L1684.4 682.251 L1683.84 682.251 L1683.28 682.251 L1682.72 682.251 L1682.16 682.251 L1681.6 682.251 L1681.04 682.251 L1680.48 682.251 L1679.92 682.251 L1679.36 682.251 L1678.8 682.251 L1678.24 682.251 L1677.68 682.251 L1677.13 682.251 L1676.57 682.251 L1676.01 682.251 L1675.45 682.251 L1674.89 682.251 L1674.33 682.251 L1673.77 682.251 L1673.21 682.251 L1672.65 682.251 L1672.09 682.251 L1671.53 682.251 L1670.97 682.251 L1670.41 682.251 L1669.85 682.251 L1669.3 682.251 L1668.74 682.251 L1668.18 682.251 L1667.62 682.251 L1667.06 682.251 L1666.5 682.251 L1665.94 682.251 L1665.38 682.251 L1664.82 682.251 L1664.26 682.251 L1663.7 682.251 L1663.14 682.251 L1662.58 682.251 L1662.03 682.251 L1661.47 682.251 L1660.91 682.251 L1660.35 682.251 L1659.79 682.251 L1659.23 682.251 L1658.67 682.251 L1658.11 682.251 L1657.55 682.251 L1656.99 682.251 L1656.43 682.251 L1655.87 682.251 L1655.31 682.251 L1654.76 682.251 L1654.2 682.251 L1653.64 682.251 L1653.08 682.251 L1652.52 682.251 L1651.96 682.251 L1651.4 682.251 L1650.84 682.251 L1650.28 682.251 L1649.72 682.251 L1649.16 682.251 L1648.6 682.251 L1648.04 682.251 L1647.48 682.251 L1646.93 682.251 L1646.37 682.251 L1645.81 682.251 L1645.25 682.251 L1644.69 682.251 L1644.13 682.251 L1643.57 682.251 L1643.01 682.251 L1642.45 682.251 L1641.89 682.251 L1641.33 682.251 L1640.77 682.251 L1640.21 682.251 L1639.66 682.251 L1639.1 682.251 L1638.54 682.251 L1637.98 682.251 L1637.42 682.251 L1636.86 682.251 L1636.3 682.251 L1635.74 682.251 L1635.18 682.251 L1634.62 682.251 L1634.06 682.251 L1633.5 682.251 L1632.94 682.251 L1632.39 682.251 L1631.83 682.251 L1631.27 682.251 L1630.71 682.251 L1630.15 682.251 L1629.59 682.251 L1629.03 682.251 L1628.47 682.251 L1627.91 682.251 L1627.35 682.251 L1626.79 682.251 L1626.23 682.251 L1625.67 682.251 L1625.11 682.251 L1624.56 682.251 L1624 682.251 L1623.44 682.251 L1622.88 682.251 L1622.32 682.251 L1621.76 682.251 L1621.2 682.251 L1620.64 682.251 L1620.08 682.251 L1619.52 682.251 L1618.96 682.251 L1618.4 682.251 L1617.84 682.251 L1617.29 682.251 L1616.73 682.251 L1616.17 682.251 L1615.61 682.251 L1615.05 682.251 L1614.49 682.251 L1613.93 682.251 L1613.37 682.251 L1612.81 682.251 L1612.25 682.251 L1611.69 682.251 L1611.13 682.251 L1610.57 682.251 L1610.02 682.251 L1609.46 682.251 L1608.9 682.251 L1608.34 682.251 L1607.78 682.251 L1607.22 682.251 L1606.66 682.251 L1606.1 682.251 L1605.54 682.251 L1604.98 682.251 L1604.42 682.251 L1603.86 682.251 L1603.3 682.251 L1602.74 682.251 L1602.19 682.251 L1601.63 682.251 L1601.07 682.251 L1600.51 682.251 L1599.95 682.251 L1599.39 682.251 L1598.83 682.251 L1598.27 682.251 L1597.71 682.251 L1597.15 682.251 L1596.59 682.251 L1596.03 682.251 L1595.47 682.251 L1594.92 682.251 L1594.36 682.251 L1593.8 682.251 L1593.24 682.251 L1592.68 682.251 L1592.12 682.251 L1591.56 682.251 L1591 682.251 L1590.44 682.251 L1589.88 682.251 L1589.32 682.251 L1588.76 682.251 L1588.2 682.251 L1587.65 682.251 L1587.09 682.251 L1586.53 682.251 L1585.97 682.251 L1585.41 682.251 L1584.85 682.251 L1584.29 682.251 L1583.73 682.251 L1583.17 682.251 L1582.61 682.251 L1582.05 682.251 L1581.49 682.251 L1580.93 682.251 L1580.37 682.251 L1579.82 682.251 L1579.26 682.251 L1578.7 682.251 L1578.14 682.251 L1577.58 682.251 L1577.02 682.251 L1576.46 682.251 L1575.9 682.251 L1575.34 682.251 L1574.78 682.251 L1574.22 682.251 L1573.66 682.251 L1573.1 682.251 L1572.55 682.251 L1571.99 682.251 L1571.43 682.251 L1570.87 682.251 L1570.31 682.251 L1569.75 682.251 L1569.19 682.251 L1568.63 682.251 L1568.07 682.251 L1567.51 682.251 L1566.95 682.251 L1566.39 682.251 L1565.83 682.251 L1565.28 682.251 L1564.72 682.251 L1564.16 682.251 L1563.6 682.251 L1563.04 682.251 L1562.48 682.251 L1561.92 682.251 L1561.36 682.251 L1560.8 682.251 L1560.24 682.251 L1559.68 682.251 L1559.12 682.251 L1558.56 682.251 L1558 682.251 L1557.45 682.251 L1556.89 682.251 L1556.33 682.251 L1555.77 682.251 L1555.21 682.251 L1554.65 682.251 L1554.09 682.251 L1553.53 682.251 L1552.97 682.251 L1552.41 682.251 L1551.85 682.251 L1551.29 682.251 L1550.73 682.251 L1550.18 682.251 L1549.62 682.251 L1549.06 682.251 L1548.5 682.251 L1547.94 682.251 L1547.38 682.251 L1546.82 682.251 L1546.26 682.251 L1545.7 682.251 L1545.14 682.251 L1544.58 682.251 L1544.02 682.251 L1543.46 682.251 L1542.9 682.251 L1542.35 682.251 L1541.79 682.251 L1541.23 682.251 L1540.67 682.251 L1540.11 682.251 L1539.55 682.251 L1538.99 682.251 L1538.43 682.251 L1537.87 682.251 L1537.31 682.251 L1536.75 682.251 L1536.19 682.251 L1535.63 682.251 L1535.08 682.251 L1534.52 682.251 L1533.96 682.251 L1533.4 682.251 L1532.84 682.251 L1532.28 682.251 L1531.72 682.251 L1531.16 682.251 L1530.6 682.251 L1530.04 682.251 L1529.48 682.251 L1528.92 682.251 L1528.36 682.251 L1527.81 682.251 L1527.25 682.251 L1526.69 682.251 L1526.13 682.251 L1525.57 682.251 L1525.01 682.251 L1524.45 682.251 L1523.89 682.251 L1523.33 682.251 L1522.77 682.251 L1522.21 682.251 L1521.65 682.251 L1521.09 682.251 L1520.53 682.251 L1519.98 682.251 L1519.42 682.251 L1518.86 682.251 L1518.3 682.251 L1517.74 682.251 L1517.18 682.251 L1516.62 682.251 L1516.06 682.251 L1515.5 682.251 L1514.94 682.251 L1514.38 682.251 L1513.82 682.251 L1513.26 682.251 L1512.71 682.251 L1512.15 682.251 L1511.59 682.251 L1511.03 682.251 L1510.47 682.251 L1509.91 682.251 L1509.35 682.251 L1508.79 682.251 L1508.23 682.251 L1507.67 682.251 L1507.11 682.251 L1506.55 682.251 L1505.99 682.251 L1505.44 682.251 L1504.88 682.251 L1504.32 682.251 L1503.76 682.251 L1503.2 682.251 L1502.64 682.251 L1502.08 682.251 L1501.52 682.251 L1500.96 682.251 L1500.4 682.251 L1499.84 682.251 L1499.28 682.251 L1498.72 682.251 L1498.16 682.251 L1497.61 682.251 L1497.05 682.251 L1496.49 682.251 L1495.93 682.251 L1495.37 682.251 L1494.81 682.251 L1494.25 682.251 L1493.69 682.251 L1493.13 682.251 L1492.57 682.251 L1492.01 682.251 L1491.45 682.251 L1490.89 682.251 L1490.34 682.251 L1489.78 682.251 L1489.22 682.251 L1488.66 682.251 L1488.1 682.251 L1487.54 682.251 L1486.98 682.251 L1486.42 682.251 L1485.86 682.251 L1485.3 682.251 L1484.74 682.251 L1484.18 682.251 L1483.62 682.251 L1483.07 682.251 L1482.51 682.251 L1481.95 682.251 L1481.39 682.251 L1480.83 682.251 L1480.27 682.251 L1479.71 682.251 L1479.15 682.251 L1478.59 682.251 L1478.03 682.251 L1477.47 682.251 L1476.91 682.251 L1476.35 682.251 L1475.79 682.251 L1475.24 682.251 L1474.68 682.251 L1474.12 682.251 L1473.56 682.251 L1473 682.251 L1472.44 682.251 L1471.88 682.251 L1471.32 682.251 L1470.76 682.251 L1470.2 682.251 L1469.64 682.251 L1469.08 682.251 L1468.52 682.251 L1467.97 682.251 L1467.41 682.251 L1466.85 682.251 L1466.29 682.251 L1465.73 682.251 L1465.17 682.251 L1464.61 682.251 L1464.05 682.251 L1463.49 682.251 L1462.93 682.251 L1462.37 682.251 L1461.81 682.251 L1461.25 682.251 L1460.7 682.251 L1460.14 682.251 L1459.58 682.251 L1459.02 682.251 L1458.46 682.251 L1457.9 682.251 L1457.34 682.251 L1456.78 682.251 L1456.22 682.251 L1455.66 682.251 L1455.1 682.251 L1454.54 682.251 L1453.98 682.251 L1453.42 682.251 L1452.87 682.251 L1452.31 682.251 L1451.75 682.251 L1451.19 682.251 L1450.63 682.251 L1450.07 682.251 L1449.51 682.251 L1448.95 682.251 L1448.39 682.251 L1447.83 682.251 L1447.27 682.251 L1446.71 682.251 L1446.15 682.251 L1445.6 682.251 L1445.04 682.251 L1444.48 682.251 L1443.92 682.251 L1443.36 682.251 L1442.8 682.251 L1442.24 682.251 L1441.68 682.251 L1441.12 682.251 L1440.56 682.251 L1440 682.251 L1439.44 682.251 L1438.88 682.251 L1438.33 682.251 L1437.77 682.251 L1437.21 682.251 L1436.65 682.251 L1436.09 682.251 L1435.53 682.251 L1434.97 682.251 L1434.41 682.251 L1433.85 682.251 L1433.29 682.251 L1432.73 682.251 L1432.17 682.251 L1431.61 682.251 L1431.05 682.251 L1430.5 682.251 L1429.94 682.251 L1429.38 682.251 L1428.82 682.251 L1428.26 682.251 L1427.7 682.251 L1427.14 682.251 L1426.58 682.251 L1426.02 682.251 L1425.46 682.251 L1424.9 682.251 L1424.34 682.251 L1423.78 682.251 L1423.23 682.251 L1422.67 682.251 L1422.11 682.251 L1421.55 682.251 L1420.99 682.251 L1420.43 682.251 L1419.87 682.251 L1419.31 682.251 L1418.75 682.251 L1418.19 682.251 L1417.63 682.251 L1417.07 682.251 L1416.51 682.251 L1415.95 682.251 L1415.4 682.251 L1414.84 682.251 L1414.28 682.251 L1413.72 682.251 L1413.16 682.251 L1412.6 682.251 L1412.04 682.251 L1411.48 682.251 L1410.92 682.251 L1410.36 682.251 L1409.8 682.251 L1409.24 682.251 L1408.68 682.251 L1408.13 682.251 L1407.57 682.251 L1407.01 682.251 L1406.45 682.251 L1405.89 682.251 L1405.33 682.251 L1404.77 682.251 L1404.21 682.251 L1403.65 682.251 L1403.09 682.251 L1402.53 682.251 L1401.97 682.251 L1401.41 682.251 L1400.86 682.251 L1400.3 682.251 L1399.74 682.251 L1399.18 682.251 L1398.62 682.251 L1398.06 682.251 L1397.5 682.251 L1396.94 682.251 L1396.38 682.251 L1395.82 682.251 L1395.26 682.251 L1394.7 682.251 L1394.14 682.251 L1393.58 682.251 L1393.03 682.251 L1392.47 682.251 L1391.91 682.251 L1391.35 682.251 L1390.79 682.251 L1390.23 682.251 L1389.67 682.251 L1389.11 682.251 L1388.55 682.251 L1387.99 682.251 L1387.43 682.251 L1386.87 682.251 L1386.31 682.251 L1385.76 682.251 L1385.2 682.251 L1384.64 682.251 L1384.08 682.251 L1383.52 682.251 L1382.96 682.251 L1382.4 682.251 L1381.84 682.251 L1381.28 682.251 L1380.72 682.251 L1380.16 682.251 L1379.6 682.251 L1379.04 682.251 L1378.49 682.251 L1377.93 682.251 L1377.37 682.251 L1376.81 682.251 L1376.25 682.251 L1375.69 682.251 L1375.13 682.251 L1374.57 682.251 L1374.01 682.251 L1373.45 682.251 L1372.89 682.251 L1372.33 682.251 L1371.77 682.251 L1371.21 682.251 L1370.66 682.251 L1370.1 682.251 L1369.54 682.251 L1368.98 682.251 L1368.42 682.251 L1367.86 682.251 L1367.3 682.251 L1366.74 682.251 L1366.18 682.251 L1365.62 682.251 L1365.06 682.251 L1364.5 682.251 L1363.94 682.251 L1363.39 682.251 L1362.83 682.251 L1362.27 682.251 L1361.71 682.251 L1361.15 682.251 L1360.59 682.251 L1360.03 682.251 L1359.47 682.251 L1358.91 682.251 L1358.35 682.251 L1357.79 682.251 L1357.23 682.251 L1356.67 682.251 L1356.12 682.251 L1355.56 682.251 L1355 682.251 L1354.44 682.251 L1353.88 682.251 L1353.32 682.251 L1352.76 682.251 L1352.2 682.251 L1351.64 682.251 L1351.08 682.251 L1350.52 682.251 L1349.96 682.251 L1349.4 682.251 L1348.84 682.251 L1348.29 682.251 L1347.73 682.251 L1347.17 682.251 L1346.61 682.251 L1346.05 682.251 L1345.49 682.251 L1344.93 682.251 L1344.37 682.251 L1343.81 682.251 L1343.25 682.251 L1342.69 682.251 L1342.13 682.251 L1341.57 682.251 L1341.02 682.251 L1340.46 682.251 L1339.9 682.251 L1339.34 682.251 L1338.78 682.251 L1338.22 682.251 L1337.66 682.251 L1337.1 682.251 L1336.54 682.251 L1335.98 682.251 L1335.42 682.251 L1334.86 682.251 L1334.3 682.251 L1333.75 682.251 L1333.19 682.251 L1332.63 682.251 L1332.07 682.251 L1331.51 682.251 L1330.95 682.251 L1330.39 682.251 L1329.83 682.251 L1329.27 682.251 L1328.71 682.251 L1328.15 682.251 L1327.59 682.251 L1327.03 682.251 L1326.47 682.251 L1325.92 682.251 L1325.36 682.251 L1324.8 682.251 L1324.24 682.251 L1323.68 682.251 L1323.12 682.251 L1322.56 682.251 L1322 682.251 L1321.44 682.251 L1320.88 682.251 L1320.32 682.251 L1319.76 682.251 L1319.2 682.251 L1318.65 682.251 L1318.09 682.251 L1317.53 682.251 L1316.97 682.251 L1316.41 682.251 L1315.85 682.251 L1315.29 682.251 L1314.73 682.251 L1314.17 682.251 L1313.61 682.251 L1313.05 682.251 L1312.49 682.251 L1311.93 682.251 L1311.38 682.251 L1310.82 682.251 L1310.26 682.251 L1309.7 682.251 L1309.14 682.251 L1308.58 682.251 L1308.02 682.251 L1307.46 682.251 L1306.9 682.251 L1306.34 682.251 L1305.78 682.251 L1305.22 682.251 L1304.66 682.251 L1304.1 682.251 L1303.55 682.251 L1302.99 682.251 L1302.43 682.251 L1301.87 682.251 L1301.31 682.251 L1300.75 682.251 L1300.19 682.251 L1299.63 682.251 L1299.07 682.251 L1298.51 682.251 L1297.95 682.251 L1297.39 682.251 L1296.83 682.251 L1296.28 682.251 L1295.72 682.251 L1295.16 682.251 L1294.6 682.251 L1294.04 682.251 L1293.48 682.251 L1292.92 682.251 L1292.36 682.251 L1291.8 682.251 L1291.24 682.251 L1290.68 682.251 L1290.12 682.251 L1289.56 682.251 L1289 682.251 L1288.45 682.251 L1287.89 682.251 L1287.33 682.251 L1286.77 682.251 L1286.21 682.251 L1285.65 682.251 L1285.09 682.251 L1284.53 682.251 L1283.97 682.251 L1283.41 682.251 L1282.85 682.251 L1282.29 682.251 L1281.73 682.251 L1281.18 682.251 L1280.62 682.251 L1280.06 682.251 L1279.5 682.251 L1278.94 682.251 L1278.38 682.251 L1277.82 682.251 L1277.26 682.251 L1276.7 682.251 L1276.14 682.251 L1275.58 682.251 L1275.02 682.251 L1274.46 682.251 L1273.91 682.251 L1273.35 682.251 L1272.79 682.251 L1272.23 682.251 L1271.67 682.251 L1271.11 682.251 L1270.55 682.251 L1269.99 682.251 L1269.43 682.251 L1268.87 682.251 L1268.31 682.251 L1267.75 682.251 L1267.19 682.251 L1266.63 682.251 L1266.08 682.251 L1265.52 682.251 L1264.96 682.251 L1264.4 682.251 L1263.84 682.251 L1263.28 682.251 L1262.72 682.251 L1262.16 682.251 L1261.6 682.251 L1261.04 682.251 L1260.48 682.251 L1259.92 682.251 L1259.36 682.251 L1258.81 682.251 L1258.25 682.251 L1257.69 682.251 L1257.13 682.251 L1256.57 682.251 L1256.01 682.251 L1255.45 682.251 L1254.89 682.251 L1254.33 682.251 L1253.77 682.251 L1253.21 682.251 L1252.65 682.251 L1252.09 682.251 L1251.54 682.251 L1250.98 682.251 L1250.42 682.251 L1249.86 682.251 L1249.3 682.251 L1248.74 682.251 L1248.18 682.251 L1247.62 682.251 L1247.06 682.251 L1246.5 682.251 L1245.94 682.251 L1245.38 682.251 L1244.82 682.251 L1244.26 682.251 L1243.71 682.251 L1243.15 682.251 L1242.59 682.251 L1242.03 682.251 L1241.47 682.251 L1240.91 682.251 L1240.35 682.251 L1239.79 682.251 L1239.23 682.251 L1238.67 682.251 L1238.11 682.251 L1237.55 682.251 L1236.99 682.251 L1236.44 682.251 L1235.88 682.251 L1235.32 682.251 L1234.76 682.251 L1234.2 682.251 L1233.64 682.251 L1233.08 682.251 L1232.52 682.251 L1231.96 682.251 L1231.4 682.251 L1230.84 682.251 L1230.28 682.251 L1229.72 682.251 L1229.17 682.251 L1228.61 682.251 L1228.05 682.251 L1227.49 682.251 L1226.93 682.251 L1226.37 682.251 L1225.81 682.251 L1225.25 682.251 L1224.69 682.251 L1224.13 682.251 L1223.57 682.251 L1223.01 682.251 L1222.45 682.251 L1221.89 682.251 L1221.34 682.251 L1220.78 682.251 L1220.22 682.251 L1219.66 682.251 L1219.1 682.251 L1218.54 682.251 L1217.98 682.251 L1217.42 682.251 L1216.86 682.251 L1216.3 682.251 L1215.74 682.251 L1215.18 682.251 L1214.62 682.251 L1214.07 682.251 L1213.51 682.251 L1212.95 682.251 L1212.39 682.251 L1211.83 682.251 L1211.27 682.251 L1210.71 682.251 L1210.15 682.251 L1209.59 682.251 L1209.03 682.251 L1208.47 682.251 L1207.91 682.251 L1207.35 682.251 L1206.8 682.251 L1206.24 682.251 L1205.68 682.251 L1205.12 682.251 L1204.56 682.251 L1204 682.251 L1203.44 682.251 L1202.88 682.251 L1202.32 682.251 L1201.76 682.251 L1201.2 682.251 L1200.64 682.251 L1200.08 682.251 L1199.52 682.251 L1198.97 682.251 L1198.41 682.251 L1197.85 682.251 L1197.29 682.251 L1196.73 682.251 L1196.17 682.251 L1195.61 682.251 L1195.05 682.251 L1194.49 682.251 L1193.93 682.251 L1193.37 682.251 L1192.81 682.251 L1192.25 682.251 L1191.7 682.251 L1191.14 682.251 L1190.58 682.251 L1190.02 682.251 L1189.46 682.251 L1188.9 682.251 L1188.34 682.251 L1187.78 682.251 L1187.22 682.251 L1186.66 682.251 L1186.1 682.251 L1185.54 682.251 L1184.98 682.251 L1184.43 682.251 L1183.87 682.251 L1183.31 682.251 L1182.75 682.251 L1182.19 682.251 L1181.63 682.251 L1181.07 682.251 L1180.51 682.251 L1179.95 682.251 L1179.39 682.251 L1178.83 682.251 L1178.27 682.251 L1177.71 682.251 L1177.15 682.251 L1176.6 682.251 L1176.04 682.251 L1175.48 682.251 L1174.92 682.251 L1174.36 682.251 L1173.8 682.251 L1173.24 682.251 L1172.68 682.251 L1172.12 682.251 L1171.56 682.251 L1171 682.251 L1170.44 682.251 L1169.88 682.251 L1169.33 682.251 L1168.77 682.251 L1168.21 682.251 L1167.65 682.251 L1167.09 682.251 L1166.53 682.251 L1165.97 682.251 L1165.41 682.251 L1164.85 682.251 L1164.29 682.251 L1163.73 682.251 L1163.17 682.251 L1162.61 682.251 L1162.05 682.251 L1161.5 682.251 L1160.94 682.251 L1160.38 682.251 L1159.82 682.251 L1159.26 682.251 L1158.7 682.251 L1158.14 682.251 L1157.58 682.251 L1157.02 682.251 L1156.46 682.251 L1155.9 682.251 L1155.34 682.251 L1154.78 682.251 L1154.23 682.251 L1153.67 682.251 L1153.11 682.251 L1152.55 682.251 L1151.99 682.251 L1151.43 682.251 L1150.87 682.251 L1150.31 682.251 L1149.75 682.251 L1149.19 682.251 L1148.63 682.251 L1148.07 682.251 L1147.51 682.251 L1146.96 682.251 L1146.4 682.251 L1145.84 682.251 L1145.28 682.251 L1144.72 682.251 L1144.16 682.251 L1143.6 682.251 L1143.04 682.251 L1142.48 682.251 L1141.92 682.251 L1141.36 682.251 L1140.8 682.251 L1140.24 682.251 L1139.68 682.251 L1139.13 682.251 L1138.57 682.251 L1138.01 682.251 L1137.45 682.251 L1136.89 682.251 L1136.33 682.251 L1135.77 682.251 L1135.21 682.251 L1134.65 682.251 L1134.09 682.251 L1133.53 682.251 L1132.97 682.251 L1132.41 682.251 L1131.86 682.251 L1131.3 682.251 L1130.74 682.251 L1130.18 682.251 L1129.62 682.251 L1129.06 682.251 L1128.5 682.251 L1127.94 682.251 L1127.38 682.251 L1126.82 682.251 L1126.26 682.251 L1125.7 682.251 L1125.14 682.251 L1124.59 682.251 L1124.03 682.251 L1123.47 682.251 L1122.91 682.251 L1122.35 682.251 L1121.79 682.251 L1121.23 682.251 L1120.67 682.251 L1120.11 682.251 L1119.55 682.251 L1118.99 682.251 L1118.43 682.251 L1117.87 682.251 L1117.31 682.251 L1116.76 682.251 L1116.2 682.251 L1115.64 682.251 L1115.08 682.251 L1114.52 682.251 L1113.96 682.251 L1113.4 682.251 L1112.84 682.251 L1112.28 682.251 L1111.72 682.251 L1111.16 682.251 L1110.6 682.251 L1110.04 682.251 L1109.49 682.251 L1108.93 682.251 L1108.37 682.251 L1107.81 682.251 L1107.25 682.251 L1106.69 682.251 L1106.13 682.251 L1105.57 682.251 L1105.01 682.251 L1104.45 682.251 L1103.89 682.251 L1103.33 682.251 L1102.77 682.251 L1102.22 682.251 L1101.66 682.251 L1101.1 682.251 L1100.54 682.251 L1099.98 682.251 L1099.42 682.251 L1098.86 682.251 L1098.3 682.251 L1097.74 682.251 L1097.18 682.251 L1096.62 682.251 L1096.06 682.251 L1095.5 682.251 L1094.94 682.251 L1094.39 682.251 L1093.83 682.251 L1093.27 682.251 L1092.71 682.251 L1092.15 682.251 L1091.59 682.251 L1091.03 682.251 L1090.47 682.251 L1089.91 682.251 L1089.35 682.251 L1088.79 682.251 L1088.23 682.251 L1087.67 682.251 L1087.12 682.251 L1086.56 682.251 L1086 682.251 L1085.44 682.251 L1084.88 682.251 L1084.32 682.251 L1083.76 682.251 L1083.2 682.251 L1082.64 682.251 L1082.08 682.251 L1081.52 682.251 L1080.96 682.251 L1080.4 682.251 L1079.85 682.251 L1079.29 682.251 L1078.73 682.251 L1078.17 682.251 L1077.61 682.251 L1077.05 682.251 L1076.49 682.251 L1075.93 682.251 L1075.37 682.251 L1074.81 682.251 L1074.25 682.251 L1073.69 682.251 L1073.13 682.251 L1072.57 682.251 L1072.02 682.251 L1071.46 682.251 L1070.9 682.251 L1070.34 682.251 L1069.78 682.251 L1069.22 682.251 L1068.66 682.251 L1068.1 682.251 L1067.54 682.251 L1066.98 682.251 L1066.42 682.251 L1065.86 682.251 L1065.3 682.251 L1064.75 682.251 L1064.19 682.251 L1063.63 682.251 L1063.07 682.251 L1062.51 682.251 L1061.95 682.251 L1061.39 682.251 L1060.83 682.251 L1060.27 682.251 L1059.71 682.251 L1059.15 682.251 L1058.59 682.251 L1058.03 682.251 L1057.48 682.251 L1056.92 682.251 L1056.36 682.251 L1055.8 682.251 L1055.24 682.251 L1054.68 682.251 L1054.12 682.251 L1053.56 682.251 L1053 682.251 L1052.44 682.251 L1051.88 682.251 L1051.32 682.251 L1050.76 682.251 L1050.2 682.251 L1049.65 682.251 L1049.09 682.251 L1048.53 682.251 L1047.97 682.251 L1047.41 682.251 L1046.85 682.251 L1046.29 682.251 L1045.73 682.251 L1045.17 682.251 L1044.61 682.251 L1044.05 682.251 L1043.49 682.251 L1042.93 682.251 L1042.38 682.251 L1041.82 682.251 L1041.26 682.251 L1040.7 682.251 L1040.14 682.251 L1039.58 682.251 L1039.02 682.251 L1038.46 682.251 L1037.9 682.251 L1037.34 682.251 L1036.78 682.251 L1036.22 682.251 L1035.66 682.251 L1035.1 682.251 L1034.55 682.251 L1033.99 682.251 L1033.43 682.251 L1032.87 682.251 L1032.31 682.251 L1031.75 682.251 L1031.19 682.251 L1030.63 682.251 L1030.07 682.251 L1029.51 682.251 L1028.95 682.251 L1028.39 682.251 L1027.83 682.251 L1027.28 682.251 L1026.72 682.251 L1026.16 682.251 L1025.6 682.251 L1025.04 682.251 L1024.48 682.251 L1023.92 682.251 L1023.36 682.251 L1022.8 682.251 L1022.24 682.251 L1021.68 682.251 L1021.12 682.251 L1020.56 682.251 L1020.01 682.251 L1019.45 682.251 L1018.89 682.251 L1018.33 682.251 L1017.77 682.251 L1017.21 682.251 L1016.65 682.251 L1016.09 682.251 L1015.53 682.251 L1014.97 682.251 L1014.41 682.251 L1013.85 682.251 L1013.29 682.251 L1012.73 682.251 L1012.18 682.251 L1011.62 682.251 L1011.06 682.251 L1010.5 682.251 L1009.94 682.251 L1009.38 682.251 L1008.82 682.251 L1008.26 682.251 L1007.7 682.251 L1007.14 682.251 L1006.58 682.251 L1006.02 682.251 L1005.46 682.251 L1004.91 682.251 L1004.35 682.251 L1003.79 682.251 L1003.23 682.251 L1002.67 682.251 L1002.11 682.251 L1001.55 682.251 L1000.99 682.251 L1000.43 682.251 L999.872 682.251 L999.313 682.251 L998.754 682.251 L998.194 682.251 L997.635 682.251 L997.076 682.251 L996.517 682.251 L995.957 682.251 L995.398 682.251 L994.839 682.251 L994.28 682.251 L993.72 682.251 L993.161 682.251 L992.602 682.251 L992.043 682.251 L991.483 682.251 L990.924 682.251 L990.365 682.251 L989.806 682.251 L989.246 682.251 L988.687 682.251 L988.128 682.251 L987.569 682.251 L987.009 682.251 L986.45 682.251 L985.891 682.251 L985.332 682.251 L984.772 682.251 L984.213 682.251 L983.654 682.251 L983.095 682.251 L982.535 682.251 L981.976 682.251 L981.417 682.251 L980.858 682.251 L980.298 682.251 L979.739 682.251 L979.18 682.251 L978.621 682.251 L978.061 682.251 L977.502 682.251 L976.943 682.251 L976.384 682.251 L975.824 682.251 L975.265 682.251 L974.706 682.251 L974.147 682.251 L973.587 682.251 L973.028 682.251 L972.469 682.251 L971.91 682.251 L971.35 682.251 L970.791 682.251 L970.232 682.251 L969.673 682.251 L969.113 682.251 L968.554 682.251 L967.995 682.251 L967.436 682.251 L966.876 682.251 L966.317 682.251 L965.758 682.251 L965.199 682.251 L964.639 682.251 L964.08 682.251 L963.521 682.251 L962.962 682.251 L962.402 682.251 L961.843 682.251 L961.284 682.251 L960.725 682.251 L960.165 682.251 L959.606 682.251 L959.047 682.251 L958.488 682.251 L957.928 682.251 L957.369 682.251 L956.81 682.251 L956.251 682.251 L955.691 682.251 L955.132 682.251 L954.573 682.251 L954.014 682.251 L953.454 682.251 L952.895 682.251 L952.336 682.251 L951.777 682.251 L951.217 682.251 L950.658 682.251 L950.099 682.251 L949.54 682.251 L948.98 682.251 L948.421 682.251 L947.862 682.251 L947.303 682.251 L946.743 682.251 L946.184 682.251 L945.625 682.251 L945.066 682.251 L944.506 682.251 L943.947 682.251 L943.388 682.251 L942.829 682.251 L942.269 682.251 L941.71 682.251 L941.151 682.251 L940.592 682.251 L940.032 682.251 L939.473 682.251 L938.914 682.251 L938.355 682.251 L937.795 682.251 L937.236 682.251 L936.677 682.251 L936.118 682.251 L935.558 682.251 L934.999 682.251 L934.44 682.251 L933.881 682.251 L933.321 682.251 L932.762 682.251 L932.203 682.251 L931.644 682.251 L931.084 682.251 L930.525 682.251 L929.966 682.251 L929.406 682.251 L928.847 682.251 L928.288 682.251 L927.729 682.251 L927.169 682.251 L926.61 682.251 L926.051 682.251 L925.492 682.251 L924.932 682.251 L924.373 682.251 L923.814 682.251 L923.255 682.251 L922.695 682.251 L922.136 682.251 L921.577 682.251 L921.018 682.251 L920.458 682.251 L919.899 682.251 L919.34 682.251 L918.781 682.251 L918.221 682.251 L917.662 682.251 L917.103 682.251 L916.544 682.251 L915.984 682.251 L915.425 682.251 L914.866 682.251 L914.307 682.251 L913.747 682.251 L913.188 682.251 L912.629 682.251 L912.07 682.251 L911.51 682.251 L910.951 682.251 L910.392 682.251 L909.833 682.251 L909.273 682.251 L908.714 682.251 L908.155 682.251 L907.596 682.251 L907.036 682.251 L906.477 682.251 L905.918 682.251 L905.359 682.251 L904.799 682.251 L904.24 682.251 L903.681 682.251 L903.122 682.251 L902.562 682.251 L902.003 682.251 L901.444 682.251 L900.885 682.251 L900.325 682.251 L899.766 682.251 L899.207 682.251 L898.648 682.251 L898.088 682.251 L897.529 682.251 L896.97 682.251 L896.411 682.251 L895.851 682.251 L895.292 682.251 L894.733 682.251 L894.174 682.251 L893.614 682.251 L893.055 682.251 L892.496 682.251 L891.937 682.251 L891.377 682.251 L890.818 682.251 L890.259 682.251 L889.7 682.251 L889.14 682.251 L888.581 682.251 L888.022 682.251 L887.463 682.251 L886.903 682.251 L886.344 682.251 L885.785 682.251 L885.226 682.251 L884.666 682.251 L884.107 682.251 L883.548 682.251 L882.989 682.251 L882.429 682.251 L881.87 682.251 L881.311 682.251 L880.752 682.251 L880.192 682.251 L879.633 682.251 L879.074 682.251 L878.515 682.251 L877.955 682.251 L877.396 682.251 L876.837 682.251 L876.278 682.251 L875.718 682.251 L875.159 682.251 L874.6 682.251 L874.041 682.251 L873.481 682.251 L872.922 682.251 L872.363 682.251 L871.804 682.251 L871.244 682.251 L870.685 682.251 L870.126 682.251 L869.567 682.251 L869.007 682.251 L868.448 682.251 L867.889 682.251 L867.33 682.251 L866.77 682.251 L866.211 682.251 L865.652 682.251 L865.093 682.251 L864.533 682.251 L863.974 682.251 L863.415 682.251 L862.856 682.251 L862.296 682.251 L861.737 682.251 L861.178 682.251 L860.619 682.251 L860.059 682.251 L859.5 682.251 L858.941 682.251 L858.382 682.251 L857.822 682.251 L857.263 682.251 L856.704 682.251 L856.145 682.251 L855.585 682.251 L855.026 682.251 L854.467 682.251 L853.908 682.251 L853.348 682.251 L852.789 682.251 L852.23 682.251 L851.671 682.251 L851.111 682.251 L850.552 682.251 L849.993 682.251 L849.434 682.251 L848.874 682.251 L848.315 682.251 L847.756 682.251 L847.197 682.251 L846.637 682.251 L846.078 682.251 L845.519 682.251 L844.96 682.251 L844.4 682.251 L843.841 682.251 L843.282 682.251 L842.723 682.251 L842.163 682.251 L841.604 682.251 L841.045 682.251 L840.486 682.251 L839.926 682.251 L839.367 682.251 L838.808 682.251 L838.249 682.251 L837.689 682.251 L837.13 682.251 L836.571 682.251 L836.012 682.251 L835.452 682.251 L834.893 682.251 L834.334 682.251 L833.775 682.251 L833.215 682.251 L832.656 682.251 L832.097 682.251 L831.538 682.251 L830.978 682.251 L830.419 682.251 L829.86 682.251 L829.301 682.251 L828.741 682.251 L828.182 682.251 L827.623 682.251 L827.064 682.251 L826.504 682.251 L825.945 682.251 L825.386 682.251 L824.827 682.251 L824.267 682.251 L823.708 682.251 L823.149 682.251 L822.59 682.251 L822.03 682.251 L821.471 682.251 L820.912 682.251 L820.353 682.251 L819.793 682.251 L819.234 682.251 L818.675 682.251 L818.116 682.251 L817.556 682.251 L816.997 682.251 L816.438 682.251 L815.879 682.251 L815.319 682.251 L814.76 682.251 L814.201 682.251 L813.642 682.251 L813.082 682.251 L812.523 682.251 L811.964 682.251 L811.405 682.251 L810.845 682.251 L810.286 682.251 L809.727 682.251 L809.168 682.251 L808.608 682.251 L808.049 682.251 L807.49 682.251 L806.931 682.251 L806.371 682.251 L805.812 682.251 L805.253 682.251 L804.693 682.251 L804.134 682.251 L803.575 682.251 L803.016 682.251 L802.456 682.251 L801.897 682.251 L801.338 682.251 L800.779 682.251 L800.219 682.251 L799.66 682.251 L799.101 682.251 L798.542 682.251 L797.982 682.251 L797.423 682.251 L796.864 682.251 L796.305 682.251 L795.745 682.251 L795.186 682.251 L794.627 682.251 L794.068 682.251 L793.508 682.251 L792.949 682.251 L792.39 682.251 L791.831 682.251 L791.271 682.251 L790.712 682.251 L790.153 682.251 L789.594 682.251 L789.034 682.251 L788.475 682.251 L787.916 682.251 L787.357 682.251 L786.797 682.251 L786.238 682.251 L785.679 682.251 L785.12 682.251 L784.56 682.251 L784.001 682.251 L783.442 682.251 L782.883 682.251 L782.323 682.251 L781.764 682.251 L781.205 682.251 L780.646 682.251 L780.086 682.251 L779.527 682.251 L778.968 682.251 L778.409 682.251 L777.849 682.251 L777.29 682.251 L776.731 682.251 L776.172 682.251 L775.612 682.251 L775.053 682.251 L774.494 682.251 L773.935 682.251 L773.375 682.251 L772.816 682.251 L772.257 682.251 L771.698 682.251 L771.138 682.251 L770.579 682.251 L770.02 682.251 L769.461 682.251 L768.901 682.251 L768.342 682.251 L767.783 682.251 L767.224 682.251 L766.664 682.251 L766.105 682.251 L765.546 682.251 L764.987 682.251 L764.427 682.251 L763.868 682.251 L763.309 682.251 L762.75 682.251 L762.19 682.251 L761.631 682.251 L761.072 682.251 L760.513 682.251 L759.953 682.251 L759.394 682.251 L758.835 682.251 L758.276 682.251 L757.716 682.251 L757.157 682.251 L756.598 682.251 L756.039 682.251 L755.479 682.251 L754.92 682.251 L754.361 682.251 L753.802 682.251 L753.242 682.251 L752.683 682.251 L752.124 682.251 L751.565 682.251 L751.005 682.251 L750.446 682.251 L749.887 682.251 L749.328 682.251 L748.768 682.251 L748.209 682.251 L747.65 682.251 L747.091 682.251 L746.531 682.251 L745.972 682.251 L745.413 682.251 L744.854 682.251 L744.294 682.251 L743.735 682.251 L743.176 682.251 L742.617 682.251 L742.057 682.251 L741.498 682.251 L740.939 682.251 L740.38 682.251 L739.82 682.251 L739.261 682.251 L738.702 682.251 L738.143 682.251 L737.583 682.251 L737.024 682.251 L736.465 682.251 L735.906 682.251 L735.346 682.251 L734.787 682.251 L734.228 682.251 L733.669 682.251 L733.109 682.251 L732.55 682.251 L731.991 682.251 L731.432 682.251 L730.872 682.251 L730.313 682.251 L729.754 682.251 L729.195 682.251 L728.635 682.251 L728.076 682.251 L727.517 682.251 L726.958 682.251 L726.398 682.251 L725.839 682.251 L725.28 682.251 L724.721 682.251 L724.161 682.251 L723.602 682.251 L723.043 682.251 L722.484 682.251 L721.924 682.251 L721.365 682.251 L720.806 682.251 L720.247 682.251  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.89 720.806,685.89 721.365,685.89 721.924,685.89 722.484,685.89 723.043,685.89 723.602,685.89 724.161,685.89 724.721,685.89 725.28,685.89 725.839,685.89 726.398,685.89 726.958,685.89 727.517,685.89 728.076,685.89 728.635,685.89 729.195,685.89 729.754,685.89 730.313,685.89 730.872,685.89 731.432,685.89 731.991,685.89 732.55,685.89 733.109,685.89 733.669,685.89 734.228,685.89 734.787,685.89 735.346,685.89 735.906,685.89 736.465,685.89 737.024,685.89 737.583,685.89 738.143,685.89 738.702,685.89 739.261,685.89 739.82,685.89 740.38,685.89 740.939,685.89 741.498,685.89 742.057,685.89 742.617,685.89 743.176,685.89 743.735,685.89 744.294,685.89 744.854,685.89 745.413,685.89 745.972,685.89 746.531,685.89 747.091,685.89 747.65,685.89 748.209,685.89 748.768,685.89 749.328,685.89 749.887,685.89 750.446,685.89 751.005,685.89 751.565,685.89 752.124,685.89 752.683,685.89 753.242,685.89 753.802,685.89 754.361,685.89 754.92,685.89 755.479,685.89 756.039,685.89 756.598,685.89 757.157,685.89 757.716,685.89 758.276,685.89 758.835,685.89 759.394,685.89 759.953,685.89 760.513,685.89 761.072,685.89 761.631,685.89 762.19,685.89 762.75,685.89 763.309,685.89 763.868,685.89 764.427,685.89 764.987,685.89 765.546,685.89 766.105,685.89 766.664,685.89 767.224,685.89 767.783,685.89 768.342,685.89 768.901,685.89 769.461,685.89 770.02,685.89 770.579,685.89 771.138,685.89 771.698,685.89 772.257,685.89 772.816,685.89 773.375,685.89 773.935,685.89 774.494,685.89 775.053,685.89 775.612,685.89 776.172,685.89 776.731,685.89 777.29,685.89 777.849,685.89 778.409,685.89 778.968,685.89 779.527,685.89 780.086,685.89 780.646,685.89 781.205,685.89 781.764,685.89 782.323,685.89 782.883,685.89 783.442,685.89 784.001,685.89 784.56,685.89 785.12,685.89 785.679,685.89 786.238,685.89 786.797,685.89 787.357,685.89 787.916,685.89 788.475,685.89 789.034,685.89 789.594,685.89 790.153,685.89 790.712,685.89 791.271,685.89 791.831,685.89 792.39,685.89 792.949,685.89 793.508,685.89 794.068,685.89 794.627,685.89 795.186,685.89 795.745,685.89 796.305,685.89 796.864,685.89 797.423,685.89 797.982,685.89 798.542,685.89 799.101,685.89 799.66,685.89 800.219,685.89 800.779,685.89 801.338,685.89 801.897,685.89 802.456,685.89 803.016,685.89 803.575,685.89 804.134,685.89 804.693,685.89 805.253,685.89 805.812,685.89 806.371,685.89 806.931,685.89 807.49,685.89 808.049,685.89 808.608,685.89 809.168,685.89 809.727,685.89 810.286,685.89 810.845,685.89 811.405,685.89 811.964,685.89 812.523,685.89 813.082,685.89 813.642,685.89 814.201,685.89 814.76,685.89 815.319,685.89 815.879,685.89 816.438,685.89 816.997,685.89 817.556,685.89 818.116,685.89 818.675,685.89 819.234,685.89 819.793,685.89 820.353,685.89 820.912,685.89 821.471,685.89 822.03,685.89 822.59,685.89 823.149,685.89 823.708,685.89 824.267,685.89 824.827,685.89 825.386,685.89 825.945,685.89 826.504,685.89 827.064,685.89 827.623,685.89 828.182,685.89 828.741,685.89 829.301,685.89 829.86,685.89 830.419,685.89 830.978,685.89 831.538,685.89 832.097,685.89 832.656,685.89 833.215,685.89 833.775,685.89 834.334,685.89 834.893,685.89 835.452,685.89 836.012,685.89 836.571,685.89 837.13,685.89 837.689,685.89 838.249,685.89 838.808,685.89 839.367,685.89 839.926,685.89 840.486,685.89 841.045,685.89 841.604,685.89 842.163,685.89 842.723,685.89 843.282,685.89 843.841,685.89 844.4,685.89 844.96,685.89 845.519,685.89 846.078,685.89 846.637,685.89 847.197,685.89 847.756,685.89 848.315,685.89 848.874,685.89 849.434,685.89 849.993,685.89 850.552,685.89 851.111,685.89 851.671,685.89 852.23,685.89 852.789,685.89 853.348,685.89 853.908,685.89 854.467,685.89 855.026,685.89 855.585,685.89 856.145,685.89 856.704,685.89 857.263,685.89 857.822,685.89 858.382,685.89 858.941,685.89 859.5,685.89 860.059,685.89 860.619,685.89 861.178,685.89 861.737,685.89 862.296,685.89 862.856,685.89 863.415,685.89 863.974,685.89 864.533,685.89 865.093,685.89 865.652,685.89 866.211,685.89 866.77,685.89 867.33,685.89 867.889,685.89 868.448,685.89 869.007,685.89 869.567,685.89 870.126,685.89 870.685,685.89 871.244,685.89 871.804,685.89 872.363,685.89 872.922,685.89 873.481,685.89 874.041,685.89 874.6,685.89 875.159,685.89 875.718,685.89 876.278,685.89 876.837,685.89 877.396,685.89 877.955,685.89 878.515,685.89 879.074,685.89 879.633,685.89 880.192,685.89 880.752,685.89 881.311,685.89 881.87,685.89 882.429,685.89 882.989,685.89 883.548,685.89 884.107,685.89 884.666,685.89 885.226,685.89 885.785,685.89 886.344,685.89 886.903,685.89 887.463,685.89 888.022,685.89 888.581,685.89 889.14,685.89 889.7,685.89 890.259,685.89 890.818,685.89 891.377,685.89 891.937,685.89 892.496,685.89 893.055,685.89 893.614,685.89 894.174,685.89 894.733,685.89 895.292,685.89 895.851,685.89 896.411,685.89 896.97,685.89 897.529,685.89 898.088,685.89 898.648,685.89 899.207,685.89 899.766,685.89 900.325,685.89 900.885,685.89 901.444,685.89 902.003,685.89 902.562,685.89 903.122,685.89 903.681,685.89 904.24,685.89 904.799,685.89 905.359,685.89 905.918,685.89 906.477,685.89 907.036,685.89 907.596,685.89 908.155,685.89 908.714,685.89 909.273,685.89 909.833,685.89 910.392,685.89 910.951,685.89 911.51,685.89 912.07,685.89 912.629,685.89 913.188,685.89 913.747,685.89 914.307,685.89 914.866,685.89 915.425,685.89 915.984,685.89 916.544,685.89 917.103,685.89 917.662,685.89 918.221,685.89 918.781,685.89 919.34,685.89 919.899,685.89 920.458,685.89 921.018,685.89 921.577,685.89 922.136,685.89 922.695,685.89 923.255,685.89 923.814,685.89 924.373,685.89 924.932,685.89 925.492,685.89 926.051,685.89 926.61,685.89 927.169,685.89 927.729,685.89 928.288,685.89 928.847,685.89 929.406,685.89 929.966,685.89 930.525,685.89 931.084,685.89 931.644,685.89 932.203,685.89 932.762,685.89 933.321,685.89 933.881,685.89 934.44,685.89 934.999,685.89 935.558,685.89 936.118,685.89 936.677,685.89 937.236,685.89 937.795,685.89 938.355,685.89 938.914,685.89 939.473,685.89 940.032,685.89 940.592,685.89 941.151,685.89 941.71,685.89 942.269,685.89 942.829,685.89 943.388,685.89 943.947,685.89 944.506,685.89 945.066,685.89 945.625,685.89 946.184,685.89 946.743,685.89 947.303,685.89 947.862,685.89 948.421,685.89 948.98,685.89 949.54,685.89 950.099,685.89 950.658,685.89 951.217,685.89 951.777,685.89 952.336,685.89 952.895,685.89 953.454,685.89 954.014,685.89 954.573,685.89 955.132,685.89 955.691,685.89 956.251,685.89 956.81,685.89 957.369,685.89 957.928,685.89 958.488,685.89 959.047,685.89 959.606,685.89 960.165,685.89 960.725,685.89 961.284,685.89 961.843,685.89 962.402,685.89 962.962,685.89 963.521,685.89 964.08,685.89 964.639,685.89 965.199,685.89 965.758,685.89 966.317,685.89 966.876,685.89 967.436,685.89 967.995,685.89 968.554,685.89 969.113,685.89 969.673,685.89 970.232,685.89 970.791,685.89 971.35,685.89 971.91,685.89 972.469,685.89 973.028,685.89 973.587,685.89 974.147,685.89 974.706,685.89 975.265,685.89 975.824,685.89 976.384,685.89 976.943,685.89 977.502,685.89 978.061,685.89 978.621,685.89 979.18,685.89 979.739,685.89 980.298,685.89 980.858,685.89 981.417,685.89 981.976,685.89 982.535,685.89 983.095,685.89 983.654,685.89 984.213,685.89 984.772,685.89 985.332,685.89 985.891,685.89 986.45,685.89 987.009,685.89 987.569,685.89 988.128,685.89 988.687,685.89 989.246,685.89 989.806,685.89 990.365,685.89 990.924,685.89 991.483,685.89 992.043,685.89 992.602,685.89 993.161,685.89 993.72,685.89 994.28,685.89 994.839,685.89 995.398,685.89 995.957,685.89 996.517,685.89 997.076,685.89 997.635,685.89 998.194,685.89 998.754,685.89 999.313,685.89 999.872,685.89 1000.43,685.89 1000.99,685.89 1001.55,685.89 1002.11,685.89 1002.67,685.89 1003.23,685.89 1003.79,685.89 1004.35,685.89 1004.91,685.89 1005.46,685.89 1006.02,685.89 1006.58,685.89 1007.14,685.89 1007.7,685.89 1008.26,685.89 1008.82,685.89 1009.38,685.89 1009.94,685.89 1010.5,685.89 1011.06,685.89 1011.62,685.89 1012.18,685.89 1012.73,685.89 1013.29,685.89 1013.85,685.89 1014.41,685.89 1014.97,685.89 1015.53,685.89 1016.09,685.89 1016.65,685.89 1017.21,685.89 1017.77,685.89 1018.33,685.89 1018.89,685.89 1019.45,685.89 1020.01,685.89 1020.56,685.89 1021.12,685.89 1021.68,685.89 1022.24,685.89 1022.8,685.89 1023.36,685.89 1023.92,685.89 1024.48,685.89 1025.04,685.89 1025.6,685.89 1026.16,685.89 1026.72,685.89 1027.28,685.89 1027.83,685.89 1028.39,685.89 1028.95,685.89 1029.51,685.89 1030.07,685.89 1030.63,685.89 1031.19,685.89 1031.75,685.89 1032.31,685.89 1032.87,685.89 1033.43,685.89 1033.99,685.89 1034.55,685.89 1035.1,685.89 1035.66,685.89 1036.22,685.89 1036.78,685.89 1037.34,685.89 1037.9,685.89 1038.46,685.89 1039.02,685.89 1039.58,685.89 1040.14,685.89 1040.7,685.89 1041.26,685.89 1041.82,685.89 1042.38,685.89 1042.93,685.89 1043.49,685.89 1044.05,685.89 1044.61,685.89 1045.17,685.89 1045.73,685.89 1046.29,685.89 1046.85,685.89 1047.41,685.89 1047.97,685.89 1048.53,685.89 1049.09,685.89 1049.65,685.89 1050.2,685.89 1050.76,685.89 1051.32,685.89 1051.88,685.89 1052.44,685.89 1053,685.89 1053.56,685.89 1054.12,685.89 1054.68,685.89 1055.24,685.89 1055.8,685.89 1056.36,685.89 1056.92,685.89 1057.48,685.89 1058.03,685.89 1058.59,685.89 1059.15,685.89 1059.71,685.89 1060.27,685.89 1060.83,685.89 1061.39,685.89 1061.95,685.89 1062.51,685.89 1063.07,685.89 1063.63,685.89 1064.19,685.89 1064.75,685.89 1065.3,685.89 1065.86,685.89 1066.42,685.89 1066.98,685.89 1067.54,685.89 1068.1,685.89 1068.66,685.89 1069.22,685.89 1069.78,685.89 1070.34,685.89 1070.9,685.89 1071.46,685.89 1072.02,685.89 1072.57,685.89 1073.13,685.89 1073.69,685.89 1074.25,685.89 1074.81,685.89 1075.37,685.89 1075.93,685.89 1076.49,685.89 1077.05,685.89 1077.61,685.89 1078.17,685.89 1078.73,685.89 1079.29,685.89 1079.85,685.89 1080.4,685.89 1080.96,685.89 1081.52,685.89 1082.08,685.89 1082.64,685.89 1083.2,685.89 1083.76,685.89 1084.32,685.89 1084.88,685.89 1085.44,685.89 1086,685.89 1086.56,685.89 1087.12,685.89 1087.67,685.89 1088.23,685.89 1088.79,685.89 1089.35,685.89 1089.91,685.89 1090.47,685.89 1091.03,685.89 1091.59,685.89 1092.15,685.89 1092.71,685.89 1093.27,685.89 1093.83,685.89 1094.39,685.89 1094.94,685.89 1095.5,685.89 1096.06,685.89 1096.62,685.89 1097.18,685.89 1097.74,685.89 1098.3,685.89 1098.86,685.89 1099.42,685.89 1099.98,685.89 1100.54,685.89 1101.1,685.89 1101.66,685.89 1102.22,685.89 1102.77,685.89 1103.33,685.89 1103.89,685.89 1104.45,685.89 1105.01,685.89 1105.57,685.89 1106.13,685.89 1106.69,685.89 1107.25,685.89 1107.81,685.89 1108.37,685.89 1108.93,685.89 1109.49,685.89 1110.04,685.89 1110.6,685.89 1111.16,685.89 1111.72,685.89 1112.28,685.89 1112.84,685.89 1113.4,685.89 1113.96,685.89 1114.52,685.89 1115.08,685.89 1115.64,685.89 1116.2,685.89 1116.76,685.89 1117.31,685.89 1117.87,685.89 1118.43,685.89 1118.99,685.89 1119.55,685.89 1120.11,685.89 1120.67,685.89 1121.23,685.89 1121.79,685.89 1122.35,685.89 1122.91,685.89 1123.47,685.89 1124.03,685.89 1124.59,685.89 1125.14,685.89 1125.7,685.89 1126.26,685.89 1126.82,685.89 1127.38,685.89 1127.94,685.89 1128.5,685.89 1129.06,685.89 1129.62,685.89 1130.18,685.89 1130.74,685.89 1131.3,685.89 1131.86,685.89 1132.41,685.89 1132.97,685.89 1133.53,685.89 1134.09,685.89 1134.65,685.89 1135.21,685.89 1135.77,685.89 1136.33,685.89 1136.89,685.89 1137.45,685.89 1138.01,685.89 1138.57,685.89 1139.13,685.89 1139.68,685.89 1140.24,685.89 1140.8,685.89 1141.36,685.89 1141.92,685.89 1142.48,685.89 1143.04,685.89 1143.6,685.89 1144.16,685.89 1144.72,685.89 1145.28,685.89 1145.84,685.89 1146.4,685.89 1146.96,685.89 1147.51,685.89 1148.07,685.89 1148.63,685.89 1149.19,685.89 1149.75,685.89 1150.31,685.89 1150.87,685.89 1151.43,685.89 1151.99,685.89 1152.55,685.89 1153.11,685.89 1153.67,685.89 1154.23,685.89 1154.78,685.89 1155.34,685.89 1155.9,685.89 1156.46,685.89 1157.02,685.89 1157.58,685.89 1158.14,685.89 1158.7,685.89 1159.26,685.89 1159.82,685.89 1160.38,685.89 1160.94,685.89 1161.5,685.89 1162.05,685.89 1162.61,685.89 1163.17,685.89 1163.73,685.89 1164.29,685.89 1164.85,685.89 1165.41,685.89 1165.97,685.89 1166.53,685.89 1167.09,685.89 1167.65,685.89 1168.21,685.89 1168.77,685.89 1169.33,685.89 1169.88,685.89 1170.44,685.89 1171,685.89 1171.56,685.89 1172.12,685.89 1172.68,685.89 1173.24,685.89 1173.8,685.89 1174.36,685.89 1174.92,685.89 1175.48,685.89 1176.04,685.89 1176.6,685.89 1177.15,685.89 1177.71,685.89 1178.27,685.89 1178.83,685.89 1179.39,685.89 1179.95,685.89 1180.51,685.89 1181.07,685.89 1181.63,685.89 1182.19,685.89 1182.75,685.89 1183.31,685.89 1183.87,685.89 1184.43,685.89 1184.98,685.89 1185.54,685.89 1186.1,685.89 1186.66,685.89 1187.22,685.89 1187.78,685.89 1188.34,685.89 1188.9,685.89 1189.46,685.89 1190.02,685.89 1190.58,685.89 1191.14,685.89 1191.7,685.89 1192.25,685.89 1192.81,685.89 1193.37,685.89 1193.93,685.89 1194.49,685.89 1195.05,685.89 1195.61,685.89 1196.17,685.89 1196.73,685.89 1197.29,685.89 1197.85,685.89 1198.41,685.89 1198.97,685.89 1199.52,685.89 1200.08,685.89 1200.64,685.89 1201.2,685.89 1201.76,685.89 1202.32,685.89 1202.88,685.89 1203.44,685.89 1204,685.89 1204.56,685.89 1205.12,685.89 1205.68,685.89 1206.24,685.89 1206.8,685.89 1207.35,685.89 1207.91,685.89 1208.47,685.89 1209.03,685.89 1209.59,685.89 1210.15,685.89 1210.71,685.89 1211.27,685.89 1211.83,685.89 1212.39,685.89 1212.95,685.89 1213.51,685.89 1214.07,685.89 1214.62,685.89 1215.18,685.89 1215.74,685.89 1216.3,685.89 1216.86,685.89 1217.42,685.89 1217.98,685.89 1218.54,685.89 1219.1,685.89 1219.66,685.89 1220.22,685.89 1220.78,685.89 1221.34,685.89 1221.89,685.89 1222.45,685.89 1223.01,685.89 1223.57,685.89 1224.13,685.89 1224.69,685.89 1225.25,685.89 1225.81,685.89 1226.37,685.89 1226.93,685.89 1227.49,685.89 1228.05,685.89 1228.61,685.89 1229.17,685.89 1229.72,685.89 1230.28,685.89 1230.84,685.89 1231.4,685.89 1231.96,685.89 1232.52,685.89 1233.08,685.89 1233.64,685.89 1234.2,685.89 1234.76,685.89 1235.32,685.89 1235.88,685.89 1236.44,685.89 1236.99,685.89 1237.55,685.89 1238.11,685.89 1238.67,685.89 1239.23,685.89 1239.79,685.89 1240.35,685.89 1240.91,685.89 1241.47,685.89 1242.03,685.89 1242.59,685.89 1243.15,685.89 1243.71,685.89 1244.26,685.89 1244.82,685.89 1245.38,685.89 1245.94,685.89 1246.5,685.89 1247.06,685.89 1247.62,685.89 1248.18,685.89 1248.74,685.89 1249.3,685.89 1249.86,685.89 1250.42,685.89 1250.98,685.89 1251.54,685.89 1252.09,685.89 1252.65,685.89 1253.21,685.89 1253.77,685.89 1254.33,685.89 1254.89,685.89 1255.45,685.89 1256.01,685.89 1256.57,685.89 1257.13,685.89 1257.69,685.89 1258.25,685.89 1258.81,685.89 1259.36,685.89 1259.92,685.89 1260.48,685.89 1261.04,685.89 1261.6,685.89 1262.16,685.89 1262.72,685.89 1263.28,685.89 1263.84,685.89 1264.4,685.89 1264.96,685.89 1265.52,685.89 1266.08,685.89 1266.63,685.89 1267.19,685.89 1267.75,685.89 1268.31,685.89 1268.87,685.89 1269.43,685.89 1269.99,685.89 1270.55,685.89 1271.11,685.89 1271.67,685.89 1272.23,685.89 1272.79,685.89 1273.35,685.89 1273.91,685.89 1274.46,685.89 1275.02,685.89 1275.58,685.89 1276.14,685.89 1276.7,685.89 1277.26,685.89 1277.82,685.89 1278.38,685.89 1278.94,685.89 1279.5,685.89 1280.06,685.89 1280.62,685.89 1281.18,685.89 1281.73,685.89 1282.29,685.89 1282.85,685.89 1283.41,685.89 1283.97,685.89 1284.53,685.89 1285.09,685.89 1285.65,685.89 1286.21,685.89 1286.77,685.89 1287.33,685.89 1287.89,685.89 1288.45,685.89 1289,685.89 1289.56,685.89 1290.12,685.89 1290.68,685.89 1291.24,685.89 1291.8,685.89 1292.36,685.89 1292.92,685.89 1293.48,685.89 1294.04,685.89 1294.6,685.89 1295.16,685.89 1295.72,685.89 1296.28,685.89 1296.83,685.89 1297.39,685.89 1297.95,685.89 1298.51,685.89 1299.07,685.89 1299.63,685.89 1300.19,685.89 1300.75,685.89 1301.31,685.89 1301.87,685.89 1302.43,685.89 1302.99,685.89 1303.55,685.89 1304.1,685.89 1304.66,685.89 1305.22,685.89 1305.78,685.89 1306.34,685.89 1306.9,685.89 1307.46,685.89 1308.02,685.89 1308.58,685.89 1309.14,685.89 1309.7,685.89 1310.26,685.89 1310.82,685.89 1311.38,685.89 1311.93,685.89 1312.49,685.89 1313.05,685.89 1313.61,685.89 1314.17,685.89 1314.73,685.89 1315.29,685.89 1315.85,685.89 1316.41,685.89 1316.97,685.89 1317.53,685.89 1318.09,685.89 1318.65,685.89 1319.2,685.89 1319.76,685.89 1320.32,685.89 1320.88,685.89 1321.44,685.89 1322,685.89 1322.56,685.89 1323.12,685.89 1323.68,685.89 1324.24,685.89 1324.8,685.89 1325.36,685.89 1325.92,685.89 1326.47,685.89 1327.03,685.89 1327.59,685.89 1328.15,685.89 1328.71,685.89 1329.27,685.89 1329.83,685.89 1330.39,685.89 1330.95,685.89 1331.51,685.89 1332.07,685.89 1332.63,685.89 1333.19,685.89 1333.75,685.89 1334.3,685.89 1334.86,685.89 1335.42,685.89 1335.98,685.89 1336.54,685.89 1337.1,685.89 1337.66,685.89 1338.22,685.89 1338.78,685.89 1339.34,685.89 1339.9,685.89 1340.46,685.89 1341.02,685.89 1341.57,685.89 1342.13,685.89 1342.69,685.89 1343.25,685.89 1343.81,685.89 1344.37,685.89 1344.93,685.89 1345.49,685.89 1346.05,685.89 1346.61,685.89 1347.17,685.89 1347.73,685.89 1348.29,685.89 1348.84,685.89 1349.4,685.89 1349.96,685.89 1350.52,685.89 1351.08,685.89 1351.64,685.89 1352.2,685.89 1352.76,685.89 1353.32,685.89 1353.88,685.89 1354.44,685.89 1355,685.89 1355.56,685.89 1356.12,685.89 1356.67,685.89 1357.23,685.89 1357.79,685.89 1358.35,685.89 1358.91,685.89 1359.47,685.89 1360.03,685.89 1360.59,685.89 1361.15,685.89 1361.71,685.89 1362.27,685.89 1362.83,685.89 1363.39,685.89 1363.94,685.89 1364.5,685.89 1365.06,685.89 1365.62,685.89 1366.18,685.89 1366.74,685.89 1367.3,685.89 1367.86,685.89 1368.42,685.89 1368.98,685.89 1369.54,685.89 1370.1,685.89 1370.66,685.89 1371.21,685.89 1371.77,685.89 1372.33,685.89 1372.89,685.89 1373.45,685.89 1374.01,685.89 1374.57,685.89 1375.13,685.89 1375.69,685.89 1376.25,685.89 1376.81,685.89 1377.37,685.89 1377.93,685.89 1378.49,685.89 1379.04,685.89 1379.6,685.89 1380.16,685.89 1380.72,685.89 1381.28,685.89 1381.84,685.89 1382.4,685.89 1382.96,685.89 1383.52,685.89 1384.08,685.89 1384.64,685.89 1385.2,685.89 1385.76,685.89 1386.31,685.89 1386.87,685.89 1387.43,685.89 1387.99,685.89 1388.55,685.89 1389.11,685.89 1389.67,685.89 1390.23,685.89 1390.79,685.89 1391.35,685.89 1391.91,685.89 1392.47,685.89 1393.03,685.89 1393.58,685.89 1394.14,685.89 1394.7,685.89 1395.26,685.89 1395.82,685.89 1396.38,685.89 1396.94,685.89 1397.5,685.89 1398.06,685.89 1398.62,685.89 1399.18,685.89 1399.74,685.89 1400.3,685.89 1400.86,685.89 1401.41,685.89 1401.97,685.89 1402.53,685.89 1403.09,685.89 1403.65,685.89 1404.21,685.89 1404.77,685.89 1405.33,685.89 1405.89,685.89 1406.45,685.89 1407.01,685.89 1407.57,685.89 1408.13,685.89 1408.68,685.89 1409.24,685.89 1409.8,685.89 1410.36,685.89 1410.92,685.89 1411.48,685.89 1412.04,685.89 1412.6,685.89 1413.16,685.89 1413.72,685.89 1414.28,685.89 1414.84,685.89 1415.4,685.89 1415.95,685.89 1416.51,685.89 1417.07,685.89 1417.63,685.89 1418.19,685.89 1418.75,685.89 1419.31,685.89 1419.87,685.89 1420.43,685.89 1420.99,685.89 1421.55,685.89 1422.11,685.89 1422.67,685.89 1423.23,685.89 1423.78,685.89 1424.34,685.89 1424.9,685.89 1425.46,685.89 1426.02,685.89 1426.58,685.89 1427.14,685.89 1427.7,685.89 1428.26,685.89 1428.82,685.89 1429.38,685.89 1429.94,685.89 1430.5,685.89 1431.05,685.89 1431.61,685.89 1432.17,685.89 1432.73,685.89 1433.29,685.89 1433.85,685.89 1434.41,685.89 1434.97,685.89 1435.53,685.89 1436.09,685.89 1436.65,685.89 1437.21,685.89 1437.77,685.89 1438.33,685.89 1438.88,685.89 1439.44,685.89 1440,685.89 1440.56,685.89 1441.12,685.89 1441.68,685.89 1442.24,685.89 1442.8,685.89 1443.36,685.89 1443.92,685.89 1444.48,685.89 1445.04,685.89 1445.6,685.89 1446.15,685.89 1446.71,685.89 1447.27,685.89 1447.83,685.89 1448.39,685.89 1448.95,685.89 1449.51,685.89 1450.07,685.89 1450.63,685.89 1451.19,685.89 1451.75,685.89 1452.31,685.89 1452.87,685.89 1453.42,685.89 1453.98,685.89 1454.54,685.89 1455.1,685.89 1455.66,685.89 1456.22,685.89 1456.78,685.89 1457.34,685.89 1457.9,685.89 1458.46,685.89 1459.02,685.89 1459.58,685.89 1460.14,685.89 1460.7,685.89 1461.25,685.89 1461.81,685.89 1462.37,685.89 1462.93,685.89 1463.49,685.89 1464.05,685.89 1464.61,685.89 1465.17,685.89 1465.73,685.89 1466.29,685.89 1466.85,685.89 1467.41,685.89 1467.97,685.89 1468.52,685.89 1469.08,685.89 1469.64,685.89 1470.2,685.89 1470.76,685.89 1471.32,685.89 1471.88,685.89 1472.44,685.89 1473,685.89 1473.56,685.89 1474.12,685.89 1474.68,685.89 1475.24,685.89 1475.79,685.89 1476.35,685.89 1476.91,685.89 1477.47,685.89 1478.03,685.89 1478.59,685.89 1479.15,685.89 1479.71,685.89 1480.27,685.89 1480.83,685.89 1481.39,685.89 1481.95,685.89 1482.51,685.89 1483.07,685.89 1483.62,685.89 1484.18,685.89 1484.74,685.89 1485.3,685.89 1485.86,685.89 1486.42,685.89 1486.98,685.89 1487.54,685.89 1488.1,685.89 1488.66,685.89 1489.22,685.89 1489.78,685.89 1490.34,685.89 1490.89,685.89 1491.45,685.89 1492.01,685.89 1492.57,685.89 1493.13,685.89 1493.69,685.89 1494.25,685.89 1494.81,685.89 1495.37,685.89 1495.93,685.89 1496.49,685.89 1497.05,685.89 1497.61,685.89 1498.16,685.89 1498.72,685.89 1499.28,685.89 1499.84,685.89 1500.4,685.89 1500.96,685.89 1501.52,685.89 1502.08,685.89 1502.64,685.89 1503.2,685.89 1503.76,685.89 1504.32,685.89 1504.88,685.89 1505.44,685.89 1505.99,685.89 1506.55,685.89 1507.11,685.89 1507.67,685.89 1508.23,685.89 1508.79,685.89 1509.35,685.89 1509.91,685.89 1510.47,685.89 1511.03,685.89 1511.59,685.89 1512.15,685.89 1512.71,685.89 1513.26,685.89 1513.82,685.89 1514.38,685.89 1514.94,685.89 1515.5,685.89 1516.06,685.89 1516.62,685.89 1517.18,685.89 1517.74,685.89 1518.3,685.89 1518.86,685.89 1519.42,685.89 1519.98,685.89 1520.53,685.89 1521.09,685.89 1521.65,685.89 1522.21,685.89 1522.77,685.89 1523.33,685.89 1523.89,685.89 1524.45,685.89 1525.01,685.89 1525.57,685.89 1526.13,685.89 1526.69,685.89 1527.25,685.89 1527.81,685.89 1528.36,685.89 1528.92,685.89 1529.48,685.89 1530.04,685.89 1530.6,685.89 1531.16,685.89 1531.72,685.89 1532.28,685.89 1532.84,685.89 1533.4,685.89 1533.96,685.89 1534.52,685.89 1535.08,685.89 1535.63,685.89 1536.19,685.89 1536.75,685.89 1537.31,685.89 1537.87,685.89 1538.43,685.89 1538.99,685.89 1539.55,685.89 1540.11,685.89 1540.67,685.89 1541.23,685.89 1541.79,685.89 1542.35,685.89 1542.9,685.89 1543.46,685.89 1544.02,685.89 1544.58,685.89 1545.14,685.89 1545.7,685.89 1546.26,685.89 1546.82,685.89 1547.38,685.89 1547.94,685.89 1548.5,685.89 1549.06,685.89 1549.62,685.89 1550.18,685.89 1550.73,685.89 1551.29,685.89 1551.85,685.89 1552.41,685.89 1552.97,685.89 1553.53,685.89 1554.09,685.89 1554.65,685.89 1555.21,685.89 1555.77,685.89 1556.33,685.89 1556.89,685.89 1557.45,685.89 1558,685.89 1558.56,685.89 1559.12,685.89 1559.68,685.89 1560.24,685.89 1560.8,685.89 1561.36,685.89 1561.92,685.89 1562.48,685.89 1563.04,685.89 1563.6,685.89 1564.16,685.89 1564.72,685.89 1565.28,685.89 1565.83,685.89 1566.39,685.89 1566.95,685.89 1567.51,685.89 1568.07,685.89 1568.63,685.89 1569.19,685.89 1569.75,685.89 1570.31,685.89 1570.87,685.89 1571.43,685.89 1571.99,685.89 1572.55,685.89 1573.1,685.89 1573.66,685.89 1574.22,685.89 1574.78,685.89 1575.34,685.89 1575.9,685.89 1576.46,685.89 1577.02,685.89 1577.58,685.89 1578.14,685.89 1578.7,685.89 1579.26,685.89 1579.82,685.89 1580.37,685.89 1580.93,685.89 1581.49,685.89 1582.05,685.89 1582.61,685.89 1583.17,685.89 1583.73,685.89 1584.29,685.89 1584.85,685.89 1585.41,685.89 1585.97,685.89 1586.53,685.89 1587.09,685.89 1587.65,685.89 1588.2,685.89 1588.76,685.89 1589.32,685.89 1589.88,685.89 1590.44,685.89 1591,685.89 1591.56,685.89 1592.12,685.89 1592.68,685.89 1593.24,685.89 1593.8,685.89 1594.36,685.89 1594.92,685.89 1595.47,685.89 1596.03,685.89 1596.59,685.89 1597.15,685.89 1597.71,685.89 1598.27,685.89 1598.83,685.89 1599.39,685.89 1599.95,685.89 1600.51,685.89 1601.07,685.89 1601.63,685.89 1602.19,685.89 1602.74,685.89 1603.3,685.89 1603.86,685.89 1604.42,685.89 1604.98,685.89 1605.54,685.89 1606.1,685.89 1606.66,685.89 1607.22,685.89 1607.78,685.89 1608.34,685.89 1608.9,685.89 1609.46,685.89 1610.02,685.89 1610.57,685.89 1611.13,685.89 1611.69,685.89 1612.25,685.89 1612.81,685.89 1613.37,685.89 1613.93,685.89 1614.49,685.89 1615.05,685.89 1615.61,685.89 1616.17,685.89 1616.73,685.89 1617.29,685.89 1617.84,685.89 1618.4,685.89 1618.96,685.89 1619.52,685.89 1620.08,685.89 1620.64,685.89 1621.2,685.89 1621.76,685.89 1622.32,685.89 1622.88,685.89 1623.44,685.89 1624,685.89 1624.56,685.89 1625.11,685.89 1625.67,685.89 1626.23,685.89 1626.79,685.89 1627.35,685.89 1627.91,685.89 1628.47,685.89 1629.03,685.89 1629.59,685.89 1630.15,685.89 1630.71,685.89 1631.27,685.89 1631.83,685.89 1632.39,685.89 1632.94,685.89 1633.5,685.89 1634.06,685.89 1634.62,685.89 1635.18,685.89 1635.74,685.89 1636.3,685.89 1636.86,685.89 1637.42,685.89 1637.98,685.89 1638.54,685.89 1639.1,685.89 1639.66,685.89 1640.21,685.89 1640.77,685.89 1641.33,685.89 1641.89,685.89 1642.45,685.89 1643.01,685.89 1643.57,685.89 1644.13,685.89 1644.69,685.89 1645.25,685.89 1645.81,685.89 1646.37,685.89 1646.93,685.89 1647.48,685.89 1648.04,685.89 1648.6,685.89 1649.16,685.89 1649.72,685.89 1650.28,685.89 1650.84,685.89 1651.4,685.89 1651.96,685.89 1652.52,685.89 1653.08,685.89 1653.64,685.89 1654.2,685.89 1654.76,685.89 1655.31,685.89 1655.87,685.89 1656.43,685.89 1656.99,685.89 1657.55,685.89 1658.11,685.89 1658.67,685.89 1659.23,685.89 1659.79,685.89 1660.35,685.89 1660.91,685.89 1661.47,685.89 1662.03,685.89 1662.58,685.89 1663.14,685.89 1663.7,685.89 1664.26,685.89 1664.82,685.89 1665.38,685.89 1665.94,685.89 1666.5,685.89 1667.06,685.89 1667.62,685.89 1668.18,685.89 1668.74,685.89 1669.3,685.89 1669.85,685.89 1670.41,685.89 1670.97,685.89 1671.53,685.89 1672.09,685.89 1672.65,685.89 1673.21,685.89 1673.77,685.89 1674.33,685.89 1674.89,685.89 1675.45,685.89 1676.01,685.89 1676.57,685.89 1677.13,685.89 1677.68,685.89 1678.24,685.89 1678.8,685.89 1679.36,685.89 1679.92,685.89 1680.48,685.89 1681.04,685.89 1681.6,685.89 1682.16,685.89 1682.72,685.89 1683.28,685.89 1683.84,685.89 1684.4,685.89 1684.95,685.89 1685.51,685.89 1686.07,685.89 1686.63,685.89 1687.19,685.89 1687.75,685.89 1688.31,685.89 1688.87,685.89 1689.43,685.89 1689.99,685.89 1690.55,685.89 1691.11,685.89 1691.67,685.89 1692.23,685.89 1692.78,685.89 1693.34,685.89 1693.9,685.89 1694.46,685.89 1695.02,685.89 1695.58,685.89 1696.14,685.89 1696.7,685.89 1697.26,685.89 1697.82,685.89 1698.38,685.89 1698.94,685.89 1699.5,685.89 1700.05,685.89 1700.61,685.89 1701.17,685.89 1701.73,685.89 1702.29,685.89 1702.85,685.89 1703.41,685.89 1703.97,685.89 1704.53,685.89 1705.09,685.89 1705.65,685.89 1706.21,685.89 1706.77,685.89 1707.32,685.89 1707.88,685.89 1708.44,685.89 1709,685.89 1709.56,685.89 1710.12,685.89 1710.68,685.89 1711.24,685.89 1711.8,685.89 1712.36,685.89 1712.92,685.89 1713.48,685.89 1714.04,685.89 1714.6,685.89 1715.15,685.89 1715.71,685.89 1716.27,685.89 1716.83,685.89 1717.39,685.89 1717.95,685.89 1718.51,685.89 1719.07,685.89 1719.63,685.89 1720.19,685.89 1720.75,685.89 1721.31,685.89 1721.87,685.89 1722.42,685.89 1722.98,685.89 1723.54,685.89 1724.1,685.89 1724.66,685.89 1725.22,685.89 1725.78,685.89 1726.34,685.89 1726.9,685.89 1727.46,685.89 1728.02,685.89 1728.58,685.89 1729.14,685.89 1729.69,685.89 1730.25,685.89 1730.81,685.89 1731.37,685.89 1731.93,685.89 1732.49,685.89 1733.05,685.89 1733.61,685.89 1734.17,685.89 1734.73,685.89 1735.29,685.89 1735.85,685.89 1736.41,685.89 1736.97,685.89 1737.52,685.89 1738.08,685.89 1738.64,685.89 1739.2,685.89 1739.76,685.89 1740.32,685.89 1740.88,685.89 1741.44,685.89 1742,685.89 1742.56,685.89 1743.12,685.89 1743.68,685.89 1744.24,685.89 1744.79,685.89 1745.35,685.89 1745.91,685.89 1746.47,685.89 1747.03,685.89 1747.59,685.89 1748.15,685.89 1748.71,685.89 1749.27,685.89 1749.83,685.89 1750.39,685.89 1750.95,685.89 1751.51,685.89 1752.06,685.89 1752.62,685.89 1753.18,685.89 1753.74,685.89 1754.3,685.89 1754.86,685.89 1755.42,685.89 1755.98,685.89 1756.54,685.89 1757.1,685.89 1757.66,685.89 1758.22,685.89 1758.78,685.89 1759.34,685.89 1759.89,685.89 1760.45,685.89 1761.01,685.89 1761.57,685.89 1762.13,685.89 1762.69,685.89 1763.25,685.89 1763.81,685.89 1764.37,685.89 1764.93,685.89 1765.49,685.89 1766.05,685.89 1766.61,685.89 1767.16,685.89 1767.72,685.89 1768.28,685.89 1768.84,685.89 1769.4,685.89 1769.96,685.89 1770.52,685.89 1771.08,685.89 1771.64,685.89 1772.2,685.89 1772.76,685.89 1773.32,685.89 1773.88,685.89 1774.43,685.89 1774.99,685.89 1775.55,685.89 1776.11,685.89 1776.67,685.89 1777.23,685.89 1777.79,685.89 1778.35,685.89 1778.91,685.89 1779.47,685.89 1780.03,685.89 1780.59,685.89 1781.15,685.89 1781.71,685.89 1782.26,685.89 1782.82,685.89 1783.38,685.89 1783.94,685.89 1784.5,685.89 1785.06,685.89 1785.62,685.89 1786.18,685.89 1786.74,685.89 1787.3,685.89 1787.86,685.89 1788.42,685.89 1788.98,685.89 1789.53,685.89 1790.09,685.89 1790.65,685.89 1791.21,685.89 1791.77,685.89 1792.33,685.89 1792.89,685.89 1793.45,685.89 1794.01,685.89 1794.57,685.89 1795.13,685.89 1795.69,685.89 1796.25,685.89 1796.8,685.89 1797.36,685.89 1797.92,685.89 1798.48,685.89 1799.04,685.89 1799.6,685.89 1800.16,685.89 1800.72,685.89 1801.28,685.89 1801.84,685.89 1802.4,685.89 1802.96,685.89 1803.52,685.89 1804.08,685.89 1804.63,685.89 1805.19,685.89 1805.75,685.89 1806.31,685.89 1806.87,685.89 1807.43,685.89 1807.99,685.89 1808.55,685.89 1809.11,685.89 1809.67,685.89 1810.23,685.89 1810.79,685.89 1811.35,685.89 1811.9,685.89 1812.46,685.89 1813.02,685.89 1813.58,685.89 1814.14,685.89 1814.7,685.89 1815.26,685.89 1815.82,685.89 1816.38,685.89 1816.94,685.89 1817.5,685.89 1818.06,685.89 1818.62,685.89 1819.18,685.89 1819.73,685.89 1820.29,685.89 1820.85,685.89 1821.41,685.89 1821.97,685.89 1822.53,685.89 1823.09,685.89 1823.65,685.89 1824.21,685.89 1824.77,685.89 1825.33,685.89 1825.89,685.89 1826.45,685.89 1827,685.89 1827.56,685.89 1828.12,685.89 1828.68,685.89 1829.24,685.89 1829.8,685.89 1830.36,685.89 1830.92,685.89 1831.48,685.89 1832.04,685.89 1832.6,685.89 1833.16,685.89 1833.72,685.89 1834.27,685.89 1834.83,685.89 1835.39,685.89 1835.95,685.89 1836.51,685.89 1837.07,685.89 1837.63,685.89 1838.19,685.89 \"/>\n<path clip-path=\"url(#clip043)\" d=\"M720.247 685.356 L720.806 685.356 L721.365 685.356 L721.924 685.356 L722.484 685.356 L723.043 685.356 L723.602 685.356 L724.161 685.356 L724.721 685.356 L725.28 685.356 L725.839 685.356 L726.398 685.356 L726.958 685.356 L727.517 685.356 L728.076 685.356 L728.635 685.356 L729.195 685.356 L729.754 685.356 L730.313 685.356 L730.872 685.356 L731.432 685.356 L731.991 685.356 L732.55 685.356 L733.109 685.356 L733.669 685.356 L734.228 685.356 L734.787 685.356 L735.346 685.356 L735.906 685.356 L736.465 685.356 L737.024 685.356 L737.583 685.356 L738.143 685.356 L738.702 685.356 L739.261 685.356 L739.82 685.356 L740.38 685.356 L740.939 685.356 L741.498 685.356 L742.057 685.356 L742.617 685.356 L743.176 685.356 L743.735 685.356 L744.294 685.356 L744.854 685.356 L745.413 685.356 L745.972 685.356 L746.531 685.356 L747.091 685.356 L747.65 685.356 L748.209 685.356 L748.768 685.356 L749.328 685.356 L749.887 685.356 L750.446 685.356 L751.005 685.356 L751.565 685.356 L752.124 685.356 L752.683 685.356 L753.242 685.356 L753.802 685.356 L754.361 685.356 L754.92 685.356 L755.479 685.356 L756.039 685.356 L756.598 685.356 L757.157 685.356 L757.716 685.356 L758.276 685.356 L758.835 685.356 L759.394 685.356 L759.953 685.356 L760.513 685.356 L761.072 685.356 L761.631 685.356 L762.19 685.356 L762.75 685.356 L763.309 685.356 L763.868 685.356 L764.427 685.356 L764.987 685.356 L765.546 685.356 L766.105 685.356 L766.664 685.356 L767.224 685.356 L767.783 685.356 L768.342 685.356 L768.901 685.356 L769.461 685.356 L770.02 685.356 L770.579 685.356 L771.138 685.356 L771.698 685.356 L772.257 685.356 L772.816 685.356 L773.375 685.356 L773.935 685.356 L774.494 685.356 L775.053 685.356 L775.612 685.356 L776.172 685.356 L776.731 685.356 L777.29 685.356 L777.849 685.356 L778.409 685.356 L778.968 685.356 L779.527 685.356 L780.086 685.356 L780.646 685.356 L781.205 685.356 L781.764 685.356 L782.323 685.356 L782.883 685.356 L783.442 685.356 L784.001 685.356 L784.56 685.356 L785.12 685.356 L785.679 685.356 L786.238 685.356 L786.797 685.356 L787.357 685.356 L787.916 685.356 L788.475 685.356 L789.034 685.356 L789.594 685.356 L790.153 685.356 L790.712 685.356 L791.271 685.356 L791.831 685.356 L792.39 685.356 L792.949 685.356 L793.508 685.356 L794.068 685.356 L794.627 685.356 L795.186 685.356 L795.745 685.356 L796.305 685.356 L796.864 685.356 L797.423 685.356 L797.982 685.356 L798.542 685.356 L799.101 685.356 L799.66 685.356 L800.219 685.356 L800.779 685.356 L801.338 685.356 L801.897 685.356 L802.456 685.356 L803.016 685.356 L803.575 685.356 L804.134 685.356 L804.693 685.356 L805.253 685.356 L805.812 685.356 L806.371 685.356 L806.931 685.356 L807.49 685.356 L808.049 685.356 L808.608 685.356 L809.168 685.356 L809.727 685.356 L810.286 685.356 L810.845 685.356 L811.405 685.356 L811.964 685.356 L812.523 685.356 L813.082 685.356 L813.642 685.356 L814.201 685.356 L814.76 685.356 L815.319 685.356 L815.879 685.356 L816.438 685.356 L816.997 685.356 L817.556 685.356 L818.116 685.356 L818.675 685.356 L819.234 685.356 L819.793 685.356 L820.353 685.356 L820.912 685.356 L821.471 685.356 L822.03 685.356 L822.59 685.356 L823.149 685.356 L823.708 685.356 L824.267 685.356 L824.827 685.356 L825.386 685.356 L825.945 685.356 L826.504 685.356 L827.064 685.356 L827.623 685.356 L828.182 685.356 L828.741 685.356 L829.301 685.356 L829.86 685.356 L830.419 685.356 L830.978 685.356 L831.538 685.356 L832.097 685.356 L832.656 685.356 L833.215 685.356 L833.775 685.356 L834.334 685.356 L834.893 685.356 L835.452 685.356 L836.012 685.356 L836.571 685.356 L837.13 685.356 L837.689 685.356 L838.249 685.356 L838.808 685.356 L839.367 685.356 L839.926 685.356 L840.486 685.356 L841.045 685.356 L841.604 685.356 L842.163 685.356 L842.723 685.356 L843.282 685.356 L843.841 685.356 L844.4 685.356 L844.96 685.356 L845.519 685.356 L846.078 685.356 L846.637 685.356 L847.197 685.356 L847.756 685.356 L848.315 685.356 L848.874 685.356 L849.434 685.356 L849.993 685.356 L850.552 685.356 L851.111 685.356 L851.671 685.356 L852.23 685.356 L852.789 685.356 L853.348 685.356 L853.908 685.356 L854.467 685.356 L855.026 685.356 L855.585 685.356 L856.145 685.356 L856.704 685.356 L857.263 685.356 L857.822 685.356 L858.382 685.356 L858.941 685.356 L859.5 685.356 L860.059 685.356 L860.619 685.356 L861.178 685.356 L861.737 685.356 L862.296 685.356 L862.856 685.356 L863.415 685.356 L863.974 685.356 L864.533 685.356 L865.093 685.356 L865.652 685.356 L866.211 685.356 L866.77 685.356 L867.33 685.356 L867.889 685.356 L868.448 685.356 L869.007 685.356 L869.567 685.356 L870.126 685.356 L870.685 685.356 L871.244 685.356 L871.804 685.356 L872.363 685.356 L872.922 685.356 L873.481 685.356 L874.041 685.356 L874.6 685.356 L875.159 685.356 L875.718 685.356 L876.278 685.356 L876.837 685.356 L877.396 685.356 L877.955 685.356 L878.515 685.356 L879.074 685.356 L879.633 685.356 L880.192 685.356 L880.752 685.356 L881.311 685.356 L881.87 685.356 L882.429 685.356 L882.989 685.356 L883.548 685.356 L884.107 685.356 L884.666 685.356 L885.226 685.356 L885.785 685.356 L886.344 685.356 L886.903 685.356 L887.463 685.356 L888.022 685.356 L888.581 685.356 L889.14 685.356 L889.7 685.356 L890.259 685.356 L890.818 685.356 L891.377 685.356 L891.937 685.356 L892.496 685.356 L893.055 685.356 L893.614 685.356 L894.174 685.356 L894.733 685.356 L895.292 685.356 L895.851 685.356 L896.411 685.356 L896.97 685.356 L897.529 685.356 L898.088 685.356 L898.648 685.356 L899.207 685.356 L899.766 685.356 L900.325 685.356 L900.885 685.356 L901.444 685.356 L902.003 685.356 L902.562 685.356 L903.122 685.356 L903.681 685.356 L904.24 685.356 L904.799 685.356 L905.359 685.356 L905.918 685.356 L906.477 685.356 L907.036 685.356 L907.596 685.356 L908.155 685.356 L908.714 685.356 L909.273 685.356 L909.833 685.356 L910.392 685.356 L910.951 685.356 L911.51 685.356 L912.07 685.356 L912.629 685.356 L913.188 685.356 L913.747 685.356 L914.307 685.356 L914.866 685.356 L915.425 685.356 L915.984 685.356 L916.544 685.356 L917.103 685.356 L917.662 685.356 L918.221 685.356 L918.781 685.356 L919.34 685.356 L919.899 685.356 L920.458 685.356 L921.018 685.356 L921.577 685.356 L922.136 685.356 L922.695 685.356 L923.255 685.356 L923.814 685.356 L924.373 685.356 L924.932 685.356 L925.492 685.356 L926.051 685.356 L926.61 685.356 L927.169 685.356 L927.729 685.356 L928.288 685.356 L928.847 685.356 L929.406 685.356 L929.966 685.356 L930.525 685.356 L931.084 685.356 L931.644 685.356 L932.203 685.356 L932.762 685.356 L933.321 685.356 L933.881 685.356 L934.44 685.356 L934.999 685.356 L935.558 685.356 L936.118 685.356 L936.677 685.356 L937.236 685.356 L937.795 685.356 L938.355 685.356 L938.914 685.356 L939.473 685.356 L940.032 685.356 L940.592 685.356 L941.151 685.356 L941.71 685.356 L942.269 685.356 L942.829 685.356 L943.388 685.356 L943.947 685.356 L944.506 685.356 L945.066 685.356 L945.625 685.356 L946.184 685.356 L946.743 685.356 L947.303 685.356 L947.862 685.356 L948.421 685.356 L948.98 685.356 L949.54 685.356 L950.099 685.356 L950.658 685.356 L951.217 685.356 L951.777 685.356 L952.336 685.356 L952.895 685.356 L953.454 685.356 L954.014 685.356 L954.573 685.356 L955.132 685.356 L955.691 685.356 L956.251 685.356 L956.81 685.356 L957.369 685.356 L957.928 685.356 L958.488 685.356 L959.047 685.356 L959.606 685.356 L960.165 685.356 L960.725 685.356 L961.284 685.356 L961.843 685.356 L962.402 685.356 L962.962 685.356 L963.521 685.356 L964.08 685.356 L964.639 685.356 L965.199 685.356 L965.758 685.356 L966.317 685.356 L966.876 685.356 L967.436 685.356 L967.995 685.356 L968.554 685.356 L969.113 685.356 L969.673 685.356 L970.232 685.356 L970.791 685.356 L971.35 685.356 L971.91 685.356 L972.469 685.356 L973.028 685.356 L973.587 685.356 L974.147 685.356 L974.706 685.356 L975.265 685.356 L975.824 685.356 L976.384 685.356 L976.943 685.356 L977.502 685.356 L978.061 685.356 L978.621 685.356 L979.18 685.356 L979.739 685.356 L980.298 685.356 L980.858 685.356 L981.417 685.356 L981.976 685.356 L982.535 685.356 L983.095 685.356 L983.654 685.356 L984.213 685.356 L984.772 685.356 L985.332 685.356 L985.891 685.356 L986.45 685.356 L987.009 685.356 L987.569 685.356 L988.128 685.356 L988.687 685.356 L989.246 685.356 L989.806 685.356 L990.365 685.356 L990.924 685.356 L991.483 685.356 L992.043 685.356 L992.602 685.356 L993.161 685.356 L993.72 685.356 L994.28 685.356 L994.839 685.356 L995.398 685.356 L995.957 685.356 L996.517 685.356 L997.076 685.356 L997.635 685.356 L998.194 685.356 L998.754 685.356 L999.313 685.356 L999.872 685.356 L1000.43 685.356 L1000.99 685.356 L1001.55 685.356 L1002.11 685.356 L1002.67 685.356 L1003.23 685.356 L1003.79 685.356 L1004.35 685.356 L1004.91 685.356 L1005.46 685.356 L1006.02 685.356 L1006.58 685.356 L1007.14 685.356 L1007.7 685.356 L1008.26 685.356 L1008.82 685.356 L1009.38 685.356 L1009.94 685.356 L1010.5 685.356 L1011.06 685.356 L1011.62 685.356 L1012.18 685.356 L1012.73 685.356 L1013.29 685.356 L1013.85 685.356 L1014.41 685.356 L1014.97 685.356 L1015.53 685.356 L1016.09 685.356 L1016.65 685.356 L1017.21 685.356 L1017.77 685.356 L1018.33 685.356 L1018.89 685.356 L1019.45 685.356 L1020.01 685.356 L1020.56 685.356 L1021.12 685.356 L1021.68 685.356 L1022.24 685.356 L1022.8 685.356 L1023.36 685.356 L1023.92 685.356 L1024.48 685.356 L1025.04 685.356 L1025.6 685.356 L1026.16 685.356 L1026.72 685.356 L1027.28 685.356 L1027.83 685.356 L1028.39 685.356 L1028.95 685.356 L1029.51 685.356 L1030.07 685.356 L1030.63 685.356 L1031.19 685.356 L1031.75 685.356 L1032.31 685.356 L1032.87 685.356 L1033.43 685.356 L1033.99 685.356 L1034.55 685.356 L1035.1 685.356 L1035.66 685.356 L1036.22 685.356 L1036.78 685.356 L1037.34 685.356 L1037.9 685.356 L1038.46 685.356 L1039.02 685.356 L1039.58 685.356 L1040.14 685.356 L1040.7 685.356 L1041.26 685.356 L1041.82 685.356 L1042.38 685.356 L1042.93 685.356 L1043.49 685.356 L1044.05 685.356 L1044.61 685.356 L1045.17 685.356 L1045.73 685.356 L1046.29 685.356 L1046.85 685.356 L1047.41 685.356 L1047.97 685.356 L1048.53 685.356 L1049.09 685.356 L1049.65 685.356 L1050.2 685.356 L1050.76 685.356 L1051.32 685.356 L1051.88 685.356 L1052.44 685.356 L1053 685.356 L1053.56 685.356 L1054.12 685.356 L1054.68 685.356 L1055.24 685.356 L1055.8 685.356 L1056.36 685.356 L1056.92 685.356 L1057.48 685.356 L1058.03 685.356 L1058.59 685.356 L1059.15 685.356 L1059.71 685.356 L1060.27 685.356 L1060.83 685.356 L1061.39 685.356 L1061.95 685.356 L1062.51 685.356 L1063.07 685.356 L1063.63 685.356 L1064.19 685.356 L1064.75 685.356 L1065.3 685.356 L1065.86 685.356 L1066.42 685.356 L1066.98 685.356 L1067.54 685.356 L1068.1 685.356 L1068.66 685.356 L1069.22 685.356 L1069.78 685.356 L1070.34 685.356 L1070.9 685.356 L1071.46 685.356 L1072.02 685.356 L1072.57 685.356 L1073.13 685.356 L1073.69 685.356 L1074.25 685.356 L1074.81 685.356 L1075.37 685.356 L1075.93 685.356 L1076.49 685.356 L1077.05 685.356 L1077.61 685.356 L1078.17 685.356 L1078.73 685.356 L1079.29 685.356 L1079.85 685.356 L1080.4 685.356 L1080.96 685.356 L1081.52 685.356 L1082.08 685.356 L1082.64 685.356 L1083.2 685.356 L1083.76 685.356 L1084.32 685.356 L1084.88 685.356 L1085.44 685.356 L1086 685.356 L1086.56 685.356 L1087.12 685.356 L1087.67 685.356 L1088.23 685.356 L1088.79 685.356 L1089.35 685.356 L1089.91 685.356 L1090.47 685.356 L1091.03 685.356 L1091.59 685.356 L1092.15 685.356 L1092.71 685.356 L1093.27 685.356 L1093.83 685.356 L1094.39 685.356 L1094.94 685.356 L1095.5 685.356 L1096.06 685.356 L1096.62 685.356 L1097.18 685.356 L1097.74 685.356 L1098.3 685.356 L1098.86 685.356 L1099.42 685.356 L1099.98 685.356 L1100.54 685.356 L1101.1 685.356 L1101.66 685.356 L1102.22 685.356 L1102.77 685.356 L1103.33 685.356 L1103.89 685.356 L1104.45 685.356 L1105.01 685.356 L1105.57 685.356 L1106.13 685.356 L1106.69 685.356 L1107.25 685.356 L1107.81 685.356 L1108.37 685.356 L1108.93 685.356 L1109.49 685.356 L1110.04 685.356 L1110.6 685.356 L1111.16 685.356 L1111.72 685.356 L1112.28 685.356 L1112.84 685.356 L1113.4 685.356 L1113.96 685.356 L1114.52 685.356 L1115.08 685.356 L1115.64 685.356 L1116.2 685.356 L1116.76 685.356 L1117.31 685.356 L1117.87 685.356 L1118.43 685.356 L1118.99 685.356 L1119.55 685.356 L1120.11 685.356 L1120.67 685.356 L1121.23 685.356 L1121.79 685.356 L1122.35 685.356 L1122.91 685.356 L1123.47 685.356 L1124.03 685.356 L1124.59 685.356 L1125.14 685.356 L1125.7 685.356 L1126.26 685.356 L1126.82 685.356 L1127.38 685.356 L1127.94 685.356 L1128.5 685.356 L1129.06 685.356 L1129.62 685.356 L1130.18 685.356 L1130.74 685.356 L1131.3 685.356 L1131.86 685.356 L1132.41 685.356 L1132.97 685.356 L1133.53 685.356 L1134.09 685.356 L1134.65 685.356 L1135.21 685.356 L1135.77 685.356 L1136.33 685.356 L1136.89 685.356 L1137.45 685.356 L1138.01 685.356 L1138.57 685.356 L1139.13 685.356 L1139.68 685.356 L1140.24 685.356 L1140.8 685.356 L1141.36 685.356 L1141.92 685.356 L1142.48 685.356 L1143.04 685.356 L1143.6 685.356 L1144.16 685.356 L1144.72 685.356 L1145.28 685.356 L1145.84 685.356 L1146.4 685.356 L1146.96 685.356 L1147.51 685.356 L1148.07 685.356 L1148.63 685.356 L1149.19 685.356 L1149.75 685.356 L1150.31 685.356 L1150.87 685.356 L1151.43 685.356 L1151.99 685.356 L1152.55 685.356 L1153.11 685.356 L1153.67 685.356 L1154.23 685.356 L1154.78 685.356 L1155.34 685.356 L1155.9 685.356 L1156.46 685.356 L1157.02 685.356 L1157.58 685.356 L1158.14 685.356 L1158.7 685.356 L1159.26 685.356 L1159.82 685.356 L1160.38 685.356 L1160.94 685.356 L1161.5 685.356 L1162.05 685.356 L1162.61 685.356 L1163.17 685.356 L1163.73 685.356 L1164.29 685.356 L1164.85 685.356 L1165.41 685.356 L1165.97 685.356 L1166.53 685.356 L1167.09 685.356 L1167.65 685.356 L1168.21 685.356 L1168.77 685.356 L1169.33 685.356 L1169.88 685.356 L1170.44 685.356 L1171 685.356 L1171.56 685.356 L1172.12 685.356 L1172.68 685.356 L1173.24 685.356 L1173.8 685.356 L1174.36 685.356 L1174.92 685.356 L1175.48 685.356 L1176.04 685.356 L1176.6 685.356 L1177.15 685.356 L1177.71 685.356 L1178.27 685.356 L1178.83 685.356 L1179.39 685.356 L1179.95 685.356 L1180.51 685.356 L1181.07 685.356 L1181.63 685.356 L1182.19 685.356 L1182.75 685.356 L1183.31 685.356 L1183.87 685.356 L1184.43 685.356 L1184.98 685.356 L1185.54 685.356 L1186.1 685.356 L1186.66 685.356 L1187.22 685.356 L1187.78 685.356 L1188.34 685.356 L1188.9 685.356 L1189.46 685.356 L1190.02 685.356 L1190.58 685.356 L1191.14 685.356 L1191.7 685.356 L1192.25 685.356 L1192.81 685.356 L1193.37 685.356 L1193.93 685.356 L1194.49 685.356 L1195.05 685.356 L1195.61 685.356 L1196.17 685.356 L1196.73 685.356 L1197.29 685.356 L1197.85 685.356 L1198.41 685.356 L1198.97 685.356 L1199.52 685.356 L1200.08 685.356 L1200.64 685.356 L1201.2 685.356 L1201.76 685.356 L1202.32 685.356 L1202.88 685.356 L1203.44 685.356 L1204 685.356 L1204.56 685.356 L1205.12 685.356 L1205.68 685.356 L1206.24 685.356 L1206.8 685.356 L1207.35 685.356 L1207.91 685.356 L1208.47 685.356 L1209.03 685.356 L1209.59 685.356 L1210.15 685.356 L1210.71 685.356 L1211.27 685.356 L1211.83 685.356 L1212.39 685.356 L1212.95 685.356 L1213.51 685.356 L1214.07 685.356 L1214.62 685.356 L1215.18 685.356 L1215.74 685.356 L1216.3 685.356 L1216.86 685.356 L1217.42 685.356 L1217.98 685.356 L1218.54 685.356 L1219.1 685.356 L1219.66 685.356 L1220.22 685.356 L1220.78 685.356 L1221.34 685.356 L1221.89 685.356 L1222.45 685.356 L1223.01 685.356 L1223.57 685.356 L1224.13 685.356 L1224.69 685.356 L1225.25 685.356 L1225.81 685.356 L1226.37 685.356 L1226.93 685.356 L1227.49 685.356 L1228.05 685.356 L1228.61 685.356 L1229.17 685.356 L1229.72 685.356 L1230.28 685.356 L1230.84 685.356 L1231.4 685.356 L1231.96 685.356 L1232.52 685.356 L1233.08 685.356 L1233.64 685.356 L1234.2 685.356 L1234.76 685.356 L1235.32 685.356 L1235.88 685.356 L1236.44 685.356 L1236.99 685.356 L1237.55 685.356 L1238.11 685.356 L1238.67 685.356 L1239.23 685.356 L1239.79 685.356 L1240.35 685.356 L1240.91 685.356 L1241.47 685.356 L1242.03 685.356 L1242.59 685.356 L1243.15 685.356 L1243.71 685.356 L1244.26 685.356 L1244.82 685.356 L1245.38 685.356 L1245.94 685.356 L1246.5 685.356 L1247.06 685.356 L1247.62 685.356 L1248.18 685.356 L1248.74 685.356 L1249.3 685.356 L1249.86 685.356 L1250.42 685.356 L1250.98 685.356 L1251.54 685.356 L1252.09 685.356 L1252.65 685.356 L1253.21 685.356 L1253.77 685.356 L1254.33 685.356 L1254.89 685.356 L1255.45 685.356 L1256.01 685.356 L1256.57 685.356 L1257.13 685.356 L1257.69 685.356 L1258.25 685.356 L1258.81 685.356 L1259.36 685.356 L1259.92 685.356 L1260.48 685.356 L1261.04 685.356 L1261.6 685.356 L1262.16 685.356 L1262.72 685.356 L1263.28 685.356 L1263.84 685.356 L1264.4 685.356 L1264.96 685.356 L1265.52 685.356 L1266.08 685.356 L1266.63 685.356 L1267.19 685.356 L1267.75 685.356 L1268.31 685.356 L1268.87 685.356 L1269.43 685.356 L1269.99 685.356 L1270.55 685.356 L1271.11 685.356 L1271.67 685.356 L1272.23 685.356 L1272.79 685.356 L1273.35 685.356 L1273.91 685.356 L1274.46 685.356 L1275.02 685.356 L1275.58 685.356 L1276.14 685.356 L1276.7 685.356 L1277.26 685.356 L1277.82 685.356 L1278.38 685.356 L1278.94 685.356 L1279.5 685.356 L1280.06 685.356 L1280.62 685.356 L1281.18 685.356 L1281.73 685.356 L1282.29 685.356 L1282.85 685.356 L1283.41 685.356 L1283.97 685.356 L1284.53 685.356 L1285.09 685.356 L1285.65 685.356 L1286.21 685.356 L1286.77 685.356 L1287.33 685.356 L1287.89 685.356 L1288.45 685.356 L1289 685.356 L1289.56 685.356 L1290.12 685.356 L1290.68 685.356 L1291.24 685.356 L1291.8 685.356 L1292.36 685.356 L1292.92 685.356 L1293.48 685.356 L1294.04 685.356 L1294.6 685.356 L1295.16 685.356 L1295.72 685.356 L1296.28 685.356 L1296.83 685.356 L1297.39 685.356 L1297.95 685.356 L1298.51 685.356 L1299.07 685.356 L1299.63 685.356 L1300.19 685.356 L1300.75 685.356 L1301.31 685.356 L1301.87 685.356 L1302.43 685.356 L1302.99 685.356 L1303.55 685.356 L1304.1 685.356 L1304.66 685.356 L1305.22 685.356 L1305.78 685.356 L1306.34 685.356 L1306.9 685.356 L1307.46 685.356 L1308.02 685.356 L1308.58 685.356 L1309.14 685.356 L1309.7 685.356 L1310.26 685.356 L1310.82 685.356 L1311.38 685.356 L1311.93 685.356 L1312.49 685.356 L1313.05 685.356 L1313.61 685.356 L1314.17 685.356 L1314.73 685.356 L1315.29 685.356 L1315.85 685.356 L1316.41 685.356 L1316.97 685.356 L1317.53 685.356 L1318.09 685.356 L1318.65 685.356 L1319.2 685.356 L1319.76 685.356 L1320.32 685.356 L1320.88 685.356 L1321.44 685.356 L1322 685.356 L1322.56 685.356 L1323.12 685.356 L1323.68 685.356 L1324.24 685.356 L1324.8 685.356 L1325.36 685.356 L1325.92 685.356 L1326.47 685.356 L1327.03 685.356 L1327.59 685.356 L1328.15 685.356 L1328.71 685.356 L1329.27 685.356 L1329.83 685.356 L1330.39 685.356 L1330.95 685.356 L1331.51 685.356 L1332.07 685.356 L1332.63 685.356 L1333.19 685.356 L1333.75 685.356 L1334.3 685.356 L1334.86 685.356 L1335.42 685.356 L1335.98 685.356 L1336.54 685.356 L1337.1 685.356 L1337.66 685.356 L1338.22 685.356 L1338.78 685.356 L1339.34 685.356 L1339.9 685.356 L1340.46 685.356 L1341.02 685.356 L1341.57 685.356 L1342.13 685.356 L1342.69 685.356 L1343.25 685.356 L1343.81 685.356 L1344.37 685.356 L1344.93 685.356 L1345.49 685.356 L1346.05 685.356 L1346.61 685.356 L1347.17 685.356 L1347.73 685.356 L1348.29 685.356 L1348.84 685.356 L1349.4 685.356 L1349.96 685.356 L1350.52 685.356 L1351.08 685.356 L1351.64 685.356 L1352.2 685.356 L1352.76 685.356 L1353.32 685.356 L1353.88 685.356 L1354.44 685.356 L1355 685.356 L1355.56 685.356 L1356.12 685.356 L1356.67 685.356 L1357.23 685.356 L1357.79 685.356 L1358.35 685.356 L1358.91 685.356 L1359.47 685.356 L1360.03 685.356 L1360.59 685.356 L1361.15 685.356 L1361.71 685.356 L1362.27 685.356 L1362.83 685.356 L1363.39 685.356 L1363.94 685.356 L1364.5 685.356 L1365.06 685.356 L1365.62 685.356 L1366.18 685.356 L1366.74 685.356 L1367.3 685.356 L1367.86 685.356 L1368.42 685.356 L1368.98 685.356 L1369.54 685.356 L1370.1 685.356 L1370.66 685.356 L1371.21 685.356 L1371.77 685.356 L1372.33 685.356 L1372.89 685.356 L1373.45 685.356 L1374.01 685.356 L1374.57 685.356 L1375.13 685.356 L1375.69 685.356 L1376.25 685.356 L1376.81 685.356 L1377.37 685.356 L1377.93 685.356 L1378.49 685.356 L1379.04 685.356 L1379.6 685.356 L1380.16 685.356 L1380.72 685.356 L1381.28 685.356 L1381.84 685.356 L1382.4 685.356 L1382.96 685.356 L1383.52 685.356 L1384.08 685.356 L1384.64 685.356 L1385.2 685.356 L1385.76 685.356 L1386.31 685.356 L1386.87 685.356 L1387.43 685.356 L1387.99 685.356 L1388.55 685.356 L1389.11 685.356 L1389.67 685.356 L1390.23 685.356 L1390.79 685.356 L1391.35 685.356 L1391.91 685.356 L1392.47 685.356 L1393.03 685.356 L1393.58 685.356 L1394.14 685.356 L1394.7 685.356 L1395.26 685.356 L1395.82 685.356 L1396.38 685.356 L1396.94 685.356 L1397.5 685.356 L1398.06 685.356 L1398.62 685.356 L1399.18 685.356 L1399.74 685.356 L1400.3 685.356 L1400.86 685.356 L1401.41 685.356 L1401.97 685.356 L1402.53 685.356 L1403.09 685.356 L1403.65 685.356 L1404.21 685.356 L1404.77 685.356 L1405.33 685.356 L1405.89 685.356 L1406.45 685.356 L1407.01 685.356 L1407.57 685.356 L1408.13 685.356 L1408.68 685.356 L1409.24 685.356 L1409.8 685.356 L1410.36 685.356 L1410.92 685.356 L1411.48 685.356 L1412.04 685.356 L1412.6 685.356 L1413.16 685.356 L1413.72 685.356 L1414.28 685.356 L1414.84 685.356 L1415.4 685.356 L1415.95 685.356 L1416.51 685.356 L1417.07 685.356 L1417.63 685.356 L1418.19 685.356 L1418.75 685.356 L1419.31 685.356 L1419.87 685.356 L1420.43 685.356 L1420.99 685.356 L1421.55 685.356 L1422.11 685.356 L1422.67 685.356 L1423.23 685.356 L1423.78 685.356 L1424.34 685.356 L1424.9 685.356 L1425.46 685.356 L1426.02 685.356 L1426.58 685.356 L1427.14 685.356 L1427.7 685.356 L1428.26 685.356 L1428.82 685.356 L1429.38 685.356 L1429.94 685.356 L1430.5 685.356 L1431.05 685.356 L1431.61 685.356 L1432.17 685.356 L1432.73 685.356 L1433.29 685.356 L1433.85 685.356 L1434.41 685.356 L1434.97 685.356 L1435.53 685.356 L1436.09 685.356 L1436.65 685.356 L1437.21 685.356 L1437.77 685.356 L1438.33 685.356 L1438.88 685.356 L1439.44 685.356 L1440 685.356 L1440.56 685.356 L1441.12 685.356 L1441.68 685.356 L1442.24 685.356 L1442.8 685.356 L1443.36 685.356 L1443.92 685.356 L1444.48 685.356 L1445.04 685.356 L1445.6 685.356 L1446.15 685.356 L1446.71 685.356 L1447.27 685.356 L1447.83 685.356 L1448.39 685.356 L1448.95 685.356 L1449.51 685.356 L1450.07 685.356 L1450.63 685.356 L1451.19 685.356 L1451.75 685.356 L1452.31 685.356 L1452.87 685.356 L1453.42 685.356 L1453.98 685.356 L1454.54 685.356 L1455.1 685.356 L1455.66 685.356 L1456.22 685.356 L1456.78 685.356 L1457.34 685.356 L1457.9 685.356 L1458.46 685.356 L1459.02 685.356 L1459.58 685.356 L1460.14 685.356 L1460.7 685.356 L1461.25 685.356 L1461.81 685.356 L1462.37 685.356 L1462.93 685.356 L1463.49 685.356 L1464.05 685.356 L1464.61 685.356 L1465.17 685.356 L1465.73 685.356 L1466.29 685.356 L1466.85 685.356 L1467.41 685.356 L1467.97 685.356 L1468.52 685.356 L1469.08 685.356 L1469.64 685.356 L1470.2 685.356 L1470.76 685.356 L1471.32 685.356 L1471.88 685.356 L1472.44 685.356 L1473 685.356 L1473.56 685.356 L1474.12 685.356 L1474.68 685.356 L1475.24 685.356 L1475.79 685.356 L1476.35 685.356 L1476.91 685.356 L1477.47 685.356 L1478.03 685.356 L1478.59 685.356 L1479.15 685.356 L1479.71 685.356 L1480.27 685.356 L1480.83 685.356 L1481.39 685.356 L1481.95 685.356 L1482.51 685.356 L1483.07 685.356 L1483.62 685.356 L1484.18 685.356 L1484.74 685.356 L1485.3 685.356 L1485.86 685.356 L1486.42 685.356 L1486.98 685.356 L1487.54 685.356 L1488.1 685.356 L1488.66 685.356 L1489.22 685.356 L1489.78 685.356 L1490.34 685.356 L1490.89 685.356 L1491.45 685.356 L1492.01 685.356 L1492.57 685.356 L1493.13 685.356 L1493.69 685.356 L1494.25 685.356 L1494.81 685.356 L1495.37 685.356 L1495.93 685.356 L1496.49 685.356 L1497.05 685.356 L1497.61 685.356 L1498.16 685.356 L1498.72 685.356 L1499.28 685.356 L1499.84 685.356 L1500.4 685.356 L1500.96 685.356 L1501.52 685.356 L1502.08 685.356 L1502.64 685.356 L1503.2 685.356 L1503.76 685.356 L1504.32 685.356 L1504.88 685.356 L1505.44 685.356 L1505.99 685.356 L1506.55 685.356 L1507.11 685.356 L1507.67 685.356 L1508.23 685.356 L1508.79 685.356 L1509.35 685.356 L1509.91 685.356 L1510.47 685.356 L1511.03 685.356 L1511.59 685.356 L1512.15 685.356 L1512.71 685.356 L1513.26 685.356 L1513.82 685.356 L1514.38 685.356 L1514.94 685.356 L1515.5 685.356 L1516.06 685.356 L1516.62 685.356 L1517.18 685.356 L1517.74 685.356 L1518.3 685.356 L1518.86 685.356 L1519.42 685.356 L1519.98 685.356 L1520.53 685.356 L1521.09 685.356 L1521.65 685.356 L1522.21 685.356 L1522.77 685.356 L1523.33 685.356 L1523.89 685.356 L1524.45 685.356 L1525.01 685.356 L1525.57 685.356 L1526.13 685.356 L1526.69 685.356 L1527.25 685.356 L1527.81 685.356 L1528.36 685.356 L1528.92 685.356 L1529.48 685.356 L1530.04 685.356 L1530.6 685.356 L1531.16 685.356 L1531.72 685.356 L1532.28 685.356 L1532.84 685.356 L1533.4 685.356 L1533.96 685.356 L1534.52 685.356 L1535.08 685.356 L1535.63 685.356 L1536.19 685.356 L1536.75 685.356 L1537.31 685.356 L1537.87 685.356 L1538.43 685.356 L1538.99 685.356 L1539.55 685.356 L1540.11 685.356 L1540.67 685.356 L1541.23 685.356 L1541.79 685.356 L1542.35 685.356 L1542.9 685.356 L1543.46 685.356 L1544.02 685.356 L1544.58 685.356 L1545.14 685.356 L1545.7 685.356 L1546.26 685.356 L1546.82 685.356 L1547.38 685.356 L1547.94 685.356 L1548.5 685.356 L1549.06 685.356 L1549.62 685.356 L1550.18 685.356 L1550.73 685.356 L1551.29 685.356 L1551.85 685.356 L1552.41 685.356 L1552.97 685.356 L1553.53 685.356 L1554.09 685.356 L1554.65 685.356 L1555.21 685.356 L1555.77 685.356 L1556.33 685.356 L1556.89 685.356 L1557.45 685.356 L1558 685.356 L1558.56 685.356 L1559.12 685.356 L1559.68 685.356 L1560.24 685.356 L1560.8 685.356 L1561.36 685.356 L1561.92 685.356 L1562.48 685.356 L1563.04 685.356 L1563.6 685.356 L1564.16 685.356 L1564.72 685.356 L1565.28 685.356 L1565.83 685.356 L1566.39 685.356 L1566.95 685.356 L1567.51 685.356 L1568.07 685.356 L1568.63 685.356 L1569.19 685.356 L1569.75 685.356 L1570.31 685.356 L1570.87 685.356 L1571.43 685.356 L1571.99 685.356 L1572.55 685.356 L1573.1 685.356 L1573.66 685.356 L1574.22 685.356 L1574.78 685.356 L1575.34 685.356 L1575.9 685.356 L1576.46 685.356 L1577.02 685.356 L1577.58 685.356 L1578.14 685.356 L1578.7 685.356 L1579.26 685.356 L1579.82 685.356 L1580.37 685.356 L1580.93 685.356 L1581.49 685.356 L1582.05 685.356 L1582.61 685.356 L1583.17 685.356 L1583.73 685.356 L1584.29 685.356 L1584.85 685.356 L1585.41 685.356 L1585.97 685.356 L1586.53 685.356 L1587.09 685.356 L1587.65 685.356 L1588.2 685.356 L1588.76 685.356 L1589.32 685.356 L1589.88 685.356 L1590.44 685.356 L1591 685.356 L1591.56 685.356 L1592.12 685.356 L1592.68 685.356 L1593.24 685.356 L1593.8 685.356 L1594.36 685.356 L1594.92 685.356 L1595.47 685.356 L1596.03 685.356 L1596.59 685.356 L1597.15 685.356 L1597.71 685.356 L1598.27 685.356 L1598.83 685.356 L1599.39 685.356 L1599.95 685.356 L1600.51 685.356 L1601.07 685.356 L1601.63 685.356 L1602.19 685.356 L1602.74 685.356 L1603.3 685.356 L1603.86 685.356 L1604.42 685.356 L1604.98 685.356 L1605.54 685.356 L1606.1 685.356 L1606.66 685.356 L1607.22 685.356 L1607.78 685.356 L1608.34 685.356 L1608.9 685.356 L1609.46 685.356 L1610.02 685.356 L1610.57 685.356 L1611.13 685.356 L1611.69 685.356 L1612.25 685.356 L1612.81 685.356 L1613.37 685.356 L1613.93 685.356 L1614.49 685.356 L1615.05 685.356 L1615.61 685.356 L1616.17 685.356 L1616.73 685.356 L1617.29 685.356 L1617.84 685.356 L1618.4 685.356 L1618.96 685.356 L1619.52 685.356 L1620.08 685.356 L1620.64 685.356 L1621.2 685.356 L1621.76 685.356 L1622.32 685.356 L1622.88 685.356 L1623.44 685.356 L1624 685.356 L1624.56 685.356 L1625.11 685.356 L1625.67 685.356 L1626.23 685.356 L1626.79 685.356 L1627.35 685.356 L1627.91 685.356 L1628.47 685.356 L1629.03 685.356 L1629.59 685.356 L1630.15 685.356 L1630.71 685.356 L1631.27 685.356 L1631.83 685.356 L1632.39 685.356 L1632.94 685.356 L1633.5 685.356 L1634.06 685.356 L1634.62 685.356 L1635.18 685.356 L1635.74 685.356 L1636.3 685.356 L1636.86 685.356 L1637.42 685.356 L1637.98 685.356 L1638.54 685.356 L1639.1 685.356 L1639.66 685.356 L1640.21 685.356 L1640.77 685.356 L1641.33 685.356 L1641.89 685.356 L1642.45 685.356 L1643.01 685.356 L1643.57 685.356 L1644.13 685.356 L1644.69 685.356 L1645.25 685.356 L1645.81 685.356 L1646.37 685.356 L1646.93 685.356 L1647.48 685.356 L1648.04 685.356 L1648.6 685.356 L1649.16 685.356 L1649.72 685.356 L1650.28 685.356 L1650.84 685.356 L1651.4 685.356 L1651.96 685.356 L1652.52 685.356 L1653.08 685.356 L1653.64 685.356 L1654.2 685.356 L1654.76 685.356 L1655.31 685.356 L1655.87 685.356 L1656.43 685.356 L1656.99 685.356 L1657.55 685.356 L1658.11 685.356 L1658.67 685.356 L1659.23 685.356 L1659.79 685.356 L1660.35 685.356 L1660.91 685.356 L1661.47 685.356 L1662.03 685.356 L1662.58 685.356 L1663.14 685.356 L1663.7 685.356 L1664.26 685.356 L1664.82 685.356 L1665.38 685.356 L1665.94 685.356 L1666.5 685.356 L1667.06 685.356 L1667.62 685.356 L1668.18 685.356 L1668.74 685.356 L1669.3 685.356 L1669.85 685.356 L1670.41 685.356 L1670.97 685.356 L1671.53 685.356 L1672.09 685.356 L1672.65 685.356 L1673.21 685.356 L1673.77 685.356 L1674.33 685.356 L1674.89 685.356 L1675.45 685.356 L1676.01 685.356 L1676.57 685.356 L1677.13 685.356 L1677.68 685.356 L1678.24 685.356 L1678.8 685.356 L1679.36 685.356 L1679.92 685.356 L1680.48 685.356 L1681.04 685.356 L1681.6 685.356 L1682.16 685.356 L1682.72 685.356 L1683.28 685.356 L1683.84 685.356 L1684.4 685.356 L1684.95 685.356 L1685.51 685.356 L1686.07 685.356 L1686.63 685.356 L1687.19 685.356 L1687.75 685.356 L1688.31 685.356 L1688.87 685.356 L1689.43 685.356 L1689.99 685.356 L1690.55 685.356 L1691.11 685.356 L1691.67 685.356 L1692.23 685.356 L1692.78 685.356 L1693.34 685.356 L1693.9 685.356 L1694.46 685.356 L1695.02 685.356 L1695.58 685.356 L1696.14 685.356 L1696.7 685.356 L1697.26 685.356 L1697.82 685.356 L1698.38 685.356 L1698.94 685.356 L1699.5 685.356 L1700.05 685.356 L1700.61 685.356 L1701.17 685.356 L1701.73 685.356 L1702.29 685.356 L1702.85 685.356 L1703.41 685.356 L1703.97 685.356 L1704.53 685.356 L1705.09 685.356 L1705.65 685.356 L1706.21 685.356 L1706.77 685.356 L1707.32 685.356 L1707.88 685.356 L1708.44 685.356 L1709 685.356 L1709.56 685.356 L1710.12 685.356 L1710.68 685.356 L1711.24 685.356 L1711.8 685.356 L1712.36 685.356 L1712.92 685.356 L1713.48 685.356 L1714.04 685.356 L1714.6 685.356 L1715.15 685.356 L1715.71 685.356 L1716.27 685.356 L1716.83 685.356 L1717.39 685.356 L1717.95 685.356 L1718.51 685.356 L1719.07 685.356 L1719.63 685.356 L1720.19 685.356 L1720.75 685.356 L1721.31 685.356 L1721.87 685.356 L1722.42 685.356 L1722.98 685.356 L1723.54 685.356 L1724.1 685.356 L1724.66 685.356 L1725.22 685.356 L1725.78 685.356 L1726.34 685.356 L1726.9 685.356 L1727.46 685.356 L1728.02 685.356 L1728.58 685.356 L1729.14 685.356 L1729.69 685.356 L1730.25 685.356 L1730.81 685.356 L1731.37 685.356 L1731.93 685.356 L1732.49 685.356 L1733.05 685.356 L1733.61 685.356 L1734.17 685.356 L1734.73 685.356 L1735.29 685.356 L1735.85 685.356 L1736.41 685.356 L1736.97 685.356 L1737.52 685.356 L1738.08 685.356 L1738.64 685.356 L1739.2 685.356 L1739.76 685.356 L1740.32 685.356 L1740.88 685.356 L1741.44 685.356 L1742 685.356 L1742.56 685.356 L1743.12 685.356 L1743.68 685.356 L1744.24 685.356 L1744.79 685.356 L1745.35 685.356 L1745.91 685.356 L1746.47 685.356 L1747.03 685.356 L1747.59 685.356 L1748.15 685.356 L1748.71 685.356 L1749.27 685.356 L1749.83 685.356 L1750.39 685.356 L1750.95 685.356 L1751.51 685.356 L1752.06 685.356 L1752.62 685.356 L1753.18 685.356 L1753.74 685.356 L1754.3 685.356 L1754.86 685.356 L1755.42 685.356 L1755.98 685.356 L1756.54 685.356 L1757.1 685.356 L1757.66 685.356 L1758.22 685.356 L1758.78 685.356 L1759.34 685.356 L1759.89 685.356 L1760.45 685.356 L1761.01 685.356 L1761.57 685.356 L1762.13 685.356 L1762.69 685.356 L1763.25 685.356 L1763.81 685.356 L1764.37 685.356 L1764.93 685.356 L1765.49 685.356 L1766.05 685.356 L1766.61 685.356 L1767.16 685.356 L1767.72 685.356 L1768.28 685.356 L1768.84 685.356 L1769.4 685.356 L1769.96 685.356 L1770.52 685.356 L1771.08 685.356 L1771.64 685.356 L1772.2 685.356 L1772.76 685.356 L1773.32 685.356 L1773.88 685.356 L1774.43 685.356 L1774.99 685.356 L1775.55 685.356 L1776.11 685.356 L1776.67 685.356 L1777.23 685.356 L1777.79 685.356 L1778.35 685.356 L1778.91 685.356 L1779.47 685.356 L1780.03 685.356 L1780.59 685.356 L1781.15 685.356 L1781.71 685.356 L1782.26 685.356 L1782.82 685.356 L1783.38 685.356 L1783.94 685.356 L1784.5 685.356 L1785.06 685.356 L1785.62 685.356 L1786.18 685.356 L1786.74 685.356 L1787.3 685.356 L1787.86 685.356 L1788.42 685.356 L1788.98 685.356 L1789.53 685.356 L1790.09 685.356 L1790.65 685.356 L1791.21 685.356 L1791.77 685.356 L1792.33 685.356 L1792.89 685.356 L1793.45 685.356 L1794.01 685.356 L1794.57 685.356 L1795.13 685.356 L1795.69 685.356 L1796.25 685.356 L1796.8 685.356 L1797.36 685.356 L1797.92 685.356 L1798.48 685.356 L1799.04 685.356 L1799.6 685.356 L1800.16 685.356 L1800.72 685.356 L1801.28 685.356 L1801.84 685.356 L1802.4 685.356 L1802.96 685.356 L1803.52 685.356 L1804.08 685.356 L1804.63 685.356 L1805.19 685.356 L1805.75 685.356 L1806.31 685.356 L1806.87 685.356 L1807.43 685.356 L1807.99 685.356 L1808.55 685.356 L1809.11 685.356 L1809.67 685.356 L1810.23 685.356 L1810.79 685.356 L1811.35 685.356 L1811.9 685.356 L1812.46 685.356 L1813.02 685.356 L1813.58 685.356 L1814.14 685.356 L1814.7 685.356 L1815.26 685.356 L1815.82 685.356 L1816.38 685.356 L1816.94 685.356 L1817.5 685.356 L1818.06 685.356 L1818.62 685.356 L1819.18 685.356 L1819.73 685.356 L1820.29 685.356 L1820.85 685.356 L1821.41 685.356 L1821.97 685.356 L1822.53 685.356 L1823.09 685.356 L1823.65 685.356 L1824.21 685.356 L1824.77 685.356 L1825.33 685.356 L1825.89 685.356 L1826.45 685.356 L1827 685.356 L1827.56 685.356 L1828.12 685.356 L1828.68 685.356 L1829.24 685.356 L1829.8 685.356 L1830.36 685.356 L1830.92 685.356 L1831.48 685.356 L1832.04 685.356 L1832.6 685.356 L1833.16 685.356 L1833.72 685.356 L1834.27 685.356 L1834.83 685.356 L1835.39 685.356 L1835.95 685.356 L1836.51 685.356 L1837.07 685.356 L1837.63 685.356 L1838.19 685.356 L1838.19 682.452 L1837.63 682.452 L1837.07 682.452 L1836.51 682.452 L1835.95 682.452 L1835.39 682.452 L1834.83 682.452 L1834.27 682.452 L1833.72 682.452 L1833.16 682.452 L1832.6 682.452 L1832.04 682.452 L1831.48 682.452 L1830.92 682.452 L1830.36 682.452 L1829.8 682.452 L1829.24 682.452 L1828.68 682.452 L1828.12 682.452 L1827.56 682.452 L1827 682.452 L1826.45 682.452 L1825.89 682.452 L1825.33 682.452 L1824.77 682.452 L1824.21 682.452 L1823.65 682.452 L1823.09 682.452 L1822.53 682.452 L1821.97 682.452 L1821.41 682.452 L1820.85 682.452 L1820.29 682.452 L1819.73 682.452 L1819.18 682.452 L1818.62 682.452 L1818.06 682.452 L1817.5 682.452 L1816.94 682.452 L1816.38 682.452 L1815.82 682.452 L1815.26 682.452 L1814.7 682.452 L1814.14 682.452 L1813.58 682.452 L1813.02 682.452 L1812.46 682.452 L1811.9 682.452 L1811.35 682.452 L1810.79 682.452 L1810.23 682.452 L1809.67 682.452 L1809.11 682.452 L1808.55 682.452 L1807.99 682.452 L1807.43 682.452 L1806.87 682.452 L1806.31 682.452 L1805.75 682.452 L1805.19 682.452 L1804.63 682.452 L1804.08 682.452 L1803.52 682.452 L1802.96 682.452 L1802.4 682.452 L1801.84 682.452 L1801.28 682.452 L1800.72 682.452 L1800.16 682.452 L1799.6 682.452 L1799.04 682.452 L1798.48 682.452 L1797.92 682.452 L1797.36 682.452 L1796.8 682.452 L1796.25 682.452 L1795.69 682.452 L1795.13 682.452 L1794.57 682.452 L1794.01 682.452 L1793.45 682.452 L1792.89 682.452 L1792.33 682.452 L1791.77 682.452 L1791.21 682.452 L1790.65 682.452 L1790.09 682.452 L1789.53 682.452 L1788.98 682.452 L1788.42 682.452 L1787.86 682.452 L1787.3 682.452 L1786.74 682.452 L1786.18 682.452 L1785.62 682.452 L1785.06 682.452 L1784.5 682.452 L1783.94 682.452 L1783.38 682.452 L1782.82 682.452 L1782.26 682.452 L1781.71 682.452 L1781.15 682.452 L1780.59 682.452 L1780.03 682.452 L1779.47 682.452 L1778.91 682.452 L1778.35 682.452 L1777.79 682.452 L1777.23 682.452 L1776.67 682.452 L1776.11 682.452 L1775.55 682.452 L1774.99 682.452 L1774.43 682.452 L1773.88 682.452 L1773.32 682.452 L1772.76 682.452 L1772.2 682.452 L1771.64 682.452 L1771.08 682.452 L1770.52 682.452 L1769.96 682.452 L1769.4 682.452 L1768.84 682.452 L1768.28 682.452 L1767.72 682.452 L1767.16 682.452 L1766.61 682.452 L1766.05 682.452 L1765.49 682.452 L1764.93 682.452 L1764.37 682.452 L1763.81 682.452 L1763.25 682.452 L1762.69 682.452 L1762.13 682.452 L1761.57 682.452 L1761.01 682.452 L1760.45 682.452 L1759.89 682.452 L1759.34 682.452 L1758.78 682.452 L1758.22 682.452 L1757.66 682.452 L1757.1 682.452 L1756.54 682.452 L1755.98 682.452 L1755.42 682.452 L1754.86 682.452 L1754.3 682.452 L1753.74 682.452 L1753.18 682.452 L1752.62 682.452 L1752.06 682.452 L1751.51 682.452 L1750.95 682.452 L1750.39 682.452 L1749.83 682.452 L1749.27 682.452 L1748.71 682.452 L1748.15 682.452 L1747.59 682.452 L1747.03 682.452 L1746.47 682.452 L1745.91 682.452 L1745.35 682.452 L1744.79 682.452 L1744.24 682.452 L1743.68 682.452 L1743.12 682.452 L1742.56 682.452 L1742 682.452 L1741.44 682.452 L1740.88 682.452 L1740.32 682.452 L1739.76 682.452 L1739.2 682.452 L1738.64 682.452 L1738.08 682.452 L1737.52 682.452 L1736.97 682.452 L1736.41 682.452 L1735.85 682.452 L1735.29 682.452 L1734.73 682.452 L1734.17 682.452 L1733.61 682.452 L1733.05 682.452 L1732.49 682.452 L1731.93 682.452 L1731.37 682.452 L1730.81 682.452 L1730.25 682.452 L1729.69 682.452 L1729.14 682.452 L1728.58 682.452 L1728.02 682.452 L1727.46 682.452 L1726.9 682.452 L1726.34 682.452 L1725.78 682.452 L1725.22 682.452 L1724.66 682.452 L1724.1 682.452 L1723.54 682.452 L1722.98 682.452 L1722.42 682.452 L1721.87 682.452 L1721.31 682.452 L1720.75 682.452 L1720.19 682.452 L1719.63 682.452 L1719.07 682.452 L1718.51 682.452 L1717.95 682.452 L1717.39 682.452 L1716.83 682.452 L1716.27 682.452 L1715.71 682.452 L1715.15 682.452 L1714.6 682.452 L1714.04 682.452 L1713.48 682.452 L1712.92 682.452 L1712.36 682.452 L1711.8 682.452 L1711.24 682.452 L1710.68 682.452 L1710.12 682.452 L1709.56 682.452 L1709 682.452 L1708.44 682.452 L1707.88 682.452 L1707.32 682.452 L1706.77 682.452 L1706.21 682.452 L1705.65 682.452 L1705.09 682.452 L1704.53 682.452 L1703.97 682.452 L1703.41 682.452 L1702.85 682.452 L1702.29 682.452 L1701.73 682.452 L1701.17 682.452 L1700.61 682.452 L1700.05 682.452 L1699.5 682.452 L1698.94 682.452 L1698.38 682.452 L1697.82 682.452 L1697.26 682.452 L1696.7 682.452 L1696.14 682.452 L1695.58 682.452 L1695.02 682.452 L1694.46 682.452 L1693.9 682.452 L1693.34 682.452 L1692.78 682.452 L1692.23 682.452 L1691.67 682.452 L1691.11 682.452 L1690.55 682.452 L1689.99 682.452 L1689.43 682.452 L1688.87 682.452 L1688.31 682.452 L1687.75 682.452 L1687.19 682.452 L1686.63 682.452 L1686.07 682.452 L1685.51 682.452 L1684.95 682.452 L1684.4 682.452 L1683.84 682.452 L1683.28 682.452 L1682.72 682.452 L1682.16 682.452 L1681.6 682.452 L1681.04 682.452 L1680.48 682.452 L1679.92 682.452 L1679.36 682.452 L1678.8 682.452 L1678.24 682.452 L1677.68 682.452 L1677.13 682.452 L1676.57 682.452 L1676.01 682.452 L1675.45 682.452 L1674.89 682.452 L1674.33 682.452 L1673.77 682.452 L1673.21 682.452 L1672.65 682.452 L1672.09 682.452 L1671.53 682.452 L1670.97 682.452 L1670.41 682.452 L1669.85 682.452 L1669.3 682.452 L1668.74 682.452 L1668.18 682.452 L1667.62 682.452 L1667.06 682.452 L1666.5 682.452 L1665.94 682.452 L1665.38 682.452 L1664.82 682.452 L1664.26 682.452 L1663.7 682.452 L1663.14 682.452 L1662.58 682.452 L1662.03 682.452 L1661.47 682.452 L1660.91 682.452 L1660.35 682.452 L1659.79 682.452 L1659.23 682.452 L1658.67 682.452 L1658.11 682.452 L1657.55 682.452 L1656.99 682.452 L1656.43 682.452 L1655.87 682.452 L1655.31 682.452 L1654.76 682.452 L1654.2 682.452 L1653.64 682.452 L1653.08 682.452 L1652.52 682.452 L1651.96 682.452 L1651.4 682.452 L1650.84 682.452 L1650.28 682.452 L1649.72 682.452 L1649.16 682.452 L1648.6 682.452 L1648.04 682.452 L1647.48 682.452 L1646.93 682.452 L1646.37 682.452 L1645.81 682.452 L1645.25 682.452 L1644.69 682.452 L1644.13 682.452 L1643.57 682.452 L1643.01 682.452 L1642.45 682.452 L1641.89 682.452 L1641.33 682.452 L1640.77 682.452 L1640.21 682.452 L1639.66 682.452 L1639.1 682.452 L1638.54 682.452 L1637.98 682.452 L1637.42 682.452 L1636.86 682.452 L1636.3 682.452 L1635.74 682.452 L1635.18 682.452 L1634.62 682.452 L1634.06 682.452 L1633.5 682.452 L1632.94 682.452 L1632.39 682.452 L1631.83 682.452 L1631.27 682.452 L1630.71 682.452 L1630.15 682.452 L1629.59 682.452 L1629.03 682.452 L1628.47 682.452 L1627.91 682.452 L1627.35 682.452 L1626.79 682.452 L1626.23 682.452 L1625.67 682.452 L1625.11 682.452 L1624.56 682.452 L1624 682.452 L1623.44 682.452 L1622.88 682.452 L1622.32 682.452 L1621.76 682.452 L1621.2 682.452 L1620.64 682.452 L1620.08 682.452 L1619.52 682.452 L1618.96 682.452 L1618.4 682.452 L1617.84 682.452 L1617.29 682.452 L1616.73 682.452 L1616.17 682.452 L1615.61 682.452 L1615.05 682.452 L1614.49 682.452 L1613.93 682.452 L1613.37 682.452 L1612.81 682.452 L1612.25 682.452 L1611.69 682.452 L1611.13 682.452 L1610.57 682.452 L1610.02 682.452 L1609.46 682.452 L1608.9 682.452 L1608.34 682.452 L1607.78 682.452 L1607.22 682.452 L1606.66 682.452 L1606.1 682.452 L1605.54 682.452 L1604.98 682.452 L1604.42 682.452 L1603.86 682.452 L1603.3 682.452 L1602.74 682.452 L1602.19 682.452 L1601.63 682.452 L1601.07 682.452 L1600.51 682.452 L1599.95 682.452 L1599.39 682.452 L1598.83 682.452 L1598.27 682.452 L1597.71 682.452 L1597.15 682.452 L1596.59 682.452 L1596.03 682.452 L1595.47 682.452 L1594.92 682.452 L1594.36 682.452 L1593.8 682.452 L1593.24 682.452 L1592.68 682.452 L1592.12 682.452 L1591.56 682.452 L1591 682.452 L1590.44 682.452 L1589.88 682.452 L1589.32 682.452 L1588.76 682.452 L1588.2 682.452 L1587.65 682.452 L1587.09 682.452 L1586.53 682.452 L1585.97 682.452 L1585.41 682.452 L1584.85 682.452 L1584.29 682.452 L1583.73 682.452 L1583.17 682.452 L1582.61 682.452 L1582.05 682.452 L1581.49 682.452 L1580.93 682.452 L1580.37 682.452 L1579.82 682.452 L1579.26 682.452 L1578.7 682.452 L1578.14 682.452 L1577.58 682.452 L1577.02 682.452 L1576.46 682.452 L1575.9 682.452 L1575.34 682.452 L1574.78 682.452 L1574.22 682.452 L1573.66 682.452 L1573.1 682.452 L1572.55 682.452 L1571.99 682.452 L1571.43 682.452 L1570.87 682.452 L1570.31 682.452 L1569.75 682.452 L1569.19 682.452 L1568.63 682.452 L1568.07 682.452 L1567.51 682.452 L1566.95 682.452 L1566.39 682.452 L1565.83 682.452 L1565.28 682.452 L1564.72 682.452 L1564.16 682.452 L1563.6 682.452 L1563.04 682.452 L1562.48 682.452 L1561.92 682.452 L1561.36 682.452 L1560.8 682.452 L1560.24 682.452 L1559.68 682.452 L1559.12 682.452 L1558.56 682.452 L1558 682.452 L1557.45 682.452 L1556.89 682.452 L1556.33 682.452 L1555.77 682.452 L1555.21 682.452 L1554.65 682.452 L1554.09 682.452 L1553.53 682.452 L1552.97 682.452 L1552.41 682.452 L1551.85 682.452 L1551.29 682.452 L1550.73 682.452 L1550.18 682.452 L1549.62 682.452 L1549.06 682.452 L1548.5 682.452 L1547.94 682.452 L1547.38 682.452 L1546.82 682.452 L1546.26 682.452 L1545.7 682.452 L1545.14 682.452 L1544.58 682.452 L1544.02 682.452 L1543.46 682.452 L1542.9 682.452 L1542.35 682.452 L1541.79 682.452 L1541.23 682.452 L1540.67 682.452 L1540.11 682.452 L1539.55 682.452 L1538.99 682.452 L1538.43 682.452 L1537.87 682.452 L1537.31 682.452 L1536.75 682.452 L1536.19 682.452 L1535.63 682.452 L1535.08 682.452 L1534.52 682.452 L1533.96 682.452 L1533.4 682.452 L1532.84 682.452 L1532.28 682.452 L1531.72 682.452 L1531.16 682.452 L1530.6 682.452 L1530.04 682.452 L1529.48 682.452 L1528.92 682.452 L1528.36 682.452 L1527.81 682.452 L1527.25 682.452 L1526.69 682.452 L1526.13 682.452 L1525.57 682.452 L1525.01 682.452 L1524.45 682.452 L1523.89 682.452 L1523.33 682.452 L1522.77 682.452 L1522.21 682.452 L1521.65 682.452 L1521.09 682.452 L1520.53 682.452 L1519.98 682.452 L1519.42 682.452 L1518.86 682.452 L1518.3 682.452 L1517.74 682.452 L1517.18 682.452 L1516.62 682.452 L1516.06 682.452 L1515.5 682.452 L1514.94 682.452 L1514.38 682.452 L1513.82 682.452 L1513.26 682.452 L1512.71 682.452 L1512.15 682.452 L1511.59 682.452 L1511.03 682.452 L1510.47 682.452 L1509.91 682.452 L1509.35 682.452 L1508.79 682.452 L1508.23 682.452 L1507.67 682.452 L1507.11 682.452 L1506.55 682.452 L1505.99 682.452 L1505.44 682.452 L1504.88 682.452 L1504.32 682.452 L1503.76 682.452 L1503.2 682.452 L1502.64 682.452 L1502.08 682.452 L1501.52 682.452 L1500.96 682.452 L1500.4 682.452 L1499.84 682.452 L1499.28 682.452 L1498.72 682.452 L1498.16 682.452 L1497.61 682.452 L1497.05 682.452 L1496.49 682.452 L1495.93 682.452 L1495.37 682.452 L1494.81 682.452 L1494.25 682.452 L1493.69 682.452 L1493.13 682.452 L1492.57 682.452 L1492.01 682.452 L1491.45 682.452 L1490.89 682.452 L1490.34 682.452 L1489.78 682.452 L1489.22 682.452 L1488.66 682.452 L1488.1 682.452 L1487.54 682.452 L1486.98 682.452 L1486.42 682.452 L1485.86 682.452 L1485.3 682.452 L1484.74 682.452 L1484.18 682.452 L1483.62 682.452 L1483.07 682.452 L1482.51 682.452 L1481.95 682.452 L1481.39 682.452 L1480.83 682.452 L1480.27 682.452 L1479.71 682.452 L1479.15 682.452 L1478.59 682.452 L1478.03 682.452 L1477.47 682.452 L1476.91 682.452 L1476.35 682.452 L1475.79 682.452 L1475.24 682.452 L1474.68 682.452 L1474.12 682.452 L1473.56 682.452 L1473 682.452 L1472.44 682.452 L1471.88 682.452 L1471.32 682.452 L1470.76 682.452 L1470.2 682.452 L1469.64 682.452 L1469.08 682.452 L1468.52 682.452 L1467.97 682.452 L1467.41 682.452 L1466.85 682.452 L1466.29 682.452 L1465.73 682.452 L1465.17 682.452 L1464.61 682.452 L1464.05 682.452 L1463.49 682.452 L1462.93 682.452 L1462.37 682.452 L1461.81 682.452 L1461.25 682.452 L1460.7 682.452 L1460.14 682.452 L1459.58 682.452 L1459.02 682.452 L1458.46 682.452 L1457.9 682.452 L1457.34 682.452 L1456.78 682.452 L1456.22 682.452 L1455.66 682.452 L1455.1 682.452 L1454.54 682.452 L1453.98 682.452 L1453.42 682.452 L1452.87 682.452 L1452.31 682.452 L1451.75 682.452 L1451.19 682.452 L1450.63 682.452 L1450.07 682.452 L1449.51 682.452 L1448.95 682.452 L1448.39 682.452 L1447.83 682.452 L1447.27 682.452 L1446.71 682.452 L1446.15 682.452 L1445.6 682.452 L1445.04 682.452 L1444.48 682.452 L1443.92 682.452 L1443.36 682.452 L1442.8 682.452 L1442.24 682.452 L1441.68 682.452 L1441.12 682.452 L1440.56 682.452 L1440 682.452 L1439.44 682.452 L1438.88 682.452 L1438.33 682.452 L1437.77 682.452 L1437.21 682.452 L1436.65 682.452 L1436.09 682.452 L1435.53 682.452 L1434.97 682.452 L1434.41 682.452 L1433.85 682.452 L1433.29 682.452 L1432.73 682.452 L1432.17 682.452 L1431.61 682.452 L1431.05 682.452 L1430.5 682.452 L1429.94 682.452 L1429.38 682.452 L1428.82 682.452 L1428.26 682.452 L1427.7 682.452 L1427.14 682.452 L1426.58 682.452 L1426.02 682.452 L1425.46 682.452 L1424.9 682.452 L1424.34 682.452 L1423.78 682.452 L1423.23 682.452 L1422.67 682.452 L1422.11 682.452 L1421.55 682.452 L1420.99 682.452 L1420.43 682.452 L1419.87 682.452 L1419.31 682.452 L1418.75 682.452 L1418.19 682.452 L1417.63 682.452 L1417.07 682.452 L1416.51 682.452 L1415.95 682.452 L1415.4 682.452 L1414.84 682.452 L1414.28 682.452 L1413.72 682.452 L1413.16 682.452 L1412.6 682.452 L1412.04 682.452 L1411.48 682.452 L1410.92 682.452 L1410.36 682.452 L1409.8 682.452 L1409.24 682.452 L1408.68 682.452 L1408.13 682.452 L1407.57 682.452 L1407.01 682.452 L1406.45 682.452 L1405.89 682.452 L1405.33 682.452 L1404.77 682.452 L1404.21 682.452 L1403.65 682.452 L1403.09 682.452 L1402.53 682.452 L1401.97 682.452 L1401.41 682.452 L1400.86 682.452 L1400.3 682.452 L1399.74 682.452 L1399.18 682.452 L1398.62 682.452 L1398.06 682.452 L1397.5 682.452 L1396.94 682.452 L1396.38 682.452 L1395.82 682.452 L1395.26 682.452 L1394.7 682.452 L1394.14 682.452 L1393.58 682.452 L1393.03 682.452 L1392.47 682.452 L1391.91 682.452 L1391.35 682.452 L1390.79 682.452 L1390.23 682.452 L1389.67 682.452 L1389.11 682.452 L1388.55 682.452 L1387.99 682.452 L1387.43 682.452 L1386.87 682.452 L1386.31 682.452 L1385.76 682.452 L1385.2 682.452 L1384.64 682.452 L1384.08 682.452 L1383.52 682.452 L1382.96 682.452 L1382.4 682.452 L1381.84 682.452 L1381.28 682.452 L1380.72 682.452 L1380.16 682.452 L1379.6 682.452 L1379.04 682.452 L1378.49 682.452 L1377.93 682.452 L1377.37 682.452 L1376.81 682.452 L1376.25 682.452 L1375.69 682.452 L1375.13 682.452 L1374.57 682.452 L1374.01 682.452 L1373.45 682.452 L1372.89 682.452 L1372.33 682.452 L1371.77 682.452 L1371.21 682.452 L1370.66 682.452 L1370.1 682.452 L1369.54 682.452 L1368.98 682.452 L1368.42 682.452 L1367.86 682.452 L1367.3 682.452 L1366.74 682.452 L1366.18 682.452 L1365.62 682.452 L1365.06 682.452 L1364.5 682.452 L1363.94 682.452 L1363.39 682.452 L1362.83 682.452 L1362.27 682.452 L1361.71 682.452 L1361.15 682.452 L1360.59 682.452 L1360.03 682.452 L1359.47 682.452 L1358.91 682.452 L1358.35 682.452 L1357.79 682.452 L1357.23 682.452 L1356.67 682.452 L1356.12 682.452 L1355.56 682.452 L1355 682.452 L1354.44 682.452 L1353.88 682.452 L1353.32 682.452 L1352.76 682.452 L1352.2 682.452 L1351.64 682.452 L1351.08 682.452 L1350.52 682.452 L1349.96 682.452 L1349.4 682.452 L1348.84 682.452 L1348.29 682.452 L1347.73 682.452 L1347.17 682.452 L1346.61 682.452 L1346.05 682.452 L1345.49 682.452 L1344.93 682.452 L1344.37 682.452 L1343.81 682.452 L1343.25 682.452 L1342.69 682.452 L1342.13 682.452 L1341.57 682.452 L1341.02 682.452 L1340.46 682.452 L1339.9 682.452 L1339.34 682.452 L1338.78 682.452 L1338.22 682.452 L1337.66 682.452 L1337.1 682.452 L1336.54 682.452 L1335.98 682.452 L1335.42 682.452 L1334.86 682.452 L1334.3 682.452 L1333.75 682.452 L1333.19 682.452 L1332.63 682.452 L1332.07 682.452 L1331.51 682.452 L1330.95 682.452 L1330.39 682.452 L1329.83 682.452 L1329.27 682.452 L1328.71 682.452 L1328.15 682.452 L1327.59 682.452 L1327.03 682.452 L1326.47 682.452 L1325.92 682.452 L1325.36 682.452 L1324.8 682.452 L1324.24 682.452 L1323.68 682.452 L1323.12 682.452 L1322.56 682.452 L1322 682.452 L1321.44 682.452 L1320.88 682.452 L1320.32 682.452 L1319.76 682.452 L1319.2 682.452 L1318.65 682.452 L1318.09 682.452 L1317.53 682.452 L1316.97 682.452 L1316.41 682.452 L1315.85 682.452 L1315.29 682.452 L1314.73 682.452 L1314.17 682.452 L1313.61 682.452 L1313.05 682.452 L1312.49 682.452 L1311.93 682.452 L1311.38 682.452 L1310.82 682.452 L1310.26 682.452 L1309.7 682.452 L1309.14 682.452 L1308.58 682.452 L1308.02 682.452 L1307.46 682.452 L1306.9 682.452 L1306.34 682.452 L1305.78 682.452 L1305.22 682.452 L1304.66 682.452 L1304.1 682.452 L1303.55 682.452 L1302.99 682.452 L1302.43 682.452 L1301.87 682.452 L1301.31 682.452 L1300.75 682.452 L1300.19 682.452 L1299.63 682.452 L1299.07 682.452 L1298.51 682.452 L1297.95 682.452 L1297.39 682.452 L1296.83 682.452 L1296.28 682.452 L1295.72 682.452 L1295.16 682.452 L1294.6 682.452 L1294.04 682.452 L1293.48 682.452 L1292.92 682.452 L1292.36 682.452 L1291.8 682.452 L1291.24 682.452 L1290.68 682.452 L1290.12 682.452 L1289.56 682.452 L1289 682.452 L1288.45 682.452 L1287.89 682.452 L1287.33 682.452 L1286.77 682.452 L1286.21 682.452 L1285.65 682.452 L1285.09 682.452 L1284.53 682.452 L1283.97 682.452 L1283.41 682.452 L1282.85 682.452 L1282.29 682.452 L1281.73 682.452 L1281.18 682.452 L1280.62 682.452 L1280.06 682.452 L1279.5 682.452 L1278.94 682.452 L1278.38 682.452 L1277.82 682.452 L1277.26 682.452 L1276.7 682.452 L1276.14 682.452 L1275.58 682.452 L1275.02 682.452 L1274.46 682.452 L1273.91 682.452 L1273.35 682.452 L1272.79 682.452 L1272.23 682.452 L1271.67 682.452 L1271.11 682.452 L1270.55 682.452 L1269.99 682.452 L1269.43 682.452 L1268.87 682.452 L1268.31 682.452 L1267.75 682.452 L1267.19 682.452 L1266.63 682.452 L1266.08 682.452 L1265.52 682.452 L1264.96 682.452 L1264.4 682.452 L1263.84 682.452 L1263.28 682.452 L1262.72 682.452 L1262.16 682.452 L1261.6 682.452 L1261.04 682.452 L1260.48 682.452 L1259.92 682.452 L1259.36 682.452 L1258.81 682.452 L1258.25 682.452 L1257.69 682.452 L1257.13 682.452 L1256.57 682.452 L1256.01 682.452 L1255.45 682.452 L1254.89 682.452 L1254.33 682.452 L1253.77 682.452 L1253.21 682.452 L1252.65 682.452 L1252.09 682.452 L1251.54 682.452 L1250.98 682.452 L1250.42 682.452 L1249.86 682.452 L1249.3 682.452 L1248.74 682.452 L1248.18 682.452 L1247.62 682.452 L1247.06 682.452 L1246.5 682.452 L1245.94 682.452 L1245.38 682.452 L1244.82 682.452 L1244.26 682.452 L1243.71 682.452 L1243.15 682.452 L1242.59 682.452 L1242.03 682.452 L1241.47 682.452 L1240.91 682.452 L1240.35 682.452 L1239.79 682.452 L1239.23 682.452 L1238.67 682.452 L1238.11 682.452 L1237.55 682.452 L1236.99 682.452 L1236.44 682.452 L1235.88 682.452 L1235.32 682.452 L1234.76 682.452 L1234.2 682.452 L1233.64 682.452 L1233.08 682.452 L1232.52 682.452 L1231.96 682.452 L1231.4 682.452 L1230.84 682.452 L1230.28 682.452 L1229.72 682.452 L1229.17 682.452 L1228.61 682.452 L1228.05 682.452 L1227.49 682.452 L1226.93 682.452 L1226.37 682.452 L1225.81 682.452 L1225.25 682.452 L1224.69 682.452 L1224.13 682.452 L1223.57 682.452 L1223.01 682.452 L1222.45 682.452 L1221.89 682.452 L1221.34 682.452 L1220.78 682.452 L1220.22 682.452 L1219.66 682.452 L1219.1 682.452 L1218.54 682.452 L1217.98 682.452 L1217.42 682.452 L1216.86 682.452 L1216.3 682.452 L1215.74 682.452 L1215.18 682.452 L1214.62 682.452 L1214.07 682.452 L1213.51 682.452 L1212.95 682.452 L1212.39 682.452 L1211.83 682.452 L1211.27 682.452 L1210.71 682.452 L1210.15 682.452 L1209.59 682.452 L1209.03 682.452 L1208.47 682.452 L1207.91 682.452 L1207.35 682.452 L1206.8 682.452 L1206.24 682.452 L1205.68 682.452 L1205.12 682.452 L1204.56 682.452 L1204 682.452 L1203.44 682.452 L1202.88 682.452 L1202.32 682.452 L1201.76 682.452 L1201.2 682.452 L1200.64 682.452 L1200.08 682.452 L1199.52 682.452 L1198.97 682.452 L1198.41 682.452 L1197.85 682.452 L1197.29 682.452 L1196.73 682.452 L1196.17 682.452 L1195.61 682.452 L1195.05 682.452 L1194.49 682.452 L1193.93 682.452 L1193.37 682.452 L1192.81 682.452 L1192.25 682.452 L1191.7 682.452 L1191.14 682.452 L1190.58 682.452 L1190.02 682.452 L1189.46 682.452 L1188.9 682.452 L1188.34 682.452 L1187.78 682.452 L1187.22 682.452 L1186.66 682.452 L1186.1 682.452 L1185.54 682.452 L1184.98 682.452 L1184.43 682.452 L1183.87 682.452 L1183.31 682.452 L1182.75 682.452 L1182.19 682.452 L1181.63 682.452 L1181.07 682.452 L1180.51 682.452 L1179.95 682.452 L1179.39 682.452 L1178.83 682.452 L1178.27 682.452 L1177.71 682.452 L1177.15 682.452 L1176.6 682.452 L1176.04 682.452 L1175.48 682.452 L1174.92 682.452 L1174.36 682.452 L1173.8 682.452 L1173.24 682.452 L1172.68 682.452 L1172.12 682.452 L1171.56 682.452 L1171 682.452 L1170.44 682.452 L1169.88 682.452 L1169.33 682.452 L1168.77 682.452 L1168.21 682.452 L1167.65 682.452 L1167.09 682.452 L1166.53 682.452 L1165.97 682.452 L1165.41 682.452 L1164.85 682.452 L1164.29 682.452 L1163.73 682.452 L1163.17 682.452 L1162.61 682.452 L1162.05 682.452 L1161.5 682.452 L1160.94 682.452 L1160.38 682.452 L1159.82 682.452 L1159.26 682.452 L1158.7 682.452 L1158.14 682.452 L1157.58 682.452 L1157.02 682.452 L1156.46 682.452 L1155.9 682.452 L1155.34 682.452 L1154.78 682.452 L1154.23 682.452 L1153.67 682.452 L1153.11 682.452 L1152.55 682.452 L1151.99 682.452 L1151.43 682.452 L1150.87 682.452 L1150.31 682.452 L1149.75 682.452 L1149.19 682.452 L1148.63 682.452 L1148.07 682.452 L1147.51 682.452 L1146.96 682.452 L1146.4 682.452 L1145.84 682.452 L1145.28 682.452 L1144.72 682.452 L1144.16 682.452 L1143.6 682.452 L1143.04 682.452 L1142.48 682.452 L1141.92 682.452 L1141.36 682.452 L1140.8 682.452 L1140.24 682.452 L1139.68 682.452 L1139.13 682.452 L1138.57 682.452 L1138.01 682.452 L1137.45 682.452 L1136.89 682.452 L1136.33 682.452 L1135.77 682.452 L1135.21 682.452 L1134.65 682.452 L1134.09 682.452 L1133.53 682.452 L1132.97 682.452 L1132.41 682.452 L1131.86 682.452 L1131.3 682.452 L1130.74 682.452 L1130.18 682.452 L1129.62 682.452 L1129.06 682.452 L1128.5 682.452 L1127.94 682.452 L1127.38 682.452 L1126.82 682.452 L1126.26 682.452 L1125.7 682.452 L1125.14 682.452 L1124.59 682.452 L1124.03 682.452 L1123.47 682.452 L1122.91 682.452 L1122.35 682.452 L1121.79 682.452 L1121.23 682.452 L1120.67 682.452 L1120.11 682.452 L1119.55 682.452 L1118.99 682.452 L1118.43 682.452 L1117.87 682.452 L1117.31 682.452 L1116.76 682.452 L1116.2 682.452 L1115.64 682.452 L1115.08 682.452 L1114.52 682.452 L1113.96 682.452 L1113.4 682.452 L1112.84 682.452 L1112.28 682.452 L1111.72 682.452 L1111.16 682.452 L1110.6 682.452 L1110.04 682.452 L1109.49 682.452 L1108.93 682.452 L1108.37 682.452 L1107.81 682.452 L1107.25 682.452 L1106.69 682.452 L1106.13 682.452 L1105.57 682.452 L1105.01 682.452 L1104.45 682.452 L1103.89 682.452 L1103.33 682.452 L1102.77 682.452 L1102.22 682.452 L1101.66 682.452 L1101.1 682.452 L1100.54 682.452 L1099.98 682.452 L1099.42 682.452 L1098.86 682.452 L1098.3 682.452 L1097.74 682.452 L1097.18 682.452 L1096.62 682.452 L1096.06 682.452 L1095.5 682.452 L1094.94 682.452 L1094.39 682.452 L1093.83 682.452 L1093.27 682.452 L1092.71 682.452 L1092.15 682.452 L1091.59 682.452 L1091.03 682.452 L1090.47 682.452 L1089.91 682.452 L1089.35 682.452 L1088.79 682.452 L1088.23 682.452 L1087.67 682.452 L1087.12 682.452 L1086.56 682.452 L1086 682.452 L1085.44 682.452 L1084.88 682.452 L1084.32 682.452 L1083.76 682.452 L1083.2 682.452 L1082.64 682.452 L1082.08 682.452 L1081.52 682.452 L1080.96 682.452 L1080.4 682.452 L1079.85 682.452 L1079.29 682.452 L1078.73 682.452 L1078.17 682.452 L1077.61 682.452 L1077.05 682.452 L1076.49 682.452 L1075.93 682.452 L1075.37 682.452 L1074.81 682.452 L1074.25 682.452 L1073.69 682.452 L1073.13 682.452 L1072.57 682.452 L1072.02 682.452 L1071.46 682.452 L1070.9 682.452 L1070.34 682.452 L1069.78 682.452 L1069.22 682.452 L1068.66 682.452 L1068.1 682.452 L1067.54 682.452 L1066.98 682.452 L1066.42 682.452 L1065.86 682.452 L1065.3 682.452 L1064.75 682.452 L1064.19 682.452 L1063.63 682.452 L1063.07 682.452 L1062.51 682.452 L1061.95 682.452 L1061.39 682.452 L1060.83 682.452 L1060.27 682.452 L1059.71 682.452 L1059.15 682.452 L1058.59 682.452 L1058.03 682.452 L1057.48 682.452 L1056.92 682.452 L1056.36 682.452 L1055.8 682.452 L1055.24 682.452 L1054.68 682.452 L1054.12 682.452 L1053.56 682.452 L1053 682.452 L1052.44 682.452 L1051.88 682.452 L1051.32 682.452 L1050.76 682.452 L1050.2 682.452 L1049.65 682.452 L1049.09 682.452 L1048.53 682.452 L1047.97 682.452 L1047.41 682.452 L1046.85 682.452 L1046.29 682.452 L1045.73 682.452 L1045.17 682.452 L1044.61 682.452 L1044.05 682.452 L1043.49 682.452 L1042.93 682.452 L1042.38 682.452 L1041.82 682.452 L1041.26 682.452 L1040.7 682.452 L1040.14 682.452 L1039.58 682.452 L1039.02 682.452 L1038.46 682.452 L1037.9 682.452 L1037.34 682.452 L1036.78 682.452 L1036.22 682.452 L1035.66 682.452 L1035.1 682.452 L1034.55 682.452 L1033.99 682.452 L1033.43 682.452 L1032.87 682.452 L1032.31 682.452 L1031.75 682.452 L1031.19 682.452 L1030.63 682.452 L1030.07 682.452 L1029.51 682.452 L1028.95 682.452 L1028.39 682.452 L1027.83 682.452 L1027.28 682.452 L1026.72 682.452 L1026.16 682.452 L1025.6 682.452 L1025.04 682.452 L1024.48 682.452 L1023.92 682.452 L1023.36 682.452 L1022.8 682.452 L1022.24 682.452 L1021.68 682.452 L1021.12 682.452 L1020.56 682.452 L1020.01 682.452 L1019.45 682.452 L1018.89 682.452 L1018.33 682.452 L1017.77 682.452 L1017.21 682.452 L1016.65 682.452 L1016.09 682.452 L1015.53 682.452 L1014.97 682.452 L1014.41 682.452 L1013.85 682.452 L1013.29 682.452 L1012.73 682.452 L1012.18 682.452 L1011.62 682.452 L1011.06 682.452 L1010.5 682.452 L1009.94 682.452 L1009.38 682.452 L1008.82 682.452 L1008.26 682.452 L1007.7 682.452 L1007.14 682.452 L1006.58 682.452 L1006.02 682.452 L1005.46 682.452 L1004.91 682.452 L1004.35 682.452 L1003.79 682.452 L1003.23 682.452 L1002.67 682.452 L1002.11 682.452 L1001.55 682.452 L1000.99 682.452 L1000.43 682.452 L999.872 682.452 L999.313 682.452 L998.754 682.452 L998.194 682.452 L997.635 682.452 L997.076 682.452 L996.517 682.452 L995.957 682.452 L995.398 682.452 L994.839 682.452 L994.28 682.452 L993.72 682.452 L993.161 682.452 L992.602 682.452 L992.043 682.452 L991.483 682.452 L990.924 682.452 L990.365 682.452 L989.806 682.452 L989.246 682.452 L988.687 682.452 L988.128 682.452 L987.569 682.452 L987.009 682.452 L986.45 682.452 L985.891 682.452 L985.332 682.452 L984.772 682.452 L984.213 682.452 L983.654 682.452 L983.095 682.452 L982.535 682.452 L981.976 682.452 L981.417 682.452 L980.858 682.452 L980.298 682.452 L979.739 682.452 L979.18 682.452 L978.621 682.452 L978.061 682.452 L977.502 682.452 L976.943 682.452 L976.384 682.452 L975.824 682.452 L975.265 682.452 L974.706 682.452 L974.147 682.452 L973.587 682.452 L973.028 682.452 L972.469 682.452 L971.91 682.452 L971.35 682.452 L970.791 682.452 L970.232 682.452 L969.673 682.452 L969.113 682.452 L968.554 682.452 L967.995 682.452 L967.436 682.452 L966.876 682.452 L966.317 682.452 L965.758 682.452 L965.199 682.452 L964.639 682.452 L964.08 682.452 L963.521 682.452 L962.962 682.452 L962.402 682.452 L961.843 682.452 L961.284 682.452 L960.725 682.452 L960.165 682.452 L959.606 682.452 L959.047 682.452 L958.488 682.452 L957.928 682.452 L957.369 682.452 L956.81 682.452 L956.251 682.452 L955.691 682.452 L955.132 682.452 L954.573 682.452 L954.014 682.452 L953.454 682.452 L952.895 682.452 L952.336 682.452 L951.777 682.452 L951.217 682.452 L950.658 682.452 L950.099 682.452 L949.54 682.452 L948.98 682.452 L948.421 682.452 L947.862 682.452 L947.303 682.452 L946.743 682.452 L946.184 682.452 L945.625 682.452 L945.066 682.452 L944.506 682.452 L943.947 682.452 L943.388 682.452 L942.829 682.452 L942.269 682.452 L941.71 682.452 L941.151 682.452 L940.592 682.452 L940.032 682.452 L939.473 682.452 L938.914 682.452 L938.355 682.452 L937.795 682.452 L937.236 682.452 L936.677 682.452 L936.118 682.452 L935.558 682.452 L934.999 682.452 L934.44 682.452 L933.881 682.452 L933.321 682.452 L932.762 682.452 L932.203 682.452 L931.644 682.452 L931.084 682.452 L930.525 682.452 L929.966 682.452 L929.406 682.452 L928.847 682.452 L928.288 682.452 L927.729 682.452 L927.169 682.452 L926.61 682.452 L926.051 682.452 L925.492 682.452 L924.932 682.452 L924.373 682.452 L923.814 682.452 L923.255 682.452 L922.695 682.452 L922.136 682.452 L921.577 682.452 L921.018 682.452 L920.458 682.452 L919.899 682.452 L919.34 682.452 L918.781 682.452 L918.221 682.452 L917.662 682.452 L917.103 682.452 L916.544 682.452 L915.984 682.452 L915.425 682.452 L914.866 682.452 L914.307 682.452 L913.747 682.452 L913.188 682.452 L912.629 682.452 L912.07 682.452 L911.51 682.452 L910.951 682.452 L910.392 682.452 L909.833 682.452 L909.273 682.452 L908.714 682.452 L908.155 682.452 L907.596 682.452 L907.036 682.452 L906.477 682.452 L905.918 682.452 L905.359 682.452 L904.799 682.452 L904.24 682.452 L903.681 682.452 L903.122 682.452 L902.562 682.452 L902.003 682.452 L901.444 682.452 L900.885 682.452 L900.325 682.452 L899.766 682.452 L899.207 682.452 L898.648 682.452 L898.088 682.452 L897.529 682.452 L896.97 682.452 L896.411 682.452 L895.851 682.452 L895.292 682.452 L894.733 682.452 L894.174 682.452 L893.614 682.452 L893.055 682.452 L892.496 682.452 L891.937 682.452 L891.377 682.452 L890.818 682.452 L890.259 682.452 L889.7 682.452 L889.14 682.452 L888.581 682.452 L888.022 682.452 L887.463 682.452 L886.903 682.452 L886.344 682.452 L885.785 682.452 L885.226 682.452 L884.666 682.452 L884.107 682.452 L883.548 682.452 L882.989 682.452 L882.429 682.452 L881.87 682.452 L881.311 682.452 L880.752 682.452 L880.192 682.452 L879.633 682.452 L879.074 682.452 L878.515 682.452 L877.955 682.452 L877.396 682.452 L876.837 682.452 L876.278 682.452 L875.718 682.452 L875.159 682.452 L874.6 682.452 L874.041 682.452 L873.481 682.452 L872.922 682.452 L872.363 682.452 L871.804 682.452 L871.244 682.452 L870.685 682.452 L870.126 682.452 L869.567 682.452 L869.007 682.452 L868.448 682.452 L867.889 682.452 L867.33 682.452 L866.77 682.452 L866.211 682.452 L865.652 682.452 L865.093 682.452 L864.533 682.452 L863.974 682.452 L863.415 682.452 L862.856 682.452 L862.296 682.452 L861.737 682.452 L861.178 682.452 L860.619 682.452 L860.059 682.452 L859.5 682.452 L858.941 682.452 L858.382 682.452 L857.822 682.452 L857.263 682.452 L856.704 682.452 L856.145 682.452 L855.585 682.452 L855.026 682.452 L854.467 682.452 L853.908 682.452 L853.348 682.452 L852.789 682.452 L852.23 682.452 L851.671 682.452 L851.111 682.452 L850.552 682.452 L849.993 682.452 L849.434 682.452 L848.874 682.452 L848.315 682.452 L847.756 682.452 L847.197 682.452 L846.637 682.452 L846.078 682.452 L845.519 682.452 L844.96 682.452 L844.4 682.452 L843.841 682.452 L843.282 682.452 L842.723 682.452 L842.163 682.452 L841.604 682.452 L841.045 682.452 L840.486 682.452 L839.926 682.452 L839.367 682.452 L838.808 682.452 L838.249 682.452 L837.689 682.452 L837.13 682.452 L836.571 682.452 L836.012 682.452 L835.452 682.452 L834.893 682.452 L834.334 682.452 L833.775 682.452 L833.215 682.452 L832.656 682.452 L832.097 682.452 L831.538 682.452 L830.978 682.452 L830.419 682.452 L829.86 682.452 L829.301 682.452 L828.741 682.452 L828.182 682.452 L827.623 682.452 L827.064 682.452 L826.504 682.452 L825.945 682.452 L825.386 682.452 L824.827 682.452 L824.267 682.452 L823.708 682.452 L823.149 682.452 L822.59 682.452 L822.03 682.452 L821.471 682.452 L820.912 682.452 L820.353 682.452 L819.793 682.452 L819.234 682.452 L818.675 682.452 L818.116 682.452 L817.556 682.452 L816.997 682.452 L816.438 682.452 L815.879 682.452 L815.319 682.452 L814.76 682.452 L814.201 682.452 L813.642 682.452 L813.082 682.452 L812.523 682.452 L811.964 682.452 L811.405 682.452 L810.845 682.452 L810.286 682.452 L809.727 682.452 L809.168 682.452 L808.608 682.452 L808.049 682.452 L807.49 682.452 L806.931 682.452 L806.371 682.452 L805.812 682.452 L805.253 682.452 L804.693 682.452 L804.134 682.452 L803.575 682.452 L803.016 682.452 L802.456 682.452 L801.897 682.452 L801.338 682.452 L800.779 682.452 L800.219 682.452 L799.66 682.452 L799.101 682.452 L798.542 682.452 L797.982 682.452 L797.423 682.452 L796.864 682.452 L796.305 682.452 L795.745 682.452 L795.186 682.452 L794.627 682.452 L794.068 682.452 L793.508 682.452 L792.949 682.452 L792.39 682.452 L791.831 682.452 L791.271 682.452 L790.712 682.452 L790.153 682.452 L789.594 682.452 L789.034 682.452 L788.475 682.452 L787.916 682.452 L787.357 682.452 L786.797 682.452 L786.238 682.452 L785.679 682.452 L785.12 682.452 L784.56 682.452 L784.001 682.452 L783.442 682.452 L782.883 682.452 L782.323 682.452 L781.764 682.452 L781.205 682.452 L780.646 682.452 L780.086 682.452 L779.527 682.452 L778.968 682.452 L778.409 682.452 L777.849 682.452 L777.29 682.452 L776.731 682.452 L776.172 682.452 L775.612 682.452 L775.053 682.452 L774.494 682.452 L773.935 682.452 L773.375 682.452 L772.816 682.452 L772.257 682.452 L771.698 682.452 L771.138 682.452 L770.579 682.452 L770.02 682.452 L769.461 682.452 L768.901 682.452 L768.342 682.452 L767.783 682.452 L767.224 682.452 L766.664 682.452 L766.105 682.452 L765.546 682.452 L764.987 682.452 L764.427 682.452 L763.868 682.452 L763.309 682.452 L762.75 682.452 L762.19 682.452 L761.631 682.452 L761.072 682.452 L760.513 682.452 L759.953 682.452 L759.394 682.452 L758.835 682.452 L758.276 682.452 L757.716 682.452 L757.157 682.452 L756.598 682.452 L756.039 682.452 L755.479 682.452 L754.92 682.452 L754.361 682.452 L753.802 682.452 L753.242 682.452 L752.683 682.452 L752.124 682.452 L751.565 682.452 L751.005 682.452 L750.446 682.452 L749.887 682.452 L749.328 682.452 L748.768 682.452 L748.209 682.452 L747.65 682.452 L747.091 682.452 L746.531 682.452 L745.972 682.452 L745.413 682.452 L744.854 682.452 L744.294 682.452 L743.735 682.452 L743.176 682.452 L742.617 682.452 L742.057 682.452 L741.498 682.452 L740.939 682.452 L740.38 682.452 L739.82 682.452 L739.261 682.452 L738.702 682.452 L738.143 682.452 L737.583 682.452 L737.024 682.452 L736.465 682.452 L735.906 682.452 L735.346 682.452 L734.787 682.452 L734.228 682.452 L733.669 682.452 L733.109 682.452 L732.55 682.452 L731.991 682.452 L731.432 682.452 L730.872 682.452 L730.313 682.452 L729.754 682.452 L729.195 682.452 L728.635 682.452 L728.076 682.452 L727.517 682.452 L726.958 682.452 L726.398 682.452 L725.839 682.452 L725.28 682.452 L724.721 682.452 L724.161 682.452 L723.602 682.452 L723.043 682.452 L722.484 682.452 L721.924 682.452 L721.365 682.452 L720.806 682.452 L720.247 682.452  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip043)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.943 720.806,683.943 721.365,683.943 721.924,683.943 722.484,683.943 723.043,683.943 723.602,683.943 724.161,683.943 724.721,683.943 725.28,683.943 725.839,683.943 726.398,683.943 726.958,683.943 727.517,683.943 728.076,683.943 728.635,683.943 729.195,683.943 729.754,683.943 730.313,683.943 730.872,683.943 731.432,683.943 731.991,683.943 732.55,683.943 733.109,683.943 733.669,683.943 734.228,683.943 734.787,683.943 735.346,683.943 735.906,683.943 736.465,683.943 737.024,683.943 737.583,683.943 738.143,683.943 738.702,683.943 739.261,683.943 739.82,683.943 740.38,683.943 740.939,683.943 741.498,683.943 742.057,683.943 742.617,683.943 743.176,683.943 743.735,683.943 744.294,683.943 744.854,683.943 745.413,683.943 745.972,683.943 746.531,683.943 747.091,683.943 747.65,683.943 748.209,683.943 748.768,683.943 749.328,683.943 749.887,683.943 750.446,683.943 751.005,683.943 751.565,683.943 752.124,683.943 752.683,683.943 753.242,683.943 753.802,683.943 754.361,683.943 754.92,683.943 755.479,683.943 756.039,683.943 756.598,683.943 757.157,683.943 757.716,683.943 758.276,683.943 758.835,683.943 759.394,683.943 759.953,683.943 760.513,683.943 761.072,683.943 761.631,683.943 762.19,683.943 762.75,683.943 763.309,683.943 763.868,683.943 764.427,683.943 764.987,683.943 765.546,683.943 766.105,683.943 766.664,683.943 767.224,683.943 767.783,683.943 768.342,683.943 768.901,683.943 769.461,683.943 770.02,683.943 770.579,683.943 771.138,683.943 771.698,683.943 772.257,683.943 772.816,683.943 773.375,683.943 773.935,683.943 774.494,683.943 775.053,683.943 775.612,683.943 776.172,683.943 776.731,683.943 777.29,683.943 777.849,683.943 778.409,683.943 778.968,683.943 779.527,683.943 780.086,683.943 780.646,683.943 781.205,683.943 781.764,683.943 782.323,683.943 782.883,683.943 783.442,683.943 784.001,683.943 784.56,683.943 785.12,683.943 785.679,683.943 786.238,683.943 786.797,683.943 787.357,683.943 787.916,683.943 788.475,683.943 789.034,683.943 789.594,683.943 790.153,683.943 790.712,683.943 791.271,683.943 791.831,683.943 792.39,683.943 792.949,683.943 793.508,683.943 794.068,683.943 794.627,683.943 795.186,683.943 795.745,683.943 796.305,683.943 796.864,683.943 797.423,683.943 797.982,683.943 798.542,683.943 799.101,683.943 799.66,683.943 800.219,683.943 800.779,683.943 801.338,683.943 801.897,683.943 802.456,683.943 803.016,683.943 803.575,683.943 804.134,683.943 804.693,683.943 805.253,683.943 805.812,683.943 806.371,683.943 806.931,683.943 807.49,683.943 808.049,683.943 808.608,683.943 809.168,683.943 809.727,683.943 810.286,683.943 810.845,683.943 811.405,683.943 811.964,683.943 812.523,683.943 813.082,683.943 813.642,683.943 814.201,683.943 814.76,683.943 815.319,683.943 815.879,683.943 816.438,683.943 816.997,683.943 817.556,683.943 818.116,683.943 818.675,683.943 819.234,683.943 819.793,683.943 820.353,683.943 820.912,683.943 821.471,683.943 822.03,683.943 822.59,683.943 823.149,683.943 823.708,683.943 824.267,683.943 824.827,683.943 825.386,683.943 825.945,683.943 826.504,683.943 827.064,683.943 827.623,683.943 828.182,683.943 828.741,683.943 829.301,683.943 829.86,683.943 830.419,683.943 830.978,683.943 831.538,683.943 832.097,683.943 832.656,683.943 833.215,683.943 833.775,683.943 834.334,683.943 834.893,683.943 835.452,683.943 836.012,683.943 836.571,683.943 837.13,683.943 837.689,683.943 838.249,683.943 838.808,683.943 839.367,683.943 839.926,683.943 840.486,683.943 841.045,683.943 841.604,683.943 842.163,683.943 842.723,683.943 843.282,683.943 843.841,683.943 844.4,683.943 844.96,683.943 845.519,683.943 846.078,683.943 846.637,683.943 847.197,683.943 847.756,683.943 848.315,683.943 848.874,683.943 849.434,683.943 849.993,683.943 850.552,683.943 851.111,683.943 851.671,683.943 852.23,683.943 852.789,683.943 853.348,683.943 853.908,683.943 854.467,683.943 855.026,683.943 855.585,683.943 856.145,683.943 856.704,683.943 857.263,683.943 857.822,683.943 858.382,683.943 858.941,683.943 859.5,683.943 860.059,683.943 860.619,683.943 861.178,683.943 861.737,683.943 862.296,683.943 862.856,683.943 863.415,683.943 863.974,683.943 864.533,683.943 865.093,683.943 865.652,683.943 866.211,683.943 866.77,683.943 867.33,683.943 867.889,683.943 868.448,683.943 869.007,683.943 869.567,683.943 870.126,683.943 870.685,683.943 871.244,683.943 871.804,683.943 872.363,683.943 872.922,683.943 873.481,683.943 874.041,683.943 874.6,683.943 875.159,683.943 875.718,683.943 876.278,683.943 876.837,683.943 877.396,683.943 877.955,683.943 878.515,683.943 879.074,683.943 879.633,683.943 880.192,683.943 880.752,683.943 881.311,683.943 881.87,683.943 882.429,683.943 882.989,683.943 883.548,683.943 884.107,683.943 884.666,683.943 885.226,683.943 885.785,683.943 886.344,683.943 886.903,683.943 887.463,683.943 888.022,683.943 888.581,683.943 889.14,683.943 889.7,683.943 890.259,683.943 890.818,683.943 891.377,683.943 891.937,683.943 892.496,683.943 893.055,683.943 893.614,683.943 894.174,683.943 894.733,683.943 895.292,683.943 895.851,683.943 896.411,683.943 896.97,683.943 897.529,683.943 898.088,683.943 898.648,683.943 899.207,683.943 899.766,683.943 900.325,683.943 900.885,683.943 901.444,683.943 902.003,683.943 902.562,683.943 903.122,683.943 903.681,683.943 904.24,683.943 904.799,683.943 905.359,683.943 905.918,683.943 906.477,683.943 907.036,683.943 907.596,683.943 908.155,683.943 908.714,683.943 909.273,683.943 909.833,683.943 910.392,683.943 910.951,683.943 911.51,683.943 912.07,683.943 912.629,683.943 913.188,683.943 913.747,683.943 914.307,683.943 914.866,683.943 915.425,683.943 915.984,683.943 916.544,683.943 917.103,683.943 917.662,683.943 918.221,683.943 918.781,683.943 919.34,683.943 919.899,683.943 920.458,683.943 921.018,683.943 921.577,683.943 922.136,683.943 922.695,683.943 923.255,683.943 923.814,683.943 924.373,683.943 924.932,683.943 925.492,683.943 926.051,683.943 926.61,683.943 927.169,683.943 927.729,683.943 928.288,683.943 928.847,683.943 929.406,683.943 929.966,683.943 930.525,683.943 931.084,683.943 931.644,683.943 932.203,683.943 932.762,683.943 933.321,683.943 933.881,683.943 934.44,683.943 934.999,683.943 935.558,683.943 936.118,683.943 936.677,683.943 937.236,683.943 937.795,683.943 938.355,683.943 938.914,683.943 939.473,683.943 940.032,683.943 940.592,683.943 941.151,683.943 941.71,683.943 942.269,683.943 942.829,683.943 943.388,683.943 943.947,683.943 944.506,683.943 945.066,683.943 945.625,683.943 946.184,683.943 946.743,683.943 947.303,683.943 947.862,683.943 948.421,683.943 948.98,683.943 949.54,683.943 950.099,683.943 950.658,683.943 951.217,683.943 951.777,683.943 952.336,683.943 952.895,683.943 953.454,683.943 954.014,683.943 954.573,683.943 955.132,683.943 955.691,683.943 956.251,683.943 956.81,683.943 957.369,683.943 957.928,683.943 958.488,683.943 959.047,683.943 959.606,683.943 960.165,683.943 960.725,683.943 961.284,683.943 961.843,683.943 962.402,683.943 962.962,683.943 963.521,683.943 964.08,683.943 964.639,683.943 965.199,683.943 965.758,683.943 966.317,683.943 966.876,683.943 967.436,683.943 967.995,683.943 968.554,683.943 969.113,683.943 969.673,683.943 970.232,683.943 970.791,683.943 971.35,683.943 971.91,683.943 972.469,683.943 973.028,683.943 973.587,683.943 974.147,683.943 974.706,683.943 975.265,683.943 975.824,683.943 976.384,683.943 976.943,683.943 977.502,683.943 978.061,683.943 978.621,683.943 979.18,683.943 979.739,683.943 980.298,683.943 980.858,683.943 981.417,683.943 981.976,683.943 982.535,683.943 983.095,683.943 983.654,683.943 984.213,683.943 984.772,683.943 985.332,683.943 985.891,683.943 986.45,683.943 987.009,683.943 987.569,683.943 988.128,683.943 988.687,683.943 989.246,683.943 989.806,683.943 990.365,683.943 990.924,683.943 991.483,683.943 992.043,683.943 992.602,683.943 993.161,683.943 993.72,683.943 994.28,683.943 994.839,683.943 995.398,683.943 995.957,683.943 996.517,683.943 997.076,683.943 997.635,683.943 998.194,683.943 998.754,683.943 999.313,683.943 999.872,683.943 1000.43,683.943 1000.99,683.943 1001.55,683.943 1002.11,683.943 1002.67,683.943 1003.23,683.943 1003.79,683.943 1004.35,683.943 1004.91,683.943 1005.46,683.943 1006.02,683.943 1006.58,683.943 1007.14,683.943 1007.7,683.943 1008.26,683.943 1008.82,683.943 1009.38,683.943 1009.94,683.943 1010.5,683.943 1011.06,683.943 1011.62,683.943 1012.18,683.943 1012.73,683.943 1013.29,683.943 1013.85,683.943 1014.41,683.943 1014.97,683.943 1015.53,683.943 1016.09,683.943 1016.65,683.943 1017.21,683.943 1017.77,683.943 1018.33,683.943 1018.89,683.943 1019.45,683.943 1020.01,683.943 1020.56,683.943 1021.12,683.943 1021.68,683.943 1022.24,683.943 1022.8,683.943 1023.36,683.943 1023.92,683.943 1024.48,683.943 1025.04,683.943 1025.6,683.943 1026.16,683.943 1026.72,683.943 1027.28,683.943 1027.83,683.943 1028.39,683.943 1028.95,683.943 1029.51,683.943 1030.07,683.943 1030.63,683.943 1031.19,683.943 1031.75,683.943 1032.31,683.943 1032.87,683.943 1033.43,683.943 1033.99,683.943 1034.55,683.943 1035.1,683.943 1035.66,683.943 1036.22,683.943 1036.78,683.943 1037.34,683.943 1037.9,683.943 1038.46,683.943 1039.02,683.943 1039.58,683.943 1040.14,683.943 1040.7,683.943 1041.26,683.943 1041.82,683.943 1042.38,683.943 1042.93,683.943 1043.49,683.943 1044.05,683.943 1044.61,683.943 1045.17,683.943 1045.73,683.943 1046.29,683.943 1046.85,683.943 1047.41,683.943 1047.97,683.943 1048.53,683.943 1049.09,683.943 1049.65,683.943 1050.2,683.943 1050.76,683.943 1051.32,683.943 1051.88,683.943 1052.44,683.943 1053,683.943 1053.56,683.943 1054.12,683.943 1054.68,683.943 1055.24,683.943 1055.8,683.943 1056.36,683.943 1056.92,683.943 1057.48,683.943 1058.03,683.943 1058.59,683.943 1059.15,683.943 1059.71,683.943 1060.27,683.943 1060.83,683.943 1061.39,683.943 1061.95,683.943 1062.51,683.943 1063.07,683.943 1063.63,683.943 1064.19,683.943 1064.75,683.943 1065.3,683.943 1065.86,683.943 1066.42,683.943 1066.98,683.943 1067.54,683.943 1068.1,683.943 1068.66,683.943 1069.22,683.943 1069.78,683.943 1070.34,683.943 1070.9,683.943 1071.46,683.943 1072.02,683.943 1072.57,683.943 1073.13,683.943 1073.69,683.943 1074.25,683.943 1074.81,683.943 1075.37,683.943 1075.93,683.943 1076.49,683.943 1077.05,683.943 1077.61,683.943 1078.17,683.943 1078.73,683.943 1079.29,683.943 1079.85,683.943 1080.4,683.943 1080.96,683.943 1081.52,683.943 1082.08,683.943 1082.64,683.943 1083.2,683.943 1083.76,683.943 1084.32,683.943 1084.88,683.943 1085.44,683.943 1086,683.943 1086.56,683.943 1087.12,683.943 1087.67,683.943 1088.23,683.943 1088.79,683.943 1089.35,683.943 1089.91,683.943 1090.47,683.943 1091.03,683.943 1091.59,683.943 1092.15,683.943 1092.71,683.943 1093.27,683.943 1093.83,683.943 1094.39,683.943 1094.94,683.943 1095.5,683.943 1096.06,683.943 1096.62,683.943 1097.18,683.943 1097.74,683.943 1098.3,683.943 1098.86,683.943 1099.42,683.943 1099.98,683.943 1100.54,683.943 1101.1,683.943 1101.66,683.943 1102.22,683.943 1102.77,683.943 1103.33,683.943 1103.89,683.943 1104.45,683.943 1105.01,683.943 1105.57,683.943 1106.13,683.943 1106.69,683.943 1107.25,683.943 1107.81,683.943 1108.37,683.943 1108.93,683.943 1109.49,683.943 1110.04,683.943 1110.6,683.943 1111.16,683.943 1111.72,683.943 1112.28,683.943 1112.84,683.943 1113.4,683.943 1113.96,683.943 1114.52,683.943 1115.08,683.943 1115.64,683.943 1116.2,683.943 1116.76,683.943 1117.31,683.943 1117.87,683.943 1118.43,683.943 1118.99,683.943 1119.55,683.943 1120.11,683.943 1120.67,683.943 1121.23,683.943 1121.79,683.943 1122.35,683.943 1122.91,683.943 1123.47,683.943 1124.03,683.943 1124.59,683.943 1125.14,683.943 1125.7,683.943 1126.26,683.943 1126.82,683.943 1127.38,683.943 1127.94,683.943 1128.5,683.943 1129.06,683.943 1129.62,683.943 1130.18,683.943 1130.74,683.943 1131.3,683.943 1131.86,683.943 1132.41,683.943 1132.97,683.943 1133.53,683.943 1134.09,683.943 1134.65,683.943 1135.21,683.943 1135.77,683.943 1136.33,683.943 1136.89,683.943 1137.45,683.943 1138.01,683.943 1138.57,683.943 1139.13,683.943 1139.68,683.943 1140.24,683.943 1140.8,683.943 1141.36,683.943 1141.92,683.943 1142.48,683.943 1143.04,683.943 1143.6,683.943 1144.16,683.943 1144.72,683.943 1145.28,683.943 1145.84,683.943 1146.4,683.943 1146.96,683.943 1147.51,683.943 1148.07,683.943 1148.63,683.943 1149.19,683.943 1149.75,683.943 1150.31,683.943 1150.87,683.943 1151.43,683.943 1151.99,683.943 1152.55,683.943 1153.11,683.943 1153.67,683.943 1154.23,683.943 1154.78,683.943 1155.34,683.943 1155.9,683.943 1156.46,683.943 1157.02,683.943 1157.58,683.943 1158.14,683.943 1158.7,683.943 1159.26,683.943 1159.82,683.943 1160.38,683.943 1160.94,683.943 1161.5,683.943 1162.05,683.943 1162.61,683.943 1163.17,683.943 1163.73,683.943 1164.29,683.943 1164.85,683.943 1165.41,683.943 1165.97,683.943 1166.53,683.943 1167.09,683.943 1167.65,683.943 1168.21,683.943 1168.77,683.943 1169.33,683.943 1169.88,683.943 1170.44,683.943 1171,683.943 1171.56,683.943 1172.12,683.943 1172.68,683.943 1173.24,683.943 1173.8,683.943 1174.36,683.943 1174.92,683.943 1175.48,683.943 1176.04,683.943 1176.6,683.943 1177.15,683.943 1177.71,683.943 1178.27,683.943 1178.83,683.943 1179.39,683.943 1179.95,683.943 1180.51,683.943 1181.07,683.943 1181.63,683.943 1182.19,683.943 1182.75,683.943 1183.31,683.943 1183.87,683.943 1184.43,683.943 1184.98,683.943 1185.54,683.943 1186.1,683.943 1186.66,683.943 1187.22,683.943 1187.78,683.943 1188.34,683.943 1188.9,683.943 1189.46,683.943 1190.02,683.943 1190.58,683.943 1191.14,683.943 1191.7,683.943 1192.25,683.943 1192.81,683.943 1193.37,683.943 1193.93,683.943 1194.49,683.943 1195.05,683.943 1195.61,683.943 1196.17,683.943 1196.73,683.943 1197.29,683.943 1197.85,683.943 1198.41,683.943 1198.97,683.943 1199.52,683.943 1200.08,683.943 1200.64,683.943 1201.2,683.943 1201.76,683.943 1202.32,683.943 1202.88,683.943 1203.44,683.943 1204,683.943 1204.56,683.943 1205.12,683.943 1205.68,683.943 1206.24,683.943 1206.8,683.943 1207.35,683.943 1207.91,683.943 1208.47,683.943 1209.03,683.943 1209.59,683.943 1210.15,683.943 1210.71,683.943 1211.27,683.943 1211.83,683.943 1212.39,683.943 1212.95,683.943 1213.51,683.943 1214.07,683.943 1214.62,683.943 1215.18,683.943 1215.74,683.943 1216.3,683.943 1216.86,683.943 1217.42,683.943 1217.98,683.943 1218.54,683.943 1219.1,683.943 1219.66,683.943 1220.22,683.943 1220.78,683.943 1221.34,683.943 1221.89,683.943 1222.45,683.943 1223.01,683.943 1223.57,683.943 1224.13,683.943 1224.69,683.943 1225.25,683.943 1225.81,683.943 1226.37,683.943 1226.93,683.943 1227.49,683.943 1228.05,683.943 1228.61,683.943 1229.17,683.943 1229.72,683.943 1230.28,683.943 1230.84,683.943 1231.4,683.943 1231.96,683.943 1232.52,683.943 1233.08,683.943 1233.64,683.943 1234.2,683.943 1234.76,683.943 1235.32,683.943 1235.88,683.943 1236.44,683.943 1236.99,683.943 1237.55,683.943 1238.11,683.943 1238.67,683.943 1239.23,683.943 1239.79,683.943 1240.35,683.943 1240.91,683.943 1241.47,683.943 1242.03,683.943 1242.59,683.943 1243.15,683.943 1243.71,683.943 1244.26,683.943 1244.82,683.943 1245.38,683.943 1245.94,683.943 1246.5,683.943 1247.06,683.943 1247.62,683.943 1248.18,683.943 1248.74,683.943 1249.3,683.943 1249.86,683.943 1250.42,683.943 1250.98,683.943 1251.54,683.943 1252.09,683.943 1252.65,683.943 1253.21,683.943 1253.77,683.943 1254.33,683.943 1254.89,683.943 1255.45,683.943 1256.01,683.943 1256.57,683.943 1257.13,683.943 1257.69,683.943 1258.25,683.943 1258.81,683.943 1259.36,683.943 1259.92,683.943 1260.48,683.943 1261.04,683.943 1261.6,683.943 1262.16,683.943 1262.72,683.943 1263.28,683.943 1263.84,683.943 1264.4,683.943 1264.96,683.943 1265.52,683.943 1266.08,683.943 1266.63,683.943 1267.19,683.943 1267.75,683.943 1268.31,683.943 1268.87,683.943 1269.43,683.943 1269.99,683.943 1270.55,683.943 1271.11,683.943 1271.67,683.943 1272.23,683.943 1272.79,683.943 1273.35,683.943 1273.91,683.943 1274.46,683.943 1275.02,683.943 1275.58,683.943 1276.14,683.943 1276.7,683.943 1277.26,683.943 1277.82,683.943 1278.38,683.943 1278.94,683.943 1279.5,683.943 1280.06,683.943 1280.62,683.943 1281.18,683.943 1281.73,683.943 1282.29,683.943 1282.85,683.943 1283.41,683.943 1283.97,683.943 1284.53,683.943 1285.09,683.943 1285.65,683.943 1286.21,683.943 1286.77,683.943 1287.33,683.943 1287.89,683.943 1288.45,683.943 1289,683.943 1289.56,683.943 1290.12,683.943 1290.68,683.943 1291.24,683.943 1291.8,683.943 1292.36,683.943 1292.92,683.943 1293.48,683.943 1294.04,683.943 1294.6,683.943 1295.16,683.943 1295.72,683.943 1296.28,683.943 1296.83,683.943 1297.39,683.943 1297.95,683.943 1298.51,683.943 1299.07,683.943 1299.63,683.943 1300.19,683.943 1300.75,683.943 1301.31,683.943 1301.87,683.943 1302.43,683.943 1302.99,683.943 1303.55,683.943 1304.1,683.943 1304.66,683.943 1305.22,683.943 1305.78,683.943 1306.34,683.943 1306.9,683.943 1307.46,683.943 1308.02,683.943 1308.58,683.943 1309.14,683.943 1309.7,683.943 1310.26,683.943 1310.82,683.943 1311.38,683.943 1311.93,683.943 1312.49,683.943 1313.05,683.943 1313.61,683.943 1314.17,683.943 1314.73,683.943 1315.29,683.943 1315.85,683.943 1316.41,683.943 1316.97,683.943 1317.53,683.943 1318.09,683.943 1318.65,683.943 1319.2,683.943 1319.76,683.943 1320.32,683.943 1320.88,683.943 1321.44,683.943 1322,683.943 1322.56,683.943 1323.12,683.943 1323.68,683.943 1324.24,683.943 1324.8,683.943 1325.36,683.943 1325.92,683.943 1326.47,683.943 1327.03,683.943 1327.59,683.943 1328.15,683.943 1328.71,683.943 1329.27,683.943 1329.83,683.943 1330.39,683.943 1330.95,683.943 1331.51,683.943 1332.07,683.943 1332.63,683.943 1333.19,683.943 1333.75,683.943 1334.3,683.943 1334.86,683.943 1335.42,683.943 1335.98,683.943 1336.54,683.943 1337.1,683.943 1337.66,683.943 1338.22,683.943 1338.78,683.943 1339.34,683.943 1339.9,683.943 1340.46,683.943 1341.02,683.943 1341.57,683.943 1342.13,683.943 1342.69,683.943 1343.25,683.943 1343.81,683.943 1344.37,683.943 1344.93,683.943 1345.49,683.943 1346.05,683.943 1346.61,683.943 1347.17,683.943 1347.73,683.943 1348.29,683.943 1348.84,683.943 1349.4,683.943 1349.96,683.943 1350.52,683.943 1351.08,683.943 1351.64,683.943 1352.2,683.943 1352.76,683.943 1353.32,683.943 1353.88,683.943 1354.44,683.943 1355,683.943 1355.56,683.943 1356.12,683.943 1356.67,683.943 1357.23,683.943 1357.79,683.943 1358.35,683.943 1358.91,683.943 1359.47,683.943 1360.03,683.943 1360.59,683.943 1361.15,683.943 1361.71,683.943 1362.27,683.943 1362.83,683.943 1363.39,683.943 1363.94,683.943 1364.5,683.943 1365.06,683.943 1365.62,683.943 1366.18,683.943 1366.74,683.943 1367.3,683.943 1367.86,683.943 1368.42,683.943 1368.98,683.943 1369.54,683.943 1370.1,683.943 1370.66,683.943 1371.21,683.943 1371.77,683.943 1372.33,683.943 1372.89,683.943 1373.45,683.943 1374.01,683.943 1374.57,683.943 1375.13,683.943 1375.69,683.943 1376.25,683.943 1376.81,683.943 1377.37,683.943 1377.93,683.943 1378.49,683.943 1379.04,683.943 1379.6,683.943 1380.16,683.943 1380.72,683.943 1381.28,683.943 1381.84,683.943 1382.4,683.943 1382.96,683.943 1383.52,683.943 1384.08,683.943 1384.64,683.943 1385.2,683.943 1385.76,683.943 1386.31,683.943 1386.87,683.943 1387.43,683.943 1387.99,683.943 1388.55,683.943 1389.11,683.943 1389.67,683.943 1390.23,683.943 1390.79,683.943 1391.35,683.943 1391.91,683.943 1392.47,683.943 1393.03,683.943 1393.58,683.943 1394.14,683.943 1394.7,683.943 1395.26,683.943 1395.82,683.943 1396.38,683.943 1396.94,683.943 1397.5,683.943 1398.06,683.943 1398.62,683.943 1399.18,683.943 1399.74,683.943 1400.3,683.943 1400.86,683.943 1401.41,683.943 1401.97,683.943 1402.53,683.943 1403.09,683.943 1403.65,683.943 1404.21,683.943 1404.77,683.943 1405.33,683.943 1405.89,683.943 1406.45,683.943 1407.01,683.943 1407.57,683.943 1408.13,683.943 1408.68,683.943 1409.24,683.943 1409.8,683.943 1410.36,683.943 1410.92,683.943 1411.48,683.943 1412.04,683.943 1412.6,683.943 1413.16,683.943 1413.72,683.943 1414.28,683.943 1414.84,683.943 1415.4,683.943 1415.95,683.943 1416.51,683.943 1417.07,683.943 1417.63,683.943 1418.19,683.943 1418.75,683.943 1419.31,683.943 1419.87,683.943 1420.43,683.943 1420.99,683.943 1421.55,683.943 1422.11,683.943 1422.67,683.943 1423.23,683.943 1423.78,683.943 1424.34,683.943 1424.9,683.943 1425.46,683.943 1426.02,683.943 1426.58,683.943 1427.14,683.943 1427.7,683.943 1428.26,683.943 1428.82,683.943 1429.38,683.943 1429.94,683.943 1430.5,683.943 1431.05,683.943 1431.61,683.943 1432.17,683.943 1432.73,683.943 1433.29,683.943 1433.85,683.943 1434.41,683.943 1434.97,683.943 1435.53,683.943 1436.09,683.943 1436.65,683.943 1437.21,683.943 1437.77,683.943 1438.33,683.943 1438.88,683.943 1439.44,683.943 1440,683.943 1440.56,683.943 1441.12,683.943 1441.68,683.943 1442.24,683.943 1442.8,683.943 1443.36,683.943 1443.92,683.943 1444.48,683.943 1445.04,683.943 1445.6,683.943 1446.15,683.943 1446.71,683.943 1447.27,683.943 1447.83,683.943 1448.39,683.943 1448.95,683.943 1449.51,683.943 1450.07,683.943 1450.63,683.943 1451.19,683.943 1451.75,683.943 1452.31,683.943 1452.87,683.943 1453.42,683.943 1453.98,683.943 1454.54,683.943 1455.1,683.943 1455.66,683.943 1456.22,683.943 1456.78,683.943 1457.34,683.943 1457.9,683.943 1458.46,683.943 1459.02,683.943 1459.58,683.943 1460.14,683.943 1460.7,683.943 1461.25,683.943 1461.81,683.943 1462.37,683.943 1462.93,683.943 1463.49,683.943 1464.05,683.943 1464.61,683.943 1465.17,683.943 1465.73,683.943 1466.29,683.943 1466.85,683.943 1467.41,683.943 1467.97,683.943 1468.52,683.943 1469.08,683.943 1469.64,683.943 1470.2,683.943 1470.76,683.943 1471.32,683.943 1471.88,683.943 1472.44,683.943 1473,683.943 1473.56,683.943 1474.12,683.943 1474.68,683.943 1475.24,683.943 1475.79,683.943 1476.35,683.943 1476.91,683.943 1477.47,683.943 1478.03,683.943 1478.59,683.943 1479.15,683.943 1479.71,683.943 1480.27,683.943 1480.83,683.943 1481.39,683.943 1481.95,683.943 1482.51,683.943 1483.07,683.943 1483.62,683.943 1484.18,683.943 1484.74,683.943 1485.3,683.943 1485.86,683.943 1486.42,683.943 1486.98,683.943 1487.54,683.943 1488.1,683.943 1488.66,683.943 1489.22,683.943 1489.78,683.943 1490.34,683.943 1490.89,683.943 1491.45,683.943 1492.01,683.943 1492.57,683.943 1493.13,683.943 1493.69,683.943 1494.25,683.943 1494.81,683.943 1495.37,683.943 1495.93,683.943 1496.49,683.943 1497.05,683.943 1497.61,683.943 1498.16,683.943 1498.72,683.943 1499.28,683.943 1499.84,683.943 1500.4,683.943 1500.96,683.943 1501.52,683.943 1502.08,683.943 1502.64,683.943 1503.2,683.943 1503.76,683.943 1504.32,683.943 1504.88,683.943 1505.44,683.943 1505.99,683.943 1506.55,683.943 1507.11,683.943 1507.67,683.943 1508.23,683.943 1508.79,683.943 1509.35,683.943 1509.91,683.943 1510.47,683.943 1511.03,683.943 1511.59,683.943 1512.15,683.943 1512.71,683.943 1513.26,683.943 1513.82,683.943 1514.38,683.943 1514.94,683.943 1515.5,683.943 1516.06,683.943 1516.62,683.943 1517.18,683.943 1517.74,683.943 1518.3,683.943 1518.86,683.943 1519.42,683.943 1519.98,683.943 1520.53,683.943 1521.09,683.943 1521.65,683.943 1522.21,683.943 1522.77,683.943 1523.33,683.943 1523.89,683.943 1524.45,683.943 1525.01,683.943 1525.57,683.943 1526.13,683.943 1526.69,683.943 1527.25,683.943 1527.81,683.943 1528.36,683.943 1528.92,683.943 1529.48,683.943 1530.04,683.943 1530.6,683.943 1531.16,683.943 1531.72,683.943 1532.28,683.943 1532.84,683.943 1533.4,683.943 1533.96,683.943 1534.52,683.943 1535.08,683.943 1535.63,683.943 1536.19,683.943 1536.75,683.943 1537.31,683.943 1537.87,683.943 1538.43,683.943 1538.99,683.943 1539.55,683.943 1540.11,683.943 1540.67,683.943 1541.23,683.943 1541.79,683.943 1542.35,683.943 1542.9,683.943 1543.46,683.943 1544.02,683.943 1544.58,683.943 1545.14,683.943 1545.7,683.943 1546.26,683.943 1546.82,683.943 1547.38,683.943 1547.94,683.943 1548.5,683.943 1549.06,683.943 1549.62,683.943 1550.18,683.943 1550.73,683.943 1551.29,683.943 1551.85,683.943 1552.41,683.943 1552.97,683.943 1553.53,683.943 1554.09,683.943 1554.65,683.943 1555.21,683.943 1555.77,683.943 1556.33,683.943 1556.89,683.943 1557.45,683.943 1558,683.943 1558.56,683.943 1559.12,683.943 1559.68,683.943 1560.24,683.943 1560.8,683.943 1561.36,683.943 1561.92,683.943 1562.48,683.943 1563.04,683.943 1563.6,683.943 1564.16,683.943 1564.72,683.943 1565.28,683.943 1565.83,683.943 1566.39,683.943 1566.95,683.943 1567.51,683.943 1568.07,683.943 1568.63,683.943 1569.19,683.943 1569.75,683.943 1570.31,683.943 1570.87,683.943 1571.43,683.943 1571.99,683.943 1572.55,683.943 1573.1,683.943 1573.66,683.943 1574.22,683.943 1574.78,683.943 1575.34,683.943 1575.9,683.943 1576.46,683.943 1577.02,683.943 1577.58,683.943 1578.14,683.943 1578.7,683.943 1579.26,683.943 1579.82,683.943 1580.37,683.943 1580.93,683.943 1581.49,683.943 1582.05,683.943 1582.61,683.943 1583.17,683.943 1583.73,683.943 1584.29,683.943 1584.85,683.943 1585.41,683.943 1585.97,683.943 1586.53,683.943 1587.09,683.943 1587.65,683.943 1588.2,683.943 1588.76,683.943 1589.32,683.943 1589.88,683.943 1590.44,683.943 1591,683.943 1591.56,683.943 1592.12,683.943 1592.68,683.943 1593.24,683.943 1593.8,683.943 1594.36,683.943 1594.92,683.943 1595.47,683.943 1596.03,683.943 1596.59,683.943 1597.15,683.943 1597.71,683.943 1598.27,683.943 1598.83,683.943 1599.39,683.943 1599.95,683.943 1600.51,683.943 1601.07,683.943 1601.63,683.943 1602.19,683.943 1602.74,683.943 1603.3,683.943 1603.86,683.943 1604.42,683.943 1604.98,683.943 1605.54,683.943 1606.1,683.943 1606.66,683.943 1607.22,683.943 1607.78,683.943 1608.34,683.943 1608.9,683.943 1609.46,683.943 1610.02,683.943 1610.57,683.943 1611.13,683.943 1611.69,683.943 1612.25,683.943 1612.81,683.943 1613.37,683.943 1613.93,683.943 1614.49,683.943 1615.05,683.943 1615.61,683.943 1616.17,683.943 1616.73,683.943 1617.29,683.943 1617.84,683.943 1618.4,683.943 1618.96,683.943 1619.52,683.943 1620.08,683.943 1620.64,683.943 1621.2,683.943 1621.76,683.943 1622.32,683.943 1622.88,683.943 1623.44,683.943 1624,683.943 1624.56,683.943 1625.11,683.943 1625.67,683.943 1626.23,683.943 1626.79,683.943 1627.35,683.943 1627.91,683.943 1628.47,683.943 1629.03,683.943 1629.59,683.943 1630.15,683.943 1630.71,683.943 1631.27,683.943 1631.83,683.943 1632.39,683.943 1632.94,683.943 1633.5,683.943 1634.06,683.943 1634.62,683.943 1635.18,683.943 1635.74,683.943 1636.3,683.943 1636.86,683.943 1637.42,683.943 1637.98,683.943 1638.54,683.943 1639.1,683.943 1639.66,683.943 1640.21,683.943 1640.77,683.943 1641.33,683.943 1641.89,683.943 1642.45,683.943 1643.01,683.943 1643.57,683.943 1644.13,683.943 1644.69,683.943 1645.25,683.943 1645.81,683.943 1646.37,683.943 1646.93,683.943 1647.48,683.943 1648.04,683.943 1648.6,683.943 1649.16,683.943 1649.72,683.943 1650.28,683.943 1650.84,683.943 1651.4,683.943 1651.96,683.943 1652.52,683.943 1653.08,683.943 1653.64,683.943 1654.2,683.943 1654.76,683.943 1655.31,683.943 1655.87,683.943 1656.43,683.943 1656.99,683.943 1657.55,683.943 1658.11,683.943 1658.67,683.943 1659.23,683.943 1659.79,683.943 1660.35,683.943 1660.91,683.943 1661.47,683.943 1662.03,683.943 1662.58,683.943 1663.14,683.943 1663.7,683.943 1664.26,683.943 1664.82,683.943 1665.38,683.943 1665.94,683.943 1666.5,683.943 1667.06,683.943 1667.62,683.943 1668.18,683.943 1668.74,683.943 1669.3,683.943 1669.85,683.943 1670.41,683.943 1670.97,683.943 1671.53,683.943 1672.09,683.943 1672.65,683.943 1673.21,683.943 1673.77,683.943 1674.33,683.943 1674.89,683.943 1675.45,683.943 1676.01,683.943 1676.57,683.943 1677.13,683.943 1677.68,683.943 1678.24,683.943 1678.8,683.943 1679.36,683.943 1679.92,683.943 1680.48,683.943 1681.04,683.943 1681.6,683.943 1682.16,683.943 1682.72,683.943 1683.28,683.943 1683.84,683.943 1684.4,683.943 1684.95,683.943 1685.51,683.943 1686.07,683.943 1686.63,683.943 1687.19,683.943 1687.75,683.943 1688.31,683.943 1688.87,683.943 1689.43,683.943 1689.99,683.943 1690.55,683.943 1691.11,683.943 1691.67,683.943 1692.23,683.943 1692.78,683.943 1693.34,683.943 1693.9,683.943 1694.46,683.943 1695.02,683.943 1695.58,683.943 1696.14,683.943 1696.7,683.943 1697.26,683.943 1697.82,683.943 1698.38,683.943 1698.94,683.943 1699.5,683.943 1700.05,683.943 1700.61,683.943 1701.17,683.943 1701.73,683.943 1702.29,683.943 1702.85,683.943 1703.41,683.943 1703.97,683.943 1704.53,683.943 1705.09,683.943 1705.65,683.943 1706.21,683.943 1706.77,683.943 1707.32,683.943 1707.88,683.943 1708.44,683.943 1709,683.943 1709.56,683.943 1710.12,683.943 1710.68,683.943 1711.24,683.943 1711.8,683.943 1712.36,683.943 1712.92,683.943 1713.48,683.943 1714.04,683.943 1714.6,683.943 1715.15,683.943 1715.71,683.943 1716.27,683.943 1716.83,683.943 1717.39,683.943 1717.95,683.943 1718.51,683.943 1719.07,683.943 1719.63,683.943 1720.19,683.943 1720.75,683.943 1721.31,683.943 1721.87,683.943 1722.42,683.943 1722.98,683.943 1723.54,683.943 1724.1,683.943 1724.66,683.943 1725.22,683.943 1725.78,683.943 1726.34,683.943 1726.9,683.943 1727.46,683.943 1728.02,683.943 1728.58,683.943 1729.14,683.943 1729.69,683.943 1730.25,683.943 1730.81,683.943 1731.37,683.943 1731.93,683.943 1732.49,683.943 1733.05,683.943 1733.61,683.943 1734.17,683.943 1734.73,683.943 1735.29,683.943 1735.85,683.943 1736.41,683.943 1736.97,683.943 1737.52,683.943 1738.08,683.943 1738.64,683.943 1739.2,683.943 1739.76,683.943 1740.32,683.943 1740.88,683.943 1741.44,683.943 1742,683.943 1742.56,683.943 1743.12,683.943 1743.68,683.943 1744.24,683.943 1744.79,683.943 1745.35,683.943 1745.91,683.943 1746.47,683.943 1747.03,683.943 1747.59,683.943 1748.15,683.943 1748.71,683.943 1749.27,683.943 1749.83,683.943 1750.39,683.943 1750.95,683.943 1751.51,683.943 1752.06,683.943 1752.62,683.943 1753.18,683.943 1753.74,683.943 1754.3,683.943 1754.86,683.943 1755.42,683.943 1755.98,683.943 1756.54,683.943 1757.1,683.943 1757.66,683.943 1758.22,683.943 1758.78,683.943 1759.34,683.943 1759.89,683.943 1760.45,683.943 1761.01,683.943 1761.57,683.943 1762.13,683.943 1762.69,683.943 1763.25,683.943 1763.81,683.943 1764.37,683.943 1764.93,683.943 1765.49,683.943 1766.05,683.943 1766.61,683.943 1767.16,683.943 1767.72,683.943 1768.28,683.943 1768.84,683.943 1769.4,683.943 1769.96,683.943 1770.52,683.943 1771.08,683.943 1771.64,683.943 1772.2,683.943 1772.76,683.943 1773.32,683.943 1773.88,683.943 1774.43,683.943 1774.99,683.943 1775.55,683.943 1776.11,683.943 1776.67,683.943 1777.23,683.943 1777.79,683.943 1778.35,683.943 1778.91,683.943 1779.47,683.943 1780.03,683.943 1780.59,683.943 1781.15,683.943 1781.71,683.943 1782.26,683.943 1782.82,683.943 1783.38,683.943 1783.94,683.943 1784.5,683.943 1785.06,683.943 1785.62,683.943 1786.18,683.943 1786.74,683.943 1787.3,683.943 1787.86,683.943 1788.42,683.943 1788.98,683.943 1789.53,683.943 1790.09,683.943 1790.65,683.943 1791.21,683.943 1791.77,683.943 1792.33,683.943 1792.89,683.943 1793.45,683.943 1794.01,683.943 1794.57,683.943 1795.13,683.943 1795.69,683.943 1796.25,683.943 1796.8,683.943 1797.36,683.943 1797.92,683.943 1798.48,683.943 1799.04,683.943 1799.6,683.943 1800.16,683.943 1800.72,683.943 1801.28,683.943 1801.84,683.943 1802.4,683.943 1802.96,683.943 1803.52,683.943 1804.08,683.943 1804.63,683.943 1805.19,683.943 1805.75,683.943 1806.31,683.943 1806.87,683.943 1807.43,683.943 1807.99,683.943 1808.55,683.943 1809.11,683.943 1809.67,683.943 1810.23,683.943 1810.79,683.943 1811.35,683.943 1811.9,683.943 1812.46,683.943 1813.02,683.943 1813.58,683.943 1814.14,683.943 1814.7,683.943 1815.26,683.943 1815.82,683.943 1816.38,683.943 1816.94,683.943 1817.5,683.943 1818.06,683.943 1818.62,683.943 1819.18,683.943 1819.73,683.943 1820.29,683.943 1820.85,683.943 1821.41,683.943 1821.97,683.943 1822.53,683.943 1823.09,683.943 1823.65,683.943 1824.21,683.943 1824.77,683.943 1825.33,683.943 1825.89,683.943 1826.45,683.943 1827,683.943 1827.56,683.943 1828.12,683.943 1828.68,683.943 1829.24,683.943 1829.8,683.943 1830.36,683.943 1830.92,683.943 1831.48,683.943 1832.04,683.943 1832.6,683.943 1833.16,683.943 1833.72,683.943 1834.27,683.943 1834.83,683.943 1835.39,683.943 1835.95,683.943 1836.51,683.943 1837.07,683.943 1837.63,683.943 1838.19,683.943 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.026688315939104 ± 0.0183192752058689\nProjected Energy: -4.016888459487259 ± (0.007112715085527022, 0.007505658030434681)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.472545</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4167e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.7312e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.398e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.362e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.535e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.885e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space. This model can define both purely real as well as complex Hamiltonian.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor purely real Hamiltonian\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nFor complex Hamiltonian\n\nFor θ-twisted -> Number \"θ\"\n\nwhere,\n\na_M+1 = exp(-iota θ) a_1\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, boundary_condition)\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted, hard-wall and θ-twisted.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\nFor θ-twisted -> Number \"θ\"\n\nwhere,\n\na_M+1 = exp(-iota θ) a_1\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, :twisted)\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, :hard_wall)\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, π/4)\n(BoseFS{2,3}(2, 0, 0), 1.0000000000000002 + 1.0im)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
