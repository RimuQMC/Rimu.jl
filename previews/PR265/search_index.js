var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip410\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip410)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip411\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip410)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip412\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip410)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.82 2211.02,1260.82 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.49 2211.02,1003.49 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.167 2211.02,746.167 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.84 2211.02,488.84 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.513 2211.02,231.513 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.82 423.181,1260.82 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.49 423.181,1003.49 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.167 423.181,746.167 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.84 423.181,488.84 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.513 423.181,231.513 \"/>\n<path clip-path=\"url(#clip410)\" d=\"M356.339 1246.62 Q352.728 1246.62 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.96 350.899 1271.53 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.53 Q363.608 1267.96 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.62 356.339 1246.62 M356.339 1242.92 Q362.149 1242.92 365.205 1247.52 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.58 365.205 1274.19 Q362.149 1278.77 356.339 1278.77 Q350.529 1278.77 347.45 1274.19 Q344.395 1269.58 344.395 1260.86 Q344.395 1252.11 347.45 1247.52 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M290.043 1016.84 L306.363 1016.84 L306.363 1020.77 L284.418 1020.77 L284.418 1016.84 Q287.08 1014.08 291.664 1009.46 Q296.27 1004.8 297.451 1003.46 Q299.696 1000.94 300.576 999.2 Q301.478 997.441 301.478 995.751 Q301.478 992.997 299.534 991.261 Q297.613 989.525 294.511 989.525 Q292.312 989.525 289.858 990.288 Q287.427 991.052 284.65 992.603 L284.65 987.881 Q287.474 986.747 289.927 986.168 Q292.381 985.589 294.418 985.589 Q299.789 985.589 302.983 988.275 Q306.177 990.96 306.177 995.45 Q306.177 997.58 305.367 999.501 Q304.58 1001.4 302.474 1003.99 Q301.895 1004.66 298.793 1007.88 Q295.691 1011.08 290.043 1016.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M316.224 986.214 L334.58 986.214 L334.58 990.15 L320.506 990.15 L320.506 998.622 Q321.524 998.275 322.543 998.112 Q323.562 997.927 324.58 997.927 Q330.367 997.927 333.747 1001.1 Q337.126 1004.27 337.126 1009.69 Q337.126 1015.27 333.654 1018.37 Q330.182 1021.45 323.862 1021.45 Q321.687 1021.45 319.418 1021.08 Q317.173 1020.7 314.765 1019.96 L314.765 1015.27 Q316.849 1016.4 319.071 1016.95 Q321.293 1017.51 323.77 1017.51 Q327.774 1017.51 330.112 1015.4 Q332.45 1013.3 332.45 1009.69 Q332.45 1006.08 330.112 1003.97 Q327.774 1001.86 323.77 1001.86 Q321.895 1001.86 320.02 1002.28 Q318.168 1002.7 316.224 1003.58 L316.224 986.214 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M356.339 989.293 Q352.728 989.293 350.899 992.858 Q349.094 996.4 349.094 1003.53 Q349.094 1010.64 350.899 1014.2 Q352.728 1017.74 356.339 1017.74 Q359.973 1017.74 361.779 1014.2 Q363.608 1010.64 363.608 1003.53 Q363.608 996.4 361.779 992.858 Q359.973 989.293 356.339 989.293 M356.339 985.589 Q362.149 985.589 365.205 990.196 Q368.284 994.779 368.284 1003.53 Q368.284 1012.26 365.205 1016.86 Q362.149 1021.45 356.339 1021.45 Q350.529 1021.45 347.45 1016.86 Q344.395 1012.26 344.395 1003.53 Q344.395 994.779 347.45 990.196 Q350.529 985.589 356.339 985.589 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M286.062 728.887 L304.418 728.887 L304.418 732.822 L290.344 732.822 L290.344 741.294 Q291.363 740.947 292.381 740.785 Q293.4 740.6 294.418 740.6 Q300.205 740.6 303.585 743.771 Q306.964 746.943 306.964 752.359 Q306.964 757.938 303.492 761.04 Q300.02 764.118 293.701 764.118 Q291.525 764.118 289.256 763.748 Q287.011 763.378 284.603 762.637 L284.603 757.938 Q286.687 759.072 288.909 759.628 Q291.131 760.183 293.608 760.183 Q297.613 760.183 299.951 758.077 Q302.288 755.97 302.288 752.359 Q302.288 748.748 299.951 746.642 Q297.613 744.535 293.608 744.535 Q291.733 744.535 289.858 744.952 Q288.006 745.369 286.062 746.248 L286.062 728.887 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M326.177 731.966 Q322.566 731.966 320.737 735.531 Q318.932 739.072 318.932 746.202 Q318.932 753.308 320.737 756.873 Q322.566 760.415 326.177 760.415 Q329.811 760.415 331.617 756.873 Q333.446 753.308 333.446 746.202 Q333.446 739.072 331.617 735.531 Q329.811 731.966 326.177 731.966 M326.177 728.262 Q331.987 728.262 335.043 732.869 Q338.122 737.452 338.122 746.202 Q338.122 754.929 335.043 759.535 Q331.987 764.118 326.177 764.118 Q320.367 764.118 317.288 759.535 Q314.233 754.929 314.233 746.202 Q314.233 737.452 317.288 732.869 Q320.367 728.262 326.177 728.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M356.339 731.966 Q352.728 731.966 350.899 735.531 Q349.094 739.072 349.094 746.202 Q349.094 753.308 350.899 756.873 Q352.728 760.415 356.339 760.415 Q359.973 760.415 361.779 756.873 Q363.608 753.308 363.608 746.202 Q363.608 739.072 361.779 735.531 Q359.973 731.966 356.339 731.966 M356.339 728.262 Q362.149 728.262 365.205 732.869 Q368.284 737.452 368.284 746.202 Q368.284 754.929 365.205 759.535 Q362.149 764.118 356.339 764.118 Q350.529 764.118 347.45 759.535 Q344.395 754.929 344.395 746.202 Q344.395 737.452 347.45 732.869 Q350.529 728.262 356.339 728.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M284.835 471.56 L307.057 471.56 L307.057 473.551 L294.511 506.12 L289.627 506.12 L301.432 475.495 L284.835 475.495 L284.835 471.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M316.224 471.56 L334.58 471.56 L334.58 475.495 L320.506 475.495 L320.506 483.967 Q321.524 483.62 322.543 483.458 Q323.562 483.273 324.58 483.273 Q330.367 483.273 333.747 486.444 Q337.126 489.615 337.126 495.032 Q337.126 500.611 333.654 503.712 Q330.182 506.791 323.862 506.791 Q321.687 506.791 319.418 506.421 Q317.173 506.05 314.765 505.31 L314.765 500.611 Q316.849 501.745 319.071 502.3 Q321.293 502.856 323.77 502.856 Q327.774 502.856 330.112 500.75 Q332.45 498.643 332.45 495.032 Q332.45 491.421 330.112 489.314 Q327.774 487.208 323.77 487.208 Q321.895 487.208 320.02 487.625 Q318.168 488.041 316.224 488.921 L316.224 471.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M356.339 474.639 Q352.728 474.639 350.899 478.203 Q349.094 481.745 349.094 488.875 Q349.094 495.981 350.899 499.546 Q352.728 503.087 356.339 503.087 Q359.973 503.087 361.779 499.546 Q363.608 495.981 363.608 488.875 Q363.608 481.745 361.779 478.203 Q359.973 474.639 356.339 474.639 M356.339 470.935 Q362.149 470.935 365.205 475.541 Q368.284 480.125 368.284 488.875 Q368.284 497.601 365.205 502.208 Q362.149 506.791 356.339 506.791 Q350.529 506.791 347.45 502.208 Q344.395 497.601 344.395 488.875 Q344.395 480.125 347.45 475.541 Q350.529 470.935 356.339 470.935 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M256.664 244.857 L264.303 244.857 L264.303 218.492 L255.992 220.159 L255.992 215.899 L264.256 214.233 L268.932 214.233 L268.932 244.857 L276.571 244.857 L276.571 248.793 L256.664 248.793 L256.664 244.857 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M296.015 217.311 Q292.404 217.311 290.576 220.876 Q288.77 224.418 288.77 231.547 Q288.77 238.654 290.576 242.219 Q292.404 245.76 296.015 245.76 Q299.65 245.76 301.455 242.219 Q303.284 238.654 303.284 231.547 Q303.284 224.418 301.455 220.876 Q299.65 217.311 296.015 217.311 M296.015 213.608 Q301.826 213.608 304.881 218.214 Q307.96 222.797 307.96 231.547 Q307.96 240.274 304.881 244.881 Q301.826 249.464 296.015 249.464 Q290.205 249.464 287.127 244.881 Q284.071 240.274 284.071 231.547 Q284.071 222.797 287.127 218.214 Q290.205 213.608 296.015 213.608 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M326.177 217.311 Q322.566 217.311 320.737 220.876 Q318.932 224.418 318.932 231.547 Q318.932 238.654 320.737 242.219 Q322.566 245.76 326.177 245.76 Q329.811 245.76 331.617 242.219 Q333.446 238.654 333.446 231.547 Q333.446 224.418 331.617 220.876 Q329.811 217.311 326.177 217.311 M326.177 213.608 Q331.987 213.608 335.043 218.214 Q338.122 222.797 338.122 231.547 Q338.122 240.274 335.043 244.881 Q331.987 249.464 326.177 249.464 Q320.367 249.464 317.288 244.881 Q314.233 240.274 314.233 231.547 Q314.233 222.797 317.288 218.214 Q320.367 213.608 326.177 213.608 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M356.339 217.311 Q352.728 217.311 350.899 220.876 Q349.094 224.418 349.094 231.547 Q349.094 238.654 350.899 242.219 Q352.728 245.76 356.339 245.76 Q359.973 245.76 361.779 242.219 Q363.608 238.654 363.608 231.547 Q363.608 224.418 361.779 220.876 Q359.973 217.311 356.339 217.311 M356.339 213.608 Q362.149 213.608 365.205 218.214 Q368.284 222.797 368.284 231.547 Q368.284 240.274 365.205 244.881 Q362.149 249.464 356.339 249.464 Q350.529 249.464 347.45 244.881 Q344.395 240.274 344.395 231.547 Q344.395 222.797 347.45 218.214 Q350.529 213.608 356.339 213.608 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip412)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.513 4017.76,231.513 \"/>\n<polyline clip-path=\"url(#clip412)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1249.42 456.554,1249.36 457.123,1249.21 457.691,1248.96 458.259,1248.65 458.828,1247.25 459.396,1246.78 459.964,1246.29 460.533,1245.76 461.101,1245.11 461.669,1244.41 462.238,1243.62 462.806,1242.75 463.375,1241.79 463.943,1240.74 464.511,1239.56 465.08,1238.31 465.648,1235.91 466.216,1234.44 466.785,1232.83 467.353,1231.11 467.921,1229.25 468.49,1227.26 469.058,1225.11 469.626,1221.75 470.195,1218.25 470.763,1214.57 471.331,1210.73 471.9,1206.74 472.468,1203.54 473.036,1199.15 473.605,1195.49 474.173,1189.63 474.741,1185.48 475.31,1180.19 475.878,1173.64 476.446,1168.94 477.015,1163.97 477.583,1158.81 478.152,1152.42 478.72,1146.84 479.288,1141.14 479.857,1135.13 480.425,1126.82 480.993,1120.35 481.562,1112.71 482.13,1104.95 482.698,1097.02 483.267,1089.88 483.835,1082.51 484.403,1075.02 484.972,1067.2 485.54,1057.23 486.108,1047.14 486.677,1038.96 487.245,1029.6 487.813,1020.15 488.382,1011.54 488.95,1001.82 489.518,988.918 490.087,980.095 490.655,971.03 491.224,961.037 491.792,951.832 492.36,939.393 492.929,928.141 493.497,917.834 494.065,908.43 494.634,894.864 495.202,884.442 495.77,871.881 496.339,860.625 496.907,850.346 497.475,835.906 498.044,825.795 498.612,815.616 499.18,804.563 499.749,793.459 500.317,783.474 500.885,773.423 501.454,762.54 502.022,753.665 502.59,743.881 503.159,734.172 503.727,724.524 504.295,713.871 504.864,705.386 505.432,694.782 506.001,685.457 506.569,674.152 507.137,665.187 507.706,655.268 508.274,646.278 508.842,635.412 509.411,626.787 509.979,618.279 510.547,611.001 511.116,602.697 511.684,591.497 512.252,581.634 512.821,572.861 513.389,563.309 513.957,553.041 514.526,545.092 515.094,539.441 515.662,532.701 516.231,526.278 516.799,520.778 517.367,514.23 517.936,505.887 518.504,498.865 519.072,492.948 519.641,487.259 520.209,480.326 520.778,472.666 521.346,468.309 521.914,462.798 522.483,457.708 523.051,451.55 523.619,446.599 524.188,438.626 524.756,434.156 525.324,428.404 525.893,424.107 526.461,418.978 527.029,414.821 527.598,408.584 528.166,405.637 528.734,404.729 529.303,401.742 529.871,397.809 530.439,393.806 531.008,393.046 531.576,389.149 532.144,382.977 532.713,377.161 533.281,372.585 533.85,369.338 534.418,366.942 534.986,364.616 535.555,362.216 536.123,359.847 536.691,357.535 537.26,353.525 537.828,349.401 538.396,347.495 538.965,345.51 539.533,343.571 540.101,339.577 540.67,337.711 541.238,337.098 541.806,336.049 542.375,334.347 542.943,332.433 543.511,329.282 544.08,326.577 544.648,323.927 545.216,322.466 545.785,317.786 546.353,313.493 546.921,313.51 547.49,312.253 548.058,309.805 548.627,307.459 549.195,307.237 549.763,304.841 550.332,304.662 550.9,303.212 551.468,301.932 552.037,301.796 552.605,297.432 553.173,295.355 553.742,292.588 554.31,290.746 554.878,288.807 555.447,289.075 556.015,289.275 556.583,287.589 557.152,284.92 557.72,284.343 558.288,283.507 558.857,282.768 559.425,281.16 559.993,280.626 560.562,278.719 561.13,278.261 561.698,277.776 562.267,278.039 562.835,275.191 563.404,274.783 563.972,272.293 564.54,269.654 565.109,267.461 565.677,268.628 566.245,267.43 566.814,267.204 567.382,267.038 567.95,267.823 568.519,266.413 569.087,266.145 569.655,264.623 570.224,264.618 570.792,264.375 571.36,264.425 571.929,264.014 572.497,262.704 573.065,264.539 573.634,264.212 574.202,264.773 574.77,266.369 575.339,263.602 575.907,264.281 576.476,263.786 577.044,263.182 577.612,261.806 578.181,260.265 578.749,261.12 579.317,258.826 579.886,256.418 580.454,257.073 581.022,257.718 581.591,257.321 582.159,257.08 582.727,255.565 583.296,255.403 583.864,256.152 584.432,254.584 585.001,251.125 585.569,250.255 586.137,249.21 586.706,248.359 587.274,247.584 587.842,245.775 588.411,245.192 588.979,245.288 589.547,247.549 590.116,248.909 590.684,247.738 591.253,245.778 591.821,244.862 592.389,243.053 592.958,244.369 593.526,245.564 594.094,246.647 594.663,247.709 595.231,245.598 595.799,244.73 596.368,245.002 596.936,242.155 597.504,243.471 598.073,242.754 598.641,241.969 599.209,242.423 599.778,244.914 600.346,241.108 600.914,238.301 601.483,238.745 602.051,237.04 602.619,237.789 603.188,238.489 603.756,237.977 604.325,237.437 604.893,238.104 605.461,237.499 606.03,238.014 606.598,237.796 607.166,241.517 607.735,240.705 608.303,240.039 608.871,240.417 609.44,239.79 610.008,242.188 610.576,243.367 611.145,243.64 611.713,242.734 612.281,240.884 612.85,240.062 613.418,239.525 613.986,238.674 614.555,237.987 615.123,237.588 615.691,236.029 616.26,237.422 616.828,237.753 617.396,237.135 617.965,235.429 618.533,235.001 619.102,237.836 619.67,238.316 620.238,237.682 620.807,238.432 621.375,240.834 621.943,241.999 622.512,241.148 623.08,242.46 623.648,243.584 624.217,243.499 624.785,243.34 625.353,242.195 625.922,241.283 626.49,241.442 627.058,242.69 627.627,242.554 628.195,239.374 628.763,240.503 629.332,242.669 629.9,241.48 630.468,241.64 631.037,242.612 631.605,240.414 632.173,239.467 632.742,238.582 633.31,239.867 633.879,240.999 634.447,240.098 635.015,240.187 635.584,240.112 636.152,239.228 636.72,240.518 637.289,241.485 637.857,241.442 638.425,241.236 638.994,240.887 639.562,242.725 640.13,244.632 640.699,244.49 641.267,243.027 641.835,243.952 642.404,244.63 642.972,245.254 643.54,245.779 644.109,245.166 644.677,244.678 645.245,242.951 645.814,243.701 646.382,245.352 646.951,243.785 647.519,243.476 648.087,243.188 648.656,240.704 649.224,239.306 649.792,240.11 650.361,240.823 650.929,238.374 651.497,237.402 652.066,236.296 652.634,234.403 653.202,235.706 653.771,234.767 654.339,234.856 654.907,235.035 655.476,234.413 656.044,233.608 656.612,233.833 657.181,233.031 657.749,234.289 658.317,234.641 658.886,236.666 659.454,236.801 660.022,235.929 660.591,235.916 661.159,237.92 661.728,236.735 662.296,234.5 662.864,234.502 663.433,235.943 664.001,233.119 664.569,232.613 665.138,229.984 665.706,231.737 666.274,230.236 666.843,230.775 667.411,232.223 667.979,231.645 668.548,232.28 669.116,232.436 669.684,232.736 670.253,232.116 670.821,231.494 671.389,232.894 671.958,233.226 672.526,233.221 673.094,233.794 673.663,234.264 674.231,234.453 674.799,234.745 675.368,233.019 675.936,234.276 676.505,233.455 677.073,236.891 677.641,239.11 678.21,238.696 678.778,239.427 679.346,237.073 679.915,233.937 680.483,235.201 681.051,236.323 681.62,237.611 682.188,235.421 682.756,233.227 683.325,232.422 683.893,232.695 684.461,233.1 685.03,234.476 685.598,234.565 686.166,233.499 686.735,233.72 687.303,234.09 687.871,234.122 688.44,233.459 689.008,233.421 689.577,234.595 690.145,235.753 690.713,237.832 691.282,237.667 691.85,236.546 692.418,235.214 692.987,237.332 693.555,236.516 694.123,235.473 694.692,235.302 695.26,234.538 695.828,232.443 696.397,233.698 696.965,233.916 697.533,233.086 698.102,233.313 698.67,230.258 699.238,231.612 699.807,232.073 700.375,232.339 700.943,232.462 701.512,233.751 702.08,232.909 702.648,233.307 703.217,231.525 703.785,233.923 704.354,234.179 704.922,234.415 705.49,231.318 706.059,233.765 706.627,232.901 707.195,233.386 707.764,232.482 708.332,233.688 708.9,233.893 709.469,235.139 710.037,234.108 710.605,234.223 711.174,235.456 711.742,238.545 712.31,237.237 712.879,235.167 713.447,236.495 714.015,238.401 714.584,238.143 715.152,239.235 715.72,236.982 716.289,237.991 716.857,240.001 717.425,237.537 717.994,236.264 718.562,235.131 719.131,230.999 719.699,233.484 720.267,233.599 720.836,233.504 721.404,234.806 721.972,233.735 722.541,233.783 723.109,233.831 723.677,232.742 724.246,234.873 724.814,234.905 725.382,237.872 725.951,238.685 726.519,239.213 727.087,237.676 727.656,235.251 728.224,236.214 728.792,238.071 729.361,237.796 729.929,237.261 730.497,238.245 731.066,237.808 731.634,238.55 732.203,238.399 732.771,237.064 733.339,236.818 733.908,236.275 734.476,235.968 735.044,234.816 735.613,236.745 736.181,236.518 736.749,236.423 737.318,239.277 737.886,237.63 738.454,236.31 739.023,236.047 739.591,233.689 740.159,232.454 740.728,233.359 741.296,235.547 741.864,234.35 742.433,235.27 743.001,233.326 743.569,233.229 744.138,233.218 744.706,232.328 745.274,232.191 745.843,229.985 746.411,230.011 746.98,230.173 747.548,230.501 748.116,231.711 748.685,231.714 749.253,232.72 749.821,234.76 750.39,233.713 750.958,233.596 751.526,235.625 752.095,235.388 752.663,233.148 753.231,232.29 753.8,232.33 754.368,233.289 754.936,232.106 755.505,233.108 756.073,232.979 756.641,232.851 757.21,234.725 757.778,235.8 758.346,235.567 758.915,236.386 759.483,236.103 760.052,234.593 760.62,234.493 761.188,234.285 761.757,232.077 762.325,232.036 762.893,232.099 763.462,230.09 764.03,230.222 764.598,230.468 765.167,229.594 765.735,229.989 766.303,232.388 766.872,233.615 767.44,231.33 768.008,232.492 768.577,231.352 769.145,230.515 769.713,231.779 770.282,230.763 770.85,230.033 771.418,230.092 771.987,229.319 772.555,230.633 773.123,230.755 773.692,230.815 774.26,230.767 774.829,232.912 775.397,231.972 775.965,233.324 776.534,234.402 777.102,234.138 777.67,233.068 778.239,233.964 778.807,233.092 779.375,229.868 779.944,230.07 780.512,228.373 781.08,229.506 781.649,231.723 782.217,232.738 782.785,233.638 783.354,233.538 783.922,233.345 784.49,233.397 785.059,231.301 785.627,227.247 786.195,229.735 786.764,229.861 787.332,231.208 787.9,231.472 788.469,232.678 789.037,232.966 789.606,230.047 790.174,228.397 790.742,229.788 791.311,230.178 791.879,230.701 792.447,230.858 793.016,230.091 793.584,229.136 794.152,230.52 794.721,230.611 795.289,231.947 795.857,232.133 796.426,232.105 796.994,232.05 797.562,231.117 798.131,229.36 798.699,232.599 799.267,232.656 799.836,232.83 800.404,233.11 800.972,233.045 801.541,235.264 802.109,236.172 802.678,233.793 803.246,233.93 803.814,233.814 804.383,235.699 804.951,233.449 805.519,231.424 806.088,229.379 806.656,228.499 807.224,228.637 807.793,228.948 808.361,230.391 808.929,230.683 809.498,228.845 810.066,230.156 810.634,230.436 811.203,232.702 811.771,230.942 812.339,230.194 812.908,228.286 813.476,225.643 814.044,224.268 814.613,225.835 815.181,227.476 815.749,229.986 816.318,231.38 816.886,228.305 817.455,228.77 818.023,228 818.591,228.474 819.16,229.032 819.728,230.421 820.296,231.74 820.865,231.945 821.433,232.184 822.001,231.48 822.57,232.54 823.138,233.504 823.706,234.579 824.275,234.506 824.843,232.52 825.411,236.397 825.98,234.996 826.548,236.012 827.116,237 827.685,235.47 828.253,235.552 828.821,234.471 829.39,234.564 829.958,233.557 830.526,230.686 831.095,229.752 831.663,228.86 832.232,229.054 832.8,228.536 833.368,228.833 833.937,229.989 834.505,229.218 835.073,230.568 835.642,232.973 836.21,232.082 836.778,231.106 837.347,232.396 837.915,231.599 838.483,231.001 839.052,231.279 839.62,231.319 840.188,232.814 840.757,231.973 841.325,231.239 841.893,232.496 842.462,230.475 843.03,231.019 843.598,231.307 844.167,233.796 844.735,232.732 845.304,231.983 845.872,229.268 846.44,229.672 847.009,230.921 847.577,232.982 848.145,234.292 848.714,233.153 849.282,234.218 849.85,235.395 850.419,235.328 850.987,237.216 851.555,237.219 852.124,234.817 852.692,235.706 853.26,235.557 853.829,234.265 854.397,234.093 854.965,234.111 855.534,232.944 856.102,231.863 856.67,230.001 857.239,231.277 857.807,230.332 858.375,230.465 858.944,230.613 859.512,231.753 860.081,231.725 860.649,230.83 861.217,230.163 861.786,230.575 862.354,230.888 862.922,231.12 863.491,232.482 864.059,232.438 864.627,233.44 865.196,232.587 865.764,231.509 866.332,230.37 866.901,231.318 867.469,231.47 868.037,228.375 868.606,227.531 869.174,227.653 869.742,227.016 870.311,230.516 870.879,230.95 871.447,234.197 872.016,234.237 872.584,233.238 873.152,233.35 873.721,233.446 874.289,233.534 874.858,235.782 875.426,235.575 875.994,234.249 876.563,235.134 877.131,233.172 877.699,232.974 878.268,235.282 878.836,237.124 879.404,237.812 879.973,240.471 880.541,238.796 881.109,238.525 881.678,237.148 882.246,238.806 882.814,239.339 883.383,238.945 883.951,238.726 884.519,237.398 885.088,235.776 885.656,236.599 886.224,236.479 886.793,234.938 887.361,235.469 887.93,235.051 888.498,234.906 889.066,231.898 889.635,234.014 890.203,235.919 890.771,234.573 891.34,236.245 891.908,235.79 892.476,235.518 893.045,234.451 893.613,235.254 894.181,234.031 894.75,232.769 895.318,231.54 895.886,231.509 896.455,229.42 897.023,228.502 897.591,229.744 898.16,230.928 898.728,231.872 899.296,233.057 899.865,233.841 900.433,233.701 901.001,233.399 901.57,233.316 902.138,229.156 902.707,231.488 903.275,233.521 903.843,234.424 904.412,234.483 904.98,235.322 905.548,235.076 906.117,234.726 906.685,235.568 907.253,236.27 907.822,236.88 908.39,238.471 908.958,238.842 909.527,237.348 910.095,234.9 910.663,233.601 911.232,233.404 911.8,232.041 912.368,232.923 912.937,230.726 913.505,230.632 914.073,230.706 914.642,229.861 915.21,229.822 915.779,228.922 916.347,232.143 916.915,232.233 917.484,230.209 918.052,231.318 918.62,232.279 919.189,230.029 919.757,229.944 920.325,229.011 920.894,230.058 921.462,229.228 922.03,231.554 922.599,231.368 923.167,231.388 923.735,232.499 924.304,234.588 924.872,234.51 925.44,236.206 926.009,236.837 926.577,236.428 927.145,235.905 927.714,234.511 928.282,234.267 928.85,237.373 929.419,237.015 929.987,237.557 930.556,236.969 931.124,236.357 931.692,235.9 932.261,234.598 932.829,230.276 933.397,232.31 933.966,231.877 934.534,230.915 935.102,229.734 935.671,228.809 936.239,226.949 936.807,225.921 937.376,227.381 937.944,226.578 938.512,226.919 939.081,229.148 939.649,230.14 940.217,230.06 940.786,231.05 941.354,230.832 941.922,229.767 942.491,231.872 943.059,230.84 943.627,231.912 944.196,232.764 944.764,231.75 945.333,230.565 945.901,231.699 946.469,233.621 947.038,233.451 947.606,233.263 948.174,233.085 948.743,232.814 949.311,232.554 949.879,232.418 950.448,232.159 951.016,231.833 951.584,230.752 952.153,231.911 952.721,230.943 953.289,231.07 953.858,230.019 954.426,229.858 954.994,229.776 955.563,231.944 956.131,227.61 956.699,227.878 957.268,229.108 957.836,229.067 958.405,230.25 958.973,231.29 959.541,231.248 960.11,230.107 960.678,230.264 961.246,228.179 961.815,230.497 962.383,235.828 962.951,234.348 963.52,235.25 964.088,232.79 964.656,230.563 965.225,228.483 965.793,229.698 966.361,228.871 966.93,229.093 967.498,229.126 968.066,229.158 968.635,229.147 969.203,230.223 969.771,231.254 970.34,230.21 970.908,232.46 971.476,232.201 972.045,230.945 972.613,230.804 973.182,231.004 973.75,229.967 974.318,227.803 974.887,227.858 975.455,228.063 976.023,227.974 976.592,229.152 977.16,228.283 977.728,229.381 978.297,228.675 978.865,227.839 979.433,226.9 980.002,226.998 980.57,229.36 981.138,228.392 981.707,227.678 982.275,230.062 982.843,229.22 983.412,229.449 983.98,229.658 984.548,232.889 985.117,232.671 985.685,232.762 986.253,231.87 986.822,234.074 987.39,235.055 987.959,233.993 988.527,235.917 989.095,235.577 989.664,234.082 990.232,234.94 990.8,233.748 991.369,234.416 991.937,233.191 992.505,233.113 993.074,233.154 993.642,233.264 994.21,233.189 994.779,232.15 995.347,233.188 995.915,232.947 996.484,231.924 997.052,232.993 997.62,230.865 998.189,230 998.757,230.358 999.325,227.442 999.894,225.744 1000.46,227.217 1001.03,225.403 1001.6,224.999 1002.17,226.337 1002.74,223.637 1003.3,222.255 1003.87,222.039 1004.44,222.745 1005.01,224.547 1005.58,223.365 1006.15,226.25 1006.71,226.7 1007.28,226.089 1007.85,226.576 1008.42,227.057 1008.99,229.467 1009.56,228.827 1010.12,229.049 1010.69,228.427 1011.26,228.936 1011.83,228.342 1012.4,227.742 1012.97,227.137 1013.53,230.785 1014.1,231.341 1014.67,233.625 1015.24,233.582 1015.81,233.569 1016.38,233.766 1016.94,233.903 1017.51,233.851 1018.08,233.704 1018.65,236.653 1019.22,237.566 1019.79,236.179 1020.35,234.913 1020.92,233.681 1021.49,233.717 1022.06,232.533 1022.63,231.622 1023.2,232.667 1023.76,232.709 1024.33,230.727 1024.9,231.862 1025.47,232.821 1026.04,232.794 1026.61,233.748 1027.17,233.833 1027.74,236.69 1028.31,237.556 1028.88,239.156 1029.45,236.833 1030.02,236.451 1030.58,236.164 1031.15,238.113 1031.72,238.092 1032.29,237.74 1032.86,239.199 1033.43,237.426 1033.99,238.287 1034.56,238.806 1035.13,237.359 1035.7,234.975 1036.27,234.698 1036.84,235.634 1037.4,234.261 1037.97,234.048 1038.54,233.931 1039.11,233.975 1039.68,235.643 1040.25,236.33 1040.81,237.076 1041.38,235.616 1041.95,235.224 1042.52,235.79 1043.09,237.601 1043.66,236.208 1044.22,235.838 1044.79,236.255 1045.36,233.683 1045.93,233.514 1046.5,232.062 1047.07,232.943 1047.63,234.018 1048.2,233.717 1048.77,231.514 1049.34,231.519 1049.91,229.28 1050.48,232.095 1051.05,232.946 1051.61,229.744 1052.18,232.078 1052.75,234.136 1053.32,233.876 1053.89,233.506 1054.46,234.169 1055.02,232.852 1055.59,231.652 1056.16,231.784 1056.73,233.747 1057.3,231.557 1057.87,230.363 1058.43,233.377 1059,233.332 1059.57,230.102 1060.14,229.07 1060.71,228.046 1061.28,229.238 1061.84,230.522 1062.41,231.639 1062.98,231.477 1063.55,231.309 1064.12,232.175 1064.69,233.938 1065.25,233.647 1065.82,232.254 1066.39,231.399 1066.96,230.461 1067.53,229.38 1068.1,229.509 1068.66,228.542 1069.23,226.501 1069.8,226.984 1070.37,228.014 1070.94,229.008 1071.51,230.026 1072.07,230.057 1072.64,230.164 1073.21,227.968 1073.78,227.045 1074.35,229.335 1074.92,229.465 1075.48,229.869 1076.05,227.884 1076.62,228.32 1077.19,228.507 1077.76,230.797 1078.33,233.792 1078.89,233.677 1079.46,234.47 1080.03,235.341 1080.6,235.972 1081.17,235.544 1081.74,235.093 1082.3,236.829 1082.87,234.352 1083.44,234.038 1084.01,233.758 1084.58,233.564 1085.15,232.488 1085.71,232.338 1086.28,233.12 1086.85,232.676 1087.42,231.379 1087.99,230.253 1088.56,232.202 1089.12,230.286 1089.69,228.199 1090.26,226.26 1090.83,226.589 1091.4,227.983 1091.97,228.341 1092.53,227.586 1093.1,227.927 1093.67,227.264 1094.24,228.652 1094.81,225.598 1095.38,227.073 1095.94,227.278 1096.51,227.511 1097.08,227.753 1097.65,229.268 1098.22,229.39 1098.79,228.719 1099.35,228.11 1099.92,227.344 1100.49,226.885 1101.06,227.204 1101.63,227.519 1102.2,227.835 1102.76,227.133 1103.33,227.391 1103.9,228.681 1104.47,226.587 1105.04,225.959 1105.61,225.375 1106.17,225.861 1106.74,225.292 1107.31,224.947 1107.88,229.687 1108.45,228.902 1109.02,227.108 1109.58,227.587 1110.15,225.998 1110.72,229.597 1111.29,229.98 1111.86,232.318 1112.43,234.372 1112.99,232.13 1113.56,232.327 1114.13,232.351 1114.7,229.337 1115.27,229.565 1115.84,231.005 1116.4,232.196 1116.97,231.396 1117.54,232.441 1118.11,232.456 1118.68,230.509 1119.25,231.817 1119.81,232.075 1120.38,231.111 1120.95,231.28 1121.52,234.579 1122.09,234.434 1122.66,234.224 1123.23,234.282 1123.79,232.983 1124.36,233.672 1124.93,231.818 1125.5,231.839 1126.07,230.944 1126.64,231.181 1127.2,230.234 1127.77,230.516 1128.34,230.604 1128.91,229.609 1129.48,229.911 1130.05,231.27 1130.61,230.372 1131.18,231.549 1131.75,230.813 1132.32,229.889 1132.89,229.994 1133.46,230.058 1134.02,229.47 1134.59,235.059 1135.16,235.115 1135.73,235.857 1136.3,234.601 1136.87,234.485 1137.43,236.416 1138,236.136 1138.57,236.119 1139.14,233.865 1139.71,235.575 1140.28,233.435 1140.84,232.436 1141.41,232.565 1141.98,232.545 1142.55,232.487 1143.12,231.517 1143.69,232.807 1144.25,234.904 1144.82,235.741 1145.39,235.456 1145.96,234.324 1146.53,235.173 1147.1,234.261 1147.66,237.157 1148.23,237.547 1148.8,237.098 1149.37,237.808 1149.94,240.372 1150.51,237.683 1151.07,238.13 1151.64,237.578 1152.21,237.046 1152.78,234.597 1153.35,236.434 1153.92,234.617 1154.48,234.148 1155.05,234.019 1155.62,234.171 1156.19,234.018 1156.76,234.887 1157.33,235.635 1157.89,235.143 1158.46,233.738 1159.03,231.329 1159.6,232.246 1160.17,232.95 1160.74,233.794 1161.3,230.667 1161.87,230.508 1162.44,230.57 1163.01,233.676 1163.58,232.235 1164.15,231.073 1164.71,229.842 1165.28,227.942 1165.85,226.951 1166.42,226.381 1166.99,227.759 1167.56,228.986 1168.12,229.166 1168.69,229.132 1169.26,229.387 1169.83,229.504 1170.4,229.617 1170.97,231.759 1171.53,231.745 1172.1,233.965 1172.67,235.898 1173.24,232.39 1173.81,233.456 1174.38,236.226 1174.94,235.004 1175.51,236.782 1176.08,234.324 1176.65,233.054 1177.22,233.872 1177.79,232.608 1178.35,233.619 1178.92,232.491 1179.49,232.359 1180.06,233.408 1180.63,232.171 1181.2,234.178 1181.76,233.015 1182.33,233.761 1182.9,233.719 1183.47,232.409 1184.04,230.168 1184.61,230.193 1185.17,230.205 1185.74,231.261 1186.31,231.258 1186.88,231.267 1187.45,232.325 1188.02,231.262 1188.58,229.249 1189.15,230.207 1189.72,228.429 1190.29,228.569 1190.86,228.614 1191.43,228.694 1192,230.112 1192.56,231.157 1193.13,229.979 1193.7,230.977 1194.27,232.059 1194.84,232.045 1195.41,231.889 1195.97,230.903 1196.54,232.193 1197.11,231.087 1197.68,233.109 1198.25,233.056 1198.82,232.871 1199.38,232.796 1199.95,232.747 1200.52,230.403 1201.09,229.169 1201.66,228.186 1202.23,227.342 1202.79,227.785 1203.36,227.786 1203.93,228.054 1204.5,230.225 1205.07,229.453 1205.64,227.603 1206.2,225.902 1206.77,228.498 1207.34,227.794 1207.91,228.952 1208.48,230.012 1209.05,229.059 1209.61,227.224 1210.18,228.502 1210.75,228.633 1211.32,229.046 1211.89,230.047 1212.46,230.108 1213.02,228.101 1213.59,231.623 1214.16,232.614 1214.73,230.294 1215.3,227.379 1215.87,227.759 1216.43,228.378 1217,229.51 1217.57,231.907 1218.14,231.989 1218.71,233.086 1219.28,231.884 1219.84,232.098 1220.41,230.207 1220.98,230.425 1221.55,232.738 1222.12,233.685 1222.69,234.484 1223.25,232.496 1223.82,231.388 1224.39,232.379 1224.96,232.372 1225.53,231.524 1226.1,233.642 1226.66,233.498 1227.23,232.311 1227.8,234.359 1228.37,231.23 1228.94,228.14 1229.51,230.454 1230.07,228.557 1230.64,229.9 1231.21,230.074 1231.78,232.204 1232.35,231.999 1232.92,232.052 1233.48,229.084 1234.05,230.247 1234.62,231.229 1235.19,233.23 1235.76,232.151 1236.33,234.129 1236.89,233.974 1237.46,234.784 1238.03,233.726 1238.6,234.464 1239.17,235.468 1239.74,234.324 1240.3,232.129 1240.87,231.218 1241.44,232.409 1242.01,232.32 1242.58,232.018 1243.15,230.965 1243.71,229.891 1244.28,231.071 1244.85,233.005 1245.42,231.629 1245.99,231.674 1246.56,233.544 1247.12,233.359 1247.69,231.276 1248.26,229.097 1248.83,228.37 1249.4,227.642 1249.97,228.821 1250.53,228.154 1251.1,228.358 1251.67,230.512 1252.24,229.506 1252.81,226.576 1253.38,226.883 1253.94,226.189 1254.51,223.513 1255.08,222.05 1255.65,223.784 1256.22,223.122 1256.79,224.678 1257.35,227.285 1257.92,227.724 1258.49,227.001 1259.06,227.347 1259.63,227.927 1260.2,228.211 1260.76,229.501 1261.33,230.023 1261.9,230.234 1262.47,229.433 1263.04,231.748 1263.61,229.702 1264.18,228.795 1264.74,227.453 1265.31,228.979 1265.88,229.349 1266.45,230.813 1267.02,229.034 1267.59,229.376 1268.15,229.855 1268.72,230.993 1269.29,231.038 1269.86,230.941 1270.43,232.814 1271,231.79 1271.56,231.639 1272.13,231.856 1272.7,233.042 1273.27,233.184 1273.84,235.479 1274.41,236.258 1274.97,235.98 1275.54,235.799 1276.11,234.409 1276.68,234.477 1277.25,234.229 1277.82,233.068 1278.38,233.06 1278.95,233.02 1279.52,234.217 1280.09,232.111 1280.66,234.065 1281.23,236.252 1281.79,235.155 1282.36,235.121 1282.93,231.922 1283.5,231.887 1284.07,231.088 1284.64,232.252 1285.2,234.564 1285.77,237.366 1286.34,237.029 1286.91,238.579 1287.48,236.904 1288.05,235.609 1288.61,233.245 1289.18,231.224 1289.75,232.34 1290.32,231.39 1290.89,233.683 1291.46,234.531 1292.02,232.303 1292.59,231.295 1293.16,232.177 1293.73,231.235 1294.3,232.358 1294.87,233.346 1295.43,233.441 1296,232.316 1296.57,233.683 1297.14,232.513 1297.71,231.493 1298.28,233.568 1298.84,232.642 1299.41,231.735 1299.98,230.861 1300.55,232.124 1301.12,232.034 1301.69,231.037 1302.25,231.104 1302.82,231.158 1303.39,233.195 1303.96,233.2 1304.53,235.322 1305.1,235.151 1305.66,232.967 1306.23,234.027 1306.8,236.205 1307.37,235.913 1307.94,236.406 1308.51,235.017 1309.07,233.903 1309.64,234.897 1310.21,234.674 1310.78,234.344 1311.35,234.94 1311.92,234.89 1312.48,234.57 1313.05,233.417 1313.62,234.316 1314.19,235.224 1314.76,235.73 1315.33,235.371 1315.89,234.935 1316.46,233.664 1317.03,234.365 1317.6,234.904 1318.17,233.535 1318.74,232.007 1319.3,231.796 1319.87,229.733 1320.44,232.901 1321.01,231.751 1321.58,231.662 1322.15,229.567 1322.71,230.69 1323.28,230.667 1323.85,230.807 1324.42,228.547 1324.99,227.56 1325.56,226.497 1326.12,226.974 1326.69,228.198 1327.26,229.241 1327.83,229.459 1328.4,232.646 1328.97,233.44 1329.53,232.074 1330.1,233.002 1330.67,233.009 1331.24,235.136 1331.81,233.871 1332.38,233.815 1332.94,232.736 1333.51,230.383 1334.08,230.35 1334.65,230.323 1335.22,230.483 1335.79,231.415 1336.36,229.235 1336.92,228.365 1337.49,227.453 1338.06,228.909 1338.63,230.096 1339.2,230.226 1339.77,230.064 1340.33,231.133 1340.9,230.199 1341.47,230.055 1342.04,232.16 1342.61,232.021 1343.18,233.063 1343.74,232.932 1344.31,234.788 1344.88,236.688 1345.45,232.553 1346.02,231.576 1346.59,229.369 1347.15,230.742 1347.72,227.846 1348.29,228.882 1348.86,228.916 1349.43,230.267 1350,231.154 1350.56,232.328 1351.13,232.198 1351.7,233.168 1352.27,232.006 1352.84,232.103 1353.41,232.112 1353.97,231.998 1354.54,229.697 1355.11,229.684 1355.68,230.732 1356.25,233.902 1356.82,232.5 1357.38,231.238 1357.95,231.306 1358.52,231.43 1359.09,231.437 1359.66,231.44 1360.23,231.322 1360.79,228.15 1361.36,229.392 1361.93,228.435 1362.5,228.846 1363.07,226.722 1363.64,226.05 1364.2,225.347 1364.77,226.749 1365.34,227.086 1365.91,227.518 1366.48,226.755 1367.05,227.959 1367.61,228.084 1368.18,228.027 1368.75,227.192 1369.32,227.332 1369.89,226.559 1370.46,225.872 1371.02,227.272 1371.59,226.608 1372.16,224.93 1372.73,224.561 1373.3,225.126 1373.87,228.661 1374.43,230.044 1375,229.334 1375.57,230.52 1376.14,229.595 1376.71,228.796 1377.28,231.309 1377.84,230.429 1378.41,232.657 1378.98,230.472 1379.55,231.616 1380.12,233.812 1380.69,233.771 1381.25,234.748 1381.82,234.403 1382.39,233.331 1382.96,233.419 1383.53,233.333 1384.1,233.388 1384.66,232.21 1385.23,231.129 1385.8,231.218 1386.37,232.449 1386.94,234.578 1387.51,232.531 1388.07,233.625 1388.64,233.551 1389.21,233.866 1389.78,232.756 1390.35,233.748 1390.92,233.525 1391.48,232.423 1392.05,233.399 1392.62,236.484 1393.19,235.159 1393.76,232.776 1394.33,232.923 1394.89,233.693 1395.46,232.585 1396.03,232.385 1396.6,232.344 1397.17,234.224 1397.74,233.036 1398.3,234.039 1398.87,233.913 1399.44,234.877 1400.01,234.334 1400.58,232.153 1401.15,232.964 1401.71,234.028 1402.28,232.98 1402.85,233.899 1403.42,232.762 1403.99,232.486 1404.56,230.259 1405.13,231.445 1405.69,231.482 1406.26,232.83 1406.83,231.797 1407.4,232.714 1407.97,231.843 1408.54,230.822 1409.1,230.904 1409.67,231.173 1410.24,230.341 1410.81,230.677 1411.38,230.777 1411.95,230.019 1412.51,230.179 1413.08,230.081 1413.65,229.173 1414.22,231.268 1414.79,231.332 1415.36,229.216 1415.92,230.078 1416.49,229.177 1417.06,228.656 1417.63,230.138 1418.2,229.292 1418.77,229.421 1419.33,228.636 1419.9,226.802 1420.47,229.232 1421.04,230.269 1421.61,231.372 1422.18,233.176 1422.74,232.117 1423.31,231.161 1423.88,232.341 1424.45,232.366 1425.02,232.26 1425.59,231.226 1426.15,231.297 1426.72,231.348 1427.29,233.257 1427.86,233.042 1428.43,231.803 1429,230.855 1429.56,230.969 1430.13,230.902 1430.7,231.073 1431.27,230.166 1431.84,229.184 1432.41,232.321 1432.97,231.387 1433.54,232.47 1434.11,233.575 1434.68,233.324 1435.25,233.313 1435.82,235.292 1436.38,235.186 1436.95,233.806 1437.52,234.008 1438.09,232.938 1438.66,231.022 1439.23,231.002 1439.79,231.291 1440.36,230.185 1440.93,229.218 1441.5,230.489 1442.07,229.478 1442.64,228.634 1443.2,230.077 1443.77,229.12 1444.34,227.259 1444.91,227.596 1445.48,229.1 1446.05,233.174 1446.61,234.134 1447.18,233.038 1447.75,234.063 1448.32,232.788 1448.89,231.882 1449.46,234.028 1450.02,231.972 1450.59,232.46 1451.16,233.279 1451.73,231.254 1452.3,230.218 1452.87,233.278 1453.43,232.363 1454,232.442 1454.57,233.364 1455.14,232.453 1455.71,232.454 1456.28,232.465 1456.84,236.517 1457.41,237.341 1457.98,239.028 1458.55,237.652 1459.12,233.171 1459.69,231.884 1460.25,230.87 1460.82,232.973 1461.39,231.84 1461.96,232.782 1462.53,231.655 1463.1,231.642 1463.66,230.544 1464.23,228.65 1464.8,229.946 1465.37,230.075 1465.94,230.014 1466.51,231.353 1467.07,232.571 1467.64,231.638 1468.21,231.677 1468.78,232.595 1469.35,233.458 1469.92,234.336 1470.48,235.091 1471.05,234.954 1471.62,234.787 1472.19,234.498 1472.76,236.339 1473.33,234.99 1473.89,233.563 1474.46,232.65 1475.03,232.521 1475.6,234.186 1476.17,232.949 1476.74,233.827 1477.31,231.638 1477.87,233.661 1478.44,233.249 1479.01,234.109 1479.58,233.987 1480.15,233.623 1480.72,233.354 1481.28,233.066 1481.85,232.928 1482.42,232.644 1482.99,231.434 1483.56,234.533 1484.13,234.46 1484.69,234.231 1485.26,235.055 1485.83,233.557 1486.4,233.491 1486.97,234.226 1487.54,236.118 1488.1,235.642 1488.67,236.289 1489.24,235.748 1489.81,235.531 1490.38,235.177 1490.95,236.941 1491.51,237.32 1492.08,237.003 1492.65,235.614 1493.22,235.022 1493.79,232.646 1494.36,231.448 1494.92,232.126 1495.49,231.869 1496.06,233.744 1496.63,233.523 1497.2,232.099 1497.77,230.755 1498.33,230.628 1498.9,231.607 1499.47,230.408 1500.04,230.281 1500.61,229.197 1501.18,229.07 1501.74,227.933 1502.31,227.948 1502.88,228.077 1503.45,229.144 1504.02,226.856 1504.59,224.997 1505.15,225.428 1505.72,226.874 1506.29,226.081 1506.86,228.675 1507.43,229.704 1508,229.977 1508.56,229.9 1509.13,229.958 1509.7,230.126 1510.27,231.006 1510.84,228.207 1511.41,228.096 1511.97,227.396 1512.54,227.555 1513.11,229.922 1513.68,229.989 1514.25,229.931 1514.82,228.799 1515.38,227.856 1515.95,228.203 1516.52,227.45 1517.09,228.629 1517.66,228.716 1518.23,231.806 1518.79,232.867 1519.36,229.538 1519.93,229.713 1520.5,230.636 1521.07,231.73 1521.64,232.983 1522.2,231.801 1522.77,233.756 1523.34,232.484 1523.91,232.302 1524.48,231.449 1525.05,229.384 1525.61,229.559 1526.18,229.915 1526.75,230.12 1527.32,229.952 1527.89,230.244 1528.46,231.548 1529.02,231.665 1529.59,229.793 1530.16,232.077 1530.73,232.125 1531.3,234.21 1531.87,234.044 1532.43,235.851 1533,236.622 1533.57,235.106 1534.14,234.985 1534.71,235.63 1535.28,238.436 1535.84,237.942 1536.41,237.336 1536.98,234.839 1537.55,232.247 1538.12,230.919 1538.69,230.871 1539.25,231.925 1539.82,231.728 1540.39,228.724 1540.96,229.038 1541.53,228.213 1542.1,228.389 1542.66,229.703 1543.23,228.909 1543.8,228.941 1544.37,231.989 1544.94,231.85 1545.51,232.746 1546.08,228.487 1546.64,229.698 1547.21,229.779 1547.78,229.861 1548.35,228.887 1548.92,226.88 1549.49,227.078 1550.05,227.406 1550.62,226.452 1551.19,227.921 1551.76,227.962 1552.33,227.216 1552.9,226.663 1553.46,227.17 1554.03,228.416 1554.6,229.745 1555.17,229.803 1555.74,229.835 1556.31,231.067 1556.87,231.225 1557.44,231.244 1558.01,229.92 1558.58,230.267 1559.15,230.438 1559.72,230.557 1560.28,227.472 1560.85,226.701 1561.42,225.074 1561.99,226.629 1562.56,225.049 1563.13,223.394 1563.69,225.258 1564.26,226.751 1564.83,226.956 1565.4,226.248 1565.97,225.775 1566.54,228.559 1567.1,228.742 1567.67,229.059 1568.24,229.222 1568.81,229.376 1569.38,229.852 1569.95,227.904 1570.51,231.361 1571.08,228.281 1571.65,228.615 1572.22,228.928 1572.79,228.091 1573.36,228.364 1573.92,228.701 1574.49,227.201 1575.06,230.786 1575.63,230.814 1576.2,232.211 1576.77,233.051 1577.33,233.203 1577.9,233.2 1578.47,236.315 1579.04,235.936 1579.61,235.907 1580.18,234.655 1580.74,234.543 1581.31,236.361 1581.88,235.244 1582.45,232.891 1583.02,233.991 1583.59,232.068 1584.15,232.286 1584.72,232.455 1585.29,230.605 1585.86,229.619 1586.43,231.007 1587,232.28 1587.56,233.386 1588.13,235.376 1588.7,235.217 1589.27,234.024 1589.84,237.101 1590.41,236.906 1590.97,234.493 1591.54,234.305 1592.11,235.114 1592.68,234.138 1593.25,232.062 1593.82,233.149 1594.38,233.201 1594.95,233.08 1595.52,233.051 1596.09,233.958 1596.66,232.968 1597.23,233.811 1597.79,233.679 1598.36,232.581 1598.93,234.645 1599.5,232.237 1600.07,231.165 1600.64,231.34 1601.2,230.442 1601.77,230.564 1602.34,231.67 1602.91,229.693 1603.48,229.75 1604.05,230.767 1604.61,230.761 1605.18,231.643 1605.75,230.76 1606.32,233.969 1606.89,232.888 1607.46,230.583 1608.02,228.551 1608.59,229.868 1609.16,231.004 1609.73,231.144 1610.3,232.303 1610.87,233.246 1611.43,233.356 1612,235.292 1612.57,235.098 1613.14,233.849 1613.71,232.775 1614.28,232.71 1614.84,231.564 1615.41,229.625 1615.98,227.531 1616.55,224.726 1617.12,223.422 1617.69,225.771 1618.26,224.098 1618.82,225.656 1619.39,224.016 1619.96,224.56 1620.53,226.991 1621.1,227.425 1621.67,227.871 1622.23,228.175 1622.8,229.409 1623.37,231.66 1623.94,232.901 1624.51,233.932 1625.08,233.702 1625.64,234.672 1626.21,235.6 1626.78,235.35 1627.35,235.243 1627.92,236.238 1628.49,238.094 1629.05,235.619 1629.62,235.397 1630.19,235.251 1630.76,235.038 1631.33,236.968 1631.9,235.69 1632.46,234.313 1633.03,234.398 1633.6,233.221 1634.17,230.128 1634.74,231.347 1635.31,229.442 1635.87,231.706 1636.44,230.494 1637.01,230.587 1637.58,230.478 1638.15,229.382 1638.72,229.639 1639.28,230.962 1639.85,230.996 1640.42,231.054 1640.99,230.299 1641.56,231.623 1642.13,234.749 1642.69,232.289 1643.26,229.227 1643.83,232.405 1644.4,232.227 1644.97,233.321 1645.54,234.149 1646.1,232.959 1646.67,230.971 1647.24,231.113 1647.81,233.238 1648.38,235.238 1648.95,234.115 1649.51,233.154 1650.08,236.131 1650.65,235.897 1651.22,237.583 1651.79,241.379 1652.36,239.333 1652.92,238.788 1653.49,236.065 1654.06,238.531 1654.63,238.927 1655.2,237.211 1655.77,236.705 1656.33,237.369 1656.9,239.828 1657.47,239.242 1658.04,238.408 1658.61,237.621 1659.18,233.768 1659.74,234.712 1660.31,236.529 1660.88,236.187 1661.45,237.787 1662.02,238.269 1662.59,237.568 1663.15,236.878 1663.72,236.172 1664.29,236.657 1664.86,235.102 1665.43,235.707 1666,233.111 1666.56,232.785 1667.13,230.387 1667.7,230.144 1668.27,230.103 1668.84,231.111 1669.41,230.086 1669.97,231.271 1670.54,230.22 1671.11,230.141 1671.68,229.017 1672.25,228.971 1672.82,228.898 1673.38,229.771 1673.95,228.435 1674.52,229.539 1675.09,228.595 1675.66,229.566 1676.23,228.489 1676.79,229.304 1677.36,230.315 1677.93,232.473 1678.5,233.393 1679.07,231.702 1679.64,231.615 1680.2,232.424 1680.77,231.121 1681.34,232.112 1681.91,232.894 1682.48,230.66 1683.05,233.827 1683.61,231.386 1684.18,230.344 1684.75,230.369 1685.32,230.147 1685.89,230.172 1686.46,230.045 1687.02,229.106 1687.59,231.209 1688.16,231.027 1688.73,232.542 1689.3,233.305 1689.87,231.881 1690.44,230.836 1691,229.746 1691.57,230.823 1692.14,230.828 1692.71,231.944 1693.28,230.757 1693.85,228.535 1694.41,229.523 1694.98,229.699 1695.55,230.943 1696.12,227.844 1696.69,229.076 1697.26,229.041 1697.82,230.211 1698.39,230.125 1698.96,230.331 1699.53,230.223 1700.1,228.939 1700.67,229.087 1701.23,227.211 1701.8,224.503 1702.37,224.024 1702.94,224.526 1703.51,224.858 1704.08,226.267 1704.64,226.395 1705.21,223.663 1705.78,225.205 1706.35,225.434 1706.92,226.016 1707.49,223.41 1708.05,219.949 1708.62,219.924 1709.19,220.783 1709.76,220.561 1710.33,222.637 1710.9,224.469 1711.46,225.931 1712.03,226.184 1712.6,227.478 1713.17,227.701 1713.74,226.035 1714.31,226.346 1714.87,230.989 1715.44,229.125 1716.01,230.238 1716.58,229.536 1717.15,228.713 1717.72,229.022 1718.28,229.411 1718.85,232.657 1719.42,233.865 1719.99,234.973 1720.56,234.737 1721.13,236.51 1721.69,237.314 1722.26,235.886 1722.83,234.502 1723.4,234.38 1723.97,234.212 1724.54,234.104 1725.1,231.921 1725.67,231.094 1726.24,233.141 1726.81,231.023 1727.38,231.247 1727.95,231.502 1728.51,231.723 1729.08,231.731 1729.65,231.678 1730.22,235.002 1730.79,234.647 1731.36,230.475 1731.92,228.714 1732.49,227.889 1733.06,228.096 1733.63,230.63 1734.2,229.564 1734.77,229.961 1735.33,234.124 1735.9,234.048 1736.47,236.095 1737.04,233.931 1737.61,235.87 1738.18,236.592 1738.74,237.191 1739.31,236.859 1739.88,236.483 1740.45,235.062 1741.02,237.76 1741.59,238.536 1742.15,237.191 1742.72,237.921 1743.29,236.474 1743.86,237.183 1744.43,235.703 1745,234.439 1745.56,236.401 1746.13,236.141 1746.7,234.905 1747.27,235.687 1747.84,235.412 1748.41,235.056 1748.97,232.405 1749.54,232.208 1750.11,233.168 1750.68,234.221 1751.25,236.095 1751.82,233.767 1752.38,233.551 1752.95,232.335 1753.52,233.203 1754.09,232.022 1754.66,233.02 1755.23,230.766 1755.79,230.798 1756.36,231.788 1756.93,230.662 1757.5,230.571 1758.07,230.651 1758.64,230.7 1759.21,230.523 1759.77,230.603 1760.34,229.569 1760.91,228.454 1761.48,231.861 1762.05,230.714 1762.62,229.782 1763.18,229.873 1763.75,231.811 1764.32,232.603 1764.89,234.575 1765.46,235.338 1766.03,234.884 1766.59,233.439 1767.16,235.175 1767.73,237.968 1768.3,238.437 1768.87,238.872 1769.44,238.478 1770,239.028 1770.57,238.325 1771.14,240.746 1771.71,241.023 1772.28,239.996 1772.85,238.18 1773.41,234.471 1773.98,236.12 1774.55,234.59 1775.12,236.371 1775.69,236.855 1776.26,237.27 1776.82,236.785 1777.39,236.156 1777.96,234.561 1778.53,233.27 1779.1,232.962 1779.67,232.752 1780.23,230.506 1780.8,228.386 1781.37,228.357 1781.94,230.474 1782.51,230.461 1783.08,228.245 1783.64,228.261 1784.21,227.389 1784.78,228.651 1785.35,228.741 1785.92,229.932 1786.49,228.861 1787.05,227.821 1787.62,226.804 1788.19,228.975 1788.76,225.796 1789.33,226.156 1789.9,225.255 1790.46,225.415 1791.03,224.707 1791.6,225.16 1792.17,224.502 1792.74,222.853 1793.31,220.197 1793.87,220.048 1794.44,220.717 1795.01,221.522 1795.58,219.895 1796.15,220.764 1796.72,222.567 1797.28,223.256 1797.85,226.913 1798.42,226.429 1798.99,225.846 1799.56,225.006 1800.13,227.712 1800.69,226.653 1801.26,227.22 1801.83,227.576 1802.4,227.759 1802.97,228.01 1803.54,228.343 1804.1,231.576 1804.67,232.474 1805.24,233.335 1805.81,235.138 1806.38,233.68 1806.95,234.361 1807.51,234.238 1808.08,235.965 1808.65,234.562 1809.22,232.453 1809.79,232.288 1810.36,230.911 1810.92,231.962 1811.49,231.054 1812.06,229.034 1812.63,230.043 1813.2,229.314 1813.77,228.596 1814.33,227.685 1814.9,229.269 1815.47,230.337 1816.04,230.305 1816.61,228.382 1817.18,228.838 1817.74,226.971 1818.31,228.342 1818.88,230.533 1819.45,231.62 1820.02,232.596 1820.59,231.768 1821.15,229.752 1821.72,231.221 1822.29,230.465 1822.86,231.745 1823.43,234.038 1824,236.754 1824.56,236.54 1825.13,234.256 1825.7,234.241 1826.27,233.976 1826.84,232.857 1827.41,232.81 1827.97,231.705 1828.54,230.687 1829.11,226.653 1829.68,225.072 1830.25,225.469 1830.82,228.074 1831.39,229.552 1831.95,229.983 1832.52,231.321 1833.09,232.607 1833.66,234.702 1834.23,234.594 1834.8,233.436 1835.36,233.353 1835.93,233.184 1836.5,232.979 1837.07,234.043 1837.64,234.308 1838.21,235.223 1838.77,233.989 1839.34,234.773 1839.91,233.518 1840.48,232.284 1841.05,235.21 1841.62,234.884 1842.18,236.796 1842.75,234.192 1843.32,232.085 1843.89,232.161 1844.46,232.324 1845.03,231.368 1845.59,228.329 1846.16,231.509 1846.73,231.611 1847.3,231.463 1847.87,229.513 1848.44,229.495 1849,229.597 1849.57,230.737 1850.14,231.77 1850.71,231.62 1851.28,230.572 1851.85,228.8 1852.41,227.931 1852.98,227.164 1853.55,230.535 1854.12,230.604 1854.69,233.889 1855.26,233.559 1855.82,233.485 1856.39,232.398 1856.96,229.334 1857.53,229.669 1858.1,229.894 1858.67,230.35 1859.23,231.555 1859.8,231.555 1860.37,231.446 1860.94,233.475 1861.51,234.292 1862.08,236.013 1862.64,236.546 1863.21,234.922 1863.78,234.355 1864.35,234.151 1864.92,234.012 1865.49,233.666 1866.05,233.593 1866.62,233.819 1867.19,233.659 1867.76,232.399 1868.33,232.411 1868.9,233.621 1869.46,234.475 1870.03,233.345 1870.6,232.087 1871.17,232.113 1871.74,230.908 1872.31,233.207 1872.87,232.145 1873.44,233.164 1874.01,232.019 1874.58,231.879 1875.15,232.824 1875.72,234.827 1876.28,234.63 1876.85,233.421 1877.42,233.299 1877.99,232.042 1878.56,232.982 1879.13,229.721 1879.69,228.774 1880.26,229.976 1880.83,231.239 1881.4,232.451 1881.97,232.446 1882.54,232.353 1883.1,232.36 1883.67,232.23 1884.24,230.97 1884.81,229.853 1885.38,231.025 1885.95,232.201 1886.51,229.073 1887.08,226.985 1887.65,226.31 1888.22,226.8 1888.79,227.28 1889.36,227.405 1889.92,226.58 1890.49,227.981 1891.06,227.229 1891.63,227.703 1892.2,228.082 1892.77,228.344 1893.33,226.782 1893.9,226.363 1894.47,229.012 1895.04,228.1 1895.61,229.279 1896.18,228.463 1896.74,226.764 1897.31,227.182 1897.88,224.54 1898.45,225.929 1899.02,227.409 1899.59,227.818 1900.16,229.06 1900.72,230.488 1901.29,231.63 1901.86,231.446 1902.43,231.437 1903,232.526 1903.57,233.306 1904.13,234.068 1904.7,235.079 1905.27,234.948 1905.84,236.96 1906.41,237.702 1906.98,238.182 1907.54,239.733 1908.11,240.28 1908.68,234.765 1909.25,235.387 1909.82,235.03 1910.39,234.884 1910.95,235.855 1911.52,234.471 1912.09,234.257 1912.66,234.15 1913.23,233.895 1913.8,231.845 1914.36,232.615 1914.93,232.459 1915.5,232.456 1916.07,233.436 1916.64,233.323 1917.21,233.197 1917.77,233.101 1918.34,231.964 1918.91,232.866 1919.48,232.663 1920.05,232.531 1920.62,231.354 1921.18,228.405 1921.75,228.67 1922.32,229.96 1922.89,231.015 1923.46,231.243 1924.03,230.28 1924.59,232.473 1925.16,230.327 1925.73,232.321 1926.3,232.133 1926.87,233.35 1927.44,233.31 1928,233.102 1928.57,231.815 1929.14,231.923 1929.71,231.91 1930.28,232.964 1930.85,233.772 1931.41,232.652 1931.98,232.466 1932.55,232.41 1933.12,231.429 1933.69,232.258 1934.26,232.283 1934.82,229.39 1935.39,228.508 1935.96,226.653 1936.53,227 1937.1,226.354 1937.67,226.336 1938.23,226.659 1938.8,226.903 1939.37,225.237 1939.94,227.674 1940.51,227.8 1941.08,227.177 1941.64,227.611 1942.21,229.077 1942.78,229.239 1943.35,230.45 1943.92,227.713 1944.49,229.14 1945.05,231.39 1945.62,232.511 1946.19,232.499 1946.76,233.486 1947.33,232.297 1947.9,233.304 1948.46,233.417 1949.03,235.398 1949.6,236.059 1950.17,233.604 1950.74,234.49 1951.31,232.199 1951.87,232.065 1952.44,234.001 1953.01,236.069 1953.58,237.914 1954.15,237.349 1954.72,237.059 1955.28,237.653 1955.85,237.91 1956.42,238.343 1956.99,238.948 1957.56,237.548 1958.13,233.844 1958.69,233.619 1959.26,233.425 1959.83,231.389 1960.4,231.215 1960.97,230.292 1961.54,229.179 1962.1,230.182 1962.67,230.158 1963.24,229.34 1963.81,228.34 1964.38,227.33 1964.95,226.594 1965.51,228.116 1966.08,228.228 1966.65,229.448 1967.22,228.795 1967.79,228.012 1968.36,228.104 1968.92,227.315 1969.49,226.635 1970.06,225.878 1970.63,223.351 1971.2,220.814 1971.77,222.715 1972.34,223.493 1972.9,225.303 1973.47,223.782 1974.04,226.412 1974.61,226.832 1975.18,230.308 1975.75,231.685 1976.31,231.78 1976.88,230.617 1977.45,231.764 1978.02,229.826 1978.59,225.933 1979.16,224.205 1979.72,223.874 1980.29,227.693 1980.86,228.069 1981.43,229.309 1982,230.691 1982.57,232.851 1983.13,233.946 1983.7,234.901 1984.27,236.982 1984.84,236.671 1985.41,234.323 1985.98,231.243 1986.54,231.347 1987.11,230.306 1987.68,231.472 1988.25,231.596 1988.82,229.629 1989.39,229.833 1989.95,231.067 1990.52,232.653 1991.09,231.761 1991.66,228.705 1992.23,232.171 1992.8,232.257 1993.36,231.546 1993.93,228.605 1994.5,231.21 1995.07,232.329 1995.64,232.687 1996.21,234.77 1996.77,235.532 1997.34,233.412 1997.91,233.462 1998.48,235.612 1999.05,236.47 1999.62,237.348 2000.18,239.103 2000.75,239.531 2001.32,242.1 2001.89,239.344 2002.46,238.798 2003.03,237.117 2003.59,235.57 2004.16,234.977 2004.73,232.753 2005.3,229.694 2005.87,228.917 2006.44,229.068 2007,230.301 2007.57,230.206 2008.14,227.251 2008.71,226.503 2009.28,228.781 2009.85,226.871 2010.41,225.935 2010.98,227.246 2011.55,224.685 2012.12,225.191 2012.69,225.708 2013.26,226.052 2013.82,227.301 2014.39,230.619 2014.96,230.391 2015.53,230.215 2016.1,231.42 2016.67,232.492 2017.23,231.321 2017.8,230.518 2018.37,232.722 2018.94,230.656 2019.51,229.923 2020.08,230.389 2020.64,228.462 2021.21,229.776 2021.78,231.113 2022.35,233.029 2022.92,232.799 2023.49,232.831 2024.05,235.769 2024.62,236.689 2025.19,236.188 2025.76,235.916 2026.33,235.754 2026.9,235.465 2027.46,236.459 2028.03,235.997 2028.6,236.867 2029.17,238.435 2029.74,236.736 2030.31,236.154 2030.87,240.048 2031.44,240.321 2032.01,236.671 2032.58,235.334 2033.15,236.306 2033.72,238.017 2034.28,237.505 2034.85,235.965 2035.42,235.567 2035.99,234.209 2036.56,234.029 2037.13,231.74 2037.69,231.955 2038.26,230.858 2038.83,231.106 2039.4,230.07 2039.97,230.085 2040.54,231.166 2041.11,232.024 2041.67,231.257 2042.24,229.332 2042.81,231.334 2043.38,231.388 2043.95,231.193 2044.52,231.237 2045.08,232.104 2045.65,229.774 2046.22,226.787 2046.79,226.049 2047.36,227.514 2047.93,228.93 2048.49,230.395 2049.06,231.449 2049.63,233.388 2050.2,234.085 2050.77,235.968 2051.34,237.57 2051.9,237.067 2052.47,237.55 2053.04,237.081 2053.61,237.909 2054.18,237.626 2054.75,234.22 2055.31,234.102 2055.88,233.78 2056.45,232.54 2057.02,232.272 2057.59,232 2058.16,232.862 2058.72,232.461 2059.29,231.079 2059.86,229.03 2060.43,230.267 2061,229.422 2061.57,231.671 2062.13,230.641 2062.7,230.313 2063.27,231.378 2063.84,230.382 2064.41,230.41 2064.98,227.367 2065.54,225.565 2066.11,227.91 2066.68,231.251 2067.25,232.331 2067.82,231.259 2068.39,231.144 2068.95,228.063 2069.52,226.343 2070.09,228.749 2070.66,229.089 2071.23,229.127 2071.8,230.403 2072.36,230.484 2072.93,233.706 2073.5,230.385 2074.07,227.316 2074.64,228.547 2075.21,227.706 2075.77,228.085 2076.34,227.258 2076.91,227.644 2077.48,230.009 2078.05,231.154 2078.62,229.965 2079.18,230.281 2079.75,231.511 2080.32,232.466 2080.89,232.595 2081.46,232.702 2082.03,231.632 2082.59,233.652 2083.16,232.557 2083.73,232.366 2084.3,232.202 2084.87,232.345 2085.44,233.325 2086,233.153 2086.57,233.988 2087.14,235.797 2087.71,236.441 2088.28,233.89 2088.85,232.684 2089.41,231.503 2089.98,232.398 2090.55,232.073 2091.12,234.085 2091.69,233.69 2092.26,234.5 2092.82,234.482 2093.39,234.168 2093.96,234.056 2094.53,232.709 2095.1,230.558 2095.67,230.661 2096.23,230.805 2096.8,227.686 2097.37,228.951 2097.94,228.013 2098.51,229.217 2099.08,228.257 2099.64,228.571 2100.21,228.613 2100.78,228.662 2101.35,229.871 2101.92,230.166 2102.49,228.333 2103.05,227.597 2103.62,230.067 2104.19,231.115 2104.76,229.39 2105.33,231.395 2105.9,232.404 2106.46,233.165 2107.03,233.087 2107.6,234.069 2108.17,232.645 2108.74,232.686 2109.31,232.598 2109.87,232.335 2110.44,232.319 2111.01,232.127 2111.58,232.11 2112.15,233.03 2112.72,233.028 2113.29,232.839 2113.85,232.567 2114.42,232.345 2114.99,231.159 2115.56,230.977 2116.13,230.704 2116.7,229.763 2117.26,229.867 2117.83,228.951 2118.4,231.159 2118.97,230.05 2119.54,231.019 2120.11,231.036 2120.67,232.086 2121.24,233.873 2121.81,232.594 2122.38,234.528 2122.95,231.144 2123.52,230.02 2124.08,231.095 2124.65,233.088 2125.22,234.903 2125.79,234.763 2126.36,233.442 2126.93,234.35 2127.49,237.252 2128.06,237.969 2128.63,235.32 2129.2,235.039 2129.77,236.857 2130.34,235.484 2130.9,232.99 2131.47,232.702 2132.04,231.514 2132.61,230.118 2133.18,228.902 2133.75,230.879 2134.31,230.571 2134.88,230.485 2135.45,230.566 2136.02,230.507 2136.59,231.734 2137.16,229.806 2137.72,225.588 2138.29,223.831 2138.86,224.127 2139.43,226.833 2140,226.195 2140.57,226.277 2141.13,224.38 2141.7,224.827 2142.27,224.378 2142.84,224.911 2143.41,224.345 2143.98,222.922 2144.54,225.756 2145.11,227.148 2145.68,226.433 2146.25,228.819 2146.82,231.198 2147.39,231.338 2147.95,230.325 2148.52,229.519 2149.09,232.708 2149.66,233.67 2150.23,233.792 2150.8,234.71 2151.36,235.532 2151.93,235.419 2152.5,235.166 2153.07,231.986 2153.64,229.904 2154.21,233.283 2154.77,232.038 2155.34,230.929 2155.91,231.306 2156.48,229.372 2157.05,229.575 2157.62,229.565 2158.18,229.739 2158.75,228.883 2159.32,230.182 2159.89,229.404 \"/>\n<path clip-path=\"url(#clip410)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip410)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip410)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip410)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip410)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip410)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.027 ± 0.023\n  with uncertainty of ± 0.00211941567497796\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01221 ± (0.00282198, 0.00276322) (MC)\n  95% confidence interval: [-4.0179, -4.00662]) (MC)\n  linear error propagation: -4.01199 ± 0.00282094\n  |δ_y| = |0.00279963| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.012205262078622, val_l = 0.005693131599544543, val_u = 0.005586592520464784)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip440\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip440)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip441\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip440)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip442\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1156.93 2211.02,1156.93 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1005.93 2211.02,1005.93 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,854.923 2211.02,854.923 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,703.919 2211.02,703.919 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,552.915 2211.02,552.915 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,401.911 2211.02,401.911 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,250.906 2211.02,250.906 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1156.93 365.751,1156.93 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1005.93 365.751,1005.93 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,854.923 365.751,854.923 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,703.919 365.751,703.919 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,552.915 365.751,552.915 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,401.911 365.751,401.911 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,250.906 365.751,250.906 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M298.909 1142.73 Q295.298 1142.73 293.469 1146.3 Q291.664 1149.84 291.664 1156.97 Q291.664 1164.07 293.469 1167.64 Q295.298 1171.18 298.909 1171.18 Q302.543 1171.18 304.349 1167.64 Q306.177 1164.07 306.177 1156.97 Q306.177 1149.84 304.349 1146.3 Q302.543 1142.73 298.909 1142.73 M298.909 1139.03 Q304.719 1139.03 307.775 1143.63 Q310.853 1148.22 310.853 1156.97 Q310.853 1165.69 307.775 1170.3 Q304.719 1174.88 298.909 1174.88 Q293.099 1174.88 290.02 1170.3 Q286.964 1165.69 286.964 1156.97 Q286.964 1148.22 290.02 1143.63 Q293.099 1139.03 298.909 1139.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M259.557 1019.27 L267.196 1019.27 L267.196 992.907 L258.886 994.573 L258.886 990.314 L267.15 988.648 L271.826 988.648 L271.826 1019.27 L279.465 1019.27 L279.465 1023.21 L259.557 1023.21 L259.557 1019.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M298.909 991.726 Q295.298 991.726 293.469 995.291 Q291.664 998.833 291.664 1005.96 Q291.664 1013.07 293.469 1016.63 Q295.298 1020.18 298.909 1020.18 Q302.543 1020.18 304.349 1016.63 Q306.177 1013.07 306.177 1005.96 Q306.177 998.833 304.349 995.291 Q302.543 991.726 298.909 991.726 M298.909 988.023 Q304.719 988.023 307.775 992.629 Q310.853 997.212 310.853 1005.96 Q310.853 1014.69 307.775 1019.3 Q304.719 1023.88 298.909 1023.88 Q293.099 1023.88 290.02 1019.3 Q286.964 1014.69 286.964 1005.96 Q286.964 997.212 290.02 992.629 Q293.099 988.023 298.909 988.023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M262.775 868.268 L279.094 868.268 L279.094 872.203 L257.15 872.203 L257.15 868.268 Q259.812 865.514 264.395 860.884 Q269.002 856.231 270.182 854.889 Q272.428 852.365 273.307 850.629 Q274.21 848.87 274.21 847.18 Q274.21 844.426 272.266 842.69 Q270.344 840.954 267.242 840.954 Q265.043 840.954 262.59 841.717 Q260.159 842.481 257.381 844.032 L257.381 839.31 Q260.205 838.176 262.659 837.597 Q265.113 837.018 267.15 837.018 Q272.52 837.018 275.715 839.704 Q278.909 842.389 278.909 846.879 Q278.909 849.009 278.099 850.93 Q277.312 852.828 275.205 855.421 Q274.627 856.092 271.525 859.31 Q268.423 862.504 262.775 868.268 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M298.909 840.722 Q295.298 840.722 293.469 844.287 Q291.664 847.828 291.664 854.958 Q291.664 862.065 293.469 865.629 Q295.298 869.171 298.909 869.171 Q302.543 869.171 304.349 865.629 Q306.177 862.065 306.177 854.958 Q306.177 847.828 304.349 844.287 Q302.543 840.722 298.909 840.722 M298.909 837.018 Q304.719 837.018 307.775 841.625 Q310.853 846.208 310.853 854.958 Q310.853 863.685 307.775 868.291 Q304.719 872.875 298.909 872.875 Q293.099 872.875 290.02 868.291 Q286.964 863.685 286.964 854.958 Q286.964 846.208 290.02 841.625 Q293.099 837.018 298.909 837.018 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M272.914 702.565 Q276.27 703.283 278.145 705.551 Q280.043 707.82 280.043 711.153 Q280.043 716.269 276.525 719.069 Q273.006 721.87 266.525 721.87 Q264.349 721.87 262.034 721.431 Q259.742 721.014 257.289 720.157 L257.289 715.644 Q259.233 716.778 261.548 717.357 Q263.863 717.935 266.386 717.935 Q270.784 717.935 273.076 716.199 Q275.39 714.463 275.39 711.153 Q275.39 708.097 273.238 706.384 Q271.108 704.648 267.289 704.648 L263.261 704.648 L263.261 700.806 L267.474 700.806 Q270.923 700.806 272.752 699.44 Q274.58 698.051 274.58 695.458 Q274.58 692.796 272.682 691.384 Q270.807 689.949 267.289 689.949 Q265.367 689.949 263.168 690.366 Q260.969 690.783 258.33 691.662 L258.33 687.496 Q260.992 686.755 263.307 686.384 Q265.645 686.014 267.705 686.014 Q273.029 686.014 276.131 688.445 Q279.233 690.852 279.233 694.972 Q279.233 697.843 277.59 699.833 Q275.946 701.801 272.914 702.565 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M298.909 689.718 Q295.298 689.718 293.469 693.283 Q291.664 696.824 291.664 703.954 Q291.664 711.06 293.469 714.625 Q295.298 718.167 298.909 718.167 Q302.543 718.167 304.349 714.625 Q306.177 711.06 306.177 703.954 Q306.177 696.824 304.349 693.283 Q302.543 689.718 298.909 689.718 M298.909 686.014 Q304.719 686.014 307.775 690.621 Q310.853 695.204 310.853 703.954 Q310.853 712.681 307.775 717.287 Q304.719 721.87 298.909 721.87 Q293.099 721.87 290.02 717.287 Q286.964 712.681 286.964 703.954 Q286.964 695.204 290.02 690.621 Q293.099 686.014 298.909 686.014 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M271.594 539.709 L259.789 558.158 L271.594 558.158 L271.594 539.709 M270.367 535.635 L276.247 535.635 L276.247 558.158 L281.177 558.158 L281.177 562.047 L276.247 562.047 L276.247 570.195 L271.594 570.195 L271.594 562.047 L255.992 562.047 L255.992 557.533 L270.367 535.635 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M298.909 538.714 Q295.298 538.714 293.469 542.278 Q291.664 545.82 291.664 552.95 Q291.664 560.056 293.469 563.621 Q295.298 567.162 298.909 567.162 Q302.543 567.162 304.349 563.621 Q306.177 560.056 306.177 552.95 Q306.177 545.82 304.349 542.278 Q302.543 538.714 298.909 538.714 M298.909 535.01 Q304.719 535.01 307.775 539.616 Q310.853 544.2 310.853 552.95 Q310.853 561.676 307.775 566.283 Q304.719 570.866 298.909 570.866 Q293.099 570.866 290.02 566.283 Q286.964 561.676 286.964 552.95 Q286.964 544.2 290.02 539.616 Q293.099 535.01 298.909 535.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M258.793 384.631 L277.15 384.631 L277.15 388.566 L263.076 388.566 L263.076 397.038 Q264.094 396.691 265.113 396.529 Q266.131 396.343 267.15 396.343 Q272.937 396.343 276.316 399.515 Q279.696 402.686 279.696 408.103 Q279.696 413.681 276.224 416.783 Q272.752 419.862 266.432 419.862 Q264.256 419.862 261.988 419.492 Q259.742 419.121 257.335 418.38 L257.335 413.681 Q259.418 414.816 261.641 415.371 Q263.863 415.927 266.34 415.927 Q270.344 415.927 272.682 413.82 Q275.02 411.714 275.02 408.103 Q275.02 404.492 272.682 402.385 Q270.344 400.279 266.34 400.279 Q264.465 400.279 262.59 400.695 Q260.738 401.112 258.793 401.992 L258.793 384.631 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M298.909 387.709 Q295.298 387.709 293.469 391.274 Q291.664 394.816 291.664 401.945 Q291.664 409.052 293.469 412.617 Q295.298 416.158 298.909 416.158 Q302.543 416.158 304.349 412.617 Q306.177 409.052 306.177 401.945 Q306.177 394.816 304.349 391.274 Q302.543 387.709 298.909 387.709 M298.909 384.006 Q304.719 384.006 307.775 388.612 Q310.853 393.195 310.853 401.945 Q310.853 410.672 307.775 415.279 Q304.719 419.862 298.909 419.862 Q293.099 419.862 290.02 415.279 Q286.964 410.672 286.964 401.945 Q286.964 393.195 290.02 388.612 Q293.099 384.006 298.909 384.006 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M269.326 249.043 Q266.178 249.043 264.326 251.196 Q262.497 253.348 262.497 257.098 Q262.497 260.825 264.326 263.001 Q266.178 265.154 269.326 265.154 Q272.474 265.154 274.303 263.001 Q276.154 260.825 276.154 257.098 Q276.154 253.348 274.303 251.196 Q272.474 249.043 269.326 249.043 M278.608 234.39 L278.608 238.649 Q276.849 237.816 275.043 237.376 Q273.261 236.937 271.502 236.937 Q266.872 236.937 264.418 240.061 Q261.988 243.186 261.641 249.506 Q263.006 247.492 265.066 246.427 Q267.127 245.339 269.603 245.339 Q274.812 245.339 277.821 248.511 Q280.853 251.659 280.853 257.098 Q280.853 262.422 277.705 265.64 Q274.557 268.858 269.326 268.858 Q263.33 268.858 260.159 264.274 Q256.988 259.668 256.988 250.941 Q256.988 242.747 260.877 237.886 Q264.766 233.001 271.316 233.001 Q273.076 233.001 274.858 233.349 Q276.664 233.696 278.608 234.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M298.909 236.705 Q295.298 236.705 293.469 240.27 Q291.664 243.811 291.664 250.941 Q291.664 258.047 293.469 261.612 Q295.298 265.154 298.909 265.154 Q302.543 265.154 304.349 261.612 Q306.177 258.047 306.177 250.941 Q306.177 243.811 304.349 240.27 Q302.543 236.705 298.909 236.705 M298.909 233.001 Q304.719 233.001 307.775 237.608 Q310.853 242.191 310.853 250.941 Q310.853 259.668 307.775 264.274 Q304.719 268.858 298.909 268.858 Q293.099 268.858 290.02 264.274 Q286.964 259.668 286.964 250.941 Q286.964 242.191 290.02 237.608 Q293.099 233.001 298.909 233.001 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip442)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1045.67 400.199,1060.07 400.786,958.486 401.372,865.259 401.958,783.562 402.545,707.017 403.131,734.332 403.718,671.865 404.304,610.462 404.891,551.674 405.477,501.151 406.063,454.053 406.65,411.676 407.236,373.712 407.823,339.878 408.409,309.903 408.995,284.867 409.582,261.796 410.168,293.881 410.755,274.868 411.341,259.383 411.927,245.813 412.514,234.709 413.1,225.902 413.687,219.895 414.273,249.25 414.86,276.083 415.446,301.368 416.032,324.597 416.619,346.064 417.205,345.633 417.792,366.895 418.378,369.957 418.964,409.037 419.551,414.354 420.137,434.816 420.724,469.459 421.31,474.541 421.896,481.132 422.483,487.977 423.069,506.988 423.656,514.454 424.242,521.397 424.829,529.833 425.415,557.857 426.001,566.72 426.588,583.828 427.174,599.947 427.761,615.512 428.347,623.613 428.933,632.296 429.52,640.595 430.106,650.062 430.693,671.582 431.279,692.028 431.865,700.344 432.452,714.141 433.038,727.456 433.625,735.662 434.211,748.508 434.798,775.076 435.384,782.264 435.97,790.034 436.557,801.182 437.143,808.643 437.73,828.204 438.316,842.479 438.902,852.789 439.489,859.565 440.075,880.214 440.662,889.828 441.248,905.973 441.835,917.615 442.421,926.037 443.007,946.429 443.594,954.03 444.18,961.72 444.767,971.689 445.353,981.661 445.939,988.633 446.526,995.744 447.112,1004.89 447.699,1009.12 448.285,1015.56 448.871,1021.85 449.458,1028.03 450.044,1036.51 450.631,1040.21 451.217,1048.6 451.804,1054.29 452.39,1064.21 452.976,1069.32 453.563,1076.45 454.149,1081.79 454.736,1090.93 455.322,1095.77 455.908,1100.49 456.495,1102.98 457.081,1107.51 457.668,1117.5 458.254,1125.13 458.84,1130.9 459.427,1138.15 460.013,1146.76 460.6,1151.47 461.186,1152.38 461.773,1155.26 462.359,1157.71 462.945,1158.75 463.532,1161.64 464.118,1167.57 464.705,1171.49 465.291,1173.75 465.877,1175.77 466.464,1179.86 467.05,1185.21 467.637,1185.55 468.223,1187.78 468.809,1189.46 469.396,1192.88 469.982,1194.58 470.569,1200.93 471.155,1202.18 471.742,1205.43 472.328,1206.64 472.914,1209.17 473.501,1210.38 474.087,1214.69 474.674,1214.38 475.26,1211.21 475.846,1211.05 476.433,1212.31 477.019,1213.76 477.606,1210.69 478.192,1212.09 478.778,1216.77 479.365,1221.06 479.951,1223.74 480.538,1224.67 481.124,1224.51 481.711,1224.3 482.297,1224.25 482.883,1224.21 483.47,1224.15 484.056,1226.45 484.643,1229 485.229,1228.63 485.815,1228.42 486.402,1228.19 486.988,1230.76 487.575,1230.57 488.161,1228.76 488.748,1227.54 489.334,1227.22 489.92,1227.22 490.507,1228.9 491.093,1230.06 491.68,1231.21 492.266,1230.86 492.852,1234.75 493.439,1238.24 494.025,1236.21 494.612,1235.84 495.198,1237.04 495.784,1238.16 496.371,1236.6 496.957,1237.84 497.544,1236.29 498.13,1236.38 498.717,1236.28 499.303,1234.74 499.889,1238.63 500.476,1239.68 501.062,1241.66 501.649,1242.52 502.235,1243.55 502.821,1241.83 503.408,1240.18 503.994,1240.93 504.581,1242.95 505.167,1242.39 505.753,1242.17 506.34,1241.85 506.926,1242.64 507.513,1242.12 508.099,1243.33 508.686,1242.77 509.272,1242.25 509.858,1240.81 510.445,1243.26 511.031,1242.72 511.618,1244.79 512.204,1247.1 512.79,1248.91 513.377,1246.61 513.963,1247.2 514.55,1246.63 515.136,1245.98 515.722,1244.16 516.309,1245.04 516.895,1244.54 517.482,1245.6 518.068,1244.81 518.655,1244.32 519.241,1243.48 519.827,1243.2 520.414,1244.04 521,1241.03 521.587,1240.65 522.173,1239.17 522.759,1236.4 523.346,1238.99 523.932,1237.39 524.519,1237.22 525.105,1237.2 525.691,1238.14 526.278,1239.32 526.864,1237.58 527.451,1239.7 528.037,1242.01 528.624,1240.61 529.21,1239.21 529.796,1239.08 530.383,1238.76 530.969,1240.01 531.556,1239.64 532.142,1238.15 532.728,1239.49 533.315,1243.17 533.901,1243.77 534.488,1244.59 535.074,1245.21 535.661,1245.76 536.247,1247.57 536.833,1247.94 537.42,1247.5 538.006,1244.43 538.593,1242.4 539.179,1243.41 539.765,1245.41 540.352,1246.18 540.938,1248.06 541.525,1246.19 542.111,1244.44 542.697,1242.79 543.284,1241.14 543.87,1243.33 544.457,1244.05 545.043,1243.4 545.63,1246.53 546.216,1244.69 546.802,1245.27 547.389,1245.96 547.975,1245.16 548.562,1241.89 549.148,1246.18 549.734,1249.34 550.321,1248.65 550.907,1250.53 551.494,1249.5 552.08,1248.51 552.666,1248.96 553.253,1249.46 553.839,1248.51 554.426,1249.09 555.012,1248.33 555.599,1248.44 556.185,1243.8 556.771,1244.54 557.358,1245.13 557.944,1244.47 558.531,1245.02 559.117,1241.93 559.703,1240.25 560.29,1239.64 560.876,1240.45 561.463,1242.42 562.049,1243.19 562.635,1243.64 563.222,1244.48 563.808,1245.14 564.395,1245.46 564.981,1247.2 565.568,1245.41 566.154,1244.88 566.74,1245.47 567.327,1247.39 567.913,1247.82 568.5,1244.32 569.086,1243.6 569.672,1244.2 570.259,1243.15 570.845,1240.09 571.432,1238.46 572.018,1239.24 572.605,1237.43 573.191,1235.81 573.777,1235.63 574.364,1235.54 574.95,1236.64 575.537,1237.5 576.123,1237.07 576.709,1235.33 577.296,1235.23 577.882,1238.81 578.469,1237.26 579.055,1234.43 579.641,1235.61 580.228,1235.18 580.814,1233.76 581.401,1236.16 581.987,1237.09 582.574,1237.97 583.16,1236.26 583.746,1234.69 584.333,1235.56 584.919,1235.25 585.506,1235.13 586.092,1236 586.678,1234.26 587.265,1232.88 587.851,1232.69 588.438,1232.71 589.024,1232.9 589.61,1230.46 590.197,1227.88 590.783,1227.74 591.37,1229.21 591.956,1227.82 592.543,1226.7 593.129,1225.64 593.715,1224.68 594.302,1225.08 594.888,1225.35 595.475,1227.13 596.061,1225.95 596.647,1223.66 597.234,1225.24 597.82,1225.32 598.407,1225.39 598.993,1228.12 599.579,1229.59 600.166,1228.43 600.752,1227.37 601.339,1230.11 601.925,1231.11 602.512,1232.31 603.098,1234.47 603.684,1232.84 604.271,1233.87 604.857,1233.68 605.444,1233.39 606.03,1234.05 606.616,1234.95 607.203,1234.63 607.789,1235.54 608.376,1233.99 608.962,1233.51 609.548,1231 610.135,1230.71 610.721,1231.64 611.308,1231.55 611.894,1229.04 612.481,1230.31 613.067,1232.87 613.653,1232.8 614.24,1231 614.826,1234.29 615.413,1234.86 615.999,1237.98 616.585,1235.92 617.172,1237.71 617.758,1237.09 618.345,1235.38 618.931,1236.05 619.518,1235.29 620.104,1235.08 620.69,1234.7 621.277,1235.41 621.863,1236.15 622.45,1234.47 623.036,1234.04 623.622,1234 624.209,1233.28 624.795,1232.66 625.382,1232.37 625.968,1231.95 626.554,1233.94 627.141,1232.4 627.727,1233.32 628.314,1229.15 628.9,1226.35 629.487,1226.67 630.073,1225.62 630.659,1228.27 631.246,1231.9 631.832,1230.33 632.419,1228.89 633.005,1227.23 633.591,1229.72 634.178,1232.26 634.764,1233.19 635.351,1232.84 635.937,1232.33 636.523,1230.64 637.11,1230.46 637.696,1231.67 638.283,1231.36 638.869,1230.86 639.456,1230.76 640.042,1231.5 640.628,1231.5 641.215,1230.04 641.801,1228.58 642.388,1225.98 642.974,1226.03 643.56,1227.23 644.147,1228.72 644.733,1226.08 645.32,1226.93 645.906,1228.06 646.492,1228.17 647.079,1229 647.665,1231.44 648.252,1229.92 648.838,1229.6 649.425,1230.54 650.011,1230.24 650.597,1233.85 651.184,1232.26 651.77,1231.71 652.357,1231.37 652.943,1231.21 653.529,1229.64 654.116,1230.6 654.702,1230.09 655.289,1232.18 655.875,1229.3 656.462,1228.94 657.048,1228.6 657.634,1232.24 658.221,1229.31 658.807,1230.3 659.394,1229.68 659.98,1230.72 660.566,1229.25 661.153,1228.95 661.739,1227.4 662.326,1228.56 662.912,1228.36 663.498,1226.81 664.085,1223 664.671,1224.41 665.258,1226.77 665.844,1225.08 666.431,1222.67 667.017,1222.82 667.603,1221.35 668.19,1223.88 668.776,1222.54 669.363,1219.96 669.949,1222.73 670.535,1224.12 671.122,1225.37 671.708,1230.24 672.295,1227.28 672.881,1227.09 673.467,1227.16 674.054,1225.55 674.64,1226.75 675.227,1226.64 675.813,1226.53 676.4,1227.79 676.986,1225.2 677.572,1225.08 678.159,1221.43 678.745,1220.3 679.332,1219.5 679.918,1221.17 680.504,1223.94 681.091,1222.7 681.677,1220.35 682.264,1220.53 682.85,1221.02 683.436,1219.7 684.023,1220.07 684.609,1219.03 685.196,1219.04 685.782,1220.49 686.369,1220.66 686.955,1221.18 687.541,1221.44 688.128,1222.72 688.714,1220.32 689.301,1220.47 689.887,1220.47 690.473,1216.92 691.06,1218.72 691.646,1220.16 692.233,1220.37 692.819,1223.09 693.405,1224.52 693.992,1223.41 694.578,1220.74 695.165,1222.09 695.751,1220.92 696.338,1223.16 696.924,1223.24 697.51,1223.21 698.097,1224.23 698.683,1224.38 699.27,1227 699.856,1227.01 700.442,1226.85 701.029,1226.49 701.615,1225.07 702.202,1225.06 702.788,1223.85 703.375,1221.37 703.961,1222.55 704.547,1222.64 705.134,1220.15 705.72,1220.34 706.307,1222.94 706.893,1223.93 707.479,1223.86 708.066,1222.7 708.652,1224.07 709.239,1222.86 709.825,1222.97 710.411,1223.09 710.998,1220.81 711.584,1219.45 712.171,1219.63 712.757,1218.55 713.344,1218.77 713.93,1220.48 714.516,1220.52 715.103,1220.7 715.689,1223.29 716.276,1223.32 716.862,1223.24 717.448,1225.63 718.035,1225.5 718.621,1225.24 719.208,1226.31 719.794,1225.88 720.38,1223.04 720.967,1221.55 721.553,1224.24 722.14,1222.85 722.726,1224.2 723.313,1225.2 723.899,1223.71 724.485,1224.92 725.072,1225.81 725.658,1225.78 726.245,1226.73 726.831,1225.21 727.417,1225.09 728.004,1225.04 728.59,1225.11 729.177,1222.56 729.763,1223.65 730.349,1222.02 730.936,1220.68 731.522,1220.93 732.109,1222.16 732.695,1221.04 733.282,1222.03 733.868,1225.85 734.454,1225.65 735.041,1227.71 735.627,1226.43 736.214,1223.83 736.8,1222.61 737.386,1221.5 737.973,1221.57 738.559,1221.75 739.146,1221.65 739.732,1224.12 740.318,1228.96 740.905,1226.09 741.491,1225.98 742.078,1224.41 742.664,1224.1 743.251,1222.66 743.837,1222.29 744.423,1225.75 745.01,1227.75 745.596,1226.16 746.183,1225.74 746.769,1225.14 747.355,1224.97 747.942,1225.91 748.528,1227.08 749.115,1225.48 749.701,1225.4 750.288,1223.82 750.874,1223.59 751.46,1223.61 752.047,1223.66 752.633,1224.76 753.22,1226.87 753.806,1223.05 754.392,1222.95 754.979,1222.72 755.565,1222.35 756.152,1222.39 756.738,1219.69 757.324,1218.51 757.911,1221.26 758.497,1221.04 759.084,1221.13 759.67,1218.81 760.257,1221.41 760.843,1223.79 761.429,1226.24 762.016,1227.34 762.602,1227.25 763.189,1226.94 763.775,1225.28 764.361,1224.96 764.948,1227.17 765.534,1225.67 766.121,1225.36 766.707,1222.68 767.293,1224.76 767.88,1225.67 768.466,1227.97 769.053,1231.2 769.639,1232.97 770.226,1231.28 770.812,1229.46 771.398,1226.55 771.985,1224.92 772.571,1228.6 773.158,1228.12 773.744,1229.1 774.33,1228.62 774.917,1228.03 775.503,1226.42 776.09,1224.87 776.676,1224.62 777.262,1224.32 777.849,1225.15 778.435,1223.88 779.022,1222.7 779.608,1221.37 780.195,1221.38 780.781,1223.69 781.367,1219.02 781.954,1220.58 782.54,1219.28 783.127,1217.99 783.713,1219.7 784.299,1219.51 784.886,1220.71 785.472,1220.53 786.059,1221.67 786.645,1225.06 787.232,1226.19 787.818,1227.3 788.404,1227.13 788.991,1227.81 789.577,1227.52 790.164,1226.2 790.75,1227.16 791.336,1225.6 791.923,1222.74 792.509,1223.78 793.096,1224.93 793.682,1223.4 794.268,1224.33 794.855,1225.04 795.441,1224.72 796.028,1224.68 796.614,1222.89 797.201,1223.87 797.787,1224.74 798.373,1223.24 798.96,1225.64 799.546,1225.01 800.133,1224.68 800.719,1221.7 801.305,1222.92 801.892,1223.79 802.478,1227.03 803.065,1226.6 803.651,1225.15 804.237,1222.69 804.824,1221.09 805.41,1222.39 805.997,1221.07 806.583,1219.59 807.17,1219.58 807.756,1217.22 808.342,1217.08 808.929,1219.84 809.515,1218.69 810.102,1218.77 810.688,1220.23 811.274,1220.37 811.861,1220.29 812.447,1221.63 813.034,1222.89 813.62,1225.11 814.206,1223.62 814.793,1224.75 815.379,1224.62 815.966,1224.47 816.552,1223.13 817.139,1223.16 817.725,1224.22 818.311,1225.03 818.898,1224.57 819.484,1224.22 820.071,1223.96 820.657,1222.34 821.243,1222.37 821.83,1221.14 822.416,1222.12 823.003,1223.39 823.589,1224.75 824.175,1223.64 824.762,1223.47 825.348,1227.17 825.935,1228.25 826.521,1228.19 827.108,1229.04 827.694,1224.97 828.28,1224.47 828.867,1220.6 829.453,1220.48 830.04,1221.62 830.626,1221.45 831.212,1221.29 831.799,1221.14 832.385,1218.39 832.972,1218.54 833.558,1220.03 834.145,1218.91 834.731,1221.18 835.317,1221.38 835.904,1218.57 836.49,1216.27 837.077,1215.31 837.663,1211.95 838.249,1213.76 838.836,1213.92 839.422,1215.41 840.009,1213.28 840.595,1212.47 841.181,1212.76 841.768,1212.85 842.354,1214.27 842.941,1216.09 843.527,1215 844.114,1215.02 844.7,1216.76 845.286,1216.04 845.873,1216.45 846.459,1216.54 847.046,1220.07 847.632,1217.52 848.218,1215.18 848.805,1216.69 849.391,1214.61 849.978,1215.04 850.564,1215.27 851.15,1216.46 851.737,1215.42 852.323,1216.8 852.91,1218.26 853.496,1219.7 854.083,1219.74 854.669,1222.24 855.255,1223.38 855.842,1221.97 856.428,1220.59 857.015,1219.48 857.601,1218.05 858.187,1217.07 858.774,1217.19 859.36,1217.5 859.947,1217.55 860.533,1222.49 861.119,1219.76 861.706,1217.32 862.292,1216.19 862.879,1216.05 863.465,1214.97 864.052,1215.18 864.638,1215.51 865.224,1214.43 865.811,1213.49 866.397,1212.64 866.984,1210.6 867.57,1209.99 868.156,1211.62 868.743,1214.42 869.329,1215.9 869.916,1216.09 870.502,1217.68 871.089,1216.61 871.675,1219.21 872.261,1219.34 872.848,1219.27 873.434,1220.3 874.021,1220.38 874.607,1221.5 875.193,1217.71 875.78,1217.59 876.366,1219.99 876.953,1218.7 877.539,1217.55 878.125,1220.22 878.712,1220.36 879.298,1221.51 879.885,1220.32 880.471,1221.34 881.058,1218.62 881.644,1218.84 882.23,1218.82 882.817,1217.49 883.403,1214.96 883.99,1214.98 884.576,1212.87 885.162,1212.01 885.749,1212.37 886.335,1212.88 886.922,1214.46 887.508,1214.68 888.094,1210.88 888.681,1211.17 889.267,1210.39 889.854,1210.96 890.44,1211.57 891.027,1212 891.613,1213.46 892.199,1218.57 892.786,1216.16 893.372,1216.66 893.959,1217.81 894.545,1219.23 895.131,1220.38 895.718,1222.66 896.304,1223.99 896.891,1222.38 897.477,1223.44 898.063,1223.15 898.65,1220.59 899.236,1219.46 899.823,1219.59 900.409,1218.44 900.996,1218.71 901.582,1220 902.168,1217.53 902.755,1218.75 903.341,1217.49 903.928,1216.45 904.514,1217.64 905.1,1219.05 905.687,1217.72 906.273,1215.41 906.86,1215.56 907.446,1215.74 908.032,1215.92 908.619,1216.2 909.205,1216.49 909.792,1216.62 910.378,1216.91 910.965,1217.29 911.551,1218.57 912.137,1217.21 912.724,1218.35 913.31,1218.22 913.897,1219.48 914.483,1219.71 915.069,1219.85 915.656,1217.3 916.242,1222.46 916.829,1222.24 917.415,1220.85 918.002,1220.96 918.588,1219.6 919.174,1218.39 919.761,1218.44 920.347,1219.81 920.934,1219.66 921.52,1222.18 922.106,1219.49 922.693,1213.12 923.279,1214.8 923.866,1213.65 924.452,1216.51 925.038,1219.15 925.625,1221.66 926.211,1220.27 926.798,1221.3 927.384,1221.1 927.971,1221.12 928.557,1221.14 929.143,1221.21 929.73,1219.97 930.316,1218.77 930.903,1220.03 931.489,1217.36 932.075,1217.65 932.662,1219.14 933.248,1219.32 933.835,1219.1 934.421,1220.35 935.007,1222.97 935.594,1222.99 936.18,1222.83 936.767,1223.02 937.353,1221.7 937.94,1222.79 938.526,1221.56 939.112,1222.45 939.699,1223.51 940.285,1224.72 940.872,1224.71 941.458,1222 942.044,1223.2 942.631,1224.13 943.217,1221.37 943.804,1222.41 944.39,1222.19 944.976,1221.99 945.563,1218.17 946.149,1218.4 946.736,1218.26 947.322,1219.3 947.909,1216.65 948.495,1215.41 949.081,1216.6 949.668,1214.23 950.254,1214.54 950.841,1216.24 951.427,1215.15 952.013,1216.5 952.6,1215.64 953.186,1217.04 953.773,1217.1 954.359,1217.01 954.945,1216.84 955.532,1216.89 956.118,1218.1 956.705,1216.84 957.291,1217.09 957.878,1218.28 958.464,1216.99 959.05,1219.5 959.637,1220.55 960.223,1220.16 960.81,1223.67 961.396,1225.79 961.982,1224.17 962.569,1226.43 963.155,1227.05 963.742,1225.61 964.328,1228.94 964.915,1230.77 965.501,1231.24 966.087,1230.63 966.674,1228.69 967.26,1230.26 967.847,1227.02 968.433,1226.6 969.019,1227.44 969.606,1226.99 970.192,1226.53 970.779,1223.76 971.365,1224.57 971.951,1224.37 972.538,1225.17 973.124,1224.64 973.711,1225.41 974.297,1226.2 974.884,1227.01 975.47,1222.75 976.056,1222.1 976.643,1219.37 977.229,1219.37 977.816,1219.34 978.402,1219.06 978.988,1218.84 979.575,1218.84 980.161,1218.97 980.748,1215.37 981.334,1214.15 981.92,1215.68 982.507,1217.09 983.093,1218.49 983.68,1218.39 984.266,1219.76 984.853,1220.83 985.439,1219.58 986.025,1219.5 986.612,1221.84 987.198,1220.5 987.785,1219.35 988.371,1219.35 988.957,1218.17 989.544,1218.02 990.13,1214.53 990.717,1213.37 991.303,1211.3 991.889,1213.92 992.476,1214.25 993.062,1214.48 993.649,1212.02 994.235,1211.89 994.822,1212.16 995.408,1210.26 995.994,1212.21 996.581,1211.04 997.167,1210.25 997.754,1211.82 998.34,1214.55 998.926,1214.8 999.513,1213.6 1000.1,1215.16 1000.69,1215.35 1001.27,1215.43 1001.86,1215.32 1002.44,1213.26 1003.03,1212.34 1003.62,1211.32 1004.2,1212.95 1004.79,1213.32 1005.38,1212.56 1005.96,1210.28 1006.55,1211.81 1007.14,1212.14 1007.72,1211.54 1008.31,1214.52 1008.9,1214.67 1009.48,1216.36 1010.07,1215.3 1010.65,1213.97 1011.24,1214.27 1011.83,1216.86 1012.41,1216.86 1013,1219.53 1013.59,1216.22 1014.17,1215.19 1014.76,1218.98 1015.35,1216.23 1015.93,1213.75 1016.52,1214 1017.11,1214.39 1017.69,1213.55 1018.28,1215.07 1018.86,1216.47 1019.45,1216.31 1020.04,1213.95 1020.62,1216.52 1021.21,1217.95 1021.8,1214.37 1022.38,1214.38 1022.97,1218.2 1023.56,1219.47 1024.14,1220.75 1024.73,1219.41 1025.32,1217.93 1025.9,1216.61 1026.49,1216.8 1027.07,1217.01 1027.66,1215.97 1028.25,1213.84 1028.83,1214.14 1029.42,1215.76 1030.01,1216.76 1030.59,1217.89 1031.18,1219.21 1031.77,1219.1 1032.35,1220.3 1032.94,1222.81 1033.52,1222.35 1034.11,1221.23 1034.7,1220.12 1035.28,1218.96 1035.87,1218.96 1036.46,1218.87 1037.04,1221.52 1037.63,1222.71 1038.22,1220.08 1038.8,1219.97 1039.39,1219.54 1039.98,1221.95 1040.56,1221.51 1041.15,1221.36 1041.73,1218.7 1042.32,1215.13 1042.91,1215.21 1043.49,1214.21 1044.08,1213.09 1044.67,1212.24 1045.25,1212.65 1045.84,1213.1 1046.43,1210.93 1047.01,1213.78 1047.6,1214.09 1048.19,1214.37 1048.77,1214.55 1049.36,1215.79 1049.94,1215.95 1050.53,1214.99 1051.12,1215.48 1051.7,1217.01 1052.29,1218.36 1052.88,1216.06 1053.46,1218.33 1054.05,1220.86 1054.64,1223.25 1055.22,1222.98 1055.81,1221.43 1056.39,1221.09 1056.98,1222.06 1057.57,1221.75 1058.15,1222.62 1058.74,1221.07 1059.33,1224.77 1059.91,1223.15 1060.5,1223.01 1061.09,1222.83 1061.67,1222.64 1062.26,1220.92 1062.85,1220.83 1063.43,1221.68 1064.02,1222.47 1064.6,1223.46 1065.19,1224.11 1065.78,1223.84 1066.36,1223.56 1066.95,1223.28 1067.54,1224.2 1068.12,1224 1068.71,1222.55 1069.3,1225.12 1069.88,1225.98 1070.47,1226.81 1071.06,1226.37 1071.64,1227.18 1072.23,1227.74 1072.81,1222.24 1073.4,1223.22 1073.99,1225.42 1074.57,1224.95 1075.16,1226.94 1075.75,1222.78 1076.33,1222.36 1076.92,1219.6 1077.51,1217.12 1078.09,1219.74 1078.68,1219.49 1079.26,1219.44 1079.85,1223.03 1080.44,1222.81 1081.02,1221.13 1081.61,1219.72 1082.2,1220.66 1082.78,1219.41 1083.37,1219.37 1083.96,1221.68 1084.54,1220.14 1085.13,1219.82 1085.72,1220.96 1086.3,1220.77 1086.89,1216.82 1087.47,1216.92 1088.06,1217.1 1088.65,1216.97 1089.23,1218.46 1089.82,1217.6 1090.41,1219.77 1090.99,1219.74 1091.58,1220.81 1092.17,1220.54 1092.75,1221.68 1093.34,1221.37 1093.93,1221.29 1094.51,1222.5 1095.1,1222.18 1095.68,1220.59 1096.27,1221.67 1096.86,1220.29 1097.44,1221.17 1098.03,1222.29 1098.62,1222.21 1099.2,1222.16 1099.79,1222.9 1100.38,1216.25 1100.96,1216.1 1101.55,1215.13 1102.14,1216.53 1102.72,1216.6 1103.31,1214.21 1103.89,1214.43 1104.48,1214.34 1105.07,1216.94 1105.65,1214.83 1106.24,1217.31 1106.83,1218.46 1107.41,1218.28 1108,1218.28 1108.59,1218.33 1109.17,1219.47 1109.76,1217.92 1110.34,1215.37 1110.93,1214.29 1111.52,1214.53 1112.1,1215.8 1112.69,1214.71 1113.28,1215.72 1113.86,1212.18 1114.45,1211.57 1115.04,1211.97 1115.62,1210.99 1116.21,1207.75 1116.8,1210.78 1117.38,1210.1 1117.97,1210.61 1118.55,1211.1 1119.14,1213.92 1119.73,1211.64 1120.31,1213.71 1120.9,1214.2 1121.49,1214.29 1122.07,1214.05 1122.66,1214.17 1123.25,1213.07 1123.83,1212.09 1124.42,1212.58 1125.01,1214.18 1125.59,1217.02 1126.18,1215.92 1126.76,1215.06 1127.35,1214.02 1127.94,1217.71 1128.52,1217.92 1129.11,1217.87 1129.7,1214.17 1130.28,1215.85 1130.87,1217.22 1131.46,1218.7 1132.04,1221.01 1132.63,1222.28 1133.21,1223.06 1133.8,1221.54 1134.39,1220.16 1134.97,1220.01 1135.56,1220.1 1136.15,1219.85 1136.73,1219.77 1137.32,1219.68 1137.91,1217.16 1138.49,1217.17 1139.08,1214.5 1139.67,1212.12 1140.25,1216.23 1140.84,1214.93 1141.42,1211.56 1142.01,1212.92 1142.6,1210.7 1143.18,1213.53 1143.77,1214.99 1144.36,1213.97 1144.94,1215.43 1145.53,1214.19 1146.12,1215.49 1146.7,1215.63 1147.29,1214.35 1147.88,1215.79 1148.46,1213.37 1149.05,1214.7 1149.63,1213.77 1150.22,1213.77 1150.81,1215.29 1151.39,1217.95 1151.98,1217.95 1152.57,1217.97 1153.15,1216.73 1153.74,1216.74 1154.33,1216.74 1154.91,1215.48 1155.5,1216.73 1156.09,1219.14 1156.67,1218.05 1157.26,1220.21 1157.84,1220.11 1158.43,1220.13 1159.02,1220.1 1159.6,1218.47 1160.19,1217.26 1160.78,1218.67 1161.36,1217.52 1161.95,1216.23 1162.54,1216.24 1163.12,1216.41 1163.71,1217.58 1164.29,1216.05 1164.88,1217.36 1165.47,1214.95 1166.05,1214.97 1166.64,1215.16 1167.23,1215.22 1167.81,1215.25 1168.4,1218.02 1168.99,1219.52 1169.57,1220.75 1170.16,1221.84 1170.75,1221.41 1171.33,1221.49 1171.92,1221.26 1172.5,1218.75 1173.09,1219.7 1173.68,1221.96 1174.26,1224.08 1174.85,1221.11 1175.44,1222.02 1176.02,1220.73 1176.61,1219.52 1177.2,1220.7 1177.78,1222.94 1178.37,1221.52 1178.96,1221.43 1179.54,1221.01 1180.13,1219.87 1180.71,1219.83 1181.3,1222.26 1181.89,1218.13 1182.47,1216.94 1183.06,1219.69 1183.65,1223.2 1184.23,1222.85 1184.82,1222.2 1185.41,1220.92 1185.99,1218.1 1186.58,1217.99 1187.16,1216.66 1187.75,1218.07 1188.34,1217.8 1188.92,1220.05 1189.51,1219.82 1190.1,1217.08 1190.68,1215.91 1191.27,1214.9 1191.86,1217.22 1192.44,1218.52 1193.03,1217.34 1193.62,1217.33 1194.2,1218.32 1194.79,1215.78 1195.37,1215.91 1195.96,1217.28 1196.55,1214.81 1197.13,1218.49 1197.72,1222.19 1198.31,1219.5 1198.89,1221.8 1199.48,1220.26 1200.07,1220.09 1200.65,1217.58 1201.24,1217.81 1201.83,1217.73 1202.41,1221.27 1203,1219.93 1203.58,1218.79 1204.17,1216.4 1204.76,1217.65 1205.34,1215.27 1205.93,1215.39 1206.52,1214.36 1207.1,1215.55 1207.69,1214.62 1208.28,1213.34 1208.86,1214.62 1209.45,1217.19 1210.03,1218.26 1210.62,1216.84 1211.21,1216.93 1211.79,1217.27 1212.38,1218.52 1212.97,1219.82 1213.55,1218.44 1214.14,1216.14 1214.73,1217.75 1215.31,1217.7 1215.9,1215.45 1216.49,1215.63 1217.07,1218.08 1217.66,1220.69 1218.24,1221.61 1218.83,1222.55 1219.42,1221.24 1220,1222.1 1220.59,1221.93 1221.18,1219.43 1221.76,1220.66 1222.35,1224.2 1222.94,1223.95 1223.52,1224.89 1224.11,1228.19 1224.7,1230.12 1225.28,1228.28 1225.87,1229.25 1226.45,1227.6 1227.04,1224.65 1227.63,1224.23 1228.21,1225.18 1228.8,1224.87 1229.39,1224.28 1229.97,1224.02 1230.56,1222.56 1231.15,1221.98 1231.73,1221.76 1232.32,1222.75 1232.91,1220.03 1233.49,1222.47 1234.08,1223.6 1234.66,1225.26 1235.25,1223.54 1235.84,1223.16 1236.42,1221.46 1237.01,1223.6 1237.6,1223.25 1238.18,1222.73 1238.77,1221.4 1239.36,1221.36 1239.94,1221.49 1240.53,1219.26 1241.11,1220.46 1241.7,1220.63 1242.29,1220.37 1242.87,1218.94 1243.46,1218.73 1244.05,1215.94 1244.63,1214.91 1245.22,1215.13 1245.81,1215.24 1246.39,1216.81 1246.98,1216.66 1247.57,1216.89 1248.15,1218.22 1248.74,1218.19 1249.32,1218.21 1249.91,1216.73 1250.5,1219.2 1251.08,1216.84 1251.67,1214.15 1252.26,1215.36 1252.84,1215.31 1253.43,1219.07 1254.02,1219.1 1254.6,1220.05 1255.19,1218.66 1255.78,1215.87 1256.36,1212.43 1256.95,1212.7 1257.53,1210.7 1258.12,1212.55 1258.71,1213.98 1259.29,1216.73 1259.88,1219.11 1260.47,1217.78 1261.05,1218.89 1261.64,1216.15 1262.23,1215.08 1262.81,1217.68 1263.4,1218.87 1263.98,1217.82 1264.57,1218.93 1265.16,1217.59 1265.74,1216.39 1266.33,1216.23 1266.92,1217.54 1267.5,1215.88 1268.09,1217.23 1268.68,1218.43 1269.26,1215.94 1269.85,1217 1270.44,1218.06 1271.02,1219.11 1271.61,1217.61 1272.19,1217.7 1272.78,1218.88 1273.37,1218.81 1273.95,1218.76 1274.54,1216.33 1275.13,1216.28 1275.71,1213.69 1276.3,1213.81 1276.89,1216.35 1277.47,1215.04 1278.06,1212.36 1278.65,1212.61 1279.23,1211.91 1279.82,1213.46 1280.4,1214.72 1280.99,1213.47 1281.58,1213.66 1282.16,1213.98 1282.75,1213.2 1283.34,1213.18 1283.92,1213.48 1284.51,1214.79 1285.1,1213.67 1285.68,1212.51 1286.27,1211.82 1286.86,1212.15 1287.44,1212.58 1288.03,1214.03 1288.61,1213.14 1289.2,1212.42 1289.79,1213.99 1290.37,1215.77 1290.96,1216.01 1291.55,1218.47 1292.13,1214.72 1292.72,1216.07 1293.31,1216.17 1293.89,1218.67 1294.48,1217.37 1295.06,1217.42 1295.65,1217.27 1296.24,1219.99 1296.82,1221.24 1297.41,1222.6 1298,1222.15 1298.58,1220.79 1299.17,1219.62 1299.76,1219.42 1300.34,1215.65 1300.93,1214.67 1301.52,1216.27 1302.1,1215.14 1302.69,1215.1 1303.27,1212.51 1303.86,1213.94 1304.45,1213.96 1305.03,1215.19 1305.62,1217.98 1306.21,1218.05 1306.79,1218.11 1307.38,1217.94 1307.97,1216.85 1308.55,1219.46 1309.14,1220.56 1309.73,1221.72 1310.31,1220.08 1310.9,1218.72 1311.48,1218.6 1312.07,1218.82 1312.66,1217.57 1313.24,1218.7 1313.83,1218.9 1314.42,1216.42 1315,1216.57 1315.59,1215.31 1316.18,1215.43 1316.76,1213.17 1317.35,1210.81 1317.93,1215.65 1318.52,1216.8 1319.11,1219.44 1319.69,1217.84 1320.28,1221.32 1320.87,1220.17 1321.45,1220.19 1322.04,1218.64 1322.63,1217.61 1323.21,1216.21 1323.8,1216.35 1324.39,1215.17 1324.97,1216.52 1325.56,1216.39 1326.14,1216.37 1326.73,1216.49 1327.32,1219.23 1327.9,1219.29 1328.49,1218.08 1329.08,1214.3 1329.66,1215.93 1330.25,1217.42 1330.84,1217.34 1331.42,1217.2 1332.01,1217.19 1332.6,1217.19 1333.18,1217.33 1333.77,1221.13 1334.35,1219.72 1334.94,1220.91 1335.53,1220.5 1336.11,1223.09 1336.7,1224 1337.29,1224.97 1337.87,1223.44 1338.46,1223.15 1339.05,1222.74 1339.63,1223.75 1340.22,1222.42 1340.8,1222.36 1341.39,1222.5 1341.98,1223.58 1342.56,1223.52 1343.15,1224.54 1343.74,1225.47 1344.32,1223.93 1344.91,1224.82 1345.5,1226.94 1346.08,1227.53 1346.67,1227.02 1347.26,1222.96 1347.84,1221.37 1348.43,1222.26 1349.01,1220.89 1349.6,1222.02 1350.19,1223.02 1350.77,1220.08 1351.36,1221.13 1351.95,1218.49 1352.53,1221.08 1353.12,1219.74 1353.71,1217.1 1354.29,1217.1 1354.88,1215.87 1355.47,1216.21 1356.05,1217.43 1356.64,1217.28 1357.22,1217.34 1357.81,1217.23 1358.4,1218.6 1358.98,1219.88 1359.57,1219.78 1360.16,1218.31 1360.74,1215.73 1361.33,1218.12 1361.92,1216.78 1362.5,1216.82 1363.09,1216.4 1363.68,1217.67 1364.26,1216.45 1364.85,1216.67 1365.43,1217.94 1366.02,1216.75 1366.61,1213 1367.19,1214.48 1367.78,1217.25 1368.37,1217.04 1368.95,1216.09 1369.54,1217.37 1370.13,1217.58 1370.71,1217.61 1371.3,1215.33 1371.88,1216.7 1372.47,1215.46 1373.06,1215.55 1373.64,1214.34 1374.23,1214.91 1374.82,1217.46 1375.4,1216.47 1375.99,1215.16 1376.58,1216.36 1377.16,1215.22 1377.75,1216.53 1378.34,1216.83 1378.92,1219.47 1379.51,1218.08 1380.09,1218.04 1380.68,1216.43 1381.27,1217.63 1381.85,1216.53 1382.44,1217.54 1383.03,1218.76 1383.61,1218.68 1384.2,1218.37 1384.79,1219.37 1385.37,1219 1385.96,1218.9 1386.55,1219.82 1387.13,1219.66 1387.72,1219.81 1388.3,1220.93 1388.89,1218.48 1389.48,1218.41 1390.06,1220.95 1390.65,1219.97 1391.24,1221.08 1391.82,1221.76 1392.41,1220.05 1393,1221.1 1393.58,1220.99 1394.17,1221.98 1394.75,1224.23 1395.34,1221.45 1395.93,1220.26 1396.51,1218.97 1397.1,1216.81 1397.69,1218.04 1398.27,1219.17 1398.86,1217.77 1399.45,1217.72 1400.03,1217.82 1400.62,1219.05 1401.21,1218.97 1401.79,1218.91 1402.38,1216.63 1402.96,1216.84 1403.55,1218.29 1404.14,1219.42 1404.72,1219.3 1405.31,1219.39 1405.9,1219.2 1406.48,1220.3 1407.07,1221.5 1407.66,1217.81 1408.24,1218.91 1408.83,1217.61 1409.42,1216.26 1410,1216.52 1410.59,1216.49 1411.17,1214.07 1411.76,1214.11 1412.35,1215.68 1412.93,1215.38 1413.52,1216.61 1414.11,1218.87 1414.69,1218.9 1415.28,1218.57 1415.87,1219.9 1416.45,1221.08 1417.04,1219.62 1417.63,1220.85 1418.21,1221.91 1418.8,1220.25 1419.38,1221.43 1419.97,1223.7 1420.56,1223.4 1421.14,1221.7 1421.73,1216.88 1422.32,1215.69 1422.9,1216.94 1423.49,1215.68 1424.08,1217.15 1424.66,1218.2 1425.25,1215.62 1425.83,1218.03 1426.42,1217.43 1427.01,1216.43 1427.59,1218.81 1428.18,1220.06 1428.77,1216.42 1429.35,1217.48 1429.94,1217.36 1430.53,1216.24 1431.11,1217.29 1431.7,1217.26 1432.29,1217.23 1432.87,1212.34 1433.46,1211.23 1434.04,1209.06 1434.63,1210.54 1435.22,1215.78 1435.8,1217.29 1436.39,1218.49 1436.98,1215.99 1437.56,1217.31 1438.15,1216.17 1438.74,1217.49 1439.32,1217.51 1439.91,1218.82 1440.5,1221.1 1441.08,1219.62 1441.67,1219.5 1442.25,1219.61 1442.84,1218.04 1443.43,1216.59 1444.01,1217.68 1444.6,1217.63 1445.19,1216.53 1445.77,1215.47 1446.36,1214.37 1446.95,1213.4 1447.53,1213.48 1448.12,1213.6 1448.7,1213.87 1449.29,1211.58 1449.88,1213.09 1450.46,1214.72 1451.05,1215.77 1451.64,1215.9 1452.22,1213.88 1452.81,1215.3 1453.4,1214.21 1453.98,1216.78 1454.57,1214.35 1455.16,1214.8 1455.74,1213.73 1456.33,1213.81 1456.91,1214.19 1457.5,1214.46 1458.09,1214.76 1458.67,1214.89 1459.26,1215.2 1459.85,1216.62 1460.43,1212.91 1461.02,1212.93 1461.61,1213.13 1462.19,1212.08 1462.78,1213.79 1463.37,1213.82 1463.95,1212.9 1464.54,1210.56 1465.12,1211.02 1465.71,1210.15 1466.3,1210.69 1466.88,1210.85 1467.47,1211.18 1468.06,1208.97 1468.64,1208.39 1469.23,1208.63 1469.82,1210.17 1470.4,1210.79 1470.99,1213.56 1471.57,1214.96 1472.16,1214.15 1472.75,1214.45 1473.33,1212.19 1473.92,1212.4 1474.51,1214.06 1475.09,1215.66 1475.68,1215.83 1476.27,1214.68 1476.85,1216.11 1477.44,1216.29 1478.03,1217.61 1478.61,1217.82 1479.2,1219.23 1479.78,1219.3 1480.37,1219.23 1480.96,1218.04 1481.54,1220.82 1482.13,1223.14 1482.72,1222.78 1483.3,1221.2 1483.89,1222.26 1484.48,1219.29 1485.06,1218.13 1485.65,1217.85 1486.24,1217.97 1486.82,1217.94 1487.41,1217.78 1487.99,1216.76 1488.58,1220.11 1489.17,1220.32 1489.75,1221.24 1490.34,1221.14 1490.93,1218.41 1491.51,1218.37 1492.1,1218.47 1492.69,1219.86 1493.27,1221.05 1493.86,1220.72 1494.45,1221.7 1495.03,1220.39 1495.62,1220.35 1496.2,1216.72 1496.79,1215.45 1497.38,1219.4 1497.96,1219.23 1498.55,1218.17 1499.14,1216.88 1499.72,1215.38 1500.31,1216.76 1500.9,1214.41 1501.48,1215.88 1502.07,1216.08 1502.65,1217.08 1503.24,1219.55 1503.83,1219.39 1504.41,1219.01 1505,1218.8 1505.59,1219.04 1506.17,1218.73 1506.76,1217.19 1507.35,1217.05 1507.93,1219.29 1508.52,1216.6 1509.11,1216.53 1509.69,1214.01 1510.28,1214.15 1510.86,1211.92 1511.45,1210.89 1512.04,1212.59 1512.62,1212.65 1513.21,1211.8 1513.8,1208.32 1514.38,1208.75 1514.97,1209.33 1515.56,1212.2 1516.14,1215.23 1516.73,1216.8 1517.32,1216.87 1517.9,1215.63 1518.49,1215.85 1519.07,1219.44 1519.66,1219.13 1520.25,1220.17 1520.83,1220.04 1521.42,1218.54 1522.01,1219.53 1522.59,1219.56 1523.18,1215.97 1523.77,1216.13 1524.35,1215.05 1524.94,1220.11 1525.52,1218.74 1526.11,1218.68 1526.7,1218.62 1527.28,1219.83 1527.87,1222.28 1528.46,1222.16 1529.04,1221.87 1529.63,1223.1 1530.22,1221.47 1530.8,1221.5 1531.39,1222.48 1531.98,1223.24 1532.56,1222.75 1533.15,1221.36 1533.73,1219.85 1534.32,1219.82 1534.91,1219.82 1535.49,1218.39 1536.08,1218.21 1536.67,1218.19 1537.25,1219.78 1537.84,1219.4 1538.43,1219.23 1539.01,1219.11 1539.6,1222.82 1540.19,1223.83 1540.77,1225.88 1541.36,1224.18 1541.94,1226.18 1542.53,1228.29 1543.12,1226.27 1543.7,1224.64 1544.29,1224.5 1544.88,1225.46 1545.46,1226.14 1546.05,1222.96 1546.64,1222.81 1547.22,1222.49 1547.81,1222.36 1548.4,1222.23 1548.98,1221.71 1549.57,1224.07 1550.15,1220.03 1550.74,1223.71 1551.33,1223.39 1551.91,1223.08 1552.5,1224.14 1553.09,1223.9 1553.67,1223.57 1554.26,1225.42 1554.85,1221.24 1555.43,1221.23 1556.02,1219.57 1556.6,1218.55 1557.19,1218.33 1557.78,1218.29 1558.36,1214.51 1558.95,1214.86 1559.54,1214.79 1560.12,1216.19 1560.71,1216.25 1561.3,1213.99 1561.88,1215.22 1562.47,1217.96 1563.06,1216.6 1563.64,1218.85 1564.23,1218.58 1564.81,1218.36 1565.4,1220.55 1565.99,1221.75 1566.57,1220.13 1567.16,1218.62 1567.75,1217.28 1568.33,1214.85 1568.92,1214.95 1569.51,1216.29 1570.09,1212.54 1570.68,1212.64 1571.27,1215.41 1571.85,1215.57 1572.44,1214.53 1573.02,1215.62 1573.61,1218.04 1574.2,1216.73 1574.78,1216.63 1575.37,1216.73 1575.96,1216.73 1576.54,1215.61 1577.13,1216.74 1577.72,1215.69 1578.3,1215.8 1578.89,1217.06 1579.47,1214.56 1580.06,1217.38 1580.65,1218.64 1581.23,1218.44 1581.82,1219.52 1582.41,1219.4 1582.99,1218.1 1583.58,1220.46 1584.17,1220.43 1584.75,1219.26 1585.34,1219.28 1585.93,1218.24 1586.51,1219.3 1587.1,1215.47 1587.68,1216.71 1588.27,1219.44 1588.86,1221.89 1589.44,1220.38 1590.03,1219.06 1590.62,1218.91 1591.2,1217.53 1591.79,1216.38 1592.38,1216.21 1592.96,1213.84 1593.55,1213.99 1594.14,1215.4 1594.72,1216.63 1595.31,1216.68 1595.89,1218.03 1596.48,1220.34 1597.07,1222.89 1597.65,1226.32 1598.24,1228.03 1598.83,1225.43 1599.41,1227.55 1600,1225.87 1600.59,1227.96 1601.17,1227.49 1601.76,1224.76 1602.34,1224.34 1602.93,1223.91 1603.52,1223.63 1604.1,1222.24 1604.69,1219.59 1605.28,1218.1 1605.86,1216.83 1606.45,1217.05 1607.04,1215.84 1607.62,1214.65 1608.21,1214.85 1608.8,1214.89 1609.38,1213.61 1609.97,1211.26 1610.55,1214.08 1611.14,1214.26 1611.73,1214.34 1612.31,1214.51 1612.9,1212.1 1613.49,1213.51 1614.07,1215.07 1614.66,1214.9 1615.25,1216.24 1615.83,1219.91 1616.42,1218.48 1617.01,1220.76 1617.59,1218.1 1618.18,1219.55 1618.76,1219.46 1619.35,1219.62 1619.94,1220.95 1620.52,1220.69 1621.11,1219.15 1621.7,1219.13 1622.28,1219.07 1622.87,1219.98 1623.46,1218.43 1624.04,1214.68 1624.63,1217.55 1625.22,1221.2 1625.8,1217.45 1626.39,1217.64 1626.97,1216.31 1627.56,1215.28 1628.15,1216.64 1628.73,1218.99 1629.32,1218.83 1629.91,1216.29 1630.49,1213.85 1631.08,1215.11 1631.67,1216.21 1632.25,1212.59 1632.84,1212.77 1633.42,1210.63 1634.01,1205.91 1634.6,1208.15 1635.18,1208.62 1635.77,1211.73 1636.36,1208.65 1636.94,1208.01 1637.53,1209.9 1638.12,1210.38 1638.7,1209.46 1639.29,1206.36 1639.88,1206.87 1640.46,1207.69 1641.05,1208.48 1641.63,1212.96 1642.22,1211.78 1642.81,1209.52 1643.39,1209.81 1643.98,1207.78 1644.57,1207.05 1645.15,1207.73 1645.74,1208.42 1646.33,1209.14 1646.91,1208.45 1647.5,1210.2 1648.09,1209.39 1648.67,1212.4 1649.26,1212.76 1649.84,1215.6 1650.43,1215.92 1651.02,1216 1651.6,1214.82 1652.19,1216.06 1652.78,1214.68 1653.36,1215.94 1653.95,1216.06 1654.54,1217.44 1655.12,1217.55 1655.71,1217.7 1656.29,1216.72 1656.88,1218.35 1657.47,1217.11 1658.05,1218.28 1658.64,1217.19 1659.23,1218.52 1659.81,1217.62 1660.4,1216.46 1660.99,1213.91 1661.57,1212.78 1662.16,1214.77 1662.75,1214.86 1663.33,1213.89 1663.92,1215.43 1664.5,1214.26 1665.09,1213.3 1665.68,1215.95 1666.26,1212.17 1666.85,1215.04 1667.44,1216.29 1668.02,1216.29 1668.61,1216.58 1669.2,1216.58 1669.78,1216.77 1670.37,1217.93 1670.96,1215.47 1671.54,1215.69 1672.13,1213.89 1672.71,1212.95 1673.3,1214.62 1673.89,1215.86 1674.47,1217.18 1675.06,1215.93 1675.65,1215.94 1676.23,1214.62 1676.82,1216.03 1677.41,1218.7 1677.99,1217.59 1678.58,1217.43 1679.17,1215.98 1679.75,1219.7 1680.34,1218.32 1680.92,1218.41 1681.51,1217.07 1682.1,1217.21 1682.68,1216.99 1683.27,1217.15 1683.86,1218.72 1684.44,1218.6 1685.03,1220.89 1685.62,1224.22 1686.2,1224.95 1686.79,1224.53 1687.37,1224.3 1687.96,1222.78 1688.55,1222.75 1689.13,1226.12 1689.72,1224.47 1690.31,1224.34 1690.89,1223.79 1691.48,1227.02 1692.07,1231.31 1692.65,1231.61 1693.24,1230.87 1693.83,1231.38 1694.41,1229.18 1695,1227.21 1695.58,1225.63 1696.17,1225.46 1696.76,1224.04 1697.34,1223.87 1697.93,1225.95 1698.52,1225.7 1699.1,1220.28 1699.69,1222.52 1700.28,1221.25 1700.86,1222.12 1701.45,1223.15 1702.04,1222.85 1702.62,1222.44 1703.21,1218.6 1703.79,1217.13 1704.38,1215.74 1704.97,1215.94 1705.55,1213.74 1706.14,1212.65 1706.73,1214.23 1707.31,1215.79 1707.9,1215.87 1708.49,1216 1709.07,1216.07 1709.66,1218.63 1710.24,1219.61 1710.83,1217.17 1711.42,1219.66 1712,1219.41 1712.59,1219.11 1713.18,1218.84 1713.76,1218.83 1714.35,1218.89 1714.94,1214.9 1715.52,1215.24 1716.11,1220.17 1716.7,1222.3 1717.28,1223.35 1717.87,1223.18 1718.45,1220.24 1719.04,1221.53 1719.63,1221.1 1720.21,1216.15 1720.8,1216.18 1721.39,1213.67 1721.97,1216.16 1722.56,1213.77 1723.15,1212.8 1723.73,1211.96 1724.32,1212.23 1724.91,1212.55 1725.49,1214.14 1726.08,1210.82 1726.66,1209.73 1727.25,1211.19 1727.84,1210.17 1728.42,1211.77 1729.01,1210.8 1729.6,1212.44 1730.18,1213.86 1730.77,1211.44 1731.36,1211.63 1731.94,1213.01 1732.53,1211.99 1733.11,1212.22 1733.7,1212.56 1734.29,1215.66 1734.87,1215.87 1735.46,1214.7 1736.05,1213.4 1736.63,1211.09 1737.22,1213.78 1737.81,1213.98 1738.39,1215.39 1738.98,1214.33 1739.57,1215.71 1740.15,1214.5 1740.74,1217.16 1741.32,1217.14 1741.91,1215.97 1742.5,1217.32 1743.08,1217.44 1743.67,1217.37 1744.26,1217.33 1744.84,1217.56 1745.43,1217.49 1746.02,1218.75 1746.6,1220.13 1747.19,1216.12 1747.78,1217.49 1748.36,1218.62 1748.95,1218.55 1749.53,1216.27 1750.12,1215.32 1750.71,1212.93 1751.29,1211.94 1751.88,1212.39 1752.47,1214.05 1753.05,1211.92 1753.64,1208.47 1754.23,1207.76 1754.81,1207.07 1755.4,1207.37 1755.99,1206.54 1756.57,1207.21 1757.16,1204.13 1757.74,1203.58 1758.33,1204.6 1758.92,1206.59 1759.5,1210.89 1760.09,1208.84 1760.68,1210.57 1761.26,1208.36 1761.85,1207.66 1762.44,1207.04 1763.02,1207.48 1763.61,1208.12 1764.19,1209.92 1764.78,1211.4 1765.37,1211.73 1765.95,1211.95 1766.54,1214.61 1767.13,1217.16 1767.71,1217.27 1768.3,1214.81 1768.89,1214.86 1769.47,1217.53 1770.06,1217.58 1770.65,1218.7 1771.23,1217.29 1771.82,1217.25 1772.4,1215.89 1772.99,1217.21 1773.58,1218.51 1774.16,1219.81 1774.75,1217.33 1775.34,1221.18 1775.92,1220.89 1776.51,1222.09 1777.1,1222.04 1777.68,1223.03 1778.27,1222.65 1778.86,1223.58 1779.44,1225.7 1780.03,1229.05 1780.61,1229.49 1781.2,1228.97 1781.79,1228.27 1782.37,1230.43 1782.96,1229.67 1783.55,1227.78 1784.13,1227.17 1784.72,1223.02 1785.31,1223.7 1785.89,1224.51 1786.48,1225.65 1787.06,1222.57 1787.65,1223.93 1788.24,1223.36 1788.82,1223.04 1789.41,1222.91 1790,1222.7 1790.58,1222.39 1791.17,1218.6 1791.76,1217.52 1792.34,1216.47 1792.93,1214.26 1793.52,1215.92 1794.1,1215.06 1794.69,1215.14 1795.27,1213 1795.86,1214.58 1796.45,1217.04 1797.03,1217.21 1797.62,1218.84 1798.21,1217.6 1798.79,1218.68 1799.38,1221.1 1799.97,1219.95 1800.55,1220.86 1801.14,1221.77 1801.73,1222.92 1802.31,1221.12 1802.9,1219.9 1803.48,1219.96 1804.07,1222.29 1804.66,1221.82 1805.24,1224.11 1805.83,1222.58 1806.42,1220.04 1807,1218.76 1807.59,1217.59 1808.18,1218.55 1808.76,1220.96 1809.35,1219.24 1809.94,1220.16 1810.52,1218.65 1811.11,1215.89 1811.69,1212.57 1812.28,1212.71 1812.87,1215.33 1813.45,1215.28 1814.04,1215.54 1814.63,1216.82 1815.21,1216.85 1815.8,1218.14 1816.39,1219.36 1816.97,1224.19 1817.56,1226.19 1818.14,1225.86 1818.73,1222.9 1819.32,1221.22 1819.9,1220.75 1820.49,1219.18 1821.08,1217.65 1821.66,1215.11 1822.25,1215.16 1822.84,1216.48 1823.42,1216.54 1824.01,1216.7 1824.6,1216.9 1825.18,1215.59 1825.77,1215.21 1826.35,1214.05 1826.94,1215.44 1827.53,1214.44 1828.11,1215.87 1828.7,1217.31 1829.29,1213.78 1829.87,1214.08 1830.46,1211.7 1831.05,1214.71 1831.63,1217.17 1832.22,1217.07 1832.81,1216.86 1833.39,1217.98 1833.98,1221.62 1834.56,1217.89 1835.15,1217.77 1835.74,1217.95 1836.32,1220.28 1836.91,1220.35 1837.5,1220.27 1838.08,1218.95 1838.67,1217.74 1839.26,1217.91 1839.84,1219.16 1840.43,1221.3 1841.01,1222.4 1841.6,1223.4 1842.19,1219.48 1842.77,1219.42 1843.36,1215.5 1843.95,1215.84 1844.53,1215.88 1845.12,1217.14 1845.71,1220.79 1846.29,1220.44 1846.88,1220.21 1847.47,1219.7 1848.05,1218.29 1848.64,1218.29 1849.22,1218.42 1849.81,1215.99 1850.4,1214.96 1850.98,1212.83 1851.57,1212.08 1852.16,1213.92 1852.74,1214.52 1853.33,1214.69 1853.92,1214.8 1854.5,1215.16 1855.09,1215.19 1855.68,1214.87 1856.26,1215.01 1856.85,1216.47 1857.43,1216.44 1858.02,1214.96 1858.61,1213.89 1859.19,1215.18 1859.78,1216.64 1860.37,1216.6 1860.95,1218.02 1861.54,1215.29 1862.13,1216.52 1862.71,1215.28 1863.3,1216.61 1863.88,1216.77 1864.47,1215.63 1865.06,1213.2 1865.64,1213.36 1866.23,1214.73 1866.82,1214.83 1867.4,1216.3 1867.99,1215.16 1868.58,1219.03 1869.16,1220.2 1869.75,1218.83 1870.34,1217.36 1870.92,1215.91 1871.51,1215.89 1872.09,1215.98 1872.68,1215.96 1873.27,1216.09 1873.85,1217.58 1874.44,1218.93 1875.03,1217.57 1875.61,1216.17 1876.2,1219.9 1876.79,1222.45 1877.37,1223.36 1877.96,1222.89 1878.55,1222.43 1879.13,1222.38 1879.72,1223.46 1880.3,1221.91 1880.89,1222.89 1881.48,1222.42 1882.06,1222.06 1882.65,1221.83 1883.24,1223.76 1883.82,1224.37 1884.41,1221.34 1885,1222.48 1885.58,1221.15 1886.17,1222.18 1886.76,1224.28 1887.34,1223.89 1887.93,1227.14 1888.51,1225.65 1889.1,1224.02 1889.69,1223.63 1890.27,1222.23 1890.86,1220.58 1891.45,1219.24 1892.03,1219.46 1892.62,1219.47 1893.21,1218.17 1893.79,1217.21 1894.38,1216.25 1894.96,1214.98 1895.55,1215.05 1896.14,1212.55 1896.72,1211.53 1897.31,1210.8 1897.9,1208.78 1898.48,1207.92 1899.07,1214.36 1899.66,1213.53 1900.24,1213.87 1900.83,1213.96 1901.42,1212.72 1902,1214.28 1902.59,1214.47 1903.17,1214.53 1903.76,1214.77 1904.35,1217.18 1904.93,1216.25 1905.52,1216.41 1906.11,1216.39 1906.69,1215.19 1907.28,1215.28 1907.87,1215.39 1908.45,1215.47 1909.04,1216.79 1909.63,1215.7 1910.21,1215.91 1910.8,1216.04 1911.38,1217.43 1911.97,1220.96 1912.56,1220.71 1913.14,1219.24 1913.73,1218.01 1914.32,1217.75 1914.9,1218.91 1915.49,1216.31 1916.08,1218.86 1916.66,1216.5 1917.25,1216.71 1917.83,1215.23 1918.42,1215.24 1919.01,1215.45 1919.59,1216.95 1920.18,1216.81 1920.77,1216.82 1921.35,1215.55 1921.94,1214.55 1922.53,1215.83 1923.11,1216.03 1923.7,1216.08 1924.29,1217.23 1924.87,1216.24 1925.46,1216.19 1926.04,1219.63 1926.63,1220.74 1927.22,1223.02 1927.8,1222.72 1928.39,1223.59 1928.98,1223.74 1929.56,1223.47 1930.15,1223.3 1930.74,1225.39 1931.32,1222.63 1931.91,1222.57 1932.5,1223.4 1933.08,1222.99 1933.67,1221.33 1934.25,1221.19 1934.84,1219.8 1935.43,1223.09 1936.01,1221.48 1936.6,1218.84 1937.19,1217.5 1937.77,1217.49 1938.36,1216.29 1938.95,1217.67 1939.53,1216.44 1940.12,1216.26 1940.71,1213.84 1941.29,1212.95 1941.88,1215.8 1942.46,1214.68 1943.05,1217.36 1943.64,1217.51 1944.22,1215.17 1944.81,1212.63 1945.4,1210.3 1945.98,1210.83 1946.57,1211.04 1947.16,1210.2 1947.74,1209.74 1948.33,1209.07 1948.91,1208.18 1949.5,1209.69 1950.09,1214 1950.67,1214.22 1951.26,1214.4 1951.85,1216.8 1952.43,1217.01 1953.02,1218.12 1953.61,1219.48 1954.19,1218.33 1954.78,1218.39 1955.37,1219.4 1955.95,1220.65 1956.54,1221.93 1957.12,1222.9 1957.71,1221.2 1958.3,1221.15 1958.88,1219.77 1959.47,1220.6 1960.06,1221.59 1960.64,1221.57 1961.23,1222.59 1961.82,1223.5 1962.4,1224.51 1962.99,1227.65 1963.58,1230.85 1964.16,1228.84 1964.75,1228.13 1965.33,1226.16 1965.92,1228.12 1966.51,1225.17 1967.09,1224.79 1967.68,1220.75 1968.27,1219.13 1968.85,1219.01 1969.44,1220.39 1970.03,1219.04 1970.61,1221.36 1971.2,1226.04 1971.78,1228.23 1972.37,1228.79 1972.96,1224.42 1973.54,1224.06 1974.13,1222.66 1974.72,1221.06 1975.3,1218.5 1975.89,1217.15 1976.48,1215.95 1977.06,1213.37 1977.65,1213.61 1978.24,1216.31 1978.82,1219.94 1979.41,1219.82 1979.99,1221.07 1980.58,1219.7 1981.17,1219.56 1981.75,1221.9 1982.34,1221.71 1982.93,1220.27 1983.51,1218.38 1984.1,1219.42 1984.69,1223.07 1985.27,1218.99 1985.86,1218.87 1986.45,1219.71 1987.03,1223.22 1987.62,1220.18 1988.2,1218.84 1988.79,1218.4 1989.38,1215.87 1989.96,1214.88 1990.55,1217.33 1991.14,1217.22 1991.72,1214.6 1992.31,1213.47 1992.9,1212.29 1993.48,1210.04 1994.07,1209.35 1994.65,1206.05 1995.24,1209.13 1995.83,1209.61 1996.41,1211.46 1997,1213.19 1997.59,1213.81 1998.17,1216.39 1998.76,1220.03 1999.35,1221 1999.93,1220.88 2000.52,1219.46 2001.11,1219.6 2001.69,1223.16 2002.28,1224.15 2002.86,1221.55 2003.45,1223.9 2004.04,1225.12 2004.62,1223.69 2005.21,1226.84 2005.8,1226.4 2006.38,1225.93 2006.97,1225.65 2007.56,1224.29 2008.14,1220.43 2008.73,1220.72 2009.32,1220.96 2009.9,1219.55 2010.49,1218.27 2011.07,1219.65 2011.66,1220.61 2012.25,1218 2012.83,1220.44 2013.42,1221.34 2014.01,1220.82 2014.59,1223.15 2015.18,1221.65 2015.77,1220.09 2016.35,1217.81 2016.94,1218.05 2017.53,1217.98 2018.11,1214.42 2018.7,1213.21 2019.28,1213.69 2019.87,1213.91 2020.46,1214 2021.04,1214.25 2021.63,1212.96 2022.22,1213.4 2022.8,1212.25 2023.39,1210.23 2023.98,1212.12 2024.56,1212.7 2025.15,1207.89 2025.73,1207.36 2026.32,1211.56 2026.91,1213.04 2027.49,1211.78 2028.08,1209.61 2028.67,1210.07 2029.25,1211.79 2029.84,1212.16 2030.43,1213.7 2031.01,1213.85 2031.6,1216.53 2032.19,1216.27 2032.77,1217.57 2033.36,1217.29 2033.94,1218.54 2034.53,1218.56 2035.12,1217.3 2035.7,1216.28 2036.29,1217.18 2036.88,1219.49 2037.46,1217.15 2038.05,1217.09 2038.64,1217.32 2039.22,1217.28 2039.81,1216.25 2040.4,1219.02 2040.98,1222.63 2041.57,1223.62 2042.15,1222 2042.74,1220.4 2043.33,1218.71 2043.91,1217.48 2044.5,1215.16 2045.09,1214.28 2045.67,1211.95 2046.26,1209.92 2046.85,1210.38 2047.43,1209.67 2048.02,1210.09 2048.6,1208.97 2049.19,1209.16 2049.78,1213.11 2050.36,1213.19 2050.95,1213.51 2051.54,1214.95 2052.12,1215.24 2052.71,1215.55 2053.3,1214.51 2053.88,1214.95 2054.47,1216.59 2055.06,1219.05 2055.64,1217.63 2056.23,1218.67 2056.81,1216.03 2057.4,1217.25 2057.99,1217.67 2058.57,1216.42 2059.16,1217.62 2059.75,1217.61 2060.33,1221.27 2060.92,1223.51 2061.51,1220.86 2062.09,1216.95 2062.68,1215.66 2063.27,1216.93 2063.85,1217.07 2064.44,1220.76 2065.02,1222.89 2065.61,1220.14 2066.2,1219.8 2066.78,1219.81 2067.37,1218.34 2067.96,1218.27 2068.54,1214.44 2069.13,1218.36 2069.72,1222.06 2070.3,1220.68 2070.89,1221.76 2071.48,1221.4 2072.06,1222.46 2072.65,1222.1 2073.23,1219.37 2073.82,1218.03 2074.41,1219.46 2074.99,1219.12 2075.58,1217.68 2076.17,1216.54 2076.75,1216.36 2077.34,1216.21 2077.93,1217.46 2078.51,1215.04 2079.1,1216.3 2079.68,1216.5 2080.27,1216.68 2080.86,1216.49 2081.44,1215.3 2082.03,1215.46 2082.62,1214.42 2083.2,1212.19 2083.79,1211.32 2084.38,1214.26 2084.96,1215.65 2085.55,1217.04 2086.14,1215.97 2086.72,1216.34 2087.31,1213.91 2087.89,1214.33 2088.48,1213.3 2089.07,1213.25 2089.65,1213.56 2090.24,1213.63 2090.83,1215.19 2091.41,1217.74 2092,1217.64 2092.59,1217.48 2093.17,1221.23 2093.76,1219.81 2094.35,1220.98 2094.93,1219.63 2095.52,1220.83 2096.1,1220.53 2096.69,1220.55 2097.28,1220.56 2097.86,1219.18 2098.45,1218.87 2099.04,1221.09 2099.62,1222.04 2100.21,1219.18 2100.8,1217.96 2101.38,1220.04 2101.97,1217.69 2102.55,1216.48 2103.14,1215.55 2103.73,1215.61 2104.31,1214.39 2104.9,1216.04 2105.49,1215.96 2106.07,1216.04 2106.66,1216.33 2107.25,1216.33 2107.83,1216.54 2108.42,1216.55 2109.01,1215.43 2109.59,1215.4 2110.18,1215.59 2110.76,1215.88 2111.35,1216.12 2111.94,1217.52 2112.52,1217.75 2113.11,1218.09 2113.7,1219.23 2114.28,1219.15 2114.87,1220.28 2115.46,1217.7 2116.04,1219.04 2116.63,1217.91 2117.22,1217.91 2117.8,1216.66 2118.39,1214.5 2118.97,1215.98 2119.56,1213.64 2120.15,1217.62 2120.73,1218.97 2121.32,1217.72 2121.91,1215.35 2122.49,1213.13 2123.08,1213.22 2123.67,1214.73 2124.25,1213.59 2124.84,1210.04 2125.42,1209.04 2126.01,1212.08 2126.6,1212.32 2127.18,1210.05 2127.77,1211.58 2128.36,1214.48 2128.94,1214.79 2129.53,1216.19 2130.12,1217.86 2130.7,1219.34 2131.29,1217.04 2131.88,1217.42 2132.46,1217.55 2133.05,1217.48 2133.63,1217.57 2134.22,1216.12 2134.81,1218.42 2135.39,1223.5 2135.98,1225.72 2136.57,1225.55 2137.15,1222.5 2137.74,1223.37 2138.33,1223.4 2138.91,1225.78 2139.5,1225.42 2140.09,1226.11 2140.67,1225.64 2141.26,1226.47 2141.84,1228.32 2142.43,1225.16 2143.02,1223.63 2143.6,1224.59 2144.19,1221.86 2144.78,1219.08 2145.36,1218.92 2145.95,1220.14 2146.54,1221.13 2147.12,1217.36 2147.71,1216.18 2148.3,1215.98 2148.88,1214.82 2149.47,1213.76 2150.05,1213.8 2150.64,1214.01 2151.23,1217.74 2151.81,1220.22 2152.4,1216.21 2152.99,1217.67 2153.57,1218.98 2154.16,1218.54 2154.75,1220.86 2155.33,1220.67 2155.92,1220.73 2156.5,1220.56 2157.09,1221.63 2157.68,1220.14 2158.26,1221.1 \"/>\n<path clip-path=\"url(#clip442)\" d=\"M986.025 1218.09 L986.612 1218.09 L987.198 1218.09 L987.785 1218.09 L988.371 1218.09 L988.957 1218.09 L989.544 1218.09 L990.13 1218.09 L990.717 1218.09 L991.303 1218.09 L991.889 1218.09 L992.476 1218.09 L993.062 1218.09 L993.649 1218.09 L994.235 1218.09 L994.822 1218.09 L995.408 1218.09 L995.994 1218.09 L996.581 1218.09 L997.167 1218.09 L997.754 1218.09 L998.34 1218.09 L998.926 1218.09 L999.513 1218.09 L1000.1 1218.09 L1000.69 1218.09 L1001.27 1218.09 L1001.86 1218.09 L1002.44 1218.09 L1003.03 1218.09 L1003.62 1218.09 L1004.2 1218.09 L1004.79 1218.09 L1005.38 1218.09 L1005.96 1218.09 L1006.55 1218.09 L1007.14 1218.09 L1007.72 1218.09 L1008.31 1218.09 L1008.9 1218.09 L1009.48 1218.09 L1010.07 1218.09 L1010.65 1218.09 L1011.24 1218.09 L1011.83 1218.09 L1012.41 1218.09 L1013 1218.09 L1013.59 1218.09 L1014.17 1218.09 L1014.76 1218.09 L1015.35 1218.09 L1015.93 1218.09 L1016.52 1218.09 L1017.11 1218.09 L1017.69 1218.09 L1018.28 1218.09 L1018.86 1218.09 L1019.45 1218.09 L1020.04 1218.09 L1020.62 1218.09 L1021.21 1218.09 L1021.8 1218.09 L1022.38 1218.09 L1022.97 1218.09 L1023.56 1218.09 L1024.14 1218.09 L1024.73 1218.09 L1025.32 1218.09 L1025.9 1218.09 L1026.49 1218.09 L1027.07 1218.09 L1027.66 1218.09 L1028.25 1218.09 L1028.83 1218.09 L1029.42 1218.09 L1030.01 1218.09 L1030.59 1218.09 L1031.18 1218.09 L1031.77 1218.09 L1032.35 1218.09 L1032.94 1218.09 L1033.52 1218.09 L1034.11 1218.09 L1034.7 1218.09 L1035.28 1218.09 L1035.87 1218.09 L1036.46 1218.09 L1037.04 1218.09 L1037.63 1218.09 L1038.22 1218.09 L1038.8 1218.09 L1039.39 1218.09 L1039.98 1218.09 L1040.56 1218.09 L1041.15 1218.09 L1041.73 1218.09 L1042.32 1218.09 L1042.91 1218.09 L1043.49 1218.09 L1044.08 1218.09 L1044.67 1218.09 L1045.25 1218.09 L1045.84 1218.09 L1046.43 1218.09 L1047.01 1218.09 L1047.6 1218.09 L1048.19 1218.09 L1048.77 1218.09 L1049.36 1218.09 L1049.94 1218.09 L1050.53 1218.09 L1051.12 1218.09 L1051.7 1218.09 L1052.29 1218.09 L1052.88 1218.09 L1053.46 1218.09 L1054.05 1218.09 L1054.64 1218.09 L1055.22 1218.09 L1055.81 1218.09 L1056.39 1218.09 L1056.98 1218.09 L1057.57 1218.09 L1058.15 1218.09 L1058.74 1218.09 L1059.33 1218.09 L1059.91 1218.09 L1060.5 1218.09 L1061.09 1218.09 L1061.67 1218.09 L1062.26 1218.09 L1062.85 1218.09 L1063.43 1218.09 L1064.02 1218.09 L1064.6 1218.09 L1065.19 1218.09 L1065.78 1218.09 L1066.36 1218.09 L1066.95 1218.09 L1067.54 1218.09 L1068.12 1218.09 L1068.71 1218.09 L1069.3 1218.09 L1069.88 1218.09 L1070.47 1218.09 L1071.06 1218.09 L1071.64 1218.09 L1072.23 1218.09 L1072.81 1218.09 L1073.4 1218.09 L1073.99 1218.09 L1074.57 1218.09 L1075.16 1218.09 L1075.75 1218.09 L1076.33 1218.09 L1076.92 1218.09 L1077.51 1218.09 L1078.09 1218.09 L1078.68 1218.09 L1079.26 1218.09 L1079.85 1218.09 L1080.44 1218.09 L1081.02 1218.09 L1081.61 1218.09 L1082.2 1218.09 L1082.78 1218.09 L1083.37 1218.09 L1083.96 1218.09 L1084.54 1218.09 L1085.13 1218.09 L1085.72 1218.09 L1086.3 1218.09 L1086.89 1218.09 L1087.47 1218.09 L1088.06 1218.09 L1088.65 1218.09 L1089.23 1218.09 L1089.82 1218.09 L1090.41 1218.09 L1090.99 1218.09 L1091.58 1218.09 L1092.17 1218.09 L1092.75 1218.09 L1093.34 1218.09 L1093.93 1218.09 L1094.51 1218.09 L1095.1 1218.09 L1095.68 1218.09 L1096.27 1218.09 L1096.86 1218.09 L1097.44 1218.09 L1098.03 1218.09 L1098.62 1218.09 L1099.2 1218.09 L1099.79 1218.09 L1100.38 1218.09 L1100.96 1218.09 L1101.55 1218.09 L1102.14 1218.09 L1102.72 1218.09 L1103.31 1218.09 L1103.89 1218.09 L1104.48 1218.09 L1105.07 1218.09 L1105.65 1218.09 L1106.24 1218.09 L1106.83 1218.09 L1107.41 1218.09 L1108 1218.09 L1108.59 1218.09 L1109.17 1218.09 L1109.76 1218.09 L1110.34 1218.09 L1110.93 1218.09 L1111.52 1218.09 L1112.1 1218.09 L1112.69 1218.09 L1113.28 1218.09 L1113.86 1218.09 L1114.45 1218.09 L1115.04 1218.09 L1115.62 1218.09 L1116.21 1218.09 L1116.8 1218.09 L1117.38 1218.09 L1117.97 1218.09 L1118.55 1218.09 L1119.14 1218.09 L1119.73 1218.09 L1120.31 1218.09 L1120.9 1218.09 L1121.49 1218.09 L1122.07 1218.09 L1122.66 1218.09 L1123.25 1218.09 L1123.83 1218.09 L1124.42 1218.09 L1125.01 1218.09 L1125.59 1218.09 L1126.18 1218.09 L1126.76 1218.09 L1127.35 1218.09 L1127.94 1218.09 L1128.52 1218.09 L1129.11 1218.09 L1129.7 1218.09 L1130.28 1218.09 L1130.87 1218.09 L1131.46 1218.09 L1132.04 1218.09 L1132.63 1218.09 L1133.21 1218.09 L1133.8 1218.09 L1134.39 1218.09 L1134.97 1218.09 L1135.56 1218.09 L1136.15 1218.09 L1136.73 1218.09 L1137.32 1218.09 L1137.91 1218.09 L1138.49 1218.09 L1139.08 1218.09 L1139.67 1218.09 L1140.25 1218.09 L1140.84 1218.09 L1141.42 1218.09 L1142.01 1218.09 L1142.6 1218.09 L1143.18 1218.09 L1143.77 1218.09 L1144.36 1218.09 L1144.94 1218.09 L1145.53 1218.09 L1146.12 1218.09 L1146.7 1218.09 L1147.29 1218.09 L1147.88 1218.09 L1148.46 1218.09 L1149.05 1218.09 L1149.63 1218.09 L1150.22 1218.09 L1150.81 1218.09 L1151.39 1218.09 L1151.98 1218.09 L1152.57 1218.09 L1153.15 1218.09 L1153.74 1218.09 L1154.33 1218.09 L1154.91 1218.09 L1155.5 1218.09 L1156.09 1218.09 L1156.67 1218.09 L1157.26 1218.09 L1157.84 1218.09 L1158.43 1218.09 L1159.02 1218.09 L1159.6 1218.09 L1160.19 1218.09 L1160.78 1218.09 L1161.36 1218.09 L1161.95 1218.09 L1162.54 1218.09 L1163.12 1218.09 L1163.71 1218.09 L1164.29 1218.09 L1164.88 1218.09 L1165.47 1218.09 L1166.05 1218.09 L1166.64 1218.09 L1167.23 1218.09 L1167.81 1218.09 L1168.4 1218.09 L1168.99 1218.09 L1169.57 1218.09 L1170.16 1218.09 L1170.75 1218.09 L1171.33 1218.09 L1171.92 1218.09 L1172.5 1218.09 L1173.09 1218.09 L1173.68 1218.09 L1174.26 1218.09 L1174.85 1218.09 L1175.44 1218.09 L1176.02 1218.09 L1176.61 1218.09 L1177.2 1218.09 L1177.78 1218.09 L1178.37 1218.09 L1178.96 1218.09 L1179.54 1218.09 L1180.13 1218.09 L1180.71 1218.09 L1181.3 1218.09 L1181.89 1218.09 L1182.47 1218.09 L1183.06 1218.09 L1183.65 1218.09 L1184.23 1218.09 L1184.82 1218.09 L1185.41 1218.09 L1185.99 1218.09 L1186.58 1218.09 L1187.16 1218.09 L1187.75 1218.09 L1188.34 1218.09 L1188.92 1218.09 L1189.51 1218.09 L1190.1 1218.09 L1190.68 1218.09 L1191.27 1218.09 L1191.86 1218.09 L1192.44 1218.09 L1193.03 1218.09 L1193.62 1218.09 L1194.2 1218.09 L1194.79 1218.09 L1195.37 1218.09 L1195.96 1218.09 L1196.55 1218.09 L1197.13 1218.09 L1197.72 1218.09 L1198.31 1218.09 L1198.89 1218.09 L1199.48 1218.09 L1200.07 1218.09 L1200.65 1218.09 L1201.24 1218.09 L1201.83 1218.09 L1202.41 1218.09 L1203 1218.09 L1203.58 1218.09 L1204.17 1218.09 L1204.76 1218.09 L1205.34 1218.09 L1205.93 1218.09 L1206.52 1218.09 L1207.1 1218.09 L1207.69 1218.09 L1208.28 1218.09 L1208.86 1218.09 L1209.45 1218.09 L1210.03 1218.09 L1210.62 1218.09 L1211.21 1218.09 L1211.79 1218.09 L1212.38 1218.09 L1212.97 1218.09 L1213.55 1218.09 L1214.14 1218.09 L1214.73 1218.09 L1215.31 1218.09 L1215.9 1218.09 L1216.49 1218.09 L1217.07 1218.09 L1217.66 1218.09 L1218.24 1218.09 L1218.83 1218.09 L1219.42 1218.09 L1220 1218.09 L1220.59 1218.09 L1221.18 1218.09 L1221.76 1218.09 L1222.35 1218.09 L1222.94 1218.09 L1223.52 1218.09 L1224.11 1218.09 L1224.7 1218.09 L1225.28 1218.09 L1225.87 1218.09 L1226.45 1218.09 L1227.04 1218.09 L1227.63 1218.09 L1228.21 1218.09 L1228.8 1218.09 L1229.39 1218.09 L1229.97 1218.09 L1230.56 1218.09 L1231.15 1218.09 L1231.73 1218.09 L1232.32 1218.09 L1232.91 1218.09 L1233.49 1218.09 L1234.08 1218.09 L1234.66 1218.09 L1235.25 1218.09 L1235.84 1218.09 L1236.42 1218.09 L1237.01 1218.09 L1237.6 1218.09 L1238.18 1218.09 L1238.77 1218.09 L1239.36 1218.09 L1239.94 1218.09 L1240.53 1218.09 L1241.11 1218.09 L1241.7 1218.09 L1242.29 1218.09 L1242.87 1218.09 L1243.46 1218.09 L1244.05 1218.09 L1244.63 1218.09 L1245.22 1218.09 L1245.81 1218.09 L1246.39 1218.09 L1246.98 1218.09 L1247.57 1218.09 L1248.15 1218.09 L1248.74 1218.09 L1249.32 1218.09 L1249.91 1218.09 L1250.5 1218.09 L1251.08 1218.09 L1251.67 1218.09 L1252.26 1218.09 L1252.84 1218.09 L1253.43 1218.09 L1254.02 1218.09 L1254.6 1218.09 L1255.19 1218.09 L1255.78 1218.09 L1256.36 1218.09 L1256.95 1218.09 L1257.53 1218.09 L1258.12 1218.09 L1258.71 1218.09 L1259.29 1218.09 L1259.88 1218.09 L1260.47 1218.09 L1261.05 1218.09 L1261.64 1218.09 L1262.23 1218.09 L1262.81 1218.09 L1263.4 1218.09 L1263.98 1218.09 L1264.57 1218.09 L1265.16 1218.09 L1265.74 1218.09 L1266.33 1218.09 L1266.92 1218.09 L1267.5 1218.09 L1268.09 1218.09 L1268.68 1218.09 L1269.26 1218.09 L1269.85 1218.09 L1270.44 1218.09 L1271.02 1218.09 L1271.61 1218.09 L1272.19 1218.09 L1272.78 1218.09 L1273.37 1218.09 L1273.95 1218.09 L1274.54 1218.09 L1275.13 1218.09 L1275.71 1218.09 L1276.3 1218.09 L1276.89 1218.09 L1277.47 1218.09 L1278.06 1218.09 L1278.65 1218.09 L1279.23 1218.09 L1279.82 1218.09 L1280.4 1218.09 L1280.99 1218.09 L1281.58 1218.09 L1282.16 1218.09 L1282.75 1218.09 L1283.34 1218.09 L1283.92 1218.09 L1284.51 1218.09 L1285.1 1218.09 L1285.68 1218.09 L1286.27 1218.09 L1286.86 1218.09 L1287.44 1218.09 L1288.03 1218.09 L1288.61 1218.09 L1289.2 1218.09 L1289.79 1218.09 L1290.37 1218.09 L1290.96 1218.09 L1291.55 1218.09 L1292.13 1218.09 L1292.72 1218.09 L1293.31 1218.09 L1293.89 1218.09 L1294.48 1218.09 L1295.06 1218.09 L1295.65 1218.09 L1296.24 1218.09 L1296.82 1218.09 L1297.41 1218.09 L1298 1218.09 L1298.58 1218.09 L1299.17 1218.09 L1299.76 1218.09 L1300.34 1218.09 L1300.93 1218.09 L1301.52 1218.09 L1302.1 1218.09 L1302.69 1218.09 L1303.27 1218.09 L1303.86 1218.09 L1304.45 1218.09 L1305.03 1218.09 L1305.62 1218.09 L1306.21 1218.09 L1306.79 1218.09 L1307.38 1218.09 L1307.97 1218.09 L1308.55 1218.09 L1309.14 1218.09 L1309.73 1218.09 L1310.31 1218.09 L1310.9 1218.09 L1311.48 1218.09 L1312.07 1218.09 L1312.66 1218.09 L1313.24 1218.09 L1313.83 1218.09 L1314.42 1218.09 L1315 1218.09 L1315.59 1218.09 L1316.18 1218.09 L1316.76 1218.09 L1317.35 1218.09 L1317.93 1218.09 L1318.52 1218.09 L1319.11 1218.09 L1319.69 1218.09 L1320.28 1218.09 L1320.87 1218.09 L1321.45 1218.09 L1322.04 1218.09 L1322.63 1218.09 L1323.21 1218.09 L1323.8 1218.09 L1324.39 1218.09 L1324.97 1218.09 L1325.56 1218.09 L1326.14 1218.09 L1326.73 1218.09 L1327.32 1218.09 L1327.9 1218.09 L1328.49 1218.09 L1329.08 1218.09 L1329.66 1218.09 L1330.25 1218.09 L1330.84 1218.09 L1331.42 1218.09 L1332.01 1218.09 L1332.6 1218.09 L1333.18 1218.09 L1333.77 1218.09 L1334.35 1218.09 L1334.94 1218.09 L1335.53 1218.09 L1336.11 1218.09 L1336.7 1218.09 L1337.29 1218.09 L1337.87 1218.09 L1338.46 1218.09 L1339.05 1218.09 L1339.63 1218.09 L1340.22 1218.09 L1340.8 1218.09 L1341.39 1218.09 L1341.98 1218.09 L1342.56 1218.09 L1343.15 1218.09 L1343.74 1218.09 L1344.32 1218.09 L1344.91 1218.09 L1345.5 1218.09 L1346.08 1218.09 L1346.67 1218.09 L1347.26 1218.09 L1347.84 1218.09 L1348.43 1218.09 L1349.01 1218.09 L1349.6 1218.09 L1350.19 1218.09 L1350.77 1218.09 L1351.36 1218.09 L1351.95 1218.09 L1352.53 1218.09 L1353.12 1218.09 L1353.71 1218.09 L1354.29 1218.09 L1354.88 1218.09 L1355.47 1218.09 L1356.05 1218.09 L1356.64 1218.09 L1357.22 1218.09 L1357.81 1218.09 L1358.4 1218.09 L1358.98 1218.09 L1359.57 1218.09 L1360.16 1218.09 L1360.74 1218.09 L1361.33 1218.09 L1361.92 1218.09 L1362.5 1218.09 L1363.09 1218.09 L1363.68 1218.09 L1364.26 1218.09 L1364.85 1218.09 L1365.43 1218.09 L1366.02 1218.09 L1366.61 1218.09 L1367.19 1218.09 L1367.78 1218.09 L1368.37 1218.09 L1368.95 1218.09 L1369.54 1218.09 L1370.13 1218.09 L1370.71 1218.09 L1371.3 1218.09 L1371.88 1218.09 L1372.47 1218.09 L1373.06 1218.09 L1373.64 1218.09 L1374.23 1218.09 L1374.82 1218.09 L1375.4 1218.09 L1375.99 1218.09 L1376.58 1218.09 L1377.16 1218.09 L1377.75 1218.09 L1378.34 1218.09 L1378.92 1218.09 L1379.51 1218.09 L1380.09 1218.09 L1380.68 1218.09 L1381.27 1218.09 L1381.85 1218.09 L1382.44 1218.09 L1383.03 1218.09 L1383.61 1218.09 L1384.2 1218.09 L1384.79 1218.09 L1385.37 1218.09 L1385.96 1218.09 L1386.55 1218.09 L1387.13 1218.09 L1387.72 1218.09 L1388.3 1218.09 L1388.89 1218.09 L1389.48 1218.09 L1390.06 1218.09 L1390.65 1218.09 L1391.24 1218.09 L1391.82 1218.09 L1392.41 1218.09 L1393 1218.09 L1393.58 1218.09 L1394.17 1218.09 L1394.75 1218.09 L1395.34 1218.09 L1395.93 1218.09 L1396.51 1218.09 L1397.1 1218.09 L1397.69 1218.09 L1398.27 1218.09 L1398.86 1218.09 L1399.45 1218.09 L1400.03 1218.09 L1400.62 1218.09 L1401.21 1218.09 L1401.79 1218.09 L1402.38 1218.09 L1402.96 1218.09 L1403.55 1218.09 L1404.14 1218.09 L1404.72 1218.09 L1405.31 1218.09 L1405.9 1218.09 L1406.48 1218.09 L1407.07 1218.09 L1407.66 1218.09 L1408.24 1218.09 L1408.83 1218.09 L1409.42 1218.09 L1410 1218.09 L1410.59 1218.09 L1411.17 1218.09 L1411.76 1218.09 L1412.35 1218.09 L1412.93 1218.09 L1413.52 1218.09 L1414.11 1218.09 L1414.69 1218.09 L1415.28 1218.09 L1415.87 1218.09 L1416.45 1218.09 L1417.04 1218.09 L1417.63 1218.09 L1418.21 1218.09 L1418.8 1218.09 L1419.38 1218.09 L1419.97 1218.09 L1420.56 1218.09 L1421.14 1218.09 L1421.73 1218.09 L1422.32 1218.09 L1422.9 1218.09 L1423.49 1218.09 L1424.08 1218.09 L1424.66 1218.09 L1425.25 1218.09 L1425.83 1218.09 L1426.42 1218.09 L1427.01 1218.09 L1427.59 1218.09 L1428.18 1218.09 L1428.77 1218.09 L1429.35 1218.09 L1429.94 1218.09 L1430.53 1218.09 L1431.11 1218.09 L1431.7 1218.09 L1432.29 1218.09 L1432.87 1218.09 L1433.46 1218.09 L1434.04 1218.09 L1434.63 1218.09 L1435.22 1218.09 L1435.8 1218.09 L1436.39 1218.09 L1436.98 1218.09 L1437.56 1218.09 L1438.15 1218.09 L1438.74 1218.09 L1439.32 1218.09 L1439.91 1218.09 L1440.5 1218.09 L1441.08 1218.09 L1441.67 1218.09 L1442.25 1218.09 L1442.84 1218.09 L1443.43 1218.09 L1444.01 1218.09 L1444.6 1218.09 L1445.19 1218.09 L1445.77 1218.09 L1446.36 1218.09 L1446.95 1218.09 L1447.53 1218.09 L1448.12 1218.09 L1448.7 1218.09 L1449.29 1218.09 L1449.88 1218.09 L1450.46 1218.09 L1451.05 1218.09 L1451.64 1218.09 L1452.22 1218.09 L1452.81 1218.09 L1453.4 1218.09 L1453.98 1218.09 L1454.57 1218.09 L1455.16 1218.09 L1455.74 1218.09 L1456.33 1218.09 L1456.91 1218.09 L1457.5 1218.09 L1458.09 1218.09 L1458.67 1218.09 L1459.26 1218.09 L1459.85 1218.09 L1460.43 1218.09 L1461.02 1218.09 L1461.61 1218.09 L1462.19 1218.09 L1462.78 1218.09 L1463.37 1218.09 L1463.95 1218.09 L1464.54 1218.09 L1465.12 1218.09 L1465.71 1218.09 L1466.3 1218.09 L1466.88 1218.09 L1467.47 1218.09 L1468.06 1218.09 L1468.64 1218.09 L1469.23 1218.09 L1469.82 1218.09 L1470.4 1218.09 L1470.99 1218.09 L1471.57 1218.09 L1472.16 1218.09 L1472.75 1218.09 L1473.33 1218.09 L1473.92 1218.09 L1474.51 1218.09 L1475.09 1218.09 L1475.68 1218.09 L1476.27 1218.09 L1476.85 1218.09 L1477.44 1218.09 L1478.03 1218.09 L1478.61 1218.09 L1479.2 1218.09 L1479.78 1218.09 L1480.37 1218.09 L1480.96 1218.09 L1481.54 1218.09 L1482.13 1218.09 L1482.72 1218.09 L1483.3 1218.09 L1483.89 1218.09 L1484.48 1218.09 L1485.06 1218.09 L1485.65 1218.09 L1486.24 1218.09 L1486.82 1218.09 L1487.41 1218.09 L1487.99 1218.09 L1488.58 1218.09 L1489.17 1218.09 L1489.75 1218.09 L1490.34 1218.09 L1490.93 1218.09 L1491.51 1218.09 L1492.1 1218.09 L1492.69 1218.09 L1493.27 1218.09 L1493.86 1218.09 L1494.45 1218.09 L1495.03 1218.09 L1495.62 1218.09 L1496.2 1218.09 L1496.79 1218.09 L1497.38 1218.09 L1497.96 1218.09 L1498.55 1218.09 L1499.14 1218.09 L1499.72 1218.09 L1500.31 1218.09 L1500.9 1218.09 L1501.48 1218.09 L1502.07 1218.09 L1502.65 1218.09 L1503.24 1218.09 L1503.83 1218.09 L1504.41 1218.09 L1505 1218.09 L1505.59 1218.09 L1506.17 1218.09 L1506.76 1218.09 L1507.35 1218.09 L1507.93 1218.09 L1508.52 1218.09 L1509.11 1218.09 L1509.69 1218.09 L1510.28 1218.09 L1510.86 1218.09 L1511.45 1218.09 L1512.04 1218.09 L1512.62 1218.09 L1513.21 1218.09 L1513.8 1218.09 L1514.38 1218.09 L1514.97 1218.09 L1515.56 1218.09 L1516.14 1218.09 L1516.73 1218.09 L1517.32 1218.09 L1517.9 1218.09 L1518.49 1218.09 L1519.07 1218.09 L1519.66 1218.09 L1520.25 1218.09 L1520.83 1218.09 L1521.42 1218.09 L1522.01 1218.09 L1522.59 1218.09 L1523.18 1218.09 L1523.77 1218.09 L1524.35 1218.09 L1524.94 1218.09 L1525.52 1218.09 L1526.11 1218.09 L1526.7 1218.09 L1527.28 1218.09 L1527.87 1218.09 L1528.46 1218.09 L1529.04 1218.09 L1529.63 1218.09 L1530.22 1218.09 L1530.8 1218.09 L1531.39 1218.09 L1531.98 1218.09 L1532.56 1218.09 L1533.15 1218.09 L1533.73 1218.09 L1534.32 1218.09 L1534.91 1218.09 L1535.49 1218.09 L1536.08 1218.09 L1536.67 1218.09 L1537.25 1218.09 L1537.84 1218.09 L1538.43 1218.09 L1539.01 1218.09 L1539.6 1218.09 L1540.19 1218.09 L1540.77 1218.09 L1541.36 1218.09 L1541.94 1218.09 L1542.53 1218.09 L1543.12 1218.09 L1543.7 1218.09 L1544.29 1218.09 L1544.88 1218.09 L1545.46 1218.09 L1546.05 1218.09 L1546.64 1218.09 L1547.22 1218.09 L1547.81 1218.09 L1548.4 1218.09 L1548.98 1218.09 L1549.57 1218.09 L1550.15 1218.09 L1550.74 1218.09 L1551.33 1218.09 L1551.91 1218.09 L1552.5 1218.09 L1553.09 1218.09 L1553.67 1218.09 L1554.26 1218.09 L1554.85 1218.09 L1555.43 1218.09 L1556.02 1218.09 L1556.6 1218.09 L1557.19 1218.09 L1557.78 1218.09 L1558.36 1218.09 L1558.95 1218.09 L1559.54 1218.09 L1560.12 1218.09 L1560.71 1218.09 L1561.3 1218.09 L1561.88 1218.09 L1562.47 1218.09 L1563.06 1218.09 L1563.64 1218.09 L1564.23 1218.09 L1564.81 1218.09 L1565.4 1218.09 L1565.99 1218.09 L1566.57 1218.09 L1567.16 1218.09 L1567.75 1218.09 L1568.33 1218.09 L1568.92 1218.09 L1569.51 1218.09 L1570.09 1218.09 L1570.68 1218.09 L1571.27 1218.09 L1571.85 1218.09 L1572.44 1218.09 L1573.02 1218.09 L1573.61 1218.09 L1574.2 1218.09 L1574.78 1218.09 L1575.37 1218.09 L1575.96 1218.09 L1576.54 1218.09 L1577.13 1218.09 L1577.72 1218.09 L1578.3 1218.09 L1578.89 1218.09 L1579.47 1218.09 L1580.06 1218.09 L1580.65 1218.09 L1581.23 1218.09 L1581.82 1218.09 L1582.41 1218.09 L1582.99 1218.09 L1583.58 1218.09 L1584.17 1218.09 L1584.75 1218.09 L1585.34 1218.09 L1585.93 1218.09 L1586.51 1218.09 L1587.1 1218.09 L1587.68 1218.09 L1588.27 1218.09 L1588.86 1218.09 L1589.44 1218.09 L1590.03 1218.09 L1590.62 1218.09 L1591.2 1218.09 L1591.79 1218.09 L1592.38 1218.09 L1592.96 1218.09 L1593.55 1218.09 L1594.14 1218.09 L1594.72 1218.09 L1595.31 1218.09 L1595.89 1218.09 L1596.48 1218.09 L1597.07 1218.09 L1597.65 1218.09 L1598.24 1218.09 L1598.83 1218.09 L1599.41 1218.09 L1600 1218.09 L1600.59 1218.09 L1601.17 1218.09 L1601.76 1218.09 L1602.34 1218.09 L1602.93 1218.09 L1603.52 1218.09 L1604.1 1218.09 L1604.69 1218.09 L1605.28 1218.09 L1605.86 1218.09 L1606.45 1218.09 L1607.04 1218.09 L1607.62 1218.09 L1608.21 1218.09 L1608.8 1218.09 L1609.38 1218.09 L1609.97 1218.09 L1610.55 1218.09 L1611.14 1218.09 L1611.73 1218.09 L1612.31 1218.09 L1612.9 1218.09 L1613.49 1218.09 L1614.07 1218.09 L1614.66 1218.09 L1615.25 1218.09 L1615.83 1218.09 L1616.42 1218.09 L1617.01 1218.09 L1617.59 1218.09 L1618.18 1218.09 L1618.76 1218.09 L1619.35 1218.09 L1619.94 1218.09 L1620.52 1218.09 L1621.11 1218.09 L1621.7 1218.09 L1622.28 1218.09 L1622.87 1218.09 L1623.46 1218.09 L1624.04 1218.09 L1624.63 1218.09 L1625.22 1218.09 L1625.8 1218.09 L1626.39 1218.09 L1626.97 1218.09 L1627.56 1218.09 L1628.15 1218.09 L1628.73 1218.09 L1629.32 1218.09 L1629.91 1218.09 L1630.49 1218.09 L1631.08 1218.09 L1631.67 1218.09 L1632.25 1218.09 L1632.84 1218.09 L1633.42 1218.09 L1634.01 1218.09 L1634.6 1218.09 L1635.18 1218.09 L1635.77 1218.09 L1636.36 1218.09 L1636.94 1218.09 L1637.53 1218.09 L1638.12 1218.09 L1638.7 1218.09 L1639.29 1218.09 L1639.88 1218.09 L1640.46 1218.09 L1641.05 1218.09 L1641.63 1218.09 L1642.22 1218.09 L1642.81 1218.09 L1643.39 1218.09 L1643.98 1218.09 L1644.57 1218.09 L1645.15 1218.09 L1645.74 1218.09 L1646.33 1218.09 L1646.91 1218.09 L1647.5 1218.09 L1648.09 1218.09 L1648.67 1218.09 L1649.26 1218.09 L1649.84 1218.09 L1650.43 1218.09 L1651.02 1218.09 L1651.6 1218.09 L1652.19 1218.09 L1652.78 1218.09 L1653.36 1218.09 L1653.95 1218.09 L1654.54 1218.09 L1655.12 1218.09 L1655.71 1218.09 L1656.29 1218.09 L1656.88 1218.09 L1657.47 1218.09 L1658.05 1218.09 L1658.64 1218.09 L1659.23 1218.09 L1659.81 1218.09 L1660.4 1218.09 L1660.99 1218.09 L1661.57 1218.09 L1662.16 1218.09 L1662.75 1218.09 L1663.33 1218.09 L1663.92 1218.09 L1664.5 1218.09 L1665.09 1218.09 L1665.68 1218.09 L1666.26 1218.09 L1666.85 1218.09 L1667.44 1218.09 L1668.02 1218.09 L1668.61 1218.09 L1669.2 1218.09 L1669.78 1218.09 L1670.37 1218.09 L1670.96 1218.09 L1671.54 1218.09 L1672.13 1218.09 L1672.71 1218.09 L1673.3 1218.09 L1673.89 1218.09 L1674.47 1218.09 L1675.06 1218.09 L1675.65 1218.09 L1676.23 1218.09 L1676.82 1218.09 L1677.41 1218.09 L1677.99 1218.09 L1678.58 1218.09 L1679.17 1218.09 L1679.75 1218.09 L1680.34 1218.09 L1680.92 1218.09 L1681.51 1218.09 L1682.1 1218.09 L1682.68 1218.09 L1683.27 1218.09 L1683.86 1218.09 L1684.44 1218.09 L1685.03 1218.09 L1685.62 1218.09 L1686.2 1218.09 L1686.79 1218.09 L1687.37 1218.09 L1687.96 1218.09 L1688.55 1218.09 L1689.13 1218.09 L1689.72 1218.09 L1690.31 1218.09 L1690.89 1218.09 L1691.48 1218.09 L1692.07 1218.09 L1692.65 1218.09 L1693.24 1218.09 L1693.83 1218.09 L1694.41 1218.09 L1695 1218.09 L1695.58 1218.09 L1696.17 1218.09 L1696.76 1218.09 L1697.34 1218.09 L1697.93 1218.09 L1698.52 1218.09 L1699.1 1218.09 L1699.69 1218.09 L1700.28 1218.09 L1700.86 1218.09 L1701.45 1218.09 L1702.04 1218.09 L1702.62 1218.09 L1703.21 1218.09 L1703.79 1218.09 L1704.38 1218.09 L1704.97 1218.09 L1705.55 1218.09 L1706.14 1218.09 L1706.73 1218.09 L1707.31 1218.09 L1707.9 1218.09 L1708.49 1218.09 L1709.07 1218.09 L1709.66 1218.09 L1710.24 1218.09 L1710.83 1218.09 L1711.42 1218.09 L1712 1218.09 L1712.59 1218.09 L1713.18 1218.09 L1713.76 1218.09 L1714.35 1218.09 L1714.94 1218.09 L1715.52 1218.09 L1716.11 1218.09 L1716.7 1218.09 L1717.28 1218.09 L1717.87 1218.09 L1718.45 1218.09 L1719.04 1218.09 L1719.63 1218.09 L1720.21 1218.09 L1720.8 1218.09 L1721.39 1218.09 L1721.97 1218.09 L1722.56 1218.09 L1723.15 1218.09 L1723.73 1218.09 L1724.32 1218.09 L1724.91 1218.09 L1725.49 1218.09 L1726.08 1218.09 L1726.66 1218.09 L1727.25 1218.09 L1727.84 1218.09 L1728.42 1218.09 L1729.01 1218.09 L1729.6 1218.09 L1730.18 1218.09 L1730.77 1218.09 L1731.36 1218.09 L1731.94 1218.09 L1732.53 1218.09 L1733.11 1218.09 L1733.7 1218.09 L1734.29 1218.09 L1734.87 1218.09 L1735.46 1218.09 L1736.05 1218.09 L1736.63 1218.09 L1737.22 1218.09 L1737.81 1218.09 L1738.39 1218.09 L1738.98 1218.09 L1739.57 1218.09 L1740.15 1218.09 L1740.74 1218.09 L1741.32 1218.09 L1741.91 1218.09 L1742.5 1218.09 L1743.08 1218.09 L1743.67 1218.09 L1744.26 1218.09 L1744.84 1218.09 L1745.43 1218.09 L1746.02 1218.09 L1746.6 1218.09 L1747.19 1218.09 L1747.78 1218.09 L1748.36 1218.09 L1748.95 1218.09 L1749.53 1218.09 L1750.12 1218.09 L1750.71 1218.09 L1751.29 1218.09 L1751.88 1218.09 L1752.47 1218.09 L1753.05 1218.09 L1753.64 1218.09 L1754.23 1218.09 L1754.81 1218.09 L1755.4 1218.09 L1755.99 1218.09 L1756.57 1218.09 L1757.16 1218.09 L1757.74 1218.09 L1758.33 1218.09 L1758.92 1218.09 L1759.5 1218.09 L1760.09 1218.09 L1760.68 1218.09 L1761.26 1218.09 L1761.85 1218.09 L1762.44 1218.09 L1763.02 1218.09 L1763.61 1218.09 L1764.19 1218.09 L1764.78 1218.09 L1765.37 1218.09 L1765.95 1218.09 L1766.54 1218.09 L1767.13 1218.09 L1767.71 1218.09 L1768.3 1218.09 L1768.89 1218.09 L1769.47 1218.09 L1770.06 1218.09 L1770.65 1218.09 L1771.23 1218.09 L1771.82 1218.09 L1772.4 1218.09 L1772.99 1218.09 L1773.58 1218.09 L1774.16 1218.09 L1774.75 1218.09 L1775.34 1218.09 L1775.92 1218.09 L1776.51 1218.09 L1777.1 1218.09 L1777.68 1218.09 L1778.27 1218.09 L1778.86 1218.09 L1779.44 1218.09 L1780.03 1218.09 L1780.61 1218.09 L1781.2 1218.09 L1781.79 1218.09 L1782.37 1218.09 L1782.96 1218.09 L1783.55 1218.09 L1784.13 1218.09 L1784.72 1218.09 L1785.31 1218.09 L1785.89 1218.09 L1786.48 1218.09 L1787.06 1218.09 L1787.65 1218.09 L1788.24 1218.09 L1788.82 1218.09 L1789.41 1218.09 L1790 1218.09 L1790.58 1218.09 L1791.17 1218.09 L1791.76 1218.09 L1792.34 1218.09 L1792.93 1218.09 L1793.52 1218.09 L1794.1 1218.09 L1794.69 1218.09 L1795.27 1218.09 L1795.86 1218.09 L1796.45 1218.09 L1797.03 1218.09 L1797.62 1218.09 L1798.21 1218.09 L1798.79 1218.09 L1799.38 1218.09 L1799.97 1218.09 L1800.55 1218.09 L1801.14 1218.09 L1801.73 1218.09 L1802.31 1218.09 L1802.9 1218.09 L1803.48 1218.09 L1804.07 1218.09 L1804.66 1218.09 L1805.24 1218.09 L1805.83 1218.09 L1806.42 1218.09 L1807 1218.09 L1807.59 1218.09 L1808.18 1218.09 L1808.76 1218.09 L1809.35 1218.09 L1809.94 1218.09 L1810.52 1218.09 L1811.11 1218.09 L1811.69 1218.09 L1812.28 1218.09 L1812.87 1218.09 L1813.45 1218.09 L1814.04 1218.09 L1814.63 1218.09 L1815.21 1218.09 L1815.8 1218.09 L1816.39 1218.09 L1816.97 1218.09 L1817.56 1218.09 L1818.14 1218.09 L1818.73 1218.09 L1819.32 1218.09 L1819.9 1218.09 L1820.49 1218.09 L1821.08 1218.09 L1821.66 1218.09 L1822.25 1218.09 L1822.84 1218.09 L1823.42 1218.09 L1824.01 1218.09 L1824.6 1218.09 L1825.18 1218.09 L1825.77 1218.09 L1826.35 1218.09 L1826.94 1218.09 L1827.53 1218.09 L1828.11 1218.09 L1828.7 1218.09 L1829.29 1218.09 L1829.87 1218.09 L1830.46 1218.09 L1831.05 1218.09 L1831.63 1218.09 L1832.22 1218.09 L1832.81 1218.09 L1833.39 1218.09 L1833.98 1218.09 L1834.56 1218.09 L1835.15 1218.09 L1835.74 1218.09 L1836.32 1218.09 L1836.91 1218.09 L1837.5 1218.09 L1838.08 1218.09 L1838.67 1218.09 L1839.26 1218.09 L1839.84 1218.09 L1840.43 1218.09 L1841.01 1218.09 L1841.6 1218.09 L1842.19 1218.09 L1842.77 1218.09 L1843.36 1218.09 L1843.95 1218.09 L1844.53 1218.09 L1845.12 1218.09 L1845.71 1218.09 L1846.29 1218.09 L1846.88 1218.09 L1847.47 1218.09 L1848.05 1218.09 L1848.64 1218.09 L1849.22 1218.09 L1849.81 1218.09 L1850.4 1218.09 L1850.98 1218.09 L1851.57 1218.09 L1852.16 1218.09 L1852.74 1218.09 L1853.33 1218.09 L1853.92 1218.09 L1854.5 1218.09 L1855.09 1218.09 L1855.68 1218.09 L1856.26 1218.09 L1856.85 1218.09 L1857.43 1218.09 L1858.02 1218.09 L1858.61 1218.09 L1859.19 1218.09 L1859.78 1218.09 L1860.37 1218.09 L1860.95 1218.09 L1861.54 1218.09 L1862.13 1218.09 L1862.71 1218.09 L1863.3 1218.09 L1863.88 1218.09 L1864.47 1218.09 L1865.06 1218.09 L1865.64 1218.09 L1866.23 1218.09 L1866.82 1218.09 L1867.4 1218.09 L1867.99 1218.09 L1868.58 1218.09 L1869.16 1218.09 L1869.75 1218.09 L1870.34 1218.09 L1870.92 1218.09 L1871.51 1218.09 L1872.09 1218.09 L1872.68 1218.09 L1873.27 1218.09 L1873.85 1218.09 L1874.44 1218.09 L1875.03 1218.09 L1875.61 1218.09 L1876.2 1218.09 L1876.79 1218.09 L1877.37 1218.09 L1877.96 1218.09 L1878.55 1218.09 L1879.13 1218.09 L1879.72 1218.09 L1880.3 1218.09 L1880.89 1218.09 L1881.48 1218.09 L1882.06 1218.09 L1882.65 1218.09 L1883.24 1218.09 L1883.82 1218.09 L1884.41 1218.09 L1885 1218.09 L1885.58 1218.09 L1886.17 1218.09 L1886.76 1218.09 L1887.34 1218.09 L1887.93 1218.09 L1888.51 1218.09 L1889.1 1218.09 L1889.69 1218.09 L1890.27 1218.09 L1890.86 1218.09 L1891.45 1218.09 L1892.03 1218.09 L1892.62 1218.09 L1893.21 1218.09 L1893.79 1218.09 L1894.38 1218.09 L1894.96 1218.09 L1895.55 1218.09 L1896.14 1218.09 L1896.72 1218.09 L1897.31 1218.09 L1897.9 1218.09 L1898.48 1218.09 L1899.07 1218.09 L1899.66 1218.09 L1900.24 1218.09 L1900.83 1218.09 L1901.42 1218.09 L1902 1218.09 L1902.59 1218.09 L1903.17 1218.09 L1903.76 1218.09 L1904.35 1218.09 L1904.93 1218.09 L1905.52 1218.09 L1906.11 1218.09 L1906.69 1218.09 L1907.28 1218.09 L1907.87 1218.09 L1908.45 1218.09 L1909.04 1218.09 L1909.63 1218.09 L1910.21 1218.09 L1910.8 1218.09 L1911.38 1218.09 L1911.97 1218.09 L1912.56 1218.09 L1913.14 1218.09 L1913.73 1218.09 L1914.32 1218.09 L1914.9 1218.09 L1915.49 1218.09 L1916.08 1218.09 L1916.66 1218.09 L1917.25 1218.09 L1917.83 1218.09 L1918.42 1218.09 L1919.01 1218.09 L1919.59 1218.09 L1920.18 1218.09 L1920.77 1218.09 L1921.35 1218.09 L1921.94 1218.09 L1922.53 1218.09 L1923.11 1218.09 L1923.7 1218.09 L1924.29 1218.09 L1924.87 1218.09 L1925.46 1218.09 L1926.04 1218.09 L1926.63 1218.09 L1927.22 1218.09 L1927.8 1218.09 L1928.39 1218.09 L1928.98 1218.09 L1929.56 1218.09 L1930.15 1218.09 L1930.74 1218.09 L1931.32 1218.09 L1931.91 1218.09 L1932.5 1218.09 L1933.08 1218.09 L1933.67 1218.09 L1934.25 1218.09 L1934.84 1218.09 L1935.43 1218.09 L1936.01 1218.09 L1936.6 1218.09 L1937.19 1218.09 L1937.77 1218.09 L1938.36 1218.09 L1938.95 1218.09 L1939.53 1218.09 L1940.12 1218.09 L1940.71 1218.09 L1941.29 1218.09 L1941.88 1218.09 L1942.46 1218.09 L1943.05 1218.09 L1943.64 1218.09 L1944.22 1218.09 L1944.81 1218.09 L1945.4 1218.09 L1945.98 1218.09 L1946.57 1218.09 L1947.16 1218.09 L1947.74 1218.09 L1948.33 1218.09 L1948.91 1218.09 L1949.5 1218.09 L1950.09 1218.09 L1950.67 1218.09 L1951.26 1218.09 L1951.85 1218.09 L1952.43 1218.09 L1953.02 1218.09 L1953.61 1218.09 L1954.19 1218.09 L1954.78 1218.09 L1955.37 1218.09 L1955.95 1218.09 L1956.54 1218.09 L1957.12 1218.09 L1957.71 1218.09 L1958.3 1218.09 L1958.88 1218.09 L1959.47 1218.09 L1960.06 1218.09 L1960.64 1218.09 L1961.23 1218.09 L1961.82 1218.09 L1962.4 1218.09 L1962.99 1218.09 L1963.58 1218.09 L1964.16 1218.09 L1964.75 1218.09 L1965.33 1218.09 L1965.92 1218.09 L1966.51 1218.09 L1967.09 1218.09 L1967.68 1218.09 L1968.27 1218.09 L1968.85 1218.09 L1969.44 1218.09 L1970.03 1218.09 L1970.61 1218.09 L1971.2 1218.09 L1971.78 1218.09 L1972.37 1218.09 L1972.96 1218.09 L1973.54 1218.09 L1974.13 1218.09 L1974.72 1218.09 L1975.3 1218.09 L1975.89 1218.09 L1976.48 1218.09 L1977.06 1218.09 L1977.65 1218.09 L1978.24 1218.09 L1978.82 1218.09 L1979.41 1218.09 L1979.99 1218.09 L1980.58 1218.09 L1981.17 1218.09 L1981.75 1218.09 L1982.34 1218.09 L1982.93 1218.09 L1983.51 1218.09 L1984.1 1218.09 L1984.69 1218.09 L1985.27 1218.09 L1985.86 1218.09 L1986.45 1218.09 L1987.03 1218.09 L1987.62 1218.09 L1988.2 1218.09 L1988.79 1218.09 L1989.38 1218.09 L1989.96 1218.09 L1990.55 1218.09 L1991.14 1218.09 L1991.72 1218.09 L1992.31 1218.09 L1992.9 1218.09 L1993.48 1218.09 L1994.07 1218.09 L1994.65 1218.09 L1995.24 1218.09 L1995.83 1218.09 L1996.41 1218.09 L1997 1218.09 L1997.59 1218.09 L1998.17 1218.09 L1998.76 1218.09 L1999.35 1218.09 L1999.93 1218.09 L2000.52 1218.09 L2001.11 1218.09 L2001.69 1218.09 L2002.28 1218.09 L2002.86 1218.09 L2003.45 1218.09 L2004.04 1218.09 L2004.62 1218.09 L2005.21 1218.09 L2005.8 1218.09 L2006.38 1218.09 L2006.97 1218.09 L2007.56 1218.09 L2008.14 1218.09 L2008.73 1218.09 L2009.32 1218.09 L2009.9 1218.09 L2010.49 1218.09 L2011.07 1218.09 L2011.66 1218.09 L2012.25 1218.09 L2012.83 1218.09 L2013.42 1218.09 L2014.01 1218.09 L2014.59 1218.09 L2015.18 1218.09 L2015.77 1218.09 L2016.35 1218.09 L2016.94 1218.09 L2017.53 1218.09 L2018.11 1218.09 L2018.7 1218.09 L2019.28 1218.09 L2019.87 1218.09 L2020.46 1218.09 L2021.04 1218.09 L2021.63 1218.09 L2022.22 1218.09 L2022.8 1218.09 L2023.39 1218.09 L2023.98 1218.09 L2024.56 1218.09 L2025.15 1218.09 L2025.73 1218.09 L2026.32 1218.09 L2026.91 1218.09 L2027.49 1218.09 L2028.08 1218.09 L2028.67 1218.09 L2029.25 1218.09 L2029.84 1218.09 L2030.43 1218.09 L2031.01 1218.09 L2031.6 1218.09 L2032.19 1218.09 L2032.77 1218.09 L2033.36 1218.09 L2033.94 1218.09 L2034.53 1218.09 L2035.12 1218.09 L2035.7 1218.09 L2036.29 1218.09 L2036.88 1218.09 L2037.46 1218.09 L2038.05 1218.09 L2038.64 1218.09 L2039.22 1218.09 L2039.81 1218.09 L2040.4 1218.09 L2040.98 1218.09 L2041.57 1218.09 L2042.15 1218.09 L2042.74 1218.09 L2043.33 1218.09 L2043.91 1218.09 L2044.5 1218.09 L2045.09 1218.09 L2045.67 1218.09 L2046.26 1218.09 L2046.85 1218.09 L2047.43 1218.09 L2048.02 1218.09 L2048.6 1218.09 L2049.19 1218.09 L2049.78 1218.09 L2050.36 1218.09 L2050.95 1218.09 L2051.54 1218.09 L2052.12 1218.09 L2052.71 1218.09 L2053.3 1218.09 L2053.88 1218.09 L2054.47 1218.09 L2055.06 1218.09 L2055.64 1218.09 L2056.23 1218.09 L2056.81 1218.09 L2057.4 1218.09 L2057.99 1218.09 L2058.57 1218.09 L2059.16 1218.09 L2059.75 1218.09 L2060.33 1218.09 L2060.92 1218.09 L2061.51 1218.09 L2062.09 1218.09 L2062.68 1218.09 L2063.27 1218.09 L2063.85 1218.09 L2064.44 1218.09 L2065.02 1218.09 L2065.61 1218.09 L2066.2 1218.09 L2066.78 1218.09 L2067.37 1218.09 L2067.96 1218.09 L2068.54 1218.09 L2069.13 1218.09 L2069.72 1218.09 L2070.3 1218.09 L2070.89 1218.09 L2071.48 1218.09 L2072.06 1218.09 L2072.65 1218.09 L2073.23 1218.09 L2073.82 1218.09 L2074.41 1218.09 L2074.99 1218.09 L2075.58 1218.09 L2076.17 1218.09 L2076.75 1218.09 L2077.34 1218.09 L2077.93 1218.09 L2078.51 1218.09 L2079.1 1218.09 L2079.68 1218.09 L2080.27 1218.09 L2080.86 1218.09 L2081.44 1218.09 L2082.03 1218.09 L2082.62 1218.09 L2083.2 1218.09 L2083.79 1218.09 L2084.38 1218.09 L2084.96 1218.09 L2085.55 1218.09 L2086.14 1218.09 L2086.72 1218.09 L2087.31 1218.09 L2087.89 1218.09 L2088.48 1218.09 L2089.07 1218.09 L2089.65 1218.09 L2090.24 1218.09 L2090.83 1218.09 L2091.41 1218.09 L2092 1218.09 L2092.59 1218.09 L2093.17 1218.09 L2093.76 1218.09 L2094.35 1218.09 L2094.93 1218.09 L2095.52 1218.09 L2096.1 1218.09 L2096.69 1218.09 L2097.28 1218.09 L2097.86 1218.09 L2098.45 1218.09 L2099.04 1218.09 L2099.62 1218.09 L2100.21 1218.09 L2100.8 1218.09 L2101.38 1218.09 L2101.97 1218.09 L2102.55 1218.09 L2103.14 1218.09 L2103.73 1218.09 L2104.31 1218.09 L2104.9 1218.09 L2105.49 1218.09 L2106.07 1218.09 L2106.66 1218.09 L2107.25 1218.09 L2107.83 1218.09 L2108.42 1218.09 L2109.01 1218.09 L2109.59 1218.09 L2110.18 1218.09 L2110.76 1218.09 L2111.35 1218.09 L2111.94 1218.09 L2112.52 1218.09 L2113.11 1218.09 L2113.7 1218.09 L2114.28 1218.09 L2114.87 1218.09 L2115.46 1218.09 L2116.04 1218.09 L2116.63 1218.09 L2117.22 1218.09 L2117.8 1218.09 L2118.39 1218.09 L2118.97 1218.09 L2119.56 1218.09 L2120.15 1218.09 L2120.73 1218.09 L2121.32 1218.09 L2121.91 1218.09 L2122.49 1218.09 L2123.08 1218.09 L2123.67 1218.09 L2124.25 1218.09 L2124.84 1218.09 L2125.42 1218.09 L2126.01 1218.09 L2126.6 1218.09 L2127.18 1218.09 L2127.77 1218.09 L2128.36 1218.09 L2128.94 1218.09 L2129.53 1218.09 L2130.12 1218.09 L2130.7 1218.09 L2131.29 1218.09 L2131.88 1218.09 L2132.46 1218.09 L2133.05 1218.09 L2133.63 1218.09 L2134.22 1218.09 L2134.81 1218.09 L2135.39 1218.09 L2135.98 1218.09 L2136.57 1218.09 L2137.15 1218.09 L2137.74 1218.09 L2138.33 1218.09 L2138.91 1218.09 L2139.5 1218.09 L2140.09 1218.09 L2140.67 1218.09 L2141.26 1218.09 L2141.84 1218.09 L2142.43 1218.09 L2143.02 1218.09 L2143.6 1218.09 L2144.19 1218.09 L2144.78 1218.09 L2145.36 1218.09 L2145.95 1218.09 L2146.54 1218.09 L2147.12 1218.09 L2147.71 1218.09 L2148.3 1218.09 L2148.88 1218.09 L2149.47 1218.09 L2150.05 1218.09 L2150.64 1218.09 L2151.23 1218.09 L2151.81 1218.09 L2152.4 1218.09 L2152.99 1218.09 L2153.57 1218.09 L2154.16 1218.09 L2154.75 1218.09 L2155.33 1218.09 L2155.92 1218.09 L2156.5 1218.09 L2157.09 1218.09 L2157.68 1218.09 L2158.26 1218.09 L2158.26 1217.38 L2157.68 1217.38 L2157.09 1217.38 L2156.5 1217.38 L2155.92 1217.38 L2155.33 1217.38 L2154.75 1217.38 L2154.16 1217.38 L2153.57 1217.38 L2152.99 1217.38 L2152.4 1217.38 L2151.81 1217.38 L2151.23 1217.38 L2150.64 1217.38 L2150.05 1217.38 L2149.47 1217.38 L2148.88 1217.38 L2148.3 1217.38 L2147.71 1217.38 L2147.12 1217.38 L2146.54 1217.38 L2145.95 1217.38 L2145.36 1217.38 L2144.78 1217.38 L2144.19 1217.38 L2143.6 1217.38 L2143.02 1217.38 L2142.43 1217.38 L2141.84 1217.38 L2141.26 1217.38 L2140.67 1217.38 L2140.09 1217.38 L2139.5 1217.38 L2138.91 1217.38 L2138.33 1217.38 L2137.74 1217.38 L2137.15 1217.38 L2136.57 1217.38 L2135.98 1217.38 L2135.39 1217.38 L2134.81 1217.38 L2134.22 1217.38 L2133.63 1217.38 L2133.05 1217.38 L2132.46 1217.38 L2131.88 1217.38 L2131.29 1217.38 L2130.7 1217.38 L2130.12 1217.38 L2129.53 1217.38 L2128.94 1217.38 L2128.36 1217.38 L2127.77 1217.38 L2127.18 1217.38 L2126.6 1217.38 L2126.01 1217.38 L2125.42 1217.38 L2124.84 1217.38 L2124.25 1217.38 L2123.67 1217.38 L2123.08 1217.38 L2122.49 1217.38 L2121.91 1217.38 L2121.32 1217.38 L2120.73 1217.38 L2120.15 1217.38 L2119.56 1217.38 L2118.97 1217.38 L2118.39 1217.38 L2117.8 1217.38 L2117.22 1217.38 L2116.63 1217.38 L2116.04 1217.38 L2115.46 1217.38 L2114.87 1217.38 L2114.28 1217.38 L2113.7 1217.38 L2113.11 1217.38 L2112.52 1217.38 L2111.94 1217.38 L2111.35 1217.38 L2110.76 1217.38 L2110.18 1217.38 L2109.59 1217.38 L2109.01 1217.38 L2108.42 1217.38 L2107.83 1217.38 L2107.25 1217.38 L2106.66 1217.38 L2106.07 1217.38 L2105.49 1217.38 L2104.9 1217.38 L2104.31 1217.38 L2103.73 1217.38 L2103.14 1217.38 L2102.55 1217.38 L2101.97 1217.38 L2101.38 1217.38 L2100.8 1217.38 L2100.21 1217.38 L2099.62 1217.38 L2099.04 1217.38 L2098.45 1217.38 L2097.86 1217.38 L2097.28 1217.38 L2096.69 1217.38 L2096.1 1217.38 L2095.52 1217.38 L2094.93 1217.38 L2094.35 1217.38 L2093.76 1217.38 L2093.17 1217.38 L2092.59 1217.38 L2092 1217.38 L2091.41 1217.38 L2090.83 1217.38 L2090.24 1217.38 L2089.65 1217.38 L2089.07 1217.38 L2088.48 1217.38 L2087.89 1217.38 L2087.31 1217.38 L2086.72 1217.38 L2086.14 1217.38 L2085.55 1217.38 L2084.96 1217.38 L2084.38 1217.38 L2083.79 1217.38 L2083.2 1217.38 L2082.62 1217.38 L2082.03 1217.38 L2081.44 1217.38 L2080.86 1217.38 L2080.27 1217.38 L2079.68 1217.38 L2079.1 1217.38 L2078.51 1217.38 L2077.93 1217.38 L2077.34 1217.38 L2076.75 1217.38 L2076.17 1217.38 L2075.58 1217.38 L2074.99 1217.38 L2074.41 1217.38 L2073.82 1217.38 L2073.23 1217.38 L2072.65 1217.38 L2072.06 1217.38 L2071.48 1217.38 L2070.89 1217.38 L2070.3 1217.38 L2069.72 1217.38 L2069.13 1217.38 L2068.54 1217.38 L2067.96 1217.38 L2067.37 1217.38 L2066.78 1217.38 L2066.2 1217.38 L2065.61 1217.38 L2065.02 1217.38 L2064.44 1217.38 L2063.85 1217.38 L2063.27 1217.38 L2062.68 1217.38 L2062.09 1217.38 L2061.51 1217.38 L2060.92 1217.38 L2060.33 1217.38 L2059.75 1217.38 L2059.16 1217.38 L2058.57 1217.38 L2057.99 1217.38 L2057.4 1217.38 L2056.81 1217.38 L2056.23 1217.38 L2055.64 1217.38 L2055.06 1217.38 L2054.47 1217.38 L2053.88 1217.38 L2053.3 1217.38 L2052.71 1217.38 L2052.12 1217.38 L2051.54 1217.38 L2050.95 1217.38 L2050.36 1217.38 L2049.78 1217.38 L2049.19 1217.38 L2048.6 1217.38 L2048.02 1217.38 L2047.43 1217.38 L2046.85 1217.38 L2046.26 1217.38 L2045.67 1217.38 L2045.09 1217.38 L2044.5 1217.38 L2043.91 1217.38 L2043.33 1217.38 L2042.74 1217.38 L2042.15 1217.38 L2041.57 1217.38 L2040.98 1217.38 L2040.4 1217.38 L2039.81 1217.38 L2039.22 1217.38 L2038.64 1217.38 L2038.05 1217.38 L2037.46 1217.38 L2036.88 1217.38 L2036.29 1217.38 L2035.7 1217.38 L2035.12 1217.38 L2034.53 1217.38 L2033.94 1217.38 L2033.36 1217.38 L2032.77 1217.38 L2032.19 1217.38 L2031.6 1217.38 L2031.01 1217.38 L2030.43 1217.38 L2029.84 1217.38 L2029.25 1217.38 L2028.67 1217.38 L2028.08 1217.38 L2027.49 1217.38 L2026.91 1217.38 L2026.32 1217.38 L2025.73 1217.38 L2025.15 1217.38 L2024.56 1217.38 L2023.98 1217.38 L2023.39 1217.38 L2022.8 1217.38 L2022.22 1217.38 L2021.63 1217.38 L2021.04 1217.38 L2020.46 1217.38 L2019.87 1217.38 L2019.28 1217.38 L2018.7 1217.38 L2018.11 1217.38 L2017.53 1217.38 L2016.94 1217.38 L2016.35 1217.38 L2015.77 1217.38 L2015.18 1217.38 L2014.59 1217.38 L2014.01 1217.38 L2013.42 1217.38 L2012.83 1217.38 L2012.25 1217.38 L2011.66 1217.38 L2011.07 1217.38 L2010.49 1217.38 L2009.9 1217.38 L2009.32 1217.38 L2008.73 1217.38 L2008.14 1217.38 L2007.56 1217.38 L2006.97 1217.38 L2006.38 1217.38 L2005.8 1217.38 L2005.21 1217.38 L2004.62 1217.38 L2004.04 1217.38 L2003.45 1217.38 L2002.86 1217.38 L2002.28 1217.38 L2001.69 1217.38 L2001.11 1217.38 L2000.52 1217.38 L1999.93 1217.38 L1999.35 1217.38 L1998.76 1217.38 L1998.17 1217.38 L1997.59 1217.38 L1997 1217.38 L1996.41 1217.38 L1995.83 1217.38 L1995.24 1217.38 L1994.65 1217.38 L1994.07 1217.38 L1993.48 1217.38 L1992.9 1217.38 L1992.31 1217.38 L1991.72 1217.38 L1991.14 1217.38 L1990.55 1217.38 L1989.96 1217.38 L1989.38 1217.38 L1988.79 1217.38 L1988.2 1217.38 L1987.62 1217.38 L1987.03 1217.38 L1986.45 1217.38 L1985.86 1217.38 L1985.27 1217.38 L1984.69 1217.38 L1984.1 1217.38 L1983.51 1217.38 L1982.93 1217.38 L1982.34 1217.38 L1981.75 1217.38 L1981.17 1217.38 L1980.58 1217.38 L1979.99 1217.38 L1979.41 1217.38 L1978.82 1217.38 L1978.24 1217.38 L1977.65 1217.38 L1977.06 1217.38 L1976.48 1217.38 L1975.89 1217.38 L1975.3 1217.38 L1974.72 1217.38 L1974.13 1217.38 L1973.54 1217.38 L1972.96 1217.38 L1972.37 1217.38 L1971.78 1217.38 L1971.2 1217.38 L1970.61 1217.38 L1970.03 1217.38 L1969.44 1217.38 L1968.85 1217.38 L1968.27 1217.38 L1967.68 1217.38 L1967.09 1217.38 L1966.51 1217.38 L1965.92 1217.38 L1965.33 1217.38 L1964.75 1217.38 L1964.16 1217.38 L1963.58 1217.38 L1962.99 1217.38 L1962.4 1217.38 L1961.82 1217.38 L1961.23 1217.38 L1960.64 1217.38 L1960.06 1217.38 L1959.47 1217.38 L1958.88 1217.38 L1958.3 1217.38 L1957.71 1217.38 L1957.12 1217.38 L1956.54 1217.38 L1955.95 1217.38 L1955.37 1217.38 L1954.78 1217.38 L1954.19 1217.38 L1953.61 1217.38 L1953.02 1217.38 L1952.43 1217.38 L1951.85 1217.38 L1951.26 1217.38 L1950.67 1217.38 L1950.09 1217.38 L1949.5 1217.38 L1948.91 1217.38 L1948.33 1217.38 L1947.74 1217.38 L1947.16 1217.38 L1946.57 1217.38 L1945.98 1217.38 L1945.4 1217.38 L1944.81 1217.38 L1944.22 1217.38 L1943.64 1217.38 L1943.05 1217.38 L1942.46 1217.38 L1941.88 1217.38 L1941.29 1217.38 L1940.71 1217.38 L1940.12 1217.38 L1939.53 1217.38 L1938.95 1217.38 L1938.36 1217.38 L1937.77 1217.38 L1937.19 1217.38 L1936.6 1217.38 L1936.01 1217.38 L1935.43 1217.38 L1934.84 1217.38 L1934.25 1217.38 L1933.67 1217.38 L1933.08 1217.38 L1932.5 1217.38 L1931.91 1217.38 L1931.32 1217.38 L1930.74 1217.38 L1930.15 1217.38 L1929.56 1217.38 L1928.98 1217.38 L1928.39 1217.38 L1927.8 1217.38 L1927.22 1217.38 L1926.63 1217.38 L1926.04 1217.38 L1925.46 1217.38 L1924.87 1217.38 L1924.29 1217.38 L1923.7 1217.38 L1923.11 1217.38 L1922.53 1217.38 L1921.94 1217.38 L1921.35 1217.38 L1920.77 1217.38 L1920.18 1217.38 L1919.59 1217.38 L1919.01 1217.38 L1918.42 1217.38 L1917.83 1217.38 L1917.25 1217.38 L1916.66 1217.38 L1916.08 1217.38 L1915.49 1217.38 L1914.9 1217.38 L1914.32 1217.38 L1913.73 1217.38 L1913.14 1217.38 L1912.56 1217.38 L1911.97 1217.38 L1911.38 1217.38 L1910.8 1217.38 L1910.21 1217.38 L1909.63 1217.38 L1909.04 1217.38 L1908.45 1217.38 L1907.87 1217.38 L1907.28 1217.38 L1906.69 1217.38 L1906.11 1217.38 L1905.52 1217.38 L1904.93 1217.38 L1904.35 1217.38 L1903.76 1217.38 L1903.17 1217.38 L1902.59 1217.38 L1902 1217.38 L1901.42 1217.38 L1900.83 1217.38 L1900.24 1217.38 L1899.66 1217.38 L1899.07 1217.38 L1898.48 1217.38 L1897.9 1217.38 L1897.31 1217.38 L1896.72 1217.38 L1896.14 1217.38 L1895.55 1217.38 L1894.96 1217.38 L1894.38 1217.38 L1893.79 1217.38 L1893.21 1217.38 L1892.62 1217.38 L1892.03 1217.38 L1891.45 1217.38 L1890.86 1217.38 L1890.27 1217.38 L1889.69 1217.38 L1889.1 1217.38 L1888.51 1217.38 L1887.93 1217.38 L1887.34 1217.38 L1886.76 1217.38 L1886.17 1217.38 L1885.58 1217.38 L1885 1217.38 L1884.41 1217.38 L1883.82 1217.38 L1883.24 1217.38 L1882.65 1217.38 L1882.06 1217.38 L1881.48 1217.38 L1880.89 1217.38 L1880.3 1217.38 L1879.72 1217.38 L1879.13 1217.38 L1878.55 1217.38 L1877.96 1217.38 L1877.37 1217.38 L1876.79 1217.38 L1876.2 1217.38 L1875.61 1217.38 L1875.03 1217.38 L1874.44 1217.38 L1873.85 1217.38 L1873.27 1217.38 L1872.68 1217.38 L1872.09 1217.38 L1871.51 1217.38 L1870.92 1217.38 L1870.34 1217.38 L1869.75 1217.38 L1869.16 1217.38 L1868.58 1217.38 L1867.99 1217.38 L1867.4 1217.38 L1866.82 1217.38 L1866.23 1217.38 L1865.64 1217.38 L1865.06 1217.38 L1864.47 1217.38 L1863.88 1217.38 L1863.3 1217.38 L1862.71 1217.38 L1862.13 1217.38 L1861.54 1217.38 L1860.95 1217.38 L1860.37 1217.38 L1859.78 1217.38 L1859.19 1217.38 L1858.61 1217.38 L1858.02 1217.38 L1857.43 1217.38 L1856.85 1217.38 L1856.26 1217.38 L1855.68 1217.38 L1855.09 1217.38 L1854.5 1217.38 L1853.92 1217.38 L1853.33 1217.38 L1852.74 1217.38 L1852.16 1217.38 L1851.57 1217.38 L1850.98 1217.38 L1850.4 1217.38 L1849.81 1217.38 L1849.22 1217.38 L1848.64 1217.38 L1848.05 1217.38 L1847.47 1217.38 L1846.88 1217.38 L1846.29 1217.38 L1845.71 1217.38 L1845.12 1217.38 L1844.53 1217.38 L1843.95 1217.38 L1843.36 1217.38 L1842.77 1217.38 L1842.19 1217.38 L1841.6 1217.38 L1841.01 1217.38 L1840.43 1217.38 L1839.84 1217.38 L1839.26 1217.38 L1838.67 1217.38 L1838.08 1217.38 L1837.5 1217.38 L1836.91 1217.38 L1836.32 1217.38 L1835.74 1217.38 L1835.15 1217.38 L1834.56 1217.38 L1833.98 1217.38 L1833.39 1217.38 L1832.81 1217.38 L1832.22 1217.38 L1831.63 1217.38 L1831.05 1217.38 L1830.46 1217.38 L1829.87 1217.38 L1829.29 1217.38 L1828.7 1217.38 L1828.11 1217.38 L1827.53 1217.38 L1826.94 1217.38 L1826.35 1217.38 L1825.77 1217.38 L1825.18 1217.38 L1824.6 1217.38 L1824.01 1217.38 L1823.42 1217.38 L1822.84 1217.38 L1822.25 1217.38 L1821.66 1217.38 L1821.08 1217.38 L1820.49 1217.38 L1819.9 1217.38 L1819.32 1217.38 L1818.73 1217.38 L1818.14 1217.38 L1817.56 1217.38 L1816.97 1217.38 L1816.39 1217.38 L1815.8 1217.38 L1815.21 1217.38 L1814.63 1217.38 L1814.04 1217.38 L1813.45 1217.38 L1812.87 1217.38 L1812.28 1217.38 L1811.69 1217.38 L1811.11 1217.38 L1810.52 1217.38 L1809.94 1217.38 L1809.35 1217.38 L1808.76 1217.38 L1808.18 1217.38 L1807.59 1217.38 L1807 1217.38 L1806.42 1217.38 L1805.83 1217.38 L1805.24 1217.38 L1804.66 1217.38 L1804.07 1217.38 L1803.48 1217.38 L1802.9 1217.38 L1802.31 1217.38 L1801.73 1217.38 L1801.14 1217.38 L1800.55 1217.38 L1799.97 1217.38 L1799.38 1217.38 L1798.79 1217.38 L1798.21 1217.38 L1797.62 1217.38 L1797.03 1217.38 L1796.45 1217.38 L1795.86 1217.38 L1795.27 1217.38 L1794.69 1217.38 L1794.1 1217.38 L1793.52 1217.38 L1792.93 1217.38 L1792.34 1217.38 L1791.76 1217.38 L1791.17 1217.38 L1790.58 1217.38 L1790 1217.38 L1789.41 1217.38 L1788.82 1217.38 L1788.24 1217.38 L1787.65 1217.38 L1787.06 1217.38 L1786.48 1217.38 L1785.89 1217.38 L1785.31 1217.38 L1784.72 1217.38 L1784.13 1217.38 L1783.55 1217.38 L1782.96 1217.38 L1782.37 1217.38 L1781.79 1217.38 L1781.2 1217.38 L1780.61 1217.38 L1780.03 1217.38 L1779.44 1217.38 L1778.86 1217.38 L1778.27 1217.38 L1777.68 1217.38 L1777.1 1217.38 L1776.51 1217.38 L1775.92 1217.38 L1775.34 1217.38 L1774.75 1217.38 L1774.16 1217.38 L1773.58 1217.38 L1772.99 1217.38 L1772.4 1217.38 L1771.82 1217.38 L1771.23 1217.38 L1770.65 1217.38 L1770.06 1217.38 L1769.47 1217.38 L1768.89 1217.38 L1768.3 1217.38 L1767.71 1217.38 L1767.13 1217.38 L1766.54 1217.38 L1765.95 1217.38 L1765.37 1217.38 L1764.78 1217.38 L1764.19 1217.38 L1763.61 1217.38 L1763.02 1217.38 L1762.44 1217.38 L1761.85 1217.38 L1761.26 1217.38 L1760.68 1217.38 L1760.09 1217.38 L1759.5 1217.38 L1758.92 1217.38 L1758.33 1217.38 L1757.74 1217.38 L1757.16 1217.38 L1756.57 1217.38 L1755.99 1217.38 L1755.4 1217.38 L1754.81 1217.38 L1754.23 1217.38 L1753.64 1217.38 L1753.05 1217.38 L1752.47 1217.38 L1751.88 1217.38 L1751.29 1217.38 L1750.71 1217.38 L1750.12 1217.38 L1749.53 1217.38 L1748.95 1217.38 L1748.36 1217.38 L1747.78 1217.38 L1747.19 1217.38 L1746.6 1217.38 L1746.02 1217.38 L1745.43 1217.38 L1744.84 1217.38 L1744.26 1217.38 L1743.67 1217.38 L1743.08 1217.38 L1742.5 1217.38 L1741.91 1217.38 L1741.32 1217.38 L1740.74 1217.38 L1740.15 1217.38 L1739.57 1217.38 L1738.98 1217.38 L1738.39 1217.38 L1737.81 1217.38 L1737.22 1217.38 L1736.63 1217.38 L1736.05 1217.38 L1735.46 1217.38 L1734.87 1217.38 L1734.29 1217.38 L1733.7 1217.38 L1733.11 1217.38 L1732.53 1217.38 L1731.94 1217.38 L1731.36 1217.38 L1730.77 1217.38 L1730.18 1217.38 L1729.6 1217.38 L1729.01 1217.38 L1728.42 1217.38 L1727.84 1217.38 L1727.25 1217.38 L1726.66 1217.38 L1726.08 1217.38 L1725.49 1217.38 L1724.91 1217.38 L1724.32 1217.38 L1723.73 1217.38 L1723.15 1217.38 L1722.56 1217.38 L1721.97 1217.38 L1721.39 1217.38 L1720.8 1217.38 L1720.21 1217.38 L1719.63 1217.38 L1719.04 1217.38 L1718.45 1217.38 L1717.87 1217.38 L1717.28 1217.38 L1716.7 1217.38 L1716.11 1217.38 L1715.52 1217.38 L1714.94 1217.38 L1714.35 1217.38 L1713.76 1217.38 L1713.18 1217.38 L1712.59 1217.38 L1712 1217.38 L1711.42 1217.38 L1710.83 1217.38 L1710.24 1217.38 L1709.66 1217.38 L1709.07 1217.38 L1708.49 1217.38 L1707.9 1217.38 L1707.31 1217.38 L1706.73 1217.38 L1706.14 1217.38 L1705.55 1217.38 L1704.97 1217.38 L1704.38 1217.38 L1703.79 1217.38 L1703.21 1217.38 L1702.62 1217.38 L1702.04 1217.38 L1701.45 1217.38 L1700.86 1217.38 L1700.28 1217.38 L1699.69 1217.38 L1699.1 1217.38 L1698.52 1217.38 L1697.93 1217.38 L1697.34 1217.38 L1696.76 1217.38 L1696.17 1217.38 L1695.58 1217.38 L1695 1217.38 L1694.41 1217.38 L1693.83 1217.38 L1693.24 1217.38 L1692.65 1217.38 L1692.07 1217.38 L1691.48 1217.38 L1690.89 1217.38 L1690.31 1217.38 L1689.72 1217.38 L1689.13 1217.38 L1688.55 1217.38 L1687.96 1217.38 L1687.37 1217.38 L1686.79 1217.38 L1686.2 1217.38 L1685.62 1217.38 L1685.03 1217.38 L1684.44 1217.38 L1683.86 1217.38 L1683.27 1217.38 L1682.68 1217.38 L1682.1 1217.38 L1681.51 1217.38 L1680.92 1217.38 L1680.34 1217.38 L1679.75 1217.38 L1679.17 1217.38 L1678.58 1217.38 L1677.99 1217.38 L1677.41 1217.38 L1676.82 1217.38 L1676.23 1217.38 L1675.65 1217.38 L1675.06 1217.38 L1674.47 1217.38 L1673.89 1217.38 L1673.3 1217.38 L1672.71 1217.38 L1672.13 1217.38 L1671.54 1217.38 L1670.96 1217.38 L1670.37 1217.38 L1669.78 1217.38 L1669.2 1217.38 L1668.61 1217.38 L1668.02 1217.38 L1667.44 1217.38 L1666.85 1217.38 L1666.26 1217.38 L1665.68 1217.38 L1665.09 1217.38 L1664.5 1217.38 L1663.92 1217.38 L1663.33 1217.38 L1662.75 1217.38 L1662.16 1217.38 L1661.57 1217.38 L1660.99 1217.38 L1660.4 1217.38 L1659.81 1217.38 L1659.23 1217.38 L1658.64 1217.38 L1658.05 1217.38 L1657.47 1217.38 L1656.88 1217.38 L1656.29 1217.38 L1655.71 1217.38 L1655.12 1217.38 L1654.54 1217.38 L1653.95 1217.38 L1653.36 1217.38 L1652.78 1217.38 L1652.19 1217.38 L1651.6 1217.38 L1651.02 1217.38 L1650.43 1217.38 L1649.84 1217.38 L1649.26 1217.38 L1648.67 1217.38 L1648.09 1217.38 L1647.5 1217.38 L1646.91 1217.38 L1646.33 1217.38 L1645.74 1217.38 L1645.15 1217.38 L1644.57 1217.38 L1643.98 1217.38 L1643.39 1217.38 L1642.81 1217.38 L1642.22 1217.38 L1641.63 1217.38 L1641.05 1217.38 L1640.46 1217.38 L1639.88 1217.38 L1639.29 1217.38 L1638.7 1217.38 L1638.12 1217.38 L1637.53 1217.38 L1636.94 1217.38 L1636.36 1217.38 L1635.77 1217.38 L1635.18 1217.38 L1634.6 1217.38 L1634.01 1217.38 L1633.42 1217.38 L1632.84 1217.38 L1632.25 1217.38 L1631.67 1217.38 L1631.08 1217.38 L1630.49 1217.38 L1629.91 1217.38 L1629.32 1217.38 L1628.73 1217.38 L1628.15 1217.38 L1627.56 1217.38 L1626.97 1217.38 L1626.39 1217.38 L1625.8 1217.38 L1625.22 1217.38 L1624.63 1217.38 L1624.04 1217.38 L1623.46 1217.38 L1622.87 1217.38 L1622.28 1217.38 L1621.7 1217.38 L1621.11 1217.38 L1620.52 1217.38 L1619.94 1217.38 L1619.35 1217.38 L1618.76 1217.38 L1618.18 1217.38 L1617.59 1217.38 L1617.01 1217.38 L1616.42 1217.38 L1615.83 1217.38 L1615.25 1217.38 L1614.66 1217.38 L1614.07 1217.38 L1613.49 1217.38 L1612.9 1217.38 L1612.31 1217.38 L1611.73 1217.38 L1611.14 1217.38 L1610.55 1217.38 L1609.97 1217.38 L1609.38 1217.38 L1608.8 1217.38 L1608.21 1217.38 L1607.62 1217.38 L1607.04 1217.38 L1606.45 1217.38 L1605.86 1217.38 L1605.28 1217.38 L1604.69 1217.38 L1604.1 1217.38 L1603.52 1217.38 L1602.93 1217.38 L1602.34 1217.38 L1601.76 1217.38 L1601.17 1217.38 L1600.59 1217.38 L1600 1217.38 L1599.41 1217.38 L1598.83 1217.38 L1598.24 1217.38 L1597.65 1217.38 L1597.07 1217.38 L1596.48 1217.38 L1595.89 1217.38 L1595.31 1217.38 L1594.72 1217.38 L1594.14 1217.38 L1593.55 1217.38 L1592.96 1217.38 L1592.38 1217.38 L1591.79 1217.38 L1591.2 1217.38 L1590.62 1217.38 L1590.03 1217.38 L1589.44 1217.38 L1588.86 1217.38 L1588.27 1217.38 L1587.68 1217.38 L1587.1 1217.38 L1586.51 1217.38 L1585.93 1217.38 L1585.34 1217.38 L1584.75 1217.38 L1584.17 1217.38 L1583.58 1217.38 L1582.99 1217.38 L1582.41 1217.38 L1581.82 1217.38 L1581.23 1217.38 L1580.65 1217.38 L1580.06 1217.38 L1579.47 1217.38 L1578.89 1217.38 L1578.3 1217.38 L1577.72 1217.38 L1577.13 1217.38 L1576.54 1217.38 L1575.96 1217.38 L1575.37 1217.38 L1574.78 1217.38 L1574.2 1217.38 L1573.61 1217.38 L1573.02 1217.38 L1572.44 1217.38 L1571.85 1217.38 L1571.27 1217.38 L1570.68 1217.38 L1570.09 1217.38 L1569.51 1217.38 L1568.92 1217.38 L1568.33 1217.38 L1567.75 1217.38 L1567.16 1217.38 L1566.57 1217.38 L1565.99 1217.38 L1565.4 1217.38 L1564.81 1217.38 L1564.23 1217.38 L1563.64 1217.38 L1563.06 1217.38 L1562.47 1217.38 L1561.88 1217.38 L1561.3 1217.38 L1560.71 1217.38 L1560.12 1217.38 L1559.54 1217.38 L1558.95 1217.38 L1558.36 1217.38 L1557.78 1217.38 L1557.19 1217.38 L1556.6 1217.38 L1556.02 1217.38 L1555.43 1217.38 L1554.85 1217.38 L1554.26 1217.38 L1553.67 1217.38 L1553.09 1217.38 L1552.5 1217.38 L1551.91 1217.38 L1551.33 1217.38 L1550.74 1217.38 L1550.15 1217.38 L1549.57 1217.38 L1548.98 1217.38 L1548.4 1217.38 L1547.81 1217.38 L1547.22 1217.38 L1546.64 1217.38 L1546.05 1217.38 L1545.46 1217.38 L1544.88 1217.38 L1544.29 1217.38 L1543.7 1217.38 L1543.12 1217.38 L1542.53 1217.38 L1541.94 1217.38 L1541.36 1217.38 L1540.77 1217.38 L1540.19 1217.38 L1539.6 1217.38 L1539.01 1217.38 L1538.43 1217.38 L1537.84 1217.38 L1537.25 1217.38 L1536.67 1217.38 L1536.08 1217.38 L1535.49 1217.38 L1534.91 1217.38 L1534.32 1217.38 L1533.73 1217.38 L1533.15 1217.38 L1532.56 1217.38 L1531.98 1217.38 L1531.39 1217.38 L1530.8 1217.38 L1530.22 1217.38 L1529.63 1217.38 L1529.04 1217.38 L1528.46 1217.38 L1527.87 1217.38 L1527.28 1217.38 L1526.7 1217.38 L1526.11 1217.38 L1525.52 1217.38 L1524.94 1217.38 L1524.35 1217.38 L1523.77 1217.38 L1523.18 1217.38 L1522.59 1217.38 L1522.01 1217.38 L1521.42 1217.38 L1520.83 1217.38 L1520.25 1217.38 L1519.66 1217.38 L1519.07 1217.38 L1518.49 1217.38 L1517.9 1217.38 L1517.32 1217.38 L1516.73 1217.38 L1516.14 1217.38 L1515.56 1217.38 L1514.97 1217.38 L1514.38 1217.38 L1513.8 1217.38 L1513.21 1217.38 L1512.62 1217.38 L1512.04 1217.38 L1511.45 1217.38 L1510.86 1217.38 L1510.28 1217.38 L1509.69 1217.38 L1509.11 1217.38 L1508.52 1217.38 L1507.93 1217.38 L1507.35 1217.38 L1506.76 1217.38 L1506.17 1217.38 L1505.59 1217.38 L1505 1217.38 L1504.41 1217.38 L1503.83 1217.38 L1503.24 1217.38 L1502.65 1217.38 L1502.07 1217.38 L1501.48 1217.38 L1500.9 1217.38 L1500.31 1217.38 L1499.72 1217.38 L1499.14 1217.38 L1498.55 1217.38 L1497.96 1217.38 L1497.38 1217.38 L1496.79 1217.38 L1496.2 1217.38 L1495.62 1217.38 L1495.03 1217.38 L1494.45 1217.38 L1493.86 1217.38 L1493.27 1217.38 L1492.69 1217.38 L1492.1 1217.38 L1491.51 1217.38 L1490.93 1217.38 L1490.34 1217.38 L1489.75 1217.38 L1489.17 1217.38 L1488.58 1217.38 L1487.99 1217.38 L1487.41 1217.38 L1486.82 1217.38 L1486.24 1217.38 L1485.65 1217.38 L1485.06 1217.38 L1484.48 1217.38 L1483.89 1217.38 L1483.3 1217.38 L1482.72 1217.38 L1482.13 1217.38 L1481.54 1217.38 L1480.96 1217.38 L1480.37 1217.38 L1479.78 1217.38 L1479.2 1217.38 L1478.61 1217.38 L1478.03 1217.38 L1477.44 1217.38 L1476.85 1217.38 L1476.27 1217.38 L1475.68 1217.38 L1475.09 1217.38 L1474.51 1217.38 L1473.92 1217.38 L1473.33 1217.38 L1472.75 1217.38 L1472.16 1217.38 L1471.57 1217.38 L1470.99 1217.38 L1470.4 1217.38 L1469.82 1217.38 L1469.23 1217.38 L1468.64 1217.38 L1468.06 1217.38 L1467.47 1217.38 L1466.88 1217.38 L1466.3 1217.38 L1465.71 1217.38 L1465.12 1217.38 L1464.54 1217.38 L1463.95 1217.38 L1463.37 1217.38 L1462.78 1217.38 L1462.19 1217.38 L1461.61 1217.38 L1461.02 1217.38 L1460.43 1217.38 L1459.85 1217.38 L1459.26 1217.38 L1458.67 1217.38 L1458.09 1217.38 L1457.5 1217.38 L1456.91 1217.38 L1456.33 1217.38 L1455.74 1217.38 L1455.16 1217.38 L1454.57 1217.38 L1453.98 1217.38 L1453.4 1217.38 L1452.81 1217.38 L1452.22 1217.38 L1451.64 1217.38 L1451.05 1217.38 L1450.46 1217.38 L1449.88 1217.38 L1449.29 1217.38 L1448.7 1217.38 L1448.12 1217.38 L1447.53 1217.38 L1446.95 1217.38 L1446.36 1217.38 L1445.77 1217.38 L1445.19 1217.38 L1444.6 1217.38 L1444.01 1217.38 L1443.43 1217.38 L1442.84 1217.38 L1442.25 1217.38 L1441.67 1217.38 L1441.08 1217.38 L1440.5 1217.38 L1439.91 1217.38 L1439.32 1217.38 L1438.74 1217.38 L1438.15 1217.38 L1437.56 1217.38 L1436.98 1217.38 L1436.39 1217.38 L1435.8 1217.38 L1435.22 1217.38 L1434.63 1217.38 L1434.04 1217.38 L1433.46 1217.38 L1432.87 1217.38 L1432.29 1217.38 L1431.7 1217.38 L1431.11 1217.38 L1430.53 1217.38 L1429.94 1217.38 L1429.35 1217.38 L1428.77 1217.38 L1428.18 1217.38 L1427.59 1217.38 L1427.01 1217.38 L1426.42 1217.38 L1425.83 1217.38 L1425.25 1217.38 L1424.66 1217.38 L1424.08 1217.38 L1423.49 1217.38 L1422.9 1217.38 L1422.32 1217.38 L1421.73 1217.38 L1421.14 1217.38 L1420.56 1217.38 L1419.97 1217.38 L1419.38 1217.38 L1418.8 1217.38 L1418.21 1217.38 L1417.63 1217.38 L1417.04 1217.38 L1416.45 1217.38 L1415.87 1217.38 L1415.28 1217.38 L1414.69 1217.38 L1414.11 1217.38 L1413.52 1217.38 L1412.93 1217.38 L1412.35 1217.38 L1411.76 1217.38 L1411.17 1217.38 L1410.59 1217.38 L1410 1217.38 L1409.42 1217.38 L1408.83 1217.38 L1408.24 1217.38 L1407.66 1217.38 L1407.07 1217.38 L1406.48 1217.38 L1405.9 1217.38 L1405.31 1217.38 L1404.72 1217.38 L1404.14 1217.38 L1403.55 1217.38 L1402.96 1217.38 L1402.38 1217.38 L1401.79 1217.38 L1401.21 1217.38 L1400.62 1217.38 L1400.03 1217.38 L1399.45 1217.38 L1398.86 1217.38 L1398.27 1217.38 L1397.69 1217.38 L1397.1 1217.38 L1396.51 1217.38 L1395.93 1217.38 L1395.34 1217.38 L1394.75 1217.38 L1394.17 1217.38 L1393.58 1217.38 L1393 1217.38 L1392.41 1217.38 L1391.82 1217.38 L1391.24 1217.38 L1390.65 1217.38 L1390.06 1217.38 L1389.48 1217.38 L1388.89 1217.38 L1388.3 1217.38 L1387.72 1217.38 L1387.13 1217.38 L1386.55 1217.38 L1385.96 1217.38 L1385.37 1217.38 L1384.79 1217.38 L1384.2 1217.38 L1383.61 1217.38 L1383.03 1217.38 L1382.44 1217.38 L1381.85 1217.38 L1381.27 1217.38 L1380.68 1217.38 L1380.09 1217.38 L1379.51 1217.38 L1378.92 1217.38 L1378.34 1217.38 L1377.75 1217.38 L1377.16 1217.38 L1376.58 1217.38 L1375.99 1217.38 L1375.4 1217.38 L1374.82 1217.38 L1374.23 1217.38 L1373.64 1217.38 L1373.06 1217.38 L1372.47 1217.38 L1371.88 1217.38 L1371.3 1217.38 L1370.71 1217.38 L1370.13 1217.38 L1369.54 1217.38 L1368.95 1217.38 L1368.37 1217.38 L1367.78 1217.38 L1367.19 1217.38 L1366.61 1217.38 L1366.02 1217.38 L1365.43 1217.38 L1364.85 1217.38 L1364.26 1217.38 L1363.68 1217.38 L1363.09 1217.38 L1362.5 1217.38 L1361.92 1217.38 L1361.33 1217.38 L1360.74 1217.38 L1360.16 1217.38 L1359.57 1217.38 L1358.98 1217.38 L1358.4 1217.38 L1357.81 1217.38 L1357.22 1217.38 L1356.64 1217.38 L1356.05 1217.38 L1355.47 1217.38 L1354.88 1217.38 L1354.29 1217.38 L1353.71 1217.38 L1353.12 1217.38 L1352.53 1217.38 L1351.95 1217.38 L1351.36 1217.38 L1350.77 1217.38 L1350.19 1217.38 L1349.6 1217.38 L1349.01 1217.38 L1348.43 1217.38 L1347.84 1217.38 L1347.26 1217.38 L1346.67 1217.38 L1346.08 1217.38 L1345.5 1217.38 L1344.91 1217.38 L1344.32 1217.38 L1343.74 1217.38 L1343.15 1217.38 L1342.56 1217.38 L1341.98 1217.38 L1341.39 1217.38 L1340.8 1217.38 L1340.22 1217.38 L1339.63 1217.38 L1339.05 1217.38 L1338.46 1217.38 L1337.87 1217.38 L1337.29 1217.38 L1336.7 1217.38 L1336.11 1217.38 L1335.53 1217.38 L1334.94 1217.38 L1334.35 1217.38 L1333.77 1217.38 L1333.18 1217.38 L1332.6 1217.38 L1332.01 1217.38 L1331.42 1217.38 L1330.84 1217.38 L1330.25 1217.38 L1329.66 1217.38 L1329.08 1217.38 L1328.49 1217.38 L1327.9 1217.38 L1327.32 1217.38 L1326.73 1217.38 L1326.14 1217.38 L1325.56 1217.38 L1324.97 1217.38 L1324.39 1217.38 L1323.8 1217.38 L1323.21 1217.38 L1322.63 1217.38 L1322.04 1217.38 L1321.45 1217.38 L1320.87 1217.38 L1320.28 1217.38 L1319.69 1217.38 L1319.11 1217.38 L1318.52 1217.38 L1317.93 1217.38 L1317.35 1217.38 L1316.76 1217.38 L1316.18 1217.38 L1315.59 1217.38 L1315 1217.38 L1314.42 1217.38 L1313.83 1217.38 L1313.24 1217.38 L1312.66 1217.38 L1312.07 1217.38 L1311.48 1217.38 L1310.9 1217.38 L1310.31 1217.38 L1309.73 1217.38 L1309.14 1217.38 L1308.55 1217.38 L1307.97 1217.38 L1307.38 1217.38 L1306.79 1217.38 L1306.21 1217.38 L1305.62 1217.38 L1305.03 1217.38 L1304.45 1217.38 L1303.86 1217.38 L1303.27 1217.38 L1302.69 1217.38 L1302.1 1217.38 L1301.52 1217.38 L1300.93 1217.38 L1300.34 1217.38 L1299.76 1217.38 L1299.17 1217.38 L1298.58 1217.38 L1298 1217.38 L1297.41 1217.38 L1296.82 1217.38 L1296.24 1217.38 L1295.65 1217.38 L1295.06 1217.38 L1294.48 1217.38 L1293.89 1217.38 L1293.31 1217.38 L1292.72 1217.38 L1292.13 1217.38 L1291.55 1217.38 L1290.96 1217.38 L1290.37 1217.38 L1289.79 1217.38 L1289.2 1217.38 L1288.61 1217.38 L1288.03 1217.38 L1287.44 1217.38 L1286.86 1217.38 L1286.27 1217.38 L1285.68 1217.38 L1285.1 1217.38 L1284.51 1217.38 L1283.92 1217.38 L1283.34 1217.38 L1282.75 1217.38 L1282.16 1217.38 L1281.58 1217.38 L1280.99 1217.38 L1280.4 1217.38 L1279.82 1217.38 L1279.23 1217.38 L1278.65 1217.38 L1278.06 1217.38 L1277.47 1217.38 L1276.89 1217.38 L1276.3 1217.38 L1275.71 1217.38 L1275.13 1217.38 L1274.54 1217.38 L1273.95 1217.38 L1273.37 1217.38 L1272.78 1217.38 L1272.19 1217.38 L1271.61 1217.38 L1271.02 1217.38 L1270.44 1217.38 L1269.85 1217.38 L1269.26 1217.38 L1268.68 1217.38 L1268.09 1217.38 L1267.5 1217.38 L1266.92 1217.38 L1266.33 1217.38 L1265.74 1217.38 L1265.16 1217.38 L1264.57 1217.38 L1263.98 1217.38 L1263.4 1217.38 L1262.81 1217.38 L1262.23 1217.38 L1261.64 1217.38 L1261.05 1217.38 L1260.47 1217.38 L1259.88 1217.38 L1259.29 1217.38 L1258.71 1217.38 L1258.12 1217.38 L1257.53 1217.38 L1256.95 1217.38 L1256.36 1217.38 L1255.78 1217.38 L1255.19 1217.38 L1254.6 1217.38 L1254.02 1217.38 L1253.43 1217.38 L1252.84 1217.38 L1252.26 1217.38 L1251.67 1217.38 L1251.08 1217.38 L1250.5 1217.38 L1249.91 1217.38 L1249.32 1217.38 L1248.74 1217.38 L1248.15 1217.38 L1247.57 1217.38 L1246.98 1217.38 L1246.39 1217.38 L1245.81 1217.38 L1245.22 1217.38 L1244.63 1217.38 L1244.05 1217.38 L1243.46 1217.38 L1242.87 1217.38 L1242.29 1217.38 L1241.7 1217.38 L1241.11 1217.38 L1240.53 1217.38 L1239.94 1217.38 L1239.36 1217.38 L1238.77 1217.38 L1238.18 1217.38 L1237.6 1217.38 L1237.01 1217.38 L1236.42 1217.38 L1235.84 1217.38 L1235.25 1217.38 L1234.66 1217.38 L1234.08 1217.38 L1233.49 1217.38 L1232.91 1217.38 L1232.32 1217.38 L1231.73 1217.38 L1231.15 1217.38 L1230.56 1217.38 L1229.97 1217.38 L1229.39 1217.38 L1228.8 1217.38 L1228.21 1217.38 L1227.63 1217.38 L1227.04 1217.38 L1226.45 1217.38 L1225.87 1217.38 L1225.28 1217.38 L1224.7 1217.38 L1224.11 1217.38 L1223.52 1217.38 L1222.94 1217.38 L1222.35 1217.38 L1221.76 1217.38 L1221.18 1217.38 L1220.59 1217.38 L1220 1217.38 L1219.42 1217.38 L1218.83 1217.38 L1218.24 1217.38 L1217.66 1217.38 L1217.07 1217.38 L1216.49 1217.38 L1215.9 1217.38 L1215.31 1217.38 L1214.73 1217.38 L1214.14 1217.38 L1213.55 1217.38 L1212.97 1217.38 L1212.38 1217.38 L1211.79 1217.38 L1211.21 1217.38 L1210.62 1217.38 L1210.03 1217.38 L1209.45 1217.38 L1208.86 1217.38 L1208.28 1217.38 L1207.69 1217.38 L1207.1 1217.38 L1206.52 1217.38 L1205.93 1217.38 L1205.34 1217.38 L1204.76 1217.38 L1204.17 1217.38 L1203.58 1217.38 L1203 1217.38 L1202.41 1217.38 L1201.83 1217.38 L1201.24 1217.38 L1200.65 1217.38 L1200.07 1217.38 L1199.48 1217.38 L1198.89 1217.38 L1198.31 1217.38 L1197.72 1217.38 L1197.13 1217.38 L1196.55 1217.38 L1195.96 1217.38 L1195.37 1217.38 L1194.79 1217.38 L1194.2 1217.38 L1193.62 1217.38 L1193.03 1217.38 L1192.44 1217.38 L1191.86 1217.38 L1191.27 1217.38 L1190.68 1217.38 L1190.1 1217.38 L1189.51 1217.38 L1188.92 1217.38 L1188.34 1217.38 L1187.75 1217.38 L1187.16 1217.38 L1186.58 1217.38 L1185.99 1217.38 L1185.41 1217.38 L1184.82 1217.38 L1184.23 1217.38 L1183.65 1217.38 L1183.06 1217.38 L1182.47 1217.38 L1181.89 1217.38 L1181.3 1217.38 L1180.71 1217.38 L1180.13 1217.38 L1179.54 1217.38 L1178.96 1217.38 L1178.37 1217.38 L1177.78 1217.38 L1177.2 1217.38 L1176.61 1217.38 L1176.02 1217.38 L1175.44 1217.38 L1174.85 1217.38 L1174.26 1217.38 L1173.68 1217.38 L1173.09 1217.38 L1172.5 1217.38 L1171.92 1217.38 L1171.33 1217.38 L1170.75 1217.38 L1170.16 1217.38 L1169.57 1217.38 L1168.99 1217.38 L1168.4 1217.38 L1167.81 1217.38 L1167.23 1217.38 L1166.64 1217.38 L1166.05 1217.38 L1165.47 1217.38 L1164.88 1217.38 L1164.29 1217.38 L1163.71 1217.38 L1163.12 1217.38 L1162.54 1217.38 L1161.95 1217.38 L1161.36 1217.38 L1160.78 1217.38 L1160.19 1217.38 L1159.6 1217.38 L1159.02 1217.38 L1158.43 1217.38 L1157.84 1217.38 L1157.26 1217.38 L1156.67 1217.38 L1156.09 1217.38 L1155.5 1217.38 L1154.91 1217.38 L1154.33 1217.38 L1153.74 1217.38 L1153.15 1217.38 L1152.57 1217.38 L1151.98 1217.38 L1151.39 1217.38 L1150.81 1217.38 L1150.22 1217.38 L1149.63 1217.38 L1149.05 1217.38 L1148.46 1217.38 L1147.88 1217.38 L1147.29 1217.38 L1146.7 1217.38 L1146.12 1217.38 L1145.53 1217.38 L1144.94 1217.38 L1144.36 1217.38 L1143.77 1217.38 L1143.18 1217.38 L1142.6 1217.38 L1142.01 1217.38 L1141.42 1217.38 L1140.84 1217.38 L1140.25 1217.38 L1139.67 1217.38 L1139.08 1217.38 L1138.49 1217.38 L1137.91 1217.38 L1137.32 1217.38 L1136.73 1217.38 L1136.15 1217.38 L1135.56 1217.38 L1134.97 1217.38 L1134.39 1217.38 L1133.8 1217.38 L1133.21 1217.38 L1132.63 1217.38 L1132.04 1217.38 L1131.46 1217.38 L1130.87 1217.38 L1130.28 1217.38 L1129.7 1217.38 L1129.11 1217.38 L1128.52 1217.38 L1127.94 1217.38 L1127.35 1217.38 L1126.76 1217.38 L1126.18 1217.38 L1125.59 1217.38 L1125.01 1217.38 L1124.42 1217.38 L1123.83 1217.38 L1123.25 1217.38 L1122.66 1217.38 L1122.07 1217.38 L1121.49 1217.38 L1120.9 1217.38 L1120.31 1217.38 L1119.73 1217.38 L1119.14 1217.38 L1118.55 1217.38 L1117.97 1217.38 L1117.38 1217.38 L1116.8 1217.38 L1116.21 1217.38 L1115.62 1217.38 L1115.04 1217.38 L1114.45 1217.38 L1113.86 1217.38 L1113.28 1217.38 L1112.69 1217.38 L1112.1 1217.38 L1111.52 1217.38 L1110.93 1217.38 L1110.34 1217.38 L1109.76 1217.38 L1109.17 1217.38 L1108.59 1217.38 L1108 1217.38 L1107.41 1217.38 L1106.83 1217.38 L1106.24 1217.38 L1105.65 1217.38 L1105.07 1217.38 L1104.48 1217.38 L1103.89 1217.38 L1103.31 1217.38 L1102.72 1217.38 L1102.14 1217.38 L1101.55 1217.38 L1100.96 1217.38 L1100.38 1217.38 L1099.79 1217.38 L1099.2 1217.38 L1098.62 1217.38 L1098.03 1217.38 L1097.44 1217.38 L1096.86 1217.38 L1096.27 1217.38 L1095.68 1217.38 L1095.1 1217.38 L1094.51 1217.38 L1093.93 1217.38 L1093.34 1217.38 L1092.75 1217.38 L1092.17 1217.38 L1091.58 1217.38 L1090.99 1217.38 L1090.41 1217.38 L1089.82 1217.38 L1089.23 1217.38 L1088.65 1217.38 L1088.06 1217.38 L1087.47 1217.38 L1086.89 1217.38 L1086.3 1217.38 L1085.72 1217.38 L1085.13 1217.38 L1084.54 1217.38 L1083.96 1217.38 L1083.37 1217.38 L1082.78 1217.38 L1082.2 1217.38 L1081.61 1217.38 L1081.02 1217.38 L1080.44 1217.38 L1079.85 1217.38 L1079.26 1217.38 L1078.68 1217.38 L1078.09 1217.38 L1077.51 1217.38 L1076.92 1217.38 L1076.33 1217.38 L1075.75 1217.38 L1075.16 1217.38 L1074.57 1217.38 L1073.99 1217.38 L1073.4 1217.38 L1072.81 1217.38 L1072.23 1217.38 L1071.64 1217.38 L1071.06 1217.38 L1070.47 1217.38 L1069.88 1217.38 L1069.3 1217.38 L1068.71 1217.38 L1068.12 1217.38 L1067.54 1217.38 L1066.95 1217.38 L1066.36 1217.38 L1065.78 1217.38 L1065.19 1217.38 L1064.6 1217.38 L1064.02 1217.38 L1063.43 1217.38 L1062.85 1217.38 L1062.26 1217.38 L1061.67 1217.38 L1061.09 1217.38 L1060.5 1217.38 L1059.91 1217.38 L1059.33 1217.38 L1058.74 1217.38 L1058.15 1217.38 L1057.57 1217.38 L1056.98 1217.38 L1056.39 1217.38 L1055.81 1217.38 L1055.22 1217.38 L1054.64 1217.38 L1054.05 1217.38 L1053.46 1217.38 L1052.88 1217.38 L1052.29 1217.38 L1051.7 1217.38 L1051.12 1217.38 L1050.53 1217.38 L1049.94 1217.38 L1049.36 1217.38 L1048.77 1217.38 L1048.19 1217.38 L1047.6 1217.38 L1047.01 1217.38 L1046.43 1217.38 L1045.84 1217.38 L1045.25 1217.38 L1044.67 1217.38 L1044.08 1217.38 L1043.49 1217.38 L1042.91 1217.38 L1042.32 1217.38 L1041.73 1217.38 L1041.15 1217.38 L1040.56 1217.38 L1039.98 1217.38 L1039.39 1217.38 L1038.8 1217.38 L1038.22 1217.38 L1037.63 1217.38 L1037.04 1217.38 L1036.46 1217.38 L1035.87 1217.38 L1035.28 1217.38 L1034.7 1217.38 L1034.11 1217.38 L1033.52 1217.38 L1032.94 1217.38 L1032.35 1217.38 L1031.77 1217.38 L1031.18 1217.38 L1030.59 1217.38 L1030.01 1217.38 L1029.42 1217.38 L1028.83 1217.38 L1028.25 1217.38 L1027.66 1217.38 L1027.07 1217.38 L1026.49 1217.38 L1025.9 1217.38 L1025.32 1217.38 L1024.73 1217.38 L1024.14 1217.38 L1023.56 1217.38 L1022.97 1217.38 L1022.38 1217.38 L1021.8 1217.38 L1021.21 1217.38 L1020.62 1217.38 L1020.04 1217.38 L1019.45 1217.38 L1018.86 1217.38 L1018.28 1217.38 L1017.69 1217.38 L1017.11 1217.38 L1016.52 1217.38 L1015.93 1217.38 L1015.35 1217.38 L1014.76 1217.38 L1014.17 1217.38 L1013.59 1217.38 L1013 1217.38 L1012.41 1217.38 L1011.83 1217.38 L1011.24 1217.38 L1010.65 1217.38 L1010.07 1217.38 L1009.48 1217.38 L1008.9 1217.38 L1008.31 1217.38 L1007.72 1217.38 L1007.14 1217.38 L1006.55 1217.38 L1005.96 1217.38 L1005.38 1217.38 L1004.79 1217.38 L1004.2 1217.38 L1003.62 1217.38 L1003.03 1217.38 L1002.44 1217.38 L1001.86 1217.38 L1001.27 1217.38 L1000.69 1217.38 L1000.1 1217.38 L999.513 1217.38 L998.926 1217.38 L998.34 1217.38 L997.754 1217.38 L997.167 1217.38 L996.581 1217.38 L995.994 1217.38 L995.408 1217.38 L994.822 1217.38 L994.235 1217.38 L993.649 1217.38 L993.062 1217.38 L992.476 1217.38 L991.889 1217.38 L991.303 1217.38 L990.717 1217.38 L990.13 1217.38 L989.544 1217.38 L988.957 1217.38 L988.371 1217.38 L987.785 1217.38 L987.198 1217.38 L986.612 1217.38 L986.025 1217.38  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1217.74 986.612,1217.74 987.198,1217.74 987.785,1217.74 988.371,1217.74 988.957,1217.74 989.544,1217.74 990.13,1217.74 990.717,1217.74 991.303,1217.74 991.889,1217.74 992.476,1217.74 993.062,1217.74 993.649,1217.74 994.235,1217.74 994.822,1217.74 995.408,1217.74 995.994,1217.74 996.581,1217.74 997.167,1217.74 997.754,1217.74 998.34,1217.74 998.926,1217.74 999.513,1217.74 1000.1,1217.74 1000.69,1217.74 1001.27,1217.74 1001.86,1217.74 1002.44,1217.74 1003.03,1217.74 1003.62,1217.74 1004.2,1217.74 1004.79,1217.74 1005.38,1217.74 1005.96,1217.74 1006.55,1217.74 1007.14,1217.74 1007.72,1217.74 1008.31,1217.74 1008.9,1217.74 1009.48,1217.74 1010.07,1217.74 1010.65,1217.74 1011.24,1217.74 1011.83,1217.74 1012.41,1217.74 1013,1217.74 1013.59,1217.74 1014.17,1217.74 1014.76,1217.74 1015.35,1217.74 1015.93,1217.74 1016.52,1217.74 1017.11,1217.74 1017.69,1217.74 1018.28,1217.74 1018.86,1217.74 1019.45,1217.74 1020.04,1217.74 1020.62,1217.74 1021.21,1217.74 1021.8,1217.74 1022.38,1217.74 1022.97,1217.74 1023.56,1217.74 1024.14,1217.74 1024.73,1217.74 1025.32,1217.74 1025.9,1217.74 1026.49,1217.74 1027.07,1217.74 1027.66,1217.74 1028.25,1217.74 1028.83,1217.74 1029.42,1217.74 1030.01,1217.74 1030.59,1217.74 1031.18,1217.74 1031.77,1217.74 1032.35,1217.74 1032.94,1217.74 1033.52,1217.74 1034.11,1217.74 1034.7,1217.74 1035.28,1217.74 1035.87,1217.74 1036.46,1217.74 1037.04,1217.74 1037.63,1217.74 1038.22,1217.74 1038.8,1217.74 1039.39,1217.74 1039.98,1217.74 1040.56,1217.74 1041.15,1217.74 1041.73,1217.74 1042.32,1217.74 1042.91,1217.74 1043.49,1217.74 1044.08,1217.74 1044.67,1217.74 1045.25,1217.74 1045.84,1217.74 1046.43,1217.74 1047.01,1217.74 1047.6,1217.74 1048.19,1217.74 1048.77,1217.74 1049.36,1217.74 1049.94,1217.74 1050.53,1217.74 1051.12,1217.74 1051.7,1217.74 1052.29,1217.74 1052.88,1217.74 1053.46,1217.74 1054.05,1217.74 1054.64,1217.74 1055.22,1217.74 1055.81,1217.74 1056.39,1217.74 1056.98,1217.74 1057.57,1217.74 1058.15,1217.74 1058.74,1217.74 1059.33,1217.74 1059.91,1217.74 1060.5,1217.74 1061.09,1217.74 1061.67,1217.74 1062.26,1217.74 1062.85,1217.74 1063.43,1217.74 1064.02,1217.74 1064.6,1217.74 1065.19,1217.74 1065.78,1217.74 1066.36,1217.74 1066.95,1217.74 1067.54,1217.74 1068.12,1217.74 1068.71,1217.74 1069.3,1217.74 1069.88,1217.74 1070.47,1217.74 1071.06,1217.74 1071.64,1217.74 1072.23,1217.74 1072.81,1217.74 1073.4,1217.74 1073.99,1217.74 1074.57,1217.74 1075.16,1217.74 1075.75,1217.74 1076.33,1217.74 1076.92,1217.74 1077.51,1217.74 1078.09,1217.74 1078.68,1217.74 1079.26,1217.74 1079.85,1217.74 1080.44,1217.74 1081.02,1217.74 1081.61,1217.74 1082.2,1217.74 1082.78,1217.74 1083.37,1217.74 1083.96,1217.74 1084.54,1217.74 1085.13,1217.74 1085.72,1217.74 1086.3,1217.74 1086.89,1217.74 1087.47,1217.74 1088.06,1217.74 1088.65,1217.74 1089.23,1217.74 1089.82,1217.74 1090.41,1217.74 1090.99,1217.74 1091.58,1217.74 1092.17,1217.74 1092.75,1217.74 1093.34,1217.74 1093.93,1217.74 1094.51,1217.74 1095.1,1217.74 1095.68,1217.74 1096.27,1217.74 1096.86,1217.74 1097.44,1217.74 1098.03,1217.74 1098.62,1217.74 1099.2,1217.74 1099.79,1217.74 1100.38,1217.74 1100.96,1217.74 1101.55,1217.74 1102.14,1217.74 1102.72,1217.74 1103.31,1217.74 1103.89,1217.74 1104.48,1217.74 1105.07,1217.74 1105.65,1217.74 1106.24,1217.74 1106.83,1217.74 1107.41,1217.74 1108,1217.74 1108.59,1217.74 1109.17,1217.74 1109.76,1217.74 1110.34,1217.74 1110.93,1217.74 1111.52,1217.74 1112.1,1217.74 1112.69,1217.74 1113.28,1217.74 1113.86,1217.74 1114.45,1217.74 1115.04,1217.74 1115.62,1217.74 1116.21,1217.74 1116.8,1217.74 1117.38,1217.74 1117.97,1217.74 1118.55,1217.74 1119.14,1217.74 1119.73,1217.74 1120.31,1217.74 1120.9,1217.74 1121.49,1217.74 1122.07,1217.74 1122.66,1217.74 1123.25,1217.74 1123.83,1217.74 1124.42,1217.74 1125.01,1217.74 1125.59,1217.74 1126.18,1217.74 1126.76,1217.74 1127.35,1217.74 1127.94,1217.74 1128.52,1217.74 1129.11,1217.74 1129.7,1217.74 1130.28,1217.74 1130.87,1217.74 1131.46,1217.74 1132.04,1217.74 1132.63,1217.74 1133.21,1217.74 1133.8,1217.74 1134.39,1217.74 1134.97,1217.74 1135.56,1217.74 1136.15,1217.74 1136.73,1217.74 1137.32,1217.74 1137.91,1217.74 1138.49,1217.74 1139.08,1217.74 1139.67,1217.74 1140.25,1217.74 1140.84,1217.74 1141.42,1217.74 1142.01,1217.74 1142.6,1217.74 1143.18,1217.74 1143.77,1217.74 1144.36,1217.74 1144.94,1217.74 1145.53,1217.74 1146.12,1217.74 1146.7,1217.74 1147.29,1217.74 1147.88,1217.74 1148.46,1217.74 1149.05,1217.74 1149.63,1217.74 1150.22,1217.74 1150.81,1217.74 1151.39,1217.74 1151.98,1217.74 1152.57,1217.74 1153.15,1217.74 1153.74,1217.74 1154.33,1217.74 1154.91,1217.74 1155.5,1217.74 1156.09,1217.74 1156.67,1217.74 1157.26,1217.74 1157.84,1217.74 1158.43,1217.74 1159.02,1217.74 1159.6,1217.74 1160.19,1217.74 1160.78,1217.74 1161.36,1217.74 1161.95,1217.74 1162.54,1217.74 1163.12,1217.74 1163.71,1217.74 1164.29,1217.74 1164.88,1217.74 1165.47,1217.74 1166.05,1217.74 1166.64,1217.74 1167.23,1217.74 1167.81,1217.74 1168.4,1217.74 1168.99,1217.74 1169.57,1217.74 1170.16,1217.74 1170.75,1217.74 1171.33,1217.74 1171.92,1217.74 1172.5,1217.74 1173.09,1217.74 1173.68,1217.74 1174.26,1217.74 1174.85,1217.74 1175.44,1217.74 1176.02,1217.74 1176.61,1217.74 1177.2,1217.74 1177.78,1217.74 1178.37,1217.74 1178.96,1217.74 1179.54,1217.74 1180.13,1217.74 1180.71,1217.74 1181.3,1217.74 1181.89,1217.74 1182.47,1217.74 1183.06,1217.74 1183.65,1217.74 1184.23,1217.74 1184.82,1217.74 1185.41,1217.74 1185.99,1217.74 1186.58,1217.74 1187.16,1217.74 1187.75,1217.74 1188.34,1217.74 1188.92,1217.74 1189.51,1217.74 1190.1,1217.74 1190.68,1217.74 1191.27,1217.74 1191.86,1217.74 1192.44,1217.74 1193.03,1217.74 1193.62,1217.74 1194.2,1217.74 1194.79,1217.74 1195.37,1217.74 1195.96,1217.74 1196.55,1217.74 1197.13,1217.74 1197.72,1217.74 1198.31,1217.74 1198.89,1217.74 1199.48,1217.74 1200.07,1217.74 1200.65,1217.74 1201.24,1217.74 1201.83,1217.74 1202.41,1217.74 1203,1217.74 1203.58,1217.74 1204.17,1217.74 1204.76,1217.74 1205.34,1217.74 1205.93,1217.74 1206.52,1217.74 1207.1,1217.74 1207.69,1217.74 1208.28,1217.74 1208.86,1217.74 1209.45,1217.74 1210.03,1217.74 1210.62,1217.74 1211.21,1217.74 1211.79,1217.74 1212.38,1217.74 1212.97,1217.74 1213.55,1217.74 1214.14,1217.74 1214.73,1217.74 1215.31,1217.74 1215.9,1217.74 1216.49,1217.74 1217.07,1217.74 1217.66,1217.74 1218.24,1217.74 1218.83,1217.74 1219.42,1217.74 1220,1217.74 1220.59,1217.74 1221.18,1217.74 1221.76,1217.74 1222.35,1217.74 1222.94,1217.74 1223.52,1217.74 1224.11,1217.74 1224.7,1217.74 1225.28,1217.74 1225.87,1217.74 1226.45,1217.74 1227.04,1217.74 1227.63,1217.74 1228.21,1217.74 1228.8,1217.74 1229.39,1217.74 1229.97,1217.74 1230.56,1217.74 1231.15,1217.74 1231.73,1217.74 1232.32,1217.74 1232.91,1217.74 1233.49,1217.74 1234.08,1217.74 1234.66,1217.74 1235.25,1217.74 1235.84,1217.74 1236.42,1217.74 1237.01,1217.74 1237.6,1217.74 1238.18,1217.74 1238.77,1217.74 1239.36,1217.74 1239.94,1217.74 1240.53,1217.74 1241.11,1217.74 1241.7,1217.74 1242.29,1217.74 1242.87,1217.74 1243.46,1217.74 1244.05,1217.74 1244.63,1217.74 1245.22,1217.74 1245.81,1217.74 1246.39,1217.74 1246.98,1217.74 1247.57,1217.74 1248.15,1217.74 1248.74,1217.74 1249.32,1217.74 1249.91,1217.74 1250.5,1217.74 1251.08,1217.74 1251.67,1217.74 1252.26,1217.74 1252.84,1217.74 1253.43,1217.74 1254.02,1217.74 1254.6,1217.74 1255.19,1217.74 1255.78,1217.74 1256.36,1217.74 1256.95,1217.74 1257.53,1217.74 1258.12,1217.74 1258.71,1217.74 1259.29,1217.74 1259.88,1217.74 1260.47,1217.74 1261.05,1217.74 1261.64,1217.74 1262.23,1217.74 1262.81,1217.74 1263.4,1217.74 1263.98,1217.74 1264.57,1217.74 1265.16,1217.74 1265.74,1217.74 1266.33,1217.74 1266.92,1217.74 1267.5,1217.74 1268.09,1217.74 1268.68,1217.74 1269.26,1217.74 1269.85,1217.74 1270.44,1217.74 1271.02,1217.74 1271.61,1217.74 1272.19,1217.74 1272.78,1217.74 1273.37,1217.74 1273.95,1217.74 1274.54,1217.74 1275.13,1217.74 1275.71,1217.74 1276.3,1217.74 1276.89,1217.74 1277.47,1217.74 1278.06,1217.74 1278.65,1217.74 1279.23,1217.74 1279.82,1217.74 1280.4,1217.74 1280.99,1217.74 1281.58,1217.74 1282.16,1217.74 1282.75,1217.74 1283.34,1217.74 1283.92,1217.74 1284.51,1217.74 1285.1,1217.74 1285.68,1217.74 1286.27,1217.74 1286.86,1217.74 1287.44,1217.74 1288.03,1217.74 1288.61,1217.74 1289.2,1217.74 1289.79,1217.74 1290.37,1217.74 1290.96,1217.74 1291.55,1217.74 1292.13,1217.74 1292.72,1217.74 1293.31,1217.74 1293.89,1217.74 1294.48,1217.74 1295.06,1217.74 1295.65,1217.74 1296.24,1217.74 1296.82,1217.74 1297.41,1217.74 1298,1217.74 1298.58,1217.74 1299.17,1217.74 1299.76,1217.74 1300.34,1217.74 1300.93,1217.74 1301.52,1217.74 1302.1,1217.74 1302.69,1217.74 1303.27,1217.74 1303.86,1217.74 1304.45,1217.74 1305.03,1217.74 1305.62,1217.74 1306.21,1217.74 1306.79,1217.74 1307.38,1217.74 1307.97,1217.74 1308.55,1217.74 1309.14,1217.74 1309.73,1217.74 1310.31,1217.74 1310.9,1217.74 1311.48,1217.74 1312.07,1217.74 1312.66,1217.74 1313.24,1217.74 1313.83,1217.74 1314.42,1217.74 1315,1217.74 1315.59,1217.74 1316.18,1217.74 1316.76,1217.74 1317.35,1217.74 1317.93,1217.74 1318.52,1217.74 1319.11,1217.74 1319.69,1217.74 1320.28,1217.74 1320.87,1217.74 1321.45,1217.74 1322.04,1217.74 1322.63,1217.74 1323.21,1217.74 1323.8,1217.74 1324.39,1217.74 1324.97,1217.74 1325.56,1217.74 1326.14,1217.74 1326.73,1217.74 1327.32,1217.74 1327.9,1217.74 1328.49,1217.74 1329.08,1217.74 1329.66,1217.74 1330.25,1217.74 1330.84,1217.74 1331.42,1217.74 1332.01,1217.74 1332.6,1217.74 1333.18,1217.74 1333.77,1217.74 1334.35,1217.74 1334.94,1217.74 1335.53,1217.74 1336.11,1217.74 1336.7,1217.74 1337.29,1217.74 1337.87,1217.74 1338.46,1217.74 1339.05,1217.74 1339.63,1217.74 1340.22,1217.74 1340.8,1217.74 1341.39,1217.74 1341.98,1217.74 1342.56,1217.74 1343.15,1217.74 1343.74,1217.74 1344.32,1217.74 1344.91,1217.74 1345.5,1217.74 1346.08,1217.74 1346.67,1217.74 1347.26,1217.74 1347.84,1217.74 1348.43,1217.74 1349.01,1217.74 1349.6,1217.74 1350.19,1217.74 1350.77,1217.74 1351.36,1217.74 1351.95,1217.74 1352.53,1217.74 1353.12,1217.74 1353.71,1217.74 1354.29,1217.74 1354.88,1217.74 1355.47,1217.74 1356.05,1217.74 1356.64,1217.74 1357.22,1217.74 1357.81,1217.74 1358.4,1217.74 1358.98,1217.74 1359.57,1217.74 1360.16,1217.74 1360.74,1217.74 1361.33,1217.74 1361.92,1217.74 1362.5,1217.74 1363.09,1217.74 1363.68,1217.74 1364.26,1217.74 1364.85,1217.74 1365.43,1217.74 1366.02,1217.74 1366.61,1217.74 1367.19,1217.74 1367.78,1217.74 1368.37,1217.74 1368.95,1217.74 1369.54,1217.74 1370.13,1217.74 1370.71,1217.74 1371.3,1217.74 1371.88,1217.74 1372.47,1217.74 1373.06,1217.74 1373.64,1217.74 1374.23,1217.74 1374.82,1217.74 1375.4,1217.74 1375.99,1217.74 1376.58,1217.74 1377.16,1217.74 1377.75,1217.74 1378.34,1217.74 1378.92,1217.74 1379.51,1217.74 1380.09,1217.74 1380.68,1217.74 1381.27,1217.74 1381.85,1217.74 1382.44,1217.74 1383.03,1217.74 1383.61,1217.74 1384.2,1217.74 1384.79,1217.74 1385.37,1217.74 1385.96,1217.74 1386.55,1217.74 1387.13,1217.74 1387.72,1217.74 1388.3,1217.74 1388.89,1217.74 1389.48,1217.74 1390.06,1217.74 1390.65,1217.74 1391.24,1217.74 1391.82,1217.74 1392.41,1217.74 1393,1217.74 1393.58,1217.74 1394.17,1217.74 1394.75,1217.74 1395.34,1217.74 1395.93,1217.74 1396.51,1217.74 1397.1,1217.74 1397.69,1217.74 1398.27,1217.74 1398.86,1217.74 1399.45,1217.74 1400.03,1217.74 1400.62,1217.74 1401.21,1217.74 1401.79,1217.74 1402.38,1217.74 1402.96,1217.74 1403.55,1217.74 1404.14,1217.74 1404.72,1217.74 1405.31,1217.74 1405.9,1217.74 1406.48,1217.74 1407.07,1217.74 1407.66,1217.74 1408.24,1217.74 1408.83,1217.74 1409.42,1217.74 1410,1217.74 1410.59,1217.74 1411.17,1217.74 1411.76,1217.74 1412.35,1217.74 1412.93,1217.74 1413.52,1217.74 1414.11,1217.74 1414.69,1217.74 1415.28,1217.74 1415.87,1217.74 1416.45,1217.74 1417.04,1217.74 1417.63,1217.74 1418.21,1217.74 1418.8,1217.74 1419.38,1217.74 1419.97,1217.74 1420.56,1217.74 1421.14,1217.74 1421.73,1217.74 1422.32,1217.74 1422.9,1217.74 1423.49,1217.74 1424.08,1217.74 1424.66,1217.74 1425.25,1217.74 1425.83,1217.74 1426.42,1217.74 1427.01,1217.74 1427.59,1217.74 1428.18,1217.74 1428.77,1217.74 1429.35,1217.74 1429.94,1217.74 1430.53,1217.74 1431.11,1217.74 1431.7,1217.74 1432.29,1217.74 1432.87,1217.74 1433.46,1217.74 1434.04,1217.74 1434.63,1217.74 1435.22,1217.74 1435.8,1217.74 1436.39,1217.74 1436.98,1217.74 1437.56,1217.74 1438.15,1217.74 1438.74,1217.74 1439.32,1217.74 1439.91,1217.74 1440.5,1217.74 1441.08,1217.74 1441.67,1217.74 1442.25,1217.74 1442.84,1217.74 1443.43,1217.74 1444.01,1217.74 1444.6,1217.74 1445.19,1217.74 1445.77,1217.74 1446.36,1217.74 1446.95,1217.74 1447.53,1217.74 1448.12,1217.74 1448.7,1217.74 1449.29,1217.74 1449.88,1217.74 1450.46,1217.74 1451.05,1217.74 1451.64,1217.74 1452.22,1217.74 1452.81,1217.74 1453.4,1217.74 1453.98,1217.74 1454.57,1217.74 1455.16,1217.74 1455.74,1217.74 1456.33,1217.74 1456.91,1217.74 1457.5,1217.74 1458.09,1217.74 1458.67,1217.74 1459.26,1217.74 1459.85,1217.74 1460.43,1217.74 1461.02,1217.74 1461.61,1217.74 1462.19,1217.74 1462.78,1217.74 1463.37,1217.74 1463.95,1217.74 1464.54,1217.74 1465.12,1217.74 1465.71,1217.74 1466.3,1217.74 1466.88,1217.74 1467.47,1217.74 1468.06,1217.74 1468.64,1217.74 1469.23,1217.74 1469.82,1217.74 1470.4,1217.74 1470.99,1217.74 1471.57,1217.74 1472.16,1217.74 1472.75,1217.74 1473.33,1217.74 1473.92,1217.74 1474.51,1217.74 1475.09,1217.74 1475.68,1217.74 1476.27,1217.74 1476.85,1217.74 1477.44,1217.74 1478.03,1217.74 1478.61,1217.74 1479.2,1217.74 1479.78,1217.74 1480.37,1217.74 1480.96,1217.74 1481.54,1217.74 1482.13,1217.74 1482.72,1217.74 1483.3,1217.74 1483.89,1217.74 1484.48,1217.74 1485.06,1217.74 1485.65,1217.74 1486.24,1217.74 1486.82,1217.74 1487.41,1217.74 1487.99,1217.74 1488.58,1217.74 1489.17,1217.74 1489.75,1217.74 1490.34,1217.74 1490.93,1217.74 1491.51,1217.74 1492.1,1217.74 1492.69,1217.74 1493.27,1217.74 1493.86,1217.74 1494.45,1217.74 1495.03,1217.74 1495.62,1217.74 1496.2,1217.74 1496.79,1217.74 1497.38,1217.74 1497.96,1217.74 1498.55,1217.74 1499.14,1217.74 1499.72,1217.74 1500.31,1217.74 1500.9,1217.74 1501.48,1217.74 1502.07,1217.74 1502.65,1217.74 1503.24,1217.74 1503.83,1217.74 1504.41,1217.74 1505,1217.74 1505.59,1217.74 1506.17,1217.74 1506.76,1217.74 1507.35,1217.74 1507.93,1217.74 1508.52,1217.74 1509.11,1217.74 1509.69,1217.74 1510.28,1217.74 1510.86,1217.74 1511.45,1217.74 1512.04,1217.74 1512.62,1217.74 1513.21,1217.74 1513.8,1217.74 1514.38,1217.74 1514.97,1217.74 1515.56,1217.74 1516.14,1217.74 1516.73,1217.74 1517.32,1217.74 1517.9,1217.74 1518.49,1217.74 1519.07,1217.74 1519.66,1217.74 1520.25,1217.74 1520.83,1217.74 1521.42,1217.74 1522.01,1217.74 1522.59,1217.74 1523.18,1217.74 1523.77,1217.74 1524.35,1217.74 1524.94,1217.74 1525.52,1217.74 1526.11,1217.74 1526.7,1217.74 1527.28,1217.74 1527.87,1217.74 1528.46,1217.74 1529.04,1217.74 1529.63,1217.74 1530.22,1217.74 1530.8,1217.74 1531.39,1217.74 1531.98,1217.74 1532.56,1217.74 1533.15,1217.74 1533.73,1217.74 1534.32,1217.74 1534.91,1217.74 1535.49,1217.74 1536.08,1217.74 1536.67,1217.74 1537.25,1217.74 1537.84,1217.74 1538.43,1217.74 1539.01,1217.74 1539.6,1217.74 1540.19,1217.74 1540.77,1217.74 1541.36,1217.74 1541.94,1217.74 1542.53,1217.74 1543.12,1217.74 1543.7,1217.74 1544.29,1217.74 1544.88,1217.74 1545.46,1217.74 1546.05,1217.74 1546.64,1217.74 1547.22,1217.74 1547.81,1217.74 1548.4,1217.74 1548.98,1217.74 1549.57,1217.74 1550.15,1217.74 1550.74,1217.74 1551.33,1217.74 1551.91,1217.74 1552.5,1217.74 1553.09,1217.74 1553.67,1217.74 1554.26,1217.74 1554.85,1217.74 1555.43,1217.74 1556.02,1217.74 1556.6,1217.74 1557.19,1217.74 1557.78,1217.74 1558.36,1217.74 1558.95,1217.74 1559.54,1217.74 1560.12,1217.74 1560.71,1217.74 1561.3,1217.74 1561.88,1217.74 1562.47,1217.74 1563.06,1217.74 1563.64,1217.74 1564.23,1217.74 1564.81,1217.74 1565.4,1217.74 1565.99,1217.74 1566.57,1217.74 1567.16,1217.74 1567.75,1217.74 1568.33,1217.74 1568.92,1217.74 1569.51,1217.74 1570.09,1217.74 1570.68,1217.74 1571.27,1217.74 1571.85,1217.74 1572.44,1217.74 1573.02,1217.74 1573.61,1217.74 1574.2,1217.74 1574.78,1217.74 1575.37,1217.74 1575.96,1217.74 1576.54,1217.74 1577.13,1217.74 1577.72,1217.74 1578.3,1217.74 1578.89,1217.74 1579.47,1217.74 1580.06,1217.74 1580.65,1217.74 1581.23,1217.74 1581.82,1217.74 1582.41,1217.74 1582.99,1217.74 1583.58,1217.74 1584.17,1217.74 1584.75,1217.74 1585.34,1217.74 1585.93,1217.74 1586.51,1217.74 1587.1,1217.74 1587.68,1217.74 1588.27,1217.74 1588.86,1217.74 1589.44,1217.74 1590.03,1217.74 1590.62,1217.74 1591.2,1217.74 1591.79,1217.74 1592.38,1217.74 1592.96,1217.74 1593.55,1217.74 1594.14,1217.74 1594.72,1217.74 1595.31,1217.74 1595.89,1217.74 1596.48,1217.74 1597.07,1217.74 1597.65,1217.74 1598.24,1217.74 1598.83,1217.74 1599.41,1217.74 1600,1217.74 1600.59,1217.74 1601.17,1217.74 1601.76,1217.74 1602.34,1217.74 1602.93,1217.74 1603.52,1217.74 1604.1,1217.74 1604.69,1217.74 1605.28,1217.74 1605.86,1217.74 1606.45,1217.74 1607.04,1217.74 1607.62,1217.74 1608.21,1217.74 1608.8,1217.74 1609.38,1217.74 1609.97,1217.74 1610.55,1217.74 1611.14,1217.74 1611.73,1217.74 1612.31,1217.74 1612.9,1217.74 1613.49,1217.74 1614.07,1217.74 1614.66,1217.74 1615.25,1217.74 1615.83,1217.74 1616.42,1217.74 1617.01,1217.74 1617.59,1217.74 1618.18,1217.74 1618.76,1217.74 1619.35,1217.74 1619.94,1217.74 1620.52,1217.74 1621.11,1217.74 1621.7,1217.74 1622.28,1217.74 1622.87,1217.74 1623.46,1217.74 1624.04,1217.74 1624.63,1217.74 1625.22,1217.74 1625.8,1217.74 1626.39,1217.74 1626.97,1217.74 1627.56,1217.74 1628.15,1217.74 1628.73,1217.74 1629.32,1217.74 1629.91,1217.74 1630.49,1217.74 1631.08,1217.74 1631.67,1217.74 1632.25,1217.74 1632.84,1217.74 1633.42,1217.74 1634.01,1217.74 1634.6,1217.74 1635.18,1217.74 1635.77,1217.74 1636.36,1217.74 1636.94,1217.74 1637.53,1217.74 1638.12,1217.74 1638.7,1217.74 1639.29,1217.74 1639.88,1217.74 1640.46,1217.74 1641.05,1217.74 1641.63,1217.74 1642.22,1217.74 1642.81,1217.74 1643.39,1217.74 1643.98,1217.74 1644.57,1217.74 1645.15,1217.74 1645.74,1217.74 1646.33,1217.74 1646.91,1217.74 1647.5,1217.74 1648.09,1217.74 1648.67,1217.74 1649.26,1217.74 1649.84,1217.74 1650.43,1217.74 1651.02,1217.74 1651.6,1217.74 1652.19,1217.74 1652.78,1217.74 1653.36,1217.74 1653.95,1217.74 1654.54,1217.74 1655.12,1217.74 1655.71,1217.74 1656.29,1217.74 1656.88,1217.74 1657.47,1217.74 1658.05,1217.74 1658.64,1217.74 1659.23,1217.74 1659.81,1217.74 1660.4,1217.74 1660.99,1217.74 1661.57,1217.74 1662.16,1217.74 1662.75,1217.74 1663.33,1217.74 1663.92,1217.74 1664.5,1217.74 1665.09,1217.74 1665.68,1217.74 1666.26,1217.74 1666.85,1217.74 1667.44,1217.74 1668.02,1217.74 1668.61,1217.74 1669.2,1217.74 1669.78,1217.74 1670.37,1217.74 1670.96,1217.74 1671.54,1217.74 1672.13,1217.74 1672.71,1217.74 1673.3,1217.74 1673.89,1217.74 1674.47,1217.74 1675.06,1217.74 1675.65,1217.74 1676.23,1217.74 1676.82,1217.74 1677.41,1217.74 1677.99,1217.74 1678.58,1217.74 1679.17,1217.74 1679.75,1217.74 1680.34,1217.74 1680.92,1217.74 1681.51,1217.74 1682.1,1217.74 1682.68,1217.74 1683.27,1217.74 1683.86,1217.74 1684.44,1217.74 1685.03,1217.74 1685.62,1217.74 1686.2,1217.74 1686.79,1217.74 1687.37,1217.74 1687.96,1217.74 1688.55,1217.74 1689.13,1217.74 1689.72,1217.74 1690.31,1217.74 1690.89,1217.74 1691.48,1217.74 1692.07,1217.74 1692.65,1217.74 1693.24,1217.74 1693.83,1217.74 1694.41,1217.74 1695,1217.74 1695.58,1217.74 1696.17,1217.74 1696.76,1217.74 1697.34,1217.74 1697.93,1217.74 1698.52,1217.74 1699.1,1217.74 1699.69,1217.74 1700.28,1217.74 1700.86,1217.74 1701.45,1217.74 1702.04,1217.74 1702.62,1217.74 1703.21,1217.74 1703.79,1217.74 1704.38,1217.74 1704.97,1217.74 1705.55,1217.74 1706.14,1217.74 1706.73,1217.74 1707.31,1217.74 1707.9,1217.74 1708.49,1217.74 1709.07,1217.74 1709.66,1217.74 1710.24,1217.74 1710.83,1217.74 1711.42,1217.74 1712,1217.74 1712.59,1217.74 1713.18,1217.74 1713.76,1217.74 1714.35,1217.74 1714.94,1217.74 1715.52,1217.74 1716.11,1217.74 1716.7,1217.74 1717.28,1217.74 1717.87,1217.74 1718.45,1217.74 1719.04,1217.74 1719.63,1217.74 1720.21,1217.74 1720.8,1217.74 1721.39,1217.74 1721.97,1217.74 1722.56,1217.74 1723.15,1217.74 1723.73,1217.74 1724.32,1217.74 1724.91,1217.74 1725.49,1217.74 1726.08,1217.74 1726.66,1217.74 1727.25,1217.74 1727.84,1217.74 1728.42,1217.74 1729.01,1217.74 1729.6,1217.74 1730.18,1217.74 1730.77,1217.74 1731.36,1217.74 1731.94,1217.74 1732.53,1217.74 1733.11,1217.74 1733.7,1217.74 1734.29,1217.74 1734.87,1217.74 1735.46,1217.74 1736.05,1217.74 1736.63,1217.74 1737.22,1217.74 1737.81,1217.74 1738.39,1217.74 1738.98,1217.74 1739.57,1217.74 1740.15,1217.74 1740.74,1217.74 1741.32,1217.74 1741.91,1217.74 1742.5,1217.74 1743.08,1217.74 1743.67,1217.74 1744.26,1217.74 1744.84,1217.74 1745.43,1217.74 1746.02,1217.74 1746.6,1217.74 1747.19,1217.74 1747.78,1217.74 1748.36,1217.74 1748.95,1217.74 1749.53,1217.74 1750.12,1217.74 1750.71,1217.74 1751.29,1217.74 1751.88,1217.74 1752.47,1217.74 1753.05,1217.74 1753.64,1217.74 1754.23,1217.74 1754.81,1217.74 1755.4,1217.74 1755.99,1217.74 1756.57,1217.74 1757.16,1217.74 1757.74,1217.74 1758.33,1217.74 1758.92,1217.74 1759.5,1217.74 1760.09,1217.74 1760.68,1217.74 1761.26,1217.74 1761.85,1217.74 1762.44,1217.74 1763.02,1217.74 1763.61,1217.74 1764.19,1217.74 1764.78,1217.74 1765.37,1217.74 1765.95,1217.74 1766.54,1217.74 1767.13,1217.74 1767.71,1217.74 1768.3,1217.74 1768.89,1217.74 1769.47,1217.74 1770.06,1217.74 1770.65,1217.74 1771.23,1217.74 1771.82,1217.74 1772.4,1217.74 1772.99,1217.74 1773.58,1217.74 1774.16,1217.74 1774.75,1217.74 1775.34,1217.74 1775.92,1217.74 1776.51,1217.74 1777.1,1217.74 1777.68,1217.74 1778.27,1217.74 1778.86,1217.74 1779.44,1217.74 1780.03,1217.74 1780.61,1217.74 1781.2,1217.74 1781.79,1217.74 1782.37,1217.74 1782.96,1217.74 1783.55,1217.74 1784.13,1217.74 1784.72,1217.74 1785.31,1217.74 1785.89,1217.74 1786.48,1217.74 1787.06,1217.74 1787.65,1217.74 1788.24,1217.74 1788.82,1217.74 1789.41,1217.74 1790,1217.74 1790.58,1217.74 1791.17,1217.74 1791.76,1217.74 1792.34,1217.74 1792.93,1217.74 1793.52,1217.74 1794.1,1217.74 1794.69,1217.74 1795.27,1217.74 1795.86,1217.74 1796.45,1217.74 1797.03,1217.74 1797.62,1217.74 1798.21,1217.74 1798.79,1217.74 1799.38,1217.74 1799.97,1217.74 1800.55,1217.74 1801.14,1217.74 1801.73,1217.74 1802.31,1217.74 1802.9,1217.74 1803.48,1217.74 1804.07,1217.74 1804.66,1217.74 1805.24,1217.74 1805.83,1217.74 1806.42,1217.74 1807,1217.74 1807.59,1217.74 1808.18,1217.74 1808.76,1217.74 1809.35,1217.74 1809.94,1217.74 1810.52,1217.74 1811.11,1217.74 1811.69,1217.74 1812.28,1217.74 1812.87,1217.74 1813.45,1217.74 1814.04,1217.74 1814.63,1217.74 1815.21,1217.74 1815.8,1217.74 1816.39,1217.74 1816.97,1217.74 1817.56,1217.74 1818.14,1217.74 1818.73,1217.74 1819.32,1217.74 1819.9,1217.74 1820.49,1217.74 1821.08,1217.74 1821.66,1217.74 1822.25,1217.74 1822.84,1217.74 1823.42,1217.74 1824.01,1217.74 1824.6,1217.74 1825.18,1217.74 1825.77,1217.74 1826.35,1217.74 1826.94,1217.74 1827.53,1217.74 1828.11,1217.74 1828.7,1217.74 1829.29,1217.74 1829.87,1217.74 1830.46,1217.74 1831.05,1217.74 1831.63,1217.74 1832.22,1217.74 1832.81,1217.74 1833.39,1217.74 1833.98,1217.74 1834.56,1217.74 1835.15,1217.74 1835.74,1217.74 1836.32,1217.74 1836.91,1217.74 1837.5,1217.74 1838.08,1217.74 1838.67,1217.74 1839.26,1217.74 1839.84,1217.74 1840.43,1217.74 1841.01,1217.74 1841.6,1217.74 1842.19,1217.74 1842.77,1217.74 1843.36,1217.74 1843.95,1217.74 1844.53,1217.74 1845.12,1217.74 1845.71,1217.74 1846.29,1217.74 1846.88,1217.74 1847.47,1217.74 1848.05,1217.74 1848.64,1217.74 1849.22,1217.74 1849.81,1217.74 1850.4,1217.74 1850.98,1217.74 1851.57,1217.74 1852.16,1217.74 1852.74,1217.74 1853.33,1217.74 1853.92,1217.74 1854.5,1217.74 1855.09,1217.74 1855.68,1217.74 1856.26,1217.74 1856.85,1217.74 1857.43,1217.74 1858.02,1217.74 1858.61,1217.74 1859.19,1217.74 1859.78,1217.74 1860.37,1217.74 1860.95,1217.74 1861.54,1217.74 1862.13,1217.74 1862.71,1217.74 1863.3,1217.74 1863.88,1217.74 1864.47,1217.74 1865.06,1217.74 1865.64,1217.74 1866.23,1217.74 1866.82,1217.74 1867.4,1217.74 1867.99,1217.74 1868.58,1217.74 1869.16,1217.74 1869.75,1217.74 1870.34,1217.74 1870.92,1217.74 1871.51,1217.74 1872.09,1217.74 1872.68,1217.74 1873.27,1217.74 1873.85,1217.74 1874.44,1217.74 1875.03,1217.74 1875.61,1217.74 1876.2,1217.74 1876.79,1217.74 1877.37,1217.74 1877.96,1217.74 1878.55,1217.74 1879.13,1217.74 1879.72,1217.74 1880.3,1217.74 1880.89,1217.74 1881.48,1217.74 1882.06,1217.74 1882.65,1217.74 1883.24,1217.74 1883.82,1217.74 1884.41,1217.74 1885,1217.74 1885.58,1217.74 1886.17,1217.74 1886.76,1217.74 1887.34,1217.74 1887.93,1217.74 1888.51,1217.74 1889.1,1217.74 1889.69,1217.74 1890.27,1217.74 1890.86,1217.74 1891.45,1217.74 1892.03,1217.74 1892.62,1217.74 1893.21,1217.74 1893.79,1217.74 1894.38,1217.74 1894.96,1217.74 1895.55,1217.74 1896.14,1217.74 1896.72,1217.74 1897.31,1217.74 1897.9,1217.74 1898.48,1217.74 1899.07,1217.74 1899.66,1217.74 1900.24,1217.74 1900.83,1217.74 1901.42,1217.74 1902,1217.74 1902.59,1217.74 1903.17,1217.74 1903.76,1217.74 1904.35,1217.74 1904.93,1217.74 1905.52,1217.74 1906.11,1217.74 1906.69,1217.74 1907.28,1217.74 1907.87,1217.74 1908.45,1217.74 1909.04,1217.74 1909.63,1217.74 1910.21,1217.74 1910.8,1217.74 1911.38,1217.74 1911.97,1217.74 1912.56,1217.74 1913.14,1217.74 1913.73,1217.74 1914.32,1217.74 1914.9,1217.74 1915.49,1217.74 1916.08,1217.74 1916.66,1217.74 1917.25,1217.74 1917.83,1217.74 1918.42,1217.74 1919.01,1217.74 1919.59,1217.74 1920.18,1217.74 1920.77,1217.74 1921.35,1217.74 1921.94,1217.74 1922.53,1217.74 1923.11,1217.74 1923.7,1217.74 1924.29,1217.74 1924.87,1217.74 1925.46,1217.74 1926.04,1217.74 1926.63,1217.74 1927.22,1217.74 1927.8,1217.74 1928.39,1217.74 1928.98,1217.74 1929.56,1217.74 1930.15,1217.74 1930.74,1217.74 1931.32,1217.74 1931.91,1217.74 1932.5,1217.74 1933.08,1217.74 1933.67,1217.74 1934.25,1217.74 1934.84,1217.74 1935.43,1217.74 1936.01,1217.74 1936.6,1217.74 1937.19,1217.74 1937.77,1217.74 1938.36,1217.74 1938.95,1217.74 1939.53,1217.74 1940.12,1217.74 1940.71,1217.74 1941.29,1217.74 1941.88,1217.74 1942.46,1217.74 1943.05,1217.74 1943.64,1217.74 1944.22,1217.74 1944.81,1217.74 1945.4,1217.74 1945.98,1217.74 1946.57,1217.74 1947.16,1217.74 1947.74,1217.74 1948.33,1217.74 1948.91,1217.74 1949.5,1217.74 1950.09,1217.74 1950.67,1217.74 1951.26,1217.74 1951.85,1217.74 1952.43,1217.74 1953.02,1217.74 1953.61,1217.74 1954.19,1217.74 1954.78,1217.74 1955.37,1217.74 1955.95,1217.74 1956.54,1217.74 1957.12,1217.74 1957.71,1217.74 1958.3,1217.74 1958.88,1217.74 1959.47,1217.74 1960.06,1217.74 1960.64,1217.74 1961.23,1217.74 1961.82,1217.74 1962.4,1217.74 1962.99,1217.74 1963.58,1217.74 1964.16,1217.74 1964.75,1217.74 1965.33,1217.74 1965.92,1217.74 1966.51,1217.74 1967.09,1217.74 1967.68,1217.74 1968.27,1217.74 1968.85,1217.74 1969.44,1217.74 1970.03,1217.74 1970.61,1217.74 1971.2,1217.74 1971.78,1217.74 1972.37,1217.74 1972.96,1217.74 1973.54,1217.74 1974.13,1217.74 1974.72,1217.74 1975.3,1217.74 1975.89,1217.74 1976.48,1217.74 1977.06,1217.74 1977.65,1217.74 1978.24,1217.74 1978.82,1217.74 1979.41,1217.74 1979.99,1217.74 1980.58,1217.74 1981.17,1217.74 1981.75,1217.74 1982.34,1217.74 1982.93,1217.74 1983.51,1217.74 1984.1,1217.74 1984.69,1217.74 1985.27,1217.74 1985.86,1217.74 1986.45,1217.74 1987.03,1217.74 1987.62,1217.74 1988.2,1217.74 1988.79,1217.74 1989.38,1217.74 1989.96,1217.74 1990.55,1217.74 1991.14,1217.74 1991.72,1217.74 1992.31,1217.74 1992.9,1217.74 1993.48,1217.74 1994.07,1217.74 1994.65,1217.74 1995.24,1217.74 1995.83,1217.74 1996.41,1217.74 1997,1217.74 1997.59,1217.74 1998.17,1217.74 1998.76,1217.74 1999.35,1217.74 1999.93,1217.74 2000.52,1217.74 2001.11,1217.74 2001.69,1217.74 2002.28,1217.74 2002.86,1217.74 2003.45,1217.74 2004.04,1217.74 2004.62,1217.74 2005.21,1217.74 2005.8,1217.74 2006.38,1217.74 2006.97,1217.74 2007.56,1217.74 2008.14,1217.74 2008.73,1217.74 2009.32,1217.74 2009.9,1217.74 2010.49,1217.74 2011.07,1217.74 2011.66,1217.74 2012.25,1217.74 2012.83,1217.74 2013.42,1217.74 2014.01,1217.74 2014.59,1217.74 2015.18,1217.74 2015.77,1217.74 2016.35,1217.74 2016.94,1217.74 2017.53,1217.74 2018.11,1217.74 2018.7,1217.74 2019.28,1217.74 2019.87,1217.74 2020.46,1217.74 2021.04,1217.74 2021.63,1217.74 2022.22,1217.74 2022.8,1217.74 2023.39,1217.74 2023.98,1217.74 2024.56,1217.74 2025.15,1217.74 2025.73,1217.74 2026.32,1217.74 2026.91,1217.74 2027.49,1217.74 2028.08,1217.74 2028.67,1217.74 2029.25,1217.74 2029.84,1217.74 2030.43,1217.74 2031.01,1217.74 2031.6,1217.74 2032.19,1217.74 2032.77,1217.74 2033.36,1217.74 2033.94,1217.74 2034.53,1217.74 2035.12,1217.74 2035.7,1217.74 2036.29,1217.74 2036.88,1217.74 2037.46,1217.74 2038.05,1217.74 2038.64,1217.74 2039.22,1217.74 2039.81,1217.74 2040.4,1217.74 2040.98,1217.74 2041.57,1217.74 2042.15,1217.74 2042.74,1217.74 2043.33,1217.74 2043.91,1217.74 2044.5,1217.74 2045.09,1217.74 2045.67,1217.74 2046.26,1217.74 2046.85,1217.74 2047.43,1217.74 2048.02,1217.74 2048.6,1217.74 2049.19,1217.74 2049.78,1217.74 2050.36,1217.74 2050.95,1217.74 2051.54,1217.74 2052.12,1217.74 2052.71,1217.74 2053.3,1217.74 2053.88,1217.74 2054.47,1217.74 2055.06,1217.74 2055.64,1217.74 2056.23,1217.74 2056.81,1217.74 2057.4,1217.74 2057.99,1217.74 2058.57,1217.74 2059.16,1217.74 2059.75,1217.74 2060.33,1217.74 2060.92,1217.74 2061.51,1217.74 2062.09,1217.74 2062.68,1217.74 2063.27,1217.74 2063.85,1217.74 2064.44,1217.74 2065.02,1217.74 2065.61,1217.74 2066.2,1217.74 2066.78,1217.74 2067.37,1217.74 2067.96,1217.74 2068.54,1217.74 2069.13,1217.74 2069.72,1217.74 2070.3,1217.74 2070.89,1217.74 2071.48,1217.74 2072.06,1217.74 2072.65,1217.74 2073.23,1217.74 2073.82,1217.74 2074.41,1217.74 2074.99,1217.74 2075.58,1217.74 2076.17,1217.74 2076.75,1217.74 2077.34,1217.74 2077.93,1217.74 2078.51,1217.74 2079.1,1217.74 2079.68,1217.74 2080.27,1217.74 2080.86,1217.74 2081.44,1217.74 2082.03,1217.74 2082.62,1217.74 2083.2,1217.74 2083.79,1217.74 2084.38,1217.74 2084.96,1217.74 2085.55,1217.74 2086.14,1217.74 2086.72,1217.74 2087.31,1217.74 2087.89,1217.74 2088.48,1217.74 2089.07,1217.74 2089.65,1217.74 2090.24,1217.74 2090.83,1217.74 2091.41,1217.74 2092,1217.74 2092.59,1217.74 2093.17,1217.74 2093.76,1217.74 2094.35,1217.74 2094.93,1217.74 2095.52,1217.74 2096.1,1217.74 2096.69,1217.74 2097.28,1217.74 2097.86,1217.74 2098.45,1217.74 2099.04,1217.74 2099.62,1217.74 2100.21,1217.74 2100.8,1217.74 2101.38,1217.74 2101.97,1217.74 2102.55,1217.74 2103.14,1217.74 2103.73,1217.74 2104.31,1217.74 2104.9,1217.74 2105.49,1217.74 2106.07,1217.74 2106.66,1217.74 2107.25,1217.74 2107.83,1217.74 2108.42,1217.74 2109.01,1217.74 2109.59,1217.74 2110.18,1217.74 2110.76,1217.74 2111.35,1217.74 2111.94,1217.74 2112.52,1217.74 2113.11,1217.74 2113.7,1217.74 2114.28,1217.74 2114.87,1217.74 2115.46,1217.74 2116.04,1217.74 2116.63,1217.74 2117.22,1217.74 2117.8,1217.74 2118.39,1217.74 2118.97,1217.74 2119.56,1217.74 2120.15,1217.74 2120.73,1217.74 2121.32,1217.74 2121.91,1217.74 2122.49,1217.74 2123.08,1217.74 2123.67,1217.74 2124.25,1217.74 2124.84,1217.74 2125.42,1217.74 2126.01,1217.74 2126.6,1217.74 2127.18,1217.74 2127.77,1217.74 2128.36,1217.74 2128.94,1217.74 2129.53,1217.74 2130.12,1217.74 2130.7,1217.74 2131.29,1217.74 2131.88,1217.74 2132.46,1217.74 2133.05,1217.74 2133.63,1217.74 2134.22,1217.74 2134.81,1217.74 2135.39,1217.74 2135.98,1217.74 2136.57,1217.74 2137.15,1217.74 2137.74,1217.74 2138.33,1217.74 2138.91,1217.74 2139.5,1217.74 2140.09,1217.74 2140.67,1217.74 2141.26,1217.74 2141.84,1217.74 2142.43,1217.74 2143.02,1217.74 2143.6,1217.74 2144.19,1217.74 2144.78,1217.74 2145.36,1217.74 2145.95,1217.74 2146.54,1217.74 2147.12,1217.74 2147.71,1217.74 2148.3,1217.74 2148.88,1217.74 2149.47,1217.74 2150.05,1217.74 2150.64,1217.74 2151.23,1217.74 2151.81,1217.74 2152.4,1217.74 2152.99,1217.74 2153.57,1217.74 2154.16,1217.74 2154.75,1217.74 2155.33,1217.74 2155.92,1217.74 2156.5,1217.74 2157.09,1217.74 2157.68,1217.74 2158.26,1217.74 \"/>\n<path clip-path=\"url(#clip442)\" d=\"M986.025 1217.6 L986.612 1217.6 L987.198 1217.6 L987.785 1217.6 L988.371 1217.6 L988.957 1217.6 L989.544 1217.6 L990.13 1217.6 L990.717 1217.6 L991.303 1217.6 L991.889 1217.6 L992.476 1217.6 L993.062 1217.6 L993.649 1217.6 L994.235 1217.6 L994.822 1217.6 L995.408 1217.6 L995.994 1217.6 L996.581 1217.6 L997.167 1217.6 L997.754 1217.6 L998.34 1217.6 L998.926 1217.6 L999.513 1217.6 L1000.1 1217.6 L1000.69 1217.6 L1001.27 1217.6 L1001.86 1217.6 L1002.44 1217.6 L1003.03 1217.6 L1003.62 1217.6 L1004.2 1217.6 L1004.79 1217.6 L1005.38 1217.6 L1005.96 1217.6 L1006.55 1217.6 L1007.14 1217.6 L1007.72 1217.6 L1008.31 1217.6 L1008.9 1217.6 L1009.48 1217.6 L1010.07 1217.6 L1010.65 1217.6 L1011.24 1217.6 L1011.83 1217.6 L1012.41 1217.6 L1013 1217.6 L1013.59 1217.6 L1014.17 1217.6 L1014.76 1217.6 L1015.35 1217.6 L1015.93 1217.6 L1016.52 1217.6 L1017.11 1217.6 L1017.69 1217.6 L1018.28 1217.6 L1018.86 1217.6 L1019.45 1217.6 L1020.04 1217.6 L1020.62 1217.6 L1021.21 1217.6 L1021.8 1217.6 L1022.38 1217.6 L1022.97 1217.6 L1023.56 1217.6 L1024.14 1217.6 L1024.73 1217.6 L1025.32 1217.6 L1025.9 1217.6 L1026.49 1217.6 L1027.07 1217.6 L1027.66 1217.6 L1028.25 1217.6 L1028.83 1217.6 L1029.42 1217.6 L1030.01 1217.6 L1030.59 1217.6 L1031.18 1217.6 L1031.77 1217.6 L1032.35 1217.6 L1032.94 1217.6 L1033.52 1217.6 L1034.11 1217.6 L1034.7 1217.6 L1035.28 1217.6 L1035.87 1217.6 L1036.46 1217.6 L1037.04 1217.6 L1037.63 1217.6 L1038.22 1217.6 L1038.8 1217.6 L1039.39 1217.6 L1039.98 1217.6 L1040.56 1217.6 L1041.15 1217.6 L1041.73 1217.6 L1042.32 1217.6 L1042.91 1217.6 L1043.49 1217.6 L1044.08 1217.6 L1044.67 1217.6 L1045.25 1217.6 L1045.84 1217.6 L1046.43 1217.6 L1047.01 1217.6 L1047.6 1217.6 L1048.19 1217.6 L1048.77 1217.6 L1049.36 1217.6 L1049.94 1217.6 L1050.53 1217.6 L1051.12 1217.6 L1051.7 1217.6 L1052.29 1217.6 L1052.88 1217.6 L1053.46 1217.6 L1054.05 1217.6 L1054.64 1217.6 L1055.22 1217.6 L1055.81 1217.6 L1056.39 1217.6 L1056.98 1217.6 L1057.57 1217.6 L1058.15 1217.6 L1058.74 1217.6 L1059.33 1217.6 L1059.91 1217.6 L1060.5 1217.6 L1061.09 1217.6 L1061.67 1217.6 L1062.26 1217.6 L1062.85 1217.6 L1063.43 1217.6 L1064.02 1217.6 L1064.6 1217.6 L1065.19 1217.6 L1065.78 1217.6 L1066.36 1217.6 L1066.95 1217.6 L1067.54 1217.6 L1068.12 1217.6 L1068.71 1217.6 L1069.3 1217.6 L1069.88 1217.6 L1070.47 1217.6 L1071.06 1217.6 L1071.64 1217.6 L1072.23 1217.6 L1072.81 1217.6 L1073.4 1217.6 L1073.99 1217.6 L1074.57 1217.6 L1075.16 1217.6 L1075.75 1217.6 L1076.33 1217.6 L1076.92 1217.6 L1077.51 1217.6 L1078.09 1217.6 L1078.68 1217.6 L1079.26 1217.6 L1079.85 1217.6 L1080.44 1217.6 L1081.02 1217.6 L1081.61 1217.6 L1082.2 1217.6 L1082.78 1217.6 L1083.37 1217.6 L1083.96 1217.6 L1084.54 1217.6 L1085.13 1217.6 L1085.72 1217.6 L1086.3 1217.6 L1086.89 1217.6 L1087.47 1217.6 L1088.06 1217.6 L1088.65 1217.6 L1089.23 1217.6 L1089.82 1217.6 L1090.41 1217.6 L1090.99 1217.6 L1091.58 1217.6 L1092.17 1217.6 L1092.75 1217.6 L1093.34 1217.6 L1093.93 1217.6 L1094.51 1217.6 L1095.1 1217.6 L1095.68 1217.6 L1096.27 1217.6 L1096.86 1217.6 L1097.44 1217.6 L1098.03 1217.6 L1098.62 1217.6 L1099.2 1217.6 L1099.79 1217.6 L1100.38 1217.6 L1100.96 1217.6 L1101.55 1217.6 L1102.14 1217.6 L1102.72 1217.6 L1103.31 1217.6 L1103.89 1217.6 L1104.48 1217.6 L1105.07 1217.6 L1105.65 1217.6 L1106.24 1217.6 L1106.83 1217.6 L1107.41 1217.6 L1108 1217.6 L1108.59 1217.6 L1109.17 1217.6 L1109.76 1217.6 L1110.34 1217.6 L1110.93 1217.6 L1111.52 1217.6 L1112.1 1217.6 L1112.69 1217.6 L1113.28 1217.6 L1113.86 1217.6 L1114.45 1217.6 L1115.04 1217.6 L1115.62 1217.6 L1116.21 1217.6 L1116.8 1217.6 L1117.38 1217.6 L1117.97 1217.6 L1118.55 1217.6 L1119.14 1217.6 L1119.73 1217.6 L1120.31 1217.6 L1120.9 1217.6 L1121.49 1217.6 L1122.07 1217.6 L1122.66 1217.6 L1123.25 1217.6 L1123.83 1217.6 L1124.42 1217.6 L1125.01 1217.6 L1125.59 1217.6 L1126.18 1217.6 L1126.76 1217.6 L1127.35 1217.6 L1127.94 1217.6 L1128.52 1217.6 L1129.11 1217.6 L1129.7 1217.6 L1130.28 1217.6 L1130.87 1217.6 L1131.46 1217.6 L1132.04 1217.6 L1132.63 1217.6 L1133.21 1217.6 L1133.8 1217.6 L1134.39 1217.6 L1134.97 1217.6 L1135.56 1217.6 L1136.15 1217.6 L1136.73 1217.6 L1137.32 1217.6 L1137.91 1217.6 L1138.49 1217.6 L1139.08 1217.6 L1139.67 1217.6 L1140.25 1217.6 L1140.84 1217.6 L1141.42 1217.6 L1142.01 1217.6 L1142.6 1217.6 L1143.18 1217.6 L1143.77 1217.6 L1144.36 1217.6 L1144.94 1217.6 L1145.53 1217.6 L1146.12 1217.6 L1146.7 1217.6 L1147.29 1217.6 L1147.88 1217.6 L1148.46 1217.6 L1149.05 1217.6 L1149.63 1217.6 L1150.22 1217.6 L1150.81 1217.6 L1151.39 1217.6 L1151.98 1217.6 L1152.57 1217.6 L1153.15 1217.6 L1153.74 1217.6 L1154.33 1217.6 L1154.91 1217.6 L1155.5 1217.6 L1156.09 1217.6 L1156.67 1217.6 L1157.26 1217.6 L1157.84 1217.6 L1158.43 1217.6 L1159.02 1217.6 L1159.6 1217.6 L1160.19 1217.6 L1160.78 1217.6 L1161.36 1217.6 L1161.95 1217.6 L1162.54 1217.6 L1163.12 1217.6 L1163.71 1217.6 L1164.29 1217.6 L1164.88 1217.6 L1165.47 1217.6 L1166.05 1217.6 L1166.64 1217.6 L1167.23 1217.6 L1167.81 1217.6 L1168.4 1217.6 L1168.99 1217.6 L1169.57 1217.6 L1170.16 1217.6 L1170.75 1217.6 L1171.33 1217.6 L1171.92 1217.6 L1172.5 1217.6 L1173.09 1217.6 L1173.68 1217.6 L1174.26 1217.6 L1174.85 1217.6 L1175.44 1217.6 L1176.02 1217.6 L1176.61 1217.6 L1177.2 1217.6 L1177.78 1217.6 L1178.37 1217.6 L1178.96 1217.6 L1179.54 1217.6 L1180.13 1217.6 L1180.71 1217.6 L1181.3 1217.6 L1181.89 1217.6 L1182.47 1217.6 L1183.06 1217.6 L1183.65 1217.6 L1184.23 1217.6 L1184.82 1217.6 L1185.41 1217.6 L1185.99 1217.6 L1186.58 1217.6 L1187.16 1217.6 L1187.75 1217.6 L1188.34 1217.6 L1188.92 1217.6 L1189.51 1217.6 L1190.1 1217.6 L1190.68 1217.6 L1191.27 1217.6 L1191.86 1217.6 L1192.44 1217.6 L1193.03 1217.6 L1193.62 1217.6 L1194.2 1217.6 L1194.79 1217.6 L1195.37 1217.6 L1195.96 1217.6 L1196.55 1217.6 L1197.13 1217.6 L1197.72 1217.6 L1198.31 1217.6 L1198.89 1217.6 L1199.48 1217.6 L1200.07 1217.6 L1200.65 1217.6 L1201.24 1217.6 L1201.83 1217.6 L1202.41 1217.6 L1203 1217.6 L1203.58 1217.6 L1204.17 1217.6 L1204.76 1217.6 L1205.34 1217.6 L1205.93 1217.6 L1206.52 1217.6 L1207.1 1217.6 L1207.69 1217.6 L1208.28 1217.6 L1208.86 1217.6 L1209.45 1217.6 L1210.03 1217.6 L1210.62 1217.6 L1211.21 1217.6 L1211.79 1217.6 L1212.38 1217.6 L1212.97 1217.6 L1213.55 1217.6 L1214.14 1217.6 L1214.73 1217.6 L1215.31 1217.6 L1215.9 1217.6 L1216.49 1217.6 L1217.07 1217.6 L1217.66 1217.6 L1218.24 1217.6 L1218.83 1217.6 L1219.42 1217.6 L1220 1217.6 L1220.59 1217.6 L1221.18 1217.6 L1221.76 1217.6 L1222.35 1217.6 L1222.94 1217.6 L1223.52 1217.6 L1224.11 1217.6 L1224.7 1217.6 L1225.28 1217.6 L1225.87 1217.6 L1226.45 1217.6 L1227.04 1217.6 L1227.63 1217.6 L1228.21 1217.6 L1228.8 1217.6 L1229.39 1217.6 L1229.97 1217.6 L1230.56 1217.6 L1231.15 1217.6 L1231.73 1217.6 L1232.32 1217.6 L1232.91 1217.6 L1233.49 1217.6 L1234.08 1217.6 L1234.66 1217.6 L1235.25 1217.6 L1235.84 1217.6 L1236.42 1217.6 L1237.01 1217.6 L1237.6 1217.6 L1238.18 1217.6 L1238.77 1217.6 L1239.36 1217.6 L1239.94 1217.6 L1240.53 1217.6 L1241.11 1217.6 L1241.7 1217.6 L1242.29 1217.6 L1242.87 1217.6 L1243.46 1217.6 L1244.05 1217.6 L1244.63 1217.6 L1245.22 1217.6 L1245.81 1217.6 L1246.39 1217.6 L1246.98 1217.6 L1247.57 1217.6 L1248.15 1217.6 L1248.74 1217.6 L1249.32 1217.6 L1249.91 1217.6 L1250.5 1217.6 L1251.08 1217.6 L1251.67 1217.6 L1252.26 1217.6 L1252.84 1217.6 L1253.43 1217.6 L1254.02 1217.6 L1254.6 1217.6 L1255.19 1217.6 L1255.78 1217.6 L1256.36 1217.6 L1256.95 1217.6 L1257.53 1217.6 L1258.12 1217.6 L1258.71 1217.6 L1259.29 1217.6 L1259.88 1217.6 L1260.47 1217.6 L1261.05 1217.6 L1261.64 1217.6 L1262.23 1217.6 L1262.81 1217.6 L1263.4 1217.6 L1263.98 1217.6 L1264.57 1217.6 L1265.16 1217.6 L1265.74 1217.6 L1266.33 1217.6 L1266.92 1217.6 L1267.5 1217.6 L1268.09 1217.6 L1268.68 1217.6 L1269.26 1217.6 L1269.85 1217.6 L1270.44 1217.6 L1271.02 1217.6 L1271.61 1217.6 L1272.19 1217.6 L1272.78 1217.6 L1273.37 1217.6 L1273.95 1217.6 L1274.54 1217.6 L1275.13 1217.6 L1275.71 1217.6 L1276.3 1217.6 L1276.89 1217.6 L1277.47 1217.6 L1278.06 1217.6 L1278.65 1217.6 L1279.23 1217.6 L1279.82 1217.6 L1280.4 1217.6 L1280.99 1217.6 L1281.58 1217.6 L1282.16 1217.6 L1282.75 1217.6 L1283.34 1217.6 L1283.92 1217.6 L1284.51 1217.6 L1285.1 1217.6 L1285.68 1217.6 L1286.27 1217.6 L1286.86 1217.6 L1287.44 1217.6 L1288.03 1217.6 L1288.61 1217.6 L1289.2 1217.6 L1289.79 1217.6 L1290.37 1217.6 L1290.96 1217.6 L1291.55 1217.6 L1292.13 1217.6 L1292.72 1217.6 L1293.31 1217.6 L1293.89 1217.6 L1294.48 1217.6 L1295.06 1217.6 L1295.65 1217.6 L1296.24 1217.6 L1296.82 1217.6 L1297.41 1217.6 L1298 1217.6 L1298.58 1217.6 L1299.17 1217.6 L1299.76 1217.6 L1300.34 1217.6 L1300.93 1217.6 L1301.52 1217.6 L1302.1 1217.6 L1302.69 1217.6 L1303.27 1217.6 L1303.86 1217.6 L1304.45 1217.6 L1305.03 1217.6 L1305.62 1217.6 L1306.21 1217.6 L1306.79 1217.6 L1307.38 1217.6 L1307.97 1217.6 L1308.55 1217.6 L1309.14 1217.6 L1309.73 1217.6 L1310.31 1217.6 L1310.9 1217.6 L1311.48 1217.6 L1312.07 1217.6 L1312.66 1217.6 L1313.24 1217.6 L1313.83 1217.6 L1314.42 1217.6 L1315 1217.6 L1315.59 1217.6 L1316.18 1217.6 L1316.76 1217.6 L1317.35 1217.6 L1317.93 1217.6 L1318.52 1217.6 L1319.11 1217.6 L1319.69 1217.6 L1320.28 1217.6 L1320.87 1217.6 L1321.45 1217.6 L1322.04 1217.6 L1322.63 1217.6 L1323.21 1217.6 L1323.8 1217.6 L1324.39 1217.6 L1324.97 1217.6 L1325.56 1217.6 L1326.14 1217.6 L1326.73 1217.6 L1327.32 1217.6 L1327.9 1217.6 L1328.49 1217.6 L1329.08 1217.6 L1329.66 1217.6 L1330.25 1217.6 L1330.84 1217.6 L1331.42 1217.6 L1332.01 1217.6 L1332.6 1217.6 L1333.18 1217.6 L1333.77 1217.6 L1334.35 1217.6 L1334.94 1217.6 L1335.53 1217.6 L1336.11 1217.6 L1336.7 1217.6 L1337.29 1217.6 L1337.87 1217.6 L1338.46 1217.6 L1339.05 1217.6 L1339.63 1217.6 L1340.22 1217.6 L1340.8 1217.6 L1341.39 1217.6 L1341.98 1217.6 L1342.56 1217.6 L1343.15 1217.6 L1343.74 1217.6 L1344.32 1217.6 L1344.91 1217.6 L1345.5 1217.6 L1346.08 1217.6 L1346.67 1217.6 L1347.26 1217.6 L1347.84 1217.6 L1348.43 1217.6 L1349.01 1217.6 L1349.6 1217.6 L1350.19 1217.6 L1350.77 1217.6 L1351.36 1217.6 L1351.95 1217.6 L1352.53 1217.6 L1353.12 1217.6 L1353.71 1217.6 L1354.29 1217.6 L1354.88 1217.6 L1355.47 1217.6 L1356.05 1217.6 L1356.64 1217.6 L1357.22 1217.6 L1357.81 1217.6 L1358.4 1217.6 L1358.98 1217.6 L1359.57 1217.6 L1360.16 1217.6 L1360.74 1217.6 L1361.33 1217.6 L1361.92 1217.6 L1362.5 1217.6 L1363.09 1217.6 L1363.68 1217.6 L1364.26 1217.6 L1364.85 1217.6 L1365.43 1217.6 L1366.02 1217.6 L1366.61 1217.6 L1367.19 1217.6 L1367.78 1217.6 L1368.37 1217.6 L1368.95 1217.6 L1369.54 1217.6 L1370.13 1217.6 L1370.71 1217.6 L1371.3 1217.6 L1371.88 1217.6 L1372.47 1217.6 L1373.06 1217.6 L1373.64 1217.6 L1374.23 1217.6 L1374.82 1217.6 L1375.4 1217.6 L1375.99 1217.6 L1376.58 1217.6 L1377.16 1217.6 L1377.75 1217.6 L1378.34 1217.6 L1378.92 1217.6 L1379.51 1217.6 L1380.09 1217.6 L1380.68 1217.6 L1381.27 1217.6 L1381.85 1217.6 L1382.44 1217.6 L1383.03 1217.6 L1383.61 1217.6 L1384.2 1217.6 L1384.79 1217.6 L1385.37 1217.6 L1385.96 1217.6 L1386.55 1217.6 L1387.13 1217.6 L1387.72 1217.6 L1388.3 1217.6 L1388.89 1217.6 L1389.48 1217.6 L1390.06 1217.6 L1390.65 1217.6 L1391.24 1217.6 L1391.82 1217.6 L1392.41 1217.6 L1393 1217.6 L1393.58 1217.6 L1394.17 1217.6 L1394.75 1217.6 L1395.34 1217.6 L1395.93 1217.6 L1396.51 1217.6 L1397.1 1217.6 L1397.69 1217.6 L1398.27 1217.6 L1398.86 1217.6 L1399.45 1217.6 L1400.03 1217.6 L1400.62 1217.6 L1401.21 1217.6 L1401.79 1217.6 L1402.38 1217.6 L1402.96 1217.6 L1403.55 1217.6 L1404.14 1217.6 L1404.72 1217.6 L1405.31 1217.6 L1405.9 1217.6 L1406.48 1217.6 L1407.07 1217.6 L1407.66 1217.6 L1408.24 1217.6 L1408.83 1217.6 L1409.42 1217.6 L1410 1217.6 L1410.59 1217.6 L1411.17 1217.6 L1411.76 1217.6 L1412.35 1217.6 L1412.93 1217.6 L1413.52 1217.6 L1414.11 1217.6 L1414.69 1217.6 L1415.28 1217.6 L1415.87 1217.6 L1416.45 1217.6 L1417.04 1217.6 L1417.63 1217.6 L1418.21 1217.6 L1418.8 1217.6 L1419.38 1217.6 L1419.97 1217.6 L1420.56 1217.6 L1421.14 1217.6 L1421.73 1217.6 L1422.32 1217.6 L1422.9 1217.6 L1423.49 1217.6 L1424.08 1217.6 L1424.66 1217.6 L1425.25 1217.6 L1425.83 1217.6 L1426.42 1217.6 L1427.01 1217.6 L1427.59 1217.6 L1428.18 1217.6 L1428.77 1217.6 L1429.35 1217.6 L1429.94 1217.6 L1430.53 1217.6 L1431.11 1217.6 L1431.7 1217.6 L1432.29 1217.6 L1432.87 1217.6 L1433.46 1217.6 L1434.04 1217.6 L1434.63 1217.6 L1435.22 1217.6 L1435.8 1217.6 L1436.39 1217.6 L1436.98 1217.6 L1437.56 1217.6 L1438.15 1217.6 L1438.74 1217.6 L1439.32 1217.6 L1439.91 1217.6 L1440.5 1217.6 L1441.08 1217.6 L1441.67 1217.6 L1442.25 1217.6 L1442.84 1217.6 L1443.43 1217.6 L1444.01 1217.6 L1444.6 1217.6 L1445.19 1217.6 L1445.77 1217.6 L1446.36 1217.6 L1446.95 1217.6 L1447.53 1217.6 L1448.12 1217.6 L1448.7 1217.6 L1449.29 1217.6 L1449.88 1217.6 L1450.46 1217.6 L1451.05 1217.6 L1451.64 1217.6 L1452.22 1217.6 L1452.81 1217.6 L1453.4 1217.6 L1453.98 1217.6 L1454.57 1217.6 L1455.16 1217.6 L1455.74 1217.6 L1456.33 1217.6 L1456.91 1217.6 L1457.5 1217.6 L1458.09 1217.6 L1458.67 1217.6 L1459.26 1217.6 L1459.85 1217.6 L1460.43 1217.6 L1461.02 1217.6 L1461.61 1217.6 L1462.19 1217.6 L1462.78 1217.6 L1463.37 1217.6 L1463.95 1217.6 L1464.54 1217.6 L1465.12 1217.6 L1465.71 1217.6 L1466.3 1217.6 L1466.88 1217.6 L1467.47 1217.6 L1468.06 1217.6 L1468.64 1217.6 L1469.23 1217.6 L1469.82 1217.6 L1470.4 1217.6 L1470.99 1217.6 L1471.57 1217.6 L1472.16 1217.6 L1472.75 1217.6 L1473.33 1217.6 L1473.92 1217.6 L1474.51 1217.6 L1475.09 1217.6 L1475.68 1217.6 L1476.27 1217.6 L1476.85 1217.6 L1477.44 1217.6 L1478.03 1217.6 L1478.61 1217.6 L1479.2 1217.6 L1479.78 1217.6 L1480.37 1217.6 L1480.96 1217.6 L1481.54 1217.6 L1482.13 1217.6 L1482.72 1217.6 L1483.3 1217.6 L1483.89 1217.6 L1484.48 1217.6 L1485.06 1217.6 L1485.65 1217.6 L1486.24 1217.6 L1486.82 1217.6 L1487.41 1217.6 L1487.99 1217.6 L1488.58 1217.6 L1489.17 1217.6 L1489.75 1217.6 L1490.34 1217.6 L1490.93 1217.6 L1491.51 1217.6 L1492.1 1217.6 L1492.69 1217.6 L1493.27 1217.6 L1493.86 1217.6 L1494.45 1217.6 L1495.03 1217.6 L1495.62 1217.6 L1496.2 1217.6 L1496.79 1217.6 L1497.38 1217.6 L1497.96 1217.6 L1498.55 1217.6 L1499.14 1217.6 L1499.72 1217.6 L1500.31 1217.6 L1500.9 1217.6 L1501.48 1217.6 L1502.07 1217.6 L1502.65 1217.6 L1503.24 1217.6 L1503.83 1217.6 L1504.41 1217.6 L1505 1217.6 L1505.59 1217.6 L1506.17 1217.6 L1506.76 1217.6 L1507.35 1217.6 L1507.93 1217.6 L1508.52 1217.6 L1509.11 1217.6 L1509.69 1217.6 L1510.28 1217.6 L1510.86 1217.6 L1511.45 1217.6 L1512.04 1217.6 L1512.62 1217.6 L1513.21 1217.6 L1513.8 1217.6 L1514.38 1217.6 L1514.97 1217.6 L1515.56 1217.6 L1516.14 1217.6 L1516.73 1217.6 L1517.32 1217.6 L1517.9 1217.6 L1518.49 1217.6 L1519.07 1217.6 L1519.66 1217.6 L1520.25 1217.6 L1520.83 1217.6 L1521.42 1217.6 L1522.01 1217.6 L1522.59 1217.6 L1523.18 1217.6 L1523.77 1217.6 L1524.35 1217.6 L1524.94 1217.6 L1525.52 1217.6 L1526.11 1217.6 L1526.7 1217.6 L1527.28 1217.6 L1527.87 1217.6 L1528.46 1217.6 L1529.04 1217.6 L1529.63 1217.6 L1530.22 1217.6 L1530.8 1217.6 L1531.39 1217.6 L1531.98 1217.6 L1532.56 1217.6 L1533.15 1217.6 L1533.73 1217.6 L1534.32 1217.6 L1534.91 1217.6 L1535.49 1217.6 L1536.08 1217.6 L1536.67 1217.6 L1537.25 1217.6 L1537.84 1217.6 L1538.43 1217.6 L1539.01 1217.6 L1539.6 1217.6 L1540.19 1217.6 L1540.77 1217.6 L1541.36 1217.6 L1541.94 1217.6 L1542.53 1217.6 L1543.12 1217.6 L1543.7 1217.6 L1544.29 1217.6 L1544.88 1217.6 L1545.46 1217.6 L1546.05 1217.6 L1546.64 1217.6 L1547.22 1217.6 L1547.81 1217.6 L1548.4 1217.6 L1548.98 1217.6 L1549.57 1217.6 L1550.15 1217.6 L1550.74 1217.6 L1551.33 1217.6 L1551.91 1217.6 L1552.5 1217.6 L1553.09 1217.6 L1553.67 1217.6 L1554.26 1217.6 L1554.85 1217.6 L1555.43 1217.6 L1556.02 1217.6 L1556.6 1217.6 L1557.19 1217.6 L1557.78 1217.6 L1558.36 1217.6 L1558.95 1217.6 L1559.54 1217.6 L1560.12 1217.6 L1560.71 1217.6 L1561.3 1217.6 L1561.88 1217.6 L1562.47 1217.6 L1563.06 1217.6 L1563.64 1217.6 L1564.23 1217.6 L1564.81 1217.6 L1565.4 1217.6 L1565.99 1217.6 L1566.57 1217.6 L1567.16 1217.6 L1567.75 1217.6 L1568.33 1217.6 L1568.92 1217.6 L1569.51 1217.6 L1570.09 1217.6 L1570.68 1217.6 L1571.27 1217.6 L1571.85 1217.6 L1572.44 1217.6 L1573.02 1217.6 L1573.61 1217.6 L1574.2 1217.6 L1574.78 1217.6 L1575.37 1217.6 L1575.96 1217.6 L1576.54 1217.6 L1577.13 1217.6 L1577.72 1217.6 L1578.3 1217.6 L1578.89 1217.6 L1579.47 1217.6 L1580.06 1217.6 L1580.65 1217.6 L1581.23 1217.6 L1581.82 1217.6 L1582.41 1217.6 L1582.99 1217.6 L1583.58 1217.6 L1584.17 1217.6 L1584.75 1217.6 L1585.34 1217.6 L1585.93 1217.6 L1586.51 1217.6 L1587.1 1217.6 L1587.68 1217.6 L1588.27 1217.6 L1588.86 1217.6 L1589.44 1217.6 L1590.03 1217.6 L1590.62 1217.6 L1591.2 1217.6 L1591.79 1217.6 L1592.38 1217.6 L1592.96 1217.6 L1593.55 1217.6 L1594.14 1217.6 L1594.72 1217.6 L1595.31 1217.6 L1595.89 1217.6 L1596.48 1217.6 L1597.07 1217.6 L1597.65 1217.6 L1598.24 1217.6 L1598.83 1217.6 L1599.41 1217.6 L1600 1217.6 L1600.59 1217.6 L1601.17 1217.6 L1601.76 1217.6 L1602.34 1217.6 L1602.93 1217.6 L1603.52 1217.6 L1604.1 1217.6 L1604.69 1217.6 L1605.28 1217.6 L1605.86 1217.6 L1606.45 1217.6 L1607.04 1217.6 L1607.62 1217.6 L1608.21 1217.6 L1608.8 1217.6 L1609.38 1217.6 L1609.97 1217.6 L1610.55 1217.6 L1611.14 1217.6 L1611.73 1217.6 L1612.31 1217.6 L1612.9 1217.6 L1613.49 1217.6 L1614.07 1217.6 L1614.66 1217.6 L1615.25 1217.6 L1615.83 1217.6 L1616.42 1217.6 L1617.01 1217.6 L1617.59 1217.6 L1618.18 1217.6 L1618.76 1217.6 L1619.35 1217.6 L1619.94 1217.6 L1620.52 1217.6 L1621.11 1217.6 L1621.7 1217.6 L1622.28 1217.6 L1622.87 1217.6 L1623.46 1217.6 L1624.04 1217.6 L1624.63 1217.6 L1625.22 1217.6 L1625.8 1217.6 L1626.39 1217.6 L1626.97 1217.6 L1627.56 1217.6 L1628.15 1217.6 L1628.73 1217.6 L1629.32 1217.6 L1629.91 1217.6 L1630.49 1217.6 L1631.08 1217.6 L1631.67 1217.6 L1632.25 1217.6 L1632.84 1217.6 L1633.42 1217.6 L1634.01 1217.6 L1634.6 1217.6 L1635.18 1217.6 L1635.77 1217.6 L1636.36 1217.6 L1636.94 1217.6 L1637.53 1217.6 L1638.12 1217.6 L1638.7 1217.6 L1639.29 1217.6 L1639.88 1217.6 L1640.46 1217.6 L1641.05 1217.6 L1641.63 1217.6 L1642.22 1217.6 L1642.81 1217.6 L1643.39 1217.6 L1643.98 1217.6 L1644.57 1217.6 L1645.15 1217.6 L1645.74 1217.6 L1646.33 1217.6 L1646.91 1217.6 L1647.5 1217.6 L1648.09 1217.6 L1648.67 1217.6 L1649.26 1217.6 L1649.84 1217.6 L1650.43 1217.6 L1651.02 1217.6 L1651.6 1217.6 L1652.19 1217.6 L1652.78 1217.6 L1653.36 1217.6 L1653.95 1217.6 L1654.54 1217.6 L1655.12 1217.6 L1655.71 1217.6 L1656.29 1217.6 L1656.88 1217.6 L1657.47 1217.6 L1658.05 1217.6 L1658.64 1217.6 L1659.23 1217.6 L1659.81 1217.6 L1660.4 1217.6 L1660.99 1217.6 L1661.57 1217.6 L1662.16 1217.6 L1662.75 1217.6 L1663.33 1217.6 L1663.92 1217.6 L1664.5 1217.6 L1665.09 1217.6 L1665.68 1217.6 L1666.26 1217.6 L1666.85 1217.6 L1667.44 1217.6 L1668.02 1217.6 L1668.61 1217.6 L1669.2 1217.6 L1669.78 1217.6 L1670.37 1217.6 L1670.96 1217.6 L1671.54 1217.6 L1672.13 1217.6 L1672.71 1217.6 L1673.3 1217.6 L1673.89 1217.6 L1674.47 1217.6 L1675.06 1217.6 L1675.65 1217.6 L1676.23 1217.6 L1676.82 1217.6 L1677.41 1217.6 L1677.99 1217.6 L1678.58 1217.6 L1679.17 1217.6 L1679.75 1217.6 L1680.34 1217.6 L1680.92 1217.6 L1681.51 1217.6 L1682.1 1217.6 L1682.68 1217.6 L1683.27 1217.6 L1683.86 1217.6 L1684.44 1217.6 L1685.03 1217.6 L1685.62 1217.6 L1686.2 1217.6 L1686.79 1217.6 L1687.37 1217.6 L1687.96 1217.6 L1688.55 1217.6 L1689.13 1217.6 L1689.72 1217.6 L1690.31 1217.6 L1690.89 1217.6 L1691.48 1217.6 L1692.07 1217.6 L1692.65 1217.6 L1693.24 1217.6 L1693.83 1217.6 L1694.41 1217.6 L1695 1217.6 L1695.58 1217.6 L1696.17 1217.6 L1696.76 1217.6 L1697.34 1217.6 L1697.93 1217.6 L1698.52 1217.6 L1699.1 1217.6 L1699.69 1217.6 L1700.28 1217.6 L1700.86 1217.6 L1701.45 1217.6 L1702.04 1217.6 L1702.62 1217.6 L1703.21 1217.6 L1703.79 1217.6 L1704.38 1217.6 L1704.97 1217.6 L1705.55 1217.6 L1706.14 1217.6 L1706.73 1217.6 L1707.31 1217.6 L1707.9 1217.6 L1708.49 1217.6 L1709.07 1217.6 L1709.66 1217.6 L1710.24 1217.6 L1710.83 1217.6 L1711.42 1217.6 L1712 1217.6 L1712.59 1217.6 L1713.18 1217.6 L1713.76 1217.6 L1714.35 1217.6 L1714.94 1217.6 L1715.52 1217.6 L1716.11 1217.6 L1716.7 1217.6 L1717.28 1217.6 L1717.87 1217.6 L1718.45 1217.6 L1719.04 1217.6 L1719.63 1217.6 L1720.21 1217.6 L1720.8 1217.6 L1721.39 1217.6 L1721.97 1217.6 L1722.56 1217.6 L1723.15 1217.6 L1723.73 1217.6 L1724.32 1217.6 L1724.91 1217.6 L1725.49 1217.6 L1726.08 1217.6 L1726.66 1217.6 L1727.25 1217.6 L1727.84 1217.6 L1728.42 1217.6 L1729.01 1217.6 L1729.6 1217.6 L1730.18 1217.6 L1730.77 1217.6 L1731.36 1217.6 L1731.94 1217.6 L1732.53 1217.6 L1733.11 1217.6 L1733.7 1217.6 L1734.29 1217.6 L1734.87 1217.6 L1735.46 1217.6 L1736.05 1217.6 L1736.63 1217.6 L1737.22 1217.6 L1737.81 1217.6 L1738.39 1217.6 L1738.98 1217.6 L1739.57 1217.6 L1740.15 1217.6 L1740.74 1217.6 L1741.32 1217.6 L1741.91 1217.6 L1742.5 1217.6 L1743.08 1217.6 L1743.67 1217.6 L1744.26 1217.6 L1744.84 1217.6 L1745.43 1217.6 L1746.02 1217.6 L1746.6 1217.6 L1747.19 1217.6 L1747.78 1217.6 L1748.36 1217.6 L1748.95 1217.6 L1749.53 1217.6 L1750.12 1217.6 L1750.71 1217.6 L1751.29 1217.6 L1751.88 1217.6 L1752.47 1217.6 L1753.05 1217.6 L1753.64 1217.6 L1754.23 1217.6 L1754.81 1217.6 L1755.4 1217.6 L1755.99 1217.6 L1756.57 1217.6 L1757.16 1217.6 L1757.74 1217.6 L1758.33 1217.6 L1758.92 1217.6 L1759.5 1217.6 L1760.09 1217.6 L1760.68 1217.6 L1761.26 1217.6 L1761.85 1217.6 L1762.44 1217.6 L1763.02 1217.6 L1763.61 1217.6 L1764.19 1217.6 L1764.78 1217.6 L1765.37 1217.6 L1765.95 1217.6 L1766.54 1217.6 L1767.13 1217.6 L1767.71 1217.6 L1768.3 1217.6 L1768.89 1217.6 L1769.47 1217.6 L1770.06 1217.6 L1770.65 1217.6 L1771.23 1217.6 L1771.82 1217.6 L1772.4 1217.6 L1772.99 1217.6 L1773.58 1217.6 L1774.16 1217.6 L1774.75 1217.6 L1775.34 1217.6 L1775.92 1217.6 L1776.51 1217.6 L1777.1 1217.6 L1777.68 1217.6 L1778.27 1217.6 L1778.86 1217.6 L1779.44 1217.6 L1780.03 1217.6 L1780.61 1217.6 L1781.2 1217.6 L1781.79 1217.6 L1782.37 1217.6 L1782.96 1217.6 L1783.55 1217.6 L1784.13 1217.6 L1784.72 1217.6 L1785.31 1217.6 L1785.89 1217.6 L1786.48 1217.6 L1787.06 1217.6 L1787.65 1217.6 L1788.24 1217.6 L1788.82 1217.6 L1789.41 1217.6 L1790 1217.6 L1790.58 1217.6 L1791.17 1217.6 L1791.76 1217.6 L1792.34 1217.6 L1792.93 1217.6 L1793.52 1217.6 L1794.1 1217.6 L1794.69 1217.6 L1795.27 1217.6 L1795.86 1217.6 L1796.45 1217.6 L1797.03 1217.6 L1797.62 1217.6 L1798.21 1217.6 L1798.79 1217.6 L1799.38 1217.6 L1799.97 1217.6 L1800.55 1217.6 L1801.14 1217.6 L1801.73 1217.6 L1802.31 1217.6 L1802.9 1217.6 L1803.48 1217.6 L1804.07 1217.6 L1804.66 1217.6 L1805.24 1217.6 L1805.83 1217.6 L1806.42 1217.6 L1807 1217.6 L1807.59 1217.6 L1808.18 1217.6 L1808.76 1217.6 L1809.35 1217.6 L1809.94 1217.6 L1810.52 1217.6 L1811.11 1217.6 L1811.69 1217.6 L1812.28 1217.6 L1812.87 1217.6 L1813.45 1217.6 L1814.04 1217.6 L1814.63 1217.6 L1815.21 1217.6 L1815.8 1217.6 L1816.39 1217.6 L1816.97 1217.6 L1817.56 1217.6 L1818.14 1217.6 L1818.73 1217.6 L1819.32 1217.6 L1819.9 1217.6 L1820.49 1217.6 L1821.08 1217.6 L1821.66 1217.6 L1822.25 1217.6 L1822.84 1217.6 L1823.42 1217.6 L1824.01 1217.6 L1824.6 1217.6 L1825.18 1217.6 L1825.77 1217.6 L1826.35 1217.6 L1826.94 1217.6 L1827.53 1217.6 L1828.11 1217.6 L1828.7 1217.6 L1829.29 1217.6 L1829.87 1217.6 L1830.46 1217.6 L1831.05 1217.6 L1831.63 1217.6 L1832.22 1217.6 L1832.81 1217.6 L1833.39 1217.6 L1833.98 1217.6 L1834.56 1217.6 L1835.15 1217.6 L1835.74 1217.6 L1836.32 1217.6 L1836.91 1217.6 L1837.5 1217.6 L1838.08 1217.6 L1838.67 1217.6 L1839.26 1217.6 L1839.84 1217.6 L1840.43 1217.6 L1841.01 1217.6 L1841.6 1217.6 L1842.19 1217.6 L1842.77 1217.6 L1843.36 1217.6 L1843.95 1217.6 L1844.53 1217.6 L1845.12 1217.6 L1845.71 1217.6 L1846.29 1217.6 L1846.88 1217.6 L1847.47 1217.6 L1848.05 1217.6 L1848.64 1217.6 L1849.22 1217.6 L1849.81 1217.6 L1850.4 1217.6 L1850.98 1217.6 L1851.57 1217.6 L1852.16 1217.6 L1852.74 1217.6 L1853.33 1217.6 L1853.92 1217.6 L1854.5 1217.6 L1855.09 1217.6 L1855.68 1217.6 L1856.26 1217.6 L1856.85 1217.6 L1857.43 1217.6 L1858.02 1217.6 L1858.61 1217.6 L1859.19 1217.6 L1859.78 1217.6 L1860.37 1217.6 L1860.95 1217.6 L1861.54 1217.6 L1862.13 1217.6 L1862.71 1217.6 L1863.3 1217.6 L1863.88 1217.6 L1864.47 1217.6 L1865.06 1217.6 L1865.64 1217.6 L1866.23 1217.6 L1866.82 1217.6 L1867.4 1217.6 L1867.99 1217.6 L1868.58 1217.6 L1869.16 1217.6 L1869.75 1217.6 L1870.34 1217.6 L1870.92 1217.6 L1871.51 1217.6 L1872.09 1217.6 L1872.68 1217.6 L1873.27 1217.6 L1873.85 1217.6 L1874.44 1217.6 L1875.03 1217.6 L1875.61 1217.6 L1876.2 1217.6 L1876.79 1217.6 L1877.37 1217.6 L1877.96 1217.6 L1878.55 1217.6 L1879.13 1217.6 L1879.72 1217.6 L1880.3 1217.6 L1880.89 1217.6 L1881.48 1217.6 L1882.06 1217.6 L1882.65 1217.6 L1883.24 1217.6 L1883.82 1217.6 L1884.41 1217.6 L1885 1217.6 L1885.58 1217.6 L1886.17 1217.6 L1886.76 1217.6 L1887.34 1217.6 L1887.93 1217.6 L1888.51 1217.6 L1889.1 1217.6 L1889.69 1217.6 L1890.27 1217.6 L1890.86 1217.6 L1891.45 1217.6 L1892.03 1217.6 L1892.62 1217.6 L1893.21 1217.6 L1893.79 1217.6 L1894.38 1217.6 L1894.96 1217.6 L1895.55 1217.6 L1896.14 1217.6 L1896.72 1217.6 L1897.31 1217.6 L1897.9 1217.6 L1898.48 1217.6 L1899.07 1217.6 L1899.66 1217.6 L1900.24 1217.6 L1900.83 1217.6 L1901.42 1217.6 L1902 1217.6 L1902.59 1217.6 L1903.17 1217.6 L1903.76 1217.6 L1904.35 1217.6 L1904.93 1217.6 L1905.52 1217.6 L1906.11 1217.6 L1906.69 1217.6 L1907.28 1217.6 L1907.87 1217.6 L1908.45 1217.6 L1909.04 1217.6 L1909.63 1217.6 L1910.21 1217.6 L1910.8 1217.6 L1911.38 1217.6 L1911.97 1217.6 L1912.56 1217.6 L1913.14 1217.6 L1913.73 1217.6 L1914.32 1217.6 L1914.9 1217.6 L1915.49 1217.6 L1916.08 1217.6 L1916.66 1217.6 L1917.25 1217.6 L1917.83 1217.6 L1918.42 1217.6 L1919.01 1217.6 L1919.59 1217.6 L1920.18 1217.6 L1920.77 1217.6 L1921.35 1217.6 L1921.94 1217.6 L1922.53 1217.6 L1923.11 1217.6 L1923.7 1217.6 L1924.29 1217.6 L1924.87 1217.6 L1925.46 1217.6 L1926.04 1217.6 L1926.63 1217.6 L1927.22 1217.6 L1927.8 1217.6 L1928.39 1217.6 L1928.98 1217.6 L1929.56 1217.6 L1930.15 1217.6 L1930.74 1217.6 L1931.32 1217.6 L1931.91 1217.6 L1932.5 1217.6 L1933.08 1217.6 L1933.67 1217.6 L1934.25 1217.6 L1934.84 1217.6 L1935.43 1217.6 L1936.01 1217.6 L1936.6 1217.6 L1937.19 1217.6 L1937.77 1217.6 L1938.36 1217.6 L1938.95 1217.6 L1939.53 1217.6 L1940.12 1217.6 L1940.71 1217.6 L1941.29 1217.6 L1941.88 1217.6 L1942.46 1217.6 L1943.05 1217.6 L1943.64 1217.6 L1944.22 1217.6 L1944.81 1217.6 L1945.4 1217.6 L1945.98 1217.6 L1946.57 1217.6 L1947.16 1217.6 L1947.74 1217.6 L1948.33 1217.6 L1948.91 1217.6 L1949.5 1217.6 L1950.09 1217.6 L1950.67 1217.6 L1951.26 1217.6 L1951.85 1217.6 L1952.43 1217.6 L1953.02 1217.6 L1953.61 1217.6 L1954.19 1217.6 L1954.78 1217.6 L1955.37 1217.6 L1955.95 1217.6 L1956.54 1217.6 L1957.12 1217.6 L1957.71 1217.6 L1958.3 1217.6 L1958.88 1217.6 L1959.47 1217.6 L1960.06 1217.6 L1960.64 1217.6 L1961.23 1217.6 L1961.82 1217.6 L1962.4 1217.6 L1962.99 1217.6 L1963.58 1217.6 L1964.16 1217.6 L1964.75 1217.6 L1965.33 1217.6 L1965.92 1217.6 L1966.51 1217.6 L1967.09 1217.6 L1967.68 1217.6 L1968.27 1217.6 L1968.85 1217.6 L1969.44 1217.6 L1970.03 1217.6 L1970.61 1217.6 L1971.2 1217.6 L1971.78 1217.6 L1972.37 1217.6 L1972.96 1217.6 L1973.54 1217.6 L1974.13 1217.6 L1974.72 1217.6 L1975.3 1217.6 L1975.89 1217.6 L1976.48 1217.6 L1977.06 1217.6 L1977.65 1217.6 L1978.24 1217.6 L1978.82 1217.6 L1979.41 1217.6 L1979.99 1217.6 L1980.58 1217.6 L1981.17 1217.6 L1981.75 1217.6 L1982.34 1217.6 L1982.93 1217.6 L1983.51 1217.6 L1984.1 1217.6 L1984.69 1217.6 L1985.27 1217.6 L1985.86 1217.6 L1986.45 1217.6 L1987.03 1217.6 L1987.62 1217.6 L1988.2 1217.6 L1988.79 1217.6 L1989.38 1217.6 L1989.96 1217.6 L1990.55 1217.6 L1991.14 1217.6 L1991.72 1217.6 L1992.31 1217.6 L1992.9 1217.6 L1993.48 1217.6 L1994.07 1217.6 L1994.65 1217.6 L1995.24 1217.6 L1995.83 1217.6 L1996.41 1217.6 L1997 1217.6 L1997.59 1217.6 L1998.17 1217.6 L1998.76 1217.6 L1999.35 1217.6 L1999.93 1217.6 L2000.52 1217.6 L2001.11 1217.6 L2001.69 1217.6 L2002.28 1217.6 L2002.86 1217.6 L2003.45 1217.6 L2004.04 1217.6 L2004.62 1217.6 L2005.21 1217.6 L2005.8 1217.6 L2006.38 1217.6 L2006.97 1217.6 L2007.56 1217.6 L2008.14 1217.6 L2008.73 1217.6 L2009.32 1217.6 L2009.9 1217.6 L2010.49 1217.6 L2011.07 1217.6 L2011.66 1217.6 L2012.25 1217.6 L2012.83 1217.6 L2013.42 1217.6 L2014.01 1217.6 L2014.59 1217.6 L2015.18 1217.6 L2015.77 1217.6 L2016.35 1217.6 L2016.94 1217.6 L2017.53 1217.6 L2018.11 1217.6 L2018.7 1217.6 L2019.28 1217.6 L2019.87 1217.6 L2020.46 1217.6 L2021.04 1217.6 L2021.63 1217.6 L2022.22 1217.6 L2022.8 1217.6 L2023.39 1217.6 L2023.98 1217.6 L2024.56 1217.6 L2025.15 1217.6 L2025.73 1217.6 L2026.32 1217.6 L2026.91 1217.6 L2027.49 1217.6 L2028.08 1217.6 L2028.67 1217.6 L2029.25 1217.6 L2029.84 1217.6 L2030.43 1217.6 L2031.01 1217.6 L2031.6 1217.6 L2032.19 1217.6 L2032.77 1217.6 L2033.36 1217.6 L2033.94 1217.6 L2034.53 1217.6 L2035.12 1217.6 L2035.7 1217.6 L2036.29 1217.6 L2036.88 1217.6 L2037.46 1217.6 L2038.05 1217.6 L2038.64 1217.6 L2039.22 1217.6 L2039.81 1217.6 L2040.4 1217.6 L2040.98 1217.6 L2041.57 1217.6 L2042.15 1217.6 L2042.74 1217.6 L2043.33 1217.6 L2043.91 1217.6 L2044.5 1217.6 L2045.09 1217.6 L2045.67 1217.6 L2046.26 1217.6 L2046.85 1217.6 L2047.43 1217.6 L2048.02 1217.6 L2048.6 1217.6 L2049.19 1217.6 L2049.78 1217.6 L2050.36 1217.6 L2050.95 1217.6 L2051.54 1217.6 L2052.12 1217.6 L2052.71 1217.6 L2053.3 1217.6 L2053.88 1217.6 L2054.47 1217.6 L2055.06 1217.6 L2055.64 1217.6 L2056.23 1217.6 L2056.81 1217.6 L2057.4 1217.6 L2057.99 1217.6 L2058.57 1217.6 L2059.16 1217.6 L2059.75 1217.6 L2060.33 1217.6 L2060.92 1217.6 L2061.51 1217.6 L2062.09 1217.6 L2062.68 1217.6 L2063.27 1217.6 L2063.85 1217.6 L2064.44 1217.6 L2065.02 1217.6 L2065.61 1217.6 L2066.2 1217.6 L2066.78 1217.6 L2067.37 1217.6 L2067.96 1217.6 L2068.54 1217.6 L2069.13 1217.6 L2069.72 1217.6 L2070.3 1217.6 L2070.89 1217.6 L2071.48 1217.6 L2072.06 1217.6 L2072.65 1217.6 L2073.23 1217.6 L2073.82 1217.6 L2074.41 1217.6 L2074.99 1217.6 L2075.58 1217.6 L2076.17 1217.6 L2076.75 1217.6 L2077.34 1217.6 L2077.93 1217.6 L2078.51 1217.6 L2079.1 1217.6 L2079.68 1217.6 L2080.27 1217.6 L2080.86 1217.6 L2081.44 1217.6 L2082.03 1217.6 L2082.62 1217.6 L2083.2 1217.6 L2083.79 1217.6 L2084.38 1217.6 L2084.96 1217.6 L2085.55 1217.6 L2086.14 1217.6 L2086.72 1217.6 L2087.31 1217.6 L2087.89 1217.6 L2088.48 1217.6 L2089.07 1217.6 L2089.65 1217.6 L2090.24 1217.6 L2090.83 1217.6 L2091.41 1217.6 L2092 1217.6 L2092.59 1217.6 L2093.17 1217.6 L2093.76 1217.6 L2094.35 1217.6 L2094.93 1217.6 L2095.52 1217.6 L2096.1 1217.6 L2096.69 1217.6 L2097.28 1217.6 L2097.86 1217.6 L2098.45 1217.6 L2099.04 1217.6 L2099.62 1217.6 L2100.21 1217.6 L2100.8 1217.6 L2101.38 1217.6 L2101.97 1217.6 L2102.55 1217.6 L2103.14 1217.6 L2103.73 1217.6 L2104.31 1217.6 L2104.9 1217.6 L2105.49 1217.6 L2106.07 1217.6 L2106.66 1217.6 L2107.25 1217.6 L2107.83 1217.6 L2108.42 1217.6 L2109.01 1217.6 L2109.59 1217.6 L2110.18 1217.6 L2110.76 1217.6 L2111.35 1217.6 L2111.94 1217.6 L2112.52 1217.6 L2113.11 1217.6 L2113.7 1217.6 L2114.28 1217.6 L2114.87 1217.6 L2115.46 1217.6 L2116.04 1217.6 L2116.63 1217.6 L2117.22 1217.6 L2117.8 1217.6 L2118.39 1217.6 L2118.97 1217.6 L2119.56 1217.6 L2120.15 1217.6 L2120.73 1217.6 L2121.32 1217.6 L2121.91 1217.6 L2122.49 1217.6 L2123.08 1217.6 L2123.67 1217.6 L2124.25 1217.6 L2124.84 1217.6 L2125.42 1217.6 L2126.01 1217.6 L2126.6 1217.6 L2127.18 1217.6 L2127.77 1217.6 L2128.36 1217.6 L2128.94 1217.6 L2129.53 1217.6 L2130.12 1217.6 L2130.7 1217.6 L2131.29 1217.6 L2131.88 1217.6 L2132.46 1217.6 L2133.05 1217.6 L2133.63 1217.6 L2134.22 1217.6 L2134.81 1217.6 L2135.39 1217.6 L2135.98 1217.6 L2136.57 1217.6 L2137.15 1217.6 L2137.74 1217.6 L2138.33 1217.6 L2138.91 1217.6 L2139.5 1217.6 L2140.09 1217.6 L2140.67 1217.6 L2141.26 1217.6 L2141.84 1217.6 L2142.43 1217.6 L2143.02 1217.6 L2143.6 1217.6 L2144.19 1217.6 L2144.78 1217.6 L2145.36 1217.6 L2145.95 1217.6 L2146.54 1217.6 L2147.12 1217.6 L2147.71 1217.6 L2148.3 1217.6 L2148.88 1217.6 L2149.47 1217.6 L2150.05 1217.6 L2150.64 1217.6 L2151.23 1217.6 L2151.81 1217.6 L2152.4 1217.6 L2152.99 1217.6 L2153.57 1217.6 L2154.16 1217.6 L2154.75 1217.6 L2155.33 1217.6 L2155.92 1217.6 L2156.5 1217.6 L2157.09 1217.6 L2157.68 1217.6 L2158.26 1217.6 L2158.26 1217.43 L2157.68 1217.43 L2157.09 1217.43 L2156.5 1217.43 L2155.92 1217.43 L2155.33 1217.43 L2154.75 1217.43 L2154.16 1217.43 L2153.57 1217.43 L2152.99 1217.43 L2152.4 1217.43 L2151.81 1217.43 L2151.23 1217.43 L2150.64 1217.43 L2150.05 1217.43 L2149.47 1217.43 L2148.88 1217.43 L2148.3 1217.43 L2147.71 1217.43 L2147.12 1217.43 L2146.54 1217.43 L2145.95 1217.43 L2145.36 1217.43 L2144.78 1217.43 L2144.19 1217.43 L2143.6 1217.43 L2143.02 1217.43 L2142.43 1217.43 L2141.84 1217.43 L2141.26 1217.43 L2140.67 1217.43 L2140.09 1217.43 L2139.5 1217.43 L2138.91 1217.43 L2138.33 1217.43 L2137.74 1217.43 L2137.15 1217.43 L2136.57 1217.43 L2135.98 1217.43 L2135.39 1217.43 L2134.81 1217.43 L2134.22 1217.43 L2133.63 1217.43 L2133.05 1217.43 L2132.46 1217.43 L2131.88 1217.43 L2131.29 1217.43 L2130.7 1217.43 L2130.12 1217.43 L2129.53 1217.43 L2128.94 1217.43 L2128.36 1217.43 L2127.77 1217.43 L2127.18 1217.43 L2126.6 1217.43 L2126.01 1217.43 L2125.42 1217.43 L2124.84 1217.43 L2124.25 1217.43 L2123.67 1217.43 L2123.08 1217.43 L2122.49 1217.43 L2121.91 1217.43 L2121.32 1217.43 L2120.73 1217.43 L2120.15 1217.43 L2119.56 1217.43 L2118.97 1217.43 L2118.39 1217.43 L2117.8 1217.43 L2117.22 1217.43 L2116.63 1217.43 L2116.04 1217.43 L2115.46 1217.43 L2114.87 1217.43 L2114.28 1217.43 L2113.7 1217.43 L2113.11 1217.43 L2112.52 1217.43 L2111.94 1217.43 L2111.35 1217.43 L2110.76 1217.43 L2110.18 1217.43 L2109.59 1217.43 L2109.01 1217.43 L2108.42 1217.43 L2107.83 1217.43 L2107.25 1217.43 L2106.66 1217.43 L2106.07 1217.43 L2105.49 1217.43 L2104.9 1217.43 L2104.31 1217.43 L2103.73 1217.43 L2103.14 1217.43 L2102.55 1217.43 L2101.97 1217.43 L2101.38 1217.43 L2100.8 1217.43 L2100.21 1217.43 L2099.62 1217.43 L2099.04 1217.43 L2098.45 1217.43 L2097.86 1217.43 L2097.28 1217.43 L2096.69 1217.43 L2096.1 1217.43 L2095.52 1217.43 L2094.93 1217.43 L2094.35 1217.43 L2093.76 1217.43 L2093.17 1217.43 L2092.59 1217.43 L2092 1217.43 L2091.41 1217.43 L2090.83 1217.43 L2090.24 1217.43 L2089.65 1217.43 L2089.07 1217.43 L2088.48 1217.43 L2087.89 1217.43 L2087.31 1217.43 L2086.72 1217.43 L2086.14 1217.43 L2085.55 1217.43 L2084.96 1217.43 L2084.38 1217.43 L2083.79 1217.43 L2083.2 1217.43 L2082.62 1217.43 L2082.03 1217.43 L2081.44 1217.43 L2080.86 1217.43 L2080.27 1217.43 L2079.68 1217.43 L2079.1 1217.43 L2078.51 1217.43 L2077.93 1217.43 L2077.34 1217.43 L2076.75 1217.43 L2076.17 1217.43 L2075.58 1217.43 L2074.99 1217.43 L2074.41 1217.43 L2073.82 1217.43 L2073.23 1217.43 L2072.65 1217.43 L2072.06 1217.43 L2071.48 1217.43 L2070.89 1217.43 L2070.3 1217.43 L2069.72 1217.43 L2069.13 1217.43 L2068.54 1217.43 L2067.96 1217.43 L2067.37 1217.43 L2066.78 1217.43 L2066.2 1217.43 L2065.61 1217.43 L2065.02 1217.43 L2064.44 1217.43 L2063.85 1217.43 L2063.27 1217.43 L2062.68 1217.43 L2062.09 1217.43 L2061.51 1217.43 L2060.92 1217.43 L2060.33 1217.43 L2059.75 1217.43 L2059.16 1217.43 L2058.57 1217.43 L2057.99 1217.43 L2057.4 1217.43 L2056.81 1217.43 L2056.23 1217.43 L2055.64 1217.43 L2055.06 1217.43 L2054.47 1217.43 L2053.88 1217.43 L2053.3 1217.43 L2052.71 1217.43 L2052.12 1217.43 L2051.54 1217.43 L2050.95 1217.43 L2050.36 1217.43 L2049.78 1217.43 L2049.19 1217.43 L2048.6 1217.43 L2048.02 1217.43 L2047.43 1217.43 L2046.85 1217.43 L2046.26 1217.43 L2045.67 1217.43 L2045.09 1217.43 L2044.5 1217.43 L2043.91 1217.43 L2043.33 1217.43 L2042.74 1217.43 L2042.15 1217.43 L2041.57 1217.43 L2040.98 1217.43 L2040.4 1217.43 L2039.81 1217.43 L2039.22 1217.43 L2038.64 1217.43 L2038.05 1217.43 L2037.46 1217.43 L2036.88 1217.43 L2036.29 1217.43 L2035.7 1217.43 L2035.12 1217.43 L2034.53 1217.43 L2033.94 1217.43 L2033.36 1217.43 L2032.77 1217.43 L2032.19 1217.43 L2031.6 1217.43 L2031.01 1217.43 L2030.43 1217.43 L2029.84 1217.43 L2029.25 1217.43 L2028.67 1217.43 L2028.08 1217.43 L2027.49 1217.43 L2026.91 1217.43 L2026.32 1217.43 L2025.73 1217.43 L2025.15 1217.43 L2024.56 1217.43 L2023.98 1217.43 L2023.39 1217.43 L2022.8 1217.43 L2022.22 1217.43 L2021.63 1217.43 L2021.04 1217.43 L2020.46 1217.43 L2019.87 1217.43 L2019.28 1217.43 L2018.7 1217.43 L2018.11 1217.43 L2017.53 1217.43 L2016.94 1217.43 L2016.35 1217.43 L2015.77 1217.43 L2015.18 1217.43 L2014.59 1217.43 L2014.01 1217.43 L2013.42 1217.43 L2012.83 1217.43 L2012.25 1217.43 L2011.66 1217.43 L2011.07 1217.43 L2010.49 1217.43 L2009.9 1217.43 L2009.32 1217.43 L2008.73 1217.43 L2008.14 1217.43 L2007.56 1217.43 L2006.97 1217.43 L2006.38 1217.43 L2005.8 1217.43 L2005.21 1217.43 L2004.62 1217.43 L2004.04 1217.43 L2003.45 1217.43 L2002.86 1217.43 L2002.28 1217.43 L2001.69 1217.43 L2001.11 1217.43 L2000.52 1217.43 L1999.93 1217.43 L1999.35 1217.43 L1998.76 1217.43 L1998.17 1217.43 L1997.59 1217.43 L1997 1217.43 L1996.41 1217.43 L1995.83 1217.43 L1995.24 1217.43 L1994.65 1217.43 L1994.07 1217.43 L1993.48 1217.43 L1992.9 1217.43 L1992.31 1217.43 L1991.72 1217.43 L1991.14 1217.43 L1990.55 1217.43 L1989.96 1217.43 L1989.38 1217.43 L1988.79 1217.43 L1988.2 1217.43 L1987.62 1217.43 L1987.03 1217.43 L1986.45 1217.43 L1985.86 1217.43 L1985.27 1217.43 L1984.69 1217.43 L1984.1 1217.43 L1983.51 1217.43 L1982.93 1217.43 L1982.34 1217.43 L1981.75 1217.43 L1981.17 1217.43 L1980.58 1217.43 L1979.99 1217.43 L1979.41 1217.43 L1978.82 1217.43 L1978.24 1217.43 L1977.65 1217.43 L1977.06 1217.43 L1976.48 1217.43 L1975.89 1217.43 L1975.3 1217.43 L1974.72 1217.43 L1974.13 1217.43 L1973.54 1217.43 L1972.96 1217.43 L1972.37 1217.43 L1971.78 1217.43 L1971.2 1217.43 L1970.61 1217.43 L1970.03 1217.43 L1969.44 1217.43 L1968.85 1217.43 L1968.27 1217.43 L1967.68 1217.43 L1967.09 1217.43 L1966.51 1217.43 L1965.92 1217.43 L1965.33 1217.43 L1964.75 1217.43 L1964.16 1217.43 L1963.58 1217.43 L1962.99 1217.43 L1962.4 1217.43 L1961.82 1217.43 L1961.23 1217.43 L1960.64 1217.43 L1960.06 1217.43 L1959.47 1217.43 L1958.88 1217.43 L1958.3 1217.43 L1957.71 1217.43 L1957.12 1217.43 L1956.54 1217.43 L1955.95 1217.43 L1955.37 1217.43 L1954.78 1217.43 L1954.19 1217.43 L1953.61 1217.43 L1953.02 1217.43 L1952.43 1217.43 L1951.85 1217.43 L1951.26 1217.43 L1950.67 1217.43 L1950.09 1217.43 L1949.5 1217.43 L1948.91 1217.43 L1948.33 1217.43 L1947.74 1217.43 L1947.16 1217.43 L1946.57 1217.43 L1945.98 1217.43 L1945.4 1217.43 L1944.81 1217.43 L1944.22 1217.43 L1943.64 1217.43 L1943.05 1217.43 L1942.46 1217.43 L1941.88 1217.43 L1941.29 1217.43 L1940.71 1217.43 L1940.12 1217.43 L1939.53 1217.43 L1938.95 1217.43 L1938.36 1217.43 L1937.77 1217.43 L1937.19 1217.43 L1936.6 1217.43 L1936.01 1217.43 L1935.43 1217.43 L1934.84 1217.43 L1934.25 1217.43 L1933.67 1217.43 L1933.08 1217.43 L1932.5 1217.43 L1931.91 1217.43 L1931.32 1217.43 L1930.74 1217.43 L1930.15 1217.43 L1929.56 1217.43 L1928.98 1217.43 L1928.39 1217.43 L1927.8 1217.43 L1927.22 1217.43 L1926.63 1217.43 L1926.04 1217.43 L1925.46 1217.43 L1924.87 1217.43 L1924.29 1217.43 L1923.7 1217.43 L1923.11 1217.43 L1922.53 1217.43 L1921.94 1217.43 L1921.35 1217.43 L1920.77 1217.43 L1920.18 1217.43 L1919.59 1217.43 L1919.01 1217.43 L1918.42 1217.43 L1917.83 1217.43 L1917.25 1217.43 L1916.66 1217.43 L1916.08 1217.43 L1915.49 1217.43 L1914.9 1217.43 L1914.32 1217.43 L1913.73 1217.43 L1913.14 1217.43 L1912.56 1217.43 L1911.97 1217.43 L1911.38 1217.43 L1910.8 1217.43 L1910.21 1217.43 L1909.63 1217.43 L1909.04 1217.43 L1908.45 1217.43 L1907.87 1217.43 L1907.28 1217.43 L1906.69 1217.43 L1906.11 1217.43 L1905.52 1217.43 L1904.93 1217.43 L1904.35 1217.43 L1903.76 1217.43 L1903.17 1217.43 L1902.59 1217.43 L1902 1217.43 L1901.42 1217.43 L1900.83 1217.43 L1900.24 1217.43 L1899.66 1217.43 L1899.07 1217.43 L1898.48 1217.43 L1897.9 1217.43 L1897.31 1217.43 L1896.72 1217.43 L1896.14 1217.43 L1895.55 1217.43 L1894.96 1217.43 L1894.38 1217.43 L1893.79 1217.43 L1893.21 1217.43 L1892.62 1217.43 L1892.03 1217.43 L1891.45 1217.43 L1890.86 1217.43 L1890.27 1217.43 L1889.69 1217.43 L1889.1 1217.43 L1888.51 1217.43 L1887.93 1217.43 L1887.34 1217.43 L1886.76 1217.43 L1886.17 1217.43 L1885.58 1217.43 L1885 1217.43 L1884.41 1217.43 L1883.82 1217.43 L1883.24 1217.43 L1882.65 1217.43 L1882.06 1217.43 L1881.48 1217.43 L1880.89 1217.43 L1880.3 1217.43 L1879.72 1217.43 L1879.13 1217.43 L1878.55 1217.43 L1877.96 1217.43 L1877.37 1217.43 L1876.79 1217.43 L1876.2 1217.43 L1875.61 1217.43 L1875.03 1217.43 L1874.44 1217.43 L1873.85 1217.43 L1873.27 1217.43 L1872.68 1217.43 L1872.09 1217.43 L1871.51 1217.43 L1870.92 1217.43 L1870.34 1217.43 L1869.75 1217.43 L1869.16 1217.43 L1868.58 1217.43 L1867.99 1217.43 L1867.4 1217.43 L1866.82 1217.43 L1866.23 1217.43 L1865.64 1217.43 L1865.06 1217.43 L1864.47 1217.43 L1863.88 1217.43 L1863.3 1217.43 L1862.71 1217.43 L1862.13 1217.43 L1861.54 1217.43 L1860.95 1217.43 L1860.37 1217.43 L1859.78 1217.43 L1859.19 1217.43 L1858.61 1217.43 L1858.02 1217.43 L1857.43 1217.43 L1856.85 1217.43 L1856.26 1217.43 L1855.68 1217.43 L1855.09 1217.43 L1854.5 1217.43 L1853.92 1217.43 L1853.33 1217.43 L1852.74 1217.43 L1852.16 1217.43 L1851.57 1217.43 L1850.98 1217.43 L1850.4 1217.43 L1849.81 1217.43 L1849.22 1217.43 L1848.64 1217.43 L1848.05 1217.43 L1847.47 1217.43 L1846.88 1217.43 L1846.29 1217.43 L1845.71 1217.43 L1845.12 1217.43 L1844.53 1217.43 L1843.95 1217.43 L1843.36 1217.43 L1842.77 1217.43 L1842.19 1217.43 L1841.6 1217.43 L1841.01 1217.43 L1840.43 1217.43 L1839.84 1217.43 L1839.26 1217.43 L1838.67 1217.43 L1838.08 1217.43 L1837.5 1217.43 L1836.91 1217.43 L1836.32 1217.43 L1835.74 1217.43 L1835.15 1217.43 L1834.56 1217.43 L1833.98 1217.43 L1833.39 1217.43 L1832.81 1217.43 L1832.22 1217.43 L1831.63 1217.43 L1831.05 1217.43 L1830.46 1217.43 L1829.87 1217.43 L1829.29 1217.43 L1828.7 1217.43 L1828.11 1217.43 L1827.53 1217.43 L1826.94 1217.43 L1826.35 1217.43 L1825.77 1217.43 L1825.18 1217.43 L1824.6 1217.43 L1824.01 1217.43 L1823.42 1217.43 L1822.84 1217.43 L1822.25 1217.43 L1821.66 1217.43 L1821.08 1217.43 L1820.49 1217.43 L1819.9 1217.43 L1819.32 1217.43 L1818.73 1217.43 L1818.14 1217.43 L1817.56 1217.43 L1816.97 1217.43 L1816.39 1217.43 L1815.8 1217.43 L1815.21 1217.43 L1814.63 1217.43 L1814.04 1217.43 L1813.45 1217.43 L1812.87 1217.43 L1812.28 1217.43 L1811.69 1217.43 L1811.11 1217.43 L1810.52 1217.43 L1809.94 1217.43 L1809.35 1217.43 L1808.76 1217.43 L1808.18 1217.43 L1807.59 1217.43 L1807 1217.43 L1806.42 1217.43 L1805.83 1217.43 L1805.24 1217.43 L1804.66 1217.43 L1804.07 1217.43 L1803.48 1217.43 L1802.9 1217.43 L1802.31 1217.43 L1801.73 1217.43 L1801.14 1217.43 L1800.55 1217.43 L1799.97 1217.43 L1799.38 1217.43 L1798.79 1217.43 L1798.21 1217.43 L1797.62 1217.43 L1797.03 1217.43 L1796.45 1217.43 L1795.86 1217.43 L1795.27 1217.43 L1794.69 1217.43 L1794.1 1217.43 L1793.52 1217.43 L1792.93 1217.43 L1792.34 1217.43 L1791.76 1217.43 L1791.17 1217.43 L1790.58 1217.43 L1790 1217.43 L1789.41 1217.43 L1788.82 1217.43 L1788.24 1217.43 L1787.65 1217.43 L1787.06 1217.43 L1786.48 1217.43 L1785.89 1217.43 L1785.31 1217.43 L1784.72 1217.43 L1784.13 1217.43 L1783.55 1217.43 L1782.96 1217.43 L1782.37 1217.43 L1781.79 1217.43 L1781.2 1217.43 L1780.61 1217.43 L1780.03 1217.43 L1779.44 1217.43 L1778.86 1217.43 L1778.27 1217.43 L1777.68 1217.43 L1777.1 1217.43 L1776.51 1217.43 L1775.92 1217.43 L1775.34 1217.43 L1774.75 1217.43 L1774.16 1217.43 L1773.58 1217.43 L1772.99 1217.43 L1772.4 1217.43 L1771.82 1217.43 L1771.23 1217.43 L1770.65 1217.43 L1770.06 1217.43 L1769.47 1217.43 L1768.89 1217.43 L1768.3 1217.43 L1767.71 1217.43 L1767.13 1217.43 L1766.54 1217.43 L1765.95 1217.43 L1765.37 1217.43 L1764.78 1217.43 L1764.19 1217.43 L1763.61 1217.43 L1763.02 1217.43 L1762.44 1217.43 L1761.85 1217.43 L1761.26 1217.43 L1760.68 1217.43 L1760.09 1217.43 L1759.5 1217.43 L1758.92 1217.43 L1758.33 1217.43 L1757.74 1217.43 L1757.16 1217.43 L1756.57 1217.43 L1755.99 1217.43 L1755.4 1217.43 L1754.81 1217.43 L1754.23 1217.43 L1753.64 1217.43 L1753.05 1217.43 L1752.47 1217.43 L1751.88 1217.43 L1751.29 1217.43 L1750.71 1217.43 L1750.12 1217.43 L1749.53 1217.43 L1748.95 1217.43 L1748.36 1217.43 L1747.78 1217.43 L1747.19 1217.43 L1746.6 1217.43 L1746.02 1217.43 L1745.43 1217.43 L1744.84 1217.43 L1744.26 1217.43 L1743.67 1217.43 L1743.08 1217.43 L1742.5 1217.43 L1741.91 1217.43 L1741.32 1217.43 L1740.74 1217.43 L1740.15 1217.43 L1739.57 1217.43 L1738.98 1217.43 L1738.39 1217.43 L1737.81 1217.43 L1737.22 1217.43 L1736.63 1217.43 L1736.05 1217.43 L1735.46 1217.43 L1734.87 1217.43 L1734.29 1217.43 L1733.7 1217.43 L1733.11 1217.43 L1732.53 1217.43 L1731.94 1217.43 L1731.36 1217.43 L1730.77 1217.43 L1730.18 1217.43 L1729.6 1217.43 L1729.01 1217.43 L1728.42 1217.43 L1727.84 1217.43 L1727.25 1217.43 L1726.66 1217.43 L1726.08 1217.43 L1725.49 1217.43 L1724.91 1217.43 L1724.32 1217.43 L1723.73 1217.43 L1723.15 1217.43 L1722.56 1217.43 L1721.97 1217.43 L1721.39 1217.43 L1720.8 1217.43 L1720.21 1217.43 L1719.63 1217.43 L1719.04 1217.43 L1718.45 1217.43 L1717.87 1217.43 L1717.28 1217.43 L1716.7 1217.43 L1716.11 1217.43 L1715.52 1217.43 L1714.94 1217.43 L1714.35 1217.43 L1713.76 1217.43 L1713.18 1217.43 L1712.59 1217.43 L1712 1217.43 L1711.42 1217.43 L1710.83 1217.43 L1710.24 1217.43 L1709.66 1217.43 L1709.07 1217.43 L1708.49 1217.43 L1707.9 1217.43 L1707.31 1217.43 L1706.73 1217.43 L1706.14 1217.43 L1705.55 1217.43 L1704.97 1217.43 L1704.38 1217.43 L1703.79 1217.43 L1703.21 1217.43 L1702.62 1217.43 L1702.04 1217.43 L1701.45 1217.43 L1700.86 1217.43 L1700.28 1217.43 L1699.69 1217.43 L1699.1 1217.43 L1698.52 1217.43 L1697.93 1217.43 L1697.34 1217.43 L1696.76 1217.43 L1696.17 1217.43 L1695.58 1217.43 L1695 1217.43 L1694.41 1217.43 L1693.83 1217.43 L1693.24 1217.43 L1692.65 1217.43 L1692.07 1217.43 L1691.48 1217.43 L1690.89 1217.43 L1690.31 1217.43 L1689.72 1217.43 L1689.13 1217.43 L1688.55 1217.43 L1687.96 1217.43 L1687.37 1217.43 L1686.79 1217.43 L1686.2 1217.43 L1685.62 1217.43 L1685.03 1217.43 L1684.44 1217.43 L1683.86 1217.43 L1683.27 1217.43 L1682.68 1217.43 L1682.1 1217.43 L1681.51 1217.43 L1680.92 1217.43 L1680.34 1217.43 L1679.75 1217.43 L1679.17 1217.43 L1678.58 1217.43 L1677.99 1217.43 L1677.41 1217.43 L1676.82 1217.43 L1676.23 1217.43 L1675.65 1217.43 L1675.06 1217.43 L1674.47 1217.43 L1673.89 1217.43 L1673.3 1217.43 L1672.71 1217.43 L1672.13 1217.43 L1671.54 1217.43 L1670.96 1217.43 L1670.37 1217.43 L1669.78 1217.43 L1669.2 1217.43 L1668.61 1217.43 L1668.02 1217.43 L1667.44 1217.43 L1666.85 1217.43 L1666.26 1217.43 L1665.68 1217.43 L1665.09 1217.43 L1664.5 1217.43 L1663.92 1217.43 L1663.33 1217.43 L1662.75 1217.43 L1662.16 1217.43 L1661.57 1217.43 L1660.99 1217.43 L1660.4 1217.43 L1659.81 1217.43 L1659.23 1217.43 L1658.64 1217.43 L1658.05 1217.43 L1657.47 1217.43 L1656.88 1217.43 L1656.29 1217.43 L1655.71 1217.43 L1655.12 1217.43 L1654.54 1217.43 L1653.95 1217.43 L1653.36 1217.43 L1652.78 1217.43 L1652.19 1217.43 L1651.6 1217.43 L1651.02 1217.43 L1650.43 1217.43 L1649.84 1217.43 L1649.26 1217.43 L1648.67 1217.43 L1648.09 1217.43 L1647.5 1217.43 L1646.91 1217.43 L1646.33 1217.43 L1645.74 1217.43 L1645.15 1217.43 L1644.57 1217.43 L1643.98 1217.43 L1643.39 1217.43 L1642.81 1217.43 L1642.22 1217.43 L1641.63 1217.43 L1641.05 1217.43 L1640.46 1217.43 L1639.88 1217.43 L1639.29 1217.43 L1638.7 1217.43 L1638.12 1217.43 L1637.53 1217.43 L1636.94 1217.43 L1636.36 1217.43 L1635.77 1217.43 L1635.18 1217.43 L1634.6 1217.43 L1634.01 1217.43 L1633.42 1217.43 L1632.84 1217.43 L1632.25 1217.43 L1631.67 1217.43 L1631.08 1217.43 L1630.49 1217.43 L1629.91 1217.43 L1629.32 1217.43 L1628.73 1217.43 L1628.15 1217.43 L1627.56 1217.43 L1626.97 1217.43 L1626.39 1217.43 L1625.8 1217.43 L1625.22 1217.43 L1624.63 1217.43 L1624.04 1217.43 L1623.46 1217.43 L1622.87 1217.43 L1622.28 1217.43 L1621.7 1217.43 L1621.11 1217.43 L1620.52 1217.43 L1619.94 1217.43 L1619.35 1217.43 L1618.76 1217.43 L1618.18 1217.43 L1617.59 1217.43 L1617.01 1217.43 L1616.42 1217.43 L1615.83 1217.43 L1615.25 1217.43 L1614.66 1217.43 L1614.07 1217.43 L1613.49 1217.43 L1612.9 1217.43 L1612.31 1217.43 L1611.73 1217.43 L1611.14 1217.43 L1610.55 1217.43 L1609.97 1217.43 L1609.38 1217.43 L1608.8 1217.43 L1608.21 1217.43 L1607.62 1217.43 L1607.04 1217.43 L1606.45 1217.43 L1605.86 1217.43 L1605.28 1217.43 L1604.69 1217.43 L1604.1 1217.43 L1603.52 1217.43 L1602.93 1217.43 L1602.34 1217.43 L1601.76 1217.43 L1601.17 1217.43 L1600.59 1217.43 L1600 1217.43 L1599.41 1217.43 L1598.83 1217.43 L1598.24 1217.43 L1597.65 1217.43 L1597.07 1217.43 L1596.48 1217.43 L1595.89 1217.43 L1595.31 1217.43 L1594.72 1217.43 L1594.14 1217.43 L1593.55 1217.43 L1592.96 1217.43 L1592.38 1217.43 L1591.79 1217.43 L1591.2 1217.43 L1590.62 1217.43 L1590.03 1217.43 L1589.44 1217.43 L1588.86 1217.43 L1588.27 1217.43 L1587.68 1217.43 L1587.1 1217.43 L1586.51 1217.43 L1585.93 1217.43 L1585.34 1217.43 L1584.75 1217.43 L1584.17 1217.43 L1583.58 1217.43 L1582.99 1217.43 L1582.41 1217.43 L1581.82 1217.43 L1581.23 1217.43 L1580.65 1217.43 L1580.06 1217.43 L1579.47 1217.43 L1578.89 1217.43 L1578.3 1217.43 L1577.72 1217.43 L1577.13 1217.43 L1576.54 1217.43 L1575.96 1217.43 L1575.37 1217.43 L1574.78 1217.43 L1574.2 1217.43 L1573.61 1217.43 L1573.02 1217.43 L1572.44 1217.43 L1571.85 1217.43 L1571.27 1217.43 L1570.68 1217.43 L1570.09 1217.43 L1569.51 1217.43 L1568.92 1217.43 L1568.33 1217.43 L1567.75 1217.43 L1567.16 1217.43 L1566.57 1217.43 L1565.99 1217.43 L1565.4 1217.43 L1564.81 1217.43 L1564.23 1217.43 L1563.64 1217.43 L1563.06 1217.43 L1562.47 1217.43 L1561.88 1217.43 L1561.3 1217.43 L1560.71 1217.43 L1560.12 1217.43 L1559.54 1217.43 L1558.95 1217.43 L1558.36 1217.43 L1557.78 1217.43 L1557.19 1217.43 L1556.6 1217.43 L1556.02 1217.43 L1555.43 1217.43 L1554.85 1217.43 L1554.26 1217.43 L1553.67 1217.43 L1553.09 1217.43 L1552.5 1217.43 L1551.91 1217.43 L1551.33 1217.43 L1550.74 1217.43 L1550.15 1217.43 L1549.57 1217.43 L1548.98 1217.43 L1548.4 1217.43 L1547.81 1217.43 L1547.22 1217.43 L1546.64 1217.43 L1546.05 1217.43 L1545.46 1217.43 L1544.88 1217.43 L1544.29 1217.43 L1543.7 1217.43 L1543.12 1217.43 L1542.53 1217.43 L1541.94 1217.43 L1541.36 1217.43 L1540.77 1217.43 L1540.19 1217.43 L1539.6 1217.43 L1539.01 1217.43 L1538.43 1217.43 L1537.84 1217.43 L1537.25 1217.43 L1536.67 1217.43 L1536.08 1217.43 L1535.49 1217.43 L1534.91 1217.43 L1534.32 1217.43 L1533.73 1217.43 L1533.15 1217.43 L1532.56 1217.43 L1531.98 1217.43 L1531.39 1217.43 L1530.8 1217.43 L1530.22 1217.43 L1529.63 1217.43 L1529.04 1217.43 L1528.46 1217.43 L1527.87 1217.43 L1527.28 1217.43 L1526.7 1217.43 L1526.11 1217.43 L1525.52 1217.43 L1524.94 1217.43 L1524.35 1217.43 L1523.77 1217.43 L1523.18 1217.43 L1522.59 1217.43 L1522.01 1217.43 L1521.42 1217.43 L1520.83 1217.43 L1520.25 1217.43 L1519.66 1217.43 L1519.07 1217.43 L1518.49 1217.43 L1517.9 1217.43 L1517.32 1217.43 L1516.73 1217.43 L1516.14 1217.43 L1515.56 1217.43 L1514.97 1217.43 L1514.38 1217.43 L1513.8 1217.43 L1513.21 1217.43 L1512.62 1217.43 L1512.04 1217.43 L1511.45 1217.43 L1510.86 1217.43 L1510.28 1217.43 L1509.69 1217.43 L1509.11 1217.43 L1508.52 1217.43 L1507.93 1217.43 L1507.35 1217.43 L1506.76 1217.43 L1506.17 1217.43 L1505.59 1217.43 L1505 1217.43 L1504.41 1217.43 L1503.83 1217.43 L1503.24 1217.43 L1502.65 1217.43 L1502.07 1217.43 L1501.48 1217.43 L1500.9 1217.43 L1500.31 1217.43 L1499.72 1217.43 L1499.14 1217.43 L1498.55 1217.43 L1497.96 1217.43 L1497.38 1217.43 L1496.79 1217.43 L1496.2 1217.43 L1495.62 1217.43 L1495.03 1217.43 L1494.45 1217.43 L1493.86 1217.43 L1493.27 1217.43 L1492.69 1217.43 L1492.1 1217.43 L1491.51 1217.43 L1490.93 1217.43 L1490.34 1217.43 L1489.75 1217.43 L1489.17 1217.43 L1488.58 1217.43 L1487.99 1217.43 L1487.41 1217.43 L1486.82 1217.43 L1486.24 1217.43 L1485.65 1217.43 L1485.06 1217.43 L1484.48 1217.43 L1483.89 1217.43 L1483.3 1217.43 L1482.72 1217.43 L1482.13 1217.43 L1481.54 1217.43 L1480.96 1217.43 L1480.37 1217.43 L1479.78 1217.43 L1479.2 1217.43 L1478.61 1217.43 L1478.03 1217.43 L1477.44 1217.43 L1476.85 1217.43 L1476.27 1217.43 L1475.68 1217.43 L1475.09 1217.43 L1474.51 1217.43 L1473.92 1217.43 L1473.33 1217.43 L1472.75 1217.43 L1472.16 1217.43 L1471.57 1217.43 L1470.99 1217.43 L1470.4 1217.43 L1469.82 1217.43 L1469.23 1217.43 L1468.64 1217.43 L1468.06 1217.43 L1467.47 1217.43 L1466.88 1217.43 L1466.3 1217.43 L1465.71 1217.43 L1465.12 1217.43 L1464.54 1217.43 L1463.95 1217.43 L1463.37 1217.43 L1462.78 1217.43 L1462.19 1217.43 L1461.61 1217.43 L1461.02 1217.43 L1460.43 1217.43 L1459.85 1217.43 L1459.26 1217.43 L1458.67 1217.43 L1458.09 1217.43 L1457.5 1217.43 L1456.91 1217.43 L1456.33 1217.43 L1455.74 1217.43 L1455.16 1217.43 L1454.57 1217.43 L1453.98 1217.43 L1453.4 1217.43 L1452.81 1217.43 L1452.22 1217.43 L1451.64 1217.43 L1451.05 1217.43 L1450.46 1217.43 L1449.88 1217.43 L1449.29 1217.43 L1448.7 1217.43 L1448.12 1217.43 L1447.53 1217.43 L1446.95 1217.43 L1446.36 1217.43 L1445.77 1217.43 L1445.19 1217.43 L1444.6 1217.43 L1444.01 1217.43 L1443.43 1217.43 L1442.84 1217.43 L1442.25 1217.43 L1441.67 1217.43 L1441.08 1217.43 L1440.5 1217.43 L1439.91 1217.43 L1439.32 1217.43 L1438.74 1217.43 L1438.15 1217.43 L1437.56 1217.43 L1436.98 1217.43 L1436.39 1217.43 L1435.8 1217.43 L1435.22 1217.43 L1434.63 1217.43 L1434.04 1217.43 L1433.46 1217.43 L1432.87 1217.43 L1432.29 1217.43 L1431.7 1217.43 L1431.11 1217.43 L1430.53 1217.43 L1429.94 1217.43 L1429.35 1217.43 L1428.77 1217.43 L1428.18 1217.43 L1427.59 1217.43 L1427.01 1217.43 L1426.42 1217.43 L1425.83 1217.43 L1425.25 1217.43 L1424.66 1217.43 L1424.08 1217.43 L1423.49 1217.43 L1422.9 1217.43 L1422.32 1217.43 L1421.73 1217.43 L1421.14 1217.43 L1420.56 1217.43 L1419.97 1217.43 L1419.38 1217.43 L1418.8 1217.43 L1418.21 1217.43 L1417.63 1217.43 L1417.04 1217.43 L1416.45 1217.43 L1415.87 1217.43 L1415.28 1217.43 L1414.69 1217.43 L1414.11 1217.43 L1413.52 1217.43 L1412.93 1217.43 L1412.35 1217.43 L1411.76 1217.43 L1411.17 1217.43 L1410.59 1217.43 L1410 1217.43 L1409.42 1217.43 L1408.83 1217.43 L1408.24 1217.43 L1407.66 1217.43 L1407.07 1217.43 L1406.48 1217.43 L1405.9 1217.43 L1405.31 1217.43 L1404.72 1217.43 L1404.14 1217.43 L1403.55 1217.43 L1402.96 1217.43 L1402.38 1217.43 L1401.79 1217.43 L1401.21 1217.43 L1400.62 1217.43 L1400.03 1217.43 L1399.45 1217.43 L1398.86 1217.43 L1398.27 1217.43 L1397.69 1217.43 L1397.1 1217.43 L1396.51 1217.43 L1395.93 1217.43 L1395.34 1217.43 L1394.75 1217.43 L1394.17 1217.43 L1393.58 1217.43 L1393 1217.43 L1392.41 1217.43 L1391.82 1217.43 L1391.24 1217.43 L1390.65 1217.43 L1390.06 1217.43 L1389.48 1217.43 L1388.89 1217.43 L1388.3 1217.43 L1387.72 1217.43 L1387.13 1217.43 L1386.55 1217.43 L1385.96 1217.43 L1385.37 1217.43 L1384.79 1217.43 L1384.2 1217.43 L1383.61 1217.43 L1383.03 1217.43 L1382.44 1217.43 L1381.85 1217.43 L1381.27 1217.43 L1380.68 1217.43 L1380.09 1217.43 L1379.51 1217.43 L1378.92 1217.43 L1378.34 1217.43 L1377.75 1217.43 L1377.16 1217.43 L1376.58 1217.43 L1375.99 1217.43 L1375.4 1217.43 L1374.82 1217.43 L1374.23 1217.43 L1373.64 1217.43 L1373.06 1217.43 L1372.47 1217.43 L1371.88 1217.43 L1371.3 1217.43 L1370.71 1217.43 L1370.13 1217.43 L1369.54 1217.43 L1368.95 1217.43 L1368.37 1217.43 L1367.78 1217.43 L1367.19 1217.43 L1366.61 1217.43 L1366.02 1217.43 L1365.43 1217.43 L1364.85 1217.43 L1364.26 1217.43 L1363.68 1217.43 L1363.09 1217.43 L1362.5 1217.43 L1361.92 1217.43 L1361.33 1217.43 L1360.74 1217.43 L1360.16 1217.43 L1359.57 1217.43 L1358.98 1217.43 L1358.4 1217.43 L1357.81 1217.43 L1357.22 1217.43 L1356.64 1217.43 L1356.05 1217.43 L1355.47 1217.43 L1354.88 1217.43 L1354.29 1217.43 L1353.71 1217.43 L1353.12 1217.43 L1352.53 1217.43 L1351.95 1217.43 L1351.36 1217.43 L1350.77 1217.43 L1350.19 1217.43 L1349.6 1217.43 L1349.01 1217.43 L1348.43 1217.43 L1347.84 1217.43 L1347.26 1217.43 L1346.67 1217.43 L1346.08 1217.43 L1345.5 1217.43 L1344.91 1217.43 L1344.32 1217.43 L1343.74 1217.43 L1343.15 1217.43 L1342.56 1217.43 L1341.98 1217.43 L1341.39 1217.43 L1340.8 1217.43 L1340.22 1217.43 L1339.63 1217.43 L1339.05 1217.43 L1338.46 1217.43 L1337.87 1217.43 L1337.29 1217.43 L1336.7 1217.43 L1336.11 1217.43 L1335.53 1217.43 L1334.94 1217.43 L1334.35 1217.43 L1333.77 1217.43 L1333.18 1217.43 L1332.6 1217.43 L1332.01 1217.43 L1331.42 1217.43 L1330.84 1217.43 L1330.25 1217.43 L1329.66 1217.43 L1329.08 1217.43 L1328.49 1217.43 L1327.9 1217.43 L1327.32 1217.43 L1326.73 1217.43 L1326.14 1217.43 L1325.56 1217.43 L1324.97 1217.43 L1324.39 1217.43 L1323.8 1217.43 L1323.21 1217.43 L1322.63 1217.43 L1322.04 1217.43 L1321.45 1217.43 L1320.87 1217.43 L1320.28 1217.43 L1319.69 1217.43 L1319.11 1217.43 L1318.52 1217.43 L1317.93 1217.43 L1317.35 1217.43 L1316.76 1217.43 L1316.18 1217.43 L1315.59 1217.43 L1315 1217.43 L1314.42 1217.43 L1313.83 1217.43 L1313.24 1217.43 L1312.66 1217.43 L1312.07 1217.43 L1311.48 1217.43 L1310.9 1217.43 L1310.31 1217.43 L1309.73 1217.43 L1309.14 1217.43 L1308.55 1217.43 L1307.97 1217.43 L1307.38 1217.43 L1306.79 1217.43 L1306.21 1217.43 L1305.62 1217.43 L1305.03 1217.43 L1304.45 1217.43 L1303.86 1217.43 L1303.27 1217.43 L1302.69 1217.43 L1302.1 1217.43 L1301.52 1217.43 L1300.93 1217.43 L1300.34 1217.43 L1299.76 1217.43 L1299.17 1217.43 L1298.58 1217.43 L1298 1217.43 L1297.41 1217.43 L1296.82 1217.43 L1296.24 1217.43 L1295.65 1217.43 L1295.06 1217.43 L1294.48 1217.43 L1293.89 1217.43 L1293.31 1217.43 L1292.72 1217.43 L1292.13 1217.43 L1291.55 1217.43 L1290.96 1217.43 L1290.37 1217.43 L1289.79 1217.43 L1289.2 1217.43 L1288.61 1217.43 L1288.03 1217.43 L1287.44 1217.43 L1286.86 1217.43 L1286.27 1217.43 L1285.68 1217.43 L1285.1 1217.43 L1284.51 1217.43 L1283.92 1217.43 L1283.34 1217.43 L1282.75 1217.43 L1282.16 1217.43 L1281.58 1217.43 L1280.99 1217.43 L1280.4 1217.43 L1279.82 1217.43 L1279.23 1217.43 L1278.65 1217.43 L1278.06 1217.43 L1277.47 1217.43 L1276.89 1217.43 L1276.3 1217.43 L1275.71 1217.43 L1275.13 1217.43 L1274.54 1217.43 L1273.95 1217.43 L1273.37 1217.43 L1272.78 1217.43 L1272.19 1217.43 L1271.61 1217.43 L1271.02 1217.43 L1270.44 1217.43 L1269.85 1217.43 L1269.26 1217.43 L1268.68 1217.43 L1268.09 1217.43 L1267.5 1217.43 L1266.92 1217.43 L1266.33 1217.43 L1265.74 1217.43 L1265.16 1217.43 L1264.57 1217.43 L1263.98 1217.43 L1263.4 1217.43 L1262.81 1217.43 L1262.23 1217.43 L1261.64 1217.43 L1261.05 1217.43 L1260.47 1217.43 L1259.88 1217.43 L1259.29 1217.43 L1258.71 1217.43 L1258.12 1217.43 L1257.53 1217.43 L1256.95 1217.43 L1256.36 1217.43 L1255.78 1217.43 L1255.19 1217.43 L1254.6 1217.43 L1254.02 1217.43 L1253.43 1217.43 L1252.84 1217.43 L1252.26 1217.43 L1251.67 1217.43 L1251.08 1217.43 L1250.5 1217.43 L1249.91 1217.43 L1249.32 1217.43 L1248.74 1217.43 L1248.15 1217.43 L1247.57 1217.43 L1246.98 1217.43 L1246.39 1217.43 L1245.81 1217.43 L1245.22 1217.43 L1244.63 1217.43 L1244.05 1217.43 L1243.46 1217.43 L1242.87 1217.43 L1242.29 1217.43 L1241.7 1217.43 L1241.11 1217.43 L1240.53 1217.43 L1239.94 1217.43 L1239.36 1217.43 L1238.77 1217.43 L1238.18 1217.43 L1237.6 1217.43 L1237.01 1217.43 L1236.42 1217.43 L1235.84 1217.43 L1235.25 1217.43 L1234.66 1217.43 L1234.08 1217.43 L1233.49 1217.43 L1232.91 1217.43 L1232.32 1217.43 L1231.73 1217.43 L1231.15 1217.43 L1230.56 1217.43 L1229.97 1217.43 L1229.39 1217.43 L1228.8 1217.43 L1228.21 1217.43 L1227.63 1217.43 L1227.04 1217.43 L1226.45 1217.43 L1225.87 1217.43 L1225.28 1217.43 L1224.7 1217.43 L1224.11 1217.43 L1223.52 1217.43 L1222.94 1217.43 L1222.35 1217.43 L1221.76 1217.43 L1221.18 1217.43 L1220.59 1217.43 L1220 1217.43 L1219.42 1217.43 L1218.83 1217.43 L1218.24 1217.43 L1217.66 1217.43 L1217.07 1217.43 L1216.49 1217.43 L1215.9 1217.43 L1215.31 1217.43 L1214.73 1217.43 L1214.14 1217.43 L1213.55 1217.43 L1212.97 1217.43 L1212.38 1217.43 L1211.79 1217.43 L1211.21 1217.43 L1210.62 1217.43 L1210.03 1217.43 L1209.45 1217.43 L1208.86 1217.43 L1208.28 1217.43 L1207.69 1217.43 L1207.1 1217.43 L1206.52 1217.43 L1205.93 1217.43 L1205.34 1217.43 L1204.76 1217.43 L1204.17 1217.43 L1203.58 1217.43 L1203 1217.43 L1202.41 1217.43 L1201.83 1217.43 L1201.24 1217.43 L1200.65 1217.43 L1200.07 1217.43 L1199.48 1217.43 L1198.89 1217.43 L1198.31 1217.43 L1197.72 1217.43 L1197.13 1217.43 L1196.55 1217.43 L1195.96 1217.43 L1195.37 1217.43 L1194.79 1217.43 L1194.2 1217.43 L1193.62 1217.43 L1193.03 1217.43 L1192.44 1217.43 L1191.86 1217.43 L1191.27 1217.43 L1190.68 1217.43 L1190.1 1217.43 L1189.51 1217.43 L1188.92 1217.43 L1188.34 1217.43 L1187.75 1217.43 L1187.16 1217.43 L1186.58 1217.43 L1185.99 1217.43 L1185.41 1217.43 L1184.82 1217.43 L1184.23 1217.43 L1183.65 1217.43 L1183.06 1217.43 L1182.47 1217.43 L1181.89 1217.43 L1181.3 1217.43 L1180.71 1217.43 L1180.13 1217.43 L1179.54 1217.43 L1178.96 1217.43 L1178.37 1217.43 L1177.78 1217.43 L1177.2 1217.43 L1176.61 1217.43 L1176.02 1217.43 L1175.44 1217.43 L1174.85 1217.43 L1174.26 1217.43 L1173.68 1217.43 L1173.09 1217.43 L1172.5 1217.43 L1171.92 1217.43 L1171.33 1217.43 L1170.75 1217.43 L1170.16 1217.43 L1169.57 1217.43 L1168.99 1217.43 L1168.4 1217.43 L1167.81 1217.43 L1167.23 1217.43 L1166.64 1217.43 L1166.05 1217.43 L1165.47 1217.43 L1164.88 1217.43 L1164.29 1217.43 L1163.71 1217.43 L1163.12 1217.43 L1162.54 1217.43 L1161.95 1217.43 L1161.36 1217.43 L1160.78 1217.43 L1160.19 1217.43 L1159.6 1217.43 L1159.02 1217.43 L1158.43 1217.43 L1157.84 1217.43 L1157.26 1217.43 L1156.67 1217.43 L1156.09 1217.43 L1155.5 1217.43 L1154.91 1217.43 L1154.33 1217.43 L1153.74 1217.43 L1153.15 1217.43 L1152.57 1217.43 L1151.98 1217.43 L1151.39 1217.43 L1150.81 1217.43 L1150.22 1217.43 L1149.63 1217.43 L1149.05 1217.43 L1148.46 1217.43 L1147.88 1217.43 L1147.29 1217.43 L1146.7 1217.43 L1146.12 1217.43 L1145.53 1217.43 L1144.94 1217.43 L1144.36 1217.43 L1143.77 1217.43 L1143.18 1217.43 L1142.6 1217.43 L1142.01 1217.43 L1141.42 1217.43 L1140.84 1217.43 L1140.25 1217.43 L1139.67 1217.43 L1139.08 1217.43 L1138.49 1217.43 L1137.91 1217.43 L1137.32 1217.43 L1136.73 1217.43 L1136.15 1217.43 L1135.56 1217.43 L1134.97 1217.43 L1134.39 1217.43 L1133.8 1217.43 L1133.21 1217.43 L1132.63 1217.43 L1132.04 1217.43 L1131.46 1217.43 L1130.87 1217.43 L1130.28 1217.43 L1129.7 1217.43 L1129.11 1217.43 L1128.52 1217.43 L1127.94 1217.43 L1127.35 1217.43 L1126.76 1217.43 L1126.18 1217.43 L1125.59 1217.43 L1125.01 1217.43 L1124.42 1217.43 L1123.83 1217.43 L1123.25 1217.43 L1122.66 1217.43 L1122.07 1217.43 L1121.49 1217.43 L1120.9 1217.43 L1120.31 1217.43 L1119.73 1217.43 L1119.14 1217.43 L1118.55 1217.43 L1117.97 1217.43 L1117.38 1217.43 L1116.8 1217.43 L1116.21 1217.43 L1115.62 1217.43 L1115.04 1217.43 L1114.45 1217.43 L1113.86 1217.43 L1113.28 1217.43 L1112.69 1217.43 L1112.1 1217.43 L1111.52 1217.43 L1110.93 1217.43 L1110.34 1217.43 L1109.76 1217.43 L1109.17 1217.43 L1108.59 1217.43 L1108 1217.43 L1107.41 1217.43 L1106.83 1217.43 L1106.24 1217.43 L1105.65 1217.43 L1105.07 1217.43 L1104.48 1217.43 L1103.89 1217.43 L1103.31 1217.43 L1102.72 1217.43 L1102.14 1217.43 L1101.55 1217.43 L1100.96 1217.43 L1100.38 1217.43 L1099.79 1217.43 L1099.2 1217.43 L1098.62 1217.43 L1098.03 1217.43 L1097.44 1217.43 L1096.86 1217.43 L1096.27 1217.43 L1095.68 1217.43 L1095.1 1217.43 L1094.51 1217.43 L1093.93 1217.43 L1093.34 1217.43 L1092.75 1217.43 L1092.17 1217.43 L1091.58 1217.43 L1090.99 1217.43 L1090.41 1217.43 L1089.82 1217.43 L1089.23 1217.43 L1088.65 1217.43 L1088.06 1217.43 L1087.47 1217.43 L1086.89 1217.43 L1086.3 1217.43 L1085.72 1217.43 L1085.13 1217.43 L1084.54 1217.43 L1083.96 1217.43 L1083.37 1217.43 L1082.78 1217.43 L1082.2 1217.43 L1081.61 1217.43 L1081.02 1217.43 L1080.44 1217.43 L1079.85 1217.43 L1079.26 1217.43 L1078.68 1217.43 L1078.09 1217.43 L1077.51 1217.43 L1076.92 1217.43 L1076.33 1217.43 L1075.75 1217.43 L1075.16 1217.43 L1074.57 1217.43 L1073.99 1217.43 L1073.4 1217.43 L1072.81 1217.43 L1072.23 1217.43 L1071.64 1217.43 L1071.06 1217.43 L1070.47 1217.43 L1069.88 1217.43 L1069.3 1217.43 L1068.71 1217.43 L1068.12 1217.43 L1067.54 1217.43 L1066.95 1217.43 L1066.36 1217.43 L1065.78 1217.43 L1065.19 1217.43 L1064.6 1217.43 L1064.02 1217.43 L1063.43 1217.43 L1062.85 1217.43 L1062.26 1217.43 L1061.67 1217.43 L1061.09 1217.43 L1060.5 1217.43 L1059.91 1217.43 L1059.33 1217.43 L1058.74 1217.43 L1058.15 1217.43 L1057.57 1217.43 L1056.98 1217.43 L1056.39 1217.43 L1055.81 1217.43 L1055.22 1217.43 L1054.64 1217.43 L1054.05 1217.43 L1053.46 1217.43 L1052.88 1217.43 L1052.29 1217.43 L1051.7 1217.43 L1051.12 1217.43 L1050.53 1217.43 L1049.94 1217.43 L1049.36 1217.43 L1048.77 1217.43 L1048.19 1217.43 L1047.6 1217.43 L1047.01 1217.43 L1046.43 1217.43 L1045.84 1217.43 L1045.25 1217.43 L1044.67 1217.43 L1044.08 1217.43 L1043.49 1217.43 L1042.91 1217.43 L1042.32 1217.43 L1041.73 1217.43 L1041.15 1217.43 L1040.56 1217.43 L1039.98 1217.43 L1039.39 1217.43 L1038.8 1217.43 L1038.22 1217.43 L1037.63 1217.43 L1037.04 1217.43 L1036.46 1217.43 L1035.87 1217.43 L1035.28 1217.43 L1034.7 1217.43 L1034.11 1217.43 L1033.52 1217.43 L1032.94 1217.43 L1032.35 1217.43 L1031.77 1217.43 L1031.18 1217.43 L1030.59 1217.43 L1030.01 1217.43 L1029.42 1217.43 L1028.83 1217.43 L1028.25 1217.43 L1027.66 1217.43 L1027.07 1217.43 L1026.49 1217.43 L1025.9 1217.43 L1025.32 1217.43 L1024.73 1217.43 L1024.14 1217.43 L1023.56 1217.43 L1022.97 1217.43 L1022.38 1217.43 L1021.8 1217.43 L1021.21 1217.43 L1020.62 1217.43 L1020.04 1217.43 L1019.45 1217.43 L1018.86 1217.43 L1018.28 1217.43 L1017.69 1217.43 L1017.11 1217.43 L1016.52 1217.43 L1015.93 1217.43 L1015.35 1217.43 L1014.76 1217.43 L1014.17 1217.43 L1013.59 1217.43 L1013 1217.43 L1012.41 1217.43 L1011.83 1217.43 L1011.24 1217.43 L1010.65 1217.43 L1010.07 1217.43 L1009.48 1217.43 L1008.9 1217.43 L1008.31 1217.43 L1007.72 1217.43 L1007.14 1217.43 L1006.55 1217.43 L1005.96 1217.43 L1005.38 1217.43 L1004.79 1217.43 L1004.2 1217.43 L1003.62 1217.43 L1003.03 1217.43 L1002.44 1217.43 L1001.86 1217.43 L1001.27 1217.43 L1000.69 1217.43 L1000.1 1217.43 L999.513 1217.43 L998.926 1217.43 L998.34 1217.43 L997.754 1217.43 L997.167 1217.43 L996.581 1217.43 L995.994 1217.43 L995.408 1217.43 L994.822 1217.43 L994.235 1217.43 L993.649 1217.43 L993.062 1217.43 L992.476 1217.43 L991.889 1217.43 L991.303 1217.43 L990.717 1217.43 L990.13 1217.43 L989.544 1217.43 L988.957 1217.43 L988.371 1217.43 L987.785 1217.43 L987.198 1217.43 L986.612 1217.43 L986.025 1217.43  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1217.52 986.612,1217.52 987.198,1217.52 987.785,1217.52 988.371,1217.52 988.957,1217.52 989.544,1217.52 990.13,1217.52 990.717,1217.52 991.303,1217.52 991.889,1217.52 992.476,1217.52 993.062,1217.52 993.649,1217.52 994.235,1217.52 994.822,1217.52 995.408,1217.52 995.994,1217.52 996.581,1217.52 997.167,1217.52 997.754,1217.52 998.34,1217.52 998.926,1217.52 999.513,1217.52 1000.1,1217.52 1000.69,1217.52 1001.27,1217.52 1001.86,1217.52 1002.44,1217.52 1003.03,1217.52 1003.62,1217.52 1004.2,1217.52 1004.79,1217.52 1005.38,1217.52 1005.96,1217.52 1006.55,1217.52 1007.14,1217.52 1007.72,1217.52 1008.31,1217.52 1008.9,1217.52 1009.48,1217.52 1010.07,1217.52 1010.65,1217.52 1011.24,1217.52 1011.83,1217.52 1012.41,1217.52 1013,1217.52 1013.59,1217.52 1014.17,1217.52 1014.76,1217.52 1015.35,1217.52 1015.93,1217.52 1016.52,1217.52 1017.11,1217.52 1017.69,1217.52 1018.28,1217.52 1018.86,1217.52 1019.45,1217.52 1020.04,1217.52 1020.62,1217.52 1021.21,1217.52 1021.8,1217.52 1022.38,1217.52 1022.97,1217.52 1023.56,1217.52 1024.14,1217.52 1024.73,1217.52 1025.32,1217.52 1025.9,1217.52 1026.49,1217.52 1027.07,1217.52 1027.66,1217.52 1028.25,1217.52 1028.83,1217.52 1029.42,1217.52 1030.01,1217.52 1030.59,1217.52 1031.18,1217.52 1031.77,1217.52 1032.35,1217.52 1032.94,1217.52 1033.52,1217.52 1034.11,1217.52 1034.7,1217.52 1035.28,1217.52 1035.87,1217.52 1036.46,1217.52 1037.04,1217.52 1037.63,1217.52 1038.22,1217.52 1038.8,1217.52 1039.39,1217.52 1039.98,1217.52 1040.56,1217.52 1041.15,1217.52 1041.73,1217.52 1042.32,1217.52 1042.91,1217.52 1043.49,1217.52 1044.08,1217.52 1044.67,1217.52 1045.25,1217.52 1045.84,1217.52 1046.43,1217.52 1047.01,1217.52 1047.6,1217.52 1048.19,1217.52 1048.77,1217.52 1049.36,1217.52 1049.94,1217.52 1050.53,1217.52 1051.12,1217.52 1051.7,1217.52 1052.29,1217.52 1052.88,1217.52 1053.46,1217.52 1054.05,1217.52 1054.64,1217.52 1055.22,1217.52 1055.81,1217.52 1056.39,1217.52 1056.98,1217.52 1057.57,1217.52 1058.15,1217.52 1058.74,1217.52 1059.33,1217.52 1059.91,1217.52 1060.5,1217.52 1061.09,1217.52 1061.67,1217.52 1062.26,1217.52 1062.85,1217.52 1063.43,1217.52 1064.02,1217.52 1064.6,1217.52 1065.19,1217.52 1065.78,1217.52 1066.36,1217.52 1066.95,1217.52 1067.54,1217.52 1068.12,1217.52 1068.71,1217.52 1069.3,1217.52 1069.88,1217.52 1070.47,1217.52 1071.06,1217.52 1071.64,1217.52 1072.23,1217.52 1072.81,1217.52 1073.4,1217.52 1073.99,1217.52 1074.57,1217.52 1075.16,1217.52 1075.75,1217.52 1076.33,1217.52 1076.92,1217.52 1077.51,1217.52 1078.09,1217.52 1078.68,1217.52 1079.26,1217.52 1079.85,1217.52 1080.44,1217.52 1081.02,1217.52 1081.61,1217.52 1082.2,1217.52 1082.78,1217.52 1083.37,1217.52 1083.96,1217.52 1084.54,1217.52 1085.13,1217.52 1085.72,1217.52 1086.3,1217.52 1086.89,1217.52 1087.47,1217.52 1088.06,1217.52 1088.65,1217.52 1089.23,1217.52 1089.82,1217.52 1090.41,1217.52 1090.99,1217.52 1091.58,1217.52 1092.17,1217.52 1092.75,1217.52 1093.34,1217.52 1093.93,1217.52 1094.51,1217.52 1095.1,1217.52 1095.68,1217.52 1096.27,1217.52 1096.86,1217.52 1097.44,1217.52 1098.03,1217.52 1098.62,1217.52 1099.2,1217.52 1099.79,1217.52 1100.38,1217.52 1100.96,1217.52 1101.55,1217.52 1102.14,1217.52 1102.72,1217.52 1103.31,1217.52 1103.89,1217.52 1104.48,1217.52 1105.07,1217.52 1105.65,1217.52 1106.24,1217.52 1106.83,1217.52 1107.41,1217.52 1108,1217.52 1108.59,1217.52 1109.17,1217.52 1109.76,1217.52 1110.34,1217.52 1110.93,1217.52 1111.52,1217.52 1112.1,1217.52 1112.69,1217.52 1113.28,1217.52 1113.86,1217.52 1114.45,1217.52 1115.04,1217.52 1115.62,1217.52 1116.21,1217.52 1116.8,1217.52 1117.38,1217.52 1117.97,1217.52 1118.55,1217.52 1119.14,1217.52 1119.73,1217.52 1120.31,1217.52 1120.9,1217.52 1121.49,1217.52 1122.07,1217.52 1122.66,1217.52 1123.25,1217.52 1123.83,1217.52 1124.42,1217.52 1125.01,1217.52 1125.59,1217.52 1126.18,1217.52 1126.76,1217.52 1127.35,1217.52 1127.94,1217.52 1128.52,1217.52 1129.11,1217.52 1129.7,1217.52 1130.28,1217.52 1130.87,1217.52 1131.46,1217.52 1132.04,1217.52 1132.63,1217.52 1133.21,1217.52 1133.8,1217.52 1134.39,1217.52 1134.97,1217.52 1135.56,1217.52 1136.15,1217.52 1136.73,1217.52 1137.32,1217.52 1137.91,1217.52 1138.49,1217.52 1139.08,1217.52 1139.67,1217.52 1140.25,1217.52 1140.84,1217.52 1141.42,1217.52 1142.01,1217.52 1142.6,1217.52 1143.18,1217.52 1143.77,1217.52 1144.36,1217.52 1144.94,1217.52 1145.53,1217.52 1146.12,1217.52 1146.7,1217.52 1147.29,1217.52 1147.88,1217.52 1148.46,1217.52 1149.05,1217.52 1149.63,1217.52 1150.22,1217.52 1150.81,1217.52 1151.39,1217.52 1151.98,1217.52 1152.57,1217.52 1153.15,1217.52 1153.74,1217.52 1154.33,1217.52 1154.91,1217.52 1155.5,1217.52 1156.09,1217.52 1156.67,1217.52 1157.26,1217.52 1157.84,1217.52 1158.43,1217.52 1159.02,1217.52 1159.6,1217.52 1160.19,1217.52 1160.78,1217.52 1161.36,1217.52 1161.95,1217.52 1162.54,1217.52 1163.12,1217.52 1163.71,1217.52 1164.29,1217.52 1164.88,1217.52 1165.47,1217.52 1166.05,1217.52 1166.64,1217.52 1167.23,1217.52 1167.81,1217.52 1168.4,1217.52 1168.99,1217.52 1169.57,1217.52 1170.16,1217.52 1170.75,1217.52 1171.33,1217.52 1171.92,1217.52 1172.5,1217.52 1173.09,1217.52 1173.68,1217.52 1174.26,1217.52 1174.85,1217.52 1175.44,1217.52 1176.02,1217.52 1176.61,1217.52 1177.2,1217.52 1177.78,1217.52 1178.37,1217.52 1178.96,1217.52 1179.54,1217.52 1180.13,1217.52 1180.71,1217.52 1181.3,1217.52 1181.89,1217.52 1182.47,1217.52 1183.06,1217.52 1183.65,1217.52 1184.23,1217.52 1184.82,1217.52 1185.41,1217.52 1185.99,1217.52 1186.58,1217.52 1187.16,1217.52 1187.75,1217.52 1188.34,1217.52 1188.92,1217.52 1189.51,1217.52 1190.1,1217.52 1190.68,1217.52 1191.27,1217.52 1191.86,1217.52 1192.44,1217.52 1193.03,1217.52 1193.62,1217.52 1194.2,1217.52 1194.79,1217.52 1195.37,1217.52 1195.96,1217.52 1196.55,1217.52 1197.13,1217.52 1197.72,1217.52 1198.31,1217.52 1198.89,1217.52 1199.48,1217.52 1200.07,1217.52 1200.65,1217.52 1201.24,1217.52 1201.83,1217.52 1202.41,1217.52 1203,1217.52 1203.58,1217.52 1204.17,1217.52 1204.76,1217.52 1205.34,1217.52 1205.93,1217.52 1206.52,1217.52 1207.1,1217.52 1207.69,1217.52 1208.28,1217.52 1208.86,1217.52 1209.45,1217.52 1210.03,1217.52 1210.62,1217.52 1211.21,1217.52 1211.79,1217.52 1212.38,1217.52 1212.97,1217.52 1213.55,1217.52 1214.14,1217.52 1214.73,1217.52 1215.31,1217.52 1215.9,1217.52 1216.49,1217.52 1217.07,1217.52 1217.66,1217.52 1218.24,1217.52 1218.83,1217.52 1219.42,1217.52 1220,1217.52 1220.59,1217.52 1221.18,1217.52 1221.76,1217.52 1222.35,1217.52 1222.94,1217.52 1223.52,1217.52 1224.11,1217.52 1224.7,1217.52 1225.28,1217.52 1225.87,1217.52 1226.45,1217.52 1227.04,1217.52 1227.63,1217.52 1228.21,1217.52 1228.8,1217.52 1229.39,1217.52 1229.97,1217.52 1230.56,1217.52 1231.15,1217.52 1231.73,1217.52 1232.32,1217.52 1232.91,1217.52 1233.49,1217.52 1234.08,1217.52 1234.66,1217.52 1235.25,1217.52 1235.84,1217.52 1236.42,1217.52 1237.01,1217.52 1237.6,1217.52 1238.18,1217.52 1238.77,1217.52 1239.36,1217.52 1239.94,1217.52 1240.53,1217.52 1241.11,1217.52 1241.7,1217.52 1242.29,1217.52 1242.87,1217.52 1243.46,1217.52 1244.05,1217.52 1244.63,1217.52 1245.22,1217.52 1245.81,1217.52 1246.39,1217.52 1246.98,1217.52 1247.57,1217.52 1248.15,1217.52 1248.74,1217.52 1249.32,1217.52 1249.91,1217.52 1250.5,1217.52 1251.08,1217.52 1251.67,1217.52 1252.26,1217.52 1252.84,1217.52 1253.43,1217.52 1254.02,1217.52 1254.6,1217.52 1255.19,1217.52 1255.78,1217.52 1256.36,1217.52 1256.95,1217.52 1257.53,1217.52 1258.12,1217.52 1258.71,1217.52 1259.29,1217.52 1259.88,1217.52 1260.47,1217.52 1261.05,1217.52 1261.64,1217.52 1262.23,1217.52 1262.81,1217.52 1263.4,1217.52 1263.98,1217.52 1264.57,1217.52 1265.16,1217.52 1265.74,1217.52 1266.33,1217.52 1266.92,1217.52 1267.5,1217.52 1268.09,1217.52 1268.68,1217.52 1269.26,1217.52 1269.85,1217.52 1270.44,1217.52 1271.02,1217.52 1271.61,1217.52 1272.19,1217.52 1272.78,1217.52 1273.37,1217.52 1273.95,1217.52 1274.54,1217.52 1275.13,1217.52 1275.71,1217.52 1276.3,1217.52 1276.89,1217.52 1277.47,1217.52 1278.06,1217.52 1278.65,1217.52 1279.23,1217.52 1279.82,1217.52 1280.4,1217.52 1280.99,1217.52 1281.58,1217.52 1282.16,1217.52 1282.75,1217.52 1283.34,1217.52 1283.92,1217.52 1284.51,1217.52 1285.1,1217.52 1285.68,1217.52 1286.27,1217.52 1286.86,1217.52 1287.44,1217.52 1288.03,1217.52 1288.61,1217.52 1289.2,1217.52 1289.79,1217.52 1290.37,1217.52 1290.96,1217.52 1291.55,1217.52 1292.13,1217.52 1292.72,1217.52 1293.31,1217.52 1293.89,1217.52 1294.48,1217.52 1295.06,1217.52 1295.65,1217.52 1296.24,1217.52 1296.82,1217.52 1297.41,1217.52 1298,1217.52 1298.58,1217.52 1299.17,1217.52 1299.76,1217.52 1300.34,1217.52 1300.93,1217.52 1301.52,1217.52 1302.1,1217.52 1302.69,1217.52 1303.27,1217.52 1303.86,1217.52 1304.45,1217.52 1305.03,1217.52 1305.62,1217.52 1306.21,1217.52 1306.79,1217.52 1307.38,1217.52 1307.97,1217.52 1308.55,1217.52 1309.14,1217.52 1309.73,1217.52 1310.31,1217.52 1310.9,1217.52 1311.48,1217.52 1312.07,1217.52 1312.66,1217.52 1313.24,1217.52 1313.83,1217.52 1314.42,1217.52 1315,1217.52 1315.59,1217.52 1316.18,1217.52 1316.76,1217.52 1317.35,1217.52 1317.93,1217.52 1318.52,1217.52 1319.11,1217.52 1319.69,1217.52 1320.28,1217.52 1320.87,1217.52 1321.45,1217.52 1322.04,1217.52 1322.63,1217.52 1323.21,1217.52 1323.8,1217.52 1324.39,1217.52 1324.97,1217.52 1325.56,1217.52 1326.14,1217.52 1326.73,1217.52 1327.32,1217.52 1327.9,1217.52 1328.49,1217.52 1329.08,1217.52 1329.66,1217.52 1330.25,1217.52 1330.84,1217.52 1331.42,1217.52 1332.01,1217.52 1332.6,1217.52 1333.18,1217.52 1333.77,1217.52 1334.35,1217.52 1334.94,1217.52 1335.53,1217.52 1336.11,1217.52 1336.7,1217.52 1337.29,1217.52 1337.87,1217.52 1338.46,1217.52 1339.05,1217.52 1339.63,1217.52 1340.22,1217.52 1340.8,1217.52 1341.39,1217.52 1341.98,1217.52 1342.56,1217.52 1343.15,1217.52 1343.74,1217.52 1344.32,1217.52 1344.91,1217.52 1345.5,1217.52 1346.08,1217.52 1346.67,1217.52 1347.26,1217.52 1347.84,1217.52 1348.43,1217.52 1349.01,1217.52 1349.6,1217.52 1350.19,1217.52 1350.77,1217.52 1351.36,1217.52 1351.95,1217.52 1352.53,1217.52 1353.12,1217.52 1353.71,1217.52 1354.29,1217.52 1354.88,1217.52 1355.47,1217.52 1356.05,1217.52 1356.64,1217.52 1357.22,1217.52 1357.81,1217.52 1358.4,1217.52 1358.98,1217.52 1359.57,1217.52 1360.16,1217.52 1360.74,1217.52 1361.33,1217.52 1361.92,1217.52 1362.5,1217.52 1363.09,1217.52 1363.68,1217.52 1364.26,1217.52 1364.85,1217.52 1365.43,1217.52 1366.02,1217.52 1366.61,1217.52 1367.19,1217.52 1367.78,1217.52 1368.37,1217.52 1368.95,1217.52 1369.54,1217.52 1370.13,1217.52 1370.71,1217.52 1371.3,1217.52 1371.88,1217.52 1372.47,1217.52 1373.06,1217.52 1373.64,1217.52 1374.23,1217.52 1374.82,1217.52 1375.4,1217.52 1375.99,1217.52 1376.58,1217.52 1377.16,1217.52 1377.75,1217.52 1378.34,1217.52 1378.92,1217.52 1379.51,1217.52 1380.09,1217.52 1380.68,1217.52 1381.27,1217.52 1381.85,1217.52 1382.44,1217.52 1383.03,1217.52 1383.61,1217.52 1384.2,1217.52 1384.79,1217.52 1385.37,1217.52 1385.96,1217.52 1386.55,1217.52 1387.13,1217.52 1387.72,1217.52 1388.3,1217.52 1388.89,1217.52 1389.48,1217.52 1390.06,1217.52 1390.65,1217.52 1391.24,1217.52 1391.82,1217.52 1392.41,1217.52 1393,1217.52 1393.58,1217.52 1394.17,1217.52 1394.75,1217.52 1395.34,1217.52 1395.93,1217.52 1396.51,1217.52 1397.1,1217.52 1397.69,1217.52 1398.27,1217.52 1398.86,1217.52 1399.45,1217.52 1400.03,1217.52 1400.62,1217.52 1401.21,1217.52 1401.79,1217.52 1402.38,1217.52 1402.96,1217.52 1403.55,1217.52 1404.14,1217.52 1404.72,1217.52 1405.31,1217.52 1405.9,1217.52 1406.48,1217.52 1407.07,1217.52 1407.66,1217.52 1408.24,1217.52 1408.83,1217.52 1409.42,1217.52 1410,1217.52 1410.59,1217.52 1411.17,1217.52 1411.76,1217.52 1412.35,1217.52 1412.93,1217.52 1413.52,1217.52 1414.11,1217.52 1414.69,1217.52 1415.28,1217.52 1415.87,1217.52 1416.45,1217.52 1417.04,1217.52 1417.63,1217.52 1418.21,1217.52 1418.8,1217.52 1419.38,1217.52 1419.97,1217.52 1420.56,1217.52 1421.14,1217.52 1421.73,1217.52 1422.32,1217.52 1422.9,1217.52 1423.49,1217.52 1424.08,1217.52 1424.66,1217.52 1425.25,1217.52 1425.83,1217.52 1426.42,1217.52 1427.01,1217.52 1427.59,1217.52 1428.18,1217.52 1428.77,1217.52 1429.35,1217.52 1429.94,1217.52 1430.53,1217.52 1431.11,1217.52 1431.7,1217.52 1432.29,1217.52 1432.87,1217.52 1433.46,1217.52 1434.04,1217.52 1434.63,1217.52 1435.22,1217.52 1435.8,1217.52 1436.39,1217.52 1436.98,1217.52 1437.56,1217.52 1438.15,1217.52 1438.74,1217.52 1439.32,1217.52 1439.91,1217.52 1440.5,1217.52 1441.08,1217.52 1441.67,1217.52 1442.25,1217.52 1442.84,1217.52 1443.43,1217.52 1444.01,1217.52 1444.6,1217.52 1445.19,1217.52 1445.77,1217.52 1446.36,1217.52 1446.95,1217.52 1447.53,1217.52 1448.12,1217.52 1448.7,1217.52 1449.29,1217.52 1449.88,1217.52 1450.46,1217.52 1451.05,1217.52 1451.64,1217.52 1452.22,1217.52 1452.81,1217.52 1453.4,1217.52 1453.98,1217.52 1454.57,1217.52 1455.16,1217.52 1455.74,1217.52 1456.33,1217.52 1456.91,1217.52 1457.5,1217.52 1458.09,1217.52 1458.67,1217.52 1459.26,1217.52 1459.85,1217.52 1460.43,1217.52 1461.02,1217.52 1461.61,1217.52 1462.19,1217.52 1462.78,1217.52 1463.37,1217.52 1463.95,1217.52 1464.54,1217.52 1465.12,1217.52 1465.71,1217.52 1466.3,1217.52 1466.88,1217.52 1467.47,1217.52 1468.06,1217.52 1468.64,1217.52 1469.23,1217.52 1469.82,1217.52 1470.4,1217.52 1470.99,1217.52 1471.57,1217.52 1472.16,1217.52 1472.75,1217.52 1473.33,1217.52 1473.92,1217.52 1474.51,1217.52 1475.09,1217.52 1475.68,1217.52 1476.27,1217.52 1476.85,1217.52 1477.44,1217.52 1478.03,1217.52 1478.61,1217.52 1479.2,1217.52 1479.78,1217.52 1480.37,1217.52 1480.96,1217.52 1481.54,1217.52 1482.13,1217.52 1482.72,1217.52 1483.3,1217.52 1483.89,1217.52 1484.48,1217.52 1485.06,1217.52 1485.65,1217.52 1486.24,1217.52 1486.82,1217.52 1487.41,1217.52 1487.99,1217.52 1488.58,1217.52 1489.17,1217.52 1489.75,1217.52 1490.34,1217.52 1490.93,1217.52 1491.51,1217.52 1492.1,1217.52 1492.69,1217.52 1493.27,1217.52 1493.86,1217.52 1494.45,1217.52 1495.03,1217.52 1495.62,1217.52 1496.2,1217.52 1496.79,1217.52 1497.38,1217.52 1497.96,1217.52 1498.55,1217.52 1499.14,1217.52 1499.72,1217.52 1500.31,1217.52 1500.9,1217.52 1501.48,1217.52 1502.07,1217.52 1502.65,1217.52 1503.24,1217.52 1503.83,1217.52 1504.41,1217.52 1505,1217.52 1505.59,1217.52 1506.17,1217.52 1506.76,1217.52 1507.35,1217.52 1507.93,1217.52 1508.52,1217.52 1509.11,1217.52 1509.69,1217.52 1510.28,1217.52 1510.86,1217.52 1511.45,1217.52 1512.04,1217.52 1512.62,1217.52 1513.21,1217.52 1513.8,1217.52 1514.38,1217.52 1514.97,1217.52 1515.56,1217.52 1516.14,1217.52 1516.73,1217.52 1517.32,1217.52 1517.9,1217.52 1518.49,1217.52 1519.07,1217.52 1519.66,1217.52 1520.25,1217.52 1520.83,1217.52 1521.42,1217.52 1522.01,1217.52 1522.59,1217.52 1523.18,1217.52 1523.77,1217.52 1524.35,1217.52 1524.94,1217.52 1525.52,1217.52 1526.11,1217.52 1526.7,1217.52 1527.28,1217.52 1527.87,1217.52 1528.46,1217.52 1529.04,1217.52 1529.63,1217.52 1530.22,1217.52 1530.8,1217.52 1531.39,1217.52 1531.98,1217.52 1532.56,1217.52 1533.15,1217.52 1533.73,1217.52 1534.32,1217.52 1534.91,1217.52 1535.49,1217.52 1536.08,1217.52 1536.67,1217.52 1537.25,1217.52 1537.84,1217.52 1538.43,1217.52 1539.01,1217.52 1539.6,1217.52 1540.19,1217.52 1540.77,1217.52 1541.36,1217.52 1541.94,1217.52 1542.53,1217.52 1543.12,1217.52 1543.7,1217.52 1544.29,1217.52 1544.88,1217.52 1545.46,1217.52 1546.05,1217.52 1546.64,1217.52 1547.22,1217.52 1547.81,1217.52 1548.4,1217.52 1548.98,1217.52 1549.57,1217.52 1550.15,1217.52 1550.74,1217.52 1551.33,1217.52 1551.91,1217.52 1552.5,1217.52 1553.09,1217.52 1553.67,1217.52 1554.26,1217.52 1554.85,1217.52 1555.43,1217.52 1556.02,1217.52 1556.6,1217.52 1557.19,1217.52 1557.78,1217.52 1558.36,1217.52 1558.95,1217.52 1559.54,1217.52 1560.12,1217.52 1560.71,1217.52 1561.3,1217.52 1561.88,1217.52 1562.47,1217.52 1563.06,1217.52 1563.64,1217.52 1564.23,1217.52 1564.81,1217.52 1565.4,1217.52 1565.99,1217.52 1566.57,1217.52 1567.16,1217.52 1567.75,1217.52 1568.33,1217.52 1568.92,1217.52 1569.51,1217.52 1570.09,1217.52 1570.68,1217.52 1571.27,1217.52 1571.85,1217.52 1572.44,1217.52 1573.02,1217.52 1573.61,1217.52 1574.2,1217.52 1574.78,1217.52 1575.37,1217.52 1575.96,1217.52 1576.54,1217.52 1577.13,1217.52 1577.72,1217.52 1578.3,1217.52 1578.89,1217.52 1579.47,1217.52 1580.06,1217.52 1580.65,1217.52 1581.23,1217.52 1581.82,1217.52 1582.41,1217.52 1582.99,1217.52 1583.58,1217.52 1584.17,1217.52 1584.75,1217.52 1585.34,1217.52 1585.93,1217.52 1586.51,1217.52 1587.1,1217.52 1587.68,1217.52 1588.27,1217.52 1588.86,1217.52 1589.44,1217.52 1590.03,1217.52 1590.62,1217.52 1591.2,1217.52 1591.79,1217.52 1592.38,1217.52 1592.96,1217.52 1593.55,1217.52 1594.14,1217.52 1594.72,1217.52 1595.31,1217.52 1595.89,1217.52 1596.48,1217.52 1597.07,1217.52 1597.65,1217.52 1598.24,1217.52 1598.83,1217.52 1599.41,1217.52 1600,1217.52 1600.59,1217.52 1601.17,1217.52 1601.76,1217.52 1602.34,1217.52 1602.93,1217.52 1603.52,1217.52 1604.1,1217.52 1604.69,1217.52 1605.28,1217.52 1605.86,1217.52 1606.45,1217.52 1607.04,1217.52 1607.62,1217.52 1608.21,1217.52 1608.8,1217.52 1609.38,1217.52 1609.97,1217.52 1610.55,1217.52 1611.14,1217.52 1611.73,1217.52 1612.31,1217.52 1612.9,1217.52 1613.49,1217.52 1614.07,1217.52 1614.66,1217.52 1615.25,1217.52 1615.83,1217.52 1616.42,1217.52 1617.01,1217.52 1617.59,1217.52 1618.18,1217.52 1618.76,1217.52 1619.35,1217.52 1619.94,1217.52 1620.52,1217.52 1621.11,1217.52 1621.7,1217.52 1622.28,1217.52 1622.87,1217.52 1623.46,1217.52 1624.04,1217.52 1624.63,1217.52 1625.22,1217.52 1625.8,1217.52 1626.39,1217.52 1626.97,1217.52 1627.56,1217.52 1628.15,1217.52 1628.73,1217.52 1629.32,1217.52 1629.91,1217.52 1630.49,1217.52 1631.08,1217.52 1631.67,1217.52 1632.25,1217.52 1632.84,1217.52 1633.42,1217.52 1634.01,1217.52 1634.6,1217.52 1635.18,1217.52 1635.77,1217.52 1636.36,1217.52 1636.94,1217.52 1637.53,1217.52 1638.12,1217.52 1638.7,1217.52 1639.29,1217.52 1639.88,1217.52 1640.46,1217.52 1641.05,1217.52 1641.63,1217.52 1642.22,1217.52 1642.81,1217.52 1643.39,1217.52 1643.98,1217.52 1644.57,1217.52 1645.15,1217.52 1645.74,1217.52 1646.33,1217.52 1646.91,1217.52 1647.5,1217.52 1648.09,1217.52 1648.67,1217.52 1649.26,1217.52 1649.84,1217.52 1650.43,1217.52 1651.02,1217.52 1651.6,1217.52 1652.19,1217.52 1652.78,1217.52 1653.36,1217.52 1653.95,1217.52 1654.54,1217.52 1655.12,1217.52 1655.71,1217.52 1656.29,1217.52 1656.88,1217.52 1657.47,1217.52 1658.05,1217.52 1658.64,1217.52 1659.23,1217.52 1659.81,1217.52 1660.4,1217.52 1660.99,1217.52 1661.57,1217.52 1662.16,1217.52 1662.75,1217.52 1663.33,1217.52 1663.92,1217.52 1664.5,1217.52 1665.09,1217.52 1665.68,1217.52 1666.26,1217.52 1666.85,1217.52 1667.44,1217.52 1668.02,1217.52 1668.61,1217.52 1669.2,1217.52 1669.78,1217.52 1670.37,1217.52 1670.96,1217.52 1671.54,1217.52 1672.13,1217.52 1672.71,1217.52 1673.3,1217.52 1673.89,1217.52 1674.47,1217.52 1675.06,1217.52 1675.65,1217.52 1676.23,1217.52 1676.82,1217.52 1677.41,1217.52 1677.99,1217.52 1678.58,1217.52 1679.17,1217.52 1679.75,1217.52 1680.34,1217.52 1680.92,1217.52 1681.51,1217.52 1682.1,1217.52 1682.68,1217.52 1683.27,1217.52 1683.86,1217.52 1684.44,1217.52 1685.03,1217.52 1685.62,1217.52 1686.2,1217.52 1686.79,1217.52 1687.37,1217.52 1687.96,1217.52 1688.55,1217.52 1689.13,1217.52 1689.72,1217.52 1690.31,1217.52 1690.89,1217.52 1691.48,1217.52 1692.07,1217.52 1692.65,1217.52 1693.24,1217.52 1693.83,1217.52 1694.41,1217.52 1695,1217.52 1695.58,1217.52 1696.17,1217.52 1696.76,1217.52 1697.34,1217.52 1697.93,1217.52 1698.52,1217.52 1699.1,1217.52 1699.69,1217.52 1700.28,1217.52 1700.86,1217.52 1701.45,1217.52 1702.04,1217.52 1702.62,1217.52 1703.21,1217.52 1703.79,1217.52 1704.38,1217.52 1704.97,1217.52 1705.55,1217.52 1706.14,1217.52 1706.73,1217.52 1707.31,1217.52 1707.9,1217.52 1708.49,1217.52 1709.07,1217.52 1709.66,1217.52 1710.24,1217.52 1710.83,1217.52 1711.42,1217.52 1712,1217.52 1712.59,1217.52 1713.18,1217.52 1713.76,1217.52 1714.35,1217.52 1714.94,1217.52 1715.52,1217.52 1716.11,1217.52 1716.7,1217.52 1717.28,1217.52 1717.87,1217.52 1718.45,1217.52 1719.04,1217.52 1719.63,1217.52 1720.21,1217.52 1720.8,1217.52 1721.39,1217.52 1721.97,1217.52 1722.56,1217.52 1723.15,1217.52 1723.73,1217.52 1724.32,1217.52 1724.91,1217.52 1725.49,1217.52 1726.08,1217.52 1726.66,1217.52 1727.25,1217.52 1727.84,1217.52 1728.42,1217.52 1729.01,1217.52 1729.6,1217.52 1730.18,1217.52 1730.77,1217.52 1731.36,1217.52 1731.94,1217.52 1732.53,1217.52 1733.11,1217.52 1733.7,1217.52 1734.29,1217.52 1734.87,1217.52 1735.46,1217.52 1736.05,1217.52 1736.63,1217.52 1737.22,1217.52 1737.81,1217.52 1738.39,1217.52 1738.98,1217.52 1739.57,1217.52 1740.15,1217.52 1740.74,1217.52 1741.32,1217.52 1741.91,1217.52 1742.5,1217.52 1743.08,1217.52 1743.67,1217.52 1744.26,1217.52 1744.84,1217.52 1745.43,1217.52 1746.02,1217.52 1746.6,1217.52 1747.19,1217.52 1747.78,1217.52 1748.36,1217.52 1748.95,1217.52 1749.53,1217.52 1750.12,1217.52 1750.71,1217.52 1751.29,1217.52 1751.88,1217.52 1752.47,1217.52 1753.05,1217.52 1753.64,1217.52 1754.23,1217.52 1754.81,1217.52 1755.4,1217.52 1755.99,1217.52 1756.57,1217.52 1757.16,1217.52 1757.74,1217.52 1758.33,1217.52 1758.92,1217.52 1759.5,1217.52 1760.09,1217.52 1760.68,1217.52 1761.26,1217.52 1761.85,1217.52 1762.44,1217.52 1763.02,1217.52 1763.61,1217.52 1764.19,1217.52 1764.78,1217.52 1765.37,1217.52 1765.95,1217.52 1766.54,1217.52 1767.13,1217.52 1767.71,1217.52 1768.3,1217.52 1768.89,1217.52 1769.47,1217.52 1770.06,1217.52 1770.65,1217.52 1771.23,1217.52 1771.82,1217.52 1772.4,1217.52 1772.99,1217.52 1773.58,1217.52 1774.16,1217.52 1774.75,1217.52 1775.34,1217.52 1775.92,1217.52 1776.51,1217.52 1777.1,1217.52 1777.68,1217.52 1778.27,1217.52 1778.86,1217.52 1779.44,1217.52 1780.03,1217.52 1780.61,1217.52 1781.2,1217.52 1781.79,1217.52 1782.37,1217.52 1782.96,1217.52 1783.55,1217.52 1784.13,1217.52 1784.72,1217.52 1785.31,1217.52 1785.89,1217.52 1786.48,1217.52 1787.06,1217.52 1787.65,1217.52 1788.24,1217.52 1788.82,1217.52 1789.41,1217.52 1790,1217.52 1790.58,1217.52 1791.17,1217.52 1791.76,1217.52 1792.34,1217.52 1792.93,1217.52 1793.52,1217.52 1794.1,1217.52 1794.69,1217.52 1795.27,1217.52 1795.86,1217.52 1796.45,1217.52 1797.03,1217.52 1797.62,1217.52 1798.21,1217.52 1798.79,1217.52 1799.38,1217.52 1799.97,1217.52 1800.55,1217.52 1801.14,1217.52 1801.73,1217.52 1802.31,1217.52 1802.9,1217.52 1803.48,1217.52 1804.07,1217.52 1804.66,1217.52 1805.24,1217.52 1805.83,1217.52 1806.42,1217.52 1807,1217.52 1807.59,1217.52 1808.18,1217.52 1808.76,1217.52 1809.35,1217.52 1809.94,1217.52 1810.52,1217.52 1811.11,1217.52 1811.69,1217.52 1812.28,1217.52 1812.87,1217.52 1813.45,1217.52 1814.04,1217.52 1814.63,1217.52 1815.21,1217.52 1815.8,1217.52 1816.39,1217.52 1816.97,1217.52 1817.56,1217.52 1818.14,1217.52 1818.73,1217.52 1819.32,1217.52 1819.9,1217.52 1820.49,1217.52 1821.08,1217.52 1821.66,1217.52 1822.25,1217.52 1822.84,1217.52 1823.42,1217.52 1824.01,1217.52 1824.6,1217.52 1825.18,1217.52 1825.77,1217.52 1826.35,1217.52 1826.94,1217.52 1827.53,1217.52 1828.11,1217.52 1828.7,1217.52 1829.29,1217.52 1829.87,1217.52 1830.46,1217.52 1831.05,1217.52 1831.63,1217.52 1832.22,1217.52 1832.81,1217.52 1833.39,1217.52 1833.98,1217.52 1834.56,1217.52 1835.15,1217.52 1835.74,1217.52 1836.32,1217.52 1836.91,1217.52 1837.5,1217.52 1838.08,1217.52 1838.67,1217.52 1839.26,1217.52 1839.84,1217.52 1840.43,1217.52 1841.01,1217.52 1841.6,1217.52 1842.19,1217.52 1842.77,1217.52 1843.36,1217.52 1843.95,1217.52 1844.53,1217.52 1845.12,1217.52 1845.71,1217.52 1846.29,1217.52 1846.88,1217.52 1847.47,1217.52 1848.05,1217.52 1848.64,1217.52 1849.22,1217.52 1849.81,1217.52 1850.4,1217.52 1850.98,1217.52 1851.57,1217.52 1852.16,1217.52 1852.74,1217.52 1853.33,1217.52 1853.92,1217.52 1854.5,1217.52 1855.09,1217.52 1855.68,1217.52 1856.26,1217.52 1856.85,1217.52 1857.43,1217.52 1858.02,1217.52 1858.61,1217.52 1859.19,1217.52 1859.78,1217.52 1860.37,1217.52 1860.95,1217.52 1861.54,1217.52 1862.13,1217.52 1862.71,1217.52 1863.3,1217.52 1863.88,1217.52 1864.47,1217.52 1865.06,1217.52 1865.64,1217.52 1866.23,1217.52 1866.82,1217.52 1867.4,1217.52 1867.99,1217.52 1868.58,1217.52 1869.16,1217.52 1869.75,1217.52 1870.34,1217.52 1870.92,1217.52 1871.51,1217.52 1872.09,1217.52 1872.68,1217.52 1873.27,1217.52 1873.85,1217.52 1874.44,1217.52 1875.03,1217.52 1875.61,1217.52 1876.2,1217.52 1876.79,1217.52 1877.37,1217.52 1877.96,1217.52 1878.55,1217.52 1879.13,1217.52 1879.72,1217.52 1880.3,1217.52 1880.89,1217.52 1881.48,1217.52 1882.06,1217.52 1882.65,1217.52 1883.24,1217.52 1883.82,1217.52 1884.41,1217.52 1885,1217.52 1885.58,1217.52 1886.17,1217.52 1886.76,1217.52 1887.34,1217.52 1887.93,1217.52 1888.51,1217.52 1889.1,1217.52 1889.69,1217.52 1890.27,1217.52 1890.86,1217.52 1891.45,1217.52 1892.03,1217.52 1892.62,1217.52 1893.21,1217.52 1893.79,1217.52 1894.38,1217.52 1894.96,1217.52 1895.55,1217.52 1896.14,1217.52 1896.72,1217.52 1897.31,1217.52 1897.9,1217.52 1898.48,1217.52 1899.07,1217.52 1899.66,1217.52 1900.24,1217.52 1900.83,1217.52 1901.42,1217.52 1902,1217.52 1902.59,1217.52 1903.17,1217.52 1903.76,1217.52 1904.35,1217.52 1904.93,1217.52 1905.52,1217.52 1906.11,1217.52 1906.69,1217.52 1907.28,1217.52 1907.87,1217.52 1908.45,1217.52 1909.04,1217.52 1909.63,1217.52 1910.21,1217.52 1910.8,1217.52 1911.38,1217.52 1911.97,1217.52 1912.56,1217.52 1913.14,1217.52 1913.73,1217.52 1914.32,1217.52 1914.9,1217.52 1915.49,1217.52 1916.08,1217.52 1916.66,1217.52 1917.25,1217.52 1917.83,1217.52 1918.42,1217.52 1919.01,1217.52 1919.59,1217.52 1920.18,1217.52 1920.77,1217.52 1921.35,1217.52 1921.94,1217.52 1922.53,1217.52 1923.11,1217.52 1923.7,1217.52 1924.29,1217.52 1924.87,1217.52 1925.46,1217.52 1926.04,1217.52 1926.63,1217.52 1927.22,1217.52 1927.8,1217.52 1928.39,1217.52 1928.98,1217.52 1929.56,1217.52 1930.15,1217.52 1930.74,1217.52 1931.32,1217.52 1931.91,1217.52 1932.5,1217.52 1933.08,1217.52 1933.67,1217.52 1934.25,1217.52 1934.84,1217.52 1935.43,1217.52 1936.01,1217.52 1936.6,1217.52 1937.19,1217.52 1937.77,1217.52 1938.36,1217.52 1938.95,1217.52 1939.53,1217.52 1940.12,1217.52 1940.71,1217.52 1941.29,1217.52 1941.88,1217.52 1942.46,1217.52 1943.05,1217.52 1943.64,1217.52 1944.22,1217.52 1944.81,1217.52 1945.4,1217.52 1945.98,1217.52 1946.57,1217.52 1947.16,1217.52 1947.74,1217.52 1948.33,1217.52 1948.91,1217.52 1949.5,1217.52 1950.09,1217.52 1950.67,1217.52 1951.26,1217.52 1951.85,1217.52 1952.43,1217.52 1953.02,1217.52 1953.61,1217.52 1954.19,1217.52 1954.78,1217.52 1955.37,1217.52 1955.95,1217.52 1956.54,1217.52 1957.12,1217.52 1957.71,1217.52 1958.3,1217.52 1958.88,1217.52 1959.47,1217.52 1960.06,1217.52 1960.64,1217.52 1961.23,1217.52 1961.82,1217.52 1962.4,1217.52 1962.99,1217.52 1963.58,1217.52 1964.16,1217.52 1964.75,1217.52 1965.33,1217.52 1965.92,1217.52 1966.51,1217.52 1967.09,1217.52 1967.68,1217.52 1968.27,1217.52 1968.85,1217.52 1969.44,1217.52 1970.03,1217.52 1970.61,1217.52 1971.2,1217.52 1971.78,1217.52 1972.37,1217.52 1972.96,1217.52 1973.54,1217.52 1974.13,1217.52 1974.72,1217.52 1975.3,1217.52 1975.89,1217.52 1976.48,1217.52 1977.06,1217.52 1977.65,1217.52 1978.24,1217.52 1978.82,1217.52 1979.41,1217.52 1979.99,1217.52 1980.58,1217.52 1981.17,1217.52 1981.75,1217.52 1982.34,1217.52 1982.93,1217.52 1983.51,1217.52 1984.1,1217.52 1984.69,1217.52 1985.27,1217.52 1985.86,1217.52 1986.45,1217.52 1987.03,1217.52 1987.62,1217.52 1988.2,1217.52 1988.79,1217.52 1989.38,1217.52 1989.96,1217.52 1990.55,1217.52 1991.14,1217.52 1991.72,1217.52 1992.31,1217.52 1992.9,1217.52 1993.48,1217.52 1994.07,1217.52 1994.65,1217.52 1995.24,1217.52 1995.83,1217.52 1996.41,1217.52 1997,1217.52 1997.59,1217.52 1998.17,1217.52 1998.76,1217.52 1999.35,1217.52 1999.93,1217.52 2000.52,1217.52 2001.11,1217.52 2001.69,1217.52 2002.28,1217.52 2002.86,1217.52 2003.45,1217.52 2004.04,1217.52 2004.62,1217.52 2005.21,1217.52 2005.8,1217.52 2006.38,1217.52 2006.97,1217.52 2007.56,1217.52 2008.14,1217.52 2008.73,1217.52 2009.32,1217.52 2009.9,1217.52 2010.49,1217.52 2011.07,1217.52 2011.66,1217.52 2012.25,1217.52 2012.83,1217.52 2013.42,1217.52 2014.01,1217.52 2014.59,1217.52 2015.18,1217.52 2015.77,1217.52 2016.35,1217.52 2016.94,1217.52 2017.53,1217.52 2018.11,1217.52 2018.7,1217.52 2019.28,1217.52 2019.87,1217.52 2020.46,1217.52 2021.04,1217.52 2021.63,1217.52 2022.22,1217.52 2022.8,1217.52 2023.39,1217.52 2023.98,1217.52 2024.56,1217.52 2025.15,1217.52 2025.73,1217.52 2026.32,1217.52 2026.91,1217.52 2027.49,1217.52 2028.08,1217.52 2028.67,1217.52 2029.25,1217.52 2029.84,1217.52 2030.43,1217.52 2031.01,1217.52 2031.6,1217.52 2032.19,1217.52 2032.77,1217.52 2033.36,1217.52 2033.94,1217.52 2034.53,1217.52 2035.12,1217.52 2035.7,1217.52 2036.29,1217.52 2036.88,1217.52 2037.46,1217.52 2038.05,1217.52 2038.64,1217.52 2039.22,1217.52 2039.81,1217.52 2040.4,1217.52 2040.98,1217.52 2041.57,1217.52 2042.15,1217.52 2042.74,1217.52 2043.33,1217.52 2043.91,1217.52 2044.5,1217.52 2045.09,1217.52 2045.67,1217.52 2046.26,1217.52 2046.85,1217.52 2047.43,1217.52 2048.02,1217.52 2048.6,1217.52 2049.19,1217.52 2049.78,1217.52 2050.36,1217.52 2050.95,1217.52 2051.54,1217.52 2052.12,1217.52 2052.71,1217.52 2053.3,1217.52 2053.88,1217.52 2054.47,1217.52 2055.06,1217.52 2055.64,1217.52 2056.23,1217.52 2056.81,1217.52 2057.4,1217.52 2057.99,1217.52 2058.57,1217.52 2059.16,1217.52 2059.75,1217.52 2060.33,1217.52 2060.92,1217.52 2061.51,1217.52 2062.09,1217.52 2062.68,1217.52 2063.27,1217.52 2063.85,1217.52 2064.44,1217.52 2065.02,1217.52 2065.61,1217.52 2066.2,1217.52 2066.78,1217.52 2067.37,1217.52 2067.96,1217.52 2068.54,1217.52 2069.13,1217.52 2069.72,1217.52 2070.3,1217.52 2070.89,1217.52 2071.48,1217.52 2072.06,1217.52 2072.65,1217.52 2073.23,1217.52 2073.82,1217.52 2074.41,1217.52 2074.99,1217.52 2075.58,1217.52 2076.17,1217.52 2076.75,1217.52 2077.34,1217.52 2077.93,1217.52 2078.51,1217.52 2079.1,1217.52 2079.68,1217.52 2080.27,1217.52 2080.86,1217.52 2081.44,1217.52 2082.03,1217.52 2082.62,1217.52 2083.2,1217.52 2083.79,1217.52 2084.38,1217.52 2084.96,1217.52 2085.55,1217.52 2086.14,1217.52 2086.72,1217.52 2087.31,1217.52 2087.89,1217.52 2088.48,1217.52 2089.07,1217.52 2089.65,1217.52 2090.24,1217.52 2090.83,1217.52 2091.41,1217.52 2092,1217.52 2092.59,1217.52 2093.17,1217.52 2093.76,1217.52 2094.35,1217.52 2094.93,1217.52 2095.52,1217.52 2096.1,1217.52 2096.69,1217.52 2097.28,1217.52 2097.86,1217.52 2098.45,1217.52 2099.04,1217.52 2099.62,1217.52 2100.21,1217.52 2100.8,1217.52 2101.38,1217.52 2101.97,1217.52 2102.55,1217.52 2103.14,1217.52 2103.73,1217.52 2104.31,1217.52 2104.9,1217.52 2105.49,1217.52 2106.07,1217.52 2106.66,1217.52 2107.25,1217.52 2107.83,1217.52 2108.42,1217.52 2109.01,1217.52 2109.59,1217.52 2110.18,1217.52 2110.76,1217.52 2111.35,1217.52 2111.94,1217.52 2112.52,1217.52 2113.11,1217.52 2113.7,1217.52 2114.28,1217.52 2114.87,1217.52 2115.46,1217.52 2116.04,1217.52 2116.63,1217.52 2117.22,1217.52 2117.8,1217.52 2118.39,1217.52 2118.97,1217.52 2119.56,1217.52 2120.15,1217.52 2120.73,1217.52 2121.32,1217.52 2121.91,1217.52 2122.49,1217.52 2123.08,1217.52 2123.67,1217.52 2124.25,1217.52 2124.84,1217.52 2125.42,1217.52 2126.01,1217.52 2126.6,1217.52 2127.18,1217.52 2127.77,1217.52 2128.36,1217.52 2128.94,1217.52 2129.53,1217.52 2130.12,1217.52 2130.7,1217.52 2131.29,1217.52 2131.88,1217.52 2132.46,1217.52 2133.05,1217.52 2133.63,1217.52 2134.22,1217.52 2134.81,1217.52 2135.39,1217.52 2135.98,1217.52 2136.57,1217.52 2137.15,1217.52 2137.74,1217.52 2138.33,1217.52 2138.91,1217.52 2139.5,1217.52 2140.09,1217.52 2140.67,1217.52 2141.26,1217.52 2141.84,1217.52 2142.43,1217.52 2143.02,1217.52 2143.6,1217.52 2144.19,1217.52 2144.78,1217.52 2145.36,1217.52 2145.95,1217.52 2146.54,1217.52 2147.12,1217.52 2147.71,1217.52 2148.3,1217.52 2148.88,1217.52 2149.47,1217.52 2150.05,1217.52 2150.64,1217.52 2151.23,1217.52 2151.81,1217.52 2152.4,1217.52 2152.99,1217.52 2153.57,1217.52 2154.16,1217.52 2154.75,1217.52 2155.33,1217.52 2155.92,1217.52 2156.5,1217.52 2157.09,1217.52 2157.68,1217.52 2158.26,1217.52 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.79,1200.72 1398.18,899.083 \"/>\n<polyline clip-path=\"url(#clip442)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1233.94 985.439,1200.72 2158.26,1200.72 2158.26,1233.94 985.439,1233.94 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip440)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip440)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip443\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip440)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip440)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip440)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip443)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-1388.05 162.114,-2724.3 162.673,-3950.6 163.232,-5025.25 163.792,-6032.12 164.351,-5672.81 164.91,-6494.51 165.469,-7302.2 166.029,-8075.5 166.588,-8740.09 167.147,-9359.61 167.706,-9917.04 168.266,-10416.4 168.825,-10861.5 169.384,-11255.8 169.943,-11585.1 170.503,-11888.6 171.062,-11466.5 171.621,-11716.6 172.18,-11920.3 172.74,-12098.8 173.299,-12244.9 173.858,-12360.7 174.417,-12439.7 174.977,-12053.6 175.536,-11700.6 176.095,-11368 176.655,-11062.5 177.214,-10780.1 177.773,-10785.8 178.332,-10506.1 178.892,-10465.8 179.451,-9951.75 180.01,-9881.82 180.569,-9612.66 181.129,-9156.95 181.688,-9090.11 182.247,-9003.41 182.806,-8913.37 183.366,-8663.3 183.925,-8565.09 184.484,-8473.77 185.043,-8362.8 185.603,-7994.17 186.162,-7877.59 186.721,-7652.55 187.28,-7440.53 187.84,-7235.78 188.399,-7129.21 188.958,-7015 189.517,-6905.84 190.077,-6781.31 190.636,-6498.24 191.195,-6229.28 191.754,-6119.89 192.314,-5938.41 192.873,-5763.27 193.432,-5655.33 193.991,-5486.34 194.551,-5136.88 195.11,-5042.32 195.669,-4940.11 196.228,-4793.48 196.788,-4695.32 197.347,-4438.03 197.906,-4250.25 198.465,-4114.63 199.025,-4025.51 199.584,-3753.88 200.143,-3627.42 200.702,-3415.05 201.262,-3261.91 201.821,-3151.13 202.38,-2882.9 202.939,-2782.91 203.499,-2681.76 204.058,-2550.62 204.617,-2419.45 205.176,-2327.73 205.736,-2234.2 206.295,-2113.85 206.854,-2058.26 207.413,-1973.52 207.973,-1890.79 208.532,-1809.52 209.091,-1697.91 209.65,-1649.34 210.21,-1538.88 210.769,-1464.07 211.328,-1333.56 211.887,-1266.39 212.447,-1172.57 213.006,-1102.3 213.565,-982.139 214.124,-918.471 214.684,-856.429 215.243,-823.606 215.802,-763.979 216.361,-632.612 216.921,-532.286 217.48,-456.401 218.039,-360.941 218.598,-247.75 219.158,-185.76 219.717,-173.758 220.276,-135.989 220.835,-103.662 221.395,-89.9919 221.954,-52.0642 222.513,26.008 223.072,77.539 223.632,107.338 224.191,133.852 224.75,187.703 225.309,258.048 225.869,262.567 226.428,291.807 226.987,313.973 227.546,358.92 228.106,381.341 228.665,464.791 229.224,481.253 229.783,523.977 230.343,539.961 230.902,573.167 231.461,589.111 232.02,645.828 232.58,641.785 233.139,600.1 233.698,597.987 234.257,614.565 234.817,633.579 235.376,593.249 235.935,611.621 236.494,673.14 237.054,729.595 237.613,764.812 238.172,777.123 238.731,774.927 239.291,772.218 239.85,771.56 240.409,771.068 240.968,770.295 241.528,800.571 242.087,833.991 242.646,829.194 243.205,826.389 243.765,823.38 244.324,857.176 244.883,854.718 245.442,830.876 246.002,814.873 246.561,810.638 247.12,810.64 247.679,832.748 248.239,848.027 248.798,863.155 249.357,858.504 249.916,909.745 250.476,955.533 251.035,928.864 251.594,923.986 252.153,939.801 252.713,954.59 253.272,933.994 253.831,950.388 254.39,929.941 254.95,931.064 255.509,929.774 256.068,909.545 256.627,960.66 257.187,974.525 257.746,1000.57 258.305,1011.93 258.864,1025.47 259.424,1002.79 259.983,981.171 260.542,990.92 261.101,1017.49 261.661,1010.14 262.22,1007.26 262.779,1003.05 263.338,1013.45 263.898,1006.57 264.457,1022.53 265.016,1015.16 265.575,1008.39 266.135,989.443 266.694,1021.64 267.253,1014.57 267.812,1041.79 268.372,1072.16 268.931,1095.99 269.49,1065.64 270.049,1073.52 270.609,1065.92 271.168,1057.4 271.727,1033.44 272.286,1045.02 272.846,1038.42 273.405,1052.34 273.964,1042.02 274.523,1035.59 275.083,1024.46 275.642,1020.82 276.201,1031.9 276.76,992.308 277.32,987.252 277.879,967.87 278.438,931.438 278.997,965.522 279.557,944.426 280.116,942.19 280.675,941.886 281.234,954.297 281.794,969.781 282.353,946.926 282.912,974.79 283.471,1005.15 284.031,986.796 284.59,968.379 285.149,966.593 285.708,962.42 286.268,978.87 286.827,973.975 287.386,954.43 287.945,972 288.505,1020.42 289.064,1028.27 289.623,1039.18 290.182,1047.29 290.742,1054.46 291.301,1078.37 291.86,1083.24 292.419,1077.45 292.979,1037.04 293.538,1010.29 294.097,1023.62 294.656,1049.89 295.216,1060.08 295.775,1084.75 296.334,1060.21 296.893,1037.14 297.453,1015.48 298.012,993.789 298.571,1022.48 299.13,1031.97 299.69,1023.52 300.249,1064.69 300.808,1040.43 301.368,1048.13 301.927,1057.13 302.486,1046.67 303.045,1003.58 303.605,1060.03 304.164,1101.61 304.723,1092.47 305.282,1117.24 305.842,1103.67 306.401,1090.63 306.96,1096.58 307.519,1103.14 308.079,1090.73 308.638,1098.28 309.197,1088.26 309.756,1089.7 310.316,1028.7 310.875,1038.5 311.434,1046.24 311.993,1037.58 312.553,1044.78 313.112,1004.1 313.671,982.023 314.23,973.988 314.79,984.646 315.349,1010.59 315.908,1020.75 316.467,1026.61 317.027,1037.64 317.586,1046.29 318.145,1050.62 318.704,1073.41 319.264,1049.96 319.823,1042.89 320.382,1050.75 320.941,1076.01 321.501,1081.55 322.06,1035.62 322.619,1026.05 323.178,1033.99 323.738,1020.2 324.297,979.92 324.856,958.514 325.415,968.789 325.975,944.925 326.534,923.627 327.093,921.24 327.652,920.05 328.212,934.599 328.771,945.8 329.33,940.245 329.889,917.303 330.449,915.994 331.008,963.112 331.567,942.744 332.126,905.52 332.686,920.966 333.245,915.324 333.804,896.724 334.363,928.228 334.923,940.495 335.482,952.079 336.041,929.496 336.6,908.929 337.16,920.304 337.719,916.216 338.278,914.723 338.837,926.082 339.397,903.219 339.956,885.053 340.515,882.644 341.074,882.846 341.634,885.366 342.193,853.221 342.752,819.353 343.311,817.54 343.871,836.836 344.43,818.52 344.989,803.849 345.548,789.816 346.108,777.163 346.667,782.502 347.226,786.051 347.785,809.484 348.345,793.983 348.904,763.865 349.463,784.563 350.022,785.676 350.582,786.547 351.141,822.424 351.7,841.785 352.259,826.606 352.819,812.602 353.378,848.597 353.937,861.862 354.496,877.551 355.056,905.981 355.615,884.513 356.174,898.053 356.733,895.629 357.293,891.78 357.852,900.511 358.411,912.324 358.97,908.122 359.53,920.065 360.089,899.732 360.648,893.328 361.207,860.34 361.767,856.605 362.326,868.768 362.885,867.602 363.444,834.519 364.004,851.302 364.563,885.016 365.122,884.058 365.681,860.372 366.241,903.596 366.8,911.077 367.359,952.129 367.918,925.018 368.478,948.572 369.037,940.486 369.596,917.914 370.155,926.797 370.715,916.745 371.274,914.045 371.833,909.039 372.392,918.428 372.952,928.045 373.511,905.988 374.07,900.331 374.629,899.883 375.189,890.301 375.748,882.187 376.307,878.353 376.866,872.831 377.426,899.071 377.985,878.775 378.544,890.877 379.103,835.977 379.663,799.142 380.222,803.36 380.781,789.53 381.34,824.399 381.9,872.251 382.459,851.529 383.018,832.649 383.577,810.774 384.137,843.544 384.696,876.967 385.255,889.139 385.814,884.559 386.374,877.804 386.933,855.595 387.492,853.267 388.051,869.149 388.611,865.055 389.17,858.533 389.729,857.224 390.288,866.883 390.848,866.884 391.407,847.765 391.966,828.508 392.525,794.296 393.085,794.955 393.644,810.793 394.203,830.302 394.762,795.64 395.322,806.756 395.881,821.71 396.44,823.184 396.999,834.086 397.559,866.206 398.118,846.115 398.677,842.003 399.236,854.357 399.796,850.299 400.355,897.861 400.914,876.934 401.473,869.639 402.033,865.279 402.592,863.079 403.151,842.463 403.71,855.05 404.27,848.343 404.829,875.872 405.388,838.06 405.947,833.279 406.507,828.727 407.066,876.657 407.625,838.149 408.184,851.087 408.744,843.013 409.303,856.679 409.862,837.364 410.421,833.457 410.981,813.044 411.54,828.209 412.099,825.587 412.658,805.263 413.218,755.142 413.777,773.695 414.336,804.668 414.895,782.542 415.455,750.806 416.014,752.754 416.573,733.391 417.132,766.697 417.692,749.031 418.251,715.136 418.81,751.58 419.369,769.877 419.929,786.317 420.488,850.364 421.047,811.361 421.606,808.937 422.166,809.793 422.725,788.621 423.284,804.503 423.843,803.07 424.403,801.61 424.962,818.07 425.521,784.053 426.08,782.505 426.64,734.512 427.199,719.656 427.758,709.059 428.318,731.047 428.877,767.511 429.436,751.12 429.995,720.26 430.555,722.601 431.114,729.129 431.673,711.756 432.232,716.596 432.792,702.883 433.351,703.089 433.91,722.104 434.469,724.29 435.029,731.243 435.588,734.623 436.147,751.453 436.706,719.925 437.266,721.899 437.825,721.85 438.384,675.109 438.943,698.818 439.503,717.825 440.062,720.501 440.621,756.347 441.18,775.143 441.74,760.582 442.299,725.459 442.858,743.121 443.417,727.717 443.977,757.244 444.536,758.225 445.095,757.856 445.654,771.367 446.214,773.273 446.773,807.786 447.332,807.851 447.891,805.762 448.451,801.02 449.01,782.289 449.569,782.18 450.128,766.268 450.688,733.696 451.247,749.231 451.806,750.387 452.365,717.697 452.925,720.172 453.484,754.343 454.043,767.369 454.602,766.493 455.162,751.12 455.721,769.225 456.28,753.24 456.839,754.791 457.399,756.356 457.958,726.367 458.517,708.373 459.076,710.738 459.636,696.53 460.195,699.501 460.754,721.946 461.313,722.568 461.873,724.932 462.432,758.896 462.991,759.373 463.55,758.223 464.11,789.664 464.669,788.021 465.228,784.546 465.787,798.612 466.347,792.999 466.906,755.701 467.465,736.082 468.024,771.449 468.584,753.205 469.143,770.852 469.702,784.085 470.261,764.489 470.821,780.407 471.38,792.117 471.939,791.651 472.498,804.238 473.058,784.259 473.617,782.608 474.176,781.896 474.735,782.861 475.295,749.313 475.854,763.689 476.413,742.23 476.972,724.666 477.532,727.934 478.091,744.015 478.65,729.384 479.209,742.397 479.769,792.672 480.328,790 480.887,817.104 481.446,800.281 482.006,766.018 482.565,749.966 483.124,735.394 483.683,736.306 484.243,738.718 484.802,737.342 485.361,769.793 485.92,833.556 486.48,795.809 487.039,794.374 487.598,773.696 488.157,769.622 488.717,750.635 489.276,745.732 489.835,791.255 490.394,817.629 490.954,796.744 491.513,791.135 492.072,783.325 492.631,781.101 493.191,793.365 493.75,808.816 494.309,787.795 494.868,786.673 495.428,765.912 495.987,762.843 496.546,763.101 497.105,763.789 497.665,778.31 498.224,806.062 498.783,755.748 499.342,754.511 499.902,751.429 500.461,746.593 501.02,747.132 501.579,711.629 502.139,696.108 502.698,732.257 503.257,729.393 503.816,730.475 504.376,699.976 504.935,734.229 505.494,765.54 506.053,797.738 506.613,812.222 507.172,810.972 507.731,806.987 508.29,785.098 508.85,780.841 509.409,809.995 509.968,790.219 510.527,786.229 511.087,750.88 511.646,778.232 512.205,790.181 512.764,820.555 513.324,862.99 513.883,886.307 514.442,864.016 515.001,840.041 515.561,801.868 516.12,780.417 516.679,828.796 517.238,822.483 517.798,835.423 518.357,829.059 518.916,821.232 519.475,800.167 520.035,779.732 520.594,776.448 521.153,772.538 521.712,783.418 522.272,766.736 522.831,751.209 523.39,733.623 523.949,733.826 524.509,764.242 525.068,702.709 525.627,723.343 526.186,706.209 526.746,689.178 527.305,711.692 527.864,709.16 528.423,725.001 528.983,722.609 529.542,737.565 530.101,782.166 530.66,797.111 531.22,811.678 531.779,809.442 532.338,818.341 532.897,814.586 533.457,797.255 534.016,809.833 534.575,789.325 535.134,751.73 535.694,765.327 536.253,780.519 536.812,760.33 537.371,772.605 537.931,781.994 538.49,777.786 539.049,777.218 539.608,753.721 540.168,766.586 540.727,777.998 541.286,758.282 541.845,789.801 542.405,781.557 542.964,777.176 543.523,738.005 544.082,754.084 544.642,765.513 545.201,808.09 545.76,802.423 546.319,783.35 546.879,751.071 547.438,729.939 547.997,747.057 548.556,729.741 549.116,710.319 549.675,710.166 550.234,679.116 550.793,677.304 551.353,713.539 551.912,698.458 552.471,699.519 553.031,718.676 553.59,720.539 554.149,719.469 554.708,737.072 555.268,753.674 555.827,782.862 556.386,763.249 556.945,778.199 557.505,776.462 558.064,774.465 558.623,756.8 559.182,757.169 559.742,771.189 560.301,781.891 560.86,775.829 561.419,771.185 561.979,767.732 562.538,746.404 563.097,746.794 563.656,730.707 564.216,743.566 564.775,760.221 565.334,778.143 565.893,763.58 566.453,761.25 567.012,809.913 567.571,824.137 568.13,823.438 568.69,834.624 569.249,781.041 569.808,774.524 570.367,723.51 570.927,722.042 571.486,736.974 572.045,734.68 572.604,732.583 573.164,730.606 573.723,694.479 574.282,696.417 574.841,716.112 575.401,701.298 575.96,731.143 576.519,733.76 577.078,696.862 577.638,666.569 578.197,653.928 578.756,609.799 579.315,633.598 579.875,635.65 580.434,655.289 580.993,627.268 581.552,616.563 582.112,620.388 582.671,621.548 583.23,640.354 583.789,664.207 584.349,649.877 584.908,650.196 585.467,673.015 586.026,663.575 586.586,668.949 587.145,670.152 587.704,716.557 588.263,683.062 588.823,652.202 589.382,672.109 589.941,644.735 590.5,650.455 591.06,653.442 591.619,669.062 592.178,655.469 592.737,673.628 593.297,692.747 593.856,711.733 594.415,712.214 594.974,745.074 595.534,760.145 596.093,741.558 596.652,723.471 597.211,708.788 597.771,690.013 598.33,677.155 598.889,678.649 599.448,682.736 600.008,683.47 600.567,748.399 601.126,712.442 601.685,680.403 602.245,665.535 602.804,663.701 603.363,649.521 603.922,652.231 604.482,656.664 605.041,642.36 605.6,630.006 606.159,618.883 606.719,592.011 607.278,583.977 607.837,605.391 608.396,642.3 608.956,661.762 609.515,664.225 610.074,685.124 610.633,671.071 611.193,705.237 611.752,706.95 612.311,706.069 612.87,719.601 613.43,720.723 613.989,735.391 614.548,685.522 615.107,683.905 615.667,715.549 616.226,698.501 616.785,683.41 617.344,718.606 617.904,720.4 618.463,735.542 619.022,719.861 619.581,733.344 620.141,697.462 620.7,700.389 621.259,700.117 621.818,682.655 622.378,649.39 622.937,649.669 623.496,621.936 624.055,610.499 624.615,615.321 625.174,622.067 625.733,642.738 626.292,645.662 626.852,595.7 627.411,599.558 627.97,589.263 628.529,596.713 629.089,604.709 629.648,610.433 630.207,629.652 630.766,696.826 631.326,665.183 631.885,671.762 632.444,686.791 633.003,705.55 633.563,720.629 634.122,750.656 634.681,768.161 635.24,746.999 635.8,760.867 636.359,757.045 636.918,723.47 637.477,708.612 638.037,710.292 638.596,695.171 639.155,698.748 639.714,715.702 640.274,683.115 640.833,699.251 641.392,682.583 641.951,669.03 642.511,684.63 643.07,703.2 643.629,685.645 644.188,655.294 644.748,657.321 645.307,659.681 645.866,661.947 646.425,665.735 646.985,669.445 647.544,671.254 648.103,675.058 648.662,679.996 649.222,696.91 649.781,678.911 650.34,694.021 650.899,692.204 651.459,708.872 652.018,711.857 652.577,713.659 653.136,680.084 653.696,748.083 654.255,745.082 654.814,726.894 655.373,728.266 655.933,710.427 656.492,694.459 657.051,695.183 657.61,713.215 658.17,711.188 658.729,744.326 659.288,708.931 659.847,625.168 660.407,647.219 660.966,632.085 661.525,669.769 662.084,704.451 662.644,737.434 663.203,719.268 663.762,732.826 664.321,730.155 664.881,730.384 665.44,730.624 665.999,731.524 666.558,715.332 667.118,699.508 667.677,716.021 668.236,680.992 668.795,684.784 669.355,704.345 669.914,706.74 670.473,703.816 671.032,720.286 671.592,754.754 672.151,755.03 672.71,752.947 673.269,755.407 673.829,737.999 674.388,752.37 674.947,736.126 675.506,747.87 676.066,761.866 676.625,777.718 677.184,777.606 677.743,741.922 678.303,757.789 678.862,769.966 679.421,733.706 679.981,747.379 680.54,744.496 681.099,741.84 681.658,691.543 682.218,694.558 682.777,692.765 683.336,706.445 683.895,671.578 684.455,655.289 685.014,670.958 685.573,639.806 686.132,643.815 686.692,666.168 687.251,651.827 687.81,669.585 688.369,658.346 688.929,676.79 689.488,677.493 690.047,676.351 690.606,674.119 691.166,674.763 691.725,690.625 692.284,674.059 692.843,677.346 693.403,693.017 693.962,676.049 694.521,709.116 695.08,722.92 695.64,717.748 696.199,763.911 696.758,791.777 697.317,770.47 697.877,800.221 698.436,808.425 698.995,789.476 699.554,833.313 700.114,857.329 700.673,863.534 701.232,855.431 701.791,829.961 702.351,850.584 702.91,807.957 703.469,802.518 704.028,813.577 704.588,807.62 705.147,801.601 705.706,765.152 706.265,775.83 706.825,773.169 707.384,783.698 707.943,776.657 708.502,786.773 709.062,797.17 709.621,807.818 710.18,751.864 710.739,743.345 711.299,707.399 711.858,707.427 712.417,706.982 712.976,703.238 713.536,700.379 714.095,700.464 714.654,702.056 715.213,654.778 715.773,638.744 716.332,658.811 716.891,677.383 717.45,695.793 718.01,694.549 718.569,712.547 719.128,726.584 719.687,710.086 720.247,709.064 720.806,739.908 721.365,722.288 721.924,707.064 722.484,707.085 723.043,691.646 723.602,689.608 724.161,643.737 724.721,628.418 725.28,601.18 725.839,635.627 726.398,640.026 726.958,643.039 727.517,610.742 728.076,609.032 728.635,612.57 729.195,587.514 729.754,613.237 730.313,597.764 730.872,587.434 731.432,608.11 731.991,644.012 732.55,647.314 733.109,631.535 733.669,651.95 734.228,654.462 734.787,655.525 735.346,654.093 735.906,626.973 736.465,614.839 737.024,601.527 737.583,622.917 738.143,627.831 738.702,617.739 739.261,587.761 739.82,607.924 740.38,612.325 740.939,604.383 741.498,643.556 742.057,645.558 742.617,667.825 743.176,653.774 743.735,636.368 744.294,640.352 744.854,674.384 745.413,674.315 745.972,709.527 746.531,665.921 747.091,652.336 747.65,702.304 748.209,666.12 748.768,633.484 749.328,636.775 749.887,641.888 750.446,630.801 751.005,650.764 751.565,669.26 752.124,667.142 752.683,636.109 753.242,669.932 753.802,688.719 754.361,641.599 754.92,641.732 755.479,692.044 756.039,708.689 756.598,725.519 757.157,707.877 757.716,688.391 758.276,671.121 758.835,673.633 759.394,676.286 759.953,662.706 760.513,634.694 761.072,638.543 761.631,659.843 762.19,673.081 762.75,687.883 763.309,705.21 763.868,703.826 764.427,719.641 764.987,752.575 765.546,746.545 766.105,731.78 766.664,717.25 767.224,702.03 767.783,701.996 768.342,700.773 768.901,735.687 769.461,751.254 770.02,716.69 770.579,715.315 771.138,709.598 771.698,741.286 772.257,735.55 772.816,733.602 773.375,698.528 773.935,651.559 774.494,652.67 775.053,639.478 775.612,624.807 776.172,613.645 776.731,619.039 777.29,624.91 777.849,596.353 778.409,633.861 778.968,637.952 779.527,641.577 780.086,643.948 780.646,660.283 781.205,662.353 781.764,649.762 782.323,656.271 782.883,676.347 783.442,694.109 784.001,663.812 784.56,693.758 785.12,726.931 785.679,758.365 786.238,754.828 786.797,734.47 787.357,729.952 787.916,742.764 788.475,738.637 789.034,750.142 789.594,729.672 790.153,778.426 790.712,757.146 791.271,755.292 791.831,752.951 792.39,750.385 792.949,727.757 793.508,726.538 794.068,737.734 794.627,748.146 795.186,761.217 795.745,769.705 796.305,766.123 796.864,762.512 797.423,758.777 797.982,770.929 798.542,768.225 799.101,749.252 799.66,782.973 800.219,794.34 800.779,805.182 801.338,799.462 801.897,810.117 802.456,817.428 803.016,745.119 803.575,758.016 804.134,786.972 804.693,780.813 805.253,806.93 805.812,752.167 806.371,746.73 806.931,710.407 807.49,677.754 808.049,712.233 808.608,708.944 809.168,708.314 809.727,755.482 810.286,752.572 810.845,730.514 811.405,711.926 811.964,724.316 812.523,707.884 813.082,707.368 813.642,737.734 814.201,717.448 814.76,713.285 815.319,728.298 815.879,725.763 816.438,673.811 816.997,675.146 817.556,677.571 818.116,675.815 818.675,695.461 819.234,684.123 819.793,712.699 820.353,712.266 820.912,726.264 821.471,722.707 822.03,737.714 822.59,733.673 823.149,732.584 823.708,748.518 824.267,744.353 824.827,723.464 825.386,737.679 825.945,719.497 826.504,731.084 827.064,745.829 827.623,744.675 828.182,744.14 828.741,753.836 829.301,666.39 829.86,664.407 830.419,651.566 830.978,670.063 831.538,670.949 832.097,639.502 832.656,642.42 833.215,641.25 833.775,675.446 834.334,647.707 834.893,680.242 835.452,695.398 836.012,693.083 836.571,693.075 837.13,693.673 837.689,708.648 838.249,688.325 838.808,654.818 839.367,640.539 839.926,643.742 840.486,660.401 841.045,646.126 841.604,659.408 842.163,612.755 842.723,604.833 843.282,610.078 843.841,597.107 844.4,554.475 844.96,594.388 845.519,585.402 846.078,592.091 846.637,598.642 847.197,635.654 847.756,605.657 848.315,632.863 848.874,639.309 849.434,640.526 849.993,637.353 850.552,638.947 851.111,624.455 851.671,611.586 852.23,618.08 852.789,639.156 853.348,676.425 853.908,662.047 854.467,650.719 855.026,636.97 855.585,685.525 856.145,688.295 856.704,687.635 857.263,638.98 857.822,661.042 858.382,679.118 858.941,698.616 859.5,728.977 860.059,745.612 860.619,755.952 861.178,735.922 861.737,717.817 862.296,715.771 862.856,717.039 863.415,713.754 863.974,712.584 864.533,711.416 865.093,678.311 865.652,678.44 866.211,643.372 866.77,612.071 867.33,666.1 867.889,649.015 868.448,604.651 869.007,622.526 869.567,593.315 870.126,630.555 870.685,649.725 871.244,636.335 871.804,655.543 872.363,639.256 872.922,656.403 873.481,658.182 874.041,641.381 874.6,660.301 875.159,628.443 875.718,645.962 876.278,633.732 876.837,633.704 877.396,653.681 877.955,688.683 878.515,688.708 879.074,688.916 879.633,672.708 880.192,672.828 880.752,672.775 881.311,656.176 881.87,672.671 882.429,704.413 882.989,690.052 883.548,718.385 884.107,717.141 884.666,717.35 885.226,716.986 885.785,695.568 886.344,679.559 886.903,698.198 887.463,682.977 888.022,666.101 888.581,666.161 889.14,668.45 889.7,683.861 890.259,663.723 890.818,680.942 891.377,649.216 891.937,649.551 892.496,651.998 893.055,652.749 893.614,653.131 894.174,689.659 894.733,709.398 895.292,725.557 895.851,739.834 896.411,734.163 896.97,735.308 897.529,732.251 898.088,699.204 898.648,711.735 899.207,741.419 899.766,769.289 900.325,730.312 900.885,742.286 901.444,725.258 902.003,709.377 902.562,724.824 903.122,754.373 903.681,735.653 904.24,734.52 904.799,728.916 905.359,713.953 905.918,713.445 906.477,745.406 907.036,691.081 907.596,675.437 908.155,711.635 908.714,757.779 909.273,753.092 909.833,744.539 910.392,727.732 910.951,690.633 911.51,689.213 912.07,671.782 912.629,690.235 913.188,686.745 913.747,716.339 914.307,713.317 914.866,677.228 915.425,661.914 915.984,648.627 916.544,679.062 917.103,696.215 917.662,680.641 918.221,680.491 918.781,693.578 919.34,660.189 919.899,661.807 920.458,679.906 921.018,647.358 921.577,695.807 922.136,744.463 922.695,709.141 923.255,739.287 923.814,719.1 924.373,716.855 924.932,683.773 925.492,686.798 926.051,685.804 926.61,732.334 927.169,714.794 927.729,699.746 928.288,668.295 928.847,684.78 929.406,653.38 929.966,655.023 930.525,641.466 931.084,657.167 931.644,644.835 932.203,628.055 932.762,644.899 933.321,678.652 933.881,692.818 934.44,674.144 934.999,675.274 935.558,679.775 936.118,696.208 936.677,713.271 937.236,695.208 937.795,664.875 938.355,686.092 938.914,685.357 939.473,655.823 940.032,658.119 940.592,690.373 941.151,724.709 941.71,736.874 942.269,749.261 942.829,731.948 943.388,743.247 943.947,741.087 944.506,708.21 945.066,724.337 945.625,770.942 946.184,767.645 946.743,779.946 947.303,823.456 947.862,848.764 948.421,824.586 948.98,837.306 949.54,815.57 950.099,776.844 950.658,771.248 951.217,783.769 951.777,779.732 952.336,771.91 952.895,768.554 953.454,749.318 954.014,741.728 954.573,738.871 955.132,751.866 955.691,716.08 956.251,748.201 956.81,763.007 957.369,784.904 957.928,762.217 958.488,757.172 959.047,734.828 959.606,763.013 960.165,758.4 960.725,751.526 961.284,734.143 961.843,733.6 962.402,735.265 962.962,705.944 963.521,721.674 964.08,723.974 964.639,720.504 965.199,701.712 965.758,698.995 966.317,662.239 966.876,648.698 967.436,651.624 967.995,653.109 968.554,673.75 969.113,671.773 969.673,674.777 970.232,692.256 970.791,691.906 971.35,692.06 971.91,672.696 972.469,705.088 973.028,674.088 973.587,638.731 974.147,654.605 974.706,654.016 975.265,703.377 975.824,703.796 976.384,716.272 976.943,698.06 977.502,661.368 978.061,616.098 978.621,619.622 979.18,593.356 979.739,617.704 980.298,636.526 980.858,672.587 981.417,703.907 981.976,686.408 982.535,701.122 983.095,665.015 983.654,650.952 984.213,685.172 984.772,700.814 985.332,686.977 985.891,701.616 986.45,684.005 987.009,668.179 987.569,666.112 988.128,683.253 988.687,661.446 989.246,679.224 989.806,694.99 990.365,662.282 990.924,676.247 991.483,690.202 992.043,703.893 992.602,684.202 993.161,685.426 993.72,700.963 994.28,700.063 994.839,699.343 995.398,667.344 995.957,666.757 996.517,632.721 997.076,634.258 997.635,667.605 998.194,650.422 998.754,615.227 999.313,618.401 999.872,609.241 1000.43,629.688 1000.99,646.189 1001.55,629.758 1002.11,632.233 1002.67,636.47 1003.23,626.189 1003.79,625.917 1004.35,629.919 1004.91,647.174 1005.46,632.394 1006.02,617.188 1006.58,608.045 1007.14,612.413 1007.7,618.108 1008.26,637.113 1008.82,625.386 1009.38,615.989 1009.94,636.554 1010.5,660.017 1011.06,663.189 1011.62,695.572 1012.18,646.246 1012.73,663.937 1013.29,665.263 1013.85,698.18 1014.41,681.127 1014.97,681.734 1015.53,679.795 1016.09,715.541 1016.65,731.947 1017.21,749.828 1017.77,743.894 1018.33,726.089 1018.89,710.729 1019.45,708.003 1020.01,658.479 1020.56,645.612 1021.12,666.542 1021.68,651.741 1022.24,651.176 1022.8,617.144 1023.36,635.988 1023.92,636.155 1024.48,652.456 1025.04,689.139 1025.6,690.003 1026.16,690.783 1026.72,688.631 1027.28,674.289 1027.83,708.607 1028.39,722.972 1028.95,738.25 1029.51,716.65 1030.07,698.794 1030.63,697.187 1031.19,700.133 1031.75,683.754 1032.31,698.574 1032.87,701.248 1033.43,668.567 1033.99,670.551 1034.55,653.962 1035.1,655.563 1035.66,625.818 1036.22,594.762 1036.78,658.473 1037.34,673.551 1037.9,708.25 1038.46,687.31 1039.02,733.057 1039.58,717.922 1040.14,718.198 1040.7,697.776 1041.26,684.19 1041.82,665.818 1042.38,667.611 1042.93,652.116 1043.49,669.916 1044.05,668.228 1044.61,667.916 1045.17,669.527 1045.73,705.587 1046.29,706.348 1046.85,690.426 1047.41,640.718 1047.97,662.085 1048.53,681.665 1049.09,680.682 1049.65,678.787 1050.2,678.704 1050.76,678.677 1051.32,680.555 1051.88,730.488 1052.44,712.014 1053,727.692 1053.56,722.201 1054.12,756.345 1054.68,768.34 1055.24,781.041 1055.8,760.977 1056.36,757.153 1056.92,751.749 1057.48,764.947 1058.03,747.519 1058.59,746.652 1059.15,748.607 1059.71,762.784 1060.27,761.924 1060.83,775.331 1061.39,787.615 1061.95,767.408 1062.51,779.123 1063.07,806.914 1063.63,814.711 1064.19,808.005 1064.75,754.569 1065.3,733.712 1065.86,745.327 1066.42,727.355 1066.98,742.198 1067.54,755.343 1068.1,716.672 1068.66,730.571 1069.22,695.82 1069.78,729.882 1070.34,712.2 1070.9,677.553 1071.46,677.484 1072.02,661.362 1072.57,665.811 1073.13,681.834 1073.69,679.888 1074.25,680.647 1074.81,679.22 1075.37,697.214 1075.93,714.029 1076.49,712.738 1077.05,693.443 1077.61,659.56 1078.17,690.909 1078.73,673.348 1079.29,673.857 1079.85,668.262 1080.4,685.04 1080.96,669.014 1081.52,671.838 1082.08,688.597 1082.64,672.928 1083.2,623.594 1083.76,643.009 1084.32,679.496 1084.88,676.792 1085.44,664.209 1086,681.015 1086.56,683.829 1087.12,684.211 1087.67,654.295 1088.23,672.2 1088.79,655.913 1089.35,657.111 1089.91,641.155 1090.47,648.679 1091.03,682.215 1091.59,669.236 1092.15,651.998 1092.71,667.761 1093.27,652.804 1093.83,669.997 1094.39,673.961 1094.94,708.735 1095.5,690.45 1096.06,689.89 1096.62,668.664 1097.18,684.531 1097.74,669.986 1098.3,683.345 1098.86,699.318 1099.42,698.245 1099.98,694.197 1100.54,707.396 1101.1,702.473 1101.66,701.159 1102.22,713.297 1102.77,711.251 1103.33,713.198 1103.89,727.918 1104.45,695.691 1105.01,694.762 1105.57,728.094 1106.13,715.244 1106.69,729.849 1107.25,738.755 1107.81,716.344 1108.37,730.081 1108.93,728.728 1109.49,741.709 1110.04,771.362 1110.6,734.683 1111.16,719.094 1111.72,702.12 1112.28,673.736 1112.84,689.914 1113.4,704.772 1113.96,686.294 1114.52,685.645 1115.08,687.052 1115.64,703.109 1116.2,702.079 1116.76,701.349 1117.31,671.322 1117.87,674.159 1118.43,693.225 1118.99,708.051 1119.55,706.464 1120.11,707.68 1120.67,705.191 1121.23,719.583 1121.79,735.447 1122.35,686.802 1122.91,701.264 1123.47,684.239 1124.03,666.517 1124.59,669.848 1125.14,669.453 1125.7,637.651 1126.26,638.151 1126.82,658.81 1127.38,654.923 1127.94,671.027 1128.5,700.764 1129.06,701.231 1129.62,696.846 1130.18,714.316 1130.74,729.925 1131.3,710.65 1131.86,726.871 1132.41,740.751 1132.97,718.967 1133.53,734.443 1134.09,764.39 1134.65,760.427 1135.21,738.023 1135.77,674.631 1136.33,658.97 1136.89,675.446 1137.45,658.811 1138.01,678.137 1138.57,692.016 1139.13,658.067 1139.68,689.718 1140.24,681.879 1140.8,668.675 1141.36,700.039 1141.92,716.415 1142.48,668.624 1143.04,682.499 1143.6,681.001 1144.16,666.165 1144.72,679.965 1145.28,679.656 1145.84,679.193 1146.4,614.903 1146.96,600.315 1147.51,571.77 1148.07,591.251 1148.63,660.186 1149.19,679.959 1149.75,695.799 1150.31,662.877 1150.87,680.275 1151.43,665.337 1151.99,682.699 1152.55,682.871 1153.11,700.108 1153.67,730.182 1154.23,710.695 1154.78,709.146 1155.34,710.548 1155.9,689.941 1156.46,670.804 1157.02,685.183 1157.58,684.531 1158.14,670.013 1158.7,656.075 1159.26,641.615 1159.82,628.806 1160.38,629.868 1160.94,631.44 1161.5,634.994 1162.05,604.965 1162.61,624.804 1163.17,646.264 1163.73,660.031 1164.29,661.713 1164.85,635.133 1165.41,653.817 1165.97,639.521 1166.53,673.327 1167.09,641.387 1167.65,647.228 1168.21,633.129 1168.77,634.249 1169.33,639.218 1169.88,642.821 1170.44,646.796 1171,648.483 1171.56,652.525 1172.12,671.239 1172.68,622.393 1173.24,622.621 1173.8,625.315 1174.36,611.459 1174.92,634.024 1175.48,634.431 1176.04,622.225 1176.6,591.481 1177.15,597.583 1177.71,586.077 1178.27,593.147 1178.83,595.269 1179.39,599.628 1179.95,570.59 1180.51,562.902 1181.07,566.124 1181.63,586.401 1182.19,594.495 1182.75,630.913 1183.31,649.424 1183.87,638.765 1184.43,642.635 1184.98,612.955 1185.54,615.751 1186.1,637.586 1186.66,658.568 1187.22,660.793 1187.78,645.663 1188.34,664.499 1188.9,666.835 1189.46,684.257 1190.02,686.973 1190.58,705.577 1191.14,706.447 1191.7,705.52 1192.25,689.817 1192.81,726.461 1193.37,757.017 1193.93,752.268 1194.49,731.488 1195.05,745.354 1195.61,706.336 1196.17,691.048 1196.73,687.316 1197.29,688.999 1197.85,688.573 1198.41,686.413 1198.97,673 1199.52,717.157 1200.08,719.907 1200.64,731.951 1201.2,730.722 1201.76,694.773 1202.32,694.199 1202.88,695.584 1203.44,713.87 1204,729.501 1204.56,725.184 1205.12,738.016 1205.68,720.775 1206.24,720.293 1206.8,672.554 1207.35,655.751 1207.91,707.726 1208.47,705.598 1209.03,691.634 1209.59,674.679 1210.15,654.871 1210.71,673.038 1211.27,642.13 1211.83,661.494 1212.39,664.063 1212.95,677.255 1213.51,709.753 1214.07,707.673 1214.62,702.674 1215.18,699.941 1215.74,703.006 1216.3,698.895 1216.86,678.765 1217.42,676.919 1217.98,706.325 1218.54,670.913 1219.1,669.977 1219.66,636.91 1220.22,638.687 1220.78,609.365 1221.34,595.827 1221.89,618.22 1222.45,619.014 1223.01,607.74 1223.57,562.052 1224.13,567.742 1224.69,575.335 1225.25,613.034 1225.81,652.907 1226.37,673.59 1226.93,674.521 1227.49,658.126 1228.05,661.104 1228.61,708.283 1229.17,704.215 1229.72,717.93 1230.28,716.189 1230.84,696.503 1231.4,709.54 1231.96,709.836 1232.52,662.693 1233.08,664.721 1233.64,650.499 1234.2,717.13 1234.76,699.034 1235.32,698.318 1235.88,697.569 1236.44,713.389 1236.99,745.687 1237.55,744.01 1238.11,740.24 1238.67,756.449 1239.23,734.982 1239.79,735.435 1240.35,748.245 1240.91,758.237 1241.47,751.776 1242.03,733.568 1242.59,713.645 1243.15,713.282 1243.71,713.298 1244.26,694.438 1244.82,692.093 1245.38,691.881 1245.94,712.795 1246.5,707.82 1247.06,705.527 1247.62,703.98 1248.18,752.742 1248.74,766.073 1249.3,793.038 1249.86,770.657 1250.42,796.916 1250.98,824.771 1251.54,798.119 1252.09,776.661 1252.65,774.912 1253.21,787.42 1253.77,796.446 1254.33,754.559 1254.89,752.604 1255.45,748.477 1256.01,746.667 1256.57,744.956 1257.13,738.138 1257.69,769.247 1258.25,716.011 1258.81,764.483 1259.36,760.229 1259.92,756.211 1260.48,770.149 1261.04,766.927 1261.6,762.609 1262.16,787.01 1262.72,732.026 1263.28,731.809 1263.84,710.02 1264.4,696.564 1264.96,693.691 1265.52,693.226 1266.08,643.494 1266.63,647.999 1267.19,647.091 1267.75,665.518 1268.31,666.316 1268.87,636.639 1269.43,652.794 1269.99,688.799 1270.55,671.005 1271.11,700.568 1271.67,696.962 1272.23,694.057 1272.79,722.897 1273.35,738.682 1273.91,717.435 1274.46,697.552 1275.02,679.881 1275.58,647.876 1276.14,649.182 1276.7,666.88 1277.26,617.469 1277.82,618.822 1278.38,655.31 1278.94,657.358 1279.5,643.702 1280.06,658.007 1280.62,689.945 1281.18,672.639 1281.73,671.312 1282.29,672.697 1282.85,672.676 1283.41,657.891 1283.97,672.752 1284.53,659.006 1285.09,660.373 1285.65,677.023 1286.21,644.12 1286.77,681.138 1287.33,697.797 1287.89,695.157 1288.45,709.338 1289,707.757 1289.56,690.635 1290.12,721.688 1290.68,721.358 1291.24,705.902 1291.8,706.232 1292.36,692.577 1292.92,706.438 1293.48,656.091 1294.04,672.388 1294.6,708.264 1295.16,740.489 1295.72,720.716 1296.28,703.358 1296.83,701.312 1297.39,683.16 1297.95,668.049 1298.51,665.786 1299.07,634.638 1299.63,636.547 1300.19,655.155 1300.75,671.376 1301.31,672.006 1301.87,689.703 1302.43,720.186 1302.99,753.644 1303.55,798.818 1304.1,821.3 1304.66,787.035 1305.22,814.987 1305.78,792.889 1306.34,820.343 1306.9,814.147 1307.46,778.224 1308.02,772.803 1308.58,767.065 1309.14,763.427 1309.7,745.07 1310.26,710.307 1310.82,690.698 1311.38,674.016 1311.93,676.897 1312.49,660.907 1313.05,645.259 1313.61,647.944 1314.17,648.448 1314.73,631.566 1315.29,600.711 1315.85,637.849 1316.41,640.099 1316.97,641.206 1317.53,643.411 1318.09,611.789 1318.65,630.322 1319.2,650.793 1319.76,648.582 1320.32,666.267 1320.88,714.445 1321.44,695.697 1322,725.714 1322.56,690.736 1323.12,709.755 1323.68,708.593 1324.24,710.602 1324.8,728.147 1325.36,724.765 1325.92,704.546 1326.47,704.179 1327.03,703.418 1327.59,715.438 1328.15,694.977 1328.71,645.645 1329.27,683.458 1329.83,731.386 1330.39,682.088 1330.95,684.618 1331.51,667.157 1332.07,653.525 1332.63,671.492 1333.19,702.355 1333.75,700.286 1334.3,666.924 1334.86,634.814 1335.42,651.404 1335.98,665.766 1336.54,618.234 1337.1,620.505 1337.66,592.458 1338.22,530.345 1338.78,559.781 1339.34,566.002 1339.9,606.868 1340.46,566.415 1341.02,557.96 1341.57,582.851 1342.13,589.099 1342.69,576.982 1343.25,536.184 1343.81,542.909 1344.37,553.73 1344.93,564.077 1345.49,623.098 1346.05,607.498 1346.61,577.779 1347.17,581.633 1347.73,554.856 1348.29,545.285 1348.84,554.302 1349.4,563.345 1349.96,572.861 1350.52,563.742 1351.08,586.733 1351.64,576.059 1352.2,615.756 1352.76,620.404 1353.32,657.785 1353.88,661.952 1354.44,663.018 1355,647.585 1355.56,663.839 1356.12,645.631 1356.67,662.248 1357.23,663.885 1357.79,681.98 1358.35,683.469 1358.91,685.395 1359.47,672.486 1360.03,694.017 1360.59,677.623 1361.15,693.064 1361.71,678.71 1362.27,696.231 1362.83,684.362 1363.39,669.144 1363.94,635.54 1364.5,620.739 1365.06,646.809 1365.62,648.113 1366.18,635.344 1366.74,655.577 1367.3,640.097 1367.86,627.579 1368.42,662.347 1368.98,612.709 1369.54,650.465 1370.1,666.911 1370.66,666.873 1371.21,670.717 1371.77,670.738 1372.33,673.161 1372.89,688.372 1373.45,656.032 1374.01,658.999 1374.57,635.289 1375.13,622.931 1375.69,644.829 1376.25,661.165 1376.81,678.513 1377.37,662.128 1377.93,662.254 1378.49,644.903 1379.04,663.45 1379.6,698.609 1380.16,684.013 1380.72,681.858 1381.28,662.844 1381.84,711.72 1382.4,693.521 1382.96,694.811 1383.52,677.182 1384.08,678.935 1384.64,676.132 1385.2,678.192 1385.76,698.768 1386.31,697.246 1386.87,727.433 1387.43,771.171 1387.99,780.813 1388.55,775.267 1389.11,772.221 1389.67,752.216 1390.23,751.816 1390.79,796.157 1391.35,774.45 1391.91,772.813 1392.47,765.572 1393.03,808.026 1393.58,864.497 1394.14,868.443 1394.7,858.622 1395.26,865.38 1395.82,836.357 1396.38,810.458 1396.94,789.741 1397.5,787.503 1398.06,768.861 1398.62,766.6 1399.18,793.894 1399.74,790.706 1400.3,719.384 1400.86,748.863 1401.41,732.104 1401.97,743.54 1402.53,757.072 1403.09,753.087 1403.65,747.741 1404.21,697.302 1404.77,677.887 1405.33,659.666 1405.89,662.318 1406.45,633.292 1407.01,619.016 1407.57,639.828 1408.13,660.344 1408.68,661.35 1409.24,663.106 1409.8,663.984 1410.36,697.601 1410.92,710.505 1411.48,678.372 1412.04,711.249 1412.6,707.862 1413.16,703.944 1413.72,700.459 1414.28,700.274 1414.84,701.032 1415.4,648.551 1415.95,653.074 1416.51,717.872 1417.07,745.864 1417.63,759.68 1418.19,757.554 1418.75,718.782 1419.31,735.828 1419.87,730.183 1420.43,665.078 1420.99,665.47 1421.55,632.343 1422.11,665.115 1422.67,633.736 1423.23,620.952 1423.78,609.907 1424.34,613.396 1424.9,617.701 1425.46,638.631 1426.02,594.85 1426.58,580.603 1427.14,599.739 1427.7,586.419 1428.26,607.352 1428.82,594.594 1429.38,616.259 1429.94,634.925 1430.5,603.02 1431.05,605.609 1431.61,623.727 1432.17,610.31 1432.73,613.367 1433.29,617.794 1433.85,658.522 1434.41,661.354 1434.97,646.004 1435.53,628.876 1436.09,598.42 1436.65,633.79 1437.21,636.502 1437.77,655.04 1438.33,641.103 1438.88,659.201 1439.44,643.315 1440,678.351 1440.56,678.081 1441.12,662.708 1441.68,680.362 1442.24,682.045 1442.8,681.089 1443.36,680.581 1443.92,683.608 1444.48,682.653 1445.04,699.207 1445.6,717.32 1446.15,664.681 1446.71,682.637 1447.27,697.541 1447.83,696.63 1448.39,666.639 1448.95,654.071 1449.51,622.626 1450.07,609.622 1450.63,615.61 1451.19,637.372 1451.75,609.366 1452.31,564.045 1452.87,554.615 1453.42,545.574 1453.98,549.529 1454.54,538.656 1455.1,547.479 1455.66,506.934 1456.22,499.676 1456.78,513.036 1457.34,539.22 1457.9,595.825 1458.46,568.861 1459.02,591.609 1459.58,562.507 1460.14,553.339 1460.7,545.122 1461.25,551.015 1461.81,559.333 1462.37,583.108 1462.93,602.537 1463.49,606.855 1464.05,609.714 1464.61,644.711 1465.17,678.331 1465.73,679.752 1466.29,647.452 1466.85,647.987 1467.41,683.133 1467.97,683.88 1468.52,698.564 1469.08,680.032 1469.64,679.507 1470.2,661.638 1470.76,678.955 1471.32,696.099 1471.88,713.198 1472.44,680.582 1473,731.221 1473.56,727.343 1474.12,743.103 1474.68,742.52 1475.24,755.471 1475.79,750.49 1476.35,762.727 1476.91,790.657 1477.47,834.743 1478.03,840.542 1478.59,833.646 1479.15,824.409 1479.71,852.823 1480.27,842.853 1480.83,818.039 1481.39,810.033 1481.95,755.334 1482.51,764.35 1483.07,775.045 1483.62,789.93 1484.18,749.532 1484.74,767.313 1485.3,759.924 1485.86,755.661 1486.42,753.999 1486.98,751.217 1487.54,747.084 1488.1,697.223 1488.66,683.056 1489.22,669.181 1489.78,640.145 1490.34,662.054 1490.89,650.639 1491.45,651.699 1492.01,623.559 1492.57,644.358 1493.13,676.682 1493.69,679.001 1494.25,700.452 1494.81,684.079 1495.37,698.242 1495.93,730.146 1496.49,715.046 1497.05,726.957 1497.61,738.926 1498.16,754.118 1498.72,730.436 1499.28,714.336 1499.84,715.2 1500.4,745.794 1500.96,739.598 1501.52,769.706 1502.08,749.607 1502.64,716.151 1503.2,699.35 1503.76,683.933 1504.32,696.64 1504.88,728.285 1505.44,705.724 1505.99,717.703 1506.55,697.886 1507.11,661.659 1507.67,617.95 1508.23,619.708 1508.79,654.259 1509.35,653.637 1509.91,656.984 1510.47,673.878 1511.03,674.208 1511.59,691.219 1512.15,707.179 1512.71,770.786 1513.26,797.042 1513.82,792.807 1514.38,753.831 1514.94,731.688 1515.5,725.507 1516.06,704.926 1516.62,684.736 1517.18,651.343 1517.74,652.06 1518.3,669.379 1518.86,670.098 1519.42,672.192 1519.98,674.904 1520.53,657.671 1521.09,652.705 1521.65,637.379 1522.21,655.733 1522.77,642.582 1523.33,661.385 1523.89,680.233 1524.45,633.811 1525.01,637.824 1525.57,606.54 1526.13,646.078 1526.69,678.481 1527.25,677.105 1527.81,674.333 1528.36,689.139 1528.92,736.967 1529.48,687.951 1530.04,686.333 1530.6,688.645 1531.16,719.337 1531.72,720.234 1532.28,719.25 1532.84,701.916 1533.4,685.891 1533.96,688.169 1534.52,704.64 1535.08,732.782 1535.63,747.265 1536.19,760.395 1536.75,708.787 1537.31,708.001 1537.87,656.514 1538.43,660.991 1538.99,661.528 1539.55,678.058 1540.11,725.998 1540.67,721.413 1541.23,718.45 1541.79,711.776 1542.35,693.16 1542.9,693.157 1543.46,694.858 1544.02,662.891 1544.58,649.401 1545.14,621.339 1545.7,611.519 1546.26,635.638 1546.82,643.538 1547.38,645.873 1547.94,647.264 1548.5,651.948 1549.06,652.437 1549.62,648.217 1550.18,650.039 1550.73,669.245 1551.29,668.784 1551.85,649.422 1552.41,635.292 1552.97,652.199 1553.53,671.48 1554.09,670.892 1554.65,689.68 1555.21,653.647 1555.77,669.852 1556.33,653.598 1556.89,671.133 1557.45,673.189 1558,658.175 1558.56,626.167 1559.12,628.256 1559.68,646.376 1560.24,647.706 1560.8,666.967 1561.36,651.99 1561.92,702.875 1562.48,718.308 1563.04,700.273 1563.6,680.878 1564.16,661.857 1564.72,661.651 1565.28,662.835 1565.83,662.466 1566.39,664.242 1566.95,683.866 1567.51,701.6 1568.07,683.685 1568.63,665.311 1569.19,714.316 1569.75,747.836 1570.31,759.815 1570.87,753.729 1571.43,747.655 1571.99,747.001 1572.55,761.201 1573.1,740.755 1573.66,753.64 1574.22,747.52 1574.78,742.749 1575.34,739.694 1575.9,765.165 1576.46,773.198 1577.02,733.231 1577.58,748.314 1578.14,730.844 1578.7,744.361 1579.26,771.947 1579.82,766.865 1580.37,809.572 1580.93,789.981 1581.49,768.495 1582.05,763.352 1582.61,744.988 1583.17,723.3 1583.73,705.631 1584.29,708.502 1584.85,708.659 1585.41,691.529 1585.97,678.908 1586.53,666.34 1587.09,649.571 1587.65,650.539 1588.2,617.659 1588.76,604.23 1589.32,594.704 1589.88,568.038 1590.44,556.806 1591,641.442 1591.56,630.607 1592.12,635.049 1592.68,636.265 1593.24,619.873 1593.8,640.409 1594.36,642.868 1594.92,643.714 1595.47,646.913 1596.03,678.508 1596.59,666.271 1597.15,668.393 1597.71,668.148 1598.27,652.395 1598.83,653.587 1599.39,655.018 1599.95,656.012 1600.51,673.445 1601.07,659.085 1601.63,661.869 1602.19,663.584 1602.74,681.817 1603.3,728.231 1603.86,725.021 1604.42,705.64 1604.98,689.513 1605.54,686.075 1606.1,701.324 1606.66,667.17 1607.22,700.663 1607.78,669.634 1608.34,672.347 1608.9,652.968 1609.46,653.037 1610.02,655.751 1610.57,675.555 1611.13,673.76 1611.69,673.841 1612.25,657.106 1612.81,643.909 1613.37,660.873 1613.93,663.446 1614.49,664.04 1615.05,679.215 1615.61,666.185 1616.17,665.564 1616.73,710.851 1617.29,725.352 1617.84,755.378 1618.4,751.434 1618.96,762.95 1619.52,764.822 1620.08,761.361 1620.64,759.03 1621.2,786.547 1621.76,750.296 1622.32,749.491 1622.88,760.414 1623.44,754.945 1624,733.132 1624.56,731.331 1625.11,713.003 1625.67,756.317 1626.23,735.095 1626.79,700.432 1627.35,682.815 1627.91,682.7 1628.47,666.829 1629.03,684.963 1629.59,668.842 1630.15,666.51 1630.71,634.634 1631.27,622.988 1631.83,660.357 1632.39,645.735 1632.94,680.951 1633.5,682.848 1634.06,652.151 1634.62,618.697 1635.18,588.078 1635.74,595.053 1636.3,597.839 1636.86,586.703 1637.42,580.732 1637.98,571.894 1638.54,560.189 1639.1,580.071 1639.66,636.764 1640.21,639.602 1640.77,642 1641.33,673.506 1641.89,676.275 1642.45,690.893 1643.01,708.769 1643.57,693.727 1644.13,694.508 1644.69,707.793 1645.25,724.156 1645.81,740.993 1646.37,753.82 1646.93,731.468 1647.48,730.749 1648.04,712.598 1648.6,723.493 1649.16,736.633 1649.72,736.263 1650.28,749.688 1650.84,761.642 1651.4,775.009 1651.96,816.278 1652.52,858.371 1653.08,832.006 1653.64,822.556 1654.2,796.712 1654.76,822.419 1655.31,783.638 1655.87,778.624 1656.43,725.489 1656.99,704.192 1657.55,702.638 1658.11,720.856 1658.67,703.087 1659.23,733.497 1659.79,795.112 1660.35,823.864 1660.91,831.286 1661.47,773.836 1662.03,769.12 1662.58,750.698 1663.14,729.654 1663.7,695.877 1664.26,678.2 1664.82,662.357 1665.38,628.403 1665.94,631.633 1666.5,667.154 1667.06,714.84 1667.62,713.283 1668.18,729.728 1668.74,711.741 1669.3,709.812 1669.85,740.721 1670.41,738.103 1670.97,719.204 1671.53,694.368 1672.09,708.071 1672.65,756.045 1673.21,702.395 1673.77,700.838 1674.33,711.812 1674.89,758.044 1675.45,717.989 1676.01,700.456 1676.57,694.551 1677.13,661.324 1677.68,648.279 1678.24,680.516 1678.8,679.133 1679.36,644.573 1679.92,629.746 1680.48,614.299 1681.04,584.682 1681.6,575.532 1682.16,532.229 1682.72,572.735 1683.28,578.976 1683.84,603.343 1684.4,626.083 1684.95,634.205 1685.51,668.241 1686.07,716.011 1686.63,728.784 1687.19,727.201 1687.75,708.584 1688.31,710.449 1688.87,757.258 1689.43,770.302 1689.99,736.105 1690.55,766.908 1691.11,783.012 1691.67,764.177 1692.23,805.61 1692.78,799.784 1693.34,793.645 1693.9,790.046 1694.46,772.15 1695.02,721.329 1695.58,725.188 1696.14,728.308 1696.7,709.737 1697.26,692.877 1697.82,711.02 1698.38,723.732 1698.94,689.325 1699.5,721.491 1700.05,733.282 1700.61,726.436 1701.17,757.077 1701.73,737.365 1702.29,716.871 1702.85,686.811 1703.41,689.963 1703.97,689.058 1704.53,642.262 1705.09,626.389 1705.65,632.715 1706.21,635.571 1706.77,636.769 1707.32,640.039 1707.88,623.085 1708.44,628.863 1709,613.718 1709.56,587.213 1710.12,611.978 1710.68,619.577 1711.24,556.43 1711.8,549.442 1712.36,604.587 1712.92,624.127 1713.48,607.577 1714.04,579.012 1714.6,585.109 1715.15,607.614 1715.71,612.539 1716.27,632.738 1716.83,634.743 1717.39,670.065 1717.95,666.598 1718.51,683.743 1719.07,680.032 1719.63,696.462 1720.19,696.669 1720.75,680.103 1721.31,666.696 1721.87,678.627 1722.42,708.975 1722.98,678.151 1723.54,677.365 1724.1,680.473 1724.66,679.878 1725.22,666.306 1725.78,702.802 1726.34,750.221 1726.9,763.238 1727.46,741.951 1728.02,720.966 1728.58,698.73 1729.14,682.497 1729.69,651.951 1730.25,640.364 1730.81,609.824 1731.37,583.087 1731.93,589.177 1732.49,579.808 1733.05,585.364 1733.61,570.529 1734.17,573.029 1734.73,625.004 1735.29,626.03 1735.85,630.305 1736.41,649.172 1736.97,653.07 1737.52,657.128 1738.08,643.394 1738.64,649.287 1739.2,670.76 1739.76,703.128 1740.32,684.437 1740.88,698.107 1741.44,663.376 1742,679.534 1742.56,684.966 1743.12,668.574 1743.68,684.296 1744.24,684.196 1744.79,732.336 1745.35,761.85 1745.91,726.935 1746.47,675.528 1747.03,658.598 1747.59,675.232 1748.15,677.122 1748.71,725.658 1749.27,753.689 1749.83,717.538 1750.39,713.055 1750.95,713.205 1751.51,693.889 1752.06,692.953 1752.62,642.511 1753.18,694.145 1753.74,742.704 1754.3,724.669 1754.86,738.782 1755.42,734.021 1755.98,748.049 1756.54,743.306 1757.1,707.357 1757.66,689.795 1758.22,708.619 1758.78,704.132 1759.34,685.148 1759.89,670.1 1760.45,667.779 1761.01,665.751 1761.57,682.253 1762.13,650.37 1762.69,666.969 1763.25,669.66 1763.81,671.986 1764.37,669.524 1764.93,653.816 1765.49,655.956 1766.05,642.287 1766.61,612.934 1767.16,601.426 1767.72,640.209 1768.28,658.505 1768.84,676.751 1769.4,662.643 1769.96,667.495 1770.52,635.585 1771.08,641.033 1771.64,627.566 1772.2,626.925 1772.76,630.979 1773.32,631.917 1773.88,652.388 1774.43,685.888 1774.99,684.566 1775.55,682.566 1776.11,731.78 1776.67,713.107 1777.23,728.617 1777.79,710.788 1778.35,726.582 1778.91,722.647 1779.47,722.907 1780.03,723.032 1780.59,704.912 1781.15,700.776 1781.71,729.993 1782.26,742.522 1782.82,704.93 1783.38,688.888 1783.94,716.139 1784.5,685.261 1785.06,669.41 1785.62,657.129 1786.18,657.852 1786.74,641.876 1787.3,663.545 1787.86,662.553 1788.42,663.57 1788.98,667.384 1789.53,667.381 1790.09,670.149 1790.65,670.228 1791.21,655.54 1791.77,655.116 1792.33,657.619 1792.89,661.5 1793.45,664.674 1794.01,683.089 1794.57,686.067 1795.13,690.532 1795.69,705.58 1796.25,704.488 1796.8,719.391 1797.36,685.451 1797.92,703.015 1798.48,688.222 1799.04,688.111 1799.6,671.722 1800.16,643.363 1800.72,662.802 1801.28,631.952 1801.84,684.381 1802.4,702.172 1802.96,685.729 1803.52,654.457 1804.08,625.315 1804.63,626.487 1805.19,646.333 1805.75,631.396 1806.31,584.64 1806.87,571.506 1807.43,611.432 1807.99,614.691 1808.55,584.842 1809.11,604.902 1809.67,643.062 1810.23,647.138 1810.79,665.5 1811.35,687.46 1811.9,707.002 1812.46,676.727 1813.02,681.764 1813.58,683.41 1814.14,682.452 1814.7,683.668 1815.26,664.674 1815.82,694.934 1816.38,761.643 1816.94,790.955 1817.5,788.688 1818.06,748.593 1818.62,760.037 1819.18,760.382 1819.73,791.685 1820.29,786.901 1820.85,795.97 1821.41,789.827 1821.97,800.712 1822.53,825.164 1823.09,783.482 1823.65,763.451 1824.21,776.005 1824.77,740.134 1825.33,703.552 1825.89,701.452 1826.45,717.447 1827,730.481 1827.56,680.897 1828.12,665.356 1828.68,662.773 1829.24,647.571 1829.8,633.586 1830.36,634.14 1830.92,636.925 1831.48,685.969 1832.04,718.582 1832.6,665.869 1833.16,684.953 1833.72,702.252 1834.27,696.501 1834.83,726.988 1835.39,724.448 1835.95,725.202 1836.51,723.071 1837.07,737.071 1837.63,717.469 1838.19,730.112 \"/>\n<path clip-path=\"url(#clip443)\" d=\"M720.247 690.554 L720.806 690.554 L721.365 690.554 L721.924 690.554 L722.484 690.554 L723.043 690.554 L723.602 690.554 L724.161 690.554 L724.721 690.554 L725.28 690.554 L725.839 690.554 L726.398 690.554 L726.958 690.554 L727.517 690.554 L728.076 690.554 L728.635 690.554 L729.195 690.554 L729.754 690.554 L730.313 690.554 L730.872 690.554 L731.432 690.554 L731.991 690.554 L732.55 690.554 L733.109 690.554 L733.669 690.554 L734.228 690.554 L734.787 690.554 L735.346 690.554 L735.906 690.554 L736.465 690.554 L737.024 690.554 L737.583 690.554 L738.143 690.554 L738.702 690.554 L739.261 690.554 L739.82 690.554 L740.38 690.554 L740.939 690.554 L741.498 690.554 L742.057 690.554 L742.617 690.554 L743.176 690.554 L743.735 690.554 L744.294 690.554 L744.854 690.554 L745.413 690.554 L745.972 690.554 L746.531 690.554 L747.091 690.554 L747.65 690.554 L748.209 690.554 L748.768 690.554 L749.328 690.554 L749.887 690.554 L750.446 690.554 L751.005 690.554 L751.565 690.554 L752.124 690.554 L752.683 690.554 L753.242 690.554 L753.802 690.554 L754.361 690.554 L754.92 690.554 L755.479 690.554 L756.039 690.554 L756.598 690.554 L757.157 690.554 L757.716 690.554 L758.276 690.554 L758.835 690.554 L759.394 690.554 L759.953 690.554 L760.513 690.554 L761.072 690.554 L761.631 690.554 L762.19 690.554 L762.75 690.554 L763.309 690.554 L763.868 690.554 L764.427 690.554 L764.987 690.554 L765.546 690.554 L766.105 690.554 L766.664 690.554 L767.224 690.554 L767.783 690.554 L768.342 690.554 L768.901 690.554 L769.461 690.554 L770.02 690.554 L770.579 690.554 L771.138 690.554 L771.698 690.554 L772.257 690.554 L772.816 690.554 L773.375 690.554 L773.935 690.554 L774.494 690.554 L775.053 690.554 L775.612 690.554 L776.172 690.554 L776.731 690.554 L777.29 690.554 L777.849 690.554 L778.409 690.554 L778.968 690.554 L779.527 690.554 L780.086 690.554 L780.646 690.554 L781.205 690.554 L781.764 690.554 L782.323 690.554 L782.883 690.554 L783.442 690.554 L784.001 690.554 L784.56 690.554 L785.12 690.554 L785.679 690.554 L786.238 690.554 L786.797 690.554 L787.357 690.554 L787.916 690.554 L788.475 690.554 L789.034 690.554 L789.594 690.554 L790.153 690.554 L790.712 690.554 L791.271 690.554 L791.831 690.554 L792.39 690.554 L792.949 690.554 L793.508 690.554 L794.068 690.554 L794.627 690.554 L795.186 690.554 L795.745 690.554 L796.305 690.554 L796.864 690.554 L797.423 690.554 L797.982 690.554 L798.542 690.554 L799.101 690.554 L799.66 690.554 L800.219 690.554 L800.779 690.554 L801.338 690.554 L801.897 690.554 L802.456 690.554 L803.016 690.554 L803.575 690.554 L804.134 690.554 L804.693 690.554 L805.253 690.554 L805.812 690.554 L806.371 690.554 L806.931 690.554 L807.49 690.554 L808.049 690.554 L808.608 690.554 L809.168 690.554 L809.727 690.554 L810.286 690.554 L810.845 690.554 L811.405 690.554 L811.964 690.554 L812.523 690.554 L813.082 690.554 L813.642 690.554 L814.201 690.554 L814.76 690.554 L815.319 690.554 L815.879 690.554 L816.438 690.554 L816.997 690.554 L817.556 690.554 L818.116 690.554 L818.675 690.554 L819.234 690.554 L819.793 690.554 L820.353 690.554 L820.912 690.554 L821.471 690.554 L822.03 690.554 L822.59 690.554 L823.149 690.554 L823.708 690.554 L824.267 690.554 L824.827 690.554 L825.386 690.554 L825.945 690.554 L826.504 690.554 L827.064 690.554 L827.623 690.554 L828.182 690.554 L828.741 690.554 L829.301 690.554 L829.86 690.554 L830.419 690.554 L830.978 690.554 L831.538 690.554 L832.097 690.554 L832.656 690.554 L833.215 690.554 L833.775 690.554 L834.334 690.554 L834.893 690.554 L835.452 690.554 L836.012 690.554 L836.571 690.554 L837.13 690.554 L837.689 690.554 L838.249 690.554 L838.808 690.554 L839.367 690.554 L839.926 690.554 L840.486 690.554 L841.045 690.554 L841.604 690.554 L842.163 690.554 L842.723 690.554 L843.282 690.554 L843.841 690.554 L844.4 690.554 L844.96 690.554 L845.519 690.554 L846.078 690.554 L846.637 690.554 L847.197 690.554 L847.756 690.554 L848.315 690.554 L848.874 690.554 L849.434 690.554 L849.993 690.554 L850.552 690.554 L851.111 690.554 L851.671 690.554 L852.23 690.554 L852.789 690.554 L853.348 690.554 L853.908 690.554 L854.467 690.554 L855.026 690.554 L855.585 690.554 L856.145 690.554 L856.704 690.554 L857.263 690.554 L857.822 690.554 L858.382 690.554 L858.941 690.554 L859.5 690.554 L860.059 690.554 L860.619 690.554 L861.178 690.554 L861.737 690.554 L862.296 690.554 L862.856 690.554 L863.415 690.554 L863.974 690.554 L864.533 690.554 L865.093 690.554 L865.652 690.554 L866.211 690.554 L866.77 690.554 L867.33 690.554 L867.889 690.554 L868.448 690.554 L869.007 690.554 L869.567 690.554 L870.126 690.554 L870.685 690.554 L871.244 690.554 L871.804 690.554 L872.363 690.554 L872.922 690.554 L873.481 690.554 L874.041 690.554 L874.6 690.554 L875.159 690.554 L875.718 690.554 L876.278 690.554 L876.837 690.554 L877.396 690.554 L877.955 690.554 L878.515 690.554 L879.074 690.554 L879.633 690.554 L880.192 690.554 L880.752 690.554 L881.311 690.554 L881.87 690.554 L882.429 690.554 L882.989 690.554 L883.548 690.554 L884.107 690.554 L884.666 690.554 L885.226 690.554 L885.785 690.554 L886.344 690.554 L886.903 690.554 L887.463 690.554 L888.022 690.554 L888.581 690.554 L889.14 690.554 L889.7 690.554 L890.259 690.554 L890.818 690.554 L891.377 690.554 L891.937 690.554 L892.496 690.554 L893.055 690.554 L893.614 690.554 L894.174 690.554 L894.733 690.554 L895.292 690.554 L895.851 690.554 L896.411 690.554 L896.97 690.554 L897.529 690.554 L898.088 690.554 L898.648 690.554 L899.207 690.554 L899.766 690.554 L900.325 690.554 L900.885 690.554 L901.444 690.554 L902.003 690.554 L902.562 690.554 L903.122 690.554 L903.681 690.554 L904.24 690.554 L904.799 690.554 L905.359 690.554 L905.918 690.554 L906.477 690.554 L907.036 690.554 L907.596 690.554 L908.155 690.554 L908.714 690.554 L909.273 690.554 L909.833 690.554 L910.392 690.554 L910.951 690.554 L911.51 690.554 L912.07 690.554 L912.629 690.554 L913.188 690.554 L913.747 690.554 L914.307 690.554 L914.866 690.554 L915.425 690.554 L915.984 690.554 L916.544 690.554 L917.103 690.554 L917.662 690.554 L918.221 690.554 L918.781 690.554 L919.34 690.554 L919.899 690.554 L920.458 690.554 L921.018 690.554 L921.577 690.554 L922.136 690.554 L922.695 690.554 L923.255 690.554 L923.814 690.554 L924.373 690.554 L924.932 690.554 L925.492 690.554 L926.051 690.554 L926.61 690.554 L927.169 690.554 L927.729 690.554 L928.288 690.554 L928.847 690.554 L929.406 690.554 L929.966 690.554 L930.525 690.554 L931.084 690.554 L931.644 690.554 L932.203 690.554 L932.762 690.554 L933.321 690.554 L933.881 690.554 L934.44 690.554 L934.999 690.554 L935.558 690.554 L936.118 690.554 L936.677 690.554 L937.236 690.554 L937.795 690.554 L938.355 690.554 L938.914 690.554 L939.473 690.554 L940.032 690.554 L940.592 690.554 L941.151 690.554 L941.71 690.554 L942.269 690.554 L942.829 690.554 L943.388 690.554 L943.947 690.554 L944.506 690.554 L945.066 690.554 L945.625 690.554 L946.184 690.554 L946.743 690.554 L947.303 690.554 L947.862 690.554 L948.421 690.554 L948.98 690.554 L949.54 690.554 L950.099 690.554 L950.658 690.554 L951.217 690.554 L951.777 690.554 L952.336 690.554 L952.895 690.554 L953.454 690.554 L954.014 690.554 L954.573 690.554 L955.132 690.554 L955.691 690.554 L956.251 690.554 L956.81 690.554 L957.369 690.554 L957.928 690.554 L958.488 690.554 L959.047 690.554 L959.606 690.554 L960.165 690.554 L960.725 690.554 L961.284 690.554 L961.843 690.554 L962.402 690.554 L962.962 690.554 L963.521 690.554 L964.08 690.554 L964.639 690.554 L965.199 690.554 L965.758 690.554 L966.317 690.554 L966.876 690.554 L967.436 690.554 L967.995 690.554 L968.554 690.554 L969.113 690.554 L969.673 690.554 L970.232 690.554 L970.791 690.554 L971.35 690.554 L971.91 690.554 L972.469 690.554 L973.028 690.554 L973.587 690.554 L974.147 690.554 L974.706 690.554 L975.265 690.554 L975.824 690.554 L976.384 690.554 L976.943 690.554 L977.502 690.554 L978.061 690.554 L978.621 690.554 L979.18 690.554 L979.739 690.554 L980.298 690.554 L980.858 690.554 L981.417 690.554 L981.976 690.554 L982.535 690.554 L983.095 690.554 L983.654 690.554 L984.213 690.554 L984.772 690.554 L985.332 690.554 L985.891 690.554 L986.45 690.554 L987.009 690.554 L987.569 690.554 L988.128 690.554 L988.687 690.554 L989.246 690.554 L989.806 690.554 L990.365 690.554 L990.924 690.554 L991.483 690.554 L992.043 690.554 L992.602 690.554 L993.161 690.554 L993.72 690.554 L994.28 690.554 L994.839 690.554 L995.398 690.554 L995.957 690.554 L996.517 690.554 L997.076 690.554 L997.635 690.554 L998.194 690.554 L998.754 690.554 L999.313 690.554 L999.872 690.554 L1000.43 690.554 L1000.99 690.554 L1001.55 690.554 L1002.11 690.554 L1002.67 690.554 L1003.23 690.554 L1003.79 690.554 L1004.35 690.554 L1004.91 690.554 L1005.46 690.554 L1006.02 690.554 L1006.58 690.554 L1007.14 690.554 L1007.7 690.554 L1008.26 690.554 L1008.82 690.554 L1009.38 690.554 L1009.94 690.554 L1010.5 690.554 L1011.06 690.554 L1011.62 690.554 L1012.18 690.554 L1012.73 690.554 L1013.29 690.554 L1013.85 690.554 L1014.41 690.554 L1014.97 690.554 L1015.53 690.554 L1016.09 690.554 L1016.65 690.554 L1017.21 690.554 L1017.77 690.554 L1018.33 690.554 L1018.89 690.554 L1019.45 690.554 L1020.01 690.554 L1020.56 690.554 L1021.12 690.554 L1021.68 690.554 L1022.24 690.554 L1022.8 690.554 L1023.36 690.554 L1023.92 690.554 L1024.48 690.554 L1025.04 690.554 L1025.6 690.554 L1026.16 690.554 L1026.72 690.554 L1027.28 690.554 L1027.83 690.554 L1028.39 690.554 L1028.95 690.554 L1029.51 690.554 L1030.07 690.554 L1030.63 690.554 L1031.19 690.554 L1031.75 690.554 L1032.31 690.554 L1032.87 690.554 L1033.43 690.554 L1033.99 690.554 L1034.55 690.554 L1035.1 690.554 L1035.66 690.554 L1036.22 690.554 L1036.78 690.554 L1037.34 690.554 L1037.9 690.554 L1038.46 690.554 L1039.02 690.554 L1039.58 690.554 L1040.14 690.554 L1040.7 690.554 L1041.26 690.554 L1041.82 690.554 L1042.38 690.554 L1042.93 690.554 L1043.49 690.554 L1044.05 690.554 L1044.61 690.554 L1045.17 690.554 L1045.73 690.554 L1046.29 690.554 L1046.85 690.554 L1047.41 690.554 L1047.97 690.554 L1048.53 690.554 L1049.09 690.554 L1049.65 690.554 L1050.2 690.554 L1050.76 690.554 L1051.32 690.554 L1051.88 690.554 L1052.44 690.554 L1053 690.554 L1053.56 690.554 L1054.12 690.554 L1054.68 690.554 L1055.24 690.554 L1055.8 690.554 L1056.36 690.554 L1056.92 690.554 L1057.48 690.554 L1058.03 690.554 L1058.59 690.554 L1059.15 690.554 L1059.71 690.554 L1060.27 690.554 L1060.83 690.554 L1061.39 690.554 L1061.95 690.554 L1062.51 690.554 L1063.07 690.554 L1063.63 690.554 L1064.19 690.554 L1064.75 690.554 L1065.3 690.554 L1065.86 690.554 L1066.42 690.554 L1066.98 690.554 L1067.54 690.554 L1068.1 690.554 L1068.66 690.554 L1069.22 690.554 L1069.78 690.554 L1070.34 690.554 L1070.9 690.554 L1071.46 690.554 L1072.02 690.554 L1072.57 690.554 L1073.13 690.554 L1073.69 690.554 L1074.25 690.554 L1074.81 690.554 L1075.37 690.554 L1075.93 690.554 L1076.49 690.554 L1077.05 690.554 L1077.61 690.554 L1078.17 690.554 L1078.73 690.554 L1079.29 690.554 L1079.85 690.554 L1080.4 690.554 L1080.96 690.554 L1081.52 690.554 L1082.08 690.554 L1082.64 690.554 L1083.2 690.554 L1083.76 690.554 L1084.32 690.554 L1084.88 690.554 L1085.44 690.554 L1086 690.554 L1086.56 690.554 L1087.12 690.554 L1087.67 690.554 L1088.23 690.554 L1088.79 690.554 L1089.35 690.554 L1089.91 690.554 L1090.47 690.554 L1091.03 690.554 L1091.59 690.554 L1092.15 690.554 L1092.71 690.554 L1093.27 690.554 L1093.83 690.554 L1094.39 690.554 L1094.94 690.554 L1095.5 690.554 L1096.06 690.554 L1096.62 690.554 L1097.18 690.554 L1097.74 690.554 L1098.3 690.554 L1098.86 690.554 L1099.42 690.554 L1099.98 690.554 L1100.54 690.554 L1101.1 690.554 L1101.66 690.554 L1102.22 690.554 L1102.77 690.554 L1103.33 690.554 L1103.89 690.554 L1104.45 690.554 L1105.01 690.554 L1105.57 690.554 L1106.13 690.554 L1106.69 690.554 L1107.25 690.554 L1107.81 690.554 L1108.37 690.554 L1108.93 690.554 L1109.49 690.554 L1110.04 690.554 L1110.6 690.554 L1111.16 690.554 L1111.72 690.554 L1112.28 690.554 L1112.84 690.554 L1113.4 690.554 L1113.96 690.554 L1114.52 690.554 L1115.08 690.554 L1115.64 690.554 L1116.2 690.554 L1116.76 690.554 L1117.31 690.554 L1117.87 690.554 L1118.43 690.554 L1118.99 690.554 L1119.55 690.554 L1120.11 690.554 L1120.67 690.554 L1121.23 690.554 L1121.79 690.554 L1122.35 690.554 L1122.91 690.554 L1123.47 690.554 L1124.03 690.554 L1124.59 690.554 L1125.14 690.554 L1125.7 690.554 L1126.26 690.554 L1126.82 690.554 L1127.38 690.554 L1127.94 690.554 L1128.5 690.554 L1129.06 690.554 L1129.62 690.554 L1130.18 690.554 L1130.74 690.554 L1131.3 690.554 L1131.86 690.554 L1132.41 690.554 L1132.97 690.554 L1133.53 690.554 L1134.09 690.554 L1134.65 690.554 L1135.21 690.554 L1135.77 690.554 L1136.33 690.554 L1136.89 690.554 L1137.45 690.554 L1138.01 690.554 L1138.57 690.554 L1139.13 690.554 L1139.68 690.554 L1140.24 690.554 L1140.8 690.554 L1141.36 690.554 L1141.92 690.554 L1142.48 690.554 L1143.04 690.554 L1143.6 690.554 L1144.16 690.554 L1144.72 690.554 L1145.28 690.554 L1145.84 690.554 L1146.4 690.554 L1146.96 690.554 L1147.51 690.554 L1148.07 690.554 L1148.63 690.554 L1149.19 690.554 L1149.75 690.554 L1150.31 690.554 L1150.87 690.554 L1151.43 690.554 L1151.99 690.554 L1152.55 690.554 L1153.11 690.554 L1153.67 690.554 L1154.23 690.554 L1154.78 690.554 L1155.34 690.554 L1155.9 690.554 L1156.46 690.554 L1157.02 690.554 L1157.58 690.554 L1158.14 690.554 L1158.7 690.554 L1159.26 690.554 L1159.82 690.554 L1160.38 690.554 L1160.94 690.554 L1161.5 690.554 L1162.05 690.554 L1162.61 690.554 L1163.17 690.554 L1163.73 690.554 L1164.29 690.554 L1164.85 690.554 L1165.41 690.554 L1165.97 690.554 L1166.53 690.554 L1167.09 690.554 L1167.65 690.554 L1168.21 690.554 L1168.77 690.554 L1169.33 690.554 L1169.88 690.554 L1170.44 690.554 L1171 690.554 L1171.56 690.554 L1172.12 690.554 L1172.68 690.554 L1173.24 690.554 L1173.8 690.554 L1174.36 690.554 L1174.92 690.554 L1175.48 690.554 L1176.04 690.554 L1176.6 690.554 L1177.15 690.554 L1177.71 690.554 L1178.27 690.554 L1178.83 690.554 L1179.39 690.554 L1179.95 690.554 L1180.51 690.554 L1181.07 690.554 L1181.63 690.554 L1182.19 690.554 L1182.75 690.554 L1183.31 690.554 L1183.87 690.554 L1184.43 690.554 L1184.98 690.554 L1185.54 690.554 L1186.1 690.554 L1186.66 690.554 L1187.22 690.554 L1187.78 690.554 L1188.34 690.554 L1188.9 690.554 L1189.46 690.554 L1190.02 690.554 L1190.58 690.554 L1191.14 690.554 L1191.7 690.554 L1192.25 690.554 L1192.81 690.554 L1193.37 690.554 L1193.93 690.554 L1194.49 690.554 L1195.05 690.554 L1195.61 690.554 L1196.17 690.554 L1196.73 690.554 L1197.29 690.554 L1197.85 690.554 L1198.41 690.554 L1198.97 690.554 L1199.52 690.554 L1200.08 690.554 L1200.64 690.554 L1201.2 690.554 L1201.76 690.554 L1202.32 690.554 L1202.88 690.554 L1203.44 690.554 L1204 690.554 L1204.56 690.554 L1205.12 690.554 L1205.68 690.554 L1206.24 690.554 L1206.8 690.554 L1207.35 690.554 L1207.91 690.554 L1208.47 690.554 L1209.03 690.554 L1209.59 690.554 L1210.15 690.554 L1210.71 690.554 L1211.27 690.554 L1211.83 690.554 L1212.39 690.554 L1212.95 690.554 L1213.51 690.554 L1214.07 690.554 L1214.62 690.554 L1215.18 690.554 L1215.74 690.554 L1216.3 690.554 L1216.86 690.554 L1217.42 690.554 L1217.98 690.554 L1218.54 690.554 L1219.1 690.554 L1219.66 690.554 L1220.22 690.554 L1220.78 690.554 L1221.34 690.554 L1221.89 690.554 L1222.45 690.554 L1223.01 690.554 L1223.57 690.554 L1224.13 690.554 L1224.69 690.554 L1225.25 690.554 L1225.81 690.554 L1226.37 690.554 L1226.93 690.554 L1227.49 690.554 L1228.05 690.554 L1228.61 690.554 L1229.17 690.554 L1229.72 690.554 L1230.28 690.554 L1230.84 690.554 L1231.4 690.554 L1231.96 690.554 L1232.52 690.554 L1233.08 690.554 L1233.64 690.554 L1234.2 690.554 L1234.76 690.554 L1235.32 690.554 L1235.88 690.554 L1236.44 690.554 L1236.99 690.554 L1237.55 690.554 L1238.11 690.554 L1238.67 690.554 L1239.23 690.554 L1239.79 690.554 L1240.35 690.554 L1240.91 690.554 L1241.47 690.554 L1242.03 690.554 L1242.59 690.554 L1243.15 690.554 L1243.71 690.554 L1244.26 690.554 L1244.82 690.554 L1245.38 690.554 L1245.94 690.554 L1246.5 690.554 L1247.06 690.554 L1247.62 690.554 L1248.18 690.554 L1248.74 690.554 L1249.3 690.554 L1249.86 690.554 L1250.42 690.554 L1250.98 690.554 L1251.54 690.554 L1252.09 690.554 L1252.65 690.554 L1253.21 690.554 L1253.77 690.554 L1254.33 690.554 L1254.89 690.554 L1255.45 690.554 L1256.01 690.554 L1256.57 690.554 L1257.13 690.554 L1257.69 690.554 L1258.25 690.554 L1258.81 690.554 L1259.36 690.554 L1259.92 690.554 L1260.48 690.554 L1261.04 690.554 L1261.6 690.554 L1262.16 690.554 L1262.72 690.554 L1263.28 690.554 L1263.84 690.554 L1264.4 690.554 L1264.96 690.554 L1265.52 690.554 L1266.08 690.554 L1266.63 690.554 L1267.19 690.554 L1267.75 690.554 L1268.31 690.554 L1268.87 690.554 L1269.43 690.554 L1269.99 690.554 L1270.55 690.554 L1271.11 690.554 L1271.67 690.554 L1272.23 690.554 L1272.79 690.554 L1273.35 690.554 L1273.91 690.554 L1274.46 690.554 L1275.02 690.554 L1275.58 690.554 L1276.14 690.554 L1276.7 690.554 L1277.26 690.554 L1277.82 690.554 L1278.38 690.554 L1278.94 690.554 L1279.5 690.554 L1280.06 690.554 L1280.62 690.554 L1281.18 690.554 L1281.73 690.554 L1282.29 690.554 L1282.85 690.554 L1283.41 690.554 L1283.97 690.554 L1284.53 690.554 L1285.09 690.554 L1285.65 690.554 L1286.21 690.554 L1286.77 690.554 L1287.33 690.554 L1287.89 690.554 L1288.45 690.554 L1289 690.554 L1289.56 690.554 L1290.12 690.554 L1290.68 690.554 L1291.24 690.554 L1291.8 690.554 L1292.36 690.554 L1292.92 690.554 L1293.48 690.554 L1294.04 690.554 L1294.6 690.554 L1295.16 690.554 L1295.72 690.554 L1296.28 690.554 L1296.83 690.554 L1297.39 690.554 L1297.95 690.554 L1298.51 690.554 L1299.07 690.554 L1299.63 690.554 L1300.19 690.554 L1300.75 690.554 L1301.31 690.554 L1301.87 690.554 L1302.43 690.554 L1302.99 690.554 L1303.55 690.554 L1304.1 690.554 L1304.66 690.554 L1305.22 690.554 L1305.78 690.554 L1306.34 690.554 L1306.9 690.554 L1307.46 690.554 L1308.02 690.554 L1308.58 690.554 L1309.14 690.554 L1309.7 690.554 L1310.26 690.554 L1310.82 690.554 L1311.38 690.554 L1311.93 690.554 L1312.49 690.554 L1313.05 690.554 L1313.61 690.554 L1314.17 690.554 L1314.73 690.554 L1315.29 690.554 L1315.85 690.554 L1316.41 690.554 L1316.97 690.554 L1317.53 690.554 L1318.09 690.554 L1318.65 690.554 L1319.2 690.554 L1319.76 690.554 L1320.32 690.554 L1320.88 690.554 L1321.44 690.554 L1322 690.554 L1322.56 690.554 L1323.12 690.554 L1323.68 690.554 L1324.24 690.554 L1324.8 690.554 L1325.36 690.554 L1325.92 690.554 L1326.47 690.554 L1327.03 690.554 L1327.59 690.554 L1328.15 690.554 L1328.71 690.554 L1329.27 690.554 L1329.83 690.554 L1330.39 690.554 L1330.95 690.554 L1331.51 690.554 L1332.07 690.554 L1332.63 690.554 L1333.19 690.554 L1333.75 690.554 L1334.3 690.554 L1334.86 690.554 L1335.42 690.554 L1335.98 690.554 L1336.54 690.554 L1337.1 690.554 L1337.66 690.554 L1338.22 690.554 L1338.78 690.554 L1339.34 690.554 L1339.9 690.554 L1340.46 690.554 L1341.02 690.554 L1341.57 690.554 L1342.13 690.554 L1342.69 690.554 L1343.25 690.554 L1343.81 690.554 L1344.37 690.554 L1344.93 690.554 L1345.49 690.554 L1346.05 690.554 L1346.61 690.554 L1347.17 690.554 L1347.73 690.554 L1348.29 690.554 L1348.84 690.554 L1349.4 690.554 L1349.96 690.554 L1350.52 690.554 L1351.08 690.554 L1351.64 690.554 L1352.2 690.554 L1352.76 690.554 L1353.32 690.554 L1353.88 690.554 L1354.44 690.554 L1355 690.554 L1355.56 690.554 L1356.12 690.554 L1356.67 690.554 L1357.23 690.554 L1357.79 690.554 L1358.35 690.554 L1358.91 690.554 L1359.47 690.554 L1360.03 690.554 L1360.59 690.554 L1361.15 690.554 L1361.71 690.554 L1362.27 690.554 L1362.83 690.554 L1363.39 690.554 L1363.94 690.554 L1364.5 690.554 L1365.06 690.554 L1365.62 690.554 L1366.18 690.554 L1366.74 690.554 L1367.3 690.554 L1367.86 690.554 L1368.42 690.554 L1368.98 690.554 L1369.54 690.554 L1370.1 690.554 L1370.66 690.554 L1371.21 690.554 L1371.77 690.554 L1372.33 690.554 L1372.89 690.554 L1373.45 690.554 L1374.01 690.554 L1374.57 690.554 L1375.13 690.554 L1375.69 690.554 L1376.25 690.554 L1376.81 690.554 L1377.37 690.554 L1377.93 690.554 L1378.49 690.554 L1379.04 690.554 L1379.6 690.554 L1380.16 690.554 L1380.72 690.554 L1381.28 690.554 L1381.84 690.554 L1382.4 690.554 L1382.96 690.554 L1383.52 690.554 L1384.08 690.554 L1384.64 690.554 L1385.2 690.554 L1385.76 690.554 L1386.31 690.554 L1386.87 690.554 L1387.43 690.554 L1387.99 690.554 L1388.55 690.554 L1389.11 690.554 L1389.67 690.554 L1390.23 690.554 L1390.79 690.554 L1391.35 690.554 L1391.91 690.554 L1392.47 690.554 L1393.03 690.554 L1393.58 690.554 L1394.14 690.554 L1394.7 690.554 L1395.26 690.554 L1395.82 690.554 L1396.38 690.554 L1396.94 690.554 L1397.5 690.554 L1398.06 690.554 L1398.62 690.554 L1399.18 690.554 L1399.74 690.554 L1400.3 690.554 L1400.86 690.554 L1401.41 690.554 L1401.97 690.554 L1402.53 690.554 L1403.09 690.554 L1403.65 690.554 L1404.21 690.554 L1404.77 690.554 L1405.33 690.554 L1405.89 690.554 L1406.45 690.554 L1407.01 690.554 L1407.57 690.554 L1408.13 690.554 L1408.68 690.554 L1409.24 690.554 L1409.8 690.554 L1410.36 690.554 L1410.92 690.554 L1411.48 690.554 L1412.04 690.554 L1412.6 690.554 L1413.16 690.554 L1413.72 690.554 L1414.28 690.554 L1414.84 690.554 L1415.4 690.554 L1415.95 690.554 L1416.51 690.554 L1417.07 690.554 L1417.63 690.554 L1418.19 690.554 L1418.75 690.554 L1419.31 690.554 L1419.87 690.554 L1420.43 690.554 L1420.99 690.554 L1421.55 690.554 L1422.11 690.554 L1422.67 690.554 L1423.23 690.554 L1423.78 690.554 L1424.34 690.554 L1424.9 690.554 L1425.46 690.554 L1426.02 690.554 L1426.58 690.554 L1427.14 690.554 L1427.7 690.554 L1428.26 690.554 L1428.82 690.554 L1429.38 690.554 L1429.94 690.554 L1430.5 690.554 L1431.05 690.554 L1431.61 690.554 L1432.17 690.554 L1432.73 690.554 L1433.29 690.554 L1433.85 690.554 L1434.41 690.554 L1434.97 690.554 L1435.53 690.554 L1436.09 690.554 L1436.65 690.554 L1437.21 690.554 L1437.77 690.554 L1438.33 690.554 L1438.88 690.554 L1439.44 690.554 L1440 690.554 L1440.56 690.554 L1441.12 690.554 L1441.68 690.554 L1442.24 690.554 L1442.8 690.554 L1443.36 690.554 L1443.92 690.554 L1444.48 690.554 L1445.04 690.554 L1445.6 690.554 L1446.15 690.554 L1446.71 690.554 L1447.27 690.554 L1447.83 690.554 L1448.39 690.554 L1448.95 690.554 L1449.51 690.554 L1450.07 690.554 L1450.63 690.554 L1451.19 690.554 L1451.75 690.554 L1452.31 690.554 L1452.87 690.554 L1453.42 690.554 L1453.98 690.554 L1454.54 690.554 L1455.1 690.554 L1455.66 690.554 L1456.22 690.554 L1456.78 690.554 L1457.34 690.554 L1457.9 690.554 L1458.46 690.554 L1459.02 690.554 L1459.58 690.554 L1460.14 690.554 L1460.7 690.554 L1461.25 690.554 L1461.81 690.554 L1462.37 690.554 L1462.93 690.554 L1463.49 690.554 L1464.05 690.554 L1464.61 690.554 L1465.17 690.554 L1465.73 690.554 L1466.29 690.554 L1466.85 690.554 L1467.41 690.554 L1467.97 690.554 L1468.52 690.554 L1469.08 690.554 L1469.64 690.554 L1470.2 690.554 L1470.76 690.554 L1471.32 690.554 L1471.88 690.554 L1472.44 690.554 L1473 690.554 L1473.56 690.554 L1474.12 690.554 L1474.68 690.554 L1475.24 690.554 L1475.79 690.554 L1476.35 690.554 L1476.91 690.554 L1477.47 690.554 L1478.03 690.554 L1478.59 690.554 L1479.15 690.554 L1479.71 690.554 L1480.27 690.554 L1480.83 690.554 L1481.39 690.554 L1481.95 690.554 L1482.51 690.554 L1483.07 690.554 L1483.62 690.554 L1484.18 690.554 L1484.74 690.554 L1485.3 690.554 L1485.86 690.554 L1486.42 690.554 L1486.98 690.554 L1487.54 690.554 L1488.1 690.554 L1488.66 690.554 L1489.22 690.554 L1489.78 690.554 L1490.34 690.554 L1490.89 690.554 L1491.45 690.554 L1492.01 690.554 L1492.57 690.554 L1493.13 690.554 L1493.69 690.554 L1494.25 690.554 L1494.81 690.554 L1495.37 690.554 L1495.93 690.554 L1496.49 690.554 L1497.05 690.554 L1497.61 690.554 L1498.16 690.554 L1498.72 690.554 L1499.28 690.554 L1499.84 690.554 L1500.4 690.554 L1500.96 690.554 L1501.52 690.554 L1502.08 690.554 L1502.64 690.554 L1503.2 690.554 L1503.76 690.554 L1504.32 690.554 L1504.88 690.554 L1505.44 690.554 L1505.99 690.554 L1506.55 690.554 L1507.11 690.554 L1507.67 690.554 L1508.23 690.554 L1508.79 690.554 L1509.35 690.554 L1509.91 690.554 L1510.47 690.554 L1511.03 690.554 L1511.59 690.554 L1512.15 690.554 L1512.71 690.554 L1513.26 690.554 L1513.82 690.554 L1514.38 690.554 L1514.94 690.554 L1515.5 690.554 L1516.06 690.554 L1516.62 690.554 L1517.18 690.554 L1517.74 690.554 L1518.3 690.554 L1518.86 690.554 L1519.42 690.554 L1519.98 690.554 L1520.53 690.554 L1521.09 690.554 L1521.65 690.554 L1522.21 690.554 L1522.77 690.554 L1523.33 690.554 L1523.89 690.554 L1524.45 690.554 L1525.01 690.554 L1525.57 690.554 L1526.13 690.554 L1526.69 690.554 L1527.25 690.554 L1527.81 690.554 L1528.36 690.554 L1528.92 690.554 L1529.48 690.554 L1530.04 690.554 L1530.6 690.554 L1531.16 690.554 L1531.72 690.554 L1532.28 690.554 L1532.84 690.554 L1533.4 690.554 L1533.96 690.554 L1534.52 690.554 L1535.08 690.554 L1535.63 690.554 L1536.19 690.554 L1536.75 690.554 L1537.31 690.554 L1537.87 690.554 L1538.43 690.554 L1538.99 690.554 L1539.55 690.554 L1540.11 690.554 L1540.67 690.554 L1541.23 690.554 L1541.79 690.554 L1542.35 690.554 L1542.9 690.554 L1543.46 690.554 L1544.02 690.554 L1544.58 690.554 L1545.14 690.554 L1545.7 690.554 L1546.26 690.554 L1546.82 690.554 L1547.38 690.554 L1547.94 690.554 L1548.5 690.554 L1549.06 690.554 L1549.62 690.554 L1550.18 690.554 L1550.73 690.554 L1551.29 690.554 L1551.85 690.554 L1552.41 690.554 L1552.97 690.554 L1553.53 690.554 L1554.09 690.554 L1554.65 690.554 L1555.21 690.554 L1555.77 690.554 L1556.33 690.554 L1556.89 690.554 L1557.45 690.554 L1558 690.554 L1558.56 690.554 L1559.12 690.554 L1559.68 690.554 L1560.24 690.554 L1560.8 690.554 L1561.36 690.554 L1561.92 690.554 L1562.48 690.554 L1563.04 690.554 L1563.6 690.554 L1564.16 690.554 L1564.72 690.554 L1565.28 690.554 L1565.83 690.554 L1566.39 690.554 L1566.95 690.554 L1567.51 690.554 L1568.07 690.554 L1568.63 690.554 L1569.19 690.554 L1569.75 690.554 L1570.31 690.554 L1570.87 690.554 L1571.43 690.554 L1571.99 690.554 L1572.55 690.554 L1573.1 690.554 L1573.66 690.554 L1574.22 690.554 L1574.78 690.554 L1575.34 690.554 L1575.9 690.554 L1576.46 690.554 L1577.02 690.554 L1577.58 690.554 L1578.14 690.554 L1578.7 690.554 L1579.26 690.554 L1579.82 690.554 L1580.37 690.554 L1580.93 690.554 L1581.49 690.554 L1582.05 690.554 L1582.61 690.554 L1583.17 690.554 L1583.73 690.554 L1584.29 690.554 L1584.85 690.554 L1585.41 690.554 L1585.97 690.554 L1586.53 690.554 L1587.09 690.554 L1587.65 690.554 L1588.2 690.554 L1588.76 690.554 L1589.32 690.554 L1589.88 690.554 L1590.44 690.554 L1591 690.554 L1591.56 690.554 L1592.12 690.554 L1592.68 690.554 L1593.24 690.554 L1593.8 690.554 L1594.36 690.554 L1594.92 690.554 L1595.47 690.554 L1596.03 690.554 L1596.59 690.554 L1597.15 690.554 L1597.71 690.554 L1598.27 690.554 L1598.83 690.554 L1599.39 690.554 L1599.95 690.554 L1600.51 690.554 L1601.07 690.554 L1601.63 690.554 L1602.19 690.554 L1602.74 690.554 L1603.3 690.554 L1603.86 690.554 L1604.42 690.554 L1604.98 690.554 L1605.54 690.554 L1606.1 690.554 L1606.66 690.554 L1607.22 690.554 L1607.78 690.554 L1608.34 690.554 L1608.9 690.554 L1609.46 690.554 L1610.02 690.554 L1610.57 690.554 L1611.13 690.554 L1611.69 690.554 L1612.25 690.554 L1612.81 690.554 L1613.37 690.554 L1613.93 690.554 L1614.49 690.554 L1615.05 690.554 L1615.61 690.554 L1616.17 690.554 L1616.73 690.554 L1617.29 690.554 L1617.84 690.554 L1618.4 690.554 L1618.96 690.554 L1619.52 690.554 L1620.08 690.554 L1620.64 690.554 L1621.2 690.554 L1621.76 690.554 L1622.32 690.554 L1622.88 690.554 L1623.44 690.554 L1624 690.554 L1624.56 690.554 L1625.11 690.554 L1625.67 690.554 L1626.23 690.554 L1626.79 690.554 L1627.35 690.554 L1627.91 690.554 L1628.47 690.554 L1629.03 690.554 L1629.59 690.554 L1630.15 690.554 L1630.71 690.554 L1631.27 690.554 L1631.83 690.554 L1632.39 690.554 L1632.94 690.554 L1633.5 690.554 L1634.06 690.554 L1634.62 690.554 L1635.18 690.554 L1635.74 690.554 L1636.3 690.554 L1636.86 690.554 L1637.42 690.554 L1637.98 690.554 L1638.54 690.554 L1639.1 690.554 L1639.66 690.554 L1640.21 690.554 L1640.77 690.554 L1641.33 690.554 L1641.89 690.554 L1642.45 690.554 L1643.01 690.554 L1643.57 690.554 L1644.13 690.554 L1644.69 690.554 L1645.25 690.554 L1645.81 690.554 L1646.37 690.554 L1646.93 690.554 L1647.48 690.554 L1648.04 690.554 L1648.6 690.554 L1649.16 690.554 L1649.72 690.554 L1650.28 690.554 L1650.84 690.554 L1651.4 690.554 L1651.96 690.554 L1652.52 690.554 L1653.08 690.554 L1653.64 690.554 L1654.2 690.554 L1654.76 690.554 L1655.31 690.554 L1655.87 690.554 L1656.43 690.554 L1656.99 690.554 L1657.55 690.554 L1658.11 690.554 L1658.67 690.554 L1659.23 690.554 L1659.79 690.554 L1660.35 690.554 L1660.91 690.554 L1661.47 690.554 L1662.03 690.554 L1662.58 690.554 L1663.14 690.554 L1663.7 690.554 L1664.26 690.554 L1664.82 690.554 L1665.38 690.554 L1665.94 690.554 L1666.5 690.554 L1667.06 690.554 L1667.62 690.554 L1668.18 690.554 L1668.74 690.554 L1669.3 690.554 L1669.85 690.554 L1670.41 690.554 L1670.97 690.554 L1671.53 690.554 L1672.09 690.554 L1672.65 690.554 L1673.21 690.554 L1673.77 690.554 L1674.33 690.554 L1674.89 690.554 L1675.45 690.554 L1676.01 690.554 L1676.57 690.554 L1677.13 690.554 L1677.68 690.554 L1678.24 690.554 L1678.8 690.554 L1679.36 690.554 L1679.92 690.554 L1680.48 690.554 L1681.04 690.554 L1681.6 690.554 L1682.16 690.554 L1682.72 690.554 L1683.28 690.554 L1683.84 690.554 L1684.4 690.554 L1684.95 690.554 L1685.51 690.554 L1686.07 690.554 L1686.63 690.554 L1687.19 690.554 L1687.75 690.554 L1688.31 690.554 L1688.87 690.554 L1689.43 690.554 L1689.99 690.554 L1690.55 690.554 L1691.11 690.554 L1691.67 690.554 L1692.23 690.554 L1692.78 690.554 L1693.34 690.554 L1693.9 690.554 L1694.46 690.554 L1695.02 690.554 L1695.58 690.554 L1696.14 690.554 L1696.7 690.554 L1697.26 690.554 L1697.82 690.554 L1698.38 690.554 L1698.94 690.554 L1699.5 690.554 L1700.05 690.554 L1700.61 690.554 L1701.17 690.554 L1701.73 690.554 L1702.29 690.554 L1702.85 690.554 L1703.41 690.554 L1703.97 690.554 L1704.53 690.554 L1705.09 690.554 L1705.65 690.554 L1706.21 690.554 L1706.77 690.554 L1707.32 690.554 L1707.88 690.554 L1708.44 690.554 L1709 690.554 L1709.56 690.554 L1710.12 690.554 L1710.68 690.554 L1711.24 690.554 L1711.8 690.554 L1712.36 690.554 L1712.92 690.554 L1713.48 690.554 L1714.04 690.554 L1714.6 690.554 L1715.15 690.554 L1715.71 690.554 L1716.27 690.554 L1716.83 690.554 L1717.39 690.554 L1717.95 690.554 L1718.51 690.554 L1719.07 690.554 L1719.63 690.554 L1720.19 690.554 L1720.75 690.554 L1721.31 690.554 L1721.87 690.554 L1722.42 690.554 L1722.98 690.554 L1723.54 690.554 L1724.1 690.554 L1724.66 690.554 L1725.22 690.554 L1725.78 690.554 L1726.34 690.554 L1726.9 690.554 L1727.46 690.554 L1728.02 690.554 L1728.58 690.554 L1729.14 690.554 L1729.69 690.554 L1730.25 690.554 L1730.81 690.554 L1731.37 690.554 L1731.93 690.554 L1732.49 690.554 L1733.05 690.554 L1733.61 690.554 L1734.17 690.554 L1734.73 690.554 L1735.29 690.554 L1735.85 690.554 L1736.41 690.554 L1736.97 690.554 L1737.52 690.554 L1738.08 690.554 L1738.64 690.554 L1739.2 690.554 L1739.76 690.554 L1740.32 690.554 L1740.88 690.554 L1741.44 690.554 L1742 690.554 L1742.56 690.554 L1743.12 690.554 L1743.68 690.554 L1744.24 690.554 L1744.79 690.554 L1745.35 690.554 L1745.91 690.554 L1746.47 690.554 L1747.03 690.554 L1747.59 690.554 L1748.15 690.554 L1748.71 690.554 L1749.27 690.554 L1749.83 690.554 L1750.39 690.554 L1750.95 690.554 L1751.51 690.554 L1752.06 690.554 L1752.62 690.554 L1753.18 690.554 L1753.74 690.554 L1754.3 690.554 L1754.86 690.554 L1755.42 690.554 L1755.98 690.554 L1756.54 690.554 L1757.1 690.554 L1757.66 690.554 L1758.22 690.554 L1758.78 690.554 L1759.34 690.554 L1759.89 690.554 L1760.45 690.554 L1761.01 690.554 L1761.57 690.554 L1762.13 690.554 L1762.69 690.554 L1763.25 690.554 L1763.81 690.554 L1764.37 690.554 L1764.93 690.554 L1765.49 690.554 L1766.05 690.554 L1766.61 690.554 L1767.16 690.554 L1767.72 690.554 L1768.28 690.554 L1768.84 690.554 L1769.4 690.554 L1769.96 690.554 L1770.52 690.554 L1771.08 690.554 L1771.64 690.554 L1772.2 690.554 L1772.76 690.554 L1773.32 690.554 L1773.88 690.554 L1774.43 690.554 L1774.99 690.554 L1775.55 690.554 L1776.11 690.554 L1776.67 690.554 L1777.23 690.554 L1777.79 690.554 L1778.35 690.554 L1778.91 690.554 L1779.47 690.554 L1780.03 690.554 L1780.59 690.554 L1781.15 690.554 L1781.71 690.554 L1782.26 690.554 L1782.82 690.554 L1783.38 690.554 L1783.94 690.554 L1784.5 690.554 L1785.06 690.554 L1785.62 690.554 L1786.18 690.554 L1786.74 690.554 L1787.3 690.554 L1787.86 690.554 L1788.42 690.554 L1788.98 690.554 L1789.53 690.554 L1790.09 690.554 L1790.65 690.554 L1791.21 690.554 L1791.77 690.554 L1792.33 690.554 L1792.89 690.554 L1793.45 690.554 L1794.01 690.554 L1794.57 690.554 L1795.13 690.554 L1795.69 690.554 L1796.25 690.554 L1796.8 690.554 L1797.36 690.554 L1797.92 690.554 L1798.48 690.554 L1799.04 690.554 L1799.6 690.554 L1800.16 690.554 L1800.72 690.554 L1801.28 690.554 L1801.84 690.554 L1802.4 690.554 L1802.96 690.554 L1803.52 690.554 L1804.08 690.554 L1804.63 690.554 L1805.19 690.554 L1805.75 690.554 L1806.31 690.554 L1806.87 690.554 L1807.43 690.554 L1807.99 690.554 L1808.55 690.554 L1809.11 690.554 L1809.67 690.554 L1810.23 690.554 L1810.79 690.554 L1811.35 690.554 L1811.9 690.554 L1812.46 690.554 L1813.02 690.554 L1813.58 690.554 L1814.14 690.554 L1814.7 690.554 L1815.26 690.554 L1815.82 690.554 L1816.38 690.554 L1816.94 690.554 L1817.5 690.554 L1818.06 690.554 L1818.62 690.554 L1819.18 690.554 L1819.73 690.554 L1820.29 690.554 L1820.85 690.554 L1821.41 690.554 L1821.97 690.554 L1822.53 690.554 L1823.09 690.554 L1823.65 690.554 L1824.21 690.554 L1824.77 690.554 L1825.33 690.554 L1825.89 690.554 L1826.45 690.554 L1827 690.554 L1827.56 690.554 L1828.12 690.554 L1828.68 690.554 L1829.24 690.554 L1829.8 690.554 L1830.36 690.554 L1830.92 690.554 L1831.48 690.554 L1832.04 690.554 L1832.6 690.554 L1833.16 690.554 L1833.72 690.554 L1834.27 690.554 L1834.83 690.554 L1835.39 690.554 L1835.95 690.554 L1836.51 690.554 L1837.07 690.554 L1837.63 690.554 L1838.19 690.554 L1838.19 681.254 L1837.63 681.254 L1837.07 681.254 L1836.51 681.254 L1835.95 681.254 L1835.39 681.254 L1834.83 681.254 L1834.27 681.254 L1833.72 681.254 L1833.16 681.254 L1832.6 681.254 L1832.04 681.254 L1831.48 681.254 L1830.92 681.254 L1830.36 681.254 L1829.8 681.254 L1829.24 681.254 L1828.68 681.254 L1828.12 681.254 L1827.56 681.254 L1827 681.254 L1826.45 681.254 L1825.89 681.254 L1825.33 681.254 L1824.77 681.254 L1824.21 681.254 L1823.65 681.254 L1823.09 681.254 L1822.53 681.254 L1821.97 681.254 L1821.41 681.254 L1820.85 681.254 L1820.29 681.254 L1819.73 681.254 L1819.18 681.254 L1818.62 681.254 L1818.06 681.254 L1817.5 681.254 L1816.94 681.254 L1816.38 681.254 L1815.82 681.254 L1815.26 681.254 L1814.7 681.254 L1814.14 681.254 L1813.58 681.254 L1813.02 681.254 L1812.46 681.254 L1811.9 681.254 L1811.35 681.254 L1810.79 681.254 L1810.23 681.254 L1809.67 681.254 L1809.11 681.254 L1808.55 681.254 L1807.99 681.254 L1807.43 681.254 L1806.87 681.254 L1806.31 681.254 L1805.75 681.254 L1805.19 681.254 L1804.63 681.254 L1804.08 681.254 L1803.52 681.254 L1802.96 681.254 L1802.4 681.254 L1801.84 681.254 L1801.28 681.254 L1800.72 681.254 L1800.16 681.254 L1799.6 681.254 L1799.04 681.254 L1798.48 681.254 L1797.92 681.254 L1797.36 681.254 L1796.8 681.254 L1796.25 681.254 L1795.69 681.254 L1795.13 681.254 L1794.57 681.254 L1794.01 681.254 L1793.45 681.254 L1792.89 681.254 L1792.33 681.254 L1791.77 681.254 L1791.21 681.254 L1790.65 681.254 L1790.09 681.254 L1789.53 681.254 L1788.98 681.254 L1788.42 681.254 L1787.86 681.254 L1787.3 681.254 L1786.74 681.254 L1786.18 681.254 L1785.62 681.254 L1785.06 681.254 L1784.5 681.254 L1783.94 681.254 L1783.38 681.254 L1782.82 681.254 L1782.26 681.254 L1781.71 681.254 L1781.15 681.254 L1780.59 681.254 L1780.03 681.254 L1779.47 681.254 L1778.91 681.254 L1778.35 681.254 L1777.79 681.254 L1777.23 681.254 L1776.67 681.254 L1776.11 681.254 L1775.55 681.254 L1774.99 681.254 L1774.43 681.254 L1773.88 681.254 L1773.32 681.254 L1772.76 681.254 L1772.2 681.254 L1771.64 681.254 L1771.08 681.254 L1770.52 681.254 L1769.96 681.254 L1769.4 681.254 L1768.84 681.254 L1768.28 681.254 L1767.72 681.254 L1767.16 681.254 L1766.61 681.254 L1766.05 681.254 L1765.49 681.254 L1764.93 681.254 L1764.37 681.254 L1763.81 681.254 L1763.25 681.254 L1762.69 681.254 L1762.13 681.254 L1761.57 681.254 L1761.01 681.254 L1760.45 681.254 L1759.89 681.254 L1759.34 681.254 L1758.78 681.254 L1758.22 681.254 L1757.66 681.254 L1757.1 681.254 L1756.54 681.254 L1755.98 681.254 L1755.42 681.254 L1754.86 681.254 L1754.3 681.254 L1753.74 681.254 L1753.18 681.254 L1752.62 681.254 L1752.06 681.254 L1751.51 681.254 L1750.95 681.254 L1750.39 681.254 L1749.83 681.254 L1749.27 681.254 L1748.71 681.254 L1748.15 681.254 L1747.59 681.254 L1747.03 681.254 L1746.47 681.254 L1745.91 681.254 L1745.35 681.254 L1744.79 681.254 L1744.24 681.254 L1743.68 681.254 L1743.12 681.254 L1742.56 681.254 L1742 681.254 L1741.44 681.254 L1740.88 681.254 L1740.32 681.254 L1739.76 681.254 L1739.2 681.254 L1738.64 681.254 L1738.08 681.254 L1737.52 681.254 L1736.97 681.254 L1736.41 681.254 L1735.85 681.254 L1735.29 681.254 L1734.73 681.254 L1734.17 681.254 L1733.61 681.254 L1733.05 681.254 L1732.49 681.254 L1731.93 681.254 L1731.37 681.254 L1730.81 681.254 L1730.25 681.254 L1729.69 681.254 L1729.14 681.254 L1728.58 681.254 L1728.02 681.254 L1727.46 681.254 L1726.9 681.254 L1726.34 681.254 L1725.78 681.254 L1725.22 681.254 L1724.66 681.254 L1724.1 681.254 L1723.54 681.254 L1722.98 681.254 L1722.42 681.254 L1721.87 681.254 L1721.31 681.254 L1720.75 681.254 L1720.19 681.254 L1719.63 681.254 L1719.07 681.254 L1718.51 681.254 L1717.95 681.254 L1717.39 681.254 L1716.83 681.254 L1716.27 681.254 L1715.71 681.254 L1715.15 681.254 L1714.6 681.254 L1714.04 681.254 L1713.48 681.254 L1712.92 681.254 L1712.36 681.254 L1711.8 681.254 L1711.24 681.254 L1710.68 681.254 L1710.12 681.254 L1709.56 681.254 L1709 681.254 L1708.44 681.254 L1707.88 681.254 L1707.32 681.254 L1706.77 681.254 L1706.21 681.254 L1705.65 681.254 L1705.09 681.254 L1704.53 681.254 L1703.97 681.254 L1703.41 681.254 L1702.85 681.254 L1702.29 681.254 L1701.73 681.254 L1701.17 681.254 L1700.61 681.254 L1700.05 681.254 L1699.5 681.254 L1698.94 681.254 L1698.38 681.254 L1697.82 681.254 L1697.26 681.254 L1696.7 681.254 L1696.14 681.254 L1695.58 681.254 L1695.02 681.254 L1694.46 681.254 L1693.9 681.254 L1693.34 681.254 L1692.78 681.254 L1692.23 681.254 L1691.67 681.254 L1691.11 681.254 L1690.55 681.254 L1689.99 681.254 L1689.43 681.254 L1688.87 681.254 L1688.31 681.254 L1687.75 681.254 L1687.19 681.254 L1686.63 681.254 L1686.07 681.254 L1685.51 681.254 L1684.95 681.254 L1684.4 681.254 L1683.84 681.254 L1683.28 681.254 L1682.72 681.254 L1682.16 681.254 L1681.6 681.254 L1681.04 681.254 L1680.48 681.254 L1679.92 681.254 L1679.36 681.254 L1678.8 681.254 L1678.24 681.254 L1677.68 681.254 L1677.13 681.254 L1676.57 681.254 L1676.01 681.254 L1675.45 681.254 L1674.89 681.254 L1674.33 681.254 L1673.77 681.254 L1673.21 681.254 L1672.65 681.254 L1672.09 681.254 L1671.53 681.254 L1670.97 681.254 L1670.41 681.254 L1669.85 681.254 L1669.3 681.254 L1668.74 681.254 L1668.18 681.254 L1667.62 681.254 L1667.06 681.254 L1666.5 681.254 L1665.94 681.254 L1665.38 681.254 L1664.82 681.254 L1664.26 681.254 L1663.7 681.254 L1663.14 681.254 L1662.58 681.254 L1662.03 681.254 L1661.47 681.254 L1660.91 681.254 L1660.35 681.254 L1659.79 681.254 L1659.23 681.254 L1658.67 681.254 L1658.11 681.254 L1657.55 681.254 L1656.99 681.254 L1656.43 681.254 L1655.87 681.254 L1655.31 681.254 L1654.76 681.254 L1654.2 681.254 L1653.64 681.254 L1653.08 681.254 L1652.52 681.254 L1651.96 681.254 L1651.4 681.254 L1650.84 681.254 L1650.28 681.254 L1649.72 681.254 L1649.16 681.254 L1648.6 681.254 L1648.04 681.254 L1647.48 681.254 L1646.93 681.254 L1646.37 681.254 L1645.81 681.254 L1645.25 681.254 L1644.69 681.254 L1644.13 681.254 L1643.57 681.254 L1643.01 681.254 L1642.45 681.254 L1641.89 681.254 L1641.33 681.254 L1640.77 681.254 L1640.21 681.254 L1639.66 681.254 L1639.1 681.254 L1638.54 681.254 L1637.98 681.254 L1637.42 681.254 L1636.86 681.254 L1636.3 681.254 L1635.74 681.254 L1635.18 681.254 L1634.62 681.254 L1634.06 681.254 L1633.5 681.254 L1632.94 681.254 L1632.39 681.254 L1631.83 681.254 L1631.27 681.254 L1630.71 681.254 L1630.15 681.254 L1629.59 681.254 L1629.03 681.254 L1628.47 681.254 L1627.91 681.254 L1627.35 681.254 L1626.79 681.254 L1626.23 681.254 L1625.67 681.254 L1625.11 681.254 L1624.56 681.254 L1624 681.254 L1623.44 681.254 L1622.88 681.254 L1622.32 681.254 L1621.76 681.254 L1621.2 681.254 L1620.64 681.254 L1620.08 681.254 L1619.52 681.254 L1618.96 681.254 L1618.4 681.254 L1617.84 681.254 L1617.29 681.254 L1616.73 681.254 L1616.17 681.254 L1615.61 681.254 L1615.05 681.254 L1614.49 681.254 L1613.93 681.254 L1613.37 681.254 L1612.81 681.254 L1612.25 681.254 L1611.69 681.254 L1611.13 681.254 L1610.57 681.254 L1610.02 681.254 L1609.46 681.254 L1608.9 681.254 L1608.34 681.254 L1607.78 681.254 L1607.22 681.254 L1606.66 681.254 L1606.1 681.254 L1605.54 681.254 L1604.98 681.254 L1604.42 681.254 L1603.86 681.254 L1603.3 681.254 L1602.74 681.254 L1602.19 681.254 L1601.63 681.254 L1601.07 681.254 L1600.51 681.254 L1599.95 681.254 L1599.39 681.254 L1598.83 681.254 L1598.27 681.254 L1597.71 681.254 L1597.15 681.254 L1596.59 681.254 L1596.03 681.254 L1595.47 681.254 L1594.92 681.254 L1594.36 681.254 L1593.8 681.254 L1593.24 681.254 L1592.68 681.254 L1592.12 681.254 L1591.56 681.254 L1591 681.254 L1590.44 681.254 L1589.88 681.254 L1589.32 681.254 L1588.76 681.254 L1588.2 681.254 L1587.65 681.254 L1587.09 681.254 L1586.53 681.254 L1585.97 681.254 L1585.41 681.254 L1584.85 681.254 L1584.29 681.254 L1583.73 681.254 L1583.17 681.254 L1582.61 681.254 L1582.05 681.254 L1581.49 681.254 L1580.93 681.254 L1580.37 681.254 L1579.82 681.254 L1579.26 681.254 L1578.7 681.254 L1578.14 681.254 L1577.58 681.254 L1577.02 681.254 L1576.46 681.254 L1575.9 681.254 L1575.34 681.254 L1574.78 681.254 L1574.22 681.254 L1573.66 681.254 L1573.1 681.254 L1572.55 681.254 L1571.99 681.254 L1571.43 681.254 L1570.87 681.254 L1570.31 681.254 L1569.75 681.254 L1569.19 681.254 L1568.63 681.254 L1568.07 681.254 L1567.51 681.254 L1566.95 681.254 L1566.39 681.254 L1565.83 681.254 L1565.28 681.254 L1564.72 681.254 L1564.16 681.254 L1563.6 681.254 L1563.04 681.254 L1562.48 681.254 L1561.92 681.254 L1561.36 681.254 L1560.8 681.254 L1560.24 681.254 L1559.68 681.254 L1559.12 681.254 L1558.56 681.254 L1558 681.254 L1557.45 681.254 L1556.89 681.254 L1556.33 681.254 L1555.77 681.254 L1555.21 681.254 L1554.65 681.254 L1554.09 681.254 L1553.53 681.254 L1552.97 681.254 L1552.41 681.254 L1551.85 681.254 L1551.29 681.254 L1550.73 681.254 L1550.18 681.254 L1549.62 681.254 L1549.06 681.254 L1548.5 681.254 L1547.94 681.254 L1547.38 681.254 L1546.82 681.254 L1546.26 681.254 L1545.7 681.254 L1545.14 681.254 L1544.58 681.254 L1544.02 681.254 L1543.46 681.254 L1542.9 681.254 L1542.35 681.254 L1541.79 681.254 L1541.23 681.254 L1540.67 681.254 L1540.11 681.254 L1539.55 681.254 L1538.99 681.254 L1538.43 681.254 L1537.87 681.254 L1537.31 681.254 L1536.75 681.254 L1536.19 681.254 L1535.63 681.254 L1535.08 681.254 L1534.52 681.254 L1533.96 681.254 L1533.4 681.254 L1532.84 681.254 L1532.28 681.254 L1531.72 681.254 L1531.16 681.254 L1530.6 681.254 L1530.04 681.254 L1529.48 681.254 L1528.92 681.254 L1528.36 681.254 L1527.81 681.254 L1527.25 681.254 L1526.69 681.254 L1526.13 681.254 L1525.57 681.254 L1525.01 681.254 L1524.45 681.254 L1523.89 681.254 L1523.33 681.254 L1522.77 681.254 L1522.21 681.254 L1521.65 681.254 L1521.09 681.254 L1520.53 681.254 L1519.98 681.254 L1519.42 681.254 L1518.86 681.254 L1518.3 681.254 L1517.74 681.254 L1517.18 681.254 L1516.62 681.254 L1516.06 681.254 L1515.5 681.254 L1514.94 681.254 L1514.38 681.254 L1513.82 681.254 L1513.26 681.254 L1512.71 681.254 L1512.15 681.254 L1511.59 681.254 L1511.03 681.254 L1510.47 681.254 L1509.91 681.254 L1509.35 681.254 L1508.79 681.254 L1508.23 681.254 L1507.67 681.254 L1507.11 681.254 L1506.55 681.254 L1505.99 681.254 L1505.44 681.254 L1504.88 681.254 L1504.32 681.254 L1503.76 681.254 L1503.2 681.254 L1502.64 681.254 L1502.08 681.254 L1501.52 681.254 L1500.96 681.254 L1500.4 681.254 L1499.84 681.254 L1499.28 681.254 L1498.72 681.254 L1498.16 681.254 L1497.61 681.254 L1497.05 681.254 L1496.49 681.254 L1495.93 681.254 L1495.37 681.254 L1494.81 681.254 L1494.25 681.254 L1493.69 681.254 L1493.13 681.254 L1492.57 681.254 L1492.01 681.254 L1491.45 681.254 L1490.89 681.254 L1490.34 681.254 L1489.78 681.254 L1489.22 681.254 L1488.66 681.254 L1488.1 681.254 L1487.54 681.254 L1486.98 681.254 L1486.42 681.254 L1485.86 681.254 L1485.3 681.254 L1484.74 681.254 L1484.18 681.254 L1483.62 681.254 L1483.07 681.254 L1482.51 681.254 L1481.95 681.254 L1481.39 681.254 L1480.83 681.254 L1480.27 681.254 L1479.71 681.254 L1479.15 681.254 L1478.59 681.254 L1478.03 681.254 L1477.47 681.254 L1476.91 681.254 L1476.35 681.254 L1475.79 681.254 L1475.24 681.254 L1474.68 681.254 L1474.12 681.254 L1473.56 681.254 L1473 681.254 L1472.44 681.254 L1471.88 681.254 L1471.32 681.254 L1470.76 681.254 L1470.2 681.254 L1469.64 681.254 L1469.08 681.254 L1468.52 681.254 L1467.97 681.254 L1467.41 681.254 L1466.85 681.254 L1466.29 681.254 L1465.73 681.254 L1465.17 681.254 L1464.61 681.254 L1464.05 681.254 L1463.49 681.254 L1462.93 681.254 L1462.37 681.254 L1461.81 681.254 L1461.25 681.254 L1460.7 681.254 L1460.14 681.254 L1459.58 681.254 L1459.02 681.254 L1458.46 681.254 L1457.9 681.254 L1457.34 681.254 L1456.78 681.254 L1456.22 681.254 L1455.66 681.254 L1455.1 681.254 L1454.54 681.254 L1453.98 681.254 L1453.42 681.254 L1452.87 681.254 L1452.31 681.254 L1451.75 681.254 L1451.19 681.254 L1450.63 681.254 L1450.07 681.254 L1449.51 681.254 L1448.95 681.254 L1448.39 681.254 L1447.83 681.254 L1447.27 681.254 L1446.71 681.254 L1446.15 681.254 L1445.6 681.254 L1445.04 681.254 L1444.48 681.254 L1443.92 681.254 L1443.36 681.254 L1442.8 681.254 L1442.24 681.254 L1441.68 681.254 L1441.12 681.254 L1440.56 681.254 L1440 681.254 L1439.44 681.254 L1438.88 681.254 L1438.33 681.254 L1437.77 681.254 L1437.21 681.254 L1436.65 681.254 L1436.09 681.254 L1435.53 681.254 L1434.97 681.254 L1434.41 681.254 L1433.85 681.254 L1433.29 681.254 L1432.73 681.254 L1432.17 681.254 L1431.61 681.254 L1431.05 681.254 L1430.5 681.254 L1429.94 681.254 L1429.38 681.254 L1428.82 681.254 L1428.26 681.254 L1427.7 681.254 L1427.14 681.254 L1426.58 681.254 L1426.02 681.254 L1425.46 681.254 L1424.9 681.254 L1424.34 681.254 L1423.78 681.254 L1423.23 681.254 L1422.67 681.254 L1422.11 681.254 L1421.55 681.254 L1420.99 681.254 L1420.43 681.254 L1419.87 681.254 L1419.31 681.254 L1418.75 681.254 L1418.19 681.254 L1417.63 681.254 L1417.07 681.254 L1416.51 681.254 L1415.95 681.254 L1415.4 681.254 L1414.84 681.254 L1414.28 681.254 L1413.72 681.254 L1413.16 681.254 L1412.6 681.254 L1412.04 681.254 L1411.48 681.254 L1410.92 681.254 L1410.36 681.254 L1409.8 681.254 L1409.24 681.254 L1408.68 681.254 L1408.13 681.254 L1407.57 681.254 L1407.01 681.254 L1406.45 681.254 L1405.89 681.254 L1405.33 681.254 L1404.77 681.254 L1404.21 681.254 L1403.65 681.254 L1403.09 681.254 L1402.53 681.254 L1401.97 681.254 L1401.41 681.254 L1400.86 681.254 L1400.3 681.254 L1399.74 681.254 L1399.18 681.254 L1398.62 681.254 L1398.06 681.254 L1397.5 681.254 L1396.94 681.254 L1396.38 681.254 L1395.82 681.254 L1395.26 681.254 L1394.7 681.254 L1394.14 681.254 L1393.58 681.254 L1393.03 681.254 L1392.47 681.254 L1391.91 681.254 L1391.35 681.254 L1390.79 681.254 L1390.23 681.254 L1389.67 681.254 L1389.11 681.254 L1388.55 681.254 L1387.99 681.254 L1387.43 681.254 L1386.87 681.254 L1386.31 681.254 L1385.76 681.254 L1385.2 681.254 L1384.64 681.254 L1384.08 681.254 L1383.52 681.254 L1382.96 681.254 L1382.4 681.254 L1381.84 681.254 L1381.28 681.254 L1380.72 681.254 L1380.16 681.254 L1379.6 681.254 L1379.04 681.254 L1378.49 681.254 L1377.93 681.254 L1377.37 681.254 L1376.81 681.254 L1376.25 681.254 L1375.69 681.254 L1375.13 681.254 L1374.57 681.254 L1374.01 681.254 L1373.45 681.254 L1372.89 681.254 L1372.33 681.254 L1371.77 681.254 L1371.21 681.254 L1370.66 681.254 L1370.1 681.254 L1369.54 681.254 L1368.98 681.254 L1368.42 681.254 L1367.86 681.254 L1367.3 681.254 L1366.74 681.254 L1366.18 681.254 L1365.62 681.254 L1365.06 681.254 L1364.5 681.254 L1363.94 681.254 L1363.39 681.254 L1362.83 681.254 L1362.27 681.254 L1361.71 681.254 L1361.15 681.254 L1360.59 681.254 L1360.03 681.254 L1359.47 681.254 L1358.91 681.254 L1358.35 681.254 L1357.79 681.254 L1357.23 681.254 L1356.67 681.254 L1356.12 681.254 L1355.56 681.254 L1355 681.254 L1354.44 681.254 L1353.88 681.254 L1353.32 681.254 L1352.76 681.254 L1352.2 681.254 L1351.64 681.254 L1351.08 681.254 L1350.52 681.254 L1349.96 681.254 L1349.4 681.254 L1348.84 681.254 L1348.29 681.254 L1347.73 681.254 L1347.17 681.254 L1346.61 681.254 L1346.05 681.254 L1345.49 681.254 L1344.93 681.254 L1344.37 681.254 L1343.81 681.254 L1343.25 681.254 L1342.69 681.254 L1342.13 681.254 L1341.57 681.254 L1341.02 681.254 L1340.46 681.254 L1339.9 681.254 L1339.34 681.254 L1338.78 681.254 L1338.22 681.254 L1337.66 681.254 L1337.1 681.254 L1336.54 681.254 L1335.98 681.254 L1335.42 681.254 L1334.86 681.254 L1334.3 681.254 L1333.75 681.254 L1333.19 681.254 L1332.63 681.254 L1332.07 681.254 L1331.51 681.254 L1330.95 681.254 L1330.39 681.254 L1329.83 681.254 L1329.27 681.254 L1328.71 681.254 L1328.15 681.254 L1327.59 681.254 L1327.03 681.254 L1326.47 681.254 L1325.92 681.254 L1325.36 681.254 L1324.8 681.254 L1324.24 681.254 L1323.68 681.254 L1323.12 681.254 L1322.56 681.254 L1322 681.254 L1321.44 681.254 L1320.88 681.254 L1320.32 681.254 L1319.76 681.254 L1319.2 681.254 L1318.65 681.254 L1318.09 681.254 L1317.53 681.254 L1316.97 681.254 L1316.41 681.254 L1315.85 681.254 L1315.29 681.254 L1314.73 681.254 L1314.17 681.254 L1313.61 681.254 L1313.05 681.254 L1312.49 681.254 L1311.93 681.254 L1311.38 681.254 L1310.82 681.254 L1310.26 681.254 L1309.7 681.254 L1309.14 681.254 L1308.58 681.254 L1308.02 681.254 L1307.46 681.254 L1306.9 681.254 L1306.34 681.254 L1305.78 681.254 L1305.22 681.254 L1304.66 681.254 L1304.1 681.254 L1303.55 681.254 L1302.99 681.254 L1302.43 681.254 L1301.87 681.254 L1301.31 681.254 L1300.75 681.254 L1300.19 681.254 L1299.63 681.254 L1299.07 681.254 L1298.51 681.254 L1297.95 681.254 L1297.39 681.254 L1296.83 681.254 L1296.28 681.254 L1295.72 681.254 L1295.16 681.254 L1294.6 681.254 L1294.04 681.254 L1293.48 681.254 L1292.92 681.254 L1292.36 681.254 L1291.8 681.254 L1291.24 681.254 L1290.68 681.254 L1290.12 681.254 L1289.56 681.254 L1289 681.254 L1288.45 681.254 L1287.89 681.254 L1287.33 681.254 L1286.77 681.254 L1286.21 681.254 L1285.65 681.254 L1285.09 681.254 L1284.53 681.254 L1283.97 681.254 L1283.41 681.254 L1282.85 681.254 L1282.29 681.254 L1281.73 681.254 L1281.18 681.254 L1280.62 681.254 L1280.06 681.254 L1279.5 681.254 L1278.94 681.254 L1278.38 681.254 L1277.82 681.254 L1277.26 681.254 L1276.7 681.254 L1276.14 681.254 L1275.58 681.254 L1275.02 681.254 L1274.46 681.254 L1273.91 681.254 L1273.35 681.254 L1272.79 681.254 L1272.23 681.254 L1271.67 681.254 L1271.11 681.254 L1270.55 681.254 L1269.99 681.254 L1269.43 681.254 L1268.87 681.254 L1268.31 681.254 L1267.75 681.254 L1267.19 681.254 L1266.63 681.254 L1266.08 681.254 L1265.52 681.254 L1264.96 681.254 L1264.4 681.254 L1263.84 681.254 L1263.28 681.254 L1262.72 681.254 L1262.16 681.254 L1261.6 681.254 L1261.04 681.254 L1260.48 681.254 L1259.92 681.254 L1259.36 681.254 L1258.81 681.254 L1258.25 681.254 L1257.69 681.254 L1257.13 681.254 L1256.57 681.254 L1256.01 681.254 L1255.45 681.254 L1254.89 681.254 L1254.33 681.254 L1253.77 681.254 L1253.21 681.254 L1252.65 681.254 L1252.09 681.254 L1251.54 681.254 L1250.98 681.254 L1250.42 681.254 L1249.86 681.254 L1249.3 681.254 L1248.74 681.254 L1248.18 681.254 L1247.62 681.254 L1247.06 681.254 L1246.5 681.254 L1245.94 681.254 L1245.38 681.254 L1244.82 681.254 L1244.26 681.254 L1243.71 681.254 L1243.15 681.254 L1242.59 681.254 L1242.03 681.254 L1241.47 681.254 L1240.91 681.254 L1240.35 681.254 L1239.79 681.254 L1239.23 681.254 L1238.67 681.254 L1238.11 681.254 L1237.55 681.254 L1236.99 681.254 L1236.44 681.254 L1235.88 681.254 L1235.32 681.254 L1234.76 681.254 L1234.2 681.254 L1233.64 681.254 L1233.08 681.254 L1232.52 681.254 L1231.96 681.254 L1231.4 681.254 L1230.84 681.254 L1230.28 681.254 L1229.72 681.254 L1229.17 681.254 L1228.61 681.254 L1228.05 681.254 L1227.49 681.254 L1226.93 681.254 L1226.37 681.254 L1225.81 681.254 L1225.25 681.254 L1224.69 681.254 L1224.13 681.254 L1223.57 681.254 L1223.01 681.254 L1222.45 681.254 L1221.89 681.254 L1221.34 681.254 L1220.78 681.254 L1220.22 681.254 L1219.66 681.254 L1219.1 681.254 L1218.54 681.254 L1217.98 681.254 L1217.42 681.254 L1216.86 681.254 L1216.3 681.254 L1215.74 681.254 L1215.18 681.254 L1214.62 681.254 L1214.07 681.254 L1213.51 681.254 L1212.95 681.254 L1212.39 681.254 L1211.83 681.254 L1211.27 681.254 L1210.71 681.254 L1210.15 681.254 L1209.59 681.254 L1209.03 681.254 L1208.47 681.254 L1207.91 681.254 L1207.35 681.254 L1206.8 681.254 L1206.24 681.254 L1205.68 681.254 L1205.12 681.254 L1204.56 681.254 L1204 681.254 L1203.44 681.254 L1202.88 681.254 L1202.32 681.254 L1201.76 681.254 L1201.2 681.254 L1200.64 681.254 L1200.08 681.254 L1199.52 681.254 L1198.97 681.254 L1198.41 681.254 L1197.85 681.254 L1197.29 681.254 L1196.73 681.254 L1196.17 681.254 L1195.61 681.254 L1195.05 681.254 L1194.49 681.254 L1193.93 681.254 L1193.37 681.254 L1192.81 681.254 L1192.25 681.254 L1191.7 681.254 L1191.14 681.254 L1190.58 681.254 L1190.02 681.254 L1189.46 681.254 L1188.9 681.254 L1188.34 681.254 L1187.78 681.254 L1187.22 681.254 L1186.66 681.254 L1186.1 681.254 L1185.54 681.254 L1184.98 681.254 L1184.43 681.254 L1183.87 681.254 L1183.31 681.254 L1182.75 681.254 L1182.19 681.254 L1181.63 681.254 L1181.07 681.254 L1180.51 681.254 L1179.95 681.254 L1179.39 681.254 L1178.83 681.254 L1178.27 681.254 L1177.71 681.254 L1177.15 681.254 L1176.6 681.254 L1176.04 681.254 L1175.48 681.254 L1174.92 681.254 L1174.36 681.254 L1173.8 681.254 L1173.24 681.254 L1172.68 681.254 L1172.12 681.254 L1171.56 681.254 L1171 681.254 L1170.44 681.254 L1169.88 681.254 L1169.33 681.254 L1168.77 681.254 L1168.21 681.254 L1167.65 681.254 L1167.09 681.254 L1166.53 681.254 L1165.97 681.254 L1165.41 681.254 L1164.85 681.254 L1164.29 681.254 L1163.73 681.254 L1163.17 681.254 L1162.61 681.254 L1162.05 681.254 L1161.5 681.254 L1160.94 681.254 L1160.38 681.254 L1159.82 681.254 L1159.26 681.254 L1158.7 681.254 L1158.14 681.254 L1157.58 681.254 L1157.02 681.254 L1156.46 681.254 L1155.9 681.254 L1155.34 681.254 L1154.78 681.254 L1154.23 681.254 L1153.67 681.254 L1153.11 681.254 L1152.55 681.254 L1151.99 681.254 L1151.43 681.254 L1150.87 681.254 L1150.31 681.254 L1149.75 681.254 L1149.19 681.254 L1148.63 681.254 L1148.07 681.254 L1147.51 681.254 L1146.96 681.254 L1146.4 681.254 L1145.84 681.254 L1145.28 681.254 L1144.72 681.254 L1144.16 681.254 L1143.6 681.254 L1143.04 681.254 L1142.48 681.254 L1141.92 681.254 L1141.36 681.254 L1140.8 681.254 L1140.24 681.254 L1139.68 681.254 L1139.13 681.254 L1138.57 681.254 L1138.01 681.254 L1137.45 681.254 L1136.89 681.254 L1136.33 681.254 L1135.77 681.254 L1135.21 681.254 L1134.65 681.254 L1134.09 681.254 L1133.53 681.254 L1132.97 681.254 L1132.41 681.254 L1131.86 681.254 L1131.3 681.254 L1130.74 681.254 L1130.18 681.254 L1129.62 681.254 L1129.06 681.254 L1128.5 681.254 L1127.94 681.254 L1127.38 681.254 L1126.82 681.254 L1126.26 681.254 L1125.7 681.254 L1125.14 681.254 L1124.59 681.254 L1124.03 681.254 L1123.47 681.254 L1122.91 681.254 L1122.35 681.254 L1121.79 681.254 L1121.23 681.254 L1120.67 681.254 L1120.11 681.254 L1119.55 681.254 L1118.99 681.254 L1118.43 681.254 L1117.87 681.254 L1117.31 681.254 L1116.76 681.254 L1116.2 681.254 L1115.64 681.254 L1115.08 681.254 L1114.52 681.254 L1113.96 681.254 L1113.4 681.254 L1112.84 681.254 L1112.28 681.254 L1111.72 681.254 L1111.16 681.254 L1110.6 681.254 L1110.04 681.254 L1109.49 681.254 L1108.93 681.254 L1108.37 681.254 L1107.81 681.254 L1107.25 681.254 L1106.69 681.254 L1106.13 681.254 L1105.57 681.254 L1105.01 681.254 L1104.45 681.254 L1103.89 681.254 L1103.33 681.254 L1102.77 681.254 L1102.22 681.254 L1101.66 681.254 L1101.1 681.254 L1100.54 681.254 L1099.98 681.254 L1099.42 681.254 L1098.86 681.254 L1098.3 681.254 L1097.74 681.254 L1097.18 681.254 L1096.62 681.254 L1096.06 681.254 L1095.5 681.254 L1094.94 681.254 L1094.39 681.254 L1093.83 681.254 L1093.27 681.254 L1092.71 681.254 L1092.15 681.254 L1091.59 681.254 L1091.03 681.254 L1090.47 681.254 L1089.91 681.254 L1089.35 681.254 L1088.79 681.254 L1088.23 681.254 L1087.67 681.254 L1087.12 681.254 L1086.56 681.254 L1086 681.254 L1085.44 681.254 L1084.88 681.254 L1084.32 681.254 L1083.76 681.254 L1083.2 681.254 L1082.64 681.254 L1082.08 681.254 L1081.52 681.254 L1080.96 681.254 L1080.4 681.254 L1079.85 681.254 L1079.29 681.254 L1078.73 681.254 L1078.17 681.254 L1077.61 681.254 L1077.05 681.254 L1076.49 681.254 L1075.93 681.254 L1075.37 681.254 L1074.81 681.254 L1074.25 681.254 L1073.69 681.254 L1073.13 681.254 L1072.57 681.254 L1072.02 681.254 L1071.46 681.254 L1070.9 681.254 L1070.34 681.254 L1069.78 681.254 L1069.22 681.254 L1068.66 681.254 L1068.1 681.254 L1067.54 681.254 L1066.98 681.254 L1066.42 681.254 L1065.86 681.254 L1065.3 681.254 L1064.75 681.254 L1064.19 681.254 L1063.63 681.254 L1063.07 681.254 L1062.51 681.254 L1061.95 681.254 L1061.39 681.254 L1060.83 681.254 L1060.27 681.254 L1059.71 681.254 L1059.15 681.254 L1058.59 681.254 L1058.03 681.254 L1057.48 681.254 L1056.92 681.254 L1056.36 681.254 L1055.8 681.254 L1055.24 681.254 L1054.68 681.254 L1054.12 681.254 L1053.56 681.254 L1053 681.254 L1052.44 681.254 L1051.88 681.254 L1051.32 681.254 L1050.76 681.254 L1050.2 681.254 L1049.65 681.254 L1049.09 681.254 L1048.53 681.254 L1047.97 681.254 L1047.41 681.254 L1046.85 681.254 L1046.29 681.254 L1045.73 681.254 L1045.17 681.254 L1044.61 681.254 L1044.05 681.254 L1043.49 681.254 L1042.93 681.254 L1042.38 681.254 L1041.82 681.254 L1041.26 681.254 L1040.7 681.254 L1040.14 681.254 L1039.58 681.254 L1039.02 681.254 L1038.46 681.254 L1037.9 681.254 L1037.34 681.254 L1036.78 681.254 L1036.22 681.254 L1035.66 681.254 L1035.1 681.254 L1034.55 681.254 L1033.99 681.254 L1033.43 681.254 L1032.87 681.254 L1032.31 681.254 L1031.75 681.254 L1031.19 681.254 L1030.63 681.254 L1030.07 681.254 L1029.51 681.254 L1028.95 681.254 L1028.39 681.254 L1027.83 681.254 L1027.28 681.254 L1026.72 681.254 L1026.16 681.254 L1025.6 681.254 L1025.04 681.254 L1024.48 681.254 L1023.92 681.254 L1023.36 681.254 L1022.8 681.254 L1022.24 681.254 L1021.68 681.254 L1021.12 681.254 L1020.56 681.254 L1020.01 681.254 L1019.45 681.254 L1018.89 681.254 L1018.33 681.254 L1017.77 681.254 L1017.21 681.254 L1016.65 681.254 L1016.09 681.254 L1015.53 681.254 L1014.97 681.254 L1014.41 681.254 L1013.85 681.254 L1013.29 681.254 L1012.73 681.254 L1012.18 681.254 L1011.62 681.254 L1011.06 681.254 L1010.5 681.254 L1009.94 681.254 L1009.38 681.254 L1008.82 681.254 L1008.26 681.254 L1007.7 681.254 L1007.14 681.254 L1006.58 681.254 L1006.02 681.254 L1005.46 681.254 L1004.91 681.254 L1004.35 681.254 L1003.79 681.254 L1003.23 681.254 L1002.67 681.254 L1002.11 681.254 L1001.55 681.254 L1000.99 681.254 L1000.43 681.254 L999.872 681.254 L999.313 681.254 L998.754 681.254 L998.194 681.254 L997.635 681.254 L997.076 681.254 L996.517 681.254 L995.957 681.254 L995.398 681.254 L994.839 681.254 L994.28 681.254 L993.72 681.254 L993.161 681.254 L992.602 681.254 L992.043 681.254 L991.483 681.254 L990.924 681.254 L990.365 681.254 L989.806 681.254 L989.246 681.254 L988.687 681.254 L988.128 681.254 L987.569 681.254 L987.009 681.254 L986.45 681.254 L985.891 681.254 L985.332 681.254 L984.772 681.254 L984.213 681.254 L983.654 681.254 L983.095 681.254 L982.535 681.254 L981.976 681.254 L981.417 681.254 L980.858 681.254 L980.298 681.254 L979.739 681.254 L979.18 681.254 L978.621 681.254 L978.061 681.254 L977.502 681.254 L976.943 681.254 L976.384 681.254 L975.824 681.254 L975.265 681.254 L974.706 681.254 L974.147 681.254 L973.587 681.254 L973.028 681.254 L972.469 681.254 L971.91 681.254 L971.35 681.254 L970.791 681.254 L970.232 681.254 L969.673 681.254 L969.113 681.254 L968.554 681.254 L967.995 681.254 L967.436 681.254 L966.876 681.254 L966.317 681.254 L965.758 681.254 L965.199 681.254 L964.639 681.254 L964.08 681.254 L963.521 681.254 L962.962 681.254 L962.402 681.254 L961.843 681.254 L961.284 681.254 L960.725 681.254 L960.165 681.254 L959.606 681.254 L959.047 681.254 L958.488 681.254 L957.928 681.254 L957.369 681.254 L956.81 681.254 L956.251 681.254 L955.691 681.254 L955.132 681.254 L954.573 681.254 L954.014 681.254 L953.454 681.254 L952.895 681.254 L952.336 681.254 L951.777 681.254 L951.217 681.254 L950.658 681.254 L950.099 681.254 L949.54 681.254 L948.98 681.254 L948.421 681.254 L947.862 681.254 L947.303 681.254 L946.743 681.254 L946.184 681.254 L945.625 681.254 L945.066 681.254 L944.506 681.254 L943.947 681.254 L943.388 681.254 L942.829 681.254 L942.269 681.254 L941.71 681.254 L941.151 681.254 L940.592 681.254 L940.032 681.254 L939.473 681.254 L938.914 681.254 L938.355 681.254 L937.795 681.254 L937.236 681.254 L936.677 681.254 L936.118 681.254 L935.558 681.254 L934.999 681.254 L934.44 681.254 L933.881 681.254 L933.321 681.254 L932.762 681.254 L932.203 681.254 L931.644 681.254 L931.084 681.254 L930.525 681.254 L929.966 681.254 L929.406 681.254 L928.847 681.254 L928.288 681.254 L927.729 681.254 L927.169 681.254 L926.61 681.254 L926.051 681.254 L925.492 681.254 L924.932 681.254 L924.373 681.254 L923.814 681.254 L923.255 681.254 L922.695 681.254 L922.136 681.254 L921.577 681.254 L921.018 681.254 L920.458 681.254 L919.899 681.254 L919.34 681.254 L918.781 681.254 L918.221 681.254 L917.662 681.254 L917.103 681.254 L916.544 681.254 L915.984 681.254 L915.425 681.254 L914.866 681.254 L914.307 681.254 L913.747 681.254 L913.188 681.254 L912.629 681.254 L912.07 681.254 L911.51 681.254 L910.951 681.254 L910.392 681.254 L909.833 681.254 L909.273 681.254 L908.714 681.254 L908.155 681.254 L907.596 681.254 L907.036 681.254 L906.477 681.254 L905.918 681.254 L905.359 681.254 L904.799 681.254 L904.24 681.254 L903.681 681.254 L903.122 681.254 L902.562 681.254 L902.003 681.254 L901.444 681.254 L900.885 681.254 L900.325 681.254 L899.766 681.254 L899.207 681.254 L898.648 681.254 L898.088 681.254 L897.529 681.254 L896.97 681.254 L896.411 681.254 L895.851 681.254 L895.292 681.254 L894.733 681.254 L894.174 681.254 L893.614 681.254 L893.055 681.254 L892.496 681.254 L891.937 681.254 L891.377 681.254 L890.818 681.254 L890.259 681.254 L889.7 681.254 L889.14 681.254 L888.581 681.254 L888.022 681.254 L887.463 681.254 L886.903 681.254 L886.344 681.254 L885.785 681.254 L885.226 681.254 L884.666 681.254 L884.107 681.254 L883.548 681.254 L882.989 681.254 L882.429 681.254 L881.87 681.254 L881.311 681.254 L880.752 681.254 L880.192 681.254 L879.633 681.254 L879.074 681.254 L878.515 681.254 L877.955 681.254 L877.396 681.254 L876.837 681.254 L876.278 681.254 L875.718 681.254 L875.159 681.254 L874.6 681.254 L874.041 681.254 L873.481 681.254 L872.922 681.254 L872.363 681.254 L871.804 681.254 L871.244 681.254 L870.685 681.254 L870.126 681.254 L869.567 681.254 L869.007 681.254 L868.448 681.254 L867.889 681.254 L867.33 681.254 L866.77 681.254 L866.211 681.254 L865.652 681.254 L865.093 681.254 L864.533 681.254 L863.974 681.254 L863.415 681.254 L862.856 681.254 L862.296 681.254 L861.737 681.254 L861.178 681.254 L860.619 681.254 L860.059 681.254 L859.5 681.254 L858.941 681.254 L858.382 681.254 L857.822 681.254 L857.263 681.254 L856.704 681.254 L856.145 681.254 L855.585 681.254 L855.026 681.254 L854.467 681.254 L853.908 681.254 L853.348 681.254 L852.789 681.254 L852.23 681.254 L851.671 681.254 L851.111 681.254 L850.552 681.254 L849.993 681.254 L849.434 681.254 L848.874 681.254 L848.315 681.254 L847.756 681.254 L847.197 681.254 L846.637 681.254 L846.078 681.254 L845.519 681.254 L844.96 681.254 L844.4 681.254 L843.841 681.254 L843.282 681.254 L842.723 681.254 L842.163 681.254 L841.604 681.254 L841.045 681.254 L840.486 681.254 L839.926 681.254 L839.367 681.254 L838.808 681.254 L838.249 681.254 L837.689 681.254 L837.13 681.254 L836.571 681.254 L836.012 681.254 L835.452 681.254 L834.893 681.254 L834.334 681.254 L833.775 681.254 L833.215 681.254 L832.656 681.254 L832.097 681.254 L831.538 681.254 L830.978 681.254 L830.419 681.254 L829.86 681.254 L829.301 681.254 L828.741 681.254 L828.182 681.254 L827.623 681.254 L827.064 681.254 L826.504 681.254 L825.945 681.254 L825.386 681.254 L824.827 681.254 L824.267 681.254 L823.708 681.254 L823.149 681.254 L822.59 681.254 L822.03 681.254 L821.471 681.254 L820.912 681.254 L820.353 681.254 L819.793 681.254 L819.234 681.254 L818.675 681.254 L818.116 681.254 L817.556 681.254 L816.997 681.254 L816.438 681.254 L815.879 681.254 L815.319 681.254 L814.76 681.254 L814.201 681.254 L813.642 681.254 L813.082 681.254 L812.523 681.254 L811.964 681.254 L811.405 681.254 L810.845 681.254 L810.286 681.254 L809.727 681.254 L809.168 681.254 L808.608 681.254 L808.049 681.254 L807.49 681.254 L806.931 681.254 L806.371 681.254 L805.812 681.254 L805.253 681.254 L804.693 681.254 L804.134 681.254 L803.575 681.254 L803.016 681.254 L802.456 681.254 L801.897 681.254 L801.338 681.254 L800.779 681.254 L800.219 681.254 L799.66 681.254 L799.101 681.254 L798.542 681.254 L797.982 681.254 L797.423 681.254 L796.864 681.254 L796.305 681.254 L795.745 681.254 L795.186 681.254 L794.627 681.254 L794.068 681.254 L793.508 681.254 L792.949 681.254 L792.39 681.254 L791.831 681.254 L791.271 681.254 L790.712 681.254 L790.153 681.254 L789.594 681.254 L789.034 681.254 L788.475 681.254 L787.916 681.254 L787.357 681.254 L786.797 681.254 L786.238 681.254 L785.679 681.254 L785.12 681.254 L784.56 681.254 L784.001 681.254 L783.442 681.254 L782.883 681.254 L782.323 681.254 L781.764 681.254 L781.205 681.254 L780.646 681.254 L780.086 681.254 L779.527 681.254 L778.968 681.254 L778.409 681.254 L777.849 681.254 L777.29 681.254 L776.731 681.254 L776.172 681.254 L775.612 681.254 L775.053 681.254 L774.494 681.254 L773.935 681.254 L773.375 681.254 L772.816 681.254 L772.257 681.254 L771.698 681.254 L771.138 681.254 L770.579 681.254 L770.02 681.254 L769.461 681.254 L768.901 681.254 L768.342 681.254 L767.783 681.254 L767.224 681.254 L766.664 681.254 L766.105 681.254 L765.546 681.254 L764.987 681.254 L764.427 681.254 L763.868 681.254 L763.309 681.254 L762.75 681.254 L762.19 681.254 L761.631 681.254 L761.072 681.254 L760.513 681.254 L759.953 681.254 L759.394 681.254 L758.835 681.254 L758.276 681.254 L757.716 681.254 L757.157 681.254 L756.598 681.254 L756.039 681.254 L755.479 681.254 L754.92 681.254 L754.361 681.254 L753.802 681.254 L753.242 681.254 L752.683 681.254 L752.124 681.254 L751.565 681.254 L751.005 681.254 L750.446 681.254 L749.887 681.254 L749.328 681.254 L748.768 681.254 L748.209 681.254 L747.65 681.254 L747.091 681.254 L746.531 681.254 L745.972 681.254 L745.413 681.254 L744.854 681.254 L744.294 681.254 L743.735 681.254 L743.176 681.254 L742.617 681.254 L742.057 681.254 L741.498 681.254 L740.939 681.254 L740.38 681.254 L739.82 681.254 L739.261 681.254 L738.702 681.254 L738.143 681.254 L737.583 681.254 L737.024 681.254 L736.465 681.254 L735.906 681.254 L735.346 681.254 L734.787 681.254 L734.228 681.254 L733.669 681.254 L733.109 681.254 L732.55 681.254 L731.991 681.254 L731.432 681.254 L730.872 681.254 L730.313 681.254 L729.754 681.254 L729.195 681.254 L728.635 681.254 L728.076 681.254 L727.517 681.254 L726.958 681.254 L726.398 681.254 L725.839 681.254 L725.28 681.254 L724.721 681.254 L724.161 681.254 L723.602 681.254 L723.043 681.254 L722.484 681.254 L721.924 681.254 L721.365 681.254 L720.806 681.254 L720.247 681.254  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.904 720.806,685.904 721.365,685.904 721.924,685.904 722.484,685.904 723.043,685.904 723.602,685.904 724.161,685.904 724.721,685.904 725.28,685.904 725.839,685.904 726.398,685.904 726.958,685.904 727.517,685.904 728.076,685.904 728.635,685.904 729.195,685.904 729.754,685.904 730.313,685.904 730.872,685.904 731.432,685.904 731.991,685.904 732.55,685.904 733.109,685.904 733.669,685.904 734.228,685.904 734.787,685.904 735.346,685.904 735.906,685.904 736.465,685.904 737.024,685.904 737.583,685.904 738.143,685.904 738.702,685.904 739.261,685.904 739.82,685.904 740.38,685.904 740.939,685.904 741.498,685.904 742.057,685.904 742.617,685.904 743.176,685.904 743.735,685.904 744.294,685.904 744.854,685.904 745.413,685.904 745.972,685.904 746.531,685.904 747.091,685.904 747.65,685.904 748.209,685.904 748.768,685.904 749.328,685.904 749.887,685.904 750.446,685.904 751.005,685.904 751.565,685.904 752.124,685.904 752.683,685.904 753.242,685.904 753.802,685.904 754.361,685.904 754.92,685.904 755.479,685.904 756.039,685.904 756.598,685.904 757.157,685.904 757.716,685.904 758.276,685.904 758.835,685.904 759.394,685.904 759.953,685.904 760.513,685.904 761.072,685.904 761.631,685.904 762.19,685.904 762.75,685.904 763.309,685.904 763.868,685.904 764.427,685.904 764.987,685.904 765.546,685.904 766.105,685.904 766.664,685.904 767.224,685.904 767.783,685.904 768.342,685.904 768.901,685.904 769.461,685.904 770.02,685.904 770.579,685.904 771.138,685.904 771.698,685.904 772.257,685.904 772.816,685.904 773.375,685.904 773.935,685.904 774.494,685.904 775.053,685.904 775.612,685.904 776.172,685.904 776.731,685.904 777.29,685.904 777.849,685.904 778.409,685.904 778.968,685.904 779.527,685.904 780.086,685.904 780.646,685.904 781.205,685.904 781.764,685.904 782.323,685.904 782.883,685.904 783.442,685.904 784.001,685.904 784.56,685.904 785.12,685.904 785.679,685.904 786.238,685.904 786.797,685.904 787.357,685.904 787.916,685.904 788.475,685.904 789.034,685.904 789.594,685.904 790.153,685.904 790.712,685.904 791.271,685.904 791.831,685.904 792.39,685.904 792.949,685.904 793.508,685.904 794.068,685.904 794.627,685.904 795.186,685.904 795.745,685.904 796.305,685.904 796.864,685.904 797.423,685.904 797.982,685.904 798.542,685.904 799.101,685.904 799.66,685.904 800.219,685.904 800.779,685.904 801.338,685.904 801.897,685.904 802.456,685.904 803.016,685.904 803.575,685.904 804.134,685.904 804.693,685.904 805.253,685.904 805.812,685.904 806.371,685.904 806.931,685.904 807.49,685.904 808.049,685.904 808.608,685.904 809.168,685.904 809.727,685.904 810.286,685.904 810.845,685.904 811.405,685.904 811.964,685.904 812.523,685.904 813.082,685.904 813.642,685.904 814.201,685.904 814.76,685.904 815.319,685.904 815.879,685.904 816.438,685.904 816.997,685.904 817.556,685.904 818.116,685.904 818.675,685.904 819.234,685.904 819.793,685.904 820.353,685.904 820.912,685.904 821.471,685.904 822.03,685.904 822.59,685.904 823.149,685.904 823.708,685.904 824.267,685.904 824.827,685.904 825.386,685.904 825.945,685.904 826.504,685.904 827.064,685.904 827.623,685.904 828.182,685.904 828.741,685.904 829.301,685.904 829.86,685.904 830.419,685.904 830.978,685.904 831.538,685.904 832.097,685.904 832.656,685.904 833.215,685.904 833.775,685.904 834.334,685.904 834.893,685.904 835.452,685.904 836.012,685.904 836.571,685.904 837.13,685.904 837.689,685.904 838.249,685.904 838.808,685.904 839.367,685.904 839.926,685.904 840.486,685.904 841.045,685.904 841.604,685.904 842.163,685.904 842.723,685.904 843.282,685.904 843.841,685.904 844.4,685.904 844.96,685.904 845.519,685.904 846.078,685.904 846.637,685.904 847.197,685.904 847.756,685.904 848.315,685.904 848.874,685.904 849.434,685.904 849.993,685.904 850.552,685.904 851.111,685.904 851.671,685.904 852.23,685.904 852.789,685.904 853.348,685.904 853.908,685.904 854.467,685.904 855.026,685.904 855.585,685.904 856.145,685.904 856.704,685.904 857.263,685.904 857.822,685.904 858.382,685.904 858.941,685.904 859.5,685.904 860.059,685.904 860.619,685.904 861.178,685.904 861.737,685.904 862.296,685.904 862.856,685.904 863.415,685.904 863.974,685.904 864.533,685.904 865.093,685.904 865.652,685.904 866.211,685.904 866.77,685.904 867.33,685.904 867.889,685.904 868.448,685.904 869.007,685.904 869.567,685.904 870.126,685.904 870.685,685.904 871.244,685.904 871.804,685.904 872.363,685.904 872.922,685.904 873.481,685.904 874.041,685.904 874.6,685.904 875.159,685.904 875.718,685.904 876.278,685.904 876.837,685.904 877.396,685.904 877.955,685.904 878.515,685.904 879.074,685.904 879.633,685.904 880.192,685.904 880.752,685.904 881.311,685.904 881.87,685.904 882.429,685.904 882.989,685.904 883.548,685.904 884.107,685.904 884.666,685.904 885.226,685.904 885.785,685.904 886.344,685.904 886.903,685.904 887.463,685.904 888.022,685.904 888.581,685.904 889.14,685.904 889.7,685.904 890.259,685.904 890.818,685.904 891.377,685.904 891.937,685.904 892.496,685.904 893.055,685.904 893.614,685.904 894.174,685.904 894.733,685.904 895.292,685.904 895.851,685.904 896.411,685.904 896.97,685.904 897.529,685.904 898.088,685.904 898.648,685.904 899.207,685.904 899.766,685.904 900.325,685.904 900.885,685.904 901.444,685.904 902.003,685.904 902.562,685.904 903.122,685.904 903.681,685.904 904.24,685.904 904.799,685.904 905.359,685.904 905.918,685.904 906.477,685.904 907.036,685.904 907.596,685.904 908.155,685.904 908.714,685.904 909.273,685.904 909.833,685.904 910.392,685.904 910.951,685.904 911.51,685.904 912.07,685.904 912.629,685.904 913.188,685.904 913.747,685.904 914.307,685.904 914.866,685.904 915.425,685.904 915.984,685.904 916.544,685.904 917.103,685.904 917.662,685.904 918.221,685.904 918.781,685.904 919.34,685.904 919.899,685.904 920.458,685.904 921.018,685.904 921.577,685.904 922.136,685.904 922.695,685.904 923.255,685.904 923.814,685.904 924.373,685.904 924.932,685.904 925.492,685.904 926.051,685.904 926.61,685.904 927.169,685.904 927.729,685.904 928.288,685.904 928.847,685.904 929.406,685.904 929.966,685.904 930.525,685.904 931.084,685.904 931.644,685.904 932.203,685.904 932.762,685.904 933.321,685.904 933.881,685.904 934.44,685.904 934.999,685.904 935.558,685.904 936.118,685.904 936.677,685.904 937.236,685.904 937.795,685.904 938.355,685.904 938.914,685.904 939.473,685.904 940.032,685.904 940.592,685.904 941.151,685.904 941.71,685.904 942.269,685.904 942.829,685.904 943.388,685.904 943.947,685.904 944.506,685.904 945.066,685.904 945.625,685.904 946.184,685.904 946.743,685.904 947.303,685.904 947.862,685.904 948.421,685.904 948.98,685.904 949.54,685.904 950.099,685.904 950.658,685.904 951.217,685.904 951.777,685.904 952.336,685.904 952.895,685.904 953.454,685.904 954.014,685.904 954.573,685.904 955.132,685.904 955.691,685.904 956.251,685.904 956.81,685.904 957.369,685.904 957.928,685.904 958.488,685.904 959.047,685.904 959.606,685.904 960.165,685.904 960.725,685.904 961.284,685.904 961.843,685.904 962.402,685.904 962.962,685.904 963.521,685.904 964.08,685.904 964.639,685.904 965.199,685.904 965.758,685.904 966.317,685.904 966.876,685.904 967.436,685.904 967.995,685.904 968.554,685.904 969.113,685.904 969.673,685.904 970.232,685.904 970.791,685.904 971.35,685.904 971.91,685.904 972.469,685.904 973.028,685.904 973.587,685.904 974.147,685.904 974.706,685.904 975.265,685.904 975.824,685.904 976.384,685.904 976.943,685.904 977.502,685.904 978.061,685.904 978.621,685.904 979.18,685.904 979.739,685.904 980.298,685.904 980.858,685.904 981.417,685.904 981.976,685.904 982.535,685.904 983.095,685.904 983.654,685.904 984.213,685.904 984.772,685.904 985.332,685.904 985.891,685.904 986.45,685.904 987.009,685.904 987.569,685.904 988.128,685.904 988.687,685.904 989.246,685.904 989.806,685.904 990.365,685.904 990.924,685.904 991.483,685.904 992.043,685.904 992.602,685.904 993.161,685.904 993.72,685.904 994.28,685.904 994.839,685.904 995.398,685.904 995.957,685.904 996.517,685.904 997.076,685.904 997.635,685.904 998.194,685.904 998.754,685.904 999.313,685.904 999.872,685.904 1000.43,685.904 1000.99,685.904 1001.55,685.904 1002.11,685.904 1002.67,685.904 1003.23,685.904 1003.79,685.904 1004.35,685.904 1004.91,685.904 1005.46,685.904 1006.02,685.904 1006.58,685.904 1007.14,685.904 1007.7,685.904 1008.26,685.904 1008.82,685.904 1009.38,685.904 1009.94,685.904 1010.5,685.904 1011.06,685.904 1011.62,685.904 1012.18,685.904 1012.73,685.904 1013.29,685.904 1013.85,685.904 1014.41,685.904 1014.97,685.904 1015.53,685.904 1016.09,685.904 1016.65,685.904 1017.21,685.904 1017.77,685.904 1018.33,685.904 1018.89,685.904 1019.45,685.904 1020.01,685.904 1020.56,685.904 1021.12,685.904 1021.68,685.904 1022.24,685.904 1022.8,685.904 1023.36,685.904 1023.92,685.904 1024.48,685.904 1025.04,685.904 1025.6,685.904 1026.16,685.904 1026.72,685.904 1027.28,685.904 1027.83,685.904 1028.39,685.904 1028.95,685.904 1029.51,685.904 1030.07,685.904 1030.63,685.904 1031.19,685.904 1031.75,685.904 1032.31,685.904 1032.87,685.904 1033.43,685.904 1033.99,685.904 1034.55,685.904 1035.1,685.904 1035.66,685.904 1036.22,685.904 1036.78,685.904 1037.34,685.904 1037.9,685.904 1038.46,685.904 1039.02,685.904 1039.58,685.904 1040.14,685.904 1040.7,685.904 1041.26,685.904 1041.82,685.904 1042.38,685.904 1042.93,685.904 1043.49,685.904 1044.05,685.904 1044.61,685.904 1045.17,685.904 1045.73,685.904 1046.29,685.904 1046.85,685.904 1047.41,685.904 1047.97,685.904 1048.53,685.904 1049.09,685.904 1049.65,685.904 1050.2,685.904 1050.76,685.904 1051.32,685.904 1051.88,685.904 1052.44,685.904 1053,685.904 1053.56,685.904 1054.12,685.904 1054.68,685.904 1055.24,685.904 1055.8,685.904 1056.36,685.904 1056.92,685.904 1057.48,685.904 1058.03,685.904 1058.59,685.904 1059.15,685.904 1059.71,685.904 1060.27,685.904 1060.83,685.904 1061.39,685.904 1061.95,685.904 1062.51,685.904 1063.07,685.904 1063.63,685.904 1064.19,685.904 1064.75,685.904 1065.3,685.904 1065.86,685.904 1066.42,685.904 1066.98,685.904 1067.54,685.904 1068.1,685.904 1068.66,685.904 1069.22,685.904 1069.78,685.904 1070.34,685.904 1070.9,685.904 1071.46,685.904 1072.02,685.904 1072.57,685.904 1073.13,685.904 1073.69,685.904 1074.25,685.904 1074.81,685.904 1075.37,685.904 1075.93,685.904 1076.49,685.904 1077.05,685.904 1077.61,685.904 1078.17,685.904 1078.73,685.904 1079.29,685.904 1079.85,685.904 1080.4,685.904 1080.96,685.904 1081.52,685.904 1082.08,685.904 1082.64,685.904 1083.2,685.904 1083.76,685.904 1084.32,685.904 1084.88,685.904 1085.44,685.904 1086,685.904 1086.56,685.904 1087.12,685.904 1087.67,685.904 1088.23,685.904 1088.79,685.904 1089.35,685.904 1089.91,685.904 1090.47,685.904 1091.03,685.904 1091.59,685.904 1092.15,685.904 1092.71,685.904 1093.27,685.904 1093.83,685.904 1094.39,685.904 1094.94,685.904 1095.5,685.904 1096.06,685.904 1096.62,685.904 1097.18,685.904 1097.74,685.904 1098.3,685.904 1098.86,685.904 1099.42,685.904 1099.98,685.904 1100.54,685.904 1101.1,685.904 1101.66,685.904 1102.22,685.904 1102.77,685.904 1103.33,685.904 1103.89,685.904 1104.45,685.904 1105.01,685.904 1105.57,685.904 1106.13,685.904 1106.69,685.904 1107.25,685.904 1107.81,685.904 1108.37,685.904 1108.93,685.904 1109.49,685.904 1110.04,685.904 1110.6,685.904 1111.16,685.904 1111.72,685.904 1112.28,685.904 1112.84,685.904 1113.4,685.904 1113.96,685.904 1114.52,685.904 1115.08,685.904 1115.64,685.904 1116.2,685.904 1116.76,685.904 1117.31,685.904 1117.87,685.904 1118.43,685.904 1118.99,685.904 1119.55,685.904 1120.11,685.904 1120.67,685.904 1121.23,685.904 1121.79,685.904 1122.35,685.904 1122.91,685.904 1123.47,685.904 1124.03,685.904 1124.59,685.904 1125.14,685.904 1125.7,685.904 1126.26,685.904 1126.82,685.904 1127.38,685.904 1127.94,685.904 1128.5,685.904 1129.06,685.904 1129.62,685.904 1130.18,685.904 1130.74,685.904 1131.3,685.904 1131.86,685.904 1132.41,685.904 1132.97,685.904 1133.53,685.904 1134.09,685.904 1134.65,685.904 1135.21,685.904 1135.77,685.904 1136.33,685.904 1136.89,685.904 1137.45,685.904 1138.01,685.904 1138.57,685.904 1139.13,685.904 1139.68,685.904 1140.24,685.904 1140.8,685.904 1141.36,685.904 1141.92,685.904 1142.48,685.904 1143.04,685.904 1143.6,685.904 1144.16,685.904 1144.72,685.904 1145.28,685.904 1145.84,685.904 1146.4,685.904 1146.96,685.904 1147.51,685.904 1148.07,685.904 1148.63,685.904 1149.19,685.904 1149.75,685.904 1150.31,685.904 1150.87,685.904 1151.43,685.904 1151.99,685.904 1152.55,685.904 1153.11,685.904 1153.67,685.904 1154.23,685.904 1154.78,685.904 1155.34,685.904 1155.9,685.904 1156.46,685.904 1157.02,685.904 1157.58,685.904 1158.14,685.904 1158.7,685.904 1159.26,685.904 1159.82,685.904 1160.38,685.904 1160.94,685.904 1161.5,685.904 1162.05,685.904 1162.61,685.904 1163.17,685.904 1163.73,685.904 1164.29,685.904 1164.85,685.904 1165.41,685.904 1165.97,685.904 1166.53,685.904 1167.09,685.904 1167.65,685.904 1168.21,685.904 1168.77,685.904 1169.33,685.904 1169.88,685.904 1170.44,685.904 1171,685.904 1171.56,685.904 1172.12,685.904 1172.68,685.904 1173.24,685.904 1173.8,685.904 1174.36,685.904 1174.92,685.904 1175.48,685.904 1176.04,685.904 1176.6,685.904 1177.15,685.904 1177.71,685.904 1178.27,685.904 1178.83,685.904 1179.39,685.904 1179.95,685.904 1180.51,685.904 1181.07,685.904 1181.63,685.904 1182.19,685.904 1182.75,685.904 1183.31,685.904 1183.87,685.904 1184.43,685.904 1184.98,685.904 1185.54,685.904 1186.1,685.904 1186.66,685.904 1187.22,685.904 1187.78,685.904 1188.34,685.904 1188.9,685.904 1189.46,685.904 1190.02,685.904 1190.58,685.904 1191.14,685.904 1191.7,685.904 1192.25,685.904 1192.81,685.904 1193.37,685.904 1193.93,685.904 1194.49,685.904 1195.05,685.904 1195.61,685.904 1196.17,685.904 1196.73,685.904 1197.29,685.904 1197.85,685.904 1198.41,685.904 1198.97,685.904 1199.52,685.904 1200.08,685.904 1200.64,685.904 1201.2,685.904 1201.76,685.904 1202.32,685.904 1202.88,685.904 1203.44,685.904 1204,685.904 1204.56,685.904 1205.12,685.904 1205.68,685.904 1206.24,685.904 1206.8,685.904 1207.35,685.904 1207.91,685.904 1208.47,685.904 1209.03,685.904 1209.59,685.904 1210.15,685.904 1210.71,685.904 1211.27,685.904 1211.83,685.904 1212.39,685.904 1212.95,685.904 1213.51,685.904 1214.07,685.904 1214.62,685.904 1215.18,685.904 1215.74,685.904 1216.3,685.904 1216.86,685.904 1217.42,685.904 1217.98,685.904 1218.54,685.904 1219.1,685.904 1219.66,685.904 1220.22,685.904 1220.78,685.904 1221.34,685.904 1221.89,685.904 1222.45,685.904 1223.01,685.904 1223.57,685.904 1224.13,685.904 1224.69,685.904 1225.25,685.904 1225.81,685.904 1226.37,685.904 1226.93,685.904 1227.49,685.904 1228.05,685.904 1228.61,685.904 1229.17,685.904 1229.72,685.904 1230.28,685.904 1230.84,685.904 1231.4,685.904 1231.96,685.904 1232.52,685.904 1233.08,685.904 1233.64,685.904 1234.2,685.904 1234.76,685.904 1235.32,685.904 1235.88,685.904 1236.44,685.904 1236.99,685.904 1237.55,685.904 1238.11,685.904 1238.67,685.904 1239.23,685.904 1239.79,685.904 1240.35,685.904 1240.91,685.904 1241.47,685.904 1242.03,685.904 1242.59,685.904 1243.15,685.904 1243.71,685.904 1244.26,685.904 1244.82,685.904 1245.38,685.904 1245.94,685.904 1246.5,685.904 1247.06,685.904 1247.62,685.904 1248.18,685.904 1248.74,685.904 1249.3,685.904 1249.86,685.904 1250.42,685.904 1250.98,685.904 1251.54,685.904 1252.09,685.904 1252.65,685.904 1253.21,685.904 1253.77,685.904 1254.33,685.904 1254.89,685.904 1255.45,685.904 1256.01,685.904 1256.57,685.904 1257.13,685.904 1257.69,685.904 1258.25,685.904 1258.81,685.904 1259.36,685.904 1259.92,685.904 1260.48,685.904 1261.04,685.904 1261.6,685.904 1262.16,685.904 1262.72,685.904 1263.28,685.904 1263.84,685.904 1264.4,685.904 1264.96,685.904 1265.52,685.904 1266.08,685.904 1266.63,685.904 1267.19,685.904 1267.75,685.904 1268.31,685.904 1268.87,685.904 1269.43,685.904 1269.99,685.904 1270.55,685.904 1271.11,685.904 1271.67,685.904 1272.23,685.904 1272.79,685.904 1273.35,685.904 1273.91,685.904 1274.46,685.904 1275.02,685.904 1275.58,685.904 1276.14,685.904 1276.7,685.904 1277.26,685.904 1277.82,685.904 1278.38,685.904 1278.94,685.904 1279.5,685.904 1280.06,685.904 1280.62,685.904 1281.18,685.904 1281.73,685.904 1282.29,685.904 1282.85,685.904 1283.41,685.904 1283.97,685.904 1284.53,685.904 1285.09,685.904 1285.65,685.904 1286.21,685.904 1286.77,685.904 1287.33,685.904 1287.89,685.904 1288.45,685.904 1289,685.904 1289.56,685.904 1290.12,685.904 1290.68,685.904 1291.24,685.904 1291.8,685.904 1292.36,685.904 1292.92,685.904 1293.48,685.904 1294.04,685.904 1294.6,685.904 1295.16,685.904 1295.72,685.904 1296.28,685.904 1296.83,685.904 1297.39,685.904 1297.95,685.904 1298.51,685.904 1299.07,685.904 1299.63,685.904 1300.19,685.904 1300.75,685.904 1301.31,685.904 1301.87,685.904 1302.43,685.904 1302.99,685.904 1303.55,685.904 1304.1,685.904 1304.66,685.904 1305.22,685.904 1305.78,685.904 1306.34,685.904 1306.9,685.904 1307.46,685.904 1308.02,685.904 1308.58,685.904 1309.14,685.904 1309.7,685.904 1310.26,685.904 1310.82,685.904 1311.38,685.904 1311.93,685.904 1312.49,685.904 1313.05,685.904 1313.61,685.904 1314.17,685.904 1314.73,685.904 1315.29,685.904 1315.85,685.904 1316.41,685.904 1316.97,685.904 1317.53,685.904 1318.09,685.904 1318.65,685.904 1319.2,685.904 1319.76,685.904 1320.32,685.904 1320.88,685.904 1321.44,685.904 1322,685.904 1322.56,685.904 1323.12,685.904 1323.68,685.904 1324.24,685.904 1324.8,685.904 1325.36,685.904 1325.92,685.904 1326.47,685.904 1327.03,685.904 1327.59,685.904 1328.15,685.904 1328.71,685.904 1329.27,685.904 1329.83,685.904 1330.39,685.904 1330.95,685.904 1331.51,685.904 1332.07,685.904 1332.63,685.904 1333.19,685.904 1333.75,685.904 1334.3,685.904 1334.86,685.904 1335.42,685.904 1335.98,685.904 1336.54,685.904 1337.1,685.904 1337.66,685.904 1338.22,685.904 1338.78,685.904 1339.34,685.904 1339.9,685.904 1340.46,685.904 1341.02,685.904 1341.57,685.904 1342.13,685.904 1342.69,685.904 1343.25,685.904 1343.81,685.904 1344.37,685.904 1344.93,685.904 1345.49,685.904 1346.05,685.904 1346.61,685.904 1347.17,685.904 1347.73,685.904 1348.29,685.904 1348.84,685.904 1349.4,685.904 1349.96,685.904 1350.52,685.904 1351.08,685.904 1351.64,685.904 1352.2,685.904 1352.76,685.904 1353.32,685.904 1353.88,685.904 1354.44,685.904 1355,685.904 1355.56,685.904 1356.12,685.904 1356.67,685.904 1357.23,685.904 1357.79,685.904 1358.35,685.904 1358.91,685.904 1359.47,685.904 1360.03,685.904 1360.59,685.904 1361.15,685.904 1361.71,685.904 1362.27,685.904 1362.83,685.904 1363.39,685.904 1363.94,685.904 1364.5,685.904 1365.06,685.904 1365.62,685.904 1366.18,685.904 1366.74,685.904 1367.3,685.904 1367.86,685.904 1368.42,685.904 1368.98,685.904 1369.54,685.904 1370.1,685.904 1370.66,685.904 1371.21,685.904 1371.77,685.904 1372.33,685.904 1372.89,685.904 1373.45,685.904 1374.01,685.904 1374.57,685.904 1375.13,685.904 1375.69,685.904 1376.25,685.904 1376.81,685.904 1377.37,685.904 1377.93,685.904 1378.49,685.904 1379.04,685.904 1379.6,685.904 1380.16,685.904 1380.72,685.904 1381.28,685.904 1381.84,685.904 1382.4,685.904 1382.96,685.904 1383.52,685.904 1384.08,685.904 1384.64,685.904 1385.2,685.904 1385.76,685.904 1386.31,685.904 1386.87,685.904 1387.43,685.904 1387.99,685.904 1388.55,685.904 1389.11,685.904 1389.67,685.904 1390.23,685.904 1390.79,685.904 1391.35,685.904 1391.91,685.904 1392.47,685.904 1393.03,685.904 1393.58,685.904 1394.14,685.904 1394.7,685.904 1395.26,685.904 1395.82,685.904 1396.38,685.904 1396.94,685.904 1397.5,685.904 1398.06,685.904 1398.62,685.904 1399.18,685.904 1399.74,685.904 1400.3,685.904 1400.86,685.904 1401.41,685.904 1401.97,685.904 1402.53,685.904 1403.09,685.904 1403.65,685.904 1404.21,685.904 1404.77,685.904 1405.33,685.904 1405.89,685.904 1406.45,685.904 1407.01,685.904 1407.57,685.904 1408.13,685.904 1408.68,685.904 1409.24,685.904 1409.8,685.904 1410.36,685.904 1410.92,685.904 1411.48,685.904 1412.04,685.904 1412.6,685.904 1413.16,685.904 1413.72,685.904 1414.28,685.904 1414.84,685.904 1415.4,685.904 1415.95,685.904 1416.51,685.904 1417.07,685.904 1417.63,685.904 1418.19,685.904 1418.75,685.904 1419.31,685.904 1419.87,685.904 1420.43,685.904 1420.99,685.904 1421.55,685.904 1422.11,685.904 1422.67,685.904 1423.23,685.904 1423.78,685.904 1424.34,685.904 1424.9,685.904 1425.46,685.904 1426.02,685.904 1426.58,685.904 1427.14,685.904 1427.7,685.904 1428.26,685.904 1428.82,685.904 1429.38,685.904 1429.94,685.904 1430.5,685.904 1431.05,685.904 1431.61,685.904 1432.17,685.904 1432.73,685.904 1433.29,685.904 1433.85,685.904 1434.41,685.904 1434.97,685.904 1435.53,685.904 1436.09,685.904 1436.65,685.904 1437.21,685.904 1437.77,685.904 1438.33,685.904 1438.88,685.904 1439.44,685.904 1440,685.904 1440.56,685.904 1441.12,685.904 1441.68,685.904 1442.24,685.904 1442.8,685.904 1443.36,685.904 1443.92,685.904 1444.48,685.904 1445.04,685.904 1445.6,685.904 1446.15,685.904 1446.71,685.904 1447.27,685.904 1447.83,685.904 1448.39,685.904 1448.95,685.904 1449.51,685.904 1450.07,685.904 1450.63,685.904 1451.19,685.904 1451.75,685.904 1452.31,685.904 1452.87,685.904 1453.42,685.904 1453.98,685.904 1454.54,685.904 1455.1,685.904 1455.66,685.904 1456.22,685.904 1456.78,685.904 1457.34,685.904 1457.9,685.904 1458.46,685.904 1459.02,685.904 1459.58,685.904 1460.14,685.904 1460.7,685.904 1461.25,685.904 1461.81,685.904 1462.37,685.904 1462.93,685.904 1463.49,685.904 1464.05,685.904 1464.61,685.904 1465.17,685.904 1465.73,685.904 1466.29,685.904 1466.85,685.904 1467.41,685.904 1467.97,685.904 1468.52,685.904 1469.08,685.904 1469.64,685.904 1470.2,685.904 1470.76,685.904 1471.32,685.904 1471.88,685.904 1472.44,685.904 1473,685.904 1473.56,685.904 1474.12,685.904 1474.68,685.904 1475.24,685.904 1475.79,685.904 1476.35,685.904 1476.91,685.904 1477.47,685.904 1478.03,685.904 1478.59,685.904 1479.15,685.904 1479.71,685.904 1480.27,685.904 1480.83,685.904 1481.39,685.904 1481.95,685.904 1482.51,685.904 1483.07,685.904 1483.62,685.904 1484.18,685.904 1484.74,685.904 1485.3,685.904 1485.86,685.904 1486.42,685.904 1486.98,685.904 1487.54,685.904 1488.1,685.904 1488.66,685.904 1489.22,685.904 1489.78,685.904 1490.34,685.904 1490.89,685.904 1491.45,685.904 1492.01,685.904 1492.57,685.904 1493.13,685.904 1493.69,685.904 1494.25,685.904 1494.81,685.904 1495.37,685.904 1495.93,685.904 1496.49,685.904 1497.05,685.904 1497.61,685.904 1498.16,685.904 1498.72,685.904 1499.28,685.904 1499.84,685.904 1500.4,685.904 1500.96,685.904 1501.52,685.904 1502.08,685.904 1502.64,685.904 1503.2,685.904 1503.76,685.904 1504.32,685.904 1504.88,685.904 1505.44,685.904 1505.99,685.904 1506.55,685.904 1507.11,685.904 1507.67,685.904 1508.23,685.904 1508.79,685.904 1509.35,685.904 1509.91,685.904 1510.47,685.904 1511.03,685.904 1511.59,685.904 1512.15,685.904 1512.71,685.904 1513.26,685.904 1513.82,685.904 1514.38,685.904 1514.94,685.904 1515.5,685.904 1516.06,685.904 1516.62,685.904 1517.18,685.904 1517.74,685.904 1518.3,685.904 1518.86,685.904 1519.42,685.904 1519.98,685.904 1520.53,685.904 1521.09,685.904 1521.65,685.904 1522.21,685.904 1522.77,685.904 1523.33,685.904 1523.89,685.904 1524.45,685.904 1525.01,685.904 1525.57,685.904 1526.13,685.904 1526.69,685.904 1527.25,685.904 1527.81,685.904 1528.36,685.904 1528.92,685.904 1529.48,685.904 1530.04,685.904 1530.6,685.904 1531.16,685.904 1531.72,685.904 1532.28,685.904 1532.84,685.904 1533.4,685.904 1533.96,685.904 1534.52,685.904 1535.08,685.904 1535.63,685.904 1536.19,685.904 1536.75,685.904 1537.31,685.904 1537.87,685.904 1538.43,685.904 1538.99,685.904 1539.55,685.904 1540.11,685.904 1540.67,685.904 1541.23,685.904 1541.79,685.904 1542.35,685.904 1542.9,685.904 1543.46,685.904 1544.02,685.904 1544.58,685.904 1545.14,685.904 1545.7,685.904 1546.26,685.904 1546.82,685.904 1547.38,685.904 1547.94,685.904 1548.5,685.904 1549.06,685.904 1549.62,685.904 1550.18,685.904 1550.73,685.904 1551.29,685.904 1551.85,685.904 1552.41,685.904 1552.97,685.904 1553.53,685.904 1554.09,685.904 1554.65,685.904 1555.21,685.904 1555.77,685.904 1556.33,685.904 1556.89,685.904 1557.45,685.904 1558,685.904 1558.56,685.904 1559.12,685.904 1559.68,685.904 1560.24,685.904 1560.8,685.904 1561.36,685.904 1561.92,685.904 1562.48,685.904 1563.04,685.904 1563.6,685.904 1564.16,685.904 1564.72,685.904 1565.28,685.904 1565.83,685.904 1566.39,685.904 1566.95,685.904 1567.51,685.904 1568.07,685.904 1568.63,685.904 1569.19,685.904 1569.75,685.904 1570.31,685.904 1570.87,685.904 1571.43,685.904 1571.99,685.904 1572.55,685.904 1573.1,685.904 1573.66,685.904 1574.22,685.904 1574.78,685.904 1575.34,685.904 1575.9,685.904 1576.46,685.904 1577.02,685.904 1577.58,685.904 1578.14,685.904 1578.7,685.904 1579.26,685.904 1579.82,685.904 1580.37,685.904 1580.93,685.904 1581.49,685.904 1582.05,685.904 1582.61,685.904 1583.17,685.904 1583.73,685.904 1584.29,685.904 1584.85,685.904 1585.41,685.904 1585.97,685.904 1586.53,685.904 1587.09,685.904 1587.65,685.904 1588.2,685.904 1588.76,685.904 1589.32,685.904 1589.88,685.904 1590.44,685.904 1591,685.904 1591.56,685.904 1592.12,685.904 1592.68,685.904 1593.24,685.904 1593.8,685.904 1594.36,685.904 1594.92,685.904 1595.47,685.904 1596.03,685.904 1596.59,685.904 1597.15,685.904 1597.71,685.904 1598.27,685.904 1598.83,685.904 1599.39,685.904 1599.95,685.904 1600.51,685.904 1601.07,685.904 1601.63,685.904 1602.19,685.904 1602.74,685.904 1603.3,685.904 1603.86,685.904 1604.42,685.904 1604.98,685.904 1605.54,685.904 1606.1,685.904 1606.66,685.904 1607.22,685.904 1607.78,685.904 1608.34,685.904 1608.9,685.904 1609.46,685.904 1610.02,685.904 1610.57,685.904 1611.13,685.904 1611.69,685.904 1612.25,685.904 1612.81,685.904 1613.37,685.904 1613.93,685.904 1614.49,685.904 1615.05,685.904 1615.61,685.904 1616.17,685.904 1616.73,685.904 1617.29,685.904 1617.84,685.904 1618.4,685.904 1618.96,685.904 1619.52,685.904 1620.08,685.904 1620.64,685.904 1621.2,685.904 1621.76,685.904 1622.32,685.904 1622.88,685.904 1623.44,685.904 1624,685.904 1624.56,685.904 1625.11,685.904 1625.67,685.904 1626.23,685.904 1626.79,685.904 1627.35,685.904 1627.91,685.904 1628.47,685.904 1629.03,685.904 1629.59,685.904 1630.15,685.904 1630.71,685.904 1631.27,685.904 1631.83,685.904 1632.39,685.904 1632.94,685.904 1633.5,685.904 1634.06,685.904 1634.62,685.904 1635.18,685.904 1635.74,685.904 1636.3,685.904 1636.86,685.904 1637.42,685.904 1637.98,685.904 1638.54,685.904 1639.1,685.904 1639.66,685.904 1640.21,685.904 1640.77,685.904 1641.33,685.904 1641.89,685.904 1642.45,685.904 1643.01,685.904 1643.57,685.904 1644.13,685.904 1644.69,685.904 1645.25,685.904 1645.81,685.904 1646.37,685.904 1646.93,685.904 1647.48,685.904 1648.04,685.904 1648.6,685.904 1649.16,685.904 1649.72,685.904 1650.28,685.904 1650.84,685.904 1651.4,685.904 1651.96,685.904 1652.52,685.904 1653.08,685.904 1653.64,685.904 1654.2,685.904 1654.76,685.904 1655.31,685.904 1655.87,685.904 1656.43,685.904 1656.99,685.904 1657.55,685.904 1658.11,685.904 1658.67,685.904 1659.23,685.904 1659.79,685.904 1660.35,685.904 1660.91,685.904 1661.47,685.904 1662.03,685.904 1662.58,685.904 1663.14,685.904 1663.7,685.904 1664.26,685.904 1664.82,685.904 1665.38,685.904 1665.94,685.904 1666.5,685.904 1667.06,685.904 1667.62,685.904 1668.18,685.904 1668.74,685.904 1669.3,685.904 1669.85,685.904 1670.41,685.904 1670.97,685.904 1671.53,685.904 1672.09,685.904 1672.65,685.904 1673.21,685.904 1673.77,685.904 1674.33,685.904 1674.89,685.904 1675.45,685.904 1676.01,685.904 1676.57,685.904 1677.13,685.904 1677.68,685.904 1678.24,685.904 1678.8,685.904 1679.36,685.904 1679.92,685.904 1680.48,685.904 1681.04,685.904 1681.6,685.904 1682.16,685.904 1682.72,685.904 1683.28,685.904 1683.84,685.904 1684.4,685.904 1684.95,685.904 1685.51,685.904 1686.07,685.904 1686.63,685.904 1687.19,685.904 1687.75,685.904 1688.31,685.904 1688.87,685.904 1689.43,685.904 1689.99,685.904 1690.55,685.904 1691.11,685.904 1691.67,685.904 1692.23,685.904 1692.78,685.904 1693.34,685.904 1693.9,685.904 1694.46,685.904 1695.02,685.904 1695.58,685.904 1696.14,685.904 1696.7,685.904 1697.26,685.904 1697.82,685.904 1698.38,685.904 1698.94,685.904 1699.5,685.904 1700.05,685.904 1700.61,685.904 1701.17,685.904 1701.73,685.904 1702.29,685.904 1702.85,685.904 1703.41,685.904 1703.97,685.904 1704.53,685.904 1705.09,685.904 1705.65,685.904 1706.21,685.904 1706.77,685.904 1707.32,685.904 1707.88,685.904 1708.44,685.904 1709,685.904 1709.56,685.904 1710.12,685.904 1710.68,685.904 1711.24,685.904 1711.8,685.904 1712.36,685.904 1712.92,685.904 1713.48,685.904 1714.04,685.904 1714.6,685.904 1715.15,685.904 1715.71,685.904 1716.27,685.904 1716.83,685.904 1717.39,685.904 1717.95,685.904 1718.51,685.904 1719.07,685.904 1719.63,685.904 1720.19,685.904 1720.75,685.904 1721.31,685.904 1721.87,685.904 1722.42,685.904 1722.98,685.904 1723.54,685.904 1724.1,685.904 1724.66,685.904 1725.22,685.904 1725.78,685.904 1726.34,685.904 1726.9,685.904 1727.46,685.904 1728.02,685.904 1728.58,685.904 1729.14,685.904 1729.69,685.904 1730.25,685.904 1730.81,685.904 1731.37,685.904 1731.93,685.904 1732.49,685.904 1733.05,685.904 1733.61,685.904 1734.17,685.904 1734.73,685.904 1735.29,685.904 1735.85,685.904 1736.41,685.904 1736.97,685.904 1737.52,685.904 1738.08,685.904 1738.64,685.904 1739.2,685.904 1739.76,685.904 1740.32,685.904 1740.88,685.904 1741.44,685.904 1742,685.904 1742.56,685.904 1743.12,685.904 1743.68,685.904 1744.24,685.904 1744.79,685.904 1745.35,685.904 1745.91,685.904 1746.47,685.904 1747.03,685.904 1747.59,685.904 1748.15,685.904 1748.71,685.904 1749.27,685.904 1749.83,685.904 1750.39,685.904 1750.95,685.904 1751.51,685.904 1752.06,685.904 1752.62,685.904 1753.18,685.904 1753.74,685.904 1754.3,685.904 1754.86,685.904 1755.42,685.904 1755.98,685.904 1756.54,685.904 1757.1,685.904 1757.66,685.904 1758.22,685.904 1758.78,685.904 1759.34,685.904 1759.89,685.904 1760.45,685.904 1761.01,685.904 1761.57,685.904 1762.13,685.904 1762.69,685.904 1763.25,685.904 1763.81,685.904 1764.37,685.904 1764.93,685.904 1765.49,685.904 1766.05,685.904 1766.61,685.904 1767.16,685.904 1767.72,685.904 1768.28,685.904 1768.84,685.904 1769.4,685.904 1769.96,685.904 1770.52,685.904 1771.08,685.904 1771.64,685.904 1772.2,685.904 1772.76,685.904 1773.32,685.904 1773.88,685.904 1774.43,685.904 1774.99,685.904 1775.55,685.904 1776.11,685.904 1776.67,685.904 1777.23,685.904 1777.79,685.904 1778.35,685.904 1778.91,685.904 1779.47,685.904 1780.03,685.904 1780.59,685.904 1781.15,685.904 1781.71,685.904 1782.26,685.904 1782.82,685.904 1783.38,685.904 1783.94,685.904 1784.5,685.904 1785.06,685.904 1785.62,685.904 1786.18,685.904 1786.74,685.904 1787.3,685.904 1787.86,685.904 1788.42,685.904 1788.98,685.904 1789.53,685.904 1790.09,685.904 1790.65,685.904 1791.21,685.904 1791.77,685.904 1792.33,685.904 1792.89,685.904 1793.45,685.904 1794.01,685.904 1794.57,685.904 1795.13,685.904 1795.69,685.904 1796.25,685.904 1796.8,685.904 1797.36,685.904 1797.92,685.904 1798.48,685.904 1799.04,685.904 1799.6,685.904 1800.16,685.904 1800.72,685.904 1801.28,685.904 1801.84,685.904 1802.4,685.904 1802.96,685.904 1803.52,685.904 1804.08,685.904 1804.63,685.904 1805.19,685.904 1805.75,685.904 1806.31,685.904 1806.87,685.904 1807.43,685.904 1807.99,685.904 1808.55,685.904 1809.11,685.904 1809.67,685.904 1810.23,685.904 1810.79,685.904 1811.35,685.904 1811.9,685.904 1812.46,685.904 1813.02,685.904 1813.58,685.904 1814.14,685.904 1814.7,685.904 1815.26,685.904 1815.82,685.904 1816.38,685.904 1816.94,685.904 1817.5,685.904 1818.06,685.904 1818.62,685.904 1819.18,685.904 1819.73,685.904 1820.29,685.904 1820.85,685.904 1821.41,685.904 1821.97,685.904 1822.53,685.904 1823.09,685.904 1823.65,685.904 1824.21,685.904 1824.77,685.904 1825.33,685.904 1825.89,685.904 1826.45,685.904 1827,685.904 1827.56,685.904 1828.12,685.904 1828.68,685.904 1829.24,685.904 1829.8,685.904 1830.36,685.904 1830.92,685.904 1831.48,685.904 1832.04,685.904 1832.6,685.904 1833.16,685.904 1833.72,685.904 1834.27,685.904 1834.83,685.904 1835.39,685.904 1835.95,685.904 1836.51,685.904 1837.07,685.904 1837.63,685.904 1838.19,685.904 \"/>\n<path clip-path=\"url(#clip443)\" d=\"M720.247 684.144 L720.806 684.144 L721.365 684.144 L721.924 684.144 L722.484 684.144 L723.043 684.144 L723.602 684.144 L724.161 684.144 L724.721 684.144 L725.28 684.144 L725.839 684.144 L726.398 684.144 L726.958 684.144 L727.517 684.144 L728.076 684.144 L728.635 684.144 L729.195 684.144 L729.754 684.144 L730.313 684.144 L730.872 684.144 L731.432 684.144 L731.991 684.144 L732.55 684.144 L733.109 684.144 L733.669 684.144 L734.228 684.144 L734.787 684.144 L735.346 684.144 L735.906 684.144 L736.465 684.144 L737.024 684.144 L737.583 684.144 L738.143 684.144 L738.702 684.144 L739.261 684.144 L739.82 684.144 L740.38 684.144 L740.939 684.144 L741.498 684.144 L742.057 684.144 L742.617 684.144 L743.176 684.144 L743.735 684.144 L744.294 684.144 L744.854 684.144 L745.413 684.144 L745.972 684.144 L746.531 684.144 L747.091 684.144 L747.65 684.144 L748.209 684.144 L748.768 684.144 L749.328 684.144 L749.887 684.144 L750.446 684.144 L751.005 684.144 L751.565 684.144 L752.124 684.144 L752.683 684.144 L753.242 684.144 L753.802 684.144 L754.361 684.144 L754.92 684.144 L755.479 684.144 L756.039 684.144 L756.598 684.144 L757.157 684.144 L757.716 684.144 L758.276 684.144 L758.835 684.144 L759.394 684.144 L759.953 684.144 L760.513 684.144 L761.072 684.144 L761.631 684.144 L762.19 684.144 L762.75 684.144 L763.309 684.144 L763.868 684.144 L764.427 684.144 L764.987 684.144 L765.546 684.144 L766.105 684.144 L766.664 684.144 L767.224 684.144 L767.783 684.144 L768.342 684.144 L768.901 684.144 L769.461 684.144 L770.02 684.144 L770.579 684.144 L771.138 684.144 L771.698 684.144 L772.257 684.144 L772.816 684.144 L773.375 684.144 L773.935 684.144 L774.494 684.144 L775.053 684.144 L775.612 684.144 L776.172 684.144 L776.731 684.144 L777.29 684.144 L777.849 684.144 L778.409 684.144 L778.968 684.144 L779.527 684.144 L780.086 684.144 L780.646 684.144 L781.205 684.144 L781.764 684.144 L782.323 684.144 L782.883 684.144 L783.442 684.144 L784.001 684.144 L784.56 684.144 L785.12 684.144 L785.679 684.144 L786.238 684.144 L786.797 684.144 L787.357 684.144 L787.916 684.144 L788.475 684.144 L789.034 684.144 L789.594 684.144 L790.153 684.144 L790.712 684.144 L791.271 684.144 L791.831 684.144 L792.39 684.144 L792.949 684.144 L793.508 684.144 L794.068 684.144 L794.627 684.144 L795.186 684.144 L795.745 684.144 L796.305 684.144 L796.864 684.144 L797.423 684.144 L797.982 684.144 L798.542 684.144 L799.101 684.144 L799.66 684.144 L800.219 684.144 L800.779 684.144 L801.338 684.144 L801.897 684.144 L802.456 684.144 L803.016 684.144 L803.575 684.144 L804.134 684.144 L804.693 684.144 L805.253 684.144 L805.812 684.144 L806.371 684.144 L806.931 684.144 L807.49 684.144 L808.049 684.144 L808.608 684.144 L809.168 684.144 L809.727 684.144 L810.286 684.144 L810.845 684.144 L811.405 684.144 L811.964 684.144 L812.523 684.144 L813.082 684.144 L813.642 684.144 L814.201 684.144 L814.76 684.144 L815.319 684.144 L815.879 684.144 L816.438 684.144 L816.997 684.144 L817.556 684.144 L818.116 684.144 L818.675 684.144 L819.234 684.144 L819.793 684.144 L820.353 684.144 L820.912 684.144 L821.471 684.144 L822.03 684.144 L822.59 684.144 L823.149 684.144 L823.708 684.144 L824.267 684.144 L824.827 684.144 L825.386 684.144 L825.945 684.144 L826.504 684.144 L827.064 684.144 L827.623 684.144 L828.182 684.144 L828.741 684.144 L829.301 684.144 L829.86 684.144 L830.419 684.144 L830.978 684.144 L831.538 684.144 L832.097 684.144 L832.656 684.144 L833.215 684.144 L833.775 684.144 L834.334 684.144 L834.893 684.144 L835.452 684.144 L836.012 684.144 L836.571 684.144 L837.13 684.144 L837.689 684.144 L838.249 684.144 L838.808 684.144 L839.367 684.144 L839.926 684.144 L840.486 684.144 L841.045 684.144 L841.604 684.144 L842.163 684.144 L842.723 684.144 L843.282 684.144 L843.841 684.144 L844.4 684.144 L844.96 684.144 L845.519 684.144 L846.078 684.144 L846.637 684.144 L847.197 684.144 L847.756 684.144 L848.315 684.144 L848.874 684.144 L849.434 684.144 L849.993 684.144 L850.552 684.144 L851.111 684.144 L851.671 684.144 L852.23 684.144 L852.789 684.144 L853.348 684.144 L853.908 684.144 L854.467 684.144 L855.026 684.144 L855.585 684.144 L856.145 684.144 L856.704 684.144 L857.263 684.144 L857.822 684.144 L858.382 684.144 L858.941 684.144 L859.5 684.144 L860.059 684.144 L860.619 684.144 L861.178 684.144 L861.737 684.144 L862.296 684.144 L862.856 684.144 L863.415 684.144 L863.974 684.144 L864.533 684.144 L865.093 684.144 L865.652 684.144 L866.211 684.144 L866.77 684.144 L867.33 684.144 L867.889 684.144 L868.448 684.144 L869.007 684.144 L869.567 684.144 L870.126 684.144 L870.685 684.144 L871.244 684.144 L871.804 684.144 L872.363 684.144 L872.922 684.144 L873.481 684.144 L874.041 684.144 L874.6 684.144 L875.159 684.144 L875.718 684.144 L876.278 684.144 L876.837 684.144 L877.396 684.144 L877.955 684.144 L878.515 684.144 L879.074 684.144 L879.633 684.144 L880.192 684.144 L880.752 684.144 L881.311 684.144 L881.87 684.144 L882.429 684.144 L882.989 684.144 L883.548 684.144 L884.107 684.144 L884.666 684.144 L885.226 684.144 L885.785 684.144 L886.344 684.144 L886.903 684.144 L887.463 684.144 L888.022 684.144 L888.581 684.144 L889.14 684.144 L889.7 684.144 L890.259 684.144 L890.818 684.144 L891.377 684.144 L891.937 684.144 L892.496 684.144 L893.055 684.144 L893.614 684.144 L894.174 684.144 L894.733 684.144 L895.292 684.144 L895.851 684.144 L896.411 684.144 L896.97 684.144 L897.529 684.144 L898.088 684.144 L898.648 684.144 L899.207 684.144 L899.766 684.144 L900.325 684.144 L900.885 684.144 L901.444 684.144 L902.003 684.144 L902.562 684.144 L903.122 684.144 L903.681 684.144 L904.24 684.144 L904.799 684.144 L905.359 684.144 L905.918 684.144 L906.477 684.144 L907.036 684.144 L907.596 684.144 L908.155 684.144 L908.714 684.144 L909.273 684.144 L909.833 684.144 L910.392 684.144 L910.951 684.144 L911.51 684.144 L912.07 684.144 L912.629 684.144 L913.188 684.144 L913.747 684.144 L914.307 684.144 L914.866 684.144 L915.425 684.144 L915.984 684.144 L916.544 684.144 L917.103 684.144 L917.662 684.144 L918.221 684.144 L918.781 684.144 L919.34 684.144 L919.899 684.144 L920.458 684.144 L921.018 684.144 L921.577 684.144 L922.136 684.144 L922.695 684.144 L923.255 684.144 L923.814 684.144 L924.373 684.144 L924.932 684.144 L925.492 684.144 L926.051 684.144 L926.61 684.144 L927.169 684.144 L927.729 684.144 L928.288 684.144 L928.847 684.144 L929.406 684.144 L929.966 684.144 L930.525 684.144 L931.084 684.144 L931.644 684.144 L932.203 684.144 L932.762 684.144 L933.321 684.144 L933.881 684.144 L934.44 684.144 L934.999 684.144 L935.558 684.144 L936.118 684.144 L936.677 684.144 L937.236 684.144 L937.795 684.144 L938.355 684.144 L938.914 684.144 L939.473 684.144 L940.032 684.144 L940.592 684.144 L941.151 684.144 L941.71 684.144 L942.269 684.144 L942.829 684.144 L943.388 684.144 L943.947 684.144 L944.506 684.144 L945.066 684.144 L945.625 684.144 L946.184 684.144 L946.743 684.144 L947.303 684.144 L947.862 684.144 L948.421 684.144 L948.98 684.144 L949.54 684.144 L950.099 684.144 L950.658 684.144 L951.217 684.144 L951.777 684.144 L952.336 684.144 L952.895 684.144 L953.454 684.144 L954.014 684.144 L954.573 684.144 L955.132 684.144 L955.691 684.144 L956.251 684.144 L956.81 684.144 L957.369 684.144 L957.928 684.144 L958.488 684.144 L959.047 684.144 L959.606 684.144 L960.165 684.144 L960.725 684.144 L961.284 684.144 L961.843 684.144 L962.402 684.144 L962.962 684.144 L963.521 684.144 L964.08 684.144 L964.639 684.144 L965.199 684.144 L965.758 684.144 L966.317 684.144 L966.876 684.144 L967.436 684.144 L967.995 684.144 L968.554 684.144 L969.113 684.144 L969.673 684.144 L970.232 684.144 L970.791 684.144 L971.35 684.144 L971.91 684.144 L972.469 684.144 L973.028 684.144 L973.587 684.144 L974.147 684.144 L974.706 684.144 L975.265 684.144 L975.824 684.144 L976.384 684.144 L976.943 684.144 L977.502 684.144 L978.061 684.144 L978.621 684.144 L979.18 684.144 L979.739 684.144 L980.298 684.144 L980.858 684.144 L981.417 684.144 L981.976 684.144 L982.535 684.144 L983.095 684.144 L983.654 684.144 L984.213 684.144 L984.772 684.144 L985.332 684.144 L985.891 684.144 L986.45 684.144 L987.009 684.144 L987.569 684.144 L988.128 684.144 L988.687 684.144 L989.246 684.144 L989.806 684.144 L990.365 684.144 L990.924 684.144 L991.483 684.144 L992.043 684.144 L992.602 684.144 L993.161 684.144 L993.72 684.144 L994.28 684.144 L994.839 684.144 L995.398 684.144 L995.957 684.144 L996.517 684.144 L997.076 684.144 L997.635 684.144 L998.194 684.144 L998.754 684.144 L999.313 684.144 L999.872 684.144 L1000.43 684.144 L1000.99 684.144 L1001.55 684.144 L1002.11 684.144 L1002.67 684.144 L1003.23 684.144 L1003.79 684.144 L1004.35 684.144 L1004.91 684.144 L1005.46 684.144 L1006.02 684.144 L1006.58 684.144 L1007.14 684.144 L1007.7 684.144 L1008.26 684.144 L1008.82 684.144 L1009.38 684.144 L1009.94 684.144 L1010.5 684.144 L1011.06 684.144 L1011.62 684.144 L1012.18 684.144 L1012.73 684.144 L1013.29 684.144 L1013.85 684.144 L1014.41 684.144 L1014.97 684.144 L1015.53 684.144 L1016.09 684.144 L1016.65 684.144 L1017.21 684.144 L1017.77 684.144 L1018.33 684.144 L1018.89 684.144 L1019.45 684.144 L1020.01 684.144 L1020.56 684.144 L1021.12 684.144 L1021.68 684.144 L1022.24 684.144 L1022.8 684.144 L1023.36 684.144 L1023.92 684.144 L1024.48 684.144 L1025.04 684.144 L1025.6 684.144 L1026.16 684.144 L1026.72 684.144 L1027.28 684.144 L1027.83 684.144 L1028.39 684.144 L1028.95 684.144 L1029.51 684.144 L1030.07 684.144 L1030.63 684.144 L1031.19 684.144 L1031.75 684.144 L1032.31 684.144 L1032.87 684.144 L1033.43 684.144 L1033.99 684.144 L1034.55 684.144 L1035.1 684.144 L1035.66 684.144 L1036.22 684.144 L1036.78 684.144 L1037.34 684.144 L1037.9 684.144 L1038.46 684.144 L1039.02 684.144 L1039.58 684.144 L1040.14 684.144 L1040.7 684.144 L1041.26 684.144 L1041.82 684.144 L1042.38 684.144 L1042.93 684.144 L1043.49 684.144 L1044.05 684.144 L1044.61 684.144 L1045.17 684.144 L1045.73 684.144 L1046.29 684.144 L1046.85 684.144 L1047.41 684.144 L1047.97 684.144 L1048.53 684.144 L1049.09 684.144 L1049.65 684.144 L1050.2 684.144 L1050.76 684.144 L1051.32 684.144 L1051.88 684.144 L1052.44 684.144 L1053 684.144 L1053.56 684.144 L1054.12 684.144 L1054.68 684.144 L1055.24 684.144 L1055.8 684.144 L1056.36 684.144 L1056.92 684.144 L1057.48 684.144 L1058.03 684.144 L1058.59 684.144 L1059.15 684.144 L1059.71 684.144 L1060.27 684.144 L1060.83 684.144 L1061.39 684.144 L1061.95 684.144 L1062.51 684.144 L1063.07 684.144 L1063.63 684.144 L1064.19 684.144 L1064.75 684.144 L1065.3 684.144 L1065.86 684.144 L1066.42 684.144 L1066.98 684.144 L1067.54 684.144 L1068.1 684.144 L1068.66 684.144 L1069.22 684.144 L1069.78 684.144 L1070.34 684.144 L1070.9 684.144 L1071.46 684.144 L1072.02 684.144 L1072.57 684.144 L1073.13 684.144 L1073.69 684.144 L1074.25 684.144 L1074.81 684.144 L1075.37 684.144 L1075.93 684.144 L1076.49 684.144 L1077.05 684.144 L1077.61 684.144 L1078.17 684.144 L1078.73 684.144 L1079.29 684.144 L1079.85 684.144 L1080.4 684.144 L1080.96 684.144 L1081.52 684.144 L1082.08 684.144 L1082.64 684.144 L1083.2 684.144 L1083.76 684.144 L1084.32 684.144 L1084.88 684.144 L1085.44 684.144 L1086 684.144 L1086.56 684.144 L1087.12 684.144 L1087.67 684.144 L1088.23 684.144 L1088.79 684.144 L1089.35 684.144 L1089.91 684.144 L1090.47 684.144 L1091.03 684.144 L1091.59 684.144 L1092.15 684.144 L1092.71 684.144 L1093.27 684.144 L1093.83 684.144 L1094.39 684.144 L1094.94 684.144 L1095.5 684.144 L1096.06 684.144 L1096.62 684.144 L1097.18 684.144 L1097.74 684.144 L1098.3 684.144 L1098.86 684.144 L1099.42 684.144 L1099.98 684.144 L1100.54 684.144 L1101.1 684.144 L1101.66 684.144 L1102.22 684.144 L1102.77 684.144 L1103.33 684.144 L1103.89 684.144 L1104.45 684.144 L1105.01 684.144 L1105.57 684.144 L1106.13 684.144 L1106.69 684.144 L1107.25 684.144 L1107.81 684.144 L1108.37 684.144 L1108.93 684.144 L1109.49 684.144 L1110.04 684.144 L1110.6 684.144 L1111.16 684.144 L1111.72 684.144 L1112.28 684.144 L1112.84 684.144 L1113.4 684.144 L1113.96 684.144 L1114.52 684.144 L1115.08 684.144 L1115.64 684.144 L1116.2 684.144 L1116.76 684.144 L1117.31 684.144 L1117.87 684.144 L1118.43 684.144 L1118.99 684.144 L1119.55 684.144 L1120.11 684.144 L1120.67 684.144 L1121.23 684.144 L1121.79 684.144 L1122.35 684.144 L1122.91 684.144 L1123.47 684.144 L1124.03 684.144 L1124.59 684.144 L1125.14 684.144 L1125.7 684.144 L1126.26 684.144 L1126.82 684.144 L1127.38 684.144 L1127.94 684.144 L1128.5 684.144 L1129.06 684.144 L1129.62 684.144 L1130.18 684.144 L1130.74 684.144 L1131.3 684.144 L1131.86 684.144 L1132.41 684.144 L1132.97 684.144 L1133.53 684.144 L1134.09 684.144 L1134.65 684.144 L1135.21 684.144 L1135.77 684.144 L1136.33 684.144 L1136.89 684.144 L1137.45 684.144 L1138.01 684.144 L1138.57 684.144 L1139.13 684.144 L1139.68 684.144 L1140.24 684.144 L1140.8 684.144 L1141.36 684.144 L1141.92 684.144 L1142.48 684.144 L1143.04 684.144 L1143.6 684.144 L1144.16 684.144 L1144.72 684.144 L1145.28 684.144 L1145.84 684.144 L1146.4 684.144 L1146.96 684.144 L1147.51 684.144 L1148.07 684.144 L1148.63 684.144 L1149.19 684.144 L1149.75 684.144 L1150.31 684.144 L1150.87 684.144 L1151.43 684.144 L1151.99 684.144 L1152.55 684.144 L1153.11 684.144 L1153.67 684.144 L1154.23 684.144 L1154.78 684.144 L1155.34 684.144 L1155.9 684.144 L1156.46 684.144 L1157.02 684.144 L1157.58 684.144 L1158.14 684.144 L1158.7 684.144 L1159.26 684.144 L1159.82 684.144 L1160.38 684.144 L1160.94 684.144 L1161.5 684.144 L1162.05 684.144 L1162.61 684.144 L1163.17 684.144 L1163.73 684.144 L1164.29 684.144 L1164.85 684.144 L1165.41 684.144 L1165.97 684.144 L1166.53 684.144 L1167.09 684.144 L1167.65 684.144 L1168.21 684.144 L1168.77 684.144 L1169.33 684.144 L1169.88 684.144 L1170.44 684.144 L1171 684.144 L1171.56 684.144 L1172.12 684.144 L1172.68 684.144 L1173.24 684.144 L1173.8 684.144 L1174.36 684.144 L1174.92 684.144 L1175.48 684.144 L1176.04 684.144 L1176.6 684.144 L1177.15 684.144 L1177.71 684.144 L1178.27 684.144 L1178.83 684.144 L1179.39 684.144 L1179.95 684.144 L1180.51 684.144 L1181.07 684.144 L1181.63 684.144 L1182.19 684.144 L1182.75 684.144 L1183.31 684.144 L1183.87 684.144 L1184.43 684.144 L1184.98 684.144 L1185.54 684.144 L1186.1 684.144 L1186.66 684.144 L1187.22 684.144 L1187.78 684.144 L1188.34 684.144 L1188.9 684.144 L1189.46 684.144 L1190.02 684.144 L1190.58 684.144 L1191.14 684.144 L1191.7 684.144 L1192.25 684.144 L1192.81 684.144 L1193.37 684.144 L1193.93 684.144 L1194.49 684.144 L1195.05 684.144 L1195.61 684.144 L1196.17 684.144 L1196.73 684.144 L1197.29 684.144 L1197.85 684.144 L1198.41 684.144 L1198.97 684.144 L1199.52 684.144 L1200.08 684.144 L1200.64 684.144 L1201.2 684.144 L1201.76 684.144 L1202.32 684.144 L1202.88 684.144 L1203.44 684.144 L1204 684.144 L1204.56 684.144 L1205.12 684.144 L1205.68 684.144 L1206.24 684.144 L1206.8 684.144 L1207.35 684.144 L1207.91 684.144 L1208.47 684.144 L1209.03 684.144 L1209.59 684.144 L1210.15 684.144 L1210.71 684.144 L1211.27 684.144 L1211.83 684.144 L1212.39 684.144 L1212.95 684.144 L1213.51 684.144 L1214.07 684.144 L1214.62 684.144 L1215.18 684.144 L1215.74 684.144 L1216.3 684.144 L1216.86 684.144 L1217.42 684.144 L1217.98 684.144 L1218.54 684.144 L1219.1 684.144 L1219.66 684.144 L1220.22 684.144 L1220.78 684.144 L1221.34 684.144 L1221.89 684.144 L1222.45 684.144 L1223.01 684.144 L1223.57 684.144 L1224.13 684.144 L1224.69 684.144 L1225.25 684.144 L1225.81 684.144 L1226.37 684.144 L1226.93 684.144 L1227.49 684.144 L1228.05 684.144 L1228.61 684.144 L1229.17 684.144 L1229.72 684.144 L1230.28 684.144 L1230.84 684.144 L1231.4 684.144 L1231.96 684.144 L1232.52 684.144 L1233.08 684.144 L1233.64 684.144 L1234.2 684.144 L1234.76 684.144 L1235.32 684.144 L1235.88 684.144 L1236.44 684.144 L1236.99 684.144 L1237.55 684.144 L1238.11 684.144 L1238.67 684.144 L1239.23 684.144 L1239.79 684.144 L1240.35 684.144 L1240.91 684.144 L1241.47 684.144 L1242.03 684.144 L1242.59 684.144 L1243.15 684.144 L1243.71 684.144 L1244.26 684.144 L1244.82 684.144 L1245.38 684.144 L1245.94 684.144 L1246.5 684.144 L1247.06 684.144 L1247.62 684.144 L1248.18 684.144 L1248.74 684.144 L1249.3 684.144 L1249.86 684.144 L1250.42 684.144 L1250.98 684.144 L1251.54 684.144 L1252.09 684.144 L1252.65 684.144 L1253.21 684.144 L1253.77 684.144 L1254.33 684.144 L1254.89 684.144 L1255.45 684.144 L1256.01 684.144 L1256.57 684.144 L1257.13 684.144 L1257.69 684.144 L1258.25 684.144 L1258.81 684.144 L1259.36 684.144 L1259.92 684.144 L1260.48 684.144 L1261.04 684.144 L1261.6 684.144 L1262.16 684.144 L1262.72 684.144 L1263.28 684.144 L1263.84 684.144 L1264.4 684.144 L1264.96 684.144 L1265.52 684.144 L1266.08 684.144 L1266.63 684.144 L1267.19 684.144 L1267.75 684.144 L1268.31 684.144 L1268.87 684.144 L1269.43 684.144 L1269.99 684.144 L1270.55 684.144 L1271.11 684.144 L1271.67 684.144 L1272.23 684.144 L1272.79 684.144 L1273.35 684.144 L1273.91 684.144 L1274.46 684.144 L1275.02 684.144 L1275.58 684.144 L1276.14 684.144 L1276.7 684.144 L1277.26 684.144 L1277.82 684.144 L1278.38 684.144 L1278.94 684.144 L1279.5 684.144 L1280.06 684.144 L1280.62 684.144 L1281.18 684.144 L1281.73 684.144 L1282.29 684.144 L1282.85 684.144 L1283.41 684.144 L1283.97 684.144 L1284.53 684.144 L1285.09 684.144 L1285.65 684.144 L1286.21 684.144 L1286.77 684.144 L1287.33 684.144 L1287.89 684.144 L1288.45 684.144 L1289 684.144 L1289.56 684.144 L1290.12 684.144 L1290.68 684.144 L1291.24 684.144 L1291.8 684.144 L1292.36 684.144 L1292.92 684.144 L1293.48 684.144 L1294.04 684.144 L1294.6 684.144 L1295.16 684.144 L1295.72 684.144 L1296.28 684.144 L1296.83 684.144 L1297.39 684.144 L1297.95 684.144 L1298.51 684.144 L1299.07 684.144 L1299.63 684.144 L1300.19 684.144 L1300.75 684.144 L1301.31 684.144 L1301.87 684.144 L1302.43 684.144 L1302.99 684.144 L1303.55 684.144 L1304.1 684.144 L1304.66 684.144 L1305.22 684.144 L1305.78 684.144 L1306.34 684.144 L1306.9 684.144 L1307.46 684.144 L1308.02 684.144 L1308.58 684.144 L1309.14 684.144 L1309.7 684.144 L1310.26 684.144 L1310.82 684.144 L1311.38 684.144 L1311.93 684.144 L1312.49 684.144 L1313.05 684.144 L1313.61 684.144 L1314.17 684.144 L1314.73 684.144 L1315.29 684.144 L1315.85 684.144 L1316.41 684.144 L1316.97 684.144 L1317.53 684.144 L1318.09 684.144 L1318.65 684.144 L1319.2 684.144 L1319.76 684.144 L1320.32 684.144 L1320.88 684.144 L1321.44 684.144 L1322 684.144 L1322.56 684.144 L1323.12 684.144 L1323.68 684.144 L1324.24 684.144 L1324.8 684.144 L1325.36 684.144 L1325.92 684.144 L1326.47 684.144 L1327.03 684.144 L1327.59 684.144 L1328.15 684.144 L1328.71 684.144 L1329.27 684.144 L1329.83 684.144 L1330.39 684.144 L1330.95 684.144 L1331.51 684.144 L1332.07 684.144 L1332.63 684.144 L1333.19 684.144 L1333.75 684.144 L1334.3 684.144 L1334.86 684.144 L1335.42 684.144 L1335.98 684.144 L1336.54 684.144 L1337.1 684.144 L1337.66 684.144 L1338.22 684.144 L1338.78 684.144 L1339.34 684.144 L1339.9 684.144 L1340.46 684.144 L1341.02 684.144 L1341.57 684.144 L1342.13 684.144 L1342.69 684.144 L1343.25 684.144 L1343.81 684.144 L1344.37 684.144 L1344.93 684.144 L1345.49 684.144 L1346.05 684.144 L1346.61 684.144 L1347.17 684.144 L1347.73 684.144 L1348.29 684.144 L1348.84 684.144 L1349.4 684.144 L1349.96 684.144 L1350.52 684.144 L1351.08 684.144 L1351.64 684.144 L1352.2 684.144 L1352.76 684.144 L1353.32 684.144 L1353.88 684.144 L1354.44 684.144 L1355 684.144 L1355.56 684.144 L1356.12 684.144 L1356.67 684.144 L1357.23 684.144 L1357.79 684.144 L1358.35 684.144 L1358.91 684.144 L1359.47 684.144 L1360.03 684.144 L1360.59 684.144 L1361.15 684.144 L1361.71 684.144 L1362.27 684.144 L1362.83 684.144 L1363.39 684.144 L1363.94 684.144 L1364.5 684.144 L1365.06 684.144 L1365.62 684.144 L1366.18 684.144 L1366.74 684.144 L1367.3 684.144 L1367.86 684.144 L1368.42 684.144 L1368.98 684.144 L1369.54 684.144 L1370.1 684.144 L1370.66 684.144 L1371.21 684.144 L1371.77 684.144 L1372.33 684.144 L1372.89 684.144 L1373.45 684.144 L1374.01 684.144 L1374.57 684.144 L1375.13 684.144 L1375.69 684.144 L1376.25 684.144 L1376.81 684.144 L1377.37 684.144 L1377.93 684.144 L1378.49 684.144 L1379.04 684.144 L1379.6 684.144 L1380.16 684.144 L1380.72 684.144 L1381.28 684.144 L1381.84 684.144 L1382.4 684.144 L1382.96 684.144 L1383.52 684.144 L1384.08 684.144 L1384.64 684.144 L1385.2 684.144 L1385.76 684.144 L1386.31 684.144 L1386.87 684.144 L1387.43 684.144 L1387.99 684.144 L1388.55 684.144 L1389.11 684.144 L1389.67 684.144 L1390.23 684.144 L1390.79 684.144 L1391.35 684.144 L1391.91 684.144 L1392.47 684.144 L1393.03 684.144 L1393.58 684.144 L1394.14 684.144 L1394.7 684.144 L1395.26 684.144 L1395.82 684.144 L1396.38 684.144 L1396.94 684.144 L1397.5 684.144 L1398.06 684.144 L1398.62 684.144 L1399.18 684.144 L1399.74 684.144 L1400.3 684.144 L1400.86 684.144 L1401.41 684.144 L1401.97 684.144 L1402.53 684.144 L1403.09 684.144 L1403.65 684.144 L1404.21 684.144 L1404.77 684.144 L1405.33 684.144 L1405.89 684.144 L1406.45 684.144 L1407.01 684.144 L1407.57 684.144 L1408.13 684.144 L1408.68 684.144 L1409.24 684.144 L1409.8 684.144 L1410.36 684.144 L1410.92 684.144 L1411.48 684.144 L1412.04 684.144 L1412.6 684.144 L1413.16 684.144 L1413.72 684.144 L1414.28 684.144 L1414.84 684.144 L1415.4 684.144 L1415.95 684.144 L1416.51 684.144 L1417.07 684.144 L1417.63 684.144 L1418.19 684.144 L1418.75 684.144 L1419.31 684.144 L1419.87 684.144 L1420.43 684.144 L1420.99 684.144 L1421.55 684.144 L1422.11 684.144 L1422.67 684.144 L1423.23 684.144 L1423.78 684.144 L1424.34 684.144 L1424.9 684.144 L1425.46 684.144 L1426.02 684.144 L1426.58 684.144 L1427.14 684.144 L1427.7 684.144 L1428.26 684.144 L1428.82 684.144 L1429.38 684.144 L1429.94 684.144 L1430.5 684.144 L1431.05 684.144 L1431.61 684.144 L1432.17 684.144 L1432.73 684.144 L1433.29 684.144 L1433.85 684.144 L1434.41 684.144 L1434.97 684.144 L1435.53 684.144 L1436.09 684.144 L1436.65 684.144 L1437.21 684.144 L1437.77 684.144 L1438.33 684.144 L1438.88 684.144 L1439.44 684.144 L1440 684.144 L1440.56 684.144 L1441.12 684.144 L1441.68 684.144 L1442.24 684.144 L1442.8 684.144 L1443.36 684.144 L1443.92 684.144 L1444.48 684.144 L1445.04 684.144 L1445.6 684.144 L1446.15 684.144 L1446.71 684.144 L1447.27 684.144 L1447.83 684.144 L1448.39 684.144 L1448.95 684.144 L1449.51 684.144 L1450.07 684.144 L1450.63 684.144 L1451.19 684.144 L1451.75 684.144 L1452.31 684.144 L1452.87 684.144 L1453.42 684.144 L1453.98 684.144 L1454.54 684.144 L1455.1 684.144 L1455.66 684.144 L1456.22 684.144 L1456.78 684.144 L1457.34 684.144 L1457.9 684.144 L1458.46 684.144 L1459.02 684.144 L1459.58 684.144 L1460.14 684.144 L1460.7 684.144 L1461.25 684.144 L1461.81 684.144 L1462.37 684.144 L1462.93 684.144 L1463.49 684.144 L1464.05 684.144 L1464.61 684.144 L1465.17 684.144 L1465.73 684.144 L1466.29 684.144 L1466.85 684.144 L1467.41 684.144 L1467.97 684.144 L1468.52 684.144 L1469.08 684.144 L1469.64 684.144 L1470.2 684.144 L1470.76 684.144 L1471.32 684.144 L1471.88 684.144 L1472.44 684.144 L1473 684.144 L1473.56 684.144 L1474.12 684.144 L1474.68 684.144 L1475.24 684.144 L1475.79 684.144 L1476.35 684.144 L1476.91 684.144 L1477.47 684.144 L1478.03 684.144 L1478.59 684.144 L1479.15 684.144 L1479.71 684.144 L1480.27 684.144 L1480.83 684.144 L1481.39 684.144 L1481.95 684.144 L1482.51 684.144 L1483.07 684.144 L1483.62 684.144 L1484.18 684.144 L1484.74 684.144 L1485.3 684.144 L1485.86 684.144 L1486.42 684.144 L1486.98 684.144 L1487.54 684.144 L1488.1 684.144 L1488.66 684.144 L1489.22 684.144 L1489.78 684.144 L1490.34 684.144 L1490.89 684.144 L1491.45 684.144 L1492.01 684.144 L1492.57 684.144 L1493.13 684.144 L1493.69 684.144 L1494.25 684.144 L1494.81 684.144 L1495.37 684.144 L1495.93 684.144 L1496.49 684.144 L1497.05 684.144 L1497.61 684.144 L1498.16 684.144 L1498.72 684.144 L1499.28 684.144 L1499.84 684.144 L1500.4 684.144 L1500.96 684.144 L1501.52 684.144 L1502.08 684.144 L1502.64 684.144 L1503.2 684.144 L1503.76 684.144 L1504.32 684.144 L1504.88 684.144 L1505.44 684.144 L1505.99 684.144 L1506.55 684.144 L1507.11 684.144 L1507.67 684.144 L1508.23 684.144 L1508.79 684.144 L1509.35 684.144 L1509.91 684.144 L1510.47 684.144 L1511.03 684.144 L1511.59 684.144 L1512.15 684.144 L1512.71 684.144 L1513.26 684.144 L1513.82 684.144 L1514.38 684.144 L1514.94 684.144 L1515.5 684.144 L1516.06 684.144 L1516.62 684.144 L1517.18 684.144 L1517.74 684.144 L1518.3 684.144 L1518.86 684.144 L1519.42 684.144 L1519.98 684.144 L1520.53 684.144 L1521.09 684.144 L1521.65 684.144 L1522.21 684.144 L1522.77 684.144 L1523.33 684.144 L1523.89 684.144 L1524.45 684.144 L1525.01 684.144 L1525.57 684.144 L1526.13 684.144 L1526.69 684.144 L1527.25 684.144 L1527.81 684.144 L1528.36 684.144 L1528.92 684.144 L1529.48 684.144 L1530.04 684.144 L1530.6 684.144 L1531.16 684.144 L1531.72 684.144 L1532.28 684.144 L1532.84 684.144 L1533.4 684.144 L1533.96 684.144 L1534.52 684.144 L1535.08 684.144 L1535.63 684.144 L1536.19 684.144 L1536.75 684.144 L1537.31 684.144 L1537.87 684.144 L1538.43 684.144 L1538.99 684.144 L1539.55 684.144 L1540.11 684.144 L1540.67 684.144 L1541.23 684.144 L1541.79 684.144 L1542.35 684.144 L1542.9 684.144 L1543.46 684.144 L1544.02 684.144 L1544.58 684.144 L1545.14 684.144 L1545.7 684.144 L1546.26 684.144 L1546.82 684.144 L1547.38 684.144 L1547.94 684.144 L1548.5 684.144 L1549.06 684.144 L1549.62 684.144 L1550.18 684.144 L1550.73 684.144 L1551.29 684.144 L1551.85 684.144 L1552.41 684.144 L1552.97 684.144 L1553.53 684.144 L1554.09 684.144 L1554.65 684.144 L1555.21 684.144 L1555.77 684.144 L1556.33 684.144 L1556.89 684.144 L1557.45 684.144 L1558 684.144 L1558.56 684.144 L1559.12 684.144 L1559.68 684.144 L1560.24 684.144 L1560.8 684.144 L1561.36 684.144 L1561.92 684.144 L1562.48 684.144 L1563.04 684.144 L1563.6 684.144 L1564.16 684.144 L1564.72 684.144 L1565.28 684.144 L1565.83 684.144 L1566.39 684.144 L1566.95 684.144 L1567.51 684.144 L1568.07 684.144 L1568.63 684.144 L1569.19 684.144 L1569.75 684.144 L1570.31 684.144 L1570.87 684.144 L1571.43 684.144 L1571.99 684.144 L1572.55 684.144 L1573.1 684.144 L1573.66 684.144 L1574.22 684.144 L1574.78 684.144 L1575.34 684.144 L1575.9 684.144 L1576.46 684.144 L1577.02 684.144 L1577.58 684.144 L1578.14 684.144 L1578.7 684.144 L1579.26 684.144 L1579.82 684.144 L1580.37 684.144 L1580.93 684.144 L1581.49 684.144 L1582.05 684.144 L1582.61 684.144 L1583.17 684.144 L1583.73 684.144 L1584.29 684.144 L1584.85 684.144 L1585.41 684.144 L1585.97 684.144 L1586.53 684.144 L1587.09 684.144 L1587.65 684.144 L1588.2 684.144 L1588.76 684.144 L1589.32 684.144 L1589.88 684.144 L1590.44 684.144 L1591 684.144 L1591.56 684.144 L1592.12 684.144 L1592.68 684.144 L1593.24 684.144 L1593.8 684.144 L1594.36 684.144 L1594.92 684.144 L1595.47 684.144 L1596.03 684.144 L1596.59 684.144 L1597.15 684.144 L1597.71 684.144 L1598.27 684.144 L1598.83 684.144 L1599.39 684.144 L1599.95 684.144 L1600.51 684.144 L1601.07 684.144 L1601.63 684.144 L1602.19 684.144 L1602.74 684.144 L1603.3 684.144 L1603.86 684.144 L1604.42 684.144 L1604.98 684.144 L1605.54 684.144 L1606.1 684.144 L1606.66 684.144 L1607.22 684.144 L1607.78 684.144 L1608.34 684.144 L1608.9 684.144 L1609.46 684.144 L1610.02 684.144 L1610.57 684.144 L1611.13 684.144 L1611.69 684.144 L1612.25 684.144 L1612.81 684.144 L1613.37 684.144 L1613.93 684.144 L1614.49 684.144 L1615.05 684.144 L1615.61 684.144 L1616.17 684.144 L1616.73 684.144 L1617.29 684.144 L1617.84 684.144 L1618.4 684.144 L1618.96 684.144 L1619.52 684.144 L1620.08 684.144 L1620.64 684.144 L1621.2 684.144 L1621.76 684.144 L1622.32 684.144 L1622.88 684.144 L1623.44 684.144 L1624 684.144 L1624.56 684.144 L1625.11 684.144 L1625.67 684.144 L1626.23 684.144 L1626.79 684.144 L1627.35 684.144 L1627.91 684.144 L1628.47 684.144 L1629.03 684.144 L1629.59 684.144 L1630.15 684.144 L1630.71 684.144 L1631.27 684.144 L1631.83 684.144 L1632.39 684.144 L1632.94 684.144 L1633.5 684.144 L1634.06 684.144 L1634.62 684.144 L1635.18 684.144 L1635.74 684.144 L1636.3 684.144 L1636.86 684.144 L1637.42 684.144 L1637.98 684.144 L1638.54 684.144 L1639.1 684.144 L1639.66 684.144 L1640.21 684.144 L1640.77 684.144 L1641.33 684.144 L1641.89 684.144 L1642.45 684.144 L1643.01 684.144 L1643.57 684.144 L1644.13 684.144 L1644.69 684.144 L1645.25 684.144 L1645.81 684.144 L1646.37 684.144 L1646.93 684.144 L1647.48 684.144 L1648.04 684.144 L1648.6 684.144 L1649.16 684.144 L1649.72 684.144 L1650.28 684.144 L1650.84 684.144 L1651.4 684.144 L1651.96 684.144 L1652.52 684.144 L1653.08 684.144 L1653.64 684.144 L1654.2 684.144 L1654.76 684.144 L1655.31 684.144 L1655.87 684.144 L1656.43 684.144 L1656.99 684.144 L1657.55 684.144 L1658.11 684.144 L1658.67 684.144 L1659.23 684.144 L1659.79 684.144 L1660.35 684.144 L1660.91 684.144 L1661.47 684.144 L1662.03 684.144 L1662.58 684.144 L1663.14 684.144 L1663.7 684.144 L1664.26 684.144 L1664.82 684.144 L1665.38 684.144 L1665.94 684.144 L1666.5 684.144 L1667.06 684.144 L1667.62 684.144 L1668.18 684.144 L1668.74 684.144 L1669.3 684.144 L1669.85 684.144 L1670.41 684.144 L1670.97 684.144 L1671.53 684.144 L1672.09 684.144 L1672.65 684.144 L1673.21 684.144 L1673.77 684.144 L1674.33 684.144 L1674.89 684.144 L1675.45 684.144 L1676.01 684.144 L1676.57 684.144 L1677.13 684.144 L1677.68 684.144 L1678.24 684.144 L1678.8 684.144 L1679.36 684.144 L1679.92 684.144 L1680.48 684.144 L1681.04 684.144 L1681.6 684.144 L1682.16 684.144 L1682.72 684.144 L1683.28 684.144 L1683.84 684.144 L1684.4 684.144 L1684.95 684.144 L1685.51 684.144 L1686.07 684.144 L1686.63 684.144 L1687.19 684.144 L1687.75 684.144 L1688.31 684.144 L1688.87 684.144 L1689.43 684.144 L1689.99 684.144 L1690.55 684.144 L1691.11 684.144 L1691.67 684.144 L1692.23 684.144 L1692.78 684.144 L1693.34 684.144 L1693.9 684.144 L1694.46 684.144 L1695.02 684.144 L1695.58 684.144 L1696.14 684.144 L1696.7 684.144 L1697.26 684.144 L1697.82 684.144 L1698.38 684.144 L1698.94 684.144 L1699.5 684.144 L1700.05 684.144 L1700.61 684.144 L1701.17 684.144 L1701.73 684.144 L1702.29 684.144 L1702.85 684.144 L1703.41 684.144 L1703.97 684.144 L1704.53 684.144 L1705.09 684.144 L1705.65 684.144 L1706.21 684.144 L1706.77 684.144 L1707.32 684.144 L1707.88 684.144 L1708.44 684.144 L1709 684.144 L1709.56 684.144 L1710.12 684.144 L1710.68 684.144 L1711.24 684.144 L1711.8 684.144 L1712.36 684.144 L1712.92 684.144 L1713.48 684.144 L1714.04 684.144 L1714.6 684.144 L1715.15 684.144 L1715.71 684.144 L1716.27 684.144 L1716.83 684.144 L1717.39 684.144 L1717.95 684.144 L1718.51 684.144 L1719.07 684.144 L1719.63 684.144 L1720.19 684.144 L1720.75 684.144 L1721.31 684.144 L1721.87 684.144 L1722.42 684.144 L1722.98 684.144 L1723.54 684.144 L1724.1 684.144 L1724.66 684.144 L1725.22 684.144 L1725.78 684.144 L1726.34 684.144 L1726.9 684.144 L1727.46 684.144 L1728.02 684.144 L1728.58 684.144 L1729.14 684.144 L1729.69 684.144 L1730.25 684.144 L1730.81 684.144 L1731.37 684.144 L1731.93 684.144 L1732.49 684.144 L1733.05 684.144 L1733.61 684.144 L1734.17 684.144 L1734.73 684.144 L1735.29 684.144 L1735.85 684.144 L1736.41 684.144 L1736.97 684.144 L1737.52 684.144 L1738.08 684.144 L1738.64 684.144 L1739.2 684.144 L1739.76 684.144 L1740.32 684.144 L1740.88 684.144 L1741.44 684.144 L1742 684.144 L1742.56 684.144 L1743.12 684.144 L1743.68 684.144 L1744.24 684.144 L1744.79 684.144 L1745.35 684.144 L1745.91 684.144 L1746.47 684.144 L1747.03 684.144 L1747.59 684.144 L1748.15 684.144 L1748.71 684.144 L1749.27 684.144 L1749.83 684.144 L1750.39 684.144 L1750.95 684.144 L1751.51 684.144 L1752.06 684.144 L1752.62 684.144 L1753.18 684.144 L1753.74 684.144 L1754.3 684.144 L1754.86 684.144 L1755.42 684.144 L1755.98 684.144 L1756.54 684.144 L1757.1 684.144 L1757.66 684.144 L1758.22 684.144 L1758.78 684.144 L1759.34 684.144 L1759.89 684.144 L1760.45 684.144 L1761.01 684.144 L1761.57 684.144 L1762.13 684.144 L1762.69 684.144 L1763.25 684.144 L1763.81 684.144 L1764.37 684.144 L1764.93 684.144 L1765.49 684.144 L1766.05 684.144 L1766.61 684.144 L1767.16 684.144 L1767.72 684.144 L1768.28 684.144 L1768.84 684.144 L1769.4 684.144 L1769.96 684.144 L1770.52 684.144 L1771.08 684.144 L1771.64 684.144 L1772.2 684.144 L1772.76 684.144 L1773.32 684.144 L1773.88 684.144 L1774.43 684.144 L1774.99 684.144 L1775.55 684.144 L1776.11 684.144 L1776.67 684.144 L1777.23 684.144 L1777.79 684.144 L1778.35 684.144 L1778.91 684.144 L1779.47 684.144 L1780.03 684.144 L1780.59 684.144 L1781.15 684.144 L1781.71 684.144 L1782.26 684.144 L1782.82 684.144 L1783.38 684.144 L1783.94 684.144 L1784.5 684.144 L1785.06 684.144 L1785.62 684.144 L1786.18 684.144 L1786.74 684.144 L1787.3 684.144 L1787.86 684.144 L1788.42 684.144 L1788.98 684.144 L1789.53 684.144 L1790.09 684.144 L1790.65 684.144 L1791.21 684.144 L1791.77 684.144 L1792.33 684.144 L1792.89 684.144 L1793.45 684.144 L1794.01 684.144 L1794.57 684.144 L1795.13 684.144 L1795.69 684.144 L1796.25 684.144 L1796.8 684.144 L1797.36 684.144 L1797.92 684.144 L1798.48 684.144 L1799.04 684.144 L1799.6 684.144 L1800.16 684.144 L1800.72 684.144 L1801.28 684.144 L1801.84 684.144 L1802.4 684.144 L1802.96 684.144 L1803.52 684.144 L1804.08 684.144 L1804.63 684.144 L1805.19 684.144 L1805.75 684.144 L1806.31 684.144 L1806.87 684.144 L1807.43 684.144 L1807.99 684.144 L1808.55 684.144 L1809.11 684.144 L1809.67 684.144 L1810.23 684.144 L1810.79 684.144 L1811.35 684.144 L1811.9 684.144 L1812.46 684.144 L1813.02 684.144 L1813.58 684.144 L1814.14 684.144 L1814.7 684.144 L1815.26 684.144 L1815.82 684.144 L1816.38 684.144 L1816.94 684.144 L1817.5 684.144 L1818.06 684.144 L1818.62 684.144 L1819.18 684.144 L1819.73 684.144 L1820.29 684.144 L1820.85 684.144 L1821.41 684.144 L1821.97 684.144 L1822.53 684.144 L1823.09 684.144 L1823.65 684.144 L1824.21 684.144 L1824.77 684.144 L1825.33 684.144 L1825.89 684.144 L1826.45 684.144 L1827 684.144 L1827.56 684.144 L1828.12 684.144 L1828.68 684.144 L1829.24 684.144 L1829.8 684.144 L1830.36 684.144 L1830.92 684.144 L1831.48 684.144 L1832.04 684.144 L1832.6 684.144 L1833.16 684.144 L1833.72 684.144 L1834.27 684.144 L1834.83 684.144 L1835.39 684.144 L1835.95 684.144 L1836.51 684.144 L1837.07 684.144 L1837.63 684.144 L1838.19 684.144 L1838.19 681.903 L1837.63 681.903 L1837.07 681.903 L1836.51 681.903 L1835.95 681.903 L1835.39 681.903 L1834.83 681.903 L1834.27 681.903 L1833.72 681.903 L1833.16 681.903 L1832.6 681.903 L1832.04 681.903 L1831.48 681.903 L1830.92 681.903 L1830.36 681.903 L1829.8 681.903 L1829.24 681.903 L1828.68 681.903 L1828.12 681.903 L1827.56 681.903 L1827 681.903 L1826.45 681.903 L1825.89 681.903 L1825.33 681.903 L1824.77 681.903 L1824.21 681.903 L1823.65 681.903 L1823.09 681.903 L1822.53 681.903 L1821.97 681.903 L1821.41 681.903 L1820.85 681.903 L1820.29 681.903 L1819.73 681.903 L1819.18 681.903 L1818.62 681.903 L1818.06 681.903 L1817.5 681.903 L1816.94 681.903 L1816.38 681.903 L1815.82 681.903 L1815.26 681.903 L1814.7 681.903 L1814.14 681.903 L1813.58 681.903 L1813.02 681.903 L1812.46 681.903 L1811.9 681.903 L1811.35 681.903 L1810.79 681.903 L1810.23 681.903 L1809.67 681.903 L1809.11 681.903 L1808.55 681.903 L1807.99 681.903 L1807.43 681.903 L1806.87 681.903 L1806.31 681.903 L1805.75 681.903 L1805.19 681.903 L1804.63 681.903 L1804.08 681.903 L1803.52 681.903 L1802.96 681.903 L1802.4 681.903 L1801.84 681.903 L1801.28 681.903 L1800.72 681.903 L1800.16 681.903 L1799.6 681.903 L1799.04 681.903 L1798.48 681.903 L1797.92 681.903 L1797.36 681.903 L1796.8 681.903 L1796.25 681.903 L1795.69 681.903 L1795.13 681.903 L1794.57 681.903 L1794.01 681.903 L1793.45 681.903 L1792.89 681.903 L1792.33 681.903 L1791.77 681.903 L1791.21 681.903 L1790.65 681.903 L1790.09 681.903 L1789.53 681.903 L1788.98 681.903 L1788.42 681.903 L1787.86 681.903 L1787.3 681.903 L1786.74 681.903 L1786.18 681.903 L1785.62 681.903 L1785.06 681.903 L1784.5 681.903 L1783.94 681.903 L1783.38 681.903 L1782.82 681.903 L1782.26 681.903 L1781.71 681.903 L1781.15 681.903 L1780.59 681.903 L1780.03 681.903 L1779.47 681.903 L1778.91 681.903 L1778.35 681.903 L1777.79 681.903 L1777.23 681.903 L1776.67 681.903 L1776.11 681.903 L1775.55 681.903 L1774.99 681.903 L1774.43 681.903 L1773.88 681.903 L1773.32 681.903 L1772.76 681.903 L1772.2 681.903 L1771.64 681.903 L1771.08 681.903 L1770.52 681.903 L1769.96 681.903 L1769.4 681.903 L1768.84 681.903 L1768.28 681.903 L1767.72 681.903 L1767.16 681.903 L1766.61 681.903 L1766.05 681.903 L1765.49 681.903 L1764.93 681.903 L1764.37 681.903 L1763.81 681.903 L1763.25 681.903 L1762.69 681.903 L1762.13 681.903 L1761.57 681.903 L1761.01 681.903 L1760.45 681.903 L1759.89 681.903 L1759.34 681.903 L1758.78 681.903 L1758.22 681.903 L1757.66 681.903 L1757.1 681.903 L1756.54 681.903 L1755.98 681.903 L1755.42 681.903 L1754.86 681.903 L1754.3 681.903 L1753.74 681.903 L1753.18 681.903 L1752.62 681.903 L1752.06 681.903 L1751.51 681.903 L1750.95 681.903 L1750.39 681.903 L1749.83 681.903 L1749.27 681.903 L1748.71 681.903 L1748.15 681.903 L1747.59 681.903 L1747.03 681.903 L1746.47 681.903 L1745.91 681.903 L1745.35 681.903 L1744.79 681.903 L1744.24 681.903 L1743.68 681.903 L1743.12 681.903 L1742.56 681.903 L1742 681.903 L1741.44 681.903 L1740.88 681.903 L1740.32 681.903 L1739.76 681.903 L1739.2 681.903 L1738.64 681.903 L1738.08 681.903 L1737.52 681.903 L1736.97 681.903 L1736.41 681.903 L1735.85 681.903 L1735.29 681.903 L1734.73 681.903 L1734.17 681.903 L1733.61 681.903 L1733.05 681.903 L1732.49 681.903 L1731.93 681.903 L1731.37 681.903 L1730.81 681.903 L1730.25 681.903 L1729.69 681.903 L1729.14 681.903 L1728.58 681.903 L1728.02 681.903 L1727.46 681.903 L1726.9 681.903 L1726.34 681.903 L1725.78 681.903 L1725.22 681.903 L1724.66 681.903 L1724.1 681.903 L1723.54 681.903 L1722.98 681.903 L1722.42 681.903 L1721.87 681.903 L1721.31 681.903 L1720.75 681.903 L1720.19 681.903 L1719.63 681.903 L1719.07 681.903 L1718.51 681.903 L1717.95 681.903 L1717.39 681.903 L1716.83 681.903 L1716.27 681.903 L1715.71 681.903 L1715.15 681.903 L1714.6 681.903 L1714.04 681.903 L1713.48 681.903 L1712.92 681.903 L1712.36 681.903 L1711.8 681.903 L1711.24 681.903 L1710.68 681.903 L1710.12 681.903 L1709.56 681.903 L1709 681.903 L1708.44 681.903 L1707.88 681.903 L1707.32 681.903 L1706.77 681.903 L1706.21 681.903 L1705.65 681.903 L1705.09 681.903 L1704.53 681.903 L1703.97 681.903 L1703.41 681.903 L1702.85 681.903 L1702.29 681.903 L1701.73 681.903 L1701.17 681.903 L1700.61 681.903 L1700.05 681.903 L1699.5 681.903 L1698.94 681.903 L1698.38 681.903 L1697.82 681.903 L1697.26 681.903 L1696.7 681.903 L1696.14 681.903 L1695.58 681.903 L1695.02 681.903 L1694.46 681.903 L1693.9 681.903 L1693.34 681.903 L1692.78 681.903 L1692.23 681.903 L1691.67 681.903 L1691.11 681.903 L1690.55 681.903 L1689.99 681.903 L1689.43 681.903 L1688.87 681.903 L1688.31 681.903 L1687.75 681.903 L1687.19 681.903 L1686.63 681.903 L1686.07 681.903 L1685.51 681.903 L1684.95 681.903 L1684.4 681.903 L1683.84 681.903 L1683.28 681.903 L1682.72 681.903 L1682.16 681.903 L1681.6 681.903 L1681.04 681.903 L1680.48 681.903 L1679.92 681.903 L1679.36 681.903 L1678.8 681.903 L1678.24 681.903 L1677.68 681.903 L1677.13 681.903 L1676.57 681.903 L1676.01 681.903 L1675.45 681.903 L1674.89 681.903 L1674.33 681.903 L1673.77 681.903 L1673.21 681.903 L1672.65 681.903 L1672.09 681.903 L1671.53 681.903 L1670.97 681.903 L1670.41 681.903 L1669.85 681.903 L1669.3 681.903 L1668.74 681.903 L1668.18 681.903 L1667.62 681.903 L1667.06 681.903 L1666.5 681.903 L1665.94 681.903 L1665.38 681.903 L1664.82 681.903 L1664.26 681.903 L1663.7 681.903 L1663.14 681.903 L1662.58 681.903 L1662.03 681.903 L1661.47 681.903 L1660.91 681.903 L1660.35 681.903 L1659.79 681.903 L1659.23 681.903 L1658.67 681.903 L1658.11 681.903 L1657.55 681.903 L1656.99 681.903 L1656.43 681.903 L1655.87 681.903 L1655.31 681.903 L1654.76 681.903 L1654.2 681.903 L1653.64 681.903 L1653.08 681.903 L1652.52 681.903 L1651.96 681.903 L1651.4 681.903 L1650.84 681.903 L1650.28 681.903 L1649.72 681.903 L1649.16 681.903 L1648.6 681.903 L1648.04 681.903 L1647.48 681.903 L1646.93 681.903 L1646.37 681.903 L1645.81 681.903 L1645.25 681.903 L1644.69 681.903 L1644.13 681.903 L1643.57 681.903 L1643.01 681.903 L1642.45 681.903 L1641.89 681.903 L1641.33 681.903 L1640.77 681.903 L1640.21 681.903 L1639.66 681.903 L1639.1 681.903 L1638.54 681.903 L1637.98 681.903 L1637.42 681.903 L1636.86 681.903 L1636.3 681.903 L1635.74 681.903 L1635.18 681.903 L1634.62 681.903 L1634.06 681.903 L1633.5 681.903 L1632.94 681.903 L1632.39 681.903 L1631.83 681.903 L1631.27 681.903 L1630.71 681.903 L1630.15 681.903 L1629.59 681.903 L1629.03 681.903 L1628.47 681.903 L1627.91 681.903 L1627.35 681.903 L1626.79 681.903 L1626.23 681.903 L1625.67 681.903 L1625.11 681.903 L1624.56 681.903 L1624 681.903 L1623.44 681.903 L1622.88 681.903 L1622.32 681.903 L1621.76 681.903 L1621.2 681.903 L1620.64 681.903 L1620.08 681.903 L1619.52 681.903 L1618.96 681.903 L1618.4 681.903 L1617.84 681.903 L1617.29 681.903 L1616.73 681.903 L1616.17 681.903 L1615.61 681.903 L1615.05 681.903 L1614.49 681.903 L1613.93 681.903 L1613.37 681.903 L1612.81 681.903 L1612.25 681.903 L1611.69 681.903 L1611.13 681.903 L1610.57 681.903 L1610.02 681.903 L1609.46 681.903 L1608.9 681.903 L1608.34 681.903 L1607.78 681.903 L1607.22 681.903 L1606.66 681.903 L1606.1 681.903 L1605.54 681.903 L1604.98 681.903 L1604.42 681.903 L1603.86 681.903 L1603.3 681.903 L1602.74 681.903 L1602.19 681.903 L1601.63 681.903 L1601.07 681.903 L1600.51 681.903 L1599.95 681.903 L1599.39 681.903 L1598.83 681.903 L1598.27 681.903 L1597.71 681.903 L1597.15 681.903 L1596.59 681.903 L1596.03 681.903 L1595.47 681.903 L1594.92 681.903 L1594.36 681.903 L1593.8 681.903 L1593.24 681.903 L1592.68 681.903 L1592.12 681.903 L1591.56 681.903 L1591 681.903 L1590.44 681.903 L1589.88 681.903 L1589.32 681.903 L1588.76 681.903 L1588.2 681.903 L1587.65 681.903 L1587.09 681.903 L1586.53 681.903 L1585.97 681.903 L1585.41 681.903 L1584.85 681.903 L1584.29 681.903 L1583.73 681.903 L1583.17 681.903 L1582.61 681.903 L1582.05 681.903 L1581.49 681.903 L1580.93 681.903 L1580.37 681.903 L1579.82 681.903 L1579.26 681.903 L1578.7 681.903 L1578.14 681.903 L1577.58 681.903 L1577.02 681.903 L1576.46 681.903 L1575.9 681.903 L1575.34 681.903 L1574.78 681.903 L1574.22 681.903 L1573.66 681.903 L1573.1 681.903 L1572.55 681.903 L1571.99 681.903 L1571.43 681.903 L1570.87 681.903 L1570.31 681.903 L1569.75 681.903 L1569.19 681.903 L1568.63 681.903 L1568.07 681.903 L1567.51 681.903 L1566.95 681.903 L1566.39 681.903 L1565.83 681.903 L1565.28 681.903 L1564.72 681.903 L1564.16 681.903 L1563.6 681.903 L1563.04 681.903 L1562.48 681.903 L1561.92 681.903 L1561.36 681.903 L1560.8 681.903 L1560.24 681.903 L1559.68 681.903 L1559.12 681.903 L1558.56 681.903 L1558 681.903 L1557.45 681.903 L1556.89 681.903 L1556.33 681.903 L1555.77 681.903 L1555.21 681.903 L1554.65 681.903 L1554.09 681.903 L1553.53 681.903 L1552.97 681.903 L1552.41 681.903 L1551.85 681.903 L1551.29 681.903 L1550.73 681.903 L1550.18 681.903 L1549.62 681.903 L1549.06 681.903 L1548.5 681.903 L1547.94 681.903 L1547.38 681.903 L1546.82 681.903 L1546.26 681.903 L1545.7 681.903 L1545.14 681.903 L1544.58 681.903 L1544.02 681.903 L1543.46 681.903 L1542.9 681.903 L1542.35 681.903 L1541.79 681.903 L1541.23 681.903 L1540.67 681.903 L1540.11 681.903 L1539.55 681.903 L1538.99 681.903 L1538.43 681.903 L1537.87 681.903 L1537.31 681.903 L1536.75 681.903 L1536.19 681.903 L1535.63 681.903 L1535.08 681.903 L1534.52 681.903 L1533.96 681.903 L1533.4 681.903 L1532.84 681.903 L1532.28 681.903 L1531.72 681.903 L1531.16 681.903 L1530.6 681.903 L1530.04 681.903 L1529.48 681.903 L1528.92 681.903 L1528.36 681.903 L1527.81 681.903 L1527.25 681.903 L1526.69 681.903 L1526.13 681.903 L1525.57 681.903 L1525.01 681.903 L1524.45 681.903 L1523.89 681.903 L1523.33 681.903 L1522.77 681.903 L1522.21 681.903 L1521.65 681.903 L1521.09 681.903 L1520.53 681.903 L1519.98 681.903 L1519.42 681.903 L1518.86 681.903 L1518.3 681.903 L1517.74 681.903 L1517.18 681.903 L1516.62 681.903 L1516.06 681.903 L1515.5 681.903 L1514.94 681.903 L1514.38 681.903 L1513.82 681.903 L1513.26 681.903 L1512.71 681.903 L1512.15 681.903 L1511.59 681.903 L1511.03 681.903 L1510.47 681.903 L1509.91 681.903 L1509.35 681.903 L1508.79 681.903 L1508.23 681.903 L1507.67 681.903 L1507.11 681.903 L1506.55 681.903 L1505.99 681.903 L1505.44 681.903 L1504.88 681.903 L1504.32 681.903 L1503.76 681.903 L1503.2 681.903 L1502.64 681.903 L1502.08 681.903 L1501.52 681.903 L1500.96 681.903 L1500.4 681.903 L1499.84 681.903 L1499.28 681.903 L1498.72 681.903 L1498.16 681.903 L1497.61 681.903 L1497.05 681.903 L1496.49 681.903 L1495.93 681.903 L1495.37 681.903 L1494.81 681.903 L1494.25 681.903 L1493.69 681.903 L1493.13 681.903 L1492.57 681.903 L1492.01 681.903 L1491.45 681.903 L1490.89 681.903 L1490.34 681.903 L1489.78 681.903 L1489.22 681.903 L1488.66 681.903 L1488.1 681.903 L1487.54 681.903 L1486.98 681.903 L1486.42 681.903 L1485.86 681.903 L1485.3 681.903 L1484.74 681.903 L1484.18 681.903 L1483.62 681.903 L1483.07 681.903 L1482.51 681.903 L1481.95 681.903 L1481.39 681.903 L1480.83 681.903 L1480.27 681.903 L1479.71 681.903 L1479.15 681.903 L1478.59 681.903 L1478.03 681.903 L1477.47 681.903 L1476.91 681.903 L1476.35 681.903 L1475.79 681.903 L1475.24 681.903 L1474.68 681.903 L1474.12 681.903 L1473.56 681.903 L1473 681.903 L1472.44 681.903 L1471.88 681.903 L1471.32 681.903 L1470.76 681.903 L1470.2 681.903 L1469.64 681.903 L1469.08 681.903 L1468.52 681.903 L1467.97 681.903 L1467.41 681.903 L1466.85 681.903 L1466.29 681.903 L1465.73 681.903 L1465.17 681.903 L1464.61 681.903 L1464.05 681.903 L1463.49 681.903 L1462.93 681.903 L1462.37 681.903 L1461.81 681.903 L1461.25 681.903 L1460.7 681.903 L1460.14 681.903 L1459.58 681.903 L1459.02 681.903 L1458.46 681.903 L1457.9 681.903 L1457.34 681.903 L1456.78 681.903 L1456.22 681.903 L1455.66 681.903 L1455.1 681.903 L1454.54 681.903 L1453.98 681.903 L1453.42 681.903 L1452.87 681.903 L1452.31 681.903 L1451.75 681.903 L1451.19 681.903 L1450.63 681.903 L1450.07 681.903 L1449.51 681.903 L1448.95 681.903 L1448.39 681.903 L1447.83 681.903 L1447.27 681.903 L1446.71 681.903 L1446.15 681.903 L1445.6 681.903 L1445.04 681.903 L1444.48 681.903 L1443.92 681.903 L1443.36 681.903 L1442.8 681.903 L1442.24 681.903 L1441.68 681.903 L1441.12 681.903 L1440.56 681.903 L1440 681.903 L1439.44 681.903 L1438.88 681.903 L1438.33 681.903 L1437.77 681.903 L1437.21 681.903 L1436.65 681.903 L1436.09 681.903 L1435.53 681.903 L1434.97 681.903 L1434.41 681.903 L1433.85 681.903 L1433.29 681.903 L1432.73 681.903 L1432.17 681.903 L1431.61 681.903 L1431.05 681.903 L1430.5 681.903 L1429.94 681.903 L1429.38 681.903 L1428.82 681.903 L1428.26 681.903 L1427.7 681.903 L1427.14 681.903 L1426.58 681.903 L1426.02 681.903 L1425.46 681.903 L1424.9 681.903 L1424.34 681.903 L1423.78 681.903 L1423.23 681.903 L1422.67 681.903 L1422.11 681.903 L1421.55 681.903 L1420.99 681.903 L1420.43 681.903 L1419.87 681.903 L1419.31 681.903 L1418.75 681.903 L1418.19 681.903 L1417.63 681.903 L1417.07 681.903 L1416.51 681.903 L1415.95 681.903 L1415.4 681.903 L1414.84 681.903 L1414.28 681.903 L1413.72 681.903 L1413.16 681.903 L1412.6 681.903 L1412.04 681.903 L1411.48 681.903 L1410.92 681.903 L1410.36 681.903 L1409.8 681.903 L1409.24 681.903 L1408.68 681.903 L1408.13 681.903 L1407.57 681.903 L1407.01 681.903 L1406.45 681.903 L1405.89 681.903 L1405.33 681.903 L1404.77 681.903 L1404.21 681.903 L1403.65 681.903 L1403.09 681.903 L1402.53 681.903 L1401.97 681.903 L1401.41 681.903 L1400.86 681.903 L1400.3 681.903 L1399.74 681.903 L1399.18 681.903 L1398.62 681.903 L1398.06 681.903 L1397.5 681.903 L1396.94 681.903 L1396.38 681.903 L1395.82 681.903 L1395.26 681.903 L1394.7 681.903 L1394.14 681.903 L1393.58 681.903 L1393.03 681.903 L1392.47 681.903 L1391.91 681.903 L1391.35 681.903 L1390.79 681.903 L1390.23 681.903 L1389.67 681.903 L1389.11 681.903 L1388.55 681.903 L1387.99 681.903 L1387.43 681.903 L1386.87 681.903 L1386.31 681.903 L1385.76 681.903 L1385.2 681.903 L1384.64 681.903 L1384.08 681.903 L1383.52 681.903 L1382.96 681.903 L1382.4 681.903 L1381.84 681.903 L1381.28 681.903 L1380.72 681.903 L1380.16 681.903 L1379.6 681.903 L1379.04 681.903 L1378.49 681.903 L1377.93 681.903 L1377.37 681.903 L1376.81 681.903 L1376.25 681.903 L1375.69 681.903 L1375.13 681.903 L1374.57 681.903 L1374.01 681.903 L1373.45 681.903 L1372.89 681.903 L1372.33 681.903 L1371.77 681.903 L1371.21 681.903 L1370.66 681.903 L1370.1 681.903 L1369.54 681.903 L1368.98 681.903 L1368.42 681.903 L1367.86 681.903 L1367.3 681.903 L1366.74 681.903 L1366.18 681.903 L1365.62 681.903 L1365.06 681.903 L1364.5 681.903 L1363.94 681.903 L1363.39 681.903 L1362.83 681.903 L1362.27 681.903 L1361.71 681.903 L1361.15 681.903 L1360.59 681.903 L1360.03 681.903 L1359.47 681.903 L1358.91 681.903 L1358.35 681.903 L1357.79 681.903 L1357.23 681.903 L1356.67 681.903 L1356.12 681.903 L1355.56 681.903 L1355 681.903 L1354.44 681.903 L1353.88 681.903 L1353.32 681.903 L1352.76 681.903 L1352.2 681.903 L1351.64 681.903 L1351.08 681.903 L1350.52 681.903 L1349.96 681.903 L1349.4 681.903 L1348.84 681.903 L1348.29 681.903 L1347.73 681.903 L1347.17 681.903 L1346.61 681.903 L1346.05 681.903 L1345.49 681.903 L1344.93 681.903 L1344.37 681.903 L1343.81 681.903 L1343.25 681.903 L1342.69 681.903 L1342.13 681.903 L1341.57 681.903 L1341.02 681.903 L1340.46 681.903 L1339.9 681.903 L1339.34 681.903 L1338.78 681.903 L1338.22 681.903 L1337.66 681.903 L1337.1 681.903 L1336.54 681.903 L1335.98 681.903 L1335.42 681.903 L1334.86 681.903 L1334.3 681.903 L1333.75 681.903 L1333.19 681.903 L1332.63 681.903 L1332.07 681.903 L1331.51 681.903 L1330.95 681.903 L1330.39 681.903 L1329.83 681.903 L1329.27 681.903 L1328.71 681.903 L1328.15 681.903 L1327.59 681.903 L1327.03 681.903 L1326.47 681.903 L1325.92 681.903 L1325.36 681.903 L1324.8 681.903 L1324.24 681.903 L1323.68 681.903 L1323.12 681.903 L1322.56 681.903 L1322 681.903 L1321.44 681.903 L1320.88 681.903 L1320.32 681.903 L1319.76 681.903 L1319.2 681.903 L1318.65 681.903 L1318.09 681.903 L1317.53 681.903 L1316.97 681.903 L1316.41 681.903 L1315.85 681.903 L1315.29 681.903 L1314.73 681.903 L1314.17 681.903 L1313.61 681.903 L1313.05 681.903 L1312.49 681.903 L1311.93 681.903 L1311.38 681.903 L1310.82 681.903 L1310.26 681.903 L1309.7 681.903 L1309.14 681.903 L1308.58 681.903 L1308.02 681.903 L1307.46 681.903 L1306.9 681.903 L1306.34 681.903 L1305.78 681.903 L1305.22 681.903 L1304.66 681.903 L1304.1 681.903 L1303.55 681.903 L1302.99 681.903 L1302.43 681.903 L1301.87 681.903 L1301.31 681.903 L1300.75 681.903 L1300.19 681.903 L1299.63 681.903 L1299.07 681.903 L1298.51 681.903 L1297.95 681.903 L1297.39 681.903 L1296.83 681.903 L1296.28 681.903 L1295.72 681.903 L1295.16 681.903 L1294.6 681.903 L1294.04 681.903 L1293.48 681.903 L1292.92 681.903 L1292.36 681.903 L1291.8 681.903 L1291.24 681.903 L1290.68 681.903 L1290.12 681.903 L1289.56 681.903 L1289 681.903 L1288.45 681.903 L1287.89 681.903 L1287.33 681.903 L1286.77 681.903 L1286.21 681.903 L1285.65 681.903 L1285.09 681.903 L1284.53 681.903 L1283.97 681.903 L1283.41 681.903 L1282.85 681.903 L1282.29 681.903 L1281.73 681.903 L1281.18 681.903 L1280.62 681.903 L1280.06 681.903 L1279.5 681.903 L1278.94 681.903 L1278.38 681.903 L1277.82 681.903 L1277.26 681.903 L1276.7 681.903 L1276.14 681.903 L1275.58 681.903 L1275.02 681.903 L1274.46 681.903 L1273.91 681.903 L1273.35 681.903 L1272.79 681.903 L1272.23 681.903 L1271.67 681.903 L1271.11 681.903 L1270.55 681.903 L1269.99 681.903 L1269.43 681.903 L1268.87 681.903 L1268.31 681.903 L1267.75 681.903 L1267.19 681.903 L1266.63 681.903 L1266.08 681.903 L1265.52 681.903 L1264.96 681.903 L1264.4 681.903 L1263.84 681.903 L1263.28 681.903 L1262.72 681.903 L1262.16 681.903 L1261.6 681.903 L1261.04 681.903 L1260.48 681.903 L1259.92 681.903 L1259.36 681.903 L1258.81 681.903 L1258.25 681.903 L1257.69 681.903 L1257.13 681.903 L1256.57 681.903 L1256.01 681.903 L1255.45 681.903 L1254.89 681.903 L1254.33 681.903 L1253.77 681.903 L1253.21 681.903 L1252.65 681.903 L1252.09 681.903 L1251.54 681.903 L1250.98 681.903 L1250.42 681.903 L1249.86 681.903 L1249.3 681.903 L1248.74 681.903 L1248.18 681.903 L1247.62 681.903 L1247.06 681.903 L1246.5 681.903 L1245.94 681.903 L1245.38 681.903 L1244.82 681.903 L1244.26 681.903 L1243.71 681.903 L1243.15 681.903 L1242.59 681.903 L1242.03 681.903 L1241.47 681.903 L1240.91 681.903 L1240.35 681.903 L1239.79 681.903 L1239.23 681.903 L1238.67 681.903 L1238.11 681.903 L1237.55 681.903 L1236.99 681.903 L1236.44 681.903 L1235.88 681.903 L1235.32 681.903 L1234.76 681.903 L1234.2 681.903 L1233.64 681.903 L1233.08 681.903 L1232.52 681.903 L1231.96 681.903 L1231.4 681.903 L1230.84 681.903 L1230.28 681.903 L1229.72 681.903 L1229.17 681.903 L1228.61 681.903 L1228.05 681.903 L1227.49 681.903 L1226.93 681.903 L1226.37 681.903 L1225.81 681.903 L1225.25 681.903 L1224.69 681.903 L1224.13 681.903 L1223.57 681.903 L1223.01 681.903 L1222.45 681.903 L1221.89 681.903 L1221.34 681.903 L1220.78 681.903 L1220.22 681.903 L1219.66 681.903 L1219.1 681.903 L1218.54 681.903 L1217.98 681.903 L1217.42 681.903 L1216.86 681.903 L1216.3 681.903 L1215.74 681.903 L1215.18 681.903 L1214.62 681.903 L1214.07 681.903 L1213.51 681.903 L1212.95 681.903 L1212.39 681.903 L1211.83 681.903 L1211.27 681.903 L1210.71 681.903 L1210.15 681.903 L1209.59 681.903 L1209.03 681.903 L1208.47 681.903 L1207.91 681.903 L1207.35 681.903 L1206.8 681.903 L1206.24 681.903 L1205.68 681.903 L1205.12 681.903 L1204.56 681.903 L1204 681.903 L1203.44 681.903 L1202.88 681.903 L1202.32 681.903 L1201.76 681.903 L1201.2 681.903 L1200.64 681.903 L1200.08 681.903 L1199.52 681.903 L1198.97 681.903 L1198.41 681.903 L1197.85 681.903 L1197.29 681.903 L1196.73 681.903 L1196.17 681.903 L1195.61 681.903 L1195.05 681.903 L1194.49 681.903 L1193.93 681.903 L1193.37 681.903 L1192.81 681.903 L1192.25 681.903 L1191.7 681.903 L1191.14 681.903 L1190.58 681.903 L1190.02 681.903 L1189.46 681.903 L1188.9 681.903 L1188.34 681.903 L1187.78 681.903 L1187.22 681.903 L1186.66 681.903 L1186.1 681.903 L1185.54 681.903 L1184.98 681.903 L1184.43 681.903 L1183.87 681.903 L1183.31 681.903 L1182.75 681.903 L1182.19 681.903 L1181.63 681.903 L1181.07 681.903 L1180.51 681.903 L1179.95 681.903 L1179.39 681.903 L1178.83 681.903 L1178.27 681.903 L1177.71 681.903 L1177.15 681.903 L1176.6 681.903 L1176.04 681.903 L1175.48 681.903 L1174.92 681.903 L1174.36 681.903 L1173.8 681.903 L1173.24 681.903 L1172.68 681.903 L1172.12 681.903 L1171.56 681.903 L1171 681.903 L1170.44 681.903 L1169.88 681.903 L1169.33 681.903 L1168.77 681.903 L1168.21 681.903 L1167.65 681.903 L1167.09 681.903 L1166.53 681.903 L1165.97 681.903 L1165.41 681.903 L1164.85 681.903 L1164.29 681.903 L1163.73 681.903 L1163.17 681.903 L1162.61 681.903 L1162.05 681.903 L1161.5 681.903 L1160.94 681.903 L1160.38 681.903 L1159.82 681.903 L1159.26 681.903 L1158.7 681.903 L1158.14 681.903 L1157.58 681.903 L1157.02 681.903 L1156.46 681.903 L1155.9 681.903 L1155.34 681.903 L1154.78 681.903 L1154.23 681.903 L1153.67 681.903 L1153.11 681.903 L1152.55 681.903 L1151.99 681.903 L1151.43 681.903 L1150.87 681.903 L1150.31 681.903 L1149.75 681.903 L1149.19 681.903 L1148.63 681.903 L1148.07 681.903 L1147.51 681.903 L1146.96 681.903 L1146.4 681.903 L1145.84 681.903 L1145.28 681.903 L1144.72 681.903 L1144.16 681.903 L1143.6 681.903 L1143.04 681.903 L1142.48 681.903 L1141.92 681.903 L1141.36 681.903 L1140.8 681.903 L1140.24 681.903 L1139.68 681.903 L1139.13 681.903 L1138.57 681.903 L1138.01 681.903 L1137.45 681.903 L1136.89 681.903 L1136.33 681.903 L1135.77 681.903 L1135.21 681.903 L1134.65 681.903 L1134.09 681.903 L1133.53 681.903 L1132.97 681.903 L1132.41 681.903 L1131.86 681.903 L1131.3 681.903 L1130.74 681.903 L1130.18 681.903 L1129.62 681.903 L1129.06 681.903 L1128.5 681.903 L1127.94 681.903 L1127.38 681.903 L1126.82 681.903 L1126.26 681.903 L1125.7 681.903 L1125.14 681.903 L1124.59 681.903 L1124.03 681.903 L1123.47 681.903 L1122.91 681.903 L1122.35 681.903 L1121.79 681.903 L1121.23 681.903 L1120.67 681.903 L1120.11 681.903 L1119.55 681.903 L1118.99 681.903 L1118.43 681.903 L1117.87 681.903 L1117.31 681.903 L1116.76 681.903 L1116.2 681.903 L1115.64 681.903 L1115.08 681.903 L1114.52 681.903 L1113.96 681.903 L1113.4 681.903 L1112.84 681.903 L1112.28 681.903 L1111.72 681.903 L1111.16 681.903 L1110.6 681.903 L1110.04 681.903 L1109.49 681.903 L1108.93 681.903 L1108.37 681.903 L1107.81 681.903 L1107.25 681.903 L1106.69 681.903 L1106.13 681.903 L1105.57 681.903 L1105.01 681.903 L1104.45 681.903 L1103.89 681.903 L1103.33 681.903 L1102.77 681.903 L1102.22 681.903 L1101.66 681.903 L1101.1 681.903 L1100.54 681.903 L1099.98 681.903 L1099.42 681.903 L1098.86 681.903 L1098.3 681.903 L1097.74 681.903 L1097.18 681.903 L1096.62 681.903 L1096.06 681.903 L1095.5 681.903 L1094.94 681.903 L1094.39 681.903 L1093.83 681.903 L1093.27 681.903 L1092.71 681.903 L1092.15 681.903 L1091.59 681.903 L1091.03 681.903 L1090.47 681.903 L1089.91 681.903 L1089.35 681.903 L1088.79 681.903 L1088.23 681.903 L1087.67 681.903 L1087.12 681.903 L1086.56 681.903 L1086 681.903 L1085.44 681.903 L1084.88 681.903 L1084.32 681.903 L1083.76 681.903 L1083.2 681.903 L1082.64 681.903 L1082.08 681.903 L1081.52 681.903 L1080.96 681.903 L1080.4 681.903 L1079.85 681.903 L1079.29 681.903 L1078.73 681.903 L1078.17 681.903 L1077.61 681.903 L1077.05 681.903 L1076.49 681.903 L1075.93 681.903 L1075.37 681.903 L1074.81 681.903 L1074.25 681.903 L1073.69 681.903 L1073.13 681.903 L1072.57 681.903 L1072.02 681.903 L1071.46 681.903 L1070.9 681.903 L1070.34 681.903 L1069.78 681.903 L1069.22 681.903 L1068.66 681.903 L1068.1 681.903 L1067.54 681.903 L1066.98 681.903 L1066.42 681.903 L1065.86 681.903 L1065.3 681.903 L1064.75 681.903 L1064.19 681.903 L1063.63 681.903 L1063.07 681.903 L1062.51 681.903 L1061.95 681.903 L1061.39 681.903 L1060.83 681.903 L1060.27 681.903 L1059.71 681.903 L1059.15 681.903 L1058.59 681.903 L1058.03 681.903 L1057.48 681.903 L1056.92 681.903 L1056.36 681.903 L1055.8 681.903 L1055.24 681.903 L1054.68 681.903 L1054.12 681.903 L1053.56 681.903 L1053 681.903 L1052.44 681.903 L1051.88 681.903 L1051.32 681.903 L1050.76 681.903 L1050.2 681.903 L1049.65 681.903 L1049.09 681.903 L1048.53 681.903 L1047.97 681.903 L1047.41 681.903 L1046.85 681.903 L1046.29 681.903 L1045.73 681.903 L1045.17 681.903 L1044.61 681.903 L1044.05 681.903 L1043.49 681.903 L1042.93 681.903 L1042.38 681.903 L1041.82 681.903 L1041.26 681.903 L1040.7 681.903 L1040.14 681.903 L1039.58 681.903 L1039.02 681.903 L1038.46 681.903 L1037.9 681.903 L1037.34 681.903 L1036.78 681.903 L1036.22 681.903 L1035.66 681.903 L1035.1 681.903 L1034.55 681.903 L1033.99 681.903 L1033.43 681.903 L1032.87 681.903 L1032.31 681.903 L1031.75 681.903 L1031.19 681.903 L1030.63 681.903 L1030.07 681.903 L1029.51 681.903 L1028.95 681.903 L1028.39 681.903 L1027.83 681.903 L1027.28 681.903 L1026.72 681.903 L1026.16 681.903 L1025.6 681.903 L1025.04 681.903 L1024.48 681.903 L1023.92 681.903 L1023.36 681.903 L1022.8 681.903 L1022.24 681.903 L1021.68 681.903 L1021.12 681.903 L1020.56 681.903 L1020.01 681.903 L1019.45 681.903 L1018.89 681.903 L1018.33 681.903 L1017.77 681.903 L1017.21 681.903 L1016.65 681.903 L1016.09 681.903 L1015.53 681.903 L1014.97 681.903 L1014.41 681.903 L1013.85 681.903 L1013.29 681.903 L1012.73 681.903 L1012.18 681.903 L1011.62 681.903 L1011.06 681.903 L1010.5 681.903 L1009.94 681.903 L1009.38 681.903 L1008.82 681.903 L1008.26 681.903 L1007.7 681.903 L1007.14 681.903 L1006.58 681.903 L1006.02 681.903 L1005.46 681.903 L1004.91 681.903 L1004.35 681.903 L1003.79 681.903 L1003.23 681.903 L1002.67 681.903 L1002.11 681.903 L1001.55 681.903 L1000.99 681.903 L1000.43 681.903 L999.872 681.903 L999.313 681.903 L998.754 681.903 L998.194 681.903 L997.635 681.903 L997.076 681.903 L996.517 681.903 L995.957 681.903 L995.398 681.903 L994.839 681.903 L994.28 681.903 L993.72 681.903 L993.161 681.903 L992.602 681.903 L992.043 681.903 L991.483 681.903 L990.924 681.903 L990.365 681.903 L989.806 681.903 L989.246 681.903 L988.687 681.903 L988.128 681.903 L987.569 681.903 L987.009 681.903 L986.45 681.903 L985.891 681.903 L985.332 681.903 L984.772 681.903 L984.213 681.903 L983.654 681.903 L983.095 681.903 L982.535 681.903 L981.976 681.903 L981.417 681.903 L980.858 681.903 L980.298 681.903 L979.739 681.903 L979.18 681.903 L978.621 681.903 L978.061 681.903 L977.502 681.903 L976.943 681.903 L976.384 681.903 L975.824 681.903 L975.265 681.903 L974.706 681.903 L974.147 681.903 L973.587 681.903 L973.028 681.903 L972.469 681.903 L971.91 681.903 L971.35 681.903 L970.791 681.903 L970.232 681.903 L969.673 681.903 L969.113 681.903 L968.554 681.903 L967.995 681.903 L967.436 681.903 L966.876 681.903 L966.317 681.903 L965.758 681.903 L965.199 681.903 L964.639 681.903 L964.08 681.903 L963.521 681.903 L962.962 681.903 L962.402 681.903 L961.843 681.903 L961.284 681.903 L960.725 681.903 L960.165 681.903 L959.606 681.903 L959.047 681.903 L958.488 681.903 L957.928 681.903 L957.369 681.903 L956.81 681.903 L956.251 681.903 L955.691 681.903 L955.132 681.903 L954.573 681.903 L954.014 681.903 L953.454 681.903 L952.895 681.903 L952.336 681.903 L951.777 681.903 L951.217 681.903 L950.658 681.903 L950.099 681.903 L949.54 681.903 L948.98 681.903 L948.421 681.903 L947.862 681.903 L947.303 681.903 L946.743 681.903 L946.184 681.903 L945.625 681.903 L945.066 681.903 L944.506 681.903 L943.947 681.903 L943.388 681.903 L942.829 681.903 L942.269 681.903 L941.71 681.903 L941.151 681.903 L940.592 681.903 L940.032 681.903 L939.473 681.903 L938.914 681.903 L938.355 681.903 L937.795 681.903 L937.236 681.903 L936.677 681.903 L936.118 681.903 L935.558 681.903 L934.999 681.903 L934.44 681.903 L933.881 681.903 L933.321 681.903 L932.762 681.903 L932.203 681.903 L931.644 681.903 L931.084 681.903 L930.525 681.903 L929.966 681.903 L929.406 681.903 L928.847 681.903 L928.288 681.903 L927.729 681.903 L927.169 681.903 L926.61 681.903 L926.051 681.903 L925.492 681.903 L924.932 681.903 L924.373 681.903 L923.814 681.903 L923.255 681.903 L922.695 681.903 L922.136 681.903 L921.577 681.903 L921.018 681.903 L920.458 681.903 L919.899 681.903 L919.34 681.903 L918.781 681.903 L918.221 681.903 L917.662 681.903 L917.103 681.903 L916.544 681.903 L915.984 681.903 L915.425 681.903 L914.866 681.903 L914.307 681.903 L913.747 681.903 L913.188 681.903 L912.629 681.903 L912.07 681.903 L911.51 681.903 L910.951 681.903 L910.392 681.903 L909.833 681.903 L909.273 681.903 L908.714 681.903 L908.155 681.903 L907.596 681.903 L907.036 681.903 L906.477 681.903 L905.918 681.903 L905.359 681.903 L904.799 681.903 L904.24 681.903 L903.681 681.903 L903.122 681.903 L902.562 681.903 L902.003 681.903 L901.444 681.903 L900.885 681.903 L900.325 681.903 L899.766 681.903 L899.207 681.903 L898.648 681.903 L898.088 681.903 L897.529 681.903 L896.97 681.903 L896.411 681.903 L895.851 681.903 L895.292 681.903 L894.733 681.903 L894.174 681.903 L893.614 681.903 L893.055 681.903 L892.496 681.903 L891.937 681.903 L891.377 681.903 L890.818 681.903 L890.259 681.903 L889.7 681.903 L889.14 681.903 L888.581 681.903 L888.022 681.903 L887.463 681.903 L886.903 681.903 L886.344 681.903 L885.785 681.903 L885.226 681.903 L884.666 681.903 L884.107 681.903 L883.548 681.903 L882.989 681.903 L882.429 681.903 L881.87 681.903 L881.311 681.903 L880.752 681.903 L880.192 681.903 L879.633 681.903 L879.074 681.903 L878.515 681.903 L877.955 681.903 L877.396 681.903 L876.837 681.903 L876.278 681.903 L875.718 681.903 L875.159 681.903 L874.6 681.903 L874.041 681.903 L873.481 681.903 L872.922 681.903 L872.363 681.903 L871.804 681.903 L871.244 681.903 L870.685 681.903 L870.126 681.903 L869.567 681.903 L869.007 681.903 L868.448 681.903 L867.889 681.903 L867.33 681.903 L866.77 681.903 L866.211 681.903 L865.652 681.903 L865.093 681.903 L864.533 681.903 L863.974 681.903 L863.415 681.903 L862.856 681.903 L862.296 681.903 L861.737 681.903 L861.178 681.903 L860.619 681.903 L860.059 681.903 L859.5 681.903 L858.941 681.903 L858.382 681.903 L857.822 681.903 L857.263 681.903 L856.704 681.903 L856.145 681.903 L855.585 681.903 L855.026 681.903 L854.467 681.903 L853.908 681.903 L853.348 681.903 L852.789 681.903 L852.23 681.903 L851.671 681.903 L851.111 681.903 L850.552 681.903 L849.993 681.903 L849.434 681.903 L848.874 681.903 L848.315 681.903 L847.756 681.903 L847.197 681.903 L846.637 681.903 L846.078 681.903 L845.519 681.903 L844.96 681.903 L844.4 681.903 L843.841 681.903 L843.282 681.903 L842.723 681.903 L842.163 681.903 L841.604 681.903 L841.045 681.903 L840.486 681.903 L839.926 681.903 L839.367 681.903 L838.808 681.903 L838.249 681.903 L837.689 681.903 L837.13 681.903 L836.571 681.903 L836.012 681.903 L835.452 681.903 L834.893 681.903 L834.334 681.903 L833.775 681.903 L833.215 681.903 L832.656 681.903 L832.097 681.903 L831.538 681.903 L830.978 681.903 L830.419 681.903 L829.86 681.903 L829.301 681.903 L828.741 681.903 L828.182 681.903 L827.623 681.903 L827.064 681.903 L826.504 681.903 L825.945 681.903 L825.386 681.903 L824.827 681.903 L824.267 681.903 L823.708 681.903 L823.149 681.903 L822.59 681.903 L822.03 681.903 L821.471 681.903 L820.912 681.903 L820.353 681.903 L819.793 681.903 L819.234 681.903 L818.675 681.903 L818.116 681.903 L817.556 681.903 L816.997 681.903 L816.438 681.903 L815.879 681.903 L815.319 681.903 L814.76 681.903 L814.201 681.903 L813.642 681.903 L813.082 681.903 L812.523 681.903 L811.964 681.903 L811.405 681.903 L810.845 681.903 L810.286 681.903 L809.727 681.903 L809.168 681.903 L808.608 681.903 L808.049 681.903 L807.49 681.903 L806.931 681.903 L806.371 681.903 L805.812 681.903 L805.253 681.903 L804.693 681.903 L804.134 681.903 L803.575 681.903 L803.016 681.903 L802.456 681.903 L801.897 681.903 L801.338 681.903 L800.779 681.903 L800.219 681.903 L799.66 681.903 L799.101 681.903 L798.542 681.903 L797.982 681.903 L797.423 681.903 L796.864 681.903 L796.305 681.903 L795.745 681.903 L795.186 681.903 L794.627 681.903 L794.068 681.903 L793.508 681.903 L792.949 681.903 L792.39 681.903 L791.831 681.903 L791.271 681.903 L790.712 681.903 L790.153 681.903 L789.594 681.903 L789.034 681.903 L788.475 681.903 L787.916 681.903 L787.357 681.903 L786.797 681.903 L786.238 681.903 L785.679 681.903 L785.12 681.903 L784.56 681.903 L784.001 681.903 L783.442 681.903 L782.883 681.903 L782.323 681.903 L781.764 681.903 L781.205 681.903 L780.646 681.903 L780.086 681.903 L779.527 681.903 L778.968 681.903 L778.409 681.903 L777.849 681.903 L777.29 681.903 L776.731 681.903 L776.172 681.903 L775.612 681.903 L775.053 681.903 L774.494 681.903 L773.935 681.903 L773.375 681.903 L772.816 681.903 L772.257 681.903 L771.698 681.903 L771.138 681.903 L770.579 681.903 L770.02 681.903 L769.461 681.903 L768.901 681.903 L768.342 681.903 L767.783 681.903 L767.224 681.903 L766.664 681.903 L766.105 681.903 L765.546 681.903 L764.987 681.903 L764.427 681.903 L763.868 681.903 L763.309 681.903 L762.75 681.903 L762.19 681.903 L761.631 681.903 L761.072 681.903 L760.513 681.903 L759.953 681.903 L759.394 681.903 L758.835 681.903 L758.276 681.903 L757.716 681.903 L757.157 681.903 L756.598 681.903 L756.039 681.903 L755.479 681.903 L754.92 681.903 L754.361 681.903 L753.802 681.903 L753.242 681.903 L752.683 681.903 L752.124 681.903 L751.565 681.903 L751.005 681.903 L750.446 681.903 L749.887 681.903 L749.328 681.903 L748.768 681.903 L748.209 681.903 L747.65 681.903 L747.091 681.903 L746.531 681.903 L745.972 681.903 L745.413 681.903 L744.854 681.903 L744.294 681.903 L743.735 681.903 L743.176 681.903 L742.617 681.903 L742.057 681.903 L741.498 681.903 L740.939 681.903 L740.38 681.903 L739.82 681.903 L739.261 681.903 L738.702 681.903 L738.143 681.903 L737.583 681.903 L737.024 681.903 L736.465 681.903 L735.906 681.903 L735.346 681.903 L734.787 681.903 L734.228 681.903 L733.669 681.903 L733.109 681.903 L732.55 681.903 L731.991 681.903 L731.432 681.903 L730.872 681.903 L730.313 681.903 L729.754 681.903 L729.195 681.903 L728.635 681.903 L728.076 681.903 L727.517 681.903 L726.958 681.903 L726.398 681.903 L725.839 681.903 L725.28 681.903 L724.721 681.903 L724.161 681.903 L723.602 681.903 L723.043 681.903 L722.484 681.903 L721.924 681.903 L721.365 681.903 L720.806 681.903 L720.247 681.903  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip443)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.013 720.806,683.013 721.365,683.013 721.924,683.013 722.484,683.013 723.043,683.013 723.602,683.013 724.161,683.013 724.721,683.013 725.28,683.013 725.839,683.013 726.398,683.013 726.958,683.013 727.517,683.013 728.076,683.013 728.635,683.013 729.195,683.013 729.754,683.013 730.313,683.013 730.872,683.013 731.432,683.013 731.991,683.013 732.55,683.013 733.109,683.013 733.669,683.013 734.228,683.013 734.787,683.013 735.346,683.013 735.906,683.013 736.465,683.013 737.024,683.013 737.583,683.013 738.143,683.013 738.702,683.013 739.261,683.013 739.82,683.013 740.38,683.013 740.939,683.013 741.498,683.013 742.057,683.013 742.617,683.013 743.176,683.013 743.735,683.013 744.294,683.013 744.854,683.013 745.413,683.013 745.972,683.013 746.531,683.013 747.091,683.013 747.65,683.013 748.209,683.013 748.768,683.013 749.328,683.013 749.887,683.013 750.446,683.013 751.005,683.013 751.565,683.013 752.124,683.013 752.683,683.013 753.242,683.013 753.802,683.013 754.361,683.013 754.92,683.013 755.479,683.013 756.039,683.013 756.598,683.013 757.157,683.013 757.716,683.013 758.276,683.013 758.835,683.013 759.394,683.013 759.953,683.013 760.513,683.013 761.072,683.013 761.631,683.013 762.19,683.013 762.75,683.013 763.309,683.013 763.868,683.013 764.427,683.013 764.987,683.013 765.546,683.013 766.105,683.013 766.664,683.013 767.224,683.013 767.783,683.013 768.342,683.013 768.901,683.013 769.461,683.013 770.02,683.013 770.579,683.013 771.138,683.013 771.698,683.013 772.257,683.013 772.816,683.013 773.375,683.013 773.935,683.013 774.494,683.013 775.053,683.013 775.612,683.013 776.172,683.013 776.731,683.013 777.29,683.013 777.849,683.013 778.409,683.013 778.968,683.013 779.527,683.013 780.086,683.013 780.646,683.013 781.205,683.013 781.764,683.013 782.323,683.013 782.883,683.013 783.442,683.013 784.001,683.013 784.56,683.013 785.12,683.013 785.679,683.013 786.238,683.013 786.797,683.013 787.357,683.013 787.916,683.013 788.475,683.013 789.034,683.013 789.594,683.013 790.153,683.013 790.712,683.013 791.271,683.013 791.831,683.013 792.39,683.013 792.949,683.013 793.508,683.013 794.068,683.013 794.627,683.013 795.186,683.013 795.745,683.013 796.305,683.013 796.864,683.013 797.423,683.013 797.982,683.013 798.542,683.013 799.101,683.013 799.66,683.013 800.219,683.013 800.779,683.013 801.338,683.013 801.897,683.013 802.456,683.013 803.016,683.013 803.575,683.013 804.134,683.013 804.693,683.013 805.253,683.013 805.812,683.013 806.371,683.013 806.931,683.013 807.49,683.013 808.049,683.013 808.608,683.013 809.168,683.013 809.727,683.013 810.286,683.013 810.845,683.013 811.405,683.013 811.964,683.013 812.523,683.013 813.082,683.013 813.642,683.013 814.201,683.013 814.76,683.013 815.319,683.013 815.879,683.013 816.438,683.013 816.997,683.013 817.556,683.013 818.116,683.013 818.675,683.013 819.234,683.013 819.793,683.013 820.353,683.013 820.912,683.013 821.471,683.013 822.03,683.013 822.59,683.013 823.149,683.013 823.708,683.013 824.267,683.013 824.827,683.013 825.386,683.013 825.945,683.013 826.504,683.013 827.064,683.013 827.623,683.013 828.182,683.013 828.741,683.013 829.301,683.013 829.86,683.013 830.419,683.013 830.978,683.013 831.538,683.013 832.097,683.013 832.656,683.013 833.215,683.013 833.775,683.013 834.334,683.013 834.893,683.013 835.452,683.013 836.012,683.013 836.571,683.013 837.13,683.013 837.689,683.013 838.249,683.013 838.808,683.013 839.367,683.013 839.926,683.013 840.486,683.013 841.045,683.013 841.604,683.013 842.163,683.013 842.723,683.013 843.282,683.013 843.841,683.013 844.4,683.013 844.96,683.013 845.519,683.013 846.078,683.013 846.637,683.013 847.197,683.013 847.756,683.013 848.315,683.013 848.874,683.013 849.434,683.013 849.993,683.013 850.552,683.013 851.111,683.013 851.671,683.013 852.23,683.013 852.789,683.013 853.348,683.013 853.908,683.013 854.467,683.013 855.026,683.013 855.585,683.013 856.145,683.013 856.704,683.013 857.263,683.013 857.822,683.013 858.382,683.013 858.941,683.013 859.5,683.013 860.059,683.013 860.619,683.013 861.178,683.013 861.737,683.013 862.296,683.013 862.856,683.013 863.415,683.013 863.974,683.013 864.533,683.013 865.093,683.013 865.652,683.013 866.211,683.013 866.77,683.013 867.33,683.013 867.889,683.013 868.448,683.013 869.007,683.013 869.567,683.013 870.126,683.013 870.685,683.013 871.244,683.013 871.804,683.013 872.363,683.013 872.922,683.013 873.481,683.013 874.041,683.013 874.6,683.013 875.159,683.013 875.718,683.013 876.278,683.013 876.837,683.013 877.396,683.013 877.955,683.013 878.515,683.013 879.074,683.013 879.633,683.013 880.192,683.013 880.752,683.013 881.311,683.013 881.87,683.013 882.429,683.013 882.989,683.013 883.548,683.013 884.107,683.013 884.666,683.013 885.226,683.013 885.785,683.013 886.344,683.013 886.903,683.013 887.463,683.013 888.022,683.013 888.581,683.013 889.14,683.013 889.7,683.013 890.259,683.013 890.818,683.013 891.377,683.013 891.937,683.013 892.496,683.013 893.055,683.013 893.614,683.013 894.174,683.013 894.733,683.013 895.292,683.013 895.851,683.013 896.411,683.013 896.97,683.013 897.529,683.013 898.088,683.013 898.648,683.013 899.207,683.013 899.766,683.013 900.325,683.013 900.885,683.013 901.444,683.013 902.003,683.013 902.562,683.013 903.122,683.013 903.681,683.013 904.24,683.013 904.799,683.013 905.359,683.013 905.918,683.013 906.477,683.013 907.036,683.013 907.596,683.013 908.155,683.013 908.714,683.013 909.273,683.013 909.833,683.013 910.392,683.013 910.951,683.013 911.51,683.013 912.07,683.013 912.629,683.013 913.188,683.013 913.747,683.013 914.307,683.013 914.866,683.013 915.425,683.013 915.984,683.013 916.544,683.013 917.103,683.013 917.662,683.013 918.221,683.013 918.781,683.013 919.34,683.013 919.899,683.013 920.458,683.013 921.018,683.013 921.577,683.013 922.136,683.013 922.695,683.013 923.255,683.013 923.814,683.013 924.373,683.013 924.932,683.013 925.492,683.013 926.051,683.013 926.61,683.013 927.169,683.013 927.729,683.013 928.288,683.013 928.847,683.013 929.406,683.013 929.966,683.013 930.525,683.013 931.084,683.013 931.644,683.013 932.203,683.013 932.762,683.013 933.321,683.013 933.881,683.013 934.44,683.013 934.999,683.013 935.558,683.013 936.118,683.013 936.677,683.013 937.236,683.013 937.795,683.013 938.355,683.013 938.914,683.013 939.473,683.013 940.032,683.013 940.592,683.013 941.151,683.013 941.71,683.013 942.269,683.013 942.829,683.013 943.388,683.013 943.947,683.013 944.506,683.013 945.066,683.013 945.625,683.013 946.184,683.013 946.743,683.013 947.303,683.013 947.862,683.013 948.421,683.013 948.98,683.013 949.54,683.013 950.099,683.013 950.658,683.013 951.217,683.013 951.777,683.013 952.336,683.013 952.895,683.013 953.454,683.013 954.014,683.013 954.573,683.013 955.132,683.013 955.691,683.013 956.251,683.013 956.81,683.013 957.369,683.013 957.928,683.013 958.488,683.013 959.047,683.013 959.606,683.013 960.165,683.013 960.725,683.013 961.284,683.013 961.843,683.013 962.402,683.013 962.962,683.013 963.521,683.013 964.08,683.013 964.639,683.013 965.199,683.013 965.758,683.013 966.317,683.013 966.876,683.013 967.436,683.013 967.995,683.013 968.554,683.013 969.113,683.013 969.673,683.013 970.232,683.013 970.791,683.013 971.35,683.013 971.91,683.013 972.469,683.013 973.028,683.013 973.587,683.013 974.147,683.013 974.706,683.013 975.265,683.013 975.824,683.013 976.384,683.013 976.943,683.013 977.502,683.013 978.061,683.013 978.621,683.013 979.18,683.013 979.739,683.013 980.298,683.013 980.858,683.013 981.417,683.013 981.976,683.013 982.535,683.013 983.095,683.013 983.654,683.013 984.213,683.013 984.772,683.013 985.332,683.013 985.891,683.013 986.45,683.013 987.009,683.013 987.569,683.013 988.128,683.013 988.687,683.013 989.246,683.013 989.806,683.013 990.365,683.013 990.924,683.013 991.483,683.013 992.043,683.013 992.602,683.013 993.161,683.013 993.72,683.013 994.28,683.013 994.839,683.013 995.398,683.013 995.957,683.013 996.517,683.013 997.076,683.013 997.635,683.013 998.194,683.013 998.754,683.013 999.313,683.013 999.872,683.013 1000.43,683.013 1000.99,683.013 1001.55,683.013 1002.11,683.013 1002.67,683.013 1003.23,683.013 1003.79,683.013 1004.35,683.013 1004.91,683.013 1005.46,683.013 1006.02,683.013 1006.58,683.013 1007.14,683.013 1007.7,683.013 1008.26,683.013 1008.82,683.013 1009.38,683.013 1009.94,683.013 1010.5,683.013 1011.06,683.013 1011.62,683.013 1012.18,683.013 1012.73,683.013 1013.29,683.013 1013.85,683.013 1014.41,683.013 1014.97,683.013 1015.53,683.013 1016.09,683.013 1016.65,683.013 1017.21,683.013 1017.77,683.013 1018.33,683.013 1018.89,683.013 1019.45,683.013 1020.01,683.013 1020.56,683.013 1021.12,683.013 1021.68,683.013 1022.24,683.013 1022.8,683.013 1023.36,683.013 1023.92,683.013 1024.48,683.013 1025.04,683.013 1025.6,683.013 1026.16,683.013 1026.72,683.013 1027.28,683.013 1027.83,683.013 1028.39,683.013 1028.95,683.013 1029.51,683.013 1030.07,683.013 1030.63,683.013 1031.19,683.013 1031.75,683.013 1032.31,683.013 1032.87,683.013 1033.43,683.013 1033.99,683.013 1034.55,683.013 1035.1,683.013 1035.66,683.013 1036.22,683.013 1036.78,683.013 1037.34,683.013 1037.9,683.013 1038.46,683.013 1039.02,683.013 1039.58,683.013 1040.14,683.013 1040.7,683.013 1041.26,683.013 1041.82,683.013 1042.38,683.013 1042.93,683.013 1043.49,683.013 1044.05,683.013 1044.61,683.013 1045.17,683.013 1045.73,683.013 1046.29,683.013 1046.85,683.013 1047.41,683.013 1047.97,683.013 1048.53,683.013 1049.09,683.013 1049.65,683.013 1050.2,683.013 1050.76,683.013 1051.32,683.013 1051.88,683.013 1052.44,683.013 1053,683.013 1053.56,683.013 1054.12,683.013 1054.68,683.013 1055.24,683.013 1055.8,683.013 1056.36,683.013 1056.92,683.013 1057.48,683.013 1058.03,683.013 1058.59,683.013 1059.15,683.013 1059.71,683.013 1060.27,683.013 1060.83,683.013 1061.39,683.013 1061.95,683.013 1062.51,683.013 1063.07,683.013 1063.63,683.013 1064.19,683.013 1064.75,683.013 1065.3,683.013 1065.86,683.013 1066.42,683.013 1066.98,683.013 1067.54,683.013 1068.1,683.013 1068.66,683.013 1069.22,683.013 1069.78,683.013 1070.34,683.013 1070.9,683.013 1071.46,683.013 1072.02,683.013 1072.57,683.013 1073.13,683.013 1073.69,683.013 1074.25,683.013 1074.81,683.013 1075.37,683.013 1075.93,683.013 1076.49,683.013 1077.05,683.013 1077.61,683.013 1078.17,683.013 1078.73,683.013 1079.29,683.013 1079.85,683.013 1080.4,683.013 1080.96,683.013 1081.52,683.013 1082.08,683.013 1082.64,683.013 1083.2,683.013 1083.76,683.013 1084.32,683.013 1084.88,683.013 1085.44,683.013 1086,683.013 1086.56,683.013 1087.12,683.013 1087.67,683.013 1088.23,683.013 1088.79,683.013 1089.35,683.013 1089.91,683.013 1090.47,683.013 1091.03,683.013 1091.59,683.013 1092.15,683.013 1092.71,683.013 1093.27,683.013 1093.83,683.013 1094.39,683.013 1094.94,683.013 1095.5,683.013 1096.06,683.013 1096.62,683.013 1097.18,683.013 1097.74,683.013 1098.3,683.013 1098.86,683.013 1099.42,683.013 1099.98,683.013 1100.54,683.013 1101.1,683.013 1101.66,683.013 1102.22,683.013 1102.77,683.013 1103.33,683.013 1103.89,683.013 1104.45,683.013 1105.01,683.013 1105.57,683.013 1106.13,683.013 1106.69,683.013 1107.25,683.013 1107.81,683.013 1108.37,683.013 1108.93,683.013 1109.49,683.013 1110.04,683.013 1110.6,683.013 1111.16,683.013 1111.72,683.013 1112.28,683.013 1112.84,683.013 1113.4,683.013 1113.96,683.013 1114.52,683.013 1115.08,683.013 1115.64,683.013 1116.2,683.013 1116.76,683.013 1117.31,683.013 1117.87,683.013 1118.43,683.013 1118.99,683.013 1119.55,683.013 1120.11,683.013 1120.67,683.013 1121.23,683.013 1121.79,683.013 1122.35,683.013 1122.91,683.013 1123.47,683.013 1124.03,683.013 1124.59,683.013 1125.14,683.013 1125.7,683.013 1126.26,683.013 1126.82,683.013 1127.38,683.013 1127.94,683.013 1128.5,683.013 1129.06,683.013 1129.62,683.013 1130.18,683.013 1130.74,683.013 1131.3,683.013 1131.86,683.013 1132.41,683.013 1132.97,683.013 1133.53,683.013 1134.09,683.013 1134.65,683.013 1135.21,683.013 1135.77,683.013 1136.33,683.013 1136.89,683.013 1137.45,683.013 1138.01,683.013 1138.57,683.013 1139.13,683.013 1139.68,683.013 1140.24,683.013 1140.8,683.013 1141.36,683.013 1141.92,683.013 1142.48,683.013 1143.04,683.013 1143.6,683.013 1144.16,683.013 1144.72,683.013 1145.28,683.013 1145.84,683.013 1146.4,683.013 1146.96,683.013 1147.51,683.013 1148.07,683.013 1148.63,683.013 1149.19,683.013 1149.75,683.013 1150.31,683.013 1150.87,683.013 1151.43,683.013 1151.99,683.013 1152.55,683.013 1153.11,683.013 1153.67,683.013 1154.23,683.013 1154.78,683.013 1155.34,683.013 1155.9,683.013 1156.46,683.013 1157.02,683.013 1157.58,683.013 1158.14,683.013 1158.7,683.013 1159.26,683.013 1159.82,683.013 1160.38,683.013 1160.94,683.013 1161.5,683.013 1162.05,683.013 1162.61,683.013 1163.17,683.013 1163.73,683.013 1164.29,683.013 1164.85,683.013 1165.41,683.013 1165.97,683.013 1166.53,683.013 1167.09,683.013 1167.65,683.013 1168.21,683.013 1168.77,683.013 1169.33,683.013 1169.88,683.013 1170.44,683.013 1171,683.013 1171.56,683.013 1172.12,683.013 1172.68,683.013 1173.24,683.013 1173.8,683.013 1174.36,683.013 1174.92,683.013 1175.48,683.013 1176.04,683.013 1176.6,683.013 1177.15,683.013 1177.71,683.013 1178.27,683.013 1178.83,683.013 1179.39,683.013 1179.95,683.013 1180.51,683.013 1181.07,683.013 1181.63,683.013 1182.19,683.013 1182.75,683.013 1183.31,683.013 1183.87,683.013 1184.43,683.013 1184.98,683.013 1185.54,683.013 1186.1,683.013 1186.66,683.013 1187.22,683.013 1187.78,683.013 1188.34,683.013 1188.9,683.013 1189.46,683.013 1190.02,683.013 1190.58,683.013 1191.14,683.013 1191.7,683.013 1192.25,683.013 1192.81,683.013 1193.37,683.013 1193.93,683.013 1194.49,683.013 1195.05,683.013 1195.61,683.013 1196.17,683.013 1196.73,683.013 1197.29,683.013 1197.85,683.013 1198.41,683.013 1198.97,683.013 1199.52,683.013 1200.08,683.013 1200.64,683.013 1201.2,683.013 1201.76,683.013 1202.32,683.013 1202.88,683.013 1203.44,683.013 1204,683.013 1204.56,683.013 1205.12,683.013 1205.68,683.013 1206.24,683.013 1206.8,683.013 1207.35,683.013 1207.91,683.013 1208.47,683.013 1209.03,683.013 1209.59,683.013 1210.15,683.013 1210.71,683.013 1211.27,683.013 1211.83,683.013 1212.39,683.013 1212.95,683.013 1213.51,683.013 1214.07,683.013 1214.62,683.013 1215.18,683.013 1215.74,683.013 1216.3,683.013 1216.86,683.013 1217.42,683.013 1217.98,683.013 1218.54,683.013 1219.1,683.013 1219.66,683.013 1220.22,683.013 1220.78,683.013 1221.34,683.013 1221.89,683.013 1222.45,683.013 1223.01,683.013 1223.57,683.013 1224.13,683.013 1224.69,683.013 1225.25,683.013 1225.81,683.013 1226.37,683.013 1226.93,683.013 1227.49,683.013 1228.05,683.013 1228.61,683.013 1229.17,683.013 1229.72,683.013 1230.28,683.013 1230.84,683.013 1231.4,683.013 1231.96,683.013 1232.52,683.013 1233.08,683.013 1233.64,683.013 1234.2,683.013 1234.76,683.013 1235.32,683.013 1235.88,683.013 1236.44,683.013 1236.99,683.013 1237.55,683.013 1238.11,683.013 1238.67,683.013 1239.23,683.013 1239.79,683.013 1240.35,683.013 1240.91,683.013 1241.47,683.013 1242.03,683.013 1242.59,683.013 1243.15,683.013 1243.71,683.013 1244.26,683.013 1244.82,683.013 1245.38,683.013 1245.94,683.013 1246.5,683.013 1247.06,683.013 1247.62,683.013 1248.18,683.013 1248.74,683.013 1249.3,683.013 1249.86,683.013 1250.42,683.013 1250.98,683.013 1251.54,683.013 1252.09,683.013 1252.65,683.013 1253.21,683.013 1253.77,683.013 1254.33,683.013 1254.89,683.013 1255.45,683.013 1256.01,683.013 1256.57,683.013 1257.13,683.013 1257.69,683.013 1258.25,683.013 1258.81,683.013 1259.36,683.013 1259.92,683.013 1260.48,683.013 1261.04,683.013 1261.6,683.013 1262.16,683.013 1262.72,683.013 1263.28,683.013 1263.84,683.013 1264.4,683.013 1264.96,683.013 1265.52,683.013 1266.08,683.013 1266.63,683.013 1267.19,683.013 1267.75,683.013 1268.31,683.013 1268.87,683.013 1269.43,683.013 1269.99,683.013 1270.55,683.013 1271.11,683.013 1271.67,683.013 1272.23,683.013 1272.79,683.013 1273.35,683.013 1273.91,683.013 1274.46,683.013 1275.02,683.013 1275.58,683.013 1276.14,683.013 1276.7,683.013 1277.26,683.013 1277.82,683.013 1278.38,683.013 1278.94,683.013 1279.5,683.013 1280.06,683.013 1280.62,683.013 1281.18,683.013 1281.73,683.013 1282.29,683.013 1282.85,683.013 1283.41,683.013 1283.97,683.013 1284.53,683.013 1285.09,683.013 1285.65,683.013 1286.21,683.013 1286.77,683.013 1287.33,683.013 1287.89,683.013 1288.45,683.013 1289,683.013 1289.56,683.013 1290.12,683.013 1290.68,683.013 1291.24,683.013 1291.8,683.013 1292.36,683.013 1292.92,683.013 1293.48,683.013 1294.04,683.013 1294.6,683.013 1295.16,683.013 1295.72,683.013 1296.28,683.013 1296.83,683.013 1297.39,683.013 1297.95,683.013 1298.51,683.013 1299.07,683.013 1299.63,683.013 1300.19,683.013 1300.75,683.013 1301.31,683.013 1301.87,683.013 1302.43,683.013 1302.99,683.013 1303.55,683.013 1304.1,683.013 1304.66,683.013 1305.22,683.013 1305.78,683.013 1306.34,683.013 1306.9,683.013 1307.46,683.013 1308.02,683.013 1308.58,683.013 1309.14,683.013 1309.7,683.013 1310.26,683.013 1310.82,683.013 1311.38,683.013 1311.93,683.013 1312.49,683.013 1313.05,683.013 1313.61,683.013 1314.17,683.013 1314.73,683.013 1315.29,683.013 1315.85,683.013 1316.41,683.013 1316.97,683.013 1317.53,683.013 1318.09,683.013 1318.65,683.013 1319.2,683.013 1319.76,683.013 1320.32,683.013 1320.88,683.013 1321.44,683.013 1322,683.013 1322.56,683.013 1323.12,683.013 1323.68,683.013 1324.24,683.013 1324.8,683.013 1325.36,683.013 1325.92,683.013 1326.47,683.013 1327.03,683.013 1327.59,683.013 1328.15,683.013 1328.71,683.013 1329.27,683.013 1329.83,683.013 1330.39,683.013 1330.95,683.013 1331.51,683.013 1332.07,683.013 1332.63,683.013 1333.19,683.013 1333.75,683.013 1334.3,683.013 1334.86,683.013 1335.42,683.013 1335.98,683.013 1336.54,683.013 1337.1,683.013 1337.66,683.013 1338.22,683.013 1338.78,683.013 1339.34,683.013 1339.9,683.013 1340.46,683.013 1341.02,683.013 1341.57,683.013 1342.13,683.013 1342.69,683.013 1343.25,683.013 1343.81,683.013 1344.37,683.013 1344.93,683.013 1345.49,683.013 1346.05,683.013 1346.61,683.013 1347.17,683.013 1347.73,683.013 1348.29,683.013 1348.84,683.013 1349.4,683.013 1349.96,683.013 1350.52,683.013 1351.08,683.013 1351.64,683.013 1352.2,683.013 1352.76,683.013 1353.32,683.013 1353.88,683.013 1354.44,683.013 1355,683.013 1355.56,683.013 1356.12,683.013 1356.67,683.013 1357.23,683.013 1357.79,683.013 1358.35,683.013 1358.91,683.013 1359.47,683.013 1360.03,683.013 1360.59,683.013 1361.15,683.013 1361.71,683.013 1362.27,683.013 1362.83,683.013 1363.39,683.013 1363.94,683.013 1364.5,683.013 1365.06,683.013 1365.62,683.013 1366.18,683.013 1366.74,683.013 1367.3,683.013 1367.86,683.013 1368.42,683.013 1368.98,683.013 1369.54,683.013 1370.1,683.013 1370.66,683.013 1371.21,683.013 1371.77,683.013 1372.33,683.013 1372.89,683.013 1373.45,683.013 1374.01,683.013 1374.57,683.013 1375.13,683.013 1375.69,683.013 1376.25,683.013 1376.81,683.013 1377.37,683.013 1377.93,683.013 1378.49,683.013 1379.04,683.013 1379.6,683.013 1380.16,683.013 1380.72,683.013 1381.28,683.013 1381.84,683.013 1382.4,683.013 1382.96,683.013 1383.52,683.013 1384.08,683.013 1384.64,683.013 1385.2,683.013 1385.76,683.013 1386.31,683.013 1386.87,683.013 1387.43,683.013 1387.99,683.013 1388.55,683.013 1389.11,683.013 1389.67,683.013 1390.23,683.013 1390.79,683.013 1391.35,683.013 1391.91,683.013 1392.47,683.013 1393.03,683.013 1393.58,683.013 1394.14,683.013 1394.7,683.013 1395.26,683.013 1395.82,683.013 1396.38,683.013 1396.94,683.013 1397.5,683.013 1398.06,683.013 1398.62,683.013 1399.18,683.013 1399.74,683.013 1400.3,683.013 1400.86,683.013 1401.41,683.013 1401.97,683.013 1402.53,683.013 1403.09,683.013 1403.65,683.013 1404.21,683.013 1404.77,683.013 1405.33,683.013 1405.89,683.013 1406.45,683.013 1407.01,683.013 1407.57,683.013 1408.13,683.013 1408.68,683.013 1409.24,683.013 1409.8,683.013 1410.36,683.013 1410.92,683.013 1411.48,683.013 1412.04,683.013 1412.6,683.013 1413.16,683.013 1413.72,683.013 1414.28,683.013 1414.84,683.013 1415.4,683.013 1415.95,683.013 1416.51,683.013 1417.07,683.013 1417.63,683.013 1418.19,683.013 1418.75,683.013 1419.31,683.013 1419.87,683.013 1420.43,683.013 1420.99,683.013 1421.55,683.013 1422.11,683.013 1422.67,683.013 1423.23,683.013 1423.78,683.013 1424.34,683.013 1424.9,683.013 1425.46,683.013 1426.02,683.013 1426.58,683.013 1427.14,683.013 1427.7,683.013 1428.26,683.013 1428.82,683.013 1429.38,683.013 1429.94,683.013 1430.5,683.013 1431.05,683.013 1431.61,683.013 1432.17,683.013 1432.73,683.013 1433.29,683.013 1433.85,683.013 1434.41,683.013 1434.97,683.013 1435.53,683.013 1436.09,683.013 1436.65,683.013 1437.21,683.013 1437.77,683.013 1438.33,683.013 1438.88,683.013 1439.44,683.013 1440,683.013 1440.56,683.013 1441.12,683.013 1441.68,683.013 1442.24,683.013 1442.8,683.013 1443.36,683.013 1443.92,683.013 1444.48,683.013 1445.04,683.013 1445.6,683.013 1446.15,683.013 1446.71,683.013 1447.27,683.013 1447.83,683.013 1448.39,683.013 1448.95,683.013 1449.51,683.013 1450.07,683.013 1450.63,683.013 1451.19,683.013 1451.75,683.013 1452.31,683.013 1452.87,683.013 1453.42,683.013 1453.98,683.013 1454.54,683.013 1455.1,683.013 1455.66,683.013 1456.22,683.013 1456.78,683.013 1457.34,683.013 1457.9,683.013 1458.46,683.013 1459.02,683.013 1459.58,683.013 1460.14,683.013 1460.7,683.013 1461.25,683.013 1461.81,683.013 1462.37,683.013 1462.93,683.013 1463.49,683.013 1464.05,683.013 1464.61,683.013 1465.17,683.013 1465.73,683.013 1466.29,683.013 1466.85,683.013 1467.41,683.013 1467.97,683.013 1468.52,683.013 1469.08,683.013 1469.64,683.013 1470.2,683.013 1470.76,683.013 1471.32,683.013 1471.88,683.013 1472.44,683.013 1473,683.013 1473.56,683.013 1474.12,683.013 1474.68,683.013 1475.24,683.013 1475.79,683.013 1476.35,683.013 1476.91,683.013 1477.47,683.013 1478.03,683.013 1478.59,683.013 1479.15,683.013 1479.71,683.013 1480.27,683.013 1480.83,683.013 1481.39,683.013 1481.95,683.013 1482.51,683.013 1483.07,683.013 1483.62,683.013 1484.18,683.013 1484.74,683.013 1485.3,683.013 1485.86,683.013 1486.42,683.013 1486.98,683.013 1487.54,683.013 1488.1,683.013 1488.66,683.013 1489.22,683.013 1489.78,683.013 1490.34,683.013 1490.89,683.013 1491.45,683.013 1492.01,683.013 1492.57,683.013 1493.13,683.013 1493.69,683.013 1494.25,683.013 1494.81,683.013 1495.37,683.013 1495.93,683.013 1496.49,683.013 1497.05,683.013 1497.61,683.013 1498.16,683.013 1498.72,683.013 1499.28,683.013 1499.84,683.013 1500.4,683.013 1500.96,683.013 1501.52,683.013 1502.08,683.013 1502.64,683.013 1503.2,683.013 1503.76,683.013 1504.32,683.013 1504.88,683.013 1505.44,683.013 1505.99,683.013 1506.55,683.013 1507.11,683.013 1507.67,683.013 1508.23,683.013 1508.79,683.013 1509.35,683.013 1509.91,683.013 1510.47,683.013 1511.03,683.013 1511.59,683.013 1512.15,683.013 1512.71,683.013 1513.26,683.013 1513.82,683.013 1514.38,683.013 1514.94,683.013 1515.5,683.013 1516.06,683.013 1516.62,683.013 1517.18,683.013 1517.74,683.013 1518.3,683.013 1518.86,683.013 1519.42,683.013 1519.98,683.013 1520.53,683.013 1521.09,683.013 1521.65,683.013 1522.21,683.013 1522.77,683.013 1523.33,683.013 1523.89,683.013 1524.45,683.013 1525.01,683.013 1525.57,683.013 1526.13,683.013 1526.69,683.013 1527.25,683.013 1527.81,683.013 1528.36,683.013 1528.92,683.013 1529.48,683.013 1530.04,683.013 1530.6,683.013 1531.16,683.013 1531.72,683.013 1532.28,683.013 1532.84,683.013 1533.4,683.013 1533.96,683.013 1534.52,683.013 1535.08,683.013 1535.63,683.013 1536.19,683.013 1536.75,683.013 1537.31,683.013 1537.87,683.013 1538.43,683.013 1538.99,683.013 1539.55,683.013 1540.11,683.013 1540.67,683.013 1541.23,683.013 1541.79,683.013 1542.35,683.013 1542.9,683.013 1543.46,683.013 1544.02,683.013 1544.58,683.013 1545.14,683.013 1545.7,683.013 1546.26,683.013 1546.82,683.013 1547.38,683.013 1547.94,683.013 1548.5,683.013 1549.06,683.013 1549.62,683.013 1550.18,683.013 1550.73,683.013 1551.29,683.013 1551.85,683.013 1552.41,683.013 1552.97,683.013 1553.53,683.013 1554.09,683.013 1554.65,683.013 1555.21,683.013 1555.77,683.013 1556.33,683.013 1556.89,683.013 1557.45,683.013 1558,683.013 1558.56,683.013 1559.12,683.013 1559.68,683.013 1560.24,683.013 1560.8,683.013 1561.36,683.013 1561.92,683.013 1562.48,683.013 1563.04,683.013 1563.6,683.013 1564.16,683.013 1564.72,683.013 1565.28,683.013 1565.83,683.013 1566.39,683.013 1566.95,683.013 1567.51,683.013 1568.07,683.013 1568.63,683.013 1569.19,683.013 1569.75,683.013 1570.31,683.013 1570.87,683.013 1571.43,683.013 1571.99,683.013 1572.55,683.013 1573.1,683.013 1573.66,683.013 1574.22,683.013 1574.78,683.013 1575.34,683.013 1575.9,683.013 1576.46,683.013 1577.02,683.013 1577.58,683.013 1578.14,683.013 1578.7,683.013 1579.26,683.013 1579.82,683.013 1580.37,683.013 1580.93,683.013 1581.49,683.013 1582.05,683.013 1582.61,683.013 1583.17,683.013 1583.73,683.013 1584.29,683.013 1584.85,683.013 1585.41,683.013 1585.97,683.013 1586.53,683.013 1587.09,683.013 1587.65,683.013 1588.2,683.013 1588.76,683.013 1589.32,683.013 1589.88,683.013 1590.44,683.013 1591,683.013 1591.56,683.013 1592.12,683.013 1592.68,683.013 1593.24,683.013 1593.8,683.013 1594.36,683.013 1594.92,683.013 1595.47,683.013 1596.03,683.013 1596.59,683.013 1597.15,683.013 1597.71,683.013 1598.27,683.013 1598.83,683.013 1599.39,683.013 1599.95,683.013 1600.51,683.013 1601.07,683.013 1601.63,683.013 1602.19,683.013 1602.74,683.013 1603.3,683.013 1603.86,683.013 1604.42,683.013 1604.98,683.013 1605.54,683.013 1606.1,683.013 1606.66,683.013 1607.22,683.013 1607.78,683.013 1608.34,683.013 1608.9,683.013 1609.46,683.013 1610.02,683.013 1610.57,683.013 1611.13,683.013 1611.69,683.013 1612.25,683.013 1612.81,683.013 1613.37,683.013 1613.93,683.013 1614.49,683.013 1615.05,683.013 1615.61,683.013 1616.17,683.013 1616.73,683.013 1617.29,683.013 1617.84,683.013 1618.4,683.013 1618.96,683.013 1619.52,683.013 1620.08,683.013 1620.64,683.013 1621.2,683.013 1621.76,683.013 1622.32,683.013 1622.88,683.013 1623.44,683.013 1624,683.013 1624.56,683.013 1625.11,683.013 1625.67,683.013 1626.23,683.013 1626.79,683.013 1627.35,683.013 1627.91,683.013 1628.47,683.013 1629.03,683.013 1629.59,683.013 1630.15,683.013 1630.71,683.013 1631.27,683.013 1631.83,683.013 1632.39,683.013 1632.94,683.013 1633.5,683.013 1634.06,683.013 1634.62,683.013 1635.18,683.013 1635.74,683.013 1636.3,683.013 1636.86,683.013 1637.42,683.013 1637.98,683.013 1638.54,683.013 1639.1,683.013 1639.66,683.013 1640.21,683.013 1640.77,683.013 1641.33,683.013 1641.89,683.013 1642.45,683.013 1643.01,683.013 1643.57,683.013 1644.13,683.013 1644.69,683.013 1645.25,683.013 1645.81,683.013 1646.37,683.013 1646.93,683.013 1647.48,683.013 1648.04,683.013 1648.6,683.013 1649.16,683.013 1649.72,683.013 1650.28,683.013 1650.84,683.013 1651.4,683.013 1651.96,683.013 1652.52,683.013 1653.08,683.013 1653.64,683.013 1654.2,683.013 1654.76,683.013 1655.31,683.013 1655.87,683.013 1656.43,683.013 1656.99,683.013 1657.55,683.013 1658.11,683.013 1658.67,683.013 1659.23,683.013 1659.79,683.013 1660.35,683.013 1660.91,683.013 1661.47,683.013 1662.03,683.013 1662.58,683.013 1663.14,683.013 1663.7,683.013 1664.26,683.013 1664.82,683.013 1665.38,683.013 1665.94,683.013 1666.5,683.013 1667.06,683.013 1667.62,683.013 1668.18,683.013 1668.74,683.013 1669.3,683.013 1669.85,683.013 1670.41,683.013 1670.97,683.013 1671.53,683.013 1672.09,683.013 1672.65,683.013 1673.21,683.013 1673.77,683.013 1674.33,683.013 1674.89,683.013 1675.45,683.013 1676.01,683.013 1676.57,683.013 1677.13,683.013 1677.68,683.013 1678.24,683.013 1678.8,683.013 1679.36,683.013 1679.92,683.013 1680.48,683.013 1681.04,683.013 1681.6,683.013 1682.16,683.013 1682.72,683.013 1683.28,683.013 1683.84,683.013 1684.4,683.013 1684.95,683.013 1685.51,683.013 1686.07,683.013 1686.63,683.013 1687.19,683.013 1687.75,683.013 1688.31,683.013 1688.87,683.013 1689.43,683.013 1689.99,683.013 1690.55,683.013 1691.11,683.013 1691.67,683.013 1692.23,683.013 1692.78,683.013 1693.34,683.013 1693.9,683.013 1694.46,683.013 1695.02,683.013 1695.58,683.013 1696.14,683.013 1696.7,683.013 1697.26,683.013 1697.82,683.013 1698.38,683.013 1698.94,683.013 1699.5,683.013 1700.05,683.013 1700.61,683.013 1701.17,683.013 1701.73,683.013 1702.29,683.013 1702.85,683.013 1703.41,683.013 1703.97,683.013 1704.53,683.013 1705.09,683.013 1705.65,683.013 1706.21,683.013 1706.77,683.013 1707.32,683.013 1707.88,683.013 1708.44,683.013 1709,683.013 1709.56,683.013 1710.12,683.013 1710.68,683.013 1711.24,683.013 1711.8,683.013 1712.36,683.013 1712.92,683.013 1713.48,683.013 1714.04,683.013 1714.6,683.013 1715.15,683.013 1715.71,683.013 1716.27,683.013 1716.83,683.013 1717.39,683.013 1717.95,683.013 1718.51,683.013 1719.07,683.013 1719.63,683.013 1720.19,683.013 1720.75,683.013 1721.31,683.013 1721.87,683.013 1722.42,683.013 1722.98,683.013 1723.54,683.013 1724.1,683.013 1724.66,683.013 1725.22,683.013 1725.78,683.013 1726.34,683.013 1726.9,683.013 1727.46,683.013 1728.02,683.013 1728.58,683.013 1729.14,683.013 1729.69,683.013 1730.25,683.013 1730.81,683.013 1731.37,683.013 1731.93,683.013 1732.49,683.013 1733.05,683.013 1733.61,683.013 1734.17,683.013 1734.73,683.013 1735.29,683.013 1735.85,683.013 1736.41,683.013 1736.97,683.013 1737.52,683.013 1738.08,683.013 1738.64,683.013 1739.2,683.013 1739.76,683.013 1740.32,683.013 1740.88,683.013 1741.44,683.013 1742,683.013 1742.56,683.013 1743.12,683.013 1743.68,683.013 1744.24,683.013 1744.79,683.013 1745.35,683.013 1745.91,683.013 1746.47,683.013 1747.03,683.013 1747.59,683.013 1748.15,683.013 1748.71,683.013 1749.27,683.013 1749.83,683.013 1750.39,683.013 1750.95,683.013 1751.51,683.013 1752.06,683.013 1752.62,683.013 1753.18,683.013 1753.74,683.013 1754.3,683.013 1754.86,683.013 1755.42,683.013 1755.98,683.013 1756.54,683.013 1757.1,683.013 1757.66,683.013 1758.22,683.013 1758.78,683.013 1759.34,683.013 1759.89,683.013 1760.45,683.013 1761.01,683.013 1761.57,683.013 1762.13,683.013 1762.69,683.013 1763.25,683.013 1763.81,683.013 1764.37,683.013 1764.93,683.013 1765.49,683.013 1766.05,683.013 1766.61,683.013 1767.16,683.013 1767.72,683.013 1768.28,683.013 1768.84,683.013 1769.4,683.013 1769.96,683.013 1770.52,683.013 1771.08,683.013 1771.64,683.013 1772.2,683.013 1772.76,683.013 1773.32,683.013 1773.88,683.013 1774.43,683.013 1774.99,683.013 1775.55,683.013 1776.11,683.013 1776.67,683.013 1777.23,683.013 1777.79,683.013 1778.35,683.013 1778.91,683.013 1779.47,683.013 1780.03,683.013 1780.59,683.013 1781.15,683.013 1781.71,683.013 1782.26,683.013 1782.82,683.013 1783.38,683.013 1783.94,683.013 1784.5,683.013 1785.06,683.013 1785.62,683.013 1786.18,683.013 1786.74,683.013 1787.3,683.013 1787.86,683.013 1788.42,683.013 1788.98,683.013 1789.53,683.013 1790.09,683.013 1790.65,683.013 1791.21,683.013 1791.77,683.013 1792.33,683.013 1792.89,683.013 1793.45,683.013 1794.01,683.013 1794.57,683.013 1795.13,683.013 1795.69,683.013 1796.25,683.013 1796.8,683.013 1797.36,683.013 1797.92,683.013 1798.48,683.013 1799.04,683.013 1799.6,683.013 1800.16,683.013 1800.72,683.013 1801.28,683.013 1801.84,683.013 1802.4,683.013 1802.96,683.013 1803.52,683.013 1804.08,683.013 1804.63,683.013 1805.19,683.013 1805.75,683.013 1806.31,683.013 1806.87,683.013 1807.43,683.013 1807.99,683.013 1808.55,683.013 1809.11,683.013 1809.67,683.013 1810.23,683.013 1810.79,683.013 1811.35,683.013 1811.9,683.013 1812.46,683.013 1813.02,683.013 1813.58,683.013 1814.14,683.013 1814.7,683.013 1815.26,683.013 1815.82,683.013 1816.38,683.013 1816.94,683.013 1817.5,683.013 1818.06,683.013 1818.62,683.013 1819.18,683.013 1819.73,683.013 1820.29,683.013 1820.85,683.013 1821.41,683.013 1821.97,683.013 1822.53,683.013 1823.09,683.013 1823.65,683.013 1824.21,683.013 1824.77,683.013 1825.33,683.013 1825.89,683.013 1826.45,683.013 1827,683.013 1827.56,683.013 1828.12,683.013 1828.68,683.013 1829.24,683.013 1829.8,683.013 1830.36,683.013 1830.92,683.013 1831.48,683.013 1832.04,683.013 1832.6,683.013 1833.16,683.013 1833.72,683.013 1834.27,683.013 1834.83,683.013 1835.39,683.013 1835.95,683.013 1836.51,683.013 1837.07,683.013 1837.63,683.013 1838.19,683.013 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.026760319211026 ± 0.02340971127561719\nProjected Energy: -4.012205262078622 ± (0.005693131599544543, 0.005586592520464784)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.453963</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.7232e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.0329e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.957e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.352e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.855e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.106e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
