var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip890\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip890)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip891\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip890)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip892\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip890)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1261.87 2211.02,1261.87 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1004.14 2211.02,1004.14 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.406 2211.02,746.406 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.675 2211.02,488.675 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.944 2211.02,230.944 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1261.87 423.181,1261.87 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1004.14 423.181,1004.14 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.406 423.181,746.406 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.675 423.181,488.675 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.944 423.181,230.944 \"/>\n<path clip-path=\"url(#clip890)\" d=\"M356.339 1247.67 Q352.728 1247.67 350.899 1251.23 Q349.094 1254.77 349.094 1261.9 Q349.094 1269.01 350.899 1272.57 Q352.728 1276.12 356.339 1276.12 Q359.973 1276.12 361.779 1272.57 Q363.608 1269.01 363.608 1261.9 Q363.608 1254.77 361.779 1251.23 Q359.973 1247.67 356.339 1247.67 M356.339 1243.96 Q362.149 1243.96 365.205 1248.57 Q368.284 1253.15 368.284 1261.9 Q368.284 1270.63 365.205 1275.24 Q362.149 1279.82 356.339 1279.82 Q350.529 1279.82 347.45 1275.24 Q344.395 1270.63 344.395 1261.9 Q344.395 1253.15 347.45 1248.57 Q350.529 1243.96 356.339 1243.96 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M290.043 1017.48 L306.363 1017.48 L306.363 1021.42 L284.418 1021.42 L284.418 1017.48 Q287.08 1014.73 291.664 1010.1 Q296.27 1005.45 297.451 1004.1 Q299.696 1001.58 300.576 999.843 Q301.478 998.084 301.478 996.394 Q301.478 993.64 299.534 991.904 Q297.613 990.168 294.511 990.168 Q292.312 990.168 289.858 990.931 Q287.427 991.695 284.65 993.246 L284.65 988.524 Q287.474 987.39 289.927 986.811 Q292.381 986.232 294.418 986.232 Q299.789 986.232 302.983 988.918 Q306.177 991.603 306.177 996.094 Q306.177 998.223 305.367 1000.14 Q304.58 1002.04 302.474 1004.64 Q301.895 1005.31 298.793 1008.52 Q295.691 1011.72 290.043 1017.48 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M316.224 986.857 L334.58 986.857 L334.58 990.793 L320.506 990.793 L320.506 999.265 Q321.524 998.918 322.543 998.756 Q323.562 998.57 324.58 998.57 Q330.367 998.57 333.747 1001.74 Q337.126 1004.91 337.126 1010.33 Q337.126 1015.91 333.654 1019.01 Q330.182 1022.09 323.862 1022.09 Q321.687 1022.09 319.418 1021.72 Q317.173 1021.35 314.765 1020.61 L314.765 1015.91 Q316.849 1017.04 319.071 1017.6 Q321.293 1018.15 323.77 1018.15 Q327.774 1018.15 330.112 1016.05 Q332.45 1013.94 332.45 1010.33 Q332.45 1006.72 330.112 1004.61 Q327.774 1002.51 323.77 1002.51 Q321.895 1002.51 320.02 1002.92 Q318.168 1003.34 316.224 1004.22 L316.224 986.857 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M356.339 989.936 Q352.728 989.936 350.899 993.501 Q349.094 997.043 349.094 1004.17 Q349.094 1011.28 350.899 1014.84 Q352.728 1018.39 356.339 1018.39 Q359.973 1018.39 361.779 1014.84 Q363.608 1011.28 363.608 1004.17 Q363.608 997.043 361.779 993.501 Q359.973 989.936 356.339 989.936 M356.339 986.232 Q362.149 986.232 365.205 990.839 Q368.284 995.422 368.284 1004.17 Q368.284 1012.9 365.205 1017.51 Q362.149 1022.09 356.339 1022.09 Q350.529 1022.09 347.45 1017.51 Q344.395 1012.9 344.395 1004.17 Q344.395 995.422 347.45 990.839 Q350.529 986.232 356.339 986.232 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M286.062 729.126 L304.418 729.126 L304.418 733.061 L290.344 733.061 L290.344 741.533 Q291.363 741.186 292.381 741.024 Q293.4 740.839 294.418 740.839 Q300.205 740.839 303.585 744.01 Q306.964 747.182 306.964 752.598 Q306.964 758.177 303.492 761.279 Q300.02 764.357 293.701 764.357 Q291.525 764.357 289.256 763.987 Q287.011 763.617 284.603 762.876 L284.603 758.177 Q286.687 759.311 288.909 759.867 Q291.131 760.422 293.608 760.422 Q297.613 760.422 299.951 758.316 Q302.288 756.209 302.288 752.598 Q302.288 748.987 299.951 746.881 Q297.613 744.774 293.608 744.774 Q291.733 744.774 289.858 745.191 Q288.006 745.608 286.062 746.487 L286.062 729.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M326.177 732.205 Q322.566 732.205 320.737 735.77 Q318.932 739.311 318.932 746.441 Q318.932 753.547 320.737 757.112 Q322.566 760.654 326.177 760.654 Q329.811 760.654 331.617 757.112 Q333.446 753.547 333.446 746.441 Q333.446 739.311 331.617 735.77 Q329.811 732.205 326.177 732.205 M326.177 728.501 Q331.987 728.501 335.043 733.108 Q338.122 737.691 338.122 746.441 Q338.122 755.168 335.043 759.774 Q331.987 764.357 326.177 764.357 Q320.367 764.357 317.288 759.774 Q314.233 755.168 314.233 746.441 Q314.233 737.691 317.288 733.108 Q320.367 728.501 326.177 728.501 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M356.339 732.205 Q352.728 732.205 350.899 735.77 Q349.094 739.311 349.094 746.441 Q349.094 753.547 350.899 757.112 Q352.728 760.654 356.339 760.654 Q359.973 760.654 361.779 757.112 Q363.608 753.547 363.608 746.441 Q363.608 739.311 361.779 735.77 Q359.973 732.205 356.339 732.205 M356.339 728.501 Q362.149 728.501 365.205 733.108 Q368.284 737.691 368.284 746.441 Q368.284 755.168 365.205 759.774 Q362.149 764.357 356.339 764.357 Q350.529 764.357 347.45 759.774 Q344.395 755.168 344.395 746.441 Q344.395 737.691 347.45 733.108 Q350.529 728.501 356.339 728.501 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M284.835 471.395 L307.057 471.395 L307.057 473.386 L294.511 505.955 L289.627 505.955 L301.432 475.33 L284.835 475.33 L284.835 471.395 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M316.224 471.395 L334.58 471.395 L334.58 475.33 L320.506 475.33 L320.506 483.802 Q321.524 483.455 322.543 483.293 Q323.562 483.108 324.58 483.108 Q330.367 483.108 333.747 486.279 Q337.126 489.45 337.126 494.867 Q337.126 500.446 333.654 503.547 Q330.182 506.626 323.862 506.626 Q321.687 506.626 319.418 506.256 Q317.173 505.885 314.765 505.145 L314.765 500.446 Q316.849 501.58 319.071 502.135 Q321.293 502.691 323.77 502.691 Q327.774 502.691 330.112 500.584 Q332.45 498.478 332.45 494.867 Q332.45 491.256 330.112 489.149 Q327.774 487.043 323.77 487.043 Q321.895 487.043 320.02 487.46 Q318.168 487.876 316.224 488.756 L316.224 471.395 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M356.339 474.474 Q352.728 474.474 350.899 478.038 Q349.094 481.58 349.094 488.71 Q349.094 495.816 350.899 499.381 Q352.728 502.922 356.339 502.922 Q359.973 502.922 361.779 499.381 Q363.608 495.816 363.608 488.71 Q363.608 481.58 361.779 478.038 Q359.973 474.474 356.339 474.474 M356.339 470.77 Q362.149 470.77 365.205 475.376 Q368.284 479.96 368.284 488.71 Q368.284 497.436 365.205 502.043 Q362.149 506.626 356.339 506.626 Q350.529 506.626 347.45 502.043 Q344.395 497.436 344.395 488.71 Q344.395 479.96 347.45 475.376 Q350.529 470.77 356.339 470.77 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M256.664 244.288 L264.303 244.288 L264.303 217.923 L255.992 219.589 L255.992 215.33 L264.256 213.664 L268.932 213.664 L268.932 244.288 L276.571 244.288 L276.571 248.224 L256.664 248.224 L256.664 244.288 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M296.015 216.742 Q292.404 216.742 290.576 220.307 Q288.77 223.849 288.77 230.978 Q288.77 238.085 290.576 241.649 Q292.404 245.191 296.015 245.191 Q299.65 245.191 301.455 241.649 Q303.284 238.085 303.284 230.978 Q303.284 223.849 301.455 220.307 Q299.65 216.742 296.015 216.742 M296.015 213.039 Q301.826 213.039 304.881 217.645 Q307.96 222.228 307.96 230.978 Q307.96 239.705 304.881 244.312 Q301.826 248.895 296.015 248.895 Q290.205 248.895 287.127 244.312 Q284.071 239.705 284.071 230.978 Q284.071 222.228 287.127 217.645 Q290.205 213.039 296.015 213.039 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M326.177 216.742 Q322.566 216.742 320.737 220.307 Q318.932 223.849 318.932 230.978 Q318.932 238.085 320.737 241.649 Q322.566 245.191 326.177 245.191 Q329.811 245.191 331.617 241.649 Q333.446 238.085 333.446 230.978 Q333.446 223.849 331.617 220.307 Q329.811 216.742 326.177 216.742 M326.177 213.039 Q331.987 213.039 335.043 217.645 Q338.122 222.228 338.122 230.978 Q338.122 239.705 335.043 244.312 Q331.987 248.895 326.177 248.895 Q320.367 248.895 317.288 244.312 Q314.233 239.705 314.233 230.978 Q314.233 222.228 317.288 217.645 Q320.367 213.039 326.177 213.039 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M356.339 216.742 Q352.728 216.742 350.899 220.307 Q349.094 223.849 349.094 230.978 Q349.094 238.085 350.899 241.649 Q352.728 245.191 356.339 245.191 Q359.973 245.191 361.779 241.649 Q363.608 238.085 363.608 230.978 Q363.608 223.849 361.779 220.307 Q359.973 216.742 356.339 216.742 M356.339 213.039 Q362.149 213.039 365.205 217.645 Q368.284 222.228 368.284 230.978 Q368.284 239.705 365.205 244.312 Q362.149 248.895 356.339 248.895 Q350.529 248.895 347.45 244.312 Q344.395 239.705 344.395 230.978 Q344.395 222.228 347.45 217.645 Q350.529 213.039 356.339 213.039 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip892)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.944 4017.76,230.944 \"/>\n<polyline clip-path=\"url(#clip892)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.47 456.554,1249.37 457.123,1249.26 457.691,1249.11 458.259,1248.89 458.828,1248.5 459.396,1248.09 459.964,1247.59 460.533,1247.06 461.101,1246.45 461.669,1245.74 462.238,1244.95 462.806,1244.08 463.375,1243.12 463.943,1241.03 464.511,1239.89 465.08,1238.62 465.648,1237.25 466.216,1234.73 466.785,1233.15 467.353,1231.42 467.921,1229.58 468.49,1226.55 469.058,1224.42 469.626,1222.13 470.195,1219.66 470.763,1217.06 471.331,1213.24 471.9,1210.29 472.468,1206.08 473.036,1202.76 473.605,1199.28 474.173,1195.57 474.741,1191.66 475.31,1186.49 475.878,1181.09 476.446,1175.51 477.015,1170.76 477.583,1163.74 478.152,1157.39 478.72,1150.92 479.288,1145.24 479.857,1137.32 480.425,1131.16 480.993,1123.81 481.562,1117.23 482.13,1109.41 482.698,1100.37 483.267,1092.18 483.835,1084.8 484.403,1075.19 484.972,1063.41 485.54,1055.82 486.108,1046.93 486.677,1038.85 487.245,1030.45 487.813,1018.76 488.382,1010.32 488.95,999.556 489.518,989.824 490.087,979.93 490.655,968.842 491.224,958.654 491.792,946.266 492.36,934.862 492.929,922.516 493.497,911.185 494.065,900.901 494.634,890.666 495.202,881.171 495.77,869.703 496.339,859.321 496.907,847.89 497.475,837.453 498.044,828.251 498.612,818.98 499.18,808.529 499.749,797.012 500.317,787.791 500.885,777.546 501.454,765.295 502.022,753.093 502.59,742.308 503.159,732.684 503.727,720.825 504.295,711.066 504.864,701.481 505.432,689.839 506.001,677.558 506.569,667.437 507.137,659.623 507.706,649.863 508.274,637.111 508.842,628.798 509.411,620.655 509.979,612.646 510.547,604.449 511.116,597.507 511.684,587.505 512.252,575.737 512.821,568.479 513.389,560.364 513.957,554.252 514.526,548.405 515.094,542.546 515.662,535.556 516.231,529.746 516.799,522.965 517.367,514.228 517.936,509.843 518.504,504.437 519.072,498.008 519.641,492.964 520.209,486.754 520.778,479.765 521.346,473.884 521.914,469.062 522.483,463.217 523.051,453.5 523.619,449.252 524.188,444.948 524.756,438.68 525.324,431.622 525.893,423.638 526.461,418.001 527.029,414.506 527.598,412.255 528.166,409.999 528.734,403.571 529.303,400.409 529.871,396.908 530.439,392.802 531.008,390.809 531.576,385.542 532.144,382.502 532.713,377.631 533.281,373.806 533.85,372.234 534.418,369.669 534.986,367.036 535.555,364.582 536.123,360.112 536.691,357.575 537.26,353.051 537.828,348.627 538.396,347.726 538.965,345.413 539.533,342.256 540.101,340.121 540.67,338.862 541.238,334.71 541.806,333.709 542.375,330.665 542.943,327.734 543.511,326.991 544.08,324.261 544.648,320.394 545.216,316.743 545.785,315.302 546.353,312.981 546.921,309.758 547.49,307.503 548.058,305.353 548.627,303.303 549.195,301.206 549.763,300.421 550.332,298.479 550.9,294.427 551.468,292.672 552.037,290.947 552.605,291.354 553.173,287.491 553.742,284.933 554.31,283.767 554.878,283.236 555.447,281.71 556.015,280.215 556.583,280.805 557.152,280.457 557.72,279.957 558.288,278.315 558.857,277.952 559.425,276.412 559.993,277.988 560.562,276.119 561.13,276.667 561.698,276.073 562.267,274.518 562.835,274.057 563.404,273.492 563.972,273.028 564.54,272.247 565.109,268.731 565.677,267.655 566.245,268.2 566.814,267.89 567.382,266.408 567.95,264.925 568.519,265.496 569.087,263.966 569.655,263.703 570.224,263.433 570.792,262.463 571.36,263.288 571.929,263.119 572.497,262.719 573.065,260.298 573.634,257.983 574.202,254.997 574.77,256.184 575.339,254.981 575.907,255.045 576.476,254.925 577.044,254.702 577.612,255.667 578.181,253.48 578.749,253.439 579.317,252.486 579.886,252.727 580.454,251.994 581.022,251.975 581.591,249.89 582.159,250.148 582.727,249.26 583.296,251.438 583.864,250.294 584.432,250.332 585.001,251.156 585.569,250.048 586.137,249.077 586.706,248.136 587.274,246.348 587.842,245.651 588.411,247.216 588.979,245.494 589.547,247.999 590.116,247.24 590.684,248.568 591.253,248.519 591.821,249.616 592.389,248.613 592.958,248.538 593.526,249.807 594.094,246.739 594.663,245.862 595.231,243.846 595.799,242.076 596.368,241.457 596.936,241.861 597.504,241.024 598.073,242.476 598.641,244.717 599.209,244.994 599.778,243.174 600.346,244.568 600.914,245.702 601.483,246.941 602.051,246.854 602.619,247.064 603.188,244.883 603.756,246.132 604.325,242.922 604.893,242.942 605.461,243.001 606.03,245.126 606.598,244.058 607.166,243.916 607.735,243.66 608.303,242.731 608.871,239.478 609.44,239.873 610.008,241.185 610.576,240.276 611.145,239.666 611.713,240.021 612.281,242.273 612.85,241.238 613.418,240.207 613.986,239.541 614.555,239.634 615.123,236.727 615.691,235.952 616.26,238.584 616.828,235.765 617.396,236.38 617.965,235.773 618.533,238.467 619.102,237.807 619.67,240.229 620.238,237.347 620.807,236.887 621.375,236.214 621.943,236.625 622.512,238.314 623.08,239.632 623.648,237.822 624.217,237.168 624.785,237.413 625.353,238.944 625.922,240.071 626.49,237.267 627.058,239.568 627.627,238.848 628.195,239.165 628.763,240.257 629.332,239.411 629.9,239.411 630.468,239.4 631.037,239.651 631.605,241.714 632.173,241.762 632.742,243.51 633.31,243.24 633.879,245.208 634.447,244.904 635.015,242.396 635.584,242.267 636.152,243.178 636.72,243.035 637.289,240.698 637.857,241.66 638.425,241.687 638.994,243.921 639.562,245.623 640.13,246.087 640.699,245.619 641.267,244.248 641.835,241.857 642.404,241.715 642.972,238.344 643.54,237.342 644.109,237.405 644.677,238.497 645.245,239.53 645.814,238.312 646.382,239.18 646.951,239.123 647.519,236.973 648.087,238.141 648.656,238.253 649.224,238.036 649.792,236.936 650.361,237.994 650.929,240.098 651.497,238.739 652.066,239.667 652.634,242.533 653.202,242.063 653.771,241.82 654.339,241.612 654.907,242.223 655.476,240.785 656.044,240.357 656.612,239.411 657.181,238.082 657.749,236.783 658.317,236.483 658.886,234.374 659.454,235.698 660.022,233.59 660.591,233.823 661.159,234.989 661.728,234.198 662.296,234.167 662.864,233.252 663.433,232.423 664.001,233.708 664.569,234.982 665.138,234.952 665.706,233.071 666.274,233.18 666.843,232.336 667.411,231.409 667.979,228.595 668.548,229.205 669.116,229.727 669.684,230.115 670.253,228.319 670.821,230.852 671.389,232.085 671.958,230.47 672.526,233.043 673.094,233.344 673.663,230.466 674.231,231.023 674.799,230.542 675.368,232.129 675.936,232.465 676.505,232.616 677.073,233.033 677.641,231.11 678.21,230.402 678.778,230.978 679.346,230.407 679.915,231.133 680.483,232.472 681.051,232.568 681.62,232.975 682.188,233.283 682.756,234.496 683.325,233.602 683.893,231.954 684.461,232.39 685.03,231.61 685.598,233.923 686.166,232.757 686.735,234.292 687.303,234.309 687.871,232.349 688.44,235.781 689.008,234.881 689.577,234.942 690.145,235.121 690.713,233.04 691.282,230.322 691.85,229.617 692.418,229.009 692.987,230.674 693.555,231.013 694.123,231.485 694.692,233.963 695.26,235.359 695.828,237.535 696.397,239.539 696.965,239.18 697.533,239.977 698.102,242.623 698.67,241.962 699.238,242.576 699.807,241.939 700.375,241.22 700.943,242.835 701.512,241.042 702.08,240.525 702.648,239.251 703.217,237.784 703.785,237.596 704.354,237.325 704.922,237.2 705.49,236.931 706.059,235.714 706.627,236.53 707.195,236.441 707.764,235.348 708.332,236.023 708.9,235.728 709.469,236.629 710.037,236.455 710.605,235.385 711.174,235.493 711.742,237.368 712.31,236.931 712.879,236.644 713.447,236.516 714.015,235.447 714.584,234.176 715.152,232.023 715.72,231.003 716.289,232.104 716.857,233.329 717.425,231.217 717.994,229.305 718.562,227.523 719.131,226.939 719.699,224.145 720.267,220.762 720.836,220.562 721.404,222.772 721.972,226.786 722.541,224.375 723.109,225.062 723.677,226.814 724.246,228.524 724.814,228.096 725.382,227.49 725.951,227.944 726.519,228.471 727.087,228.925 727.656,230.359 728.224,231.717 728.792,231.967 729.361,232.169 729.929,233.375 730.497,233.501 731.066,231.487 731.634,229.523 732.203,232.113 732.771,235.42 733.339,236.456 733.908,234.49 734.476,235.571 735.044,237.576 735.613,235.327 736.181,237.433 736.749,236.173 737.318,233.143 737.886,230.07 738.454,229.452 739.023,228.755 739.591,229.205 740.159,230.623 740.728,230.977 741.296,232.347 741.864,233.479 742.433,231.156 743.001,233.447 743.569,232.454 744.138,231.57 744.706,230.88 745.274,233.277 745.843,232.127 746.411,233.278 746.98,232.395 747.548,235.671 748.116,234.661 748.685,233.759 749.253,233.849 749.821,235.933 750.39,236.094 750.958,234.897 751.526,235.196 752.095,236.199 752.663,237.319 753.231,237.008 753.8,236.735 754.368,235.47 754.936,236.325 755.505,236.266 756.073,235.162 756.641,233.967 757.21,233.708 757.778,232.65 758.346,233.81 758.915,234.832 759.483,234.876 760.052,234.788 760.62,233.436 761.188,232.24 761.757,232.339 762.325,231.413 762.893,229.695 763.462,228.033 764.03,228.617 764.598,229.103 765.167,231.426 765.735,233.716 766.303,232.615 766.872,233.559 767.44,232.413 768.008,233.325 768.577,232.048 769.145,232.146 769.713,231.103 770.282,232.381 770.85,230.287 771.418,230.419 771.987,230.579 772.555,231.849 773.123,233.155 773.692,233.999 774.26,232.782 774.829,232.863 775.397,233.696 775.965,235.632 776.534,236.52 777.102,236.426 777.67,235.275 778.239,235.085 778.807,235.006 779.375,234.903 779.944,232.997 780.512,235.187 781.08,233.753 781.649,234.537 782.217,232.576 782.785,233.583 783.354,231.542 783.922,230.51 784.49,232.441 785.059,232.504 785.627,233.552 786.195,233.48 786.764,233.384 787.332,233.242 787.9,231.297 788.469,232.47 789.037,231.442 789.606,233.575 790.174,232.33 790.742,233.25 791.311,233.165 791.879,235.343 792.447,235.28 793.016,234.899 793.584,233.47 794.152,232.472 794.721,231.48 795.289,231.713 795.857,230.522 796.426,229.619 796.994,231.041 797.562,230.202 798.131,230.369 798.699,231.625 799.267,231.812 799.836,234.012 800.404,232.936 800.972,230.848 801.541,231.094 802.109,232.004 802.678,233.108 803.246,232.186 803.814,232.286 804.383,228.991 804.951,228.092 805.519,228.305 806.088,229.505 806.656,231.638 807.224,230.653 807.793,229.643 808.361,229.802 808.929,231.007 809.498,232.965 810.066,232.896 810.634,233.868 811.203,230.608 811.771,228.67 812.339,230.08 812.908,231.252 813.476,230.261 814.044,230.427 814.613,230.729 815.181,230.924 815.749,230.965 816.318,229.873 816.886,231.97 817.455,230.911 818.023,232.124 818.591,232.218 819.16,233.468 819.728,233.439 820.296,232.675 820.865,231.567 821.433,233.504 822.001,234.253 822.57,236.261 823.138,236.01 823.706,234.659 824.275,233.114 824.843,231.991 825.411,231.904 825.98,232.016 826.548,229.963 827.116,230.074 827.685,230.151 828.253,231.601 828.821,230.329 829.39,231.319 829.958,231.448 830.526,230.419 831.095,229.506 831.663,230.722 832.232,230.838 832.8,228.918 833.368,227.081 833.937,227.337 834.505,227.72 835.073,226.789 835.642,228.313 836.21,228.332 836.778,227.645 837.347,225.809 837.915,227.025 838.483,224.44 839.052,225.069 839.62,226.551 840.188,229.075 840.757,228.177 841.325,228.452 841.893,229.709 842.462,231.122 843.03,228.331 843.598,225.714 844.167,227.241 844.735,226.867 845.304,226.404 845.872,228.047 846.44,228.353 847.009,228.967 847.577,229.309 848.145,231.621 848.714,231.69 849.282,230.74 849.85,230.798 850.419,232.155 850.987,234.212 851.555,234.321 852.124,234.332 852.692,234.239 853.26,233.175 853.829,235.053 854.397,235.863 854.965,236.661 855.534,237.46 856.102,238.176 856.67,238.076 857.239,237.895 857.807,237.852 858.375,235.409 858.944,235.181 859.512,233.877 860.081,233.802 860.649,234.75 861.217,233.573 861.786,233.37 862.354,233.14 862.922,234.354 863.491,235.188 864.059,234.253 864.627,233.241 865.196,237.293 865.764,234.087 866.332,234.965 866.901,233.82 867.469,235.691 868.037,237.49 868.606,238.262 869.174,238.842 869.742,237.539 870.311,236.84 870.879,235.614 871.447,234.284 872.016,234.111 872.584,236.119 873.152,234.561 873.721,234.426 874.289,234.083 874.858,234.132 875.426,231.9 875.994,232.846 876.563,231.952 877.131,231.969 877.699,230.983 878.268,228.929 878.836,228.95 879.404,229.029 879.973,227.323 880.541,228.884 881.109,230.125 881.678,231.142 882.246,231.149 882.814,230.204 883.383,230.425 883.951,229.568 884.519,228.614 885.088,230.991 885.656,231.019 886.224,231.099 886.793,233.055 887.361,232.995 887.93,233.077 888.498,232.938 889.066,232.735 889.635,233.636 890.203,232.51 890.771,231.346 891.34,229.46 891.908,228.566 892.476,226.738 893.045,228.095 893.613,231.466 894.181,231.491 894.75,231.532 895.318,232.564 895.886,233.395 896.455,233.196 897.023,233.056 897.591,233.798 898.16,234.721 898.728,236.62 899.296,234.241 899.865,232.9 900.433,232.634 901.001,233.739 901.57,233.507 902.138,232.243 902.707,232.196 903.275,232.125 903.843,232.116 904.412,232.026 904.98,231.949 905.548,229.818 906.117,227.907 906.685,230.048 907.253,228.937 907.822,230.099 908.39,230.108 908.958,230.158 909.527,230.109 910.095,231.372 910.663,233.126 911.232,233.212 911.8,234.133 912.368,233.847 912.937,233.575 913.505,233.75 914.073,233.315 914.642,233.2 915.21,233.756 915.779,232.607 916.347,234.424 916.915,234.119 917.484,233.875 918.052,235.605 918.62,236.303 919.189,236.772 919.757,235.377 920.325,236.194 920.894,236.796 921.462,234.276 922.03,234.89 922.599,233.464 923.167,234.219 923.735,232.835 924.304,231.572 924.872,232.385 925.44,231.168 926.009,231.1 926.577,230.234 927.145,230.225 927.714,228.302 928.282,230.286 928.85,232.284 929.419,231.143 929.987,230.089 930.556,230.1 931.124,232.183 931.692,231.993 932.261,235.052 932.829,233.641 933.397,232.113 933.966,236.135 934.534,234.81 935.102,233.491 935.671,229.877 936.239,229.671 936.807,229.52 937.376,230.391 937.944,228.391 938.512,227.598 939.081,226.7 939.649,225.916 940.217,226.47 940.786,228.822 941.354,231.842 941.922,231.506 942.491,230.416 943.059,230.39 943.627,228.316 944.196,227.553 944.764,225.83 945.333,225.891 945.901,228.56 946.469,231.841 947.038,231.515 947.606,231.354 948.174,230.464 948.743,230.557 949.311,230.721 949.879,229.552 950.448,230.517 951.016,230.508 951.584,231.37 952.153,232.345 952.721,233.149 953.289,232.881 953.858,231.777 954.426,233.785 954.994,232.518 955.563,228.297 956.131,228.435 956.699,226.697 957.268,225.879 957.836,226.217 958.405,227.487 958.973,226.603 959.541,225.77 960.11,224.236 960.678,225.635 961.246,226.042 961.815,225.182 962.383,226.469 962.951,221.738 963.52,222.31 964.088,219.895 964.656,222.655 965.225,223.336 965.793,224.903 966.361,224.628 966.93,225.144 967.498,225.736 968.066,228.488 968.635,230.92 969.203,233.269 969.771,233.5 970.34,233.366 970.908,233.221 971.476,234.028 972.045,232.897 972.613,234.814 973.182,234.861 973.75,232.924 974.318,235.262 974.887,236.205 975.455,236.913 976.023,237.602 976.592,238.14 977.16,237.734 977.728,237.251 978.297,237.938 978.865,236.351 979.433,237.013 980.002,235.476 980.57,232.122 981.138,231.161 981.707,230.123 982.275,231.169 982.843,231.257 983.412,229.215 983.98,228.34 984.548,227.625 985.117,225.93 985.685,227.089 986.253,226.383 986.822,227.751 987.39,228.273 987.959,229.757 988.527,229.927 989.095,230.103 989.664,229.135 990.232,230.29 990.8,231.336 991.369,233.685 991.937,234.598 992.505,231.357 993.074,230.173 993.642,230.262 994.21,229.341 994.779,231.644 995.347,231.569 995.915,234.869 996.484,234.491 997.052,235.439 997.62,234.409 998.189,233.173 998.757,232.029 999.325,231.094 999.894,233.294 1000.46,231.296 1001.03,229.987 1001.6,228.17 1002.17,228.456 1002.74,229.654 1003.3,228.73 1003.87,229 1004.44,228.14 1005.01,227.323 1005.58,227.534 1006.15,228.869 1006.71,227.928 1007.28,228.058 1007.85,229.11 1008.42,228.167 1008.99,229.461 1009.56,226.377 1010.12,226.747 1010.69,225.985 1011.26,226.357 1011.83,227.743 1012.4,226.72 1012.97,225.018 1013.53,225.704 1014.1,222.125 1014.67,221.877 1015.24,223.656 1015.81,223.093 1016.38,223.825 1016.94,225.608 1017.51,228.205 1018.08,228.696 1018.65,230.212 1019.22,232.622 1019.79,232.74 1020.35,233.852 1020.92,236.767 1021.49,238.59 1022.06,238.147 1022.63,237.749 1023.2,236.714 1023.76,239.619 1024.33,238.146 1024.9,238.905 1025.47,239.506 1026.04,237.914 1026.61,234.477 1027.17,234.257 1027.74,232.119 1028.31,233.245 1028.88,235.339 1029.45,235.011 1030.02,235.741 1030.58,234.427 1031.15,234.457 1031.72,233.051 1032.29,232.961 1032.86,231.772 1033.43,233.932 1033.99,232.794 1034.56,233.566 1035.13,235.481 1035.7,234.091 1036.27,234.997 1036.84,235.807 1037.4,234.396 1037.97,235.114 1038.54,231.817 1039.11,230.597 1039.68,231.554 1040.25,230.507 1040.81,230.381 1041.38,229.451 1041.95,229.352 1042.52,232.585 1043.09,231.605 1043.66,230.542 1044.22,231.729 1044.79,230.557 1045.36,230.814 1045.93,231.836 1046.5,231.842 1047.07,230.756 1047.63,231.773 1048.2,229.704 1048.77,229.754 1049.34,233.053 1049.91,233.917 1050.48,233.799 1051.05,234.553 1051.61,234.286 1052.18,234.018 1052.75,236.917 1053.32,236.537 1053.89,236.025 1054.46,234.673 1055.02,235.45 1055.59,234.956 1056.16,233.766 1056.73,232.438 1057.3,231.255 1057.87,230.999 1058.43,231.834 1059,229.553 1059.57,227.367 1060.14,228.637 1060.71,227.933 1061.28,229.064 1061.84,229.079 1062.41,230.228 1062.98,229.245 1063.55,230.28 1064.12,231.224 1064.69,231.261 1065.25,232.234 1065.82,231.324 1066.39,230.24 1066.96,231.419 1067.53,231.292 1068.1,231.307 1068.66,230.968 1069.23,230.837 1069.8,230.661 1070.37,230.639 1070.94,231.788 1071.51,230.601 1072.07,229.488 1072.64,229.693 1073.21,228.708 1073.78,228.861 1074.35,228.964 1074.92,230.007 1075.48,228.025 1076.05,229.226 1076.62,229.327 1077.19,228.642 1077.76,230.931 1078.33,230.065 1078.89,229.295 1079.46,230.184 1080.03,231.14 1080.6,231.973 1081.17,231.89 1081.74,231.808 1082.3,231.525 1082.87,231.385 1083.44,233.332 1084.01,232.373 1084.58,232.179 1085.15,231.073 1085.71,229.885 1086.28,229.011 1086.85,229.315 1087.42,229.517 1087.99,231.823 1088.56,236.084 1089.12,234.51 1089.69,234.328 1090.26,234.083 1090.83,233.903 1091.4,233.737 1091.97,233.394 1092.53,231.114 1093.1,229.983 1093.67,231.12 1094.24,232.036 1094.81,232.043 1095.38,231.989 1095.94,232.193 1096.51,228.975 1097.08,228.135 1097.65,225.217 1098.22,226.726 1098.79,228.232 1099.35,229.407 1099.92,229.488 1100.49,229.666 1101.06,227.477 1101.63,226.676 1102.2,226.97 1102.76,226.297 1103.33,227.633 1103.9,230.068 1104.47,229.359 1105.04,227.416 1105.61,229.704 1106.17,229.777 1106.74,231.997 1107.31,231.928 1107.88,229.695 1108.45,230.759 1109.02,230.92 1109.58,230.987 1110.15,231.877 1110.72,230.967 1111.29,232.95 1111.86,231.808 1112.43,231.745 1112.99,232.975 1113.56,231.012 1114.13,231.871 1114.7,232.863 1115.27,232.514 1115.84,231.483 1116.4,230.28 1116.97,226.362 1117.54,225.519 1118.11,224.936 1118.68,225.371 1119.25,225.981 1119.81,225.24 1120.38,225.769 1120.95,227.109 1121.52,228.505 1122.09,228.827 1122.66,225.899 1123.23,226.328 1123.79,225.524 1124.36,222.113 1124.93,224.77 1125.5,226.256 1126.07,226.503 1126.64,225.986 1127.2,226.431 1127.77,226.922 1128.34,227.421 1128.91,225.907 1129.48,227.361 1130.05,228.766 1130.61,230.175 1131.18,229.408 1131.75,230.817 1132.32,231.132 1132.89,230.343 1133.46,232.381 1134.02,232.341 1134.59,232.32 1135.16,230.279 1135.73,227.27 1136.3,227.794 1136.87,228.127 1137.43,229.53 1138,230.837 1138.57,229.723 1139.14,228.767 1139.71,227.814 1140.28,229.132 1140.84,231.618 1141.41,231.784 1141.98,233.955 1142.55,235.659 1143.12,235.476 1143.69,236.317 1144.25,235.268 1144.82,234.161 1145.39,233.069 1145.96,232.252 1146.53,231.478 1147.1,231.492 1147.66,234.645 1148.23,235.612 1148.8,235.182 1149.37,236.965 1149.94,237.706 1150.51,236.324 1151.07,237.048 1151.64,236.808 1152.21,236.44 1152.78,233.907 1153.35,234.923 1153.92,235.887 1154.48,234.523 1155.05,233.311 1155.62,233.354 1156.19,231.096 1156.76,232.341 1157.33,231.36 1157.89,232.371 1158.46,232.49 1159.03,233.509 1159.6,235.301 1160.17,231.804 1160.74,231.795 1161.3,231.814 1161.87,232.981 1162.44,234.015 1163.01,232.787 1163.58,231.588 1164.15,231.711 1164.71,230.516 1165.28,230.531 1165.85,232.764 1166.42,232.647 1166.99,233.537 1167.56,233.34 1168.12,235.265 1168.69,234.866 1169.26,236.656 1169.83,237.476 1170.4,237.084 1170.97,237.448 1171.53,236.992 1172.1,237.506 1172.67,236.947 1173.24,237.65 1173.81,234.187 1174.38,233.798 1174.94,233.394 1175.51,233.222 1176.08,234.213 1176.65,233.987 1177.22,233.813 1177.79,233.45 1178.35,234.486 1178.92,235.172 1179.49,232.702 1180.06,231.78 1180.63,232.603 1181.2,229.411 1181.76,230.54 1182.33,232.358 1182.9,231.115 1183.47,230.056 1184.04,231.282 1184.61,231.086 1185.17,230.052 1185.74,228.719 1186.31,228.708 1186.88,227.619 1187.45,230.018 1188.02,230.178 1188.58,231.223 1189.15,229.194 1189.72,230.395 1190.29,231.106 1190.86,230.888 1191.43,230.775 1192,230.81 1192.56,230.657 1193.13,229.412 1193.7,224.403 1194.27,224.689 1194.84,224.029 1195.41,225.516 1195.97,227.042 1196.54,227.344 1197.11,229.732 1197.68,228.854 1198.25,230.192 1198.82,229.154 1199.38,228.264 1199.95,231.514 1200.52,231.341 1201.09,231.211 1201.66,229.3 1202.23,230.365 1202.79,229.491 1203.36,230.594 1203.93,227.599 1204.5,226.977 1205.07,228.229 1205.64,230.777 1206.2,232.991 1206.77,231.728 1207.34,231.614 1207.91,230.465 1208.48,229.343 1209.05,228.518 1209.61,229.531 1210.18,230.619 1210.75,231.781 1211.32,233.704 1211.89,234.531 1212.46,235.34 1213.02,233.88 1213.59,231.711 1214.16,231.8 1214.73,230.94 1215.3,230.969 1215.87,230.806 1216.43,231.041 1217,232.168 1217.57,232.204 1218.14,233.261 1218.71,236.316 1219.28,234.95 1219.84,234.748 1220.41,231.411 1220.98,230.283 1221.55,231.506 1222.12,231.287 1222.69,233.103 1223.25,234.923 1223.82,233.28 1224.39,233.112 1224.96,231.557 1225.53,230.4 1226.1,228.389 1226.66,228.541 1227.23,226.673 1227.8,226.845 1228.37,227.186 1228.94,226.365 1229.51,226.56 1230.07,225.863 1230.64,225.203 1231.21,226.528 1231.78,227.874 1232.35,227.117 1232.92,226.499 1233.48,223.676 1234.05,225.207 1234.62,225.605 1235.19,227.996 1235.76,231.157 1236.33,234.232 1236.89,234.184 1237.46,234.187 1238.03,234.06 1238.6,234.984 1239.17,237.764 1239.74,235.384 1240.3,235.03 1240.87,233.537 1241.44,232.413 1242.01,232.427 1242.58,230.228 1243.15,230.367 1243.71,230.412 1244.28,230.331 1244.85,231.489 1245.42,229.552 1245.99,228.54 1246.56,228.65 1247.12,229.701 1247.69,231.903 1248.26,230.772 1248.83,230.012 1249.4,228.114 1249.97,229.339 1250.53,229.558 1251.1,226.587 1251.67,228.033 1252.24,227.378 1252.81,226.533 1253.38,225.742 1253.94,225.058 1254.51,225.57 1255.08,228.292 1255.65,230.595 1256.22,228.819 1256.79,231.031 1257.35,230.226 1257.92,232.48 1258.49,232.345 1259.06,231.256 1259.63,234.41 1260.2,234.185 1260.76,234.033 1261.33,235.094 1261.9,232.731 1262.47,234.572 1263.04,234.241 1263.61,236.01 1264.18,236.671 1264.74,237.359 1265.31,239.131 1265.88,238.347 1266.45,236.977 1267.02,236.416 1267.59,239.098 1268.15,237.294 1268.72,236.914 1269.29,236.181 1269.86,234.912 1270.43,235.785 1271,236.427 1271.56,234.991 1272.13,235.749 1272.7,235.378 1273.27,236.826 1273.84,236.208 1274.41,235.688 1274.97,236.193 1275.54,234.755 1276.11,233.402 1276.68,234.131 1277.25,236.142 1277.82,236.846 1278.38,237.34 1278.95,235.756 1279.52,235.025 1280.09,233.579 1280.66,233.151 1281.23,230.715 1281.79,231.67 1282.36,230.581 1282.93,231.318 1283.5,230.918 1284.07,230.533 1284.64,231.226 1285.2,230.832 1285.77,229.436 1286.34,229.381 1286.91,229.296 1287.48,230.333 1288.05,231.337 1288.61,231.224 1289.18,230.049 1289.75,231.091 1290.32,231.166 1290.89,228.938 1291.46,228.674 1292.02,228.89 1292.59,227.898 1293.16,228.004 1293.73,229.015 1294.3,230.244 1294.87,229.22 1295.43,227.201 1296,229.678 1296.57,230.585 1297.14,230.469 1297.71,229.52 1298.28,231.636 1298.84,231.545 1299.41,230.362 1299.98,231.241 1300.55,228.943 1301.12,227.816 1301.69,229.916 1302.25,229.544 1302.82,229.491 1303.39,230.595 1303.96,230.682 1304.53,230.386 1305.1,231.345 1305.66,230.335 1306.23,230.131 1306.8,228.898 1307.37,227.789 1307.94,229.017 1308.51,229.828 1309.07,228.632 1309.64,229.605 1310.21,228.648 1310.78,229.572 1311.35,230.459 1311.92,229.618 1312.48,228.728 1313.05,229.819 1313.62,228.705 1314.19,230.015 1314.76,230.071 1315.33,227.696 1315.89,227.82 1316.46,229.198 1317.03,231.359 1317.6,232.125 1318.17,231.073 1318.74,228.112 1319.3,227.224 1319.87,228.432 1320.44,227.597 1321.01,224.643 1321.58,226.207 1322.15,226.773 1322.71,228.017 1323.28,228.303 1323.85,229.395 1324.42,225.603 1324.99,224.166 1325.56,224.396 1326.12,225.783 1326.69,226.188 1327.26,226.765 1327.83,226.948 1328.4,227.293 1328.97,228.499 1329.53,226.538 1330.1,231.045 1330.67,232.23 1331.24,232.035 1331.81,229.762 1332.38,229.94 1332.94,231.135 1333.51,230.183 1334.08,230.362 1334.65,230.657 1335.22,230.672 1335.79,232.682 1336.36,232.449 1336.92,232.35 1337.49,232.204 1338.06,227.922 1338.63,229.152 1339.2,230.411 1339.77,229.672 1340.33,232.551 1340.9,232.533 1341.47,233.391 1342.04,235.343 1342.61,236.357 1343.18,236.007 1343.74,233.708 1344.31,235.622 1344.88,235.122 1345.45,234.791 1346.02,235.607 1346.59,232.269 1347.15,231.117 1347.72,230.891 1348.29,230.764 1348.86,229.647 1349.43,229.659 1350,227.804 1350.56,228.054 1351.13,231.711 1351.7,230.742 1352.27,232.788 1352.84,233.758 1353.41,234.682 1353.97,234.346 1354.54,235.094 1355.11,239.029 1355.68,238.754 1356.25,236.999 1356.82,236.749 1357.38,237.418 1357.95,236.863 1358.52,237.42 1359.09,238.041 1359.66,238.381 1360.23,237.869 1360.79,237.442 1361.36,235.872 1361.93,232.421 1362.5,232.371 1363.07,233.244 1363.64,232.025 1364.2,229.806 1364.77,231.785 1365.34,231.588 1365.91,231.26 1366.48,229.851 1367.05,229.828 1367.61,230.727 1368.18,231.679 1368.75,230.72 1369.32,230.71 1369.89,230.709 1370.46,229.499 1371.02,229.508 1371.59,229.64 1372.16,231.854 1372.73,230.658 1373.3,232.654 1373.87,234.596 1374.43,235.359 1375,235.905 1375.57,236.533 1376.14,235.821 1376.71,233.143 1377.28,231.565 1377.84,230.35 1378.41,230.179 1378.98,229.926 1379.55,228.93 1380.12,228.724 1380.69,227.529 1381.25,226.645 1381.82,226.902 1382.39,229.159 1382.96,230.071 1383.53,230.091 1384.1,230.123 1384.66,230.079 1385.23,230.128 1385.8,232.146 1386.37,232.702 1386.94,232.617 1387.51,229.221 1388.07,229.259 1388.64,229.443 1389.21,230.281 1389.78,230.232 1390.35,229.351 1390.92,231.485 1391.48,231.202 1392.05,229.042 1392.62,230.122 1393.19,229.196 1393.76,227.016 1394.33,225.999 1394.89,227.372 1395.46,226.403 1396.03,226.474 1396.6,225.603 1397.17,223.948 1397.74,224.536 1398.3,224.988 1398.87,224.339 1399.44,225.748 1400.01,225.216 1400.58,223.491 1401.15,222.853 1401.71,223.479 1402.28,226.216 1402.85,226.623 1403.42,228.089 1403.99,229.276 1404.56,230.46 1405.13,231.809 1405.69,230.735 1406.26,231.542 1406.83,233.503 1407.4,233.223 1407.97,233.301 1408.54,231.961 1409.1,230.951 1409.67,230.895 1410.24,232.877 1410.81,232.726 1411.38,232.434 1411.95,233.465 1412.51,232.293 1413.08,233.397 1413.65,232.47 1414.22,234.657 1414.79,233.201 1415.36,233.973 1415.92,233.632 1416.49,233.352 1417.06,234.212 1417.63,233.737 1418.2,233.495 1418.77,234.38 1419.33,234.158 1419.9,232.856 1420.47,230.677 1421.04,231.529 1421.61,231.498 1422.18,232.496 1422.74,232.364 1423.31,231.3 1423.88,231.316 1424.45,230.254 1425.02,231.148 1425.59,230.177 1426.15,229.906 1426.72,230.008 1427.29,229.013 1427.86,230.232 1428.43,228.965 1429,229.845 1429.56,228.973 1430.13,228.852 1430.7,225.971 1431.27,227.492 1431.84,227.758 1432.41,225.978 1432.97,224.288 1433.54,224.711 1434.11,225.027 1434.68,223.431 1435.25,223.839 1435.82,224.412 1436.38,226.036 1436.95,226.45 1437.52,228.536 1438.09,226.708 1438.66,225.893 1439.23,226.421 1439.79,227.916 1440.36,229.364 1440.93,229.79 1441.5,230.845 1442.07,232.93 1442.64,231.905 1443.2,229.932 1443.77,231.005 1444.34,225.919 1444.91,225.097 1445.48,224.464 1446.05,225.199 1446.61,224.466 1447.18,223.222 1447.75,224.89 1448.32,221.313 1448.89,224.154 1449.46,225.717 1450.02,225.188 1450.59,223.589 1451.16,224.24 1451.73,223.826 1452.3,224.49 1452.87,226.322 1453.43,228.78 1454,231.054 1454.57,231.296 1455.14,231.438 1455.71,232.492 1456.28,231.656 1456.84,232.639 1457.41,234.736 1457.98,232.743 1458.55,230.753 1459.12,231.888 1459.69,232.961 1460.25,232.051 1460.82,234.305 1461.39,234.369 1461.96,231.104 1462.53,229.343 1463.1,228.463 1463.66,226.986 1464.23,227.569 1464.8,226.826 1465.37,227.264 1465.94,228.725 1466.51,229.125 1467.07,227.513 1467.64,227.754 1468.21,227.361 1468.78,229.933 1469.35,233.175 1469.92,235.353 1470.48,234.251 1471.05,230.934 1471.62,234.147 1472.19,235.008 1472.76,235.905 1473.33,235.773 1473.89,236.735 1474.46,235.693 1475.03,233.483 1475.6,231.535 1476.17,231.494 1476.74,229.343 1477.31,230.884 1477.87,233.127 1478.44,234.442 1479.01,236.518 1479.58,236.142 1480.15,234.839 1480.72,234.675 1481.28,235.66 1481.85,234.582 1482.42,234.526 1482.99,236.473 1483.56,238.024 1484.13,237.645 1484.69,236.47 1485.26,235.133 1485.83,233.823 1486.4,231.436 1486.97,229.412 1487.54,229.854 1488.1,232.205 1488.67,231.003 1489.24,230.902 1489.81,234.062 1490.38,229.668 1490.95,231.015 1491.51,231.265 1492.08,232.313 1492.65,233.331 1493.22,231.209 1493.79,232.353 1494.36,233.105 1494.92,235.16 1495.49,233.821 1496.06,233.703 1496.63,234.472 1497.2,235.304 1497.77,231.82 1498.33,231.885 1498.9,233.719 1499.47,232.546 1500.04,232.482 1500.61,232.576 1501.18,233.346 1501.74,235.073 1502.31,232.784 1502.88,233.793 1503.45,233.836 1504.02,234.626 1504.59,232.137 1505.15,232.107 1505.72,234.962 1506.29,234.766 1506.86,234.442 1507.43,235.101 1508,235.963 1508.56,235.647 1509.13,235.239 1509.7,232.683 1510.27,233.623 1510.84,233.318 1511.41,235.262 1511.97,235.934 1512.54,236.362 1513.11,236.751 1513.68,235.301 1514.25,231.049 1514.82,228.798 1515.38,230.887 1515.95,229.714 1516.52,228.78 1517.09,230.791 1517.66,229.804 1518.23,230.708 1518.79,231.931 1519.36,232.33 1519.93,234.371 1520.5,232.954 1521.07,232.754 1521.64,230.44 1522.2,229.369 1522.77,230.267 1523.34,229.293 1523.91,230.466 1524.48,230.58 1525.05,230.348 1525.61,228.98 1526.18,230.212 1526.75,229.209 1527.32,230.322 1527.89,229.284 1528.46,228.247 1529.02,228.545 1529.59,229.706 1530.16,228.367 1530.73,227.345 1531.3,226.74 1531.87,228.023 1532.43,229.296 1533,228.541 1533.57,227.761 1534.14,228.214 1534.71,229.55 1535.28,231.924 1535.84,232.836 1536.41,235.721 1536.98,233.237 1537.55,234.082 1538.12,231.703 1538.69,231.434 1539.25,234.538 1539.82,234.448 1540.39,233.131 1540.96,230.649 1541.53,232.916 1542.1,230.577 1542.66,234.89 1543.23,234.354 1543.8,235.087 1544.37,233.804 1544.94,233.298 1545.51,231.133 1546.08,232 1546.64,232.671 1547.21,231.419 1547.78,232.482 1548.35,229.085 1548.92,230.247 1549.49,229.065 1550.05,232.417 1550.62,233.17 1551.19,234.053 1551.76,235.847 1552.33,234.301 1552.9,234.046 1553.46,235.727 1554.03,236.338 1554.6,235.925 1555.17,235.245 1555.74,235.9 1556.31,234.377 1556.87,235.949 1557.44,235.486 1558.01,234.942 1558.58,234.669 1559.15,234.041 1559.72,233.578 1560.28,232.005 1560.85,231.601 1561.42,233.351 1561.99,233.002 1562.56,234.76 1563.13,234.238 1563.69,232.838 1564.26,232.439 1564.83,232.261 1565.4,231.956 1565.97,233.007 1566.54,233.639 1567.1,233.213 1567.67,230.887 1568.24,231.792 1568.81,230.663 1569.38,231.263 1569.95,231.23 1570.51,230.966 1571.08,229.74 1571.65,229.339 1572.22,229.185 1572.79,228.861 1573.36,226.383 1573.92,227.473 1574.49,226.472 1575.06,227.807 1575.63,226.923 1576.2,225.966 1576.77,227.179 1577.33,227.31 1577.9,227.16 1578.47,225.285 1579.04,226.858 1579.61,225.88 1580.18,225.978 1580.74,226.331 1581.31,227.821 1581.88,226.831 1582.45,227.159 1583.02,227.408 1583.59,227.562 1584.15,227.765 1584.72,224.916 1585.29,224.273 1585.86,220.623 1586.43,221.245 1587,224.101 1587.56,223.717 1588.13,225.284 1588.7,222.614 1589.27,226.344 1589.84,226.626 1590.41,224.692 1590.97,224.257 1591.54,224.322 1592.11,225.991 1592.68,226.43 1593.25,227.858 1593.82,228.267 1594.38,228.324 1594.95,228.636 1595.52,228.682 1596.09,230.064 1596.66,231.273 1597.23,231.291 1597.79,231.457 1598.36,229.619 1598.93,229.578 1599.5,228.6 1600.07,228.58 1600.64,228.839 1601.2,228.051 1601.77,228.501 1602.34,228.701 1602.91,227.955 1603.48,229.501 1604.05,226.664 1604.61,225.879 1605.18,225.613 1605.75,227.091 1606.32,228.289 1606.89,230.657 1607.46,230.804 1608.02,231.985 1608.59,230.879 1609.16,231.848 1609.73,228.825 1610.3,227.967 1610.87,228.051 1611.43,230.295 1612,231.481 1612.57,233.712 1613.14,233.599 1613.71,234.431 1614.28,234.202 1614.84,234.194 1615.41,234.048 1615.98,235.032 1616.55,234.679 1617.12,235.322 1617.69,235.959 1618.26,235.651 1618.82,234.19 1619.39,232.773 1619.96,232.587 1620.53,234.619 1621.1,232.453 1621.67,232.593 1622.23,231.492 1622.8,228.486 1623.37,227.584 1623.94,227.11 1624.51,225.385 1625.08,224.796 1625.64,226.165 1626.21,227.567 1626.78,226.891 1627.35,227.467 1627.92,226.835 1628.49,226.118 1629.05,225.42 1629.62,229.067 1630.19,229.325 1630.76,228.336 1631.33,229.59 1631.9,228.533 1632.46,227.854 1633.03,227.078 1633.6,230.485 1634.17,232.829 1634.74,232.651 1635.31,232.775 1635.87,235.858 1636.44,237.687 1637.01,238.167 1637.58,237.611 1638.15,235.056 1638.72,235.863 1639.28,235.78 1639.85,234.519 1640.42,235.332 1640.99,232.894 1641.56,233.811 1642.13,231.554 1642.69,231.692 1643.26,231.775 1643.83,231.662 1644.4,228.721 1644.97,228.744 1645.54,227.719 1646.1,230.037 1646.67,232.129 1647.24,231.912 1647.81,232.869 1648.38,233.76 1648.95,232.724 1649.51,231.536 1650.08,234.811 1650.65,232.405 1651.22,232.262 1651.79,232.309 1652.36,233.241 1652.92,233.241 1653.49,232.176 1654.06,233.112 1654.63,234.077 1655.2,231.906 1655.77,232.851 1656.33,231.509 1656.9,231.306 1657.47,233.22 1658.04,231.873 1658.61,230.677 1659.18,231.847 1659.74,233.82 1660.31,234.458 1660.88,236.066 1661.45,235.874 1662.02,233.419 1662.59,233.112 1663.15,231.627 1663.72,230.513 1664.29,229.518 1664.86,230.67 1665.43,230.476 1666,230.63 1666.56,230.717 1667.13,229.628 1667.7,230.769 1668.27,231.828 1668.84,233.844 1669.41,231.407 1669.97,233.208 1670.54,233.326 1671.11,233.142 1671.68,232.948 1672.25,231.703 1672.82,231.721 1673.38,229.5 1673.95,228.527 1674.52,227.737 1675.09,229.243 1675.66,229.275 1676.23,229.454 1676.79,232.813 1677.36,234.765 1677.93,235.604 1678.5,235.276 1679.07,238.091 1679.64,236.469 1680.2,236.341 1680.77,238.119 1681.34,236.483 1681.91,237.212 1682.48,237.699 1683.05,239.118 1683.61,239.458 1684.18,237.857 1684.75,237.395 1685.32,235.711 1685.89,236.133 1686.46,233.61 1687.02,232.084 1687.59,232.841 1688.16,233.376 1688.73,233.983 1689.3,234.395 1689.87,233.874 1690.44,233.706 1691,235.593 1691.57,233.294 1692.14,231.983 1692.71,231.94 1693.28,233.603 1693.85,235.293 1694.41,233.719 1694.98,234.275 1695.55,231.737 1696.12,229.078 1696.69,229.157 1697.26,229.085 1697.82,227.846 1698.39,226.715 1698.96,225.552 1699.53,224.58 1700.1,225.944 1700.67,226.106 1701.23,226.166 1701.8,224.297 1702.37,223.609 1702.94,222.976 1703.51,224.627 1704.08,225.085 1704.64,222.345 1705.21,221.667 1705.78,221.088 1706.35,220.827 1706.92,221.601 1707.49,223.187 1708.05,221.712 1708.62,220.513 1709.19,220.393 1709.76,224.344 1710.33,225.986 1710.9,227.181 1711.46,227.454 1712.03,224.705 1712.6,228.165 1713.17,229.592 1713.74,230.747 1714.31,229.843 1714.87,229.99 1715.44,229.036 1716.01,230.083 1716.58,230.248 1717.15,230.122 1717.72,230.373 1718.28,229.264 1718.85,232.629 1719.42,233.511 1719.99,233.666 1720.56,233.359 1721.13,233.143 1721.69,231.134 1722.26,231.429 1722.83,232.455 1723.4,230.284 1723.97,230.446 1724.54,229.489 1725.1,228.509 1725.67,229.845 1726.24,230.978 1726.81,230.16 1727.38,230.439 1727.95,230.414 1728.51,231.559 1729.08,232.665 1729.65,229.231 1730.22,228.306 1730.79,228.544 1731.36,227.843 1731.92,229.137 1732.49,228.176 1733.06,227.478 1733.63,226.823 1734.2,227.185 1734.77,224.293 1735.33,225.997 1735.9,224.399 1736.47,225.943 1737.04,226.342 1737.61,225.632 1738.18,224.163 1738.74,224.635 1739.31,224.728 1739.88,225.273 1740.45,223.639 1741.02,225.418 1741.59,224.944 1742.15,225.373 1742.72,223.928 1743.29,225.654 1743.86,225.247 1744.43,225.927 1745,225.605 1745.56,225.254 1746.13,225.756 1746.7,227.401 1747.27,229.035 1747.84,228.284 1748.41,229.631 1748.97,229.939 1749.54,232.141 1750.11,233.397 1750.68,236.517 1751.25,236.333 1751.82,235.433 1752.38,238.626 1752.95,239.375 1753.52,237.967 1754.09,237.582 1754.66,236.215 1755.23,235.935 1755.79,237.694 1756.36,237.428 1756.93,237.292 1757.5,236.043 1758.07,233.862 1758.64,236.161 1759.21,235.044 1759.77,232.759 1760.34,232.619 1760.91,232.475 1761.48,231.621 1762.05,233.695 1762.62,236.573 1763.18,236.352 1763.75,238.157 1764.32,237.795 1764.89,238.471 1765.46,237.225 1766.03,234.731 1766.59,235.337 1767.16,233.119 1767.73,232.891 1768.3,230.647 1768.87,231.775 1769.44,231.631 1770,230.761 1770.57,230.966 1771.14,232.97 1771.71,234.958 1772.28,235.903 1772.85,234.746 1773.41,234.517 1773.98,234.149 1774.55,232.825 1775.12,232.532 1775.69,233.571 1776.26,232.343 1776.82,231.396 1777.39,233.427 1777.96,231.222 1778.53,231.216 1779.1,229.97 1779.67,230.035 1780.23,230.119 1780.8,229.908 1781.37,232.868 1781.94,229.58 1782.51,230.473 1783.08,227.457 1783.64,229.857 1784.21,230.11 1784.78,229.254 1785.35,229.315 1785.92,229.405 1786.49,229.388 1787.05,229.565 1787.62,231.644 1788.19,232.634 1788.76,234.482 1789.33,233.398 1789.9,232.144 1790.46,233.044 1791.03,233.992 1791.6,234.688 1792.17,234.327 1792.74,233.884 1793.31,233.606 1793.87,233.562 1794.44,232.619 1795.01,234.424 1795.58,232.01 1796.15,231.951 1796.72,231.698 1797.28,232.754 1797.85,233.614 1798.42,232.368 1798.99,231.395 1799.56,233.654 1800.13,233.26 1800.69,233.209 1801.26,232.031 1801.83,230.003 1802.4,228.005 1802.97,229.264 1803.54,227.885 1804.1,228.933 1804.67,228.971 1805.24,229.059 1805.81,227.994 1806.38,228.208 1806.95,230.355 1807.51,229.444 1808.08,228.705 1808.65,230.749 1809.22,229.633 1809.79,229.691 1810.36,228.701 1810.92,228.676 1811.49,227.896 1812.06,229.443 1812.63,229.565 1813.2,228.464 1813.77,229.625 1814.33,226.98 1814.9,226.209 1815.47,225.318 1816.04,224.851 1816.61,225.381 1817.18,224.686 1817.74,226.18 1818.31,224.543 1818.88,224.991 1819.45,223.532 1820.02,226.004 1820.59,226.538 1821.15,229.076 1821.72,228.196 1822.29,229.646 1822.86,229.85 1823.43,228.05 1824,229.321 1824.56,230.457 1825.13,232.559 1825.7,231.546 1826.27,230.525 1826.84,230.453 1827.41,233.655 1827.97,233.3 1828.54,232.369 1829.11,231.186 1829.68,231.318 1830.25,230.507 1830.82,232.865 1831.39,232.865 1831.95,234.011 1832.52,233.798 1833.09,234.748 1833.66,233.525 1834.23,234.542 1834.8,234.296 1835.36,235.003 1835.93,235.971 1836.5,236.687 1837.07,236.414 1837.64,236.052 1838.21,237.668 1838.77,236.144 1839.34,236.876 1839.91,236.667 1840.48,235.306 1841.05,232.922 1841.62,233.008 1842.18,231.775 1842.75,232.89 1843.32,234.718 1843.89,234.555 1844.46,233.271 1845.03,233.14 1845.59,232.963 1846.16,234.864 1846.73,234.706 1847.3,233.408 1847.87,234.324 1848.44,235.988 1849,234.507 1849.57,233.178 1850.14,234.227 1850.71,233.73 1851.28,233.326 1851.85,235.281 1852.41,235.017 1852.98,235.57 1853.55,233.808 1854.12,232.446 1854.69,231.191 1855.26,230.121 1855.82,230.974 1856.39,228.705 1856.96,232.717 1857.53,231.477 1858.1,230.62 1858.67,229.657 1859.23,228.748 1859.8,228.933 1860.37,228.877 1860.94,230.011 1861.51,230.247 1862.08,230.334 1862.64,231.301 1863.21,232.155 1863.78,232.052 1864.35,233.728 1864.92,232.404 1865.49,232.05 1866.05,230.824 1866.62,227.689 1867.19,228.111 1867.76,227.213 1868.33,224.349 1868.9,224.883 1869.46,225.19 1870.03,225.64 1870.6,226.096 1871.17,227.651 1871.74,226.674 1872.31,227.263 1872.87,227.203 1873.44,227.569 1874.01,226.542 1874.58,225.873 1875.15,228.491 1875.72,228.816 1876.28,230.754 1876.85,228.918 1877.42,228.265 1877.99,227.545 1878.56,227.018 1879.13,227.198 1879.69,228.345 1880.26,230.648 1880.83,230.657 1881.4,230.841 1881.97,231.102 1882.54,233.127 1883.1,232.952 1883.67,233.587 1884.24,234.457 1884.81,234.296 1885.38,235.194 1885.95,234.935 1886.51,232.774 1887.08,232.471 1887.65,232.381 1888.22,234.163 1888.79,234.081 1889.36,233.855 1889.92,236.662 1890.49,236.051 1891.06,237.602 1891.63,236.888 1892.2,237.256 1892.77,235.429 1893.33,236.39 1893.9,236.011 1894.47,237.665 1895.04,238.007 1895.61,240.487 1896.18,235.342 1896.74,234.935 1897.31,234.451 1897.88,232.914 1898.45,231.546 1899.02,232.227 1899.59,229.234 1900.16,228.006 1900.72,227.074 1901.29,227.146 1901.86,225.194 1902.43,225.653 1903,223.852 1903.57,223.165 1904.13,223.734 1904.7,223.961 1905.27,223.275 1905.84,223.766 1906.41,225.316 1906.98,227.94 1907.54,229.148 1908.11,228.412 1908.68,228.847 1909.25,229.112 1909.82,230.323 1910.39,229.475 1910.95,231.677 1911.52,235.868 1912.09,235.504 1912.66,237.639 1913.23,238.376 1913.8,235.541 1914.36,236.372 1914.93,235.929 1915.5,235.405 1916.07,235.164 1916.64,234.766 1917.21,233.512 1917.77,234.46 1918.34,232.286 1918.91,232.122 1919.48,231.063 1920.05,228.69 1920.62,229.625 1921.18,229.74 1921.75,227.609 1922.32,225.823 1922.89,227.247 1923.46,228.394 1924.03,229.751 1924.59,230.749 1925.16,231.835 1925.73,230.718 1926.3,228.674 1926.87,230.895 1927.44,231.005 1928,230.917 1928.57,230.925 1929.14,232.96 1929.71,232.609 1930.28,231.488 1930.85,230.405 1931.41,231.46 1931.98,231.399 1932.55,229.475 1933.12,230.487 1933.69,229.453 1934.26,230.603 1934.82,226.41 1935.39,224.729 1935.96,225.024 1936.53,226.445 1937.1,224.779 1937.67,225.127 1938.23,224.573 1938.8,223.788 1939.37,225.429 1939.94,225.831 1940.51,226.148 1941.08,226.624 1941.64,226.963 1942.21,225.485 1942.78,226.793 1943.35,226.017 1943.92,226.362 1944.49,226.982 1945.05,225.374 1945.62,227.885 1946.19,228.2 1946.76,228.573 1947.33,230.955 1947.9,231.832 1948.46,230.751 1949.03,233.705 1949.6,235.436 1950.17,236.122 1950.74,233.809 1951.31,234.541 1951.87,234.344 1952.44,233.059 1953.01,233.91 1953.58,232.765 1954.15,232.536 1954.72,231.423 1955.28,233.338 1955.85,232.115 1956.42,231.128 1956.99,230.053 1957.56,230.209 1958.13,232.354 1958.69,231.204 1959.26,231.359 1959.83,234.488 1960.4,231.049 1960.97,232.169 1961.54,230.987 1962.1,233.115 1962.67,230.879 1963.24,229.832 1963.81,230.929 1964.38,228.881 1964.95,226.996 1965.51,229.455 1966.08,229.994 1966.65,230.19 1967.22,229.371 1967.79,228.442 1968.36,227.644 1968.92,230.038 1969.49,231.208 1970.06,231.312 1970.63,230.382 1971.2,230.455 1971.77,230.164 1972.34,230.087 1972.9,231.245 1973.47,228.348 1974.04,229.648 1974.61,228.71 1975.18,227.834 1975.75,229.19 1976.31,225.263 1976.88,224.873 1977.45,224.442 1978.02,225.866 1978.59,226.535 1979.16,226.108 1979.72,227.469 1980.29,225.67 1980.86,225.952 1981.43,227.471 1982,227.71 1982.57,229.114 1983.13,231.429 1983.7,231.557 1984.27,232.604 1984.84,235.857 1985.41,237.796 1985.98,239.544 1986.54,237.905 1987.11,238.424 1987.68,238.181 1988.25,236.71 1988.82,237.412 1989.39,238.19 1989.95,236.67 1990.52,235.322 1991.09,234.927 1991.66,235.782 1992.23,234.483 1992.8,234.345 1993.36,236.376 1993.93,239.17 1994.5,242.959 1995.07,241.199 1995.64,240.386 1996.21,238.437 1996.77,235.009 1997.34,235.661 1997.91,233.847 1998.48,235.56 1999.05,234.048 1999.62,231.762 2000.18,229.467 2000.75,227.645 2001.32,228.777 2001.89,227.908 2002.46,228.083 2003.03,227.09 2003.59,228.318 2004.16,228.389 2004.73,228.794 2005.3,230.92 2005.87,229.785 2006.44,227.966 2007,230.037 2007.57,230.874 2008.14,232.734 2008.71,233.439 2009.28,234.017 2009.85,232.025 2010.41,231.758 2010.98,229.546 2011.55,227.401 2012.12,227.61 2012.69,227.739 2013.26,227.883 2013.82,231.289 2014.39,230.103 2014.96,230.082 2015.53,229.989 2016.1,230.95 2016.67,231.79 2017.23,230.809 2017.8,228.809 2018.37,231.026 2018.94,231.961 2019.51,230.791 2020.08,229.869 2020.64,229.829 2021.21,230.767 2021.78,229.649 2022.35,229.836 2022.92,229.818 2023.49,227.765 2024.05,228.906 2024.62,229.765 2025.19,229.923 2025.76,233.079 2026.33,232.726 2026.9,232.201 2027.46,234.195 2028.03,234.035 2028.6,233.65 2029.17,233.3 2029.74,233.185 2030.31,231.921 2030.87,232.625 2031.44,232.591 2032.01,232.42 2032.58,234.184 2033.15,234.711 2033.72,233.184 2034.28,230.937 2034.85,229.873 2035.42,228.835 2035.99,226.93 2036.56,229.085 2037.13,233.486 2037.69,232.088 2038.26,230.8 2038.83,230.919 2039.4,230.985 2039.97,230.006 2040.54,231.091 2041.11,229.112 2041.67,228.33 2042.24,227.442 2042.81,225.446 2043.38,224.827 2043.95,225.431 2044.52,226.853 2045.08,229.006 2045.65,228.989 2046.22,230.292 2046.79,230.411 2047.36,228.378 2047.93,226.632 2048.49,226.888 2049.06,227.305 2049.63,229.341 2050.2,227.418 2050.77,228.648 2051.34,229.989 2051.9,228.93 2052.47,230.209 2053.04,229.374 2053.61,230.716 2054.18,230.839 2054.75,229.829 2055.31,230.012 2055.88,231.285 2056.45,233.494 2057.02,232.2 2057.59,233.011 2058.16,231.838 2058.72,232.763 2059.29,234.038 2059.86,233.774 2060.43,237.551 2061,236.881 2061.57,237.554 2062.13,234.039 2062.7,234.885 2063.27,235.537 2063.84,234.092 2064.41,233.81 2064.98,233.656 2065.54,233.764 2066.11,234.696 2066.68,235.632 2067.25,235.294 2067.82,234.941 2068.39,234.373 2068.95,235.024 2069.52,237.557 2070.09,236.019 2070.66,235.438 2071.23,234.801 2071.8,234.601 2072.36,235.202 2072.93,234.849 2073.5,235.193 2074.07,232.667 2074.64,232.149 2075.21,232.936 2075.77,233.833 2076.34,232.595 2076.91,231.606 2077.48,232.574 2078.05,232.099 2078.62,230.914 2079.18,228.771 2079.75,228.811 2080.32,229.781 2080.89,230.696 2081.46,229.617 2082.03,228.494 2082.59,229.645 2083.16,228.634 2083.73,228.521 2084.3,230.627 2084.87,230.44 2085.44,229.489 2086,232.458 2086.57,235.347 2087.14,234.909 2087.71,234.533 2088.28,234.086 2088.85,231.694 2089.41,228.523 2089.98,228.574 2090.55,228.611 2091.12,227.643 2091.69,226.641 2092.26,226.646 2092.82,226.971 2093.39,228.183 2093.96,227.281 2094.53,227.294 2095.1,227.512 2095.67,227.609 2096.23,227.82 2096.8,230.163 2097.37,227.117 2097.94,227.378 2098.51,227.392 2099.08,228.717 2099.64,229.949 2100.21,229.182 2100.78,230.426 2101.35,229.351 2101.92,229.731 2102.49,230.941 2103.05,229.891 2103.62,229.949 2104.19,227.987 2104.76,227.124 2105.33,225.301 2105.9,223.783 2106.46,223.314 2107.03,222.712 2107.6,224.229 2108.17,223.538 2108.74,227.178 2109.31,230.647 2109.87,230.917 2110.44,230.888 2111.01,230.9 2111.58,231.127 2112.15,229.994 2112.72,229.173 2113.29,230.327 2113.85,232.616 2114.42,234.633 2114.99,235.404 2115.56,236.073 2116.13,235.708 2116.7,235.599 2117.26,233.253 2117.83,232.062 2118.4,231.951 2118.97,231.961 2119.54,231.964 2120.11,231.735 2120.67,231.693 2121.24,232.592 2121.81,231.592 2122.38,231.552 2122.95,231.503 2123.52,231.372 2124.08,231.428 2124.65,229.09 2125.22,229.28 2125.79,229.266 2126.36,228.205 2126.93,226.425 2127.49,224.601 2128.06,225.194 2128.63,225.748 2129.2,226.022 2129.77,225.354 2130.34,226.997 2130.9,228.37 2131.47,229.586 2132.04,229.692 2132.61,229.943 2133.18,230.102 2133.75,230.068 2134.31,226.761 2134.88,228.312 2135.45,226.396 2136.02,227.915 2136.59,228.12 2137.16,229.423 2137.72,230.405 2138.29,228.382 2138.86,228.566 2139.43,230.803 2140,230.773 2140.57,229.799 2141.13,229.98 2141.7,230.338 2142.27,229.325 2142.84,230.686 2143.41,230.96 2143.98,231.123 2144.54,231.128 2145.11,232.129 2145.68,233.471 2146.25,232.168 2146.82,233.07 2147.39,233.035 2147.95,232.836 2148.52,232.661 2149.09,233.825 2149.66,235.639 2150.23,237.324 2150.8,234.83 2151.36,234.483 2151.93,235.185 2152.5,234.881 2153.07,234.534 2153.64,233.223 2154.21,232.111 2154.77,233.181 2155.34,233.134 2155.91,232.904 2156.48,232.948 2157.05,232.547 2157.62,232.548 2158.18,232.378 2158.75,233.27 2159.32,234.487 2159.89,235.158 \"/>\n<path clip-path=\"url(#clip890)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip890)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip890)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip890)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip890)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip890)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.018 ± 0.027\n  with uncertainty of ± 0.002466910209889596\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01563 ± (0.00149161, 0.00139064) (MC)\n  95% confidence interval: [-4.01819, -4.01282]) (MC)\n  linear error propagation: -4.01565 ± 0.00141004\n  |δ_y| = |0.00137495| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.015626963130492, val_l = 0.0025660889848770907, val_u = 0.0028042579829259395)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip920\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip920)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip921\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip920)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip922\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1152.5 2211.02,1152.5 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,993.723 2211.02,993.723 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,834.951 2211.02,834.951 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,676.178 2211.02,676.178 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,517.406 2211.02,517.406 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,358.634 2211.02,358.634 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,199.861 2211.02,199.861 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1152.5 365.751,1152.5 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,993.723 365.751,993.723 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,834.951 365.751,834.951 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,676.178 365.751,676.178 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,517.406 365.751,517.406 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,358.634 365.751,358.634 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,199.861 365.751,199.861 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M298.909 1138.29 Q295.298 1138.29 293.469 1141.86 Q291.664 1145.4 291.664 1152.53 Q291.664 1159.64 293.469 1163.2 Q295.298 1166.74 298.909 1166.74 Q302.543 1166.74 304.349 1163.2 Q306.177 1159.64 306.177 1152.53 Q306.177 1145.4 304.349 1141.86 Q302.543 1138.29 298.909 1138.29 M298.909 1134.59 Q304.719 1134.59 307.775 1139.2 Q310.853 1143.78 310.853 1152.53 Q310.853 1161.26 307.775 1165.86 Q304.719 1170.45 298.909 1170.45 Q293.099 1170.45 290.02 1165.86 Q286.964 1161.26 286.964 1152.53 Q286.964 1143.78 290.02 1139.2 Q293.099 1134.59 298.909 1134.59 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M259.557 1007.07 L267.196 1007.07 L267.196 980.702 L258.886 982.369 L258.886 978.109 L267.15 976.443 L271.826 976.443 L271.826 1007.07 L279.465 1007.07 L279.465 1011 L259.557 1011 L259.557 1007.07 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M298.909 979.522 Q295.298 979.522 293.469 983.086 Q291.664 986.628 291.664 993.758 Q291.664 1000.86 293.469 1004.43 Q295.298 1007.97 298.909 1007.97 Q302.543 1007.97 304.349 1004.43 Q306.177 1000.86 306.177 993.758 Q306.177 986.628 304.349 983.086 Q302.543 979.522 298.909 979.522 M298.909 975.818 Q304.719 975.818 307.775 980.424 Q310.853 985.008 310.853 993.758 Q310.853 1002.48 307.775 1007.09 Q304.719 1011.67 298.909 1011.67 Q293.099 1011.67 290.02 1007.09 Q286.964 1002.48 286.964 993.758 Q286.964 985.008 290.02 980.424 Q293.099 975.818 298.909 975.818 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M262.775 848.295 L279.094 848.295 L279.094 852.231 L257.15 852.231 L257.15 848.295 Q259.812 845.541 264.395 840.911 Q269.002 836.258 270.182 834.916 Q272.428 832.393 273.307 830.657 Q274.21 828.897 274.21 827.208 Q274.21 824.453 272.266 822.717 Q270.344 820.981 267.242 820.981 Q265.043 820.981 262.59 821.745 Q260.159 822.508 257.381 824.059 L257.381 819.337 Q260.205 818.203 262.659 817.624 Q265.113 817.046 267.15 817.046 Q272.52 817.046 275.715 819.731 Q278.909 822.416 278.909 826.907 Q278.909 829.036 278.099 830.957 Q277.312 832.856 275.205 835.448 Q274.627 836.119 271.525 839.337 Q268.423 842.531 262.775 848.295 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M298.909 820.749 Q295.298 820.749 293.469 824.314 Q291.664 827.856 291.664 834.985 Q291.664 842.092 293.469 845.656 Q295.298 849.198 298.909 849.198 Q302.543 849.198 304.349 845.656 Q306.177 842.092 306.177 834.985 Q306.177 827.856 304.349 824.314 Q302.543 820.749 298.909 820.749 M298.909 817.046 Q304.719 817.046 307.775 821.652 Q310.853 826.235 310.853 834.985 Q310.853 843.712 307.775 848.318 Q304.719 852.902 298.909 852.902 Q293.099 852.902 290.02 848.318 Q286.964 843.712 286.964 834.985 Q286.964 826.235 290.02 821.652 Q293.099 817.046 298.909 817.046 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M272.914 674.824 Q276.27 675.542 278.145 677.81 Q280.043 680.079 280.043 683.412 Q280.043 688.528 276.525 691.329 Q273.006 694.129 266.525 694.129 Q264.349 694.129 262.034 693.69 Q259.742 693.273 257.289 692.417 L257.289 687.903 Q259.233 689.037 261.548 689.616 Q263.863 690.194 266.386 690.194 Q270.784 690.194 273.076 688.458 Q275.39 686.722 275.39 683.412 Q275.39 680.356 273.238 678.643 Q271.108 676.907 267.289 676.907 L263.261 676.907 L263.261 673.065 L267.474 673.065 Q270.923 673.065 272.752 671.699 Q274.58 670.31 274.58 667.718 Q274.58 665.056 272.682 663.644 Q270.807 662.208 267.289 662.208 Q265.367 662.208 263.168 662.625 Q260.969 663.042 258.33 663.921 L258.33 659.755 Q260.992 659.014 263.307 658.644 Q265.645 658.273 267.705 658.273 Q273.029 658.273 276.131 660.704 Q279.233 663.111 279.233 667.231 Q279.233 670.102 277.59 672.093 Q275.946 674.06 272.914 674.824 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M298.909 661.977 Q295.298 661.977 293.469 665.542 Q291.664 669.083 291.664 676.213 Q291.664 683.319 293.469 686.884 Q295.298 690.426 298.909 690.426 Q302.543 690.426 304.349 686.884 Q306.177 683.319 306.177 676.213 Q306.177 669.083 304.349 665.542 Q302.543 661.977 298.909 661.977 M298.909 658.273 Q304.719 658.273 307.775 662.88 Q310.853 667.463 310.853 676.213 Q310.853 684.94 307.775 689.546 Q304.719 694.129 298.909 694.129 Q293.099 694.129 290.02 689.546 Q286.964 684.94 286.964 676.213 Q286.964 667.463 290.02 662.88 Q293.099 658.273 298.909 658.273 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M271.594 504.2 L259.789 522.649 L271.594 522.649 L271.594 504.2 M270.367 500.126 L276.247 500.126 L276.247 522.649 L281.177 522.649 L281.177 526.538 L276.247 526.538 L276.247 534.686 L271.594 534.686 L271.594 526.538 L255.992 526.538 L255.992 522.024 L270.367 500.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M298.909 503.205 Q295.298 503.205 293.469 506.769 Q291.664 510.311 291.664 517.441 Q291.664 524.547 293.469 528.112 Q295.298 531.653 298.909 531.653 Q302.543 531.653 304.349 528.112 Q306.177 524.547 306.177 517.441 Q306.177 510.311 304.349 506.769 Q302.543 503.205 298.909 503.205 M298.909 499.501 Q304.719 499.501 307.775 504.107 Q310.853 508.691 310.853 517.441 Q310.853 526.167 307.775 530.774 Q304.719 535.357 298.909 535.357 Q293.099 535.357 290.02 530.774 Q286.964 526.167 286.964 517.441 Q286.964 508.691 290.02 504.107 Q293.099 499.501 298.909 499.501 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M258.793 341.354 L277.15 341.354 L277.15 345.289 L263.076 345.289 L263.076 353.761 Q264.094 353.414 265.113 353.252 Q266.131 353.066 267.15 353.066 Q272.937 353.066 276.316 356.238 Q279.696 359.409 279.696 364.826 Q279.696 370.404 276.224 373.506 Q272.752 376.585 266.432 376.585 Q264.256 376.585 261.988 376.214 Q259.742 375.844 257.335 375.103 L257.335 370.404 Q259.418 371.539 261.641 372.094 Q263.863 372.65 266.34 372.65 Q270.344 372.65 272.682 370.543 Q275.02 368.437 275.02 364.826 Q275.02 361.215 272.682 359.108 Q270.344 357.002 266.34 357.002 Q264.465 357.002 262.59 357.418 Q260.738 357.835 258.793 358.715 L258.793 341.354 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M298.909 344.432 Q295.298 344.432 293.469 347.997 Q291.664 351.539 291.664 358.668 Q291.664 365.775 293.469 369.34 Q295.298 372.881 298.909 372.881 Q302.543 372.881 304.349 369.34 Q306.177 365.775 306.177 358.668 Q306.177 351.539 304.349 347.997 Q302.543 344.432 298.909 344.432 M298.909 340.729 Q304.719 340.729 307.775 345.335 Q310.853 349.918 310.853 358.668 Q310.853 367.395 307.775 372.002 Q304.719 376.585 298.909 376.585 Q293.099 376.585 290.02 372.002 Q286.964 367.395 286.964 358.668 Q286.964 349.918 290.02 345.335 Q293.099 340.729 298.909 340.729 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M269.326 197.998 Q266.178 197.998 264.326 200.151 Q262.497 202.303 262.497 206.053 Q262.497 209.78 264.326 211.956 Q266.178 214.109 269.326 214.109 Q272.474 214.109 274.303 211.956 Q276.154 209.78 276.154 206.053 Q276.154 202.303 274.303 200.151 Q272.474 197.998 269.326 197.998 M278.608 183.345 L278.608 187.604 Q276.849 186.771 275.043 186.331 Q273.261 185.891 271.502 185.891 Q266.872 185.891 264.418 189.016 Q261.988 192.141 261.641 198.461 Q263.006 196.447 265.066 195.382 Q267.127 194.294 269.603 194.294 Q274.812 194.294 277.821 197.465 Q280.853 200.614 280.853 206.053 Q280.853 211.377 277.705 214.595 Q274.557 217.813 269.326 217.813 Q263.33 217.813 260.159 213.229 Q256.988 208.623 256.988 199.896 Q256.988 191.702 260.877 186.84 Q264.766 181.956 271.316 181.956 Q273.076 181.956 274.858 182.303 Q276.664 182.651 278.608 183.345 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M298.909 185.66 Q295.298 185.66 293.469 189.225 Q291.664 192.766 291.664 199.896 Q291.664 207.002 293.469 210.567 Q295.298 214.109 298.909 214.109 Q302.543 214.109 304.349 210.567 Q306.177 207.002 306.177 199.896 Q306.177 192.766 304.349 189.225 Q302.543 185.66 298.909 185.66 M298.909 181.956 Q304.719 181.956 307.775 186.563 Q310.853 191.146 310.853 199.896 Q310.853 208.623 307.775 213.229 Q304.719 217.813 298.909 217.813 Q293.099 217.813 290.02 213.229 Q286.964 208.623 286.964 199.896 Q286.964 191.146 290.02 186.563 Q293.099 181.956 298.909 181.956 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip922)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1158.99 400.199,1051.16 400.786,1055.78 401.372,955.668 401.958,858.438 402.545,769.323 403.131,696.659 403.718,625.14 404.304,561.764 404.891,500.612 405.477,445.192 406.063,396.44 406.65,352.613 407.236,313.392 407.823,278.479 408.409,313.333 408.995,283.33 409.582,258.526 410.168,236.388 410.755,267.457 411.341,248.56 411.927,233.285 412.514,219.895 413.1,248.121 413.687,238.237 414.273,231.055 414.86,226.386 415.446,222.602 416.032,248.81 416.619,247.777 417.205,273.171 417.792,274.02 418.378,275.519 418.964,278.958 419.551,283.48 420.137,307.263 420.724,330.414 421.31,352.265 421.896,358.729 422.483,393.296 423.069,414.756 423.656,434.361 424.242,442.476 424.829,472.249 425.415,481.043 426.001,499.461 426.588,508.736 427.174,527.032 427.761,553.156 428.347,570.163 428.933,579.499 429.52,603.197 430.106,639.034 430.693,645.805 431.279,659.632 431.865,667.609 432.452,676.656 433.038,702.528 433.625,710.036 434.211,728.504 434.798,740.931 435.384,753.37 435.97,770.408 436.557,782.734 437.143,803.522 437.73,819.44 438.316,838.284 438.902,852.612 439.489,862.664 440.075,872.229 440.662,879.005 441.248,892.149 441.835,901.446 442.421,913.836 443.007,922.914 443.594,928.161 444.18,933.566 444.767,942.323 445.353,953.952 445.939,959.169 446.526,967.135 447.112,980.307 447.699,993.199 448.285,1002.44 448.871,1008.81 449.458,1020.58 450.044,1027.36 450.631,1033.79 451.217,1044.95 451.804,1057.5 452.39,1065.33 452.976,1068.26 453.563,1075.43 454.149,1088.9 454.736,1093.3 455.322,1097.48 455.908,1101.5 456.495,1106 457.081,1108.18 457.668,1116.38 458.254,1128.01 458.84,1131.3 459.427,1136.3 460.013,1137.76 460.6,1138.86 461.186,1140.11 461.773,1143.49 462.359,1144.92 462.945,1148.17 463.532,1154.94 464.118,1154.35 464.705,1155.62 465.291,1158.74 465.877,1159.65 466.464,1162.62 467.05,1167.01 467.637,1169.69 468.223,1170.77 468.809,1173.62 469.396,1182.8 469.982,1183.41 470.569,1184.21 471.155,1188.2 471.742,1193.55 472.328,1200.45 472.914,1203.87 473.501,1204.14 474.087,1202.6 474.674,1201.12 475.26,1206.01 475.846,1206.12 476.433,1206.81 477.019,1208.49 477.606,1207.12 478.192,1210.65 478.778,1211.01 479.365,1214.13 479.951,1215.82 480.538,1214.32 481.124,1214.31 481.711,1214.45 482.297,1214.41 482.883,1217.32 483.47,1217.56 484.056,1220.69 484.643,1223.78 485.229,1221.98 485.815,1222.2 486.402,1223.66 486.988,1223.77 487.575,1222.69 488.161,1225.7 488.748,1224.4 489.334,1225.97 489.92,1227.46 490.507,1225.99 491.093,1227.28 491.68,1230.2 492.266,1232.91 492.852,1232.68 493.439,1233.68 494.025,1235.97 494.612,1237.01 495.198,1237.97 495.784,1238.84 496.371,1239.82 496.957,1239.09 497.544,1239.93 498.13,1243.64 498.717,1244.38 499.303,1245.11 499.889,1243.05 500.476,1246.66 501.062,1248.62 501.649,1248.8 502.235,1248.17 502.821,1248.87 503.408,1249.56 503.994,1247.53 504.581,1246.73 505.167,1246.14 505.753,1247.07 506.34,1246.35 506.926,1247.2 507.513,1243.98 508.099,1245.25 508.686,1243.39 509.272,1243.02 509.858,1243.92 510.445,1243.43 511.031,1243.09 511.618,1242.62 512.204,1242.59 512.79,1246.14 513.377,1246.6 513.963,1244.97 514.55,1244.43 515.136,1245.44 515.722,1246.48 516.309,1244.88 516.895,1246.01 517.482,1245.52 518.068,1245.05 518.655,1245.49 519.241,1243.64 519.827,1243.05 520.414,1242.76 521,1245.1 521.587,1247.36 522.173,1250.53 522.759,1248.4 523.346,1249.32 523.932,1248.64 524.519,1248.19 525.105,1247.88 525.691,1246.05 526.278,1248.24 526.864,1247.73 527.451,1248.4 528.037,1247.55 528.624,1247.95 529.21,1247.45 529.796,1249.6 530.383,1248.8 530.969,1249.45 531.556,1246.21 532.142,1247.17 532.728,1246.64 533.315,1245.1 533.901,1246.02 534.488,1246.78 535.074,1247.53 535.661,1249.39 536.247,1249.9 536.833,1247.54 537.42,1249.33 538.006,1245.77 538.593,1246.31 539.179,1244.21 539.765,1243.84 540.352,1242 540.938,1242.82 541.525,1242.47 542.111,1240.41 542.697,1243.87 543.284,1244.59 543.87,1246.79 544.457,1248.72 545.043,1249.23 545.63,1248.46 546.216,1249.25 546.802,1247.16 547.389,1244.02 547.975,1243.32 548.562,1245.29 549.148,1243.22 549.734,1241.43 550.321,1239.48 550.907,1239.2 551.494,1238.54 552.08,1240.92 552.666,1238.98 553.253,1242.69 553.839,1242.37 554.426,1241.99 555.012,1238.99 555.599,1240 556.185,1239.85 556.771,1239.86 557.358,1240.72 557.944,1244.56 558.531,1243.85 559.117,1241.96 559.703,1242.86 560.29,1243.41 560.876,1242.74 561.463,1239.66 562.049,1240.69 562.635,1241.74 563.222,1242.36 563.808,1242.03 564.395,1245.49 564.981,1246.33 565.568,1242.88 566.154,1246.25 566.74,1245.36 567.327,1245.99 567.913,1242.46 568.5,1243.11 569.086,1239.88 569.672,1243.3 570.259,1243.72 570.845,1244.42 571.432,1243.77 572.018,1241.5 572.605,1239.64 573.191,1241.72 573.777,1242.38 574.364,1241.92 574.95,1239.82 575.537,1238.19 576.123,1241.52 576.709,1238.45 577.296,1239.15 577.882,1238.55 578.469,1236.96 579.055,1237.8 579.641,1237.59 580.228,1237.4 580.814,1236.87 581.401,1234.04 581.987,1233.71 582.574,1231.22 583.16,1231.25 583.746,1228.44 584.333,1228.48 584.919,1231.32 585.506,1231.2 586.092,1229.76 586.678,1229.64 587.265,1232.31 587.851,1230.85 588.438,1230.55 589.024,1227.44 589.61,1224.95 590.197,1223.99 590.783,1224.22 591.37,1225.6 591.956,1228.31 592.543,1228.22 593.129,1232.23 593.715,1233.31 594.302,1233.07 594.888,1231.53 595.475,1230.04 596.061,1231.37 596.647,1230.08 597.234,1229.95 597.82,1232.47 598.407,1230.84 598.993,1230.53 599.579,1230.62 600.166,1231.83 600.752,1230.35 601.339,1227.51 601.925,1229 602.512,1227.64 603.098,1223.78 603.684,1224.09 604.271,1224.13 604.857,1224.12 605.444,1223.08 606.03,1224.63 606.616,1224.93 607.203,1225.89 607.789,1227.37 608.376,1228.83 608.962,1229.07 609.548,1231.59 610.135,1229.84 610.721,1232.38 611.308,1232.02 611.894,1230.48 612.481,1231.38 613.067,1231.33 613.653,1232.41 614.24,1233.39 614.826,1231.74 615.413,1230.06 615.999,1230 616.585,1232.27 617.172,1232.08 617.758,1233.09 618.345,1234.22 618.931,1237.75 619.518,1237.04 620.104,1236.43 620.69,1235.97 621.277,1238.24 621.863,1235.13 622.45,1233.58 623.036,1235.58 623.622,1232.36 624.209,1231.93 624.795,1235.49 625.382,1234.8 625.968,1235.4 626.554,1233.42 627.141,1232.97 627.727,1232.74 628.314,1232.17 628.9,1234.54 629.487,1235.43 630.073,1234.71 630.659,1235.43 631.246,1234.53 631.832,1232.84 632.419,1232.68 633.005,1232.13 633.591,1231.69 634.178,1230.11 634.764,1231.15 635.351,1233.16 635.937,1232.58 636.523,1233.53 637.11,1230.6 637.696,1232 638.283,1230.02 638.869,1229.91 639.456,1232.3 640.042,1227.94 640.628,1228.95 641.215,1228.78 641.801,1228.46 642.388,1230.98 642.974,1234.34 643.56,1235.24 644.147,1236.04 644.733,1234 645.32,1233.58 645.906,1232.98 646.492,1229.85 647.079,1228.01 647.665,1225.15 648.252,1222.45 648.838,1222.7 649.425,1221.48 650.011,1217.9 650.597,1218.45 651.184,1217.4 651.77,1217.92 652.357,1218.56 652.943,1216.25 653.529,1218.24 654.116,1218.64 654.702,1220.02 655.289,1221.67 655.875,1221.74 656.462,1221.92 657.048,1221.92 657.634,1222.1 658.221,1223.49 658.807,1222.35 659.394,1222.32 659.98,1223.56 660.566,1222.6 661.153,1222.85 661.739,1221.59 662.326,1221.67 662.912,1222.89 663.498,1222.64 664.085,1220.16 664.671,1220.55 665.258,1220.77 665.844,1220.79 666.431,1222 667.017,1223.49 667.603,1226.13 668.19,1227.38 668.776,1226 669.363,1224.42 669.949,1227.02 670.535,1229.42 671.122,1231.69 671.708,1232.51 672.295,1236.1 672.881,1240.48 673.467,1240.98 674.054,1238.48 674.64,1233.67 675.227,1236.79 675.813,1236.09 676.4,1234.04 676.986,1232 677.572,1232.6 678.159,1233.43 678.745,1232.94 679.332,1232.36 679.918,1231.85 680.504,1230.1 681.091,1228.41 681.677,1228.07 682.264,1227.79 682.85,1226.24 683.436,1226.03 684.023,1228.5 684.609,1230.95 685.196,1227.73 685.782,1223.54 686.369,1222.12 686.955,1224.46 687.541,1223.01 688.128,1220.36 688.714,1223.04 689.301,1220.27 689.887,1221.7 690.473,1225.4 691.06,1229.21 691.646,1230 692.233,1230.91 692.819,1230.4 693.405,1228.67 693.992,1228.23 694.578,1226.51 695.165,1225.05 695.751,1227.91 696.338,1225.02 696.924,1226.21 697.51,1227.28 698.097,1228.13 698.683,1225.12 699.27,1226.51 699.856,1225.03 700.442,1226.09 701.029,1221.92 701.615,1223.08 702.202,1224.12 702.788,1223.94 703.375,1221.24 703.961,1220.91 704.547,1222.3 705.134,1221.82 705.72,1220.45 706.307,1218.91 706.893,1219.14 707.479,1219.34 708.066,1220.79 708.652,1219.6 709.239,1219.54 709.825,1220.8 710.411,1222.21 710.998,1222.46 711.584,1223.72 712.171,1222.22 712.757,1220.86 713.344,1220.71 713.93,1220.72 714.516,1222.33 715.103,1223.78 715.689,1223.62 716.276,1224.75 716.862,1226.9 717.448,1229.01 718.035,1228.35 718.621,1227.8 719.208,1224.93 719.794,1222.03 720.38,1223.35 720.967,1222.12 721.553,1223.5 722.14,1222.32 722.726,1223.86 723.313,1223.71 723.899,1225 724.485,1223.38 725.072,1225.98 725.658,1225.83 726.245,1225.64 726.831,1224.06 727.417,1222.39 728.004,1221.27 728.59,1222.73 729.177,1222.58 729.763,1221.49 730.349,1218.98 730.936,1217.74 731.522,1217.72 732.109,1219.04 732.695,1219.17 733.282,1219.17 733.868,1219.2 734.454,1221.5 735.041,1218.69 735.627,1220.4 736.214,1219.34 736.8,1221.72 737.386,1220.41 737.973,1222.92 738.559,1224.2 739.146,1221.78 739.732,1221.66 740.318,1220.31 740.905,1220.33 741.491,1220.39 742.078,1220.51 742.664,1222.9 743.251,1221.41 743.837,1222.67 744.423,1219.97 745.01,1221.48 745.596,1220.28 746.183,1220.33 746.769,1217.53 747.355,1217.5 747.942,1217.88 748.528,1219.58 749.115,1220.78 749.701,1221.99 750.288,1221.68 750.874,1223.16 751.46,1224.3 752.047,1222.55 752.633,1223.6 753.22,1223.41 753.806,1221.84 754.392,1221.59 754.979,1218.8 755.565,1220.08 756.152,1222.66 756.738,1222.35 757.324,1221.2 757.911,1219.79 758.497,1220.9 759.084,1220.74 759.67,1224.85 760.257,1226.02 760.843,1225.82 761.429,1224.38 762.016,1221.74 762.602,1222.96 763.189,1224.24 763.775,1224.07 764.361,1222.58 764.948,1220.12 765.534,1220.15 766.121,1218.88 766.707,1222.91 767.293,1225.35 767.88,1223.64 768.466,1222.19 769.053,1223.43 769.639,1223.23 770.226,1222.87 770.812,1222.63 771.398,1222.58 771.985,1223.95 772.571,1221.34 773.158,1222.65 773.744,1221.12 774.33,1220.97 774.917,1219.37 775.503,1219.34 776.09,1220.24 776.676,1221.59 777.262,1219.14 777.849,1218.13 778.435,1215.52 779.022,1215.7 779.608,1217.28 780.195,1219.14 780.781,1220.5 781.367,1220.58 781.954,1220.42 782.54,1222.97 783.127,1222.86 783.713,1222.78 784.299,1220.98 784.886,1222.56 785.472,1221.33 786.059,1221.16 786.645,1222.44 787.232,1223.6 787.818,1222.11 788.404,1221.97 788.991,1224.38 789.577,1226.73 790.164,1226.51 790.75,1226.12 791.336,1227.36 791.923,1225.56 792.509,1225.6 793.096,1226.52 793.682,1228.9 794.268,1227.51 794.855,1230.83 795.441,1230.21 796.028,1228.5 796.614,1225.45 797.201,1226.62 797.787,1226.34 798.373,1224.83 798.96,1223.08 799.546,1226.58 800.133,1229.92 800.719,1228.14 801.305,1228.7 801.892,1229.38 802.478,1227.43 803.065,1227.12 803.651,1226.41 804.237,1226.03 804.824,1223.17 805.41,1223.07 805.997,1224.24 806.583,1224.17 807.17,1222.47 807.756,1219.85 808.342,1219.63 808.929,1219.53 809.515,1219.57 810.102,1220.83 810.688,1218.41 811.274,1217.28 811.861,1216.15 812.447,1215 813.034,1213.93 813.62,1213.88 814.206,1213.93 814.793,1213.82 815.379,1216.73 815.966,1216.91 816.552,1218.45 817.139,1218.47 817.725,1217.21 818.311,1218.6 818.898,1218.79 819.484,1219.02 820.071,1217.43 820.657,1216.3 821.243,1217.37 821.83,1218.56 822.416,1213.39 823.003,1217.29 823.589,1216.1 824.175,1217.45 824.762,1215.01 825.348,1212.62 825.935,1211.49 826.521,1210.57 827.108,1212.02 827.694,1212.74 828.28,1214.15 828.867,1215.71 829.453,1215.85 830.04,1213.23 830.626,1215.07 831.212,1215.15 831.799,1215.5 832.385,1215.36 832.972,1218.09 833.558,1216.88 834.145,1217.96 834.731,1217.91 835.317,1219.12 835.904,1221.7 836.49,1221.72 837.077,1221.68 837.663,1223.86 838.249,1221.99 838.836,1220.49 839.422,1219.23 840.009,1219.22 840.595,1220.4 841.181,1220.14 841.768,1221.23 842.354,1222.46 842.941,1219.53 843.527,1219.5 844.114,1219.39 844.7,1216.93 845.286,1216.95 845.873,1216.8 846.459,1216.92 847.046,1217.13 847.632,1215.95 848.218,1217.3 848.805,1218.72 849.391,1221.08 849.978,1222.24 850.564,1224.59 851.15,1222.99 851.737,1218.83 852.323,1218.79 852.91,1218.72 853.496,1217.41 854.083,1216.32 854.669,1216.51 855.255,1216.63 855.842,1215.65 856.428,1214.41 857.015,1211.92 857.601,1214.78 858.187,1216.39 858.774,1216.68 859.36,1215.25 859.947,1215.47 860.533,1217 861.119,1217.03 861.706,1217.08 862.292,1217.07 862.879,1217.15 863.465,1217.22 864.052,1219.87 864.638,1222.3 865.224,1219.69 865.811,1221.1 866.397,1219.69 866.984,1219.7 867.57,1219.66 868.156,1219.74 868.743,1218.18 869.329,1215.96 869.916,1215.8 870.502,1214.58 871.089,1214.86 871.675,1215.13 872.261,1214.85 872.848,1215.33 873.434,1215.41 874.021,1214.66 874.607,1216.03 875.193,1213.7 875.78,1214 876.366,1214.23 876.953,1211.98 877.539,1210.98 878.125,1210.26 878.712,1211.87 879.298,1210.73 879.885,1209.84 880.471,1212.88 881.058,1212.02 881.644,1213.72 882.23,1212.71 882.817,1214.37 883.403,1215.91 883.99,1214.88 884.576,1216.37 885.162,1216.45 885.749,1217.54 886.335,1217.56 886.922,1219.99 887.508,1217.57 888.094,1215.07 888.681,1216.48 889.267,1217.8 889.854,1217.8 890.44,1215.21 891.027,1215.41 891.613,1211.53 892.199,1213.21 892.786,1215.07 893.372,1209.97 893.959,1211.51 894.545,1213.08 895.131,1217.56 895.718,1217.85 896.304,1218.07 896.891,1217.01 897.477,1219.53 898.063,1220.59 898.65,1221.8 899.236,1222.88 899.823,1222.31 900.409,1219.48 900.996,1215.74 901.582,1216.14 902.168,1217.49 902.755,1217.54 903.341,1220.15 903.928,1221.18 904.514,1223.42 905.1,1223.46 905.687,1220.25 906.273,1216.18 906.86,1216.57 907.446,1216.76 908.032,1217.87 908.619,1217.76 909.205,1217.57 909.792,1219.04 910.378,1217.86 910.965,1217.89 911.551,1216.81 912.137,1215.58 912.724,1214.53 913.31,1214.81 913.897,1216.15 914.483,1213.61 915.069,1215.13 915.656,1220.39 916.242,1220.29 916.829,1222.53 917.415,1223.65 918.002,1223.35 918.588,1221.88 919.174,1223.07 919.761,1224.22 920.347,1226.27 920.934,1224.68 921.52,1224.3 922.106,1225.5 922.693,1224.03 923.279,1230.05 923.866,1229.56 924.452,1232.78 925.038,1229.61 925.625,1228.97 926.211,1227.2 926.798,1227.69 927.384,1227.2 927.971,1226.6 928.557,1223.29 929.143,1220.29 929.73,1217.34 930.316,1216.99 930.903,1217.1 931.489,1217.22 932.075,1216.15 932.662,1217.49 933.248,1215.03 933.835,1214.88 934.421,1217.22 935.007,1214.22 935.594,1212.93 936.18,1211.9 936.767,1210.88 937.353,1210.04 937.94,1210.37 938.526,1210.82 939.112,1209.79 939.699,1211.63 940.285,1210.66 940.872,1212.45 941.458,1216.56 942.044,1217.74 942.631,1219.04 943.217,1217.75 943.804,1217.63 944.39,1220.19 944.976,1221.33 945.563,1222.29 946.149,1224.49 946.736,1223.16 947.322,1224.14 947.909,1222.54 948.495,1221.96 949.081,1220.17 949.668,1219.99 950.254,1219.79 950.841,1221.02 951.427,1219.62 952.013,1218.32 952.6,1215.35 953.186,1214.14 953.773,1218.13 954.359,1219.6 954.945,1219.51 955.532,1220.69 956.118,1217.83 956.705,1217.91 957.291,1213.74 957.878,1214.12 958.464,1212.83 959.05,1214.02 959.637,1215.49 960.223,1216.88 960.81,1218.03 961.396,1215.25 961.982,1217.71 962.569,1219.35 963.155,1221.65 963.742,1221.36 964.328,1219.92 964.915,1221.11 965.501,1220.83 966.087,1221.95 966.674,1223.04 967.26,1222.87 967.847,1221.28 968.433,1222.51 969.019,1222.42 969.606,1221.17 970.192,1222.4 970.779,1220.85 971.365,1224.75 971.951,1224.4 972.538,1225.45 973.124,1225.11 973.711,1223.49 974.297,1224.85 974.884,1227.08 975.47,1226.37 976.056,1230.96 976.643,1231.49 977.229,1229.49 977.816,1230.37 978.402,1229.65 978.988,1227.6 979.575,1224.48 980.161,1223.93 980.748,1222.09 981.334,1219.07 981.92,1218.88 982.507,1217.44 983.093,1213.69 983.68,1211.24 984.266,1211.61 984.853,1211.94 985.439,1213.08 986.025,1209.26 986.612,1210.91 987.198,1209.77 987.785,1208.81 988.371,1210.61 988.957,1214.78 989.544,1214.97 990.13,1217.59 990.717,1216.14 991.303,1213.44 991.889,1213.75 992.476,1212.72 993.062,1214.26 993.649,1214.14 994.235,1215.83 994.822,1215.89 995.408,1217.33 995.994,1214.59 996.581,1215.95 997.167,1214.94 997.754,1212.46 998.34,1214.1 998.926,1212.88 999.513,1211.76 1000.1,1213.41 1000.69,1212.42 1001.27,1216.47 1001.86,1217.99 1002.44,1216.79 1003.03,1218.09 1003.62,1218.26 1004.2,1219.44 1004.79,1219.6 1005.38,1215.58 1005.96,1216.77 1006.55,1218.09 1007.14,1216.61 1007.72,1218.07 1008.31,1217.75 1008.9,1216.47 1009.48,1216.44 1010.07,1217.78 1010.65,1216.51 1011.24,1219.09 1011.83,1219.06 1012.41,1214.94 1013,1213.8 1013.59,1213.87 1014.17,1212.85 1014.76,1213.1 1015.35,1213.35 1015.93,1209.62 1016.52,1209.95 1017.11,1210.46 1017.69,1212.04 1018.28,1210.97 1018.86,1211.48 1019.45,1212.88 1020.04,1214.49 1020.62,1215.94 1021.21,1216.25 1021.8,1215.2 1022.38,1218.04 1022.97,1220.82 1023.56,1219.31 1024.14,1220.25 1024.73,1218.91 1025.32,1218.94 1025.9,1217.54 1026.49,1218.79 1027.07,1217.54 1027.66,1216.37 1028.25,1216.31 1028.83,1215.08 1029.42,1216.19 1030.01,1217.55 1030.59,1216.08 1031.18,1216.23 1031.77,1216.2 1032.35,1216.62 1032.94,1216.78 1033.52,1217.01 1034.11,1217.04 1034.7,1215.6 1035.28,1217.08 1035.87,1218.48 1036.46,1218.26 1037.04,1219.53 1037.63,1219.39 1038.22,1219.31 1038.8,1218.05 1039.39,1220.56 1039.98,1219.13 1040.56,1219.04 1041.15,1219.94 1041.73,1217.13 1042.32,1218.21 1042.91,1219.2 1043.49,1218.13 1044.08,1216.94 1044.67,1215.89 1045.25,1215.97 1045.84,1216.05 1046.43,1216.38 1047.01,1216.55 1047.6,1214.09 1048.19,1215.23 1048.77,1215.44 1049.36,1216.8 1049.94,1218.29 1050.53,1219.42 1051.12,1219.08 1051.7,1218.87 1052.29,1216.01 1052.88,1210.61 1053.46,1212.47 1054.05,1212.61 1054.64,1212.84 1055.22,1212.99 1055.81,1213.13 1056.39,1213.49 1056.98,1216.3 1057.57,1217.71 1058.15,1216.31 1058.74,1215.15 1059.33,1215.12 1059.91,1215.16 1060.5,1214.88 1061.09,1218.89 1061.67,1219.99 1062.26,1223.71 1062.85,1221.96 1063.43,1220.18 1064.02,1218.77 1064.6,1218.71 1065.19,1218.52 1065.78,1221.3 1066.36,1222.39 1066.95,1222.12 1067.54,1223.06 1068.12,1221.51 1068.71,1218.53 1069.3,1219.45 1069.88,1221.92 1070.47,1219.14 1071.06,1219.08 1071.64,1216.32 1072.23,1216.38 1072.81,1219.16 1073.4,1217.85 1073.99,1217.66 1074.57,1217.57 1075.16,1216.45 1075.75,1217.57 1076.33,1215.08 1076.92,1216.47 1077.51,1216.52 1078.09,1214.96 1078.68,1217.37 1079.26,1216.29 1079.85,1215.02 1080.44,1215.41 1081.02,1216.67 1081.61,1218.17 1082.2,1223.1 1082.78,1224.26 1083.37,1225.13 1083.96,1224.73 1084.54,1224.11 1085.13,1225.15 1085.72,1224.63 1086.3,1223.08 1086.89,1221.43 1087.47,1221.08 1088.06,1224.8 1088.65,1224.39 1089.23,1225.51 1089.82,1229.9 1090.41,1226.8 1090.99,1225.1 1091.58,1224.9 1092.17,1225.66 1092.75,1225.22 1093.34,1224.72 1093.93,1224.19 1094.51,1226.18 1095.1,1224.48 1095.68,1222.81 1096.27,1221.09 1096.86,1222.07 1097.44,1220.34 1098.03,1219.95 1098.62,1220.94 1099.2,1218.39 1099.79,1218.4 1100.38,1218.4 1100.96,1220.93 1101.55,1224.72 1102.14,1224.15 1102.72,1223.81 1103.31,1222.12 1103.89,1220.52 1104.48,1221.92 1105.07,1223.15 1105.65,1224.39 1106.24,1222.82 1106.83,1219.74 1107.41,1219.52 1108,1216.76 1108.59,1214.54 1109.17,1214.65 1109.76,1213.48 1110.34,1214.67 1110.93,1215.96 1111.52,1217.26 1112.1,1218.23 1112.69,1219.17 1113.28,1219.14 1113.86,1215.16 1114.45,1213.85 1115.04,1214.27 1115.62,1211.92 1116.21,1210.83 1116.8,1212.41 1117.38,1211.36 1117.97,1211.52 1118.55,1211.84 1119.14,1214.9 1119.73,1213.54 1120.31,1212.23 1120.9,1213.83 1121.49,1215.27 1122.07,1215.15 1122.66,1217.94 1123.25,1216.37 1123.83,1217.57 1124.42,1216.28 1125.01,1216.1 1125.59,1214.78 1126.18,1212.45 1126.76,1216.75 1127.35,1216.74 1127.94,1216.7 1128.52,1215.21 1129.11,1213.85 1129.7,1215.33 1130.28,1216.79 1130.87,1216.62 1131.46,1218.1 1132.04,1218.09 1132.63,1215.29 1133.21,1215.4 1133.8,1214.23 1134.39,1214.42 1134.97,1211.93 1135.56,1212.33 1136.15,1209.97 1136.73,1208.79 1137.32,1209.13 1137.91,1208.52 1138.49,1208.93 1139.08,1208.13 1139.67,1208.68 1140.25,1207.64 1140.84,1211.85 1141.42,1212.26 1142.01,1212.7 1142.6,1212.85 1143.18,1211.55 1143.77,1211.75 1144.36,1211.9 1144.94,1212.28 1145.53,1210.92 1146.12,1209.96 1146.7,1212.97 1147.29,1214.09 1147.88,1213.03 1148.46,1217 1149.05,1215.62 1149.63,1213.35 1150.22,1214.88 1150.81,1216.2 1151.39,1214.68 1151.98,1214.92 1152.57,1216.22 1153.15,1217.91 1153.74,1217.98 1154.33,1219.4 1154.91,1216.47 1155.5,1216.3 1156.09,1215 1156.67,1217.54 1157.26,1216.08 1157.84,1215.2 1158.43,1215.47 1159.02,1215.61 1159.6,1215.57 1160.19,1215.77 1160.78,1217.34 1161.36,1223.64 1161.95,1223.45 1162.54,1224.43 1163.12,1222.74 1163.71,1220.96 1164.29,1220.68 1164.88,1217.77 1165.47,1218.91 1166.05,1217.28 1166.64,1218.6 1167.23,1219.76 1167.81,1215.75 1168.4,1215.95 1168.99,1216.1 1169.57,1218.5 1170.16,1217.2 1170.75,1218.31 1171.33,1216.96 1171.92,1220.73 1172.5,1221.59 1173.09,1220.12 1173.68,1216.99 1174.26,1214.21 1174.85,1215.75 1175.44,1215.87 1176.02,1217.3 1176.61,1218.72 1177.2,1219.79 1177.78,1218.58 1178.37,1217.25 1178.96,1215.8 1179.54,1213.35 1180.13,1212.25 1180.71,1211.14 1181.3,1212.87 1181.89,1215.53 1182.47,1215.4 1183.06,1216.46 1183.65,1216.42 1184.23,1216.62 1184.82,1216.33 1185.41,1214.91 1185.99,1214.84 1186.58,1213.48 1187.16,1209.56 1187.75,1211.16 1188.34,1211.31 1188.92,1215.42 1189.51,1216.83 1190.1,1215.31 1190.68,1215.57 1191.27,1213.27 1191.86,1210.93 1192.44,1212.9 1193.03,1213.05 1193.62,1214.96 1194.2,1216.39 1194.79,1218.93 1195.37,1218.8 1195.96,1221.2 1196.55,1221.09 1197.13,1220.77 1197.72,1221.89 1198.31,1221.76 1198.89,1222.74 1199.48,1223.69 1200.07,1222.17 1200.65,1220.59 1201.24,1221.62 1201.83,1222.48 1202.41,1226.12 1203,1224.39 1203.58,1224.03 1204.17,1221.17 1204.76,1217.28 1205.34,1213.4 1205.93,1213.38 1206.52,1213.29 1207.1,1213.37 1207.69,1212.13 1208.28,1208.52 1208.86,1211.36 1209.45,1211.7 1210.03,1213.48 1210.62,1214.83 1211.21,1214.77 1211.79,1217.5 1212.38,1217.35 1212.97,1217.3 1213.55,1217.42 1214.14,1215.98 1214.73,1218.4 1215.31,1219.7 1215.9,1219.62 1216.49,1218.36 1217.07,1215.62 1217.66,1217.02 1218.24,1217.98 1218.83,1220.38 1219.42,1218.92 1220,1218.68 1220.59,1222.44 1221.18,1220.74 1221.76,1221.63 1222.35,1222.78 1222.94,1223.87 1223.52,1224.86 1224.11,1224.36 1224.7,1221.08 1225.28,1218.26 1225.87,1220.5 1226.45,1217.77 1227.04,1218.78 1227.63,1215.97 1228.21,1216.1 1228.8,1217.43 1229.39,1213.45 1229.97,1213.65 1230.56,1213.76 1231.15,1212.35 1231.73,1215.23 1232.32,1212.86 1232.91,1213.19 1233.49,1210.88 1234.08,1209.92 1234.66,1208.9 1235.25,1206.5 1235.84,1207.29 1236.42,1208.84 1237.01,1209.4 1237.6,1205.88 1238.18,1207.96 1238.77,1208.28 1239.36,1209.06 1239.94,1210.53 1240.53,1209.33 1241.11,1208.4 1241.7,1210.08 1242.29,1209.02 1242.87,1209.37 1243.46,1207.43 1244.05,1208.07 1244.63,1208.6 1245.22,1207.84 1245.81,1209.53 1246.39,1211.14 1246.98,1210.16 1247.57,1207.54 1248.15,1206.52 1248.74,1205.75 1249.32,1207.6 1249.91,1208.4 1250.5,1210.12 1251.08,1210.6 1251.67,1213.61 1252.26,1212.41 1252.84,1213.76 1253.43,1212.85 1254.02,1213.34 1254.6,1213.82 1255.19,1212.96 1255.78,1213.45 1256.36,1215.21 1256.95,1215.31 1257.53,1215.46 1258.12,1214.2 1258.71,1212.95 1259.29,1213.08 1259.88,1214.55 1260.47,1213.26 1261.05,1213.17 1261.64,1215.96 1262.23,1216.34 1262.81,1216.12 1263.4,1217.42 1263.98,1217.36 1264.57,1216.17 1265.16,1214.67 1265.74,1215.97 1266.33,1218.55 1266.92,1215.53 1267.5,1214.43 1268.09,1214.58 1268.68,1215.78 1269.26,1213.16 1269.85,1213.26 1270.44,1214.73 1271.02,1213.64 1271.61,1216.52 1272.19,1217.98 1272.78,1215.42 1273.37,1215.91 1273.95,1216.02 1274.54,1214.67 1275.13,1214.56 1275.71,1214.94 1276.3,1213.75 1276.89,1215.01 1277.47,1215.28 1278.06,1216.85 1278.65,1218.29 1279.23,1216.83 1279.82,1215.86 1280.4,1217.39 1280.99,1216.22 1281.58,1217.46 1282.16,1216.35 1282.75,1215.27 1283.34,1216.34 1283.92,1217.49 1284.51,1216.18 1285.1,1217.6 1285.68,1216.01 1286.27,1215.97 1286.86,1218.97 1287.44,1218.89 1288.03,1217.24 1288.61,1214.57 1289.2,1213.59 1289.79,1214.89 1290.37,1218.6 1290.96,1219.78 1291.55,1218.36 1292.13,1219.47 1292.72,1223.25 1293.31,1221.45 1293.89,1220.85 1294.48,1219.4 1295.06,1219.11 1295.65,1217.81 1296.24,1222.6 1296.82,1224.52 1297.41,1224.4 1298,1222.83 1298.58,1222.45 1299.17,1221.85 1299.76,1221.72 1300.34,1221.39 1300.93,1219.96 1301.52,1222.48 1302.1,1216.94 1302.69,1215.44 1303.27,1215.66 1303.86,1218.49 1304.45,1218.29 1305.03,1216.82 1305.62,1218.01 1306.21,1217.8 1306.79,1217.44 1307.38,1217.43 1307.97,1214.91 1308.55,1215.16 1309.14,1215.25 1309.73,1215.4 1310.31,1220.74 1310.9,1219.28 1311.48,1217.74 1312.07,1218.68 1312.66,1215.09 1313.24,1215.08 1313.83,1213.96 1314.42,1211.43 1315,1210.05 1315.59,1210.35 1316.18,1213.13 1316.76,1210.65 1317.35,1211.16 1317.93,1211.48 1318.52,1210.35 1319.11,1214.45 1319.69,1215.86 1320.28,1216.14 1320.87,1216.3 1321.45,1217.71 1322.04,1217.73 1322.63,1220.08 1323.21,1219.85 1323.8,1215.33 1324.39,1216.53 1324.97,1213.96 1325.56,1212.69 1326.14,1211.46 1326.73,1211.79 1327.32,1210.76 1327.9,1205.68 1328.49,1205.83 1329.08,1207.86 1329.66,1208.03 1330.25,1207.04 1330.84,1207.58 1331.42,1206.73 1332.01,1205.78 1332.6,1205.18 1333.18,1205.64 1333.77,1206.01 1334.35,1207.83 1334.94,1212.06 1335.53,1212.09 1336.11,1210.95 1336.7,1212.43 1337.29,1215.19 1337.87,1212.73 1338.46,1212.96 1339.05,1213.36 1339.63,1215.12 1340.22,1215.18 1340.8,1214.07 1341.39,1212.88 1341.98,1214.07 1342.56,1214.09 1343.15,1214.1 1343.74,1215.62 1344.32,1215.64 1344.91,1215.51 1345.5,1212.76 1346.08,1214.25 1346.67,1211.74 1347.26,1209.25 1347.84,1208.2 1348.43,1207.4 1349.01,1206.49 1349.6,1207.25 1350.19,1210.5 1350.77,1212.44 1351.36,1213.95 1351.95,1214.18 1352.53,1214.51 1353.12,1215.79 1353.71,1216.1 1354.29,1217.65 1354.88,1218.84 1355.47,1218.62 1356.05,1215.89 1356.64,1214.79 1357.22,1214.79 1357.81,1214.77 1358.4,1214.85 1358.98,1214.81 1359.57,1212.29 1360.16,1211.56 1360.74,1211.62 1361.33,1215.85 1361.92,1215.84 1362.5,1215.65 1363.09,1214.64 1363.68,1214.72 1364.26,1215.84 1364.85,1213.2 1365.43,1213.54 1366.02,1216.25 1366.61,1214.94 1367.19,1216.12 1367.78,1218.9 1368.37,1220.27 1368.95,1218.67 1369.54,1219.97 1370.13,1219.99 1370.71,1221.19 1371.3,1223.39 1371.88,1222.83 1372.47,1222.42 1373.06,1223.38 1373.64,1221.78 1374.23,1222.57 1374.82,1224.87 1375.4,1225.85 1375.99,1225.27 1376.58,1222.03 1377.16,1221.64 1377.75,1219.91 1378.34,1218.49 1378.92,1217.04 1379.51,1215.36 1380.09,1216.69 1380.68,1215.68 1381.27,1213.19 1381.85,1213.48 1382.44,1213.33 1383.03,1214.96 1383.61,1216.2 1384.2,1216.27 1384.79,1213.78 1385.37,1213.92 1385.96,1214.25 1386.55,1212.91 1387.13,1214.33 1387.72,1212.9 1388.3,1214.01 1388.89,1211.22 1389.48,1212.96 1390.06,1211.93 1390.65,1212.29 1391.24,1212.57 1391.82,1211.43 1392.41,1211.95 1393,1212.18 1393.58,1211.01 1394.17,1211.2 1394.75,1212.76 1395.34,1215.46 1395.93,1214.39 1396.51,1214.42 1397.1,1213.15 1397.69,1213.27 1398.27,1214.58 1398.86,1214.55 1399.45,1215.87 1400.03,1214.77 1400.62,1215.98 1401.21,1216.34 1401.79,1216.24 1402.38,1217.51 1402.96,1216.03 1403.55,1217.64 1404.14,1216.58 1404.72,1217.7 1405.31,1217.9 1405.9,1221.56 1406.48,1219.78 1407.07,1219.53 1407.66,1221.84 1408.24,1224.07 1408.83,1223.71 1409.42,1223.47 1410,1225.6 1410.59,1225.28 1411.17,1224.74 1411.76,1222.87 1412.35,1222.47 1412.93,1219.97 1413.52,1222.32 1414.11,1223.44 1414.69,1222.91 1415.28,1221.15 1415.87,1219.41 1416.45,1218.91 1417.04,1217.61 1417.63,1214.99 1418.21,1216.23 1418.8,1218.69 1419.38,1217.37 1419.97,1223.74 1420.56,1224.89 1421.14,1225.83 1421.73,1225.07 1422.32,1226.12 1422.9,1227.84 1423.49,1225.94 1424.08,1230.55 1424.66,1227.25 1425.25,1225.46 1425.83,1226.25 1426.42,1228.39 1427.01,1227.76 1427.59,1228.44 1428.18,1227.78 1428.77,1225.65 1429.35,1222.69 1429.94,1219.89 1430.53,1219.58 1431.11,1219.39 1431.7,1218.05 1432.29,1219.07 1432.87,1217.81 1433.46,1215.13 1434.04,1217.55 1434.63,1220.01 1435.22,1218.58 1435.8,1217.21 1436.39,1218.3 1436.98,1215.44 1437.56,1215.28 1438.15,1219.3 1438.74,1221.51 1439.32,1222.65 1439.91,1224.56 1440.5,1223.93 1441.08,1224.94 1441.67,1224.5 1442.25,1222.76 1442.84,1222.31 1443.43,1224.37 1444.01,1224.16 1444.6,1224.73 1445.19,1221.59 1445.77,1217.54 1446.36,1214.74 1446.95,1216.02 1447.53,1220.11 1448.12,1216.07 1448.7,1214.9 1449.29,1213.67 1449.88,1213.72 1450.46,1212.38 1451.05,1213.55 1451.64,1216.22 1452.22,1218.61 1452.81,1218.65 1453.4,1221.34 1453.98,1219.44 1454.57,1216.62 1455.16,1214.91 1455.74,1212.2 1456.33,1212.54 1456.91,1214.06 1457.5,1214.17 1458.09,1212.83 1458.67,1214.08 1459.26,1214.06 1459.85,1211.51 1460.43,1209.41 1461.02,1209.72 1461.61,1211.04 1462.19,1212.59 1462.78,1214.14 1463.37,1217.07 1463.95,1219.6 1464.54,1219.09 1465.12,1216.16 1465.71,1217.64 1466.3,1217.76 1466.88,1213.79 1467.47,1219.24 1468.06,1217.58 1468.64,1217.26 1469.23,1215.93 1469.82,1214.62 1470.4,1217.23 1470.99,1215.79 1471.57,1214.8 1472.16,1212.16 1472.75,1213.75 1473.33,1213.82 1473.92,1212.78 1474.51,1211.65 1475.09,1215.93 1475.68,1215.83 1476.27,1213.5 1476.85,1214.9 1477.44,1214.95 1478.03,1214.79 1478.61,1213.78 1479.2,1211.54 1479.78,1214.32 1480.37,1213.01 1480.96,1212.88 1481.54,1211.82 1482.13,1214.86 1482.72,1214.87 1483.3,1211.24 1483.89,1211.39 1484.48,1211.71 1485.06,1210.79 1485.65,1209.6 1486.24,1209.87 1486.82,1210.27 1487.41,1213.39 1487.99,1212.16 1488.58,1212.48 1489.17,1209.97 1489.75,1209.01 1490.34,1208.35 1490.93,1207.72 1491.51,1209.41 1492.1,1214.66 1492.69,1217.48 1493.27,1214.91 1493.86,1216.39 1494.45,1217.59 1495.03,1215.12 1495.62,1216.36 1496.2,1215.26 1496.79,1213.72 1497.38,1213.2 1497.96,1210.59 1498.55,1212.29 1499.14,1212.49 1499.72,1215.36 1500.31,1216.72 1500.9,1215.63 1501.48,1216.87 1502.07,1215.44 1502.65,1215.31 1503.24,1215.6 1503.83,1217.34 1504.41,1215.84 1505,1217.12 1505.59,1215.76 1506.17,1217.08 1506.76,1218.42 1507.35,1218.11 1507.93,1216.72 1508.52,1218.43 1509.11,1219.77 1509.69,1220.62 1510.28,1219.11 1510.86,1217.59 1511.45,1218.58 1512.04,1219.61 1512.62,1219.12 1513.21,1217.52 1513.8,1214.57 1514.38,1213.4 1514.97,1209.71 1515.56,1212.73 1516.14,1211.6 1516.73,1214.52 1517.32,1214.84 1517.9,1210.92 1518.49,1210.95 1519.07,1212.52 1519.66,1215.59 1520.25,1212.74 1520.83,1215.64 1521.42,1210.21 1522.01,1210.79 1522.59,1209.79 1523.18,1211.3 1523.77,1211.87 1524.35,1214.53 1524.94,1213.44 1525.52,1212.57 1526.11,1214.1 1526.7,1212.75 1527.28,1216.98 1527.87,1215.57 1528.46,1217.07 1529.04,1212.91 1529.63,1211.92 1530.22,1210.75 1530.8,1208.41 1531.39,1210.24 1531.98,1210.48 1532.56,1208.28 1533.15,1207.39 1533.73,1207.78 1534.32,1208.52 1534.91,1207.58 1535.49,1209.38 1536.08,1207.32 1536.67,1207.78 1537.25,1208.35 1537.84,1208.6 1538.43,1209.3 1539.01,1209.8 1539.6,1211.72 1540.19,1212.2 1540.77,1209.98 1541.36,1210.36 1541.94,1208.1 1542.53,1208.66 1543.12,1210.34 1543.7,1210.8 1544.29,1210.98 1544.88,1211.34 1545.46,1209.99 1546.05,1209.14 1546.64,1209.61 1547.22,1212.48 1547.81,1211.35 1548.4,1212.74 1548.98,1212 1549.57,1212.03 1550.15,1212.36 1550.74,1213.89 1551.33,1214.43 1551.91,1214.66 1552.5,1215.11 1553.09,1218.27 1553.67,1217.01 1554.26,1218.35 1554.85,1216.79 1555.43,1217.97 1556.02,1219.27 1556.6,1217.87 1557.19,1217.8 1557.78,1218.08 1558.36,1220.52 1558.95,1218.69 1559.54,1220.01 1560.12,1220.02 1560.71,1219.7 1561.3,1217.94 1561.88,1219.26 1562.47,1218.95 1563.06,1218.73 1563.64,1218.63 1564.23,1218.46 1564.81,1222.1 1565.4,1223.05 1565.99,1227.76 1566.57,1227.24 1567.16,1223.92 1567.75,1224.57 1568.33,1222.79 1568.92,1226.26 1569.51,1221.81 1570.09,1221.57 1570.68,1224.09 1571.27,1224.79 1571.85,1224.87 1572.44,1222.95 1573.02,1222.52 1573.61,1220.84 1574.2,1220.41 1574.78,1220.4 1575.37,1220.07 1575.96,1220.07 1576.54,1218.39 1577.13,1216.9 1577.72,1216.87 1578.3,1216.65 1578.89,1218.94 1579.47,1219.03 1580.06,1220.29 1580.65,1220.37 1581.23,1220.11 1581.82,1221.15 1582.41,1220.65 1582.99,1220.46 1583.58,1221.45 1584.17,1219.59 1584.75,1223.18 1585.34,1224.26 1585.93,1224.72 1586.51,1223 1587.1,1221.6 1587.68,1218.69 1588.27,1218.51 1588.86,1217.03 1589.44,1218.4 1590.03,1217.18 1590.62,1220.96 1591.2,1222.08 1591.79,1222.05 1592.38,1219.31 1592.96,1217.83 1593.55,1215.01 1594.14,1215.09 1594.72,1213.97 1595.31,1214.17 1595.89,1214.1 1596.48,1214.21 1597.07,1212.89 1597.65,1213.23 1598.24,1212.33 1598.83,1211.42 1599.41,1211.68 1600,1213.41 1600.59,1215.12 1601.17,1215.3 1601.76,1212.7 1602.34,1215.34 1602.93,1215.13 1603.52,1216.47 1604.1,1220.23 1604.69,1221.42 1605.28,1222.1 1605.86,1224.35 1606.45,1225.23 1607.04,1223.67 1607.62,1222.03 1608.21,1222.96 1608.8,1222.34 1609.38,1223.21 1609.97,1224.21 1610.55,1225.2 1611.14,1220.77 1611.73,1220.49 1612.31,1221.77 1612.9,1220.27 1613.49,1221.62 1614.07,1222.53 1614.66,1223.58 1615.25,1219.41 1615.83,1216.47 1616.42,1216.65 1617.01,1216.45 1617.59,1212.52 1618.18,1210.08 1618.76,1209.31 1619.35,1209.83 1619.94,1212.9 1620.52,1211.78 1621.11,1211.76 1621.7,1213.23 1622.28,1212.12 1622.87,1215.08 1623.46,1213.88 1624.04,1216.65 1624.63,1216.46 1625.22,1216.34 1625.8,1216.46 1626.39,1220.14 1626.97,1220.16 1627.56,1221.5 1628.15,1218.67 1628.73,1216.06 1629.32,1216.31 1629.91,1215.08 1630.49,1213.91 1631.08,1215.15 1631.67,1216.6 1632.25,1212.46 1632.84,1215.39 1633.42,1215.54 1634.01,1215.45 1634.6,1214.24 1635.18,1214.18 1635.77,1215.47 1636.36,1214.26 1636.94,1212.99 1637.53,1215.64 1638.12,1214.43 1638.7,1216.07 1639.29,1216.31 1639.88,1213.9 1640.46,1215.54 1641.05,1217.02 1641.63,1215.55 1642.22,1213.05 1642.81,1212.17 1643.39,1210.05 1643.98,1210.17 1644.57,1213.15 1645.15,1213.47 1645.74,1215.29 1646.33,1216.67 1646.91,1217.93 1647.5,1216.52 1648.09,1216.77 1648.67,1216.59 1649.26,1216.49 1649.84,1217.86 1650.43,1216.46 1651.02,1215.13 1651.6,1212.57 1652.19,1215.57 1652.78,1213.29 1653.36,1213.08 1653.95,1213.26 1654.54,1213.45 1655.12,1214.97 1655.71,1214.92 1656.29,1217.69 1656.88,1218.95 1657.47,1220 1658.05,1218.19 1658.64,1218.19 1659.23,1218.01 1659.81,1213.82 1660.4,1211.32 1660.99,1210.17 1661.57,1210.46 1662.16,1206.8 1662.75,1208.67 1663.33,1208.7 1663.92,1206.32 1664.5,1208.21 1665.09,1207.15 1665.68,1206.38 1666.26,1204.42 1666.85,1203.78 1667.44,1205.6 1668.02,1206.01 1668.61,1207.98 1669.2,1207.33 1669.78,1210.39 1670.37,1212.24 1670.96,1211.26 1671.54,1210.54 1672.13,1209.71 1672.71,1209.12 1673.3,1209.69 1673.89,1209.83 1674.47,1207.38 1675.06,1210.17 1675.65,1211.76 1676.23,1211.79 1676.82,1209.67 1677.41,1207.47 1677.99,1209.35 1678.58,1208.58 1679.17,1211.7 1679.75,1215.02 1680.34,1214.96 1680.92,1215.1 1681.51,1216.7 1682.1,1218.19 1682.68,1219.75 1683.27,1221.09 1683.86,1219.55 1684.44,1219.47 1685.03,1219.51 1685.62,1221.96 1686.2,1222.99 1686.79,1223.95 1687.37,1222.09 1687.96,1221.67 1688.55,1225.24 1689.13,1226.29 1689.72,1227.24 1690.31,1227.81 1690.89,1227.09 1691.48,1225.34 1692.07,1227.37 1692.65,1229.09 1693.24,1229.5 1693.83,1224.83 1694.41,1222.94 1695,1221.57 1695.58,1221.32 1696.17,1224.84 1696.76,1220.67 1697.34,1218.95 1697.93,1217.53 1698.52,1218.67 1699.1,1218.51 1699.69,1219.73 1700.28,1218.46 1700.86,1218.28 1701.45,1218.45 1702.04,1218.16 1702.62,1219.57 1703.21,1215.38 1703.79,1214.23 1704.38,1213.97 1704.97,1214.29 1705.55,1214.5 1706.14,1216.97 1706.73,1216.6 1707.31,1215.29 1707.9,1217.99 1708.49,1217.8 1709.07,1219.01 1709.66,1220.28 1710.24,1218.66 1710.83,1217.27 1711.42,1218.29 1712,1217.96 1712.59,1218.01 1713.18,1216.58 1713.76,1215.17 1714.35,1219.45 1714.94,1220.65 1715.52,1220.41 1716.11,1221.35 1716.7,1219.81 1717.28,1221.06 1717.87,1222 1718.45,1222.9 1719.04,1222.55 1719.63,1226.26 1720.21,1224.29 1720.8,1226.41 1721.39,1224.64 1721.97,1224.27 1722.56,1225.27 1723.15,1227.24 1723.73,1226.81 1724.32,1226.85 1724.91,1226.32 1725.49,1228.5 1726.08,1226.46 1726.66,1227.19 1727.25,1226.8 1727.84,1228.74 1728.42,1226.76 1729.01,1227.4 1729.6,1226.69 1730.18,1227.21 1730.77,1227.78 1731.36,1227.29 1731.94,1225.36 1732.53,1223.4 1733.11,1224.39 1733.7,1222.77 1734.29,1222.41 1734.87,1219.67 1735.46,1218.06 1736.05,1214.06 1736.63,1214.16 1737.22,1215.16 1737.81,1211.01 1738.39,1209.87 1738.98,1211.45 1739.57,1211.76 1740.15,1213.33 1740.74,1213.55 1741.32,1211.2 1741.91,1211.37 1742.5,1211.38 1743.08,1212.8 1743.67,1215.43 1744.26,1212.46 1744.84,1213.74 1745.43,1216.52 1746.02,1216.65 1746.6,1216.79 1747.19,1217.83 1747.78,1215.2 1748.36,1211.5 1748.95,1211.64 1749.53,1209.22 1750.12,1209.5 1750.71,1208.48 1751.29,1209.87 1751.88,1212.86 1752.47,1212 1753.05,1214.69 1753.64,1214.93 1754.23,1217.7 1754.81,1216.29 1755.4,1216.45 1755.99,1217.53 1756.57,1217.27 1757.16,1214.75 1757.74,1212.2 1758.33,1210.9 1758.92,1212.24 1759.5,1212.44 1760.09,1212.81 1760.68,1214.4 1761.26,1214.72 1761.85,1213.38 1762.44,1214.86 1763.02,1216.02 1763.61,1213.45 1764.19,1216.16 1764.78,1216.16 1765.37,1217.72 1765.95,1217.66 1766.54,1217.58 1767.13,1217.86 1767.71,1214.17 1768.3,1218.25 1768.89,1217.17 1769.47,1220.96 1770.06,1218.04 1770.65,1217.75 1771.23,1218.84 1771.82,1218.81 1772.4,1218.73 1772.99,1218.79 1773.58,1218.61 1774.16,1216.03 1774.75,1214.77 1775.34,1212.4 1775.92,1213.68 1776.51,1215.2 1777.1,1214.03 1777.68,1212.79 1778.27,1211.83 1778.86,1212.2 1779.44,1212.67 1780.03,1212.95 1780.61,1212.94 1781.2,1214.06 1781.79,1211.75 1782.37,1214.7 1782.96,1214.75 1783.55,1215.04 1784.13,1213.7 1784.72,1212.57 1785.31,1214.07 1785.89,1215.26 1786.48,1212.4 1787.06,1212.84 1787.65,1212.84 1788.24,1214.27 1788.82,1216.79 1789.41,1219.32 1790,1217.81 1790.58,1219.58 1791.17,1218.35 1791.76,1218.35 1792.34,1218.29 1792.93,1219.67 1793.52,1219.47 1794.1,1216.85 1794.69,1218 1795.27,1218.97 1795.86,1216.46 1796.45,1217.86 1797.03,1217.82 1797.62,1219.1 1798.21,1219.18 1798.79,1220.22 1799.38,1218.35 1799.97,1218.23 1800.55,1219.65 1801.14,1218.25 1801.73,1221.6 1802.31,1222.67 1802.9,1223.89 1803.48,1224.62 1804.07,1224.1 1804.66,1225.11 1805.24,1223.4 1805.83,1225.56 1806.42,1225.16 1807,1227.12 1807.59,1224.22 1808.18,1223.67 1808.76,1220.6 1809.35,1221.75 1809.94,1220 1810.52,1219.77 1811.11,1222.06 1811.69,1220.54 1812.28,1219.15 1812.87,1216.52 1813.45,1217.75 1814.04,1219.02 1814.63,1219.12 1815.21,1215.11 1815.8,1215.49 1816.39,1216.6 1816.97,1218.05 1817.56,1217.88 1818.14,1218.89 1818.73,1215.94 1819.32,1215.89 1819.9,1214.4 1820.49,1214.59 1821.08,1213.32 1821.66,1214.77 1822.25,1213.42 1822.84,1213.65 1823.42,1212.67 1824.01,1211.35 1824.6,1210.32 1825.18,1210.52 1825.77,1210.85 1826.35,1208.68 1826.94,1210.44 1827.53,1209.38 1828.11,1209.5 1828.7,1211.08 1829.29,1213.98 1829.87,1213.82 1830.46,1215.32 1831.05,1213.9 1831.63,1211.55 1832.22,1211.66 1832.81,1213.19 1833.39,1213.29 1833.98,1213.46 1834.56,1211.02 1835.15,1211.12 1835.74,1212.66 1836.32,1211.45 1836.91,1209.26 1837.5,1211.01 1838.08,1212.6 1838.67,1211.22 1839.26,1211.76 1839.84,1212.21 1840.43,1209.68 1841.01,1209.91 1841.6,1209.11 1842.19,1211.22 1842.77,1212.86 1843.36,1214.4 1843.95,1215.74 1844.53,1214.69 1845.12,1217.54 1845.71,1212.55 1846.29,1214.07 1846.88,1215.13 1847.47,1216.35 1848.05,1217.52 1848.64,1217.34 1849.22,1217.46 1849.81,1216.09 1850.4,1215.82 1850.98,1215.73 1851.57,1214.53 1852.16,1213.44 1852.74,1213.54 1853.33,1211.4 1853.92,1213 1854.5,1213.41 1855.09,1214.93 1855.68,1218.86 1856.26,1218.41 1856.85,1219.61 1857.43,1223.28 1858.02,1222.78 1858.61,1222.54 1859.19,1222.12 1859.78,1221.68 1860.37,1219.85 1860.95,1221.16 1861.54,1220.53 1862.13,1220.69 1862.71,1220.33 1863.3,1221.69 1863.88,1222.64 1864.47,1219.49 1865.06,1219.14 1865.64,1216.76 1866.23,1219.07 1866.82,1219.94 1867.4,1220.9 1867.99,1221.65 1868.58,1221.52 1869.16,1220.17 1869.75,1217.35 1870.34,1217.34 1870.92,1217.12 1871.51,1216.79 1872.09,1214.24 1872.68,1214.41 1873.27,1213.56 1873.85,1212.4 1874.44,1212.51 1875.03,1211.3 1875.61,1211.52 1876.2,1214.15 1876.79,1214.48 1877.37,1214.56 1877.96,1212.28 1878.55,1212.3 1879.13,1212.51 1879.72,1208.89 1880.3,1209.53 1880.89,1207.44 1881.48,1208.18 1882.06,1207.56 1882.65,1209.72 1883.24,1208.39 1883.82,1208.74 1884.41,1206.52 1885,1205.92 1885.58,1202.61 1886.17,1208.88 1886.76,1209.28 1887.34,1209.8 1887.93,1211.65 1888.51,1213.32 1889.1,1212.45 1889.69,1216.18 1890.27,1217.76 1890.86,1219 1891.45,1219 1892.03,1221.54 1892.62,1221.11 1893.21,1223.49 1893.79,1224.52 1894.38,1224 1894.96,1223.89 1895.55,1224.92 1896.14,1224.49 1896.72,1222.74 1897.31,1219.59 1897.9,1218.15 1898.48,1219.12 1899.07,1218.63 1899.66,1218.35 1900.24,1216.88 1900.83,1217.96 1901.42,1215.23 1902,1209.93 1902.59,1210.27 1903.17,1207.46 1903.76,1206.36 1904.35,1209.76 1904.93,1208.59 1905.52,1209.02 1906.11,1209.56 1906.69,1209.75 1907.28,1210.15 1907.87,1211.64 1908.45,1210.38 1909.04,1213.03 1909.63,1213.2 1910.21,1214.51 1910.8,1217.48 1911.38,1216.36 1911.97,1216.25 1912.56,1218.95 1913.14,1221.27 1913.73,1219.62 1914.32,1218.27 1914.9,1216.63 1915.49,1215.41 1916.08,1214.05 1916.66,1215.43 1917.25,1218 1917.83,1215.27 1918.42,1215.13 1919.01,1215.24 1919.59,1215.23 1920.18,1212.67 1920.77,1213.06 1921.35,1214.43 1921.94,1215.78 1922.53,1214.47 1923.11,1214.53 1923.7,1216.94 1924.29,1215.7 1924.87,1217.01 1925.46,1215.6 1926.04,1220.87 1926.63,1223.08 1927.22,1222.87 1927.8,1221.23 1928.39,1223.43 1928.98,1223.14 1929.56,1223.98 1930.15,1225.12 1930.74,1223.24 1931.32,1222.88 1931.91,1222.6 1932.5,1222.13 1933.08,1221.81 1933.67,1223.76 1934.25,1222.25 1934.84,1223.33 1935.43,1223.02 1936.01,1222.35 1936.6,1224.46 1937.19,1221.46 1937.77,1221.14 1938.36,1220.74 1938.95,1217.8 1939.53,1216.7 1940.12,1218.04 1940.71,1214.33 1941.29,1212.08 1941.88,1211.1 1942.46,1213.89 1943.05,1212.89 1943.64,1213.05 1944.22,1214.59 1944.81,1213.47 1945.4,1214.84 1945.98,1215.08 1946.57,1216.44 1947.16,1214.02 1947.74,1215.5 1948.33,1216.71 1948.91,1218.06 1949.5,1217.88 1950.09,1215.2 1950.67,1216.62 1951.26,1216.41 1951.85,1212.46 1952.43,1216.71 1953.02,1215.3 1953.61,1216.75 1954.19,1214.07 1954.78,1216.83 1955.37,1218.15 1955.95,1216.8 1956.54,1219.37 1957.12,1221.78 1957.71,1218.8 1958.3,1218.16 1958.88,1217.93 1959.47,1218.98 1960.06,1220.19 1960.64,1221.25 1961.23,1218.33 1961.82,1216.88 1962.4,1216.74 1962.99,1217.9 1963.58,1217.82 1964.16,1218.2 1964.75,1218.32 1965.33,1216.88 1965.92,1220.51 1966.51,1218.95 1967.09,1220.15 1967.68,1221.31 1968.27,1219.68 1968.85,1224.64 1969.44,1225.27 1970.03,1225.96 1970.61,1224.34 1971.2,1223.63 1971.78,1224.27 1972.37,1222.68 1972.96,1225.02 1973.54,1224.8 1974.13,1223.02 1974.72,1222.8 1975.3,1221.12 1975.89,1218.26 1976.48,1218.09 1977.06,1216.76 1977.65,1212.61 1978.24,1210.04 1978.82,1207.66 1979.41,1209.52 1979.99,1208.69 1980.58,1208.82 1981.17,1210.5 1981.75,1209.47 1982.34,1208.32 1982.93,1210.07 1983.51,1211.63 1984.1,1212.02 1984.69,1210.84 1985.27,1212.36 1985.86,1212.45 1986.45,1209.8 1987.03,1206.13 1987.62,1201.12 1988.2,1203.06 1988.79,1203.83 1989.38,1206.07 1989.96,1210.22 1990.55,1209.29 1991.14,1211.46 1991.72,1209.23 1992.31,1211.03 1992.9,1213.83 1993.48,1216.69 1994.07,1219.01 1994.65,1217.67 1995.24,1218.82 1995.83,1218.67 1996.41,1219.99 1997,1218.54 1997.59,1218.52 1998.17,1218.07 1998.76,1215.46 1999.35,1216.88 1999.93,1219.19 2000.52,1216.67 2001.11,1215.64 2001.69,1213.3 2002.28,1212.37 2002.86,1211.58 2003.45,1214.01 2004.04,1214.32 2004.62,1217.08 2005.21,1219.8 2005.8,1219.63 2006.38,1219.55 2006.97,1219.45 2007.56,1215.25 2008.14,1216.73 2008.73,1216.78 2009.32,1216.92 2009.9,1215.73 2010.49,1214.68 2011.07,1215.89 2011.66,1218.4 2012.25,1215.67 2012.83,1214.49 2013.42,1215.94 2014.01,1217.1 2014.59,1217.18 2015.18,1216.03 2015.77,1217.44 2016.35,1217.23 2016.94,1217.28 2017.53,1219.89 2018.11,1218.53 2018.7,1217.51 2019.28,1217.34 2019.87,1213.39 2020.46,1213.78 2021.04,1214.4 2021.63,1211.86 2022.22,1211.98 2022.8,1212.39 2023.39,1212.76 2023.98,1212.85 2024.56,1214.39 2025.15,1213.48 2025.73,1213.48 2026.32,1213.65 2026.91,1211.39 2027.49,1210.65 2028.08,1212.48 2028.67,1215.25 2029.25,1216.59 2029.84,1217.92 2030.43,1220.36 2031.01,1217.75 2031.6,1212.27 2032.19,1213.96 2032.77,1215.56 2033.36,1215.41 2033.94,1215.33 2034.53,1216.56 2035.12,1215.22 2035.7,1217.7 2036.29,1218.72 2036.88,1219.9 2037.46,1222.49 2038.05,1223.39 2038.64,1222.79 2039.22,1221.15 2039.81,1218.55 2040.4,1218.62 2040.98,1217.03 2041.57,1216.9 2042.15,1219.46 2042.74,1221.71 2043.33,1221.5 2043.91,1221.07 2044.5,1218.61 2045.09,1221.06 2045.67,1219.61 2046.26,1217.98 2046.85,1219.33 2047.43,1217.78 2048.02,1218.84 2048.6,1217.2 2049.19,1217.05 2049.78,1218.32 2050.36,1218.12 2050.95,1216.54 2051.54,1213.75 2052.12,1215.32 2052.71,1214.27 2053.3,1215.69 2053.88,1214.51 2054.47,1212.86 2055.06,1213.11 2055.64,1208.27 2056.23,1208.96 2056.81,1207.96 2057.4,1212.23 2057.99,1211.09 2058.57,1210.17 2059.16,1211.88 2059.75,1212.16 2060.33,1212.28 2060.92,1212.08 2061.51,1210.83 2062.09,1209.56 2062.68,1209.87 2063.27,1210.21 2063.85,1210.83 2064.44,1209.92 2065.02,1206.62 2065.61,1208.4 2066.2,1209.01 2066.78,1209.7 2067.37,1209.86 2067.96,1209.01 2068.54,1209.35 2069.13,1208.82 2069.72,1211.9 2070.3,1212.51 2070.89,1211.49 2071.48,1210.31 2072.06,1211.8 2072.65,1213 2073.23,1211.77 2073.82,1212.32 2074.41,1213.79 2074.99,1216.48 2075.58,1216.48 2076.17,1215.31 2076.75,1214.19 2077.34,1215.55 2077.93,1217 2078.51,1215.61 2079.1,1216.91 2079.68,1217.11 2080.27,1214.53 2080.86,1214.77 2081.44,1215.98 2082.03,1212.28 2082.62,1208.6 2083.2,1209.05 2083.79,1209.42 2084.38,1209.9 2084.96,1212.83 2085.55,1216.8 2086.14,1216.79 2086.72,1216.8 2087.31,1218.07 2087.89,1219.41 2088.48,1219.51 2089.07,1219.21 2089.65,1217.79 2090.24,1218.99 2090.83,1219.06 2091.41,1218.88 2092,1218.84 2092.59,1218.66 2093.17,1215.8 2093.76,1219.63 2094.35,1219.4 2094.93,1219.47 2095.52,1217.9 2096.1,1216.41 2096.69,1217.39 2097.28,1215.88 2097.86,1217.24 2098.45,1216.8 2099.04,1215.31 2099.62,1216.63 2100.21,1216.58 2100.8,1219.07 2101.38,1220.22 2101.97,1222.6 2102.55,1224.63 2103.14,1225.39 2103.73,1226.33 2104.31,1224.64 2104.9,1225.67 2105.49,1221.3 2106.07,1217.04 2106.66,1216.71 2107.25,1216.75 2107.83,1216.73 2108.42,1216.45 2109.01,1217.87 2109.59,1218.92 2110.18,1217.52 2110.76,1214.65 2111.35,1212.07 2111.94,1211.01 2112.52,1210.05 2113.11,1210.39 2113.7,1210.41 2114.28,1213.25 2114.87,1214.69 2115.46,1214.8 2116.04,1214.77 2116.63,1214.74 2117.22,1215 2117.8,1215.03 2118.39,1213.88 2118.97,1215.1 2119.56,1215.14 2120.15,1215.18 2120.73,1215.33 2121.32,1215.25 2121.91,1218.18 2122.49,1217.98 2123.08,1218.04 2123.67,1219.41 2124.25,1221.71 2124.84,1224.1 2125.42,1223.52 2126.01,1222.97 2126.6,1222.75 2127.18,1223.71 2127.77,1221.79 2128.36,1220.17 2128.94,1218.7 2129.53,1218.6 2130.12,1218.32 2130.7,1218.15 2131.29,1218.21 2131.88,1222.38 2132.46,1220.54 2133.05,1223 2133.63,1221.21 2134.22,1221.03 2134.81,1219.46 2135.39,1218.27 2135.98,1220.82 2136.57,1220.65 2137.15,1217.9 2137.74,1217.94 2138.33,1219.17 2138.91,1218.97 2139.5,1218.55 2140.09,1219.83 2140.67,1218.16 2141.26,1217.83 2141.84,1217.62 2142.43,1217.61 2143.02,1216.35 2143.6,1214.63 2144.19,1216.21 2144.78,1215.04 2145.36,1215.03 2145.95,1215.23 2146.54,1215.4 2147.12,1213.9 2147.71,1211.54 2148.3,1209.29 2148.88,1212.28 2149.47,1212.63 2150.05,1211.65 2150.64,1211.93 2151.23,1212.27 2151.81,1213.84 2152.4,1215.18 2152.99,1213.8 2153.57,1213.81 2154.16,1214.04 2154.75,1213.94 2155.33,1214.4 2155.92,1214.35 2156.5,1214.53 2157.09,1213.37 2157.68,1211.78 2158.26,1210.84 \"/>\n<path clip-path=\"url(#clip922)\" d=\"M986.025 1216.73 L986.612 1216.73 L987.198 1216.73 L987.785 1216.73 L988.371 1216.73 L988.957 1216.73 L989.544 1216.73 L990.13 1216.73 L990.717 1216.73 L991.303 1216.73 L991.889 1216.73 L992.476 1216.73 L993.062 1216.73 L993.649 1216.73 L994.235 1216.73 L994.822 1216.73 L995.408 1216.73 L995.994 1216.73 L996.581 1216.73 L997.167 1216.73 L997.754 1216.73 L998.34 1216.73 L998.926 1216.73 L999.513 1216.73 L1000.1 1216.73 L1000.69 1216.73 L1001.27 1216.73 L1001.86 1216.73 L1002.44 1216.73 L1003.03 1216.73 L1003.62 1216.73 L1004.2 1216.73 L1004.79 1216.73 L1005.38 1216.73 L1005.96 1216.73 L1006.55 1216.73 L1007.14 1216.73 L1007.72 1216.73 L1008.31 1216.73 L1008.9 1216.73 L1009.48 1216.73 L1010.07 1216.73 L1010.65 1216.73 L1011.24 1216.73 L1011.83 1216.73 L1012.41 1216.73 L1013 1216.73 L1013.59 1216.73 L1014.17 1216.73 L1014.76 1216.73 L1015.35 1216.73 L1015.93 1216.73 L1016.52 1216.73 L1017.11 1216.73 L1017.69 1216.73 L1018.28 1216.73 L1018.86 1216.73 L1019.45 1216.73 L1020.04 1216.73 L1020.62 1216.73 L1021.21 1216.73 L1021.8 1216.73 L1022.38 1216.73 L1022.97 1216.73 L1023.56 1216.73 L1024.14 1216.73 L1024.73 1216.73 L1025.32 1216.73 L1025.9 1216.73 L1026.49 1216.73 L1027.07 1216.73 L1027.66 1216.73 L1028.25 1216.73 L1028.83 1216.73 L1029.42 1216.73 L1030.01 1216.73 L1030.59 1216.73 L1031.18 1216.73 L1031.77 1216.73 L1032.35 1216.73 L1032.94 1216.73 L1033.52 1216.73 L1034.11 1216.73 L1034.7 1216.73 L1035.28 1216.73 L1035.87 1216.73 L1036.46 1216.73 L1037.04 1216.73 L1037.63 1216.73 L1038.22 1216.73 L1038.8 1216.73 L1039.39 1216.73 L1039.98 1216.73 L1040.56 1216.73 L1041.15 1216.73 L1041.73 1216.73 L1042.32 1216.73 L1042.91 1216.73 L1043.49 1216.73 L1044.08 1216.73 L1044.67 1216.73 L1045.25 1216.73 L1045.84 1216.73 L1046.43 1216.73 L1047.01 1216.73 L1047.6 1216.73 L1048.19 1216.73 L1048.77 1216.73 L1049.36 1216.73 L1049.94 1216.73 L1050.53 1216.73 L1051.12 1216.73 L1051.7 1216.73 L1052.29 1216.73 L1052.88 1216.73 L1053.46 1216.73 L1054.05 1216.73 L1054.64 1216.73 L1055.22 1216.73 L1055.81 1216.73 L1056.39 1216.73 L1056.98 1216.73 L1057.57 1216.73 L1058.15 1216.73 L1058.74 1216.73 L1059.33 1216.73 L1059.91 1216.73 L1060.5 1216.73 L1061.09 1216.73 L1061.67 1216.73 L1062.26 1216.73 L1062.85 1216.73 L1063.43 1216.73 L1064.02 1216.73 L1064.6 1216.73 L1065.19 1216.73 L1065.78 1216.73 L1066.36 1216.73 L1066.95 1216.73 L1067.54 1216.73 L1068.12 1216.73 L1068.71 1216.73 L1069.3 1216.73 L1069.88 1216.73 L1070.47 1216.73 L1071.06 1216.73 L1071.64 1216.73 L1072.23 1216.73 L1072.81 1216.73 L1073.4 1216.73 L1073.99 1216.73 L1074.57 1216.73 L1075.16 1216.73 L1075.75 1216.73 L1076.33 1216.73 L1076.92 1216.73 L1077.51 1216.73 L1078.09 1216.73 L1078.68 1216.73 L1079.26 1216.73 L1079.85 1216.73 L1080.44 1216.73 L1081.02 1216.73 L1081.61 1216.73 L1082.2 1216.73 L1082.78 1216.73 L1083.37 1216.73 L1083.96 1216.73 L1084.54 1216.73 L1085.13 1216.73 L1085.72 1216.73 L1086.3 1216.73 L1086.89 1216.73 L1087.47 1216.73 L1088.06 1216.73 L1088.65 1216.73 L1089.23 1216.73 L1089.82 1216.73 L1090.41 1216.73 L1090.99 1216.73 L1091.58 1216.73 L1092.17 1216.73 L1092.75 1216.73 L1093.34 1216.73 L1093.93 1216.73 L1094.51 1216.73 L1095.1 1216.73 L1095.68 1216.73 L1096.27 1216.73 L1096.86 1216.73 L1097.44 1216.73 L1098.03 1216.73 L1098.62 1216.73 L1099.2 1216.73 L1099.79 1216.73 L1100.38 1216.73 L1100.96 1216.73 L1101.55 1216.73 L1102.14 1216.73 L1102.72 1216.73 L1103.31 1216.73 L1103.89 1216.73 L1104.48 1216.73 L1105.07 1216.73 L1105.65 1216.73 L1106.24 1216.73 L1106.83 1216.73 L1107.41 1216.73 L1108 1216.73 L1108.59 1216.73 L1109.17 1216.73 L1109.76 1216.73 L1110.34 1216.73 L1110.93 1216.73 L1111.52 1216.73 L1112.1 1216.73 L1112.69 1216.73 L1113.28 1216.73 L1113.86 1216.73 L1114.45 1216.73 L1115.04 1216.73 L1115.62 1216.73 L1116.21 1216.73 L1116.8 1216.73 L1117.38 1216.73 L1117.97 1216.73 L1118.55 1216.73 L1119.14 1216.73 L1119.73 1216.73 L1120.31 1216.73 L1120.9 1216.73 L1121.49 1216.73 L1122.07 1216.73 L1122.66 1216.73 L1123.25 1216.73 L1123.83 1216.73 L1124.42 1216.73 L1125.01 1216.73 L1125.59 1216.73 L1126.18 1216.73 L1126.76 1216.73 L1127.35 1216.73 L1127.94 1216.73 L1128.52 1216.73 L1129.11 1216.73 L1129.7 1216.73 L1130.28 1216.73 L1130.87 1216.73 L1131.46 1216.73 L1132.04 1216.73 L1132.63 1216.73 L1133.21 1216.73 L1133.8 1216.73 L1134.39 1216.73 L1134.97 1216.73 L1135.56 1216.73 L1136.15 1216.73 L1136.73 1216.73 L1137.32 1216.73 L1137.91 1216.73 L1138.49 1216.73 L1139.08 1216.73 L1139.67 1216.73 L1140.25 1216.73 L1140.84 1216.73 L1141.42 1216.73 L1142.01 1216.73 L1142.6 1216.73 L1143.18 1216.73 L1143.77 1216.73 L1144.36 1216.73 L1144.94 1216.73 L1145.53 1216.73 L1146.12 1216.73 L1146.7 1216.73 L1147.29 1216.73 L1147.88 1216.73 L1148.46 1216.73 L1149.05 1216.73 L1149.63 1216.73 L1150.22 1216.73 L1150.81 1216.73 L1151.39 1216.73 L1151.98 1216.73 L1152.57 1216.73 L1153.15 1216.73 L1153.74 1216.73 L1154.33 1216.73 L1154.91 1216.73 L1155.5 1216.73 L1156.09 1216.73 L1156.67 1216.73 L1157.26 1216.73 L1157.84 1216.73 L1158.43 1216.73 L1159.02 1216.73 L1159.6 1216.73 L1160.19 1216.73 L1160.78 1216.73 L1161.36 1216.73 L1161.95 1216.73 L1162.54 1216.73 L1163.12 1216.73 L1163.71 1216.73 L1164.29 1216.73 L1164.88 1216.73 L1165.47 1216.73 L1166.05 1216.73 L1166.64 1216.73 L1167.23 1216.73 L1167.81 1216.73 L1168.4 1216.73 L1168.99 1216.73 L1169.57 1216.73 L1170.16 1216.73 L1170.75 1216.73 L1171.33 1216.73 L1171.92 1216.73 L1172.5 1216.73 L1173.09 1216.73 L1173.68 1216.73 L1174.26 1216.73 L1174.85 1216.73 L1175.44 1216.73 L1176.02 1216.73 L1176.61 1216.73 L1177.2 1216.73 L1177.78 1216.73 L1178.37 1216.73 L1178.96 1216.73 L1179.54 1216.73 L1180.13 1216.73 L1180.71 1216.73 L1181.3 1216.73 L1181.89 1216.73 L1182.47 1216.73 L1183.06 1216.73 L1183.65 1216.73 L1184.23 1216.73 L1184.82 1216.73 L1185.41 1216.73 L1185.99 1216.73 L1186.58 1216.73 L1187.16 1216.73 L1187.75 1216.73 L1188.34 1216.73 L1188.92 1216.73 L1189.51 1216.73 L1190.1 1216.73 L1190.68 1216.73 L1191.27 1216.73 L1191.86 1216.73 L1192.44 1216.73 L1193.03 1216.73 L1193.62 1216.73 L1194.2 1216.73 L1194.79 1216.73 L1195.37 1216.73 L1195.96 1216.73 L1196.55 1216.73 L1197.13 1216.73 L1197.72 1216.73 L1198.31 1216.73 L1198.89 1216.73 L1199.48 1216.73 L1200.07 1216.73 L1200.65 1216.73 L1201.24 1216.73 L1201.83 1216.73 L1202.41 1216.73 L1203 1216.73 L1203.58 1216.73 L1204.17 1216.73 L1204.76 1216.73 L1205.34 1216.73 L1205.93 1216.73 L1206.52 1216.73 L1207.1 1216.73 L1207.69 1216.73 L1208.28 1216.73 L1208.86 1216.73 L1209.45 1216.73 L1210.03 1216.73 L1210.62 1216.73 L1211.21 1216.73 L1211.79 1216.73 L1212.38 1216.73 L1212.97 1216.73 L1213.55 1216.73 L1214.14 1216.73 L1214.73 1216.73 L1215.31 1216.73 L1215.9 1216.73 L1216.49 1216.73 L1217.07 1216.73 L1217.66 1216.73 L1218.24 1216.73 L1218.83 1216.73 L1219.42 1216.73 L1220 1216.73 L1220.59 1216.73 L1221.18 1216.73 L1221.76 1216.73 L1222.35 1216.73 L1222.94 1216.73 L1223.52 1216.73 L1224.11 1216.73 L1224.7 1216.73 L1225.28 1216.73 L1225.87 1216.73 L1226.45 1216.73 L1227.04 1216.73 L1227.63 1216.73 L1228.21 1216.73 L1228.8 1216.73 L1229.39 1216.73 L1229.97 1216.73 L1230.56 1216.73 L1231.15 1216.73 L1231.73 1216.73 L1232.32 1216.73 L1232.91 1216.73 L1233.49 1216.73 L1234.08 1216.73 L1234.66 1216.73 L1235.25 1216.73 L1235.84 1216.73 L1236.42 1216.73 L1237.01 1216.73 L1237.6 1216.73 L1238.18 1216.73 L1238.77 1216.73 L1239.36 1216.73 L1239.94 1216.73 L1240.53 1216.73 L1241.11 1216.73 L1241.7 1216.73 L1242.29 1216.73 L1242.87 1216.73 L1243.46 1216.73 L1244.05 1216.73 L1244.63 1216.73 L1245.22 1216.73 L1245.81 1216.73 L1246.39 1216.73 L1246.98 1216.73 L1247.57 1216.73 L1248.15 1216.73 L1248.74 1216.73 L1249.32 1216.73 L1249.91 1216.73 L1250.5 1216.73 L1251.08 1216.73 L1251.67 1216.73 L1252.26 1216.73 L1252.84 1216.73 L1253.43 1216.73 L1254.02 1216.73 L1254.6 1216.73 L1255.19 1216.73 L1255.78 1216.73 L1256.36 1216.73 L1256.95 1216.73 L1257.53 1216.73 L1258.12 1216.73 L1258.71 1216.73 L1259.29 1216.73 L1259.88 1216.73 L1260.47 1216.73 L1261.05 1216.73 L1261.64 1216.73 L1262.23 1216.73 L1262.81 1216.73 L1263.4 1216.73 L1263.98 1216.73 L1264.57 1216.73 L1265.16 1216.73 L1265.74 1216.73 L1266.33 1216.73 L1266.92 1216.73 L1267.5 1216.73 L1268.09 1216.73 L1268.68 1216.73 L1269.26 1216.73 L1269.85 1216.73 L1270.44 1216.73 L1271.02 1216.73 L1271.61 1216.73 L1272.19 1216.73 L1272.78 1216.73 L1273.37 1216.73 L1273.95 1216.73 L1274.54 1216.73 L1275.13 1216.73 L1275.71 1216.73 L1276.3 1216.73 L1276.89 1216.73 L1277.47 1216.73 L1278.06 1216.73 L1278.65 1216.73 L1279.23 1216.73 L1279.82 1216.73 L1280.4 1216.73 L1280.99 1216.73 L1281.58 1216.73 L1282.16 1216.73 L1282.75 1216.73 L1283.34 1216.73 L1283.92 1216.73 L1284.51 1216.73 L1285.1 1216.73 L1285.68 1216.73 L1286.27 1216.73 L1286.86 1216.73 L1287.44 1216.73 L1288.03 1216.73 L1288.61 1216.73 L1289.2 1216.73 L1289.79 1216.73 L1290.37 1216.73 L1290.96 1216.73 L1291.55 1216.73 L1292.13 1216.73 L1292.72 1216.73 L1293.31 1216.73 L1293.89 1216.73 L1294.48 1216.73 L1295.06 1216.73 L1295.65 1216.73 L1296.24 1216.73 L1296.82 1216.73 L1297.41 1216.73 L1298 1216.73 L1298.58 1216.73 L1299.17 1216.73 L1299.76 1216.73 L1300.34 1216.73 L1300.93 1216.73 L1301.52 1216.73 L1302.1 1216.73 L1302.69 1216.73 L1303.27 1216.73 L1303.86 1216.73 L1304.45 1216.73 L1305.03 1216.73 L1305.62 1216.73 L1306.21 1216.73 L1306.79 1216.73 L1307.38 1216.73 L1307.97 1216.73 L1308.55 1216.73 L1309.14 1216.73 L1309.73 1216.73 L1310.31 1216.73 L1310.9 1216.73 L1311.48 1216.73 L1312.07 1216.73 L1312.66 1216.73 L1313.24 1216.73 L1313.83 1216.73 L1314.42 1216.73 L1315 1216.73 L1315.59 1216.73 L1316.18 1216.73 L1316.76 1216.73 L1317.35 1216.73 L1317.93 1216.73 L1318.52 1216.73 L1319.11 1216.73 L1319.69 1216.73 L1320.28 1216.73 L1320.87 1216.73 L1321.45 1216.73 L1322.04 1216.73 L1322.63 1216.73 L1323.21 1216.73 L1323.8 1216.73 L1324.39 1216.73 L1324.97 1216.73 L1325.56 1216.73 L1326.14 1216.73 L1326.73 1216.73 L1327.32 1216.73 L1327.9 1216.73 L1328.49 1216.73 L1329.08 1216.73 L1329.66 1216.73 L1330.25 1216.73 L1330.84 1216.73 L1331.42 1216.73 L1332.01 1216.73 L1332.6 1216.73 L1333.18 1216.73 L1333.77 1216.73 L1334.35 1216.73 L1334.94 1216.73 L1335.53 1216.73 L1336.11 1216.73 L1336.7 1216.73 L1337.29 1216.73 L1337.87 1216.73 L1338.46 1216.73 L1339.05 1216.73 L1339.63 1216.73 L1340.22 1216.73 L1340.8 1216.73 L1341.39 1216.73 L1341.98 1216.73 L1342.56 1216.73 L1343.15 1216.73 L1343.74 1216.73 L1344.32 1216.73 L1344.91 1216.73 L1345.5 1216.73 L1346.08 1216.73 L1346.67 1216.73 L1347.26 1216.73 L1347.84 1216.73 L1348.43 1216.73 L1349.01 1216.73 L1349.6 1216.73 L1350.19 1216.73 L1350.77 1216.73 L1351.36 1216.73 L1351.95 1216.73 L1352.53 1216.73 L1353.12 1216.73 L1353.71 1216.73 L1354.29 1216.73 L1354.88 1216.73 L1355.47 1216.73 L1356.05 1216.73 L1356.64 1216.73 L1357.22 1216.73 L1357.81 1216.73 L1358.4 1216.73 L1358.98 1216.73 L1359.57 1216.73 L1360.16 1216.73 L1360.74 1216.73 L1361.33 1216.73 L1361.92 1216.73 L1362.5 1216.73 L1363.09 1216.73 L1363.68 1216.73 L1364.26 1216.73 L1364.85 1216.73 L1365.43 1216.73 L1366.02 1216.73 L1366.61 1216.73 L1367.19 1216.73 L1367.78 1216.73 L1368.37 1216.73 L1368.95 1216.73 L1369.54 1216.73 L1370.13 1216.73 L1370.71 1216.73 L1371.3 1216.73 L1371.88 1216.73 L1372.47 1216.73 L1373.06 1216.73 L1373.64 1216.73 L1374.23 1216.73 L1374.82 1216.73 L1375.4 1216.73 L1375.99 1216.73 L1376.58 1216.73 L1377.16 1216.73 L1377.75 1216.73 L1378.34 1216.73 L1378.92 1216.73 L1379.51 1216.73 L1380.09 1216.73 L1380.68 1216.73 L1381.27 1216.73 L1381.85 1216.73 L1382.44 1216.73 L1383.03 1216.73 L1383.61 1216.73 L1384.2 1216.73 L1384.79 1216.73 L1385.37 1216.73 L1385.96 1216.73 L1386.55 1216.73 L1387.13 1216.73 L1387.72 1216.73 L1388.3 1216.73 L1388.89 1216.73 L1389.48 1216.73 L1390.06 1216.73 L1390.65 1216.73 L1391.24 1216.73 L1391.82 1216.73 L1392.41 1216.73 L1393 1216.73 L1393.58 1216.73 L1394.17 1216.73 L1394.75 1216.73 L1395.34 1216.73 L1395.93 1216.73 L1396.51 1216.73 L1397.1 1216.73 L1397.69 1216.73 L1398.27 1216.73 L1398.86 1216.73 L1399.45 1216.73 L1400.03 1216.73 L1400.62 1216.73 L1401.21 1216.73 L1401.79 1216.73 L1402.38 1216.73 L1402.96 1216.73 L1403.55 1216.73 L1404.14 1216.73 L1404.72 1216.73 L1405.31 1216.73 L1405.9 1216.73 L1406.48 1216.73 L1407.07 1216.73 L1407.66 1216.73 L1408.24 1216.73 L1408.83 1216.73 L1409.42 1216.73 L1410 1216.73 L1410.59 1216.73 L1411.17 1216.73 L1411.76 1216.73 L1412.35 1216.73 L1412.93 1216.73 L1413.52 1216.73 L1414.11 1216.73 L1414.69 1216.73 L1415.28 1216.73 L1415.87 1216.73 L1416.45 1216.73 L1417.04 1216.73 L1417.63 1216.73 L1418.21 1216.73 L1418.8 1216.73 L1419.38 1216.73 L1419.97 1216.73 L1420.56 1216.73 L1421.14 1216.73 L1421.73 1216.73 L1422.32 1216.73 L1422.9 1216.73 L1423.49 1216.73 L1424.08 1216.73 L1424.66 1216.73 L1425.25 1216.73 L1425.83 1216.73 L1426.42 1216.73 L1427.01 1216.73 L1427.59 1216.73 L1428.18 1216.73 L1428.77 1216.73 L1429.35 1216.73 L1429.94 1216.73 L1430.53 1216.73 L1431.11 1216.73 L1431.7 1216.73 L1432.29 1216.73 L1432.87 1216.73 L1433.46 1216.73 L1434.04 1216.73 L1434.63 1216.73 L1435.22 1216.73 L1435.8 1216.73 L1436.39 1216.73 L1436.98 1216.73 L1437.56 1216.73 L1438.15 1216.73 L1438.74 1216.73 L1439.32 1216.73 L1439.91 1216.73 L1440.5 1216.73 L1441.08 1216.73 L1441.67 1216.73 L1442.25 1216.73 L1442.84 1216.73 L1443.43 1216.73 L1444.01 1216.73 L1444.6 1216.73 L1445.19 1216.73 L1445.77 1216.73 L1446.36 1216.73 L1446.95 1216.73 L1447.53 1216.73 L1448.12 1216.73 L1448.7 1216.73 L1449.29 1216.73 L1449.88 1216.73 L1450.46 1216.73 L1451.05 1216.73 L1451.64 1216.73 L1452.22 1216.73 L1452.81 1216.73 L1453.4 1216.73 L1453.98 1216.73 L1454.57 1216.73 L1455.16 1216.73 L1455.74 1216.73 L1456.33 1216.73 L1456.91 1216.73 L1457.5 1216.73 L1458.09 1216.73 L1458.67 1216.73 L1459.26 1216.73 L1459.85 1216.73 L1460.43 1216.73 L1461.02 1216.73 L1461.61 1216.73 L1462.19 1216.73 L1462.78 1216.73 L1463.37 1216.73 L1463.95 1216.73 L1464.54 1216.73 L1465.12 1216.73 L1465.71 1216.73 L1466.3 1216.73 L1466.88 1216.73 L1467.47 1216.73 L1468.06 1216.73 L1468.64 1216.73 L1469.23 1216.73 L1469.82 1216.73 L1470.4 1216.73 L1470.99 1216.73 L1471.57 1216.73 L1472.16 1216.73 L1472.75 1216.73 L1473.33 1216.73 L1473.92 1216.73 L1474.51 1216.73 L1475.09 1216.73 L1475.68 1216.73 L1476.27 1216.73 L1476.85 1216.73 L1477.44 1216.73 L1478.03 1216.73 L1478.61 1216.73 L1479.2 1216.73 L1479.78 1216.73 L1480.37 1216.73 L1480.96 1216.73 L1481.54 1216.73 L1482.13 1216.73 L1482.72 1216.73 L1483.3 1216.73 L1483.89 1216.73 L1484.48 1216.73 L1485.06 1216.73 L1485.65 1216.73 L1486.24 1216.73 L1486.82 1216.73 L1487.41 1216.73 L1487.99 1216.73 L1488.58 1216.73 L1489.17 1216.73 L1489.75 1216.73 L1490.34 1216.73 L1490.93 1216.73 L1491.51 1216.73 L1492.1 1216.73 L1492.69 1216.73 L1493.27 1216.73 L1493.86 1216.73 L1494.45 1216.73 L1495.03 1216.73 L1495.62 1216.73 L1496.2 1216.73 L1496.79 1216.73 L1497.38 1216.73 L1497.96 1216.73 L1498.55 1216.73 L1499.14 1216.73 L1499.72 1216.73 L1500.31 1216.73 L1500.9 1216.73 L1501.48 1216.73 L1502.07 1216.73 L1502.65 1216.73 L1503.24 1216.73 L1503.83 1216.73 L1504.41 1216.73 L1505 1216.73 L1505.59 1216.73 L1506.17 1216.73 L1506.76 1216.73 L1507.35 1216.73 L1507.93 1216.73 L1508.52 1216.73 L1509.11 1216.73 L1509.69 1216.73 L1510.28 1216.73 L1510.86 1216.73 L1511.45 1216.73 L1512.04 1216.73 L1512.62 1216.73 L1513.21 1216.73 L1513.8 1216.73 L1514.38 1216.73 L1514.97 1216.73 L1515.56 1216.73 L1516.14 1216.73 L1516.73 1216.73 L1517.32 1216.73 L1517.9 1216.73 L1518.49 1216.73 L1519.07 1216.73 L1519.66 1216.73 L1520.25 1216.73 L1520.83 1216.73 L1521.42 1216.73 L1522.01 1216.73 L1522.59 1216.73 L1523.18 1216.73 L1523.77 1216.73 L1524.35 1216.73 L1524.94 1216.73 L1525.52 1216.73 L1526.11 1216.73 L1526.7 1216.73 L1527.28 1216.73 L1527.87 1216.73 L1528.46 1216.73 L1529.04 1216.73 L1529.63 1216.73 L1530.22 1216.73 L1530.8 1216.73 L1531.39 1216.73 L1531.98 1216.73 L1532.56 1216.73 L1533.15 1216.73 L1533.73 1216.73 L1534.32 1216.73 L1534.91 1216.73 L1535.49 1216.73 L1536.08 1216.73 L1536.67 1216.73 L1537.25 1216.73 L1537.84 1216.73 L1538.43 1216.73 L1539.01 1216.73 L1539.6 1216.73 L1540.19 1216.73 L1540.77 1216.73 L1541.36 1216.73 L1541.94 1216.73 L1542.53 1216.73 L1543.12 1216.73 L1543.7 1216.73 L1544.29 1216.73 L1544.88 1216.73 L1545.46 1216.73 L1546.05 1216.73 L1546.64 1216.73 L1547.22 1216.73 L1547.81 1216.73 L1548.4 1216.73 L1548.98 1216.73 L1549.57 1216.73 L1550.15 1216.73 L1550.74 1216.73 L1551.33 1216.73 L1551.91 1216.73 L1552.5 1216.73 L1553.09 1216.73 L1553.67 1216.73 L1554.26 1216.73 L1554.85 1216.73 L1555.43 1216.73 L1556.02 1216.73 L1556.6 1216.73 L1557.19 1216.73 L1557.78 1216.73 L1558.36 1216.73 L1558.95 1216.73 L1559.54 1216.73 L1560.12 1216.73 L1560.71 1216.73 L1561.3 1216.73 L1561.88 1216.73 L1562.47 1216.73 L1563.06 1216.73 L1563.64 1216.73 L1564.23 1216.73 L1564.81 1216.73 L1565.4 1216.73 L1565.99 1216.73 L1566.57 1216.73 L1567.16 1216.73 L1567.75 1216.73 L1568.33 1216.73 L1568.92 1216.73 L1569.51 1216.73 L1570.09 1216.73 L1570.68 1216.73 L1571.27 1216.73 L1571.85 1216.73 L1572.44 1216.73 L1573.02 1216.73 L1573.61 1216.73 L1574.2 1216.73 L1574.78 1216.73 L1575.37 1216.73 L1575.96 1216.73 L1576.54 1216.73 L1577.13 1216.73 L1577.72 1216.73 L1578.3 1216.73 L1578.89 1216.73 L1579.47 1216.73 L1580.06 1216.73 L1580.65 1216.73 L1581.23 1216.73 L1581.82 1216.73 L1582.41 1216.73 L1582.99 1216.73 L1583.58 1216.73 L1584.17 1216.73 L1584.75 1216.73 L1585.34 1216.73 L1585.93 1216.73 L1586.51 1216.73 L1587.1 1216.73 L1587.68 1216.73 L1588.27 1216.73 L1588.86 1216.73 L1589.44 1216.73 L1590.03 1216.73 L1590.62 1216.73 L1591.2 1216.73 L1591.79 1216.73 L1592.38 1216.73 L1592.96 1216.73 L1593.55 1216.73 L1594.14 1216.73 L1594.72 1216.73 L1595.31 1216.73 L1595.89 1216.73 L1596.48 1216.73 L1597.07 1216.73 L1597.65 1216.73 L1598.24 1216.73 L1598.83 1216.73 L1599.41 1216.73 L1600 1216.73 L1600.59 1216.73 L1601.17 1216.73 L1601.76 1216.73 L1602.34 1216.73 L1602.93 1216.73 L1603.52 1216.73 L1604.1 1216.73 L1604.69 1216.73 L1605.28 1216.73 L1605.86 1216.73 L1606.45 1216.73 L1607.04 1216.73 L1607.62 1216.73 L1608.21 1216.73 L1608.8 1216.73 L1609.38 1216.73 L1609.97 1216.73 L1610.55 1216.73 L1611.14 1216.73 L1611.73 1216.73 L1612.31 1216.73 L1612.9 1216.73 L1613.49 1216.73 L1614.07 1216.73 L1614.66 1216.73 L1615.25 1216.73 L1615.83 1216.73 L1616.42 1216.73 L1617.01 1216.73 L1617.59 1216.73 L1618.18 1216.73 L1618.76 1216.73 L1619.35 1216.73 L1619.94 1216.73 L1620.52 1216.73 L1621.11 1216.73 L1621.7 1216.73 L1622.28 1216.73 L1622.87 1216.73 L1623.46 1216.73 L1624.04 1216.73 L1624.63 1216.73 L1625.22 1216.73 L1625.8 1216.73 L1626.39 1216.73 L1626.97 1216.73 L1627.56 1216.73 L1628.15 1216.73 L1628.73 1216.73 L1629.32 1216.73 L1629.91 1216.73 L1630.49 1216.73 L1631.08 1216.73 L1631.67 1216.73 L1632.25 1216.73 L1632.84 1216.73 L1633.42 1216.73 L1634.01 1216.73 L1634.6 1216.73 L1635.18 1216.73 L1635.77 1216.73 L1636.36 1216.73 L1636.94 1216.73 L1637.53 1216.73 L1638.12 1216.73 L1638.7 1216.73 L1639.29 1216.73 L1639.88 1216.73 L1640.46 1216.73 L1641.05 1216.73 L1641.63 1216.73 L1642.22 1216.73 L1642.81 1216.73 L1643.39 1216.73 L1643.98 1216.73 L1644.57 1216.73 L1645.15 1216.73 L1645.74 1216.73 L1646.33 1216.73 L1646.91 1216.73 L1647.5 1216.73 L1648.09 1216.73 L1648.67 1216.73 L1649.26 1216.73 L1649.84 1216.73 L1650.43 1216.73 L1651.02 1216.73 L1651.6 1216.73 L1652.19 1216.73 L1652.78 1216.73 L1653.36 1216.73 L1653.95 1216.73 L1654.54 1216.73 L1655.12 1216.73 L1655.71 1216.73 L1656.29 1216.73 L1656.88 1216.73 L1657.47 1216.73 L1658.05 1216.73 L1658.64 1216.73 L1659.23 1216.73 L1659.81 1216.73 L1660.4 1216.73 L1660.99 1216.73 L1661.57 1216.73 L1662.16 1216.73 L1662.75 1216.73 L1663.33 1216.73 L1663.92 1216.73 L1664.5 1216.73 L1665.09 1216.73 L1665.68 1216.73 L1666.26 1216.73 L1666.85 1216.73 L1667.44 1216.73 L1668.02 1216.73 L1668.61 1216.73 L1669.2 1216.73 L1669.78 1216.73 L1670.37 1216.73 L1670.96 1216.73 L1671.54 1216.73 L1672.13 1216.73 L1672.71 1216.73 L1673.3 1216.73 L1673.89 1216.73 L1674.47 1216.73 L1675.06 1216.73 L1675.65 1216.73 L1676.23 1216.73 L1676.82 1216.73 L1677.41 1216.73 L1677.99 1216.73 L1678.58 1216.73 L1679.17 1216.73 L1679.75 1216.73 L1680.34 1216.73 L1680.92 1216.73 L1681.51 1216.73 L1682.1 1216.73 L1682.68 1216.73 L1683.27 1216.73 L1683.86 1216.73 L1684.44 1216.73 L1685.03 1216.73 L1685.62 1216.73 L1686.2 1216.73 L1686.79 1216.73 L1687.37 1216.73 L1687.96 1216.73 L1688.55 1216.73 L1689.13 1216.73 L1689.72 1216.73 L1690.31 1216.73 L1690.89 1216.73 L1691.48 1216.73 L1692.07 1216.73 L1692.65 1216.73 L1693.24 1216.73 L1693.83 1216.73 L1694.41 1216.73 L1695 1216.73 L1695.58 1216.73 L1696.17 1216.73 L1696.76 1216.73 L1697.34 1216.73 L1697.93 1216.73 L1698.52 1216.73 L1699.1 1216.73 L1699.69 1216.73 L1700.28 1216.73 L1700.86 1216.73 L1701.45 1216.73 L1702.04 1216.73 L1702.62 1216.73 L1703.21 1216.73 L1703.79 1216.73 L1704.38 1216.73 L1704.97 1216.73 L1705.55 1216.73 L1706.14 1216.73 L1706.73 1216.73 L1707.31 1216.73 L1707.9 1216.73 L1708.49 1216.73 L1709.07 1216.73 L1709.66 1216.73 L1710.24 1216.73 L1710.83 1216.73 L1711.42 1216.73 L1712 1216.73 L1712.59 1216.73 L1713.18 1216.73 L1713.76 1216.73 L1714.35 1216.73 L1714.94 1216.73 L1715.52 1216.73 L1716.11 1216.73 L1716.7 1216.73 L1717.28 1216.73 L1717.87 1216.73 L1718.45 1216.73 L1719.04 1216.73 L1719.63 1216.73 L1720.21 1216.73 L1720.8 1216.73 L1721.39 1216.73 L1721.97 1216.73 L1722.56 1216.73 L1723.15 1216.73 L1723.73 1216.73 L1724.32 1216.73 L1724.91 1216.73 L1725.49 1216.73 L1726.08 1216.73 L1726.66 1216.73 L1727.25 1216.73 L1727.84 1216.73 L1728.42 1216.73 L1729.01 1216.73 L1729.6 1216.73 L1730.18 1216.73 L1730.77 1216.73 L1731.36 1216.73 L1731.94 1216.73 L1732.53 1216.73 L1733.11 1216.73 L1733.7 1216.73 L1734.29 1216.73 L1734.87 1216.73 L1735.46 1216.73 L1736.05 1216.73 L1736.63 1216.73 L1737.22 1216.73 L1737.81 1216.73 L1738.39 1216.73 L1738.98 1216.73 L1739.57 1216.73 L1740.15 1216.73 L1740.74 1216.73 L1741.32 1216.73 L1741.91 1216.73 L1742.5 1216.73 L1743.08 1216.73 L1743.67 1216.73 L1744.26 1216.73 L1744.84 1216.73 L1745.43 1216.73 L1746.02 1216.73 L1746.6 1216.73 L1747.19 1216.73 L1747.78 1216.73 L1748.36 1216.73 L1748.95 1216.73 L1749.53 1216.73 L1750.12 1216.73 L1750.71 1216.73 L1751.29 1216.73 L1751.88 1216.73 L1752.47 1216.73 L1753.05 1216.73 L1753.64 1216.73 L1754.23 1216.73 L1754.81 1216.73 L1755.4 1216.73 L1755.99 1216.73 L1756.57 1216.73 L1757.16 1216.73 L1757.74 1216.73 L1758.33 1216.73 L1758.92 1216.73 L1759.5 1216.73 L1760.09 1216.73 L1760.68 1216.73 L1761.26 1216.73 L1761.85 1216.73 L1762.44 1216.73 L1763.02 1216.73 L1763.61 1216.73 L1764.19 1216.73 L1764.78 1216.73 L1765.37 1216.73 L1765.95 1216.73 L1766.54 1216.73 L1767.13 1216.73 L1767.71 1216.73 L1768.3 1216.73 L1768.89 1216.73 L1769.47 1216.73 L1770.06 1216.73 L1770.65 1216.73 L1771.23 1216.73 L1771.82 1216.73 L1772.4 1216.73 L1772.99 1216.73 L1773.58 1216.73 L1774.16 1216.73 L1774.75 1216.73 L1775.34 1216.73 L1775.92 1216.73 L1776.51 1216.73 L1777.1 1216.73 L1777.68 1216.73 L1778.27 1216.73 L1778.86 1216.73 L1779.44 1216.73 L1780.03 1216.73 L1780.61 1216.73 L1781.2 1216.73 L1781.79 1216.73 L1782.37 1216.73 L1782.96 1216.73 L1783.55 1216.73 L1784.13 1216.73 L1784.72 1216.73 L1785.31 1216.73 L1785.89 1216.73 L1786.48 1216.73 L1787.06 1216.73 L1787.65 1216.73 L1788.24 1216.73 L1788.82 1216.73 L1789.41 1216.73 L1790 1216.73 L1790.58 1216.73 L1791.17 1216.73 L1791.76 1216.73 L1792.34 1216.73 L1792.93 1216.73 L1793.52 1216.73 L1794.1 1216.73 L1794.69 1216.73 L1795.27 1216.73 L1795.86 1216.73 L1796.45 1216.73 L1797.03 1216.73 L1797.62 1216.73 L1798.21 1216.73 L1798.79 1216.73 L1799.38 1216.73 L1799.97 1216.73 L1800.55 1216.73 L1801.14 1216.73 L1801.73 1216.73 L1802.31 1216.73 L1802.9 1216.73 L1803.48 1216.73 L1804.07 1216.73 L1804.66 1216.73 L1805.24 1216.73 L1805.83 1216.73 L1806.42 1216.73 L1807 1216.73 L1807.59 1216.73 L1808.18 1216.73 L1808.76 1216.73 L1809.35 1216.73 L1809.94 1216.73 L1810.52 1216.73 L1811.11 1216.73 L1811.69 1216.73 L1812.28 1216.73 L1812.87 1216.73 L1813.45 1216.73 L1814.04 1216.73 L1814.63 1216.73 L1815.21 1216.73 L1815.8 1216.73 L1816.39 1216.73 L1816.97 1216.73 L1817.56 1216.73 L1818.14 1216.73 L1818.73 1216.73 L1819.32 1216.73 L1819.9 1216.73 L1820.49 1216.73 L1821.08 1216.73 L1821.66 1216.73 L1822.25 1216.73 L1822.84 1216.73 L1823.42 1216.73 L1824.01 1216.73 L1824.6 1216.73 L1825.18 1216.73 L1825.77 1216.73 L1826.35 1216.73 L1826.94 1216.73 L1827.53 1216.73 L1828.11 1216.73 L1828.7 1216.73 L1829.29 1216.73 L1829.87 1216.73 L1830.46 1216.73 L1831.05 1216.73 L1831.63 1216.73 L1832.22 1216.73 L1832.81 1216.73 L1833.39 1216.73 L1833.98 1216.73 L1834.56 1216.73 L1835.15 1216.73 L1835.74 1216.73 L1836.32 1216.73 L1836.91 1216.73 L1837.5 1216.73 L1838.08 1216.73 L1838.67 1216.73 L1839.26 1216.73 L1839.84 1216.73 L1840.43 1216.73 L1841.01 1216.73 L1841.6 1216.73 L1842.19 1216.73 L1842.77 1216.73 L1843.36 1216.73 L1843.95 1216.73 L1844.53 1216.73 L1845.12 1216.73 L1845.71 1216.73 L1846.29 1216.73 L1846.88 1216.73 L1847.47 1216.73 L1848.05 1216.73 L1848.64 1216.73 L1849.22 1216.73 L1849.81 1216.73 L1850.4 1216.73 L1850.98 1216.73 L1851.57 1216.73 L1852.16 1216.73 L1852.74 1216.73 L1853.33 1216.73 L1853.92 1216.73 L1854.5 1216.73 L1855.09 1216.73 L1855.68 1216.73 L1856.26 1216.73 L1856.85 1216.73 L1857.43 1216.73 L1858.02 1216.73 L1858.61 1216.73 L1859.19 1216.73 L1859.78 1216.73 L1860.37 1216.73 L1860.95 1216.73 L1861.54 1216.73 L1862.13 1216.73 L1862.71 1216.73 L1863.3 1216.73 L1863.88 1216.73 L1864.47 1216.73 L1865.06 1216.73 L1865.64 1216.73 L1866.23 1216.73 L1866.82 1216.73 L1867.4 1216.73 L1867.99 1216.73 L1868.58 1216.73 L1869.16 1216.73 L1869.75 1216.73 L1870.34 1216.73 L1870.92 1216.73 L1871.51 1216.73 L1872.09 1216.73 L1872.68 1216.73 L1873.27 1216.73 L1873.85 1216.73 L1874.44 1216.73 L1875.03 1216.73 L1875.61 1216.73 L1876.2 1216.73 L1876.79 1216.73 L1877.37 1216.73 L1877.96 1216.73 L1878.55 1216.73 L1879.13 1216.73 L1879.72 1216.73 L1880.3 1216.73 L1880.89 1216.73 L1881.48 1216.73 L1882.06 1216.73 L1882.65 1216.73 L1883.24 1216.73 L1883.82 1216.73 L1884.41 1216.73 L1885 1216.73 L1885.58 1216.73 L1886.17 1216.73 L1886.76 1216.73 L1887.34 1216.73 L1887.93 1216.73 L1888.51 1216.73 L1889.1 1216.73 L1889.69 1216.73 L1890.27 1216.73 L1890.86 1216.73 L1891.45 1216.73 L1892.03 1216.73 L1892.62 1216.73 L1893.21 1216.73 L1893.79 1216.73 L1894.38 1216.73 L1894.96 1216.73 L1895.55 1216.73 L1896.14 1216.73 L1896.72 1216.73 L1897.31 1216.73 L1897.9 1216.73 L1898.48 1216.73 L1899.07 1216.73 L1899.66 1216.73 L1900.24 1216.73 L1900.83 1216.73 L1901.42 1216.73 L1902 1216.73 L1902.59 1216.73 L1903.17 1216.73 L1903.76 1216.73 L1904.35 1216.73 L1904.93 1216.73 L1905.52 1216.73 L1906.11 1216.73 L1906.69 1216.73 L1907.28 1216.73 L1907.87 1216.73 L1908.45 1216.73 L1909.04 1216.73 L1909.63 1216.73 L1910.21 1216.73 L1910.8 1216.73 L1911.38 1216.73 L1911.97 1216.73 L1912.56 1216.73 L1913.14 1216.73 L1913.73 1216.73 L1914.32 1216.73 L1914.9 1216.73 L1915.49 1216.73 L1916.08 1216.73 L1916.66 1216.73 L1917.25 1216.73 L1917.83 1216.73 L1918.42 1216.73 L1919.01 1216.73 L1919.59 1216.73 L1920.18 1216.73 L1920.77 1216.73 L1921.35 1216.73 L1921.94 1216.73 L1922.53 1216.73 L1923.11 1216.73 L1923.7 1216.73 L1924.29 1216.73 L1924.87 1216.73 L1925.46 1216.73 L1926.04 1216.73 L1926.63 1216.73 L1927.22 1216.73 L1927.8 1216.73 L1928.39 1216.73 L1928.98 1216.73 L1929.56 1216.73 L1930.15 1216.73 L1930.74 1216.73 L1931.32 1216.73 L1931.91 1216.73 L1932.5 1216.73 L1933.08 1216.73 L1933.67 1216.73 L1934.25 1216.73 L1934.84 1216.73 L1935.43 1216.73 L1936.01 1216.73 L1936.6 1216.73 L1937.19 1216.73 L1937.77 1216.73 L1938.36 1216.73 L1938.95 1216.73 L1939.53 1216.73 L1940.12 1216.73 L1940.71 1216.73 L1941.29 1216.73 L1941.88 1216.73 L1942.46 1216.73 L1943.05 1216.73 L1943.64 1216.73 L1944.22 1216.73 L1944.81 1216.73 L1945.4 1216.73 L1945.98 1216.73 L1946.57 1216.73 L1947.16 1216.73 L1947.74 1216.73 L1948.33 1216.73 L1948.91 1216.73 L1949.5 1216.73 L1950.09 1216.73 L1950.67 1216.73 L1951.26 1216.73 L1951.85 1216.73 L1952.43 1216.73 L1953.02 1216.73 L1953.61 1216.73 L1954.19 1216.73 L1954.78 1216.73 L1955.37 1216.73 L1955.95 1216.73 L1956.54 1216.73 L1957.12 1216.73 L1957.71 1216.73 L1958.3 1216.73 L1958.88 1216.73 L1959.47 1216.73 L1960.06 1216.73 L1960.64 1216.73 L1961.23 1216.73 L1961.82 1216.73 L1962.4 1216.73 L1962.99 1216.73 L1963.58 1216.73 L1964.16 1216.73 L1964.75 1216.73 L1965.33 1216.73 L1965.92 1216.73 L1966.51 1216.73 L1967.09 1216.73 L1967.68 1216.73 L1968.27 1216.73 L1968.85 1216.73 L1969.44 1216.73 L1970.03 1216.73 L1970.61 1216.73 L1971.2 1216.73 L1971.78 1216.73 L1972.37 1216.73 L1972.96 1216.73 L1973.54 1216.73 L1974.13 1216.73 L1974.72 1216.73 L1975.3 1216.73 L1975.89 1216.73 L1976.48 1216.73 L1977.06 1216.73 L1977.65 1216.73 L1978.24 1216.73 L1978.82 1216.73 L1979.41 1216.73 L1979.99 1216.73 L1980.58 1216.73 L1981.17 1216.73 L1981.75 1216.73 L1982.34 1216.73 L1982.93 1216.73 L1983.51 1216.73 L1984.1 1216.73 L1984.69 1216.73 L1985.27 1216.73 L1985.86 1216.73 L1986.45 1216.73 L1987.03 1216.73 L1987.62 1216.73 L1988.2 1216.73 L1988.79 1216.73 L1989.38 1216.73 L1989.96 1216.73 L1990.55 1216.73 L1991.14 1216.73 L1991.72 1216.73 L1992.31 1216.73 L1992.9 1216.73 L1993.48 1216.73 L1994.07 1216.73 L1994.65 1216.73 L1995.24 1216.73 L1995.83 1216.73 L1996.41 1216.73 L1997 1216.73 L1997.59 1216.73 L1998.17 1216.73 L1998.76 1216.73 L1999.35 1216.73 L1999.93 1216.73 L2000.52 1216.73 L2001.11 1216.73 L2001.69 1216.73 L2002.28 1216.73 L2002.86 1216.73 L2003.45 1216.73 L2004.04 1216.73 L2004.62 1216.73 L2005.21 1216.73 L2005.8 1216.73 L2006.38 1216.73 L2006.97 1216.73 L2007.56 1216.73 L2008.14 1216.73 L2008.73 1216.73 L2009.32 1216.73 L2009.9 1216.73 L2010.49 1216.73 L2011.07 1216.73 L2011.66 1216.73 L2012.25 1216.73 L2012.83 1216.73 L2013.42 1216.73 L2014.01 1216.73 L2014.59 1216.73 L2015.18 1216.73 L2015.77 1216.73 L2016.35 1216.73 L2016.94 1216.73 L2017.53 1216.73 L2018.11 1216.73 L2018.7 1216.73 L2019.28 1216.73 L2019.87 1216.73 L2020.46 1216.73 L2021.04 1216.73 L2021.63 1216.73 L2022.22 1216.73 L2022.8 1216.73 L2023.39 1216.73 L2023.98 1216.73 L2024.56 1216.73 L2025.15 1216.73 L2025.73 1216.73 L2026.32 1216.73 L2026.91 1216.73 L2027.49 1216.73 L2028.08 1216.73 L2028.67 1216.73 L2029.25 1216.73 L2029.84 1216.73 L2030.43 1216.73 L2031.01 1216.73 L2031.6 1216.73 L2032.19 1216.73 L2032.77 1216.73 L2033.36 1216.73 L2033.94 1216.73 L2034.53 1216.73 L2035.12 1216.73 L2035.7 1216.73 L2036.29 1216.73 L2036.88 1216.73 L2037.46 1216.73 L2038.05 1216.73 L2038.64 1216.73 L2039.22 1216.73 L2039.81 1216.73 L2040.4 1216.73 L2040.98 1216.73 L2041.57 1216.73 L2042.15 1216.73 L2042.74 1216.73 L2043.33 1216.73 L2043.91 1216.73 L2044.5 1216.73 L2045.09 1216.73 L2045.67 1216.73 L2046.26 1216.73 L2046.85 1216.73 L2047.43 1216.73 L2048.02 1216.73 L2048.6 1216.73 L2049.19 1216.73 L2049.78 1216.73 L2050.36 1216.73 L2050.95 1216.73 L2051.54 1216.73 L2052.12 1216.73 L2052.71 1216.73 L2053.3 1216.73 L2053.88 1216.73 L2054.47 1216.73 L2055.06 1216.73 L2055.64 1216.73 L2056.23 1216.73 L2056.81 1216.73 L2057.4 1216.73 L2057.99 1216.73 L2058.57 1216.73 L2059.16 1216.73 L2059.75 1216.73 L2060.33 1216.73 L2060.92 1216.73 L2061.51 1216.73 L2062.09 1216.73 L2062.68 1216.73 L2063.27 1216.73 L2063.85 1216.73 L2064.44 1216.73 L2065.02 1216.73 L2065.61 1216.73 L2066.2 1216.73 L2066.78 1216.73 L2067.37 1216.73 L2067.96 1216.73 L2068.54 1216.73 L2069.13 1216.73 L2069.72 1216.73 L2070.3 1216.73 L2070.89 1216.73 L2071.48 1216.73 L2072.06 1216.73 L2072.65 1216.73 L2073.23 1216.73 L2073.82 1216.73 L2074.41 1216.73 L2074.99 1216.73 L2075.58 1216.73 L2076.17 1216.73 L2076.75 1216.73 L2077.34 1216.73 L2077.93 1216.73 L2078.51 1216.73 L2079.1 1216.73 L2079.68 1216.73 L2080.27 1216.73 L2080.86 1216.73 L2081.44 1216.73 L2082.03 1216.73 L2082.62 1216.73 L2083.2 1216.73 L2083.79 1216.73 L2084.38 1216.73 L2084.96 1216.73 L2085.55 1216.73 L2086.14 1216.73 L2086.72 1216.73 L2087.31 1216.73 L2087.89 1216.73 L2088.48 1216.73 L2089.07 1216.73 L2089.65 1216.73 L2090.24 1216.73 L2090.83 1216.73 L2091.41 1216.73 L2092 1216.73 L2092.59 1216.73 L2093.17 1216.73 L2093.76 1216.73 L2094.35 1216.73 L2094.93 1216.73 L2095.52 1216.73 L2096.1 1216.73 L2096.69 1216.73 L2097.28 1216.73 L2097.86 1216.73 L2098.45 1216.73 L2099.04 1216.73 L2099.62 1216.73 L2100.21 1216.73 L2100.8 1216.73 L2101.38 1216.73 L2101.97 1216.73 L2102.55 1216.73 L2103.14 1216.73 L2103.73 1216.73 L2104.31 1216.73 L2104.9 1216.73 L2105.49 1216.73 L2106.07 1216.73 L2106.66 1216.73 L2107.25 1216.73 L2107.83 1216.73 L2108.42 1216.73 L2109.01 1216.73 L2109.59 1216.73 L2110.18 1216.73 L2110.76 1216.73 L2111.35 1216.73 L2111.94 1216.73 L2112.52 1216.73 L2113.11 1216.73 L2113.7 1216.73 L2114.28 1216.73 L2114.87 1216.73 L2115.46 1216.73 L2116.04 1216.73 L2116.63 1216.73 L2117.22 1216.73 L2117.8 1216.73 L2118.39 1216.73 L2118.97 1216.73 L2119.56 1216.73 L2120.15 1216.73 L2120.73 1216.73 L2121.32 1216.73 L2121.91 1216.73 L2122.49 1216.73 L2123.08 1216.73 L2123.67 1216.73 L2124.25 1216.73 L2124.84 1216.73 L2125.42 1216.73 L2126.01 1216.73 L2126.6 1216.73 L2127.18 1216.73 L2127.77 1216.73 L2128.36 1216.73 L2128.94 1216.73 L2129.53 1216.73 L2130.12 1216.73 L2130.7 1216.73 L2131.29 1216.73 L2131.88 1216.73 L2132.46 1216.73 L2133.05 1216.73 L2133.63 1216.73 L2134.22 1216.73 L2134.81 1216.73 L2135.39 1216.73 L2135.98 1216.73 L2136.57 1216.73 L2137.15 1216.73 L2137.74 1216.73 L2138.33 1216.73 L2138.91 1216.73 L2139.5 1216.73 L2140.09 1216.73 L2140.67 1216.73 L2141.26 1216.73 L2141.84 1216.73 L2142.43 1216.73 L2143.02 1216.73 L2143.6 1216.73 L2144.19 1216.73 L2144.78 1216.73 L2145.36 1216.73 L2145.95 1216.73 L2146.54 1216.73 L2147.12 1216.73 L2147.71 1216.73 L2148.3 1216.73 L2148.88 1216.73 L2149.47 1216.73 L2150.05 1216.73 L2150.64 1216.73 L2151.23 1216.73 L2151.81 1216.73 L2152.4 1216.73 L2152.99 1216.73 L2153.57 1216.73 L2154.16 1216.73 L2154.75 1216.73 L2155.33 1216.73 L2155.92 1216.73 L2156.5 1216.73 L2157.09 1216.73 L2157.68 1216.73 L2158.26 1216.73 L2158.26 1215.86 L2157.68 1215.86 L2157.09 1215.86 L2156.5 1215.86 L2155.92 1215.86 L2155.33 1215.86 L2154.75 1215.86 L2154.16 1215.86 L2153.57 1215.86 L2152.99 1215.86 L2152.4 1215.86 L2151.81 1215.86 L2151.23 1215.86 L2150.64 1215.86 L2150.05 1215.86 L2149.47 1215.86 L2148.88 1215.86 L2148.3 1215.86 L2147.71 1215.86 L2147.12 1215.86 L2146.54 1215.86 L2145.95 1215.86 L2145.36 1215.86 L2144.78 1215.86 L2144.19 1215.86 L2143.6 1215.86 L2143.02 1215.86 L2142.43 1215.86 L2141.84 1215.86 L2141.26 1215.86 L2140.67 1215.86 L2140.09 1215.86 L2139.5 1215.86 L2138.91 1215.86 L2138.33 1215.86 L2137.74 1215.86 L2137.15 1215.86 L2136.57 1215.86 L2135.98 1215.86 L2135.39 1215.86 L2134.81 1215.86 L2134.22 1215.86 L2133.63 1215.86 L2133.05 1215.86 L2132.46 1215.86 L2131.88 1215.86 L2131.29 1215.86 L2130.7 1215.86 L2130.12 1215.86 L2129.53 1215.86 L2128.94 1215.86 L2128.36 1215.86 L2127.77 1215.86 L2127.18 1215.86 L2126.6 1215.86 L2126.01 1215.86 L2125.42 1215.86 L2124.84 1215.86 L2124.25 1215.86 L2123.67 1215.86 L2123.08 1215.86 L2122.49 1215.86 L2121.91 1215.86 L2121.32 1215.86 L2120.73 1215.86 L2120.15 1215.86 L2119.56 1215.86 L2118.97 1215.86 L2118.39 1215.86 L2117.8 1215.86 L2117.22 1215.86 L2116.63 1215.86 L2116.04 1215.86 L2115.46 1215.86 L2114.87 1215.86 L2114.28 1215.86 L2113.7 1215.86 L2113.11 1215.86 L2112.52 1215.86 L2111.94 1215.86 L2111.35 1215.86 L2110.76 1215.86 L2110.18 1215.86 L2109.59 1215.86 L2109.01 1215.86 L2108.42 1215.86 L2107.83 1215.86 L2107.25 1215.86 L2106.66 1215.86 L2106.07 1215.86 L2105.49 1215.86 L2104.9 1215.86 L2104.31 1215.86 L2103.73 1215.86 L2103.14 1215.86 L2102.55 1215.86 L2101.97 1215.86 L2101.38 1215.86 L2100.8 1215.86 L2100.21 1215.86 L2099.62 1215.86 L2099.04 1215.86 L2098.45 1215.86 L2097.86 1215.86 L2097.28 1215.86 L2096.69 1215.86 L2096.1 1215.86 L2095.52 1215.86 L2094.93 1215.86 L2094.35 1215.86 L2093.76 1215.86 L2093.17 1215.86 L2092.59 1215.86 L2092 1215.86 L2091.41 1215.86 L2090.83 1215.86 L2090.24 1215.86 L2089.65 1215.86 L2089.07 1215.86 L2088.48 1215.86 L2087.89 1215.86 L2087.31 1215.86 L2086.72 1215.86 L2086.14 1215.86 L2085.55 1215.86 L2084.96 1215.86 L2084.38 1215.86 L2083.79 1215.86 L2083.2 1215.86 L2082.62 1215.86 L2082.03 1215.86 L2081.44 1215.86 L2080.86 1215.86 L2080.27 1215.86 L2079.68 1215.86 L2079.1 1215.86 L2078.51 1215.86 L2077.93 1215.86 L2077.34 1215.86 L2076.75 1215.86 L2076.17 1215.86 L2075.58 1215.86 L2074.99 1215.86 L2074.41 1215.86 L2073.82 1215.86 L2073.23 1215.86 L2072.65 1215.86 L2072.06 1215.86 L2071.48 1215.86 L2070.89 1215.86 L2070.3 1215.86 L2069.72 1215.86 L2069.13 1215.86 L2068.54 1215.86 L2067.96 1215.86 L2067.37 1215.86 L2066.78 1215.86 L2066.2 1215.86 L2065.61 1215.86 L2065.02 1215.86 L2064.44 1215.86 L2063.85 1215.86 L2063.27 1215.86 L2062.68 1215.86 L2062.09 1215.86 L2061.51 1215.86 L2060.92 1215.86 L2060.33 1215.86 L2059.75 1215.86 L2059.16 1215.86 L2058.57 1215.86 L2057.99 1215.86 L2057.4 1215.86 L2056.81 1215.86 L2056.23 1215.86 L2055.64 1215.86 L2055.06 1215.86 L2054.47 1215.86 L2053.88 1215.86 L2053.3 1215.86 L2052.71 1215.86 L2052.12 1215.86 L2051.54 1215.86 L2050.95 1215.86 L2050.36 1215.86 L2049.78 1215.86 L2049.19 1215.86 L2048.6 1215.86 L2048.02 1215.86 L2047.43 1215.86 L2046.85 1215.86 L2046.26 1215.86 L2045.67 1215.86 L2045.09 1215.86 L2044.5 1215.86 L2043.91 1215.86 L2043.33 1215.86 L2042.74 1215.86 L2042.15 1215.86 L2041.57 1215.86 L2040.98 1215.86 L2040.4 1215.86 L2039.81 1215.86 L2039.22 1215.86 L2038.64 1215.86 L2038.05 1215.86 L2037.46 1215.86 L2036.88 1215.86 L2036.29 1215.86 L2035.7 1215.86 L2035.12 1215.86 L2034.53 1215.86 L2033.94 1215.86 L2033.36 1215.86 L2032.77 1215.86 L2032.19 1215.86 L2031.6 1215.86 L2031.01 1215.86 L2030.43 1215.86 L2029.84 1215.86 L2029.25 1215.86 L2028.67 1215.86 L2028.08 1215.86 L2027.49 1215.86 L2026.91 1215.86 L2026.32 1215.86 L2025.73 1215.86 L2025.15 1215.86 L2024.56 1215.86 L2023.98 1215.86 L2023.39 1215.86 L2022.8 1215.86 L2022.22 1215.86 L2021.63 1215.86 L2021.04 1215.86 L2020.46 1215.86 L2019.87 1215.86 L2019.28 1215.86 L2018.7 1215.86 L2018.11 1215.86 L2017.53 1215.86 L2016.94 1215.86 L2016.35 1215.86 L2015.77 1215.86 L2015.18 1215.86 L2014.59 1215.86 L2014.01 1215.86 L2013.42 1215.86 L2012.83 1215.86 L2012.25 1215.86 L2011.66 1215.86 L2011.07 1215.86 L2010.49 1215.86 L2009.9 1215.86 L2009.32 1215.86 L2008.73 1215.86 L2008.14 1215.86 L2007.56 1215.86 L2006.97 1215.86 L2006.38 1215.86 L2005.8 1215.86 L2005.21 1215.86 L2004.62 1215.86 L2004.04 1215.86 L2003.45 1215.86 L2002.86 1215.86 L2002.28 1215.86 L2001.69 1215.86 L2001.11 1215.86 L2000.52 1215.86 L1999.93 1215.86 L1999.35 1215.86 L1998.76 1215.86 L1998.17 1215.86 L1997.59 1215.86 L1997 1215.86 L1996.41 1215.86 L1995.83 1215.86 L1995.24 1215.86 L1994.65 1215.86 L1994.07 1215.86 L1993.48 1215.86 L1992.9 1215.86 L1992.31 1215.86 L1991.72 1215.86 L1991.14 1215.86 L1990.55 1215.86 L1989.96 1215.86 L1989.38 1215.86 L1988.79 1215.86 L1988.2 1215.86 L1987.62 1215.86 L1987.03 1215.86 L1986.45 1215.86 L1985.86 1215.86 L1985.27 1215.86 L1984.69 1215.86 L1984.1 1215.86 L1983.51 1215.86 L1982.93 1215.86 L1982.34 1215.86 L1981.75 1215.86 L1981.17 1215.86 L1980.58 1215.86 L1979.99 1215.86 L1979.41 1215.86 L1978.82 1215.86 L1978.24 1215.86 L1977.65 1215.86 L1977.06 1215.86 L1976.48 1215.86 L1975.89 1215.86 L1975.3 1215.86 L1974.72 1215.86 L1974.13 1215.86 L1973.54 1215.86 L1972.96 1215.86 L1972.37 1215.86 L1971.78 1215.86 L1971.2 1215.86 L1970.61 1215.86 L1970.03 1215.86 L1969.44 1215.86 L1968.85 1215.86 L1968.27 1215.86 L1967.68 1215.86 L1967.09 1215.86 L1966.51 1215.86 L1965.92 1215.86 L1965.33 1215.86 L1964.75 1215.86 L1964.16 1215.86 L1963.58 1215.86 L1962.99 1215.86 L1962.4 1215.86 L1961.82 1215.86 L1961.23 1215.86 L1960.64 1215.86 L1960.06 1215.86 L1959.47 1215.86 L1958.88 1215.86 L1958.3 1215.86 L1957.71 1215.86 L1957.12 1215.86 L1956.54 1215.86 L1955.95 1215.86 L1955.37 1215.86 L1954.78 1215.86 L1954.19 1215.86 L1953.61 1215.86 L1953.02 1215.86 L1952.43 1215.86 L1951.85 1215.86 L1951.26 1215.86 L1950.67 1215.86 L1950.09 1215.86 L1949.5 1215.86 L1948.91 1215.86 L1948.33 1215.86 L1947.74 1215.86 L1947.16 1215.86 L1946.57 1215.86 L1945.98 1215.86 L1945.4 1215.86 L1944.81 1215.86 L1944.22 1215.86 L1943.64 1215.86 L1943.05 1215.86 L1942.46 1215.86 L1941.88 1215.86 L1941.29 1215.86 L1940.71 1215.86 L1940.12 1215.86 L1939.53 1215.86 L1938.95 1215.86 L1938.36 1215.86 L1937.77 1215.86 L1937.19 1215.86 L1936.6 1215.86 L1936.01 1215.86 L1935.43 1215.86 L1934.84 1215.86 L1934.25 1215.86 L1933.67 1215.86 L1933.08 1215.86 L1932.5 1215.86 L1931.91 1215.86 L1931.32 1215.86 L1930.74 1215.86 L1930.15 1215.86 L1929.56 1215.86 L1928.98 1215.86 L1928.39 1215.86 L1927.8 1215.86 L1927.22 1215.86 L1926.63 1215.86 L1926.04 1215.86 L1925.46 1215.86 L1924.87 1215.86 L1924.29 1215.86 L1923.7 1215.86 L1923.11 1215.86 L1922.53 1215.86 L1921.94 1215.86 L1921.35 1215.86 L1920.77 1215.86 L1920.18 1215.86 L1919.59 1215.86 L1919.01 1215.86 L1918.42 1215.86 L1917.83 1215.86 L1917.25 1215.86 L1916.66 1215.86 L1916.08 1215.86 L1915.49 1215.86 L1914.9 1215.86 L1914.32 1215.86 L1913.73 1215.86 L1913.14 1215.86 L1912.56 1215.86 L1911.97 1215.86 L1911.38 1215.86 L1910.8 1215.86 L1910.21 1215.86 L1909.63 1215.86 L1909.04 1215.86 L1908.45 1215.86 L1907.87 1215.86 L1907.28 1215.86 L1906.69 1215.86 L1906.11 1215.86 L1905.52 1215.86 L1904.93 1215.86 L1904.35 1215.86 L1903.76 1215.86 L1903.17 1215.86 L1902.59 1215.86 L1902 1215.86 L1901.42 1215.86 L1900.83 1215.86 L1900.24 1215.86 L1899.66 1215.86 L1899.07 1215.86 L1898.48 1215.86 L1897.9 1215.86 L1897.31 1215.86 L1896.72 1215.86 L1896.14 1215.86 L1895.55 1215.86 L1894.96 1215.86 L1894.38 1215.86 L1893.79 1215.86 L1893.21 1215.86 L1892.62 1215.86 L1892.03 1215.86 L1891.45 1215.86 L1890.86 1215.86 L1890.27 1215.86 L1889.69 1215.86 L1889.1 1215.86 L1888.51 1215.86 L1887.93 1215.86 L1887.34 1215.86 L1886.76 1215.86 L1886.17 1215.86 L1885.58 1215.86 L1885 1215.86 L1884.41 1215.86 L1883.82 1215.86 L1883.24 1215.86 L1882.65 1215.86 L1882.06 1215.86 L1881.48 1215.86 L1880.89 1215.86 L1880.3 1215.86 L1879.72 1215.86 L1879.13 1215.86 L1878.55 1215.86 L1877.96 1215.86 L1877.37 1215.86 L1876.79 1215.86 L1876.2 1215.86 L1875.61 1215.86 L1875.03 1215.86 L1874.44 1215.86 L1873.85 1215.86 L1873.27 1215.86 L1872.68 1215.86 L1872.09 1215.86 L1871.51 1215.86 L1870.92 1215.86 L1870.34 1215.86 L1869.75 1215.86 L1869.16 1215.86 L1868.58 1215.86 L1867.99 1215.86 L1867.4 1215.86 L1866.82 1215.86 L1866.23 1215.86 L1865.64 1215.86 L1865.06 1215.86 L1864.47 1215.86 L1863.88 1215.86 L1863.3 1215.86 L1862.71 1215.86 L1862.13 1215.86 L1861.54 1215.86 L1860.95 1215.86 L1860.37 1215.86 L1859.78 1215.86 L1859.19 1215.86 L1858.61 1215.86 L1858.02 1215.86 L1857.43 1215.86 L1856.85 1215.86 L1856.26 1215.86 L1855.68 1215.86 L1855.09 1215.86 L1854.5 1215.86 L1853.92 1215.86 L1853.33 1215.86 L1852.74 1215.86 L1852.16 1215.86 L1851.57 1215.86 L1850.98 1215.86 L1850.4 1215.86 L1849.81 1215.86 L1849.22 1215.86 L1848.64 1215.86 L1848.05 1215.86 L1847.47 1215.86 L1846.88 1215.86 L1846.29 1215.86 L1845.71 1215.86 L1845.12 1215.86 L1844.53 1215.86 L1843.95 1215.86 L1843.36 1215.86 L1842.77 1215.86 L1842.19 1215.86 L1841.6 1215.86 L1841.01 1215.86 L1840.43 1215.86 L1839.84 1215.86 L1839.26 1215.86 L1838.67 1215.86 L1838.08 1215.86 L1837.5 1215.86 L1836.91 1215.86 L1836.32 1215.86 L1835.74 1215.86 L1835.15 1215.86 L1834.56 1215.86 L1833.98 1215.86 L1833.39 1215.86 L1832.81 1215.86 L1832.22 1215.86 L1831.63 1215.86 L1831.05 1215.86 L1830.46 1215.86 L1829.87 1215.86 L1829.29 1215.86 L1828.7 1215.86 L1828.11 1215.86 L1827.53 1215.86 L1826.94 1215.86 L1826.35 1215.86 L1825.77 1215.86 L1825.18 1215.86 L1824.6 1215.86 L1824.01 1215.86 L1823.42 1215.86 L1822.84 1215.86 L1822.25 1215.86 L1821.66 1215.86 L1821.08 1215.86 L1820.49 1215.86 L1819.9 1215.86 L1819.32 1215.86 L1818.73 1215.86 L1818.14 1215.86 L1817.56 1215.86 L1816.97 1215.86 L1816.39 1215.86 L1815.8 1215.86 L1815.21 1215.86 L1814.63 1215.86 L1814.04 1215.86 L1813.45 1215.86 L1812.87 1215.86 L1812.28 1215.86 L1811.69 1215.86 L1811.11 1215.86 L1810.52 1215.86 L1809.94 1215.86 L1809.35 1215.86 L1808.76 1215.86 L1808.18 1215.86 L1807.59 1215.86 L1807 1215.86 L1806.42 1215.86 L1805.83 1215.86 L1805.24 1215.86 L1804.66 1215.86 L1804.07 1215.86 L1803.48 1215.86 L1802.9 1215.86 L1802.31 1215.86 L1801.73 1215.86 L1801.14 1215.86 L1800.55 1215.86 L1799.97 1215.86 L1799.38 1215.86 L1798.79 1215.86 L1798.21 1215.86 L1797.62 1215.86 L1797.03 1215.86 L1796.45 1215.86 L1795.86 1215.86 L1795.27 1215.86 L1794.69 1215.86 L1794.1 1215.86 L1793.52 1215.86 L1792.93 1215.86 L1792.34 1215.86 L1791.76 1215.86 L1791.17 1215.86 L1790.58 1215.86 L1790 1215.86 L1789.41 1215.86 L1788.82 1215.86 L1788.24 1215.86 L1787.65 1215.86 L1787.06 1215.86 L1786.48 1215.86 L1785.89 1215.86 L1785.31 1215.86 L1784.72 1215.86 L1784.13 1215.86 L1783.55 1215.86 L1782.96 1215.86 L1782.37 1215.86 L1781.79 1215.86 L1781.2 1215.86 L1780.61 1215.86 L1780.03 1215.86 L1779.44 1215.86 L1778.86 1215.86 L1778.27 1215.86 L1777.68 1215.86 L1777.1 1215.86 L1776.51 1215.86 L1775.92 1215.86 L1775.34 1215.86 L1774.75 1215.86 L1774.16 1215.86 L1773.58 1215.86 L1772.99 1215.86 L1772.4 1215.86 L1771.82 1215.86 L1771.23 1215.86 L1770.65 1215.86 L1770.06 1215.86 L1769.47 1215.86 L1768.89 1215.86 L1768.3 1215.86 L1767.71 1215.86 L1767.13 1215.86 L1766.54 1215.86 L1765.95 1215.86 L1765.37 1215.86 L1764.78 1215.86 L1764.19 1215.86 L1763.61 1215.86 L1763.02 1215.86 L1762.44 1215.86 L1761.85 1215.86 L1761.26 1215.86 L1760.68 1215.86 L1760.09 1215.86 L1759.5 1215.86 L1758.92 1215.86 L1758.33 1215.86 L1757.74 1215.86 L1757.16 1215.86 L1756.57 1215.86 L1755.99 1215.86 L1755.4 1215.86 L1754.81 1215.86 L1754.23 1215.86 L1753.64 1215.86 L1753.05 1215.86 L1752.47 1215.86 L1751.88 1215.86 L1751.29 1215.86 L1750.71 1215.86 L1750.12 1215.86 L1749.53 1215.86 L1748.95 1215.86 L1748.36 1215.86 L1747.78 1215.86 L1747.19 1215.86 L1746.6 1215.86 L1746.02 1215.86 L1745.43 1215.86 L1744.84 1215.86 L1744.26 1215.86 L1743.67 1215.86 L1743.08 1215.86 L1742.5 1215.86 L1741.91 1215.86 L1741.32 1215.86 L1740.74 1215.86 L1740.15 1215.86 L1739.57 1215.86 L1738.98 1215.86 L1738.39 1215.86 L1737.81 1215.86 L1737.22 1215.86 L1736.63 1215.86 L1736.05 1215.86 L1735.46 1215.86 L1734.87 1215.86 L1734.29 1215.86 L1733.7 1215.86 L1733.11 1215.86 L1732.53 1215.86 L1731.94 1215.86 L1731.36 1215.86 L1730.77 1215.86 L1730.18 1215.86 L1729.6 1215.86 L1729.01 1215.86 L1728.42 1215.86 L1727.84 1215.86 L1727.25 1215.86 L1726.66 1215.86 L1726.08 1215.86 L1725.49 1215.86 L1724.91 1215.86 L1724.32 1215.86 L1723.73 1215.86 L1723.15 1215.86 L1722.56 1215.86 L1721.97 1215.86 L1721.39 1215.86 L1720.8 1215.86 L1720.21 1215.86 L1719.63 1215.86 L1719.04 1215.86 L1718.45 1215.86 L1717.87 1215.86 L1717.28 1215.86 L1716.7 1215.86 L1716.11 1215.86 L1715.52 1215.86 L1714.94 1215.86 L1714.35 1215.86 L1713.76 1215.86 L1713.18 1215.86 L1712.59 1215.86 L1712 1215.86 L1711.42 1215.86 L1710.83 1215.86 L1710.24 1215.86 L1709.66 1215.86 L1709.07 1215.86 L1708.49 1215.86 L1707.9 1215.86 L1707.31 1215.86 L1706.73 1215.86 L1706.14 1215.86 L1705.55 1215.86 L1704.97 1215.86 L1704.38 1215.86 L1703.79 1215.86 L1703.21 1215.86 L1702.62 1215.86 L1702.04 1215.86 L1701.45 1215.86 L1700.86 1215.86 L1700.28 1215.86 L1699.69 1215.86 L1699.1 1215.86 L1698.52 1215.86 L1697.93 1215.86 L1697.34 1215.86 L1696.76 1215.86 L1696.17 1215.86 L1695.58 1215.86 L1695 1215.86 L1694.41 1215.86 L1693.83 1215.86 L1693.24 1215.86 L1692.65 1215.86 L1692.07 1215.86 L1691.48 1215.86 L1690.89 1215.86 L1690.31 1215.86 L1689.72 1215.86 L1689.13 1215.86 L1688.55 1215.86 L1687.96 1215.86 L1687.37 1215.86 L1686.79 1215.86 L1686.2 1215.86 L1685.62 1215.86 L1685.03 1215.86 L1684.44 1215.86 L1683.86 1215.86 L1683.27 1215.86 L1682.68 1215.86 L1682.1 1215.86 L1681.51 1215.86 L1680.92 1215.86 L1680.34 1215.86 L1679.75 1215.86 L1679.17 1215.86 L1678.58 1215.86 L1677.99 1215.86 L1677.41 1215.86 L1676.82 1215.86 L1676.23 1215.86 L1675.65 1215.86 L1675.06 1215.86 L1674.47 1215.86 L1673.89 1215.86 L1673.3 1215.86 L1672.71 1215.86 L1672.13 1215.86 L1671.54 1215.86 L1670.96 1215.86 L1670.37 1215.86 L1669.78 1215.86 L1669.2 1215.86 L1668.61 1215.86 L1668.02 1215.86 L1667.44 1215.86 L1666.85 1215.86 L1666.26 1215.86 L1665.68 1215.86 L1665.09 1215.86 L1664.5 1215.86 L1663.92 1215.86 L1663.33 1215.86 L1662.75 1215.86 L1662.16 1215.86 L1661.57 1215.86 L1660.99 1215.86 L1660.4 1215.86 L1659.81 1215.86 L1659.23 1215.86 L1658.64 1215.86 L1658.05 1215.86 L1657.47 1215.86 L1656.88 1215.86 L1656.29 1215.86 L1655.71 1215.86 L1655.12 1215.86 L1654.54 1215.86 L1653.95 1215.86 L1653.36 1215.86 L1652.78 1215.86 L1652.19 1215.86 L1651.6 1215.86 L1651.02 1215.86 L1650.43 1215.86 L1649.84 1215.86 L1649.26 1215.86 L1648.67 1215.86 L1648.09 1215.86 L1647.5 1215.86 L1646.91 1215.86 L1646.33 1215.86 L1645.74 1215.86 L1645.15 1215.86 L1644.57 1215.86 L1643.98 1215.86 L1643.39 1215.86 L1642.81 1215.86 L1642.22 1215.86 L1641.63 1215.86 L1641.05 1215.86 L1640.46 1215.86 L1639.88 1215.86 L1639.29 1215.86 L1638.7 1215.86 L1638.12 1215.86 L1637.53 1215.86 L1636.94 1215.86 L1636.36 1215.86 L1635.77 1215.86 L1635.18 1215.86 L1634.6 1215.86 L1634.01 1215.86 L1633.42 1215.86 L1632.84 1215.86 L1632.25 1215.86 L1631.67 1215.86 L1631.08 1215.86 L1630.49 1215.86 L1629.91 1215.86 L1629.32 1215.86 L1628.73 1215.86 L1628.15 1215.86 L1627.56 1215.86 L1626.97 1215.86 L1626.39 1215.86 L1625.8 1215.86 L1625.22 1215.86 L1624.63 1215.86 L1624.04 1215.86 L1623.46 1215.86 L1622.87 1215.86 L1622.28 1215.86 L1621.7 1215.86 L1621.11 1215.86 L1620.52 1215.86 L1619.94 1215.86 L1619.35 1215.86 L1618.76 1215.86 L1618.18 1215.86 L1617.59 1215.86 L1617.01 1215.86 L1616.42 1215.86 L1615.83 1215.86 L1615.25 1215.86 L1614.66 1215.86 L1614.07 1215.86 L1613.49 1215.86 L1612.9 1215.86 L1612.31 1215.86 L1611.73 1215.86 L1611.14 1215.86 L1610.55 1215.86 L1609.97 1215.86 L1609.38 1215.86 L1608.8 1215.86 L1608.21 1215.86 L1607.62 1215.86 L1607.04 1215.86 L1606.45 1215.86 L1605.86 1215.86 L1605.28 1215.86 L1604.69 1215.86 L1604.1 1215.86 L1603.52 1215.86 L1602.93 1215.86 L1602.34 1215.86 L1601.76 1215.86 L1601.17 1215.86 L1600.59 1215.86 L1600 1215.86 L1599.41 1215.86 L1598.83 1215.86 L1598.24 1215.86 L1597.65 1215.86 L1597.07 1215.86 L1596.48 1215.86 L1595.89 1215.86 L1595.31 1215.86 L1594.72 1215.86 L1594.14 1215.86 L1593.55 1215.86 L1592.96 1215.86 L1592.38 1215.86 L1591.79 1215.86 L1591.2 1215.86 L1590.62 1215.86 L1590.03 1215.86 L1589.44 1215.86 L1588.86 1215.86 L1588.27 1215.86 L1587.68 1215.86 L1587.1 1215.86 L1586.51 1215.86 L1585.93 1215.86 L1585.34 1215.86 L1584.75 1215.86 L1584.17 1215.86 L1583.58 1215.86 L1582.99 1215.86 L1582.41 1215.86 L1581.82 1215.86 L1581.23 1215.86 L1580.65 1215.86 L1580.06 1215.86 L1579.47 1215.86 L1578.89 1215.86 L1578.3 1215.86 L1577.72 1215.86 L1577.13 1215.86 L1576.54 1215.86 L1575.96 1215.86 L1575.37 1215.86 L1574.78 1215.86 L1574.2 1215.86 L1573.61 1215.86 L1573.02 1215.86 L1572.44 1215.86 L1571.85 1215.86 L1571.27 1215.86 L1570.68 1215.86 L1570.09 1215.86 L1569.51 1215.86 L1568.92 1215.86 L1568.33 1215.86 L1567.75 1215.86 L1567.16 1215.86 L1566.57 1215.86 L1565.99 1215.86 L1565.4 1215.86 L1564.81 1215.86 L1564.23 1215.86 L1563.64 1215.86 L1563.06 1215.86 L1562.47 1215.86 L1561.88 1215.86 L1561.3 1215.86 L1560.71 1215.86 L1560.12 1215.86 L1559.54 1215.86 L1558.95 1215.86 L1558.36 1215.86 L1557.78 1215.86 L1557.19 1215.86 L1556.6 1215.86 L1556.02 1215.86 L1555.43 1215.86 L1554.85 1215.86 L1554.26 1215.86 L1553.67 1215.86 L1553.09 1215.86 L1552.5 1215.86 L1551.91 1215.86 L1551.33 1215.86 L1550.74 1215.86 L1550.15 1215.86 L1549.57 1215.86 L1548.98 1215.86 L1548.4 1215.86 L1547.81 1215.86 L1547.22 1215.86 L1546.64 1215.86 L1546.05 1215.86 L1545.46 1215.86 L1544.88 1215.86 L1544.29 1215.86 L1543.7 1215.86 L1543.12 1215.86 L1542.53 1215.86 L1541.94 1215.86 L1541.36 1215.86 L1540.77 1215.86 L1540.19 1215.86 L1539.6 1215.86 L1539.01 1215.86 L1538.43 1215.86 L1537.84 1215.86 L1537.25 1215.86 L1536.67 1215.86 L1536.08 1215.86 L1535.49 1215.86 L1534.91 1215.86 L1534.32 1215.86 L1533.73 1215.86 L1533.15 1215.86 L1532.56 1215.86 L1531.98 1215.86 L1531.39 1215.86 L1530.8 1215.86 L1530.22 1215.86 L1529.63 1215.86 L1529.04 1215.86 L1528.46 1215.86 L1527.87 1215.86 L1527.28 1215.86 L1526.7 1215.86 L1526.11 1215.86 L1525.52 1215.86 L1524.94 1215.86 L1524.35 1215.86 L1523.77 1215.86 L1523.18 1215.86 L1522.59 1215.86 L1522.01 1215.86 L1521.42 1215.86 L1520.83 1215.86 L1520.25 1215.86 L1519.66 1215.86 L1519.07 1215.86 L1518.49 1215.86 L1517.9 1215.86 L1517.32 1215.86 L1516.73 1215.86 L1516.14 1215.86 L1515.56 1215.86 L1514.97 1215.86 L1514.38 1215.86 L1513.8 1215.86 L1513.21 1215.86 L1512.62 1215.86 L1512.04 1215.86 L1511.45 1215.86 L1510.86 1215.86 L1510.28 1215.86 L1509.69 1215.86 L1509.11 1215.86 L1508.52 1215.86 L1507.93 1215.86 L1507.35 1215.86 L1506.76 1215.86 L1506.17 1215.86 L1505.59 1215.86 L1505 1215.86 L1504.41 1215.86 L1503.83 1215.86 L1503.24 1215.86 L1502.65 1215.86 L1502.07 1215.86 L1501.48 1215.86 L1500.9 1215.86 L1500.31 1215.86 L1499.72 1215.86 L1499.14 1215.86 L1498.55 1215.86 L1497.96 1215.86 L1497.38 1215.86 L1496.79 1215.86 L1496.2 1215.86 L1495.62 1215.86 L1495.03 1215.86 L1494.45 1215.86 L1493.86 1215.86 L1493.27 1215.86 L1492.69 1215.86 L1492.1 1215.86 L1491.51 1215.86 L1490.93 1215.86 L1490.34 1215.86 L1489.75 1215.86 L1489.17 1215.86 L1488.58 1215.86 L1487.99 1215.86 L1487.41 1215.86 L1486.82 1215.86 L1486.24 1215.86 L1485.65 1215.86 L1485.06 1215.86 L1484.48 1215.86 L1483.89 1215.86 L1483.3 1215.86 L1482.72 1215.86 L1482.13 1215.86 L1481.54 1215.86 L1480.96 1215.86 L1480.37 1215.86 L1479.78 1215.86 L1479.2 1215.86 L1478.61 1215.86 L1478.03 1215.86 L1477.44 1215.86 L1476.85 1215.86 L1476.27 1215.86 L1475.68 1215.86 L1475.09 1215.86 L1474.51 1215.86 L1473.92 1215.86 L1473.33 1215.86 L1472.75 1215.86 L1472.16 1215.86 L1471.57 1215.86 L1470.99 1215.86 L1470.4 1215.86 L1469.82 1215.86 L1469.23 1215.86 L1468.64 1215.86 L1468.06 1215.86 L1467.47 1215.86 L1466.88 1215.86 L1466.3 1215.86 L1465.71 1215.86 L1465.12 1215.86 L1464.54 1215.86 L1463.95 1215.86 L1463.37 1215.86 L1462.78 1215.86 L1462.19 1215.86 L1461.61 1215.86 L1461.02 1215.86 L1460.43 1215.86 L1459.85 1215.86 L1459.26 1215.86 L1458.67 1215.86 L1458.09 1215.86 L1457.5 1215.86 L1456.91 1215.86 L1456.33 1215.86 L1455.74 1215.86 L1455.16 1215.86 L1454.57 1215.86 L1453.98 1215.86 L1453.4 1215.86 L1452.81 1215.86 L1452.22 1215.86 L1451.64 1215.86 L1451.05 1215.86 L1450.46 1215.86 L1449.88 1215.86 L1449.29 1215.86 L1448.7 1215.86 L1448.12 1215.86 L1447.53 1215.86 L1446.95 1215.86 L1446.36 1215.86 L1445.77 1215.86 L1445.19 1215.86 L1444.6 1215.86 L1444.01 1215.86 L1443.43 1215.86 L1442.84 1215.86 L1442.25 1215.86 L1441.67 1215.86 L1441.08 1215.86 L1440.5 1215.86 L1439.91 1215.86 L1439.32 1215.86 L1438.74 1215.86 L1438.15 1215.86 L1437.56 1215.86 L1436.98 1215.86 L1436.39 1215.86 L1435.8 1215.86 L1435.22 1215.86 L1434.63 1215.86 L1434.04 1215.86 L1433.46 1215.86 L1432.87 1215.86 L1432.29 1215.86 L1431.7 1215.86 L1431.11 1215.86 L1430.53 1215.86 L1429.94 1215.86 L1429.35 1215.86 L1428.77 1215.86 L1428.18 1215.86 L1427.59 1215.86 L1427.01 1215.86 L1426.42 1215.86 L1425.83 1215.86 L1425.25 1215.86 L1424.66 1215.86 L1424.08 1215.86 L1423.49 1215.86 L1422.9 1215.86 L1422.32 1215.86 L1421.73 1215.86 L1421.14 1215.86 L1420.56 1215.86 L1419.97 1215.86 L1419.38 1215.86 L1418.8 1215.86 L1418.21 1215.86 L1417.63 1215.86 L1417.04 1215.86 L1416.45 1215.86 L1415.87 1215.86 L1415.28 1215.86 L1414.69 1215.86 L1414.11 1215.86 L1413.52 1215.86 L1412.93 1215.86 L1412.35 1215.86 L1411.76 1215.86 L1411.17 1215.86 L1410.59 1215.86 L1410 1215.86 L1409.42 1215.86 L1408.83 1215.86 L1408.24 1215.86 L1407.66 1215.86 L1407.07 1215.86 L1406.48 1215.86 L1405.9 1215.86 L1405.31 1215.86 L1404.72 1215.86 L1404.14 1215.86 L1403.55 1215.86 L1402.96 1215.86 L1402.38 1215.86 L1401.79 1215.86 L1401.21 1215.86 L1400.62 1215.86 L1400.03 1215.86 L1399.45 1215.86 L1398.86 1215.86 L1398.27 1215.86 L1397.69 1215.86 L1397.1 1215.86 L1396.51 1215.86 L1395.93 1215.86 L1395.34 1215.86 L1394.75 1215.86 L1394.17 1215.86 L1393.58 1215.86 L1393 1215.86 L1392.41 1215.86 L1391.82 1215.86 L1391.24 1215.86 L1390.65 1215.86 L1390.06 1215.86 L1389.48 1215.86 L1388.89 1215.86 L1388.3 1215.86 L1387.72 1215.86 L1387.13 1215.86 L1386.55 1215.86 L1385.96 1215.86 L1385.37 1215.86 L1384.79 1215.86 L1384.2 1215.86 L1383.61 1215.86 L1383.03 1215.86 L1382.44 1215.86 L1381.85 1215.86 L1381.27 1215.86 L1380.68 1215.86 L1380.09 1215.86 L1379.51 1215.86 L1378.92 1215.86 L1378.34 1215.86 L1377.75 1215.86 L1377.16 1215.86 L1376.58 1215.86 L1375.99 1215.86 L1375.4 1215.86 L1374.82 1215.86 L1374.23 1215.86 L1373.64 1215.86 L1373.06 1215.86 L1372.47 1215.86 L1371.88 1215.86 L1371.3 1215.86 L1370.71 1215.86 L1370.13 1215.86 L1369.54 1215.86 L1368.95 1215.86 L1368.37 1215.86 L1367.78 1215.86 L1367.19 1215.86 L1366.61 1215.86 L1366.02 1215.86 L1365.43 1215.86 L1364.85 1215.86 L1364.26 1215.86 L1363.68 1215.86 L1363.09 1215.86 L1362.5 1215.86 L1361.92 1215.86 L1361.33 1215.86 L1360.74 1215.86 L1360.16 1215.86 L1359.57 1215.86 L1358.98 1215.86 L1358.4 1215.86 L1357.81 1215.86 L1357.22 1215.86 L1356.64 1215.86 L1356.05 1215.86 L1355.47 1215.86 L1354.88 1215.86 L1354.29 1215.86 L1353.71 1215.86 L1353.12 1215.86 L1352.53 1215.86 L1351.95 1215.86 L1351.36 1215.86 L1350.77 1215.86 L1350.19 1215.86 L1349.6 1215.86 L1349.01 1215.86 L1348.43 1215.86 L1347.84 1215.86 L1347.26 1215.86 L1346.67 1215.86 L1346.08 1215.86 L1345.5 1215.86 L1344.91 1215.86 L1344.32 1215.86 L1343.74 1215.86 L1343.15 1215.86 L1342.56 1215.86 L1341.98 1215.86 L1341.39 1215.86 L1340.8 1215.86 L1340.22 1215.86 L1339.63 1215.86 L1339.05 1215.86 L1338.46 1215.86 L1337.87 1215.86 L1337.29 1215.86 L1336.7 1215.86 L1336.11 1215.86 L1335.53 1215.86 L1334.94 1215.86 L1334.35 1215.86 L1333.77 1215.86 L1333.18 1215.86 L1332.6 1215.86 L1332.01 1215.86 L1331.42 1215.86 L1330.84 1215.86 L1330.25 1215.86 L1329.66 1215.86 L1329.08 1215.86 L1328.49 1215.86 L1327.9 1215.86 L1327.32 1215.86 L1326.73 1215.86 L1326.14 1215.86 L1325.56 1215.86 L1324.97 1215.86 L1324.39 1215.86 L1323.8 1215.86 L1323.21 1215.86 L1322.63 1215.86 L1322.04 1215.86 L1321.45 1215.86 L1320.87 1215.86 L1320.28 1215.86 L1319.69 1215.86 L1319.11 1215.86 L1318.52 1215.86 L1317.93 1215.86 L1317.35 1215.86 L1316.76 1215.86 L1316.18 1215.86 L1315.59 1215.86 L1315 1215.86 L1314.42 1215.86 L1313.83 1215.86 L1313.24 1215.86 L1312.66 1215.86 L1312.07 1215.86 L1311.48 1215.86 L1310.9 1215.86 L1310.31 1215.86 L1309.73 1215.86 L1309.14 1215.86 L1308.55 1215.86 L1307.97 1215.86 L1307.38 1215.86 L1306.79 1215.86 L1306.21 1215.86 L1305.62 1215.86 L1305.03 1215.86 L1304.45 1215.86 L1303.86 1215.86 L1303.27 1215.86 L1302.69 1215.86 L1302.1 1215.86 L1301.52 1215.86 L1300.93 1215.86 L1300.34 1215.86 L1299.76 1215.86 L1299.17 1215.86 L1298.58 1215.86 L1298 1215.86 L1297.41 1215.86 L1296.82 1215.86 L1296.24 1215.86 L1295.65 1215.86 L1295.06 1215.86 L1294.48 1215.86 L1293.89 1215.86 L1293.31 1215.86 L1292.72 1215.86 L1292.13 1215.86 L1291.55 1215.86 L1290.96 1215.86 L1290.37 1215.86 L1289.79 1215.86 L1289.2 1215.86 L1288.61 1215.86 L1288.03 1215.86 L1287.44 1215.86 L1286.86 1215.86 L1286.27 1215.86 L1285.68 1215.86 L1285.1 1215.86 L1284.51 1215.86 L1283.92 1215.86 L1283.34 1215.86 L1282.75 1215.86 L1282.16 1215.86 L1281.58 1215.86 L1280.99 1215.86 L1280.4 1215.86 L1279.82 1215.86 L1279.23 1215.86 L1278.65 1215.86 L1278.06 1215.86 L1277.47 1215.86 L1276.89 1215.86 L1276.3 1215.86 L1275.71 1215.86 L1275.13 1215.86 L1274.54 1215.86 L1273.95 1215.86 L1273.37 1215.86 L1272.78 1215.86 L1272.19 1215.86 L1271.61 1215.86 L1271.02 1215.86 L1270.44 1215.86 L1269.85 1215.86 L1269.26 1215.86 L1268.68 1215.86 L1268.09 1215.86 L1267.5 1215.86 L1266.92 1215.86 L1266.33 1215.86 L1265.74 1215.86 L1265.16 1215.86 L1264.57 1215.86 L1263.98 1215.86 L1263.4 1215.86 L1262.81 1215.86 L1262.23 1215.86 L1261.64 1215.86 L1261.05 1215.86 L1260.47 1215.86 L1259.88 1215.86 L1259.29 1215.86 L1258.71 1215.86 L1258.12 1215.86 L1257.53 1215.86 L1256.95 1215.86 L1256.36 1215.86 L1255.78 1215.86 L1255.19 1215.86 L1254.6 1215.86 L1254.02 1215.86 L1253.43 1215.86 L1252.84 1215.86 L1252.26 1215.86 L1251.67 1215.86 L1251.08 1215.86 L1250.5 1215.86 L1249.91 1215.86 L1249.32 1215.86 L1248.74 1215.86 L1248.15 1215.86 L1247.57 1215.86 L1246.98 1215.86 L1246.39 1215.86 L1245.81 1215.86 L1245.22 1215.86 L1244.63 1215.86 L1244.05 1215.86 L1243.46 1215.86 L1242.87 1215.86 L1242.29 1215.86 L1241.7 1215.86 L1241.11 1215.86 L1240.53 1215.86 L1239.94 1215.86 L1239.36 1215.86 L1238.77 1215.86 L1238.18 1215.86 L1237.6 1215.86 L1237.01 1215.86 L1236.42 1215.86 L1235.84 1215.86 L1235.25 1215.86 L1234.66 1215.86 L1234.08 1215.86 L1233.49 1215.86 L1232.91 1215.86 L1232.32 1215.86 L1231.73 1215.86 L1231.15 1215.86 L1230.56 1215.86 L1229.97 1215.86 L1229.39 1215.86 L1228.8 1215.86 L1228.21 1215.86 L1227.63 1215.86 L1227.04 1215.86 L1226.45 1215.86 L1225.87 1215.86 L1225.28 1215.86 L1224.7 1215.86 L1224.11 1215.86 L1223.52 1215.86 L1222.94 1215.86 L1222.35 1215.86 L1221.76 1215.86 L1221.18 1215.86 L1220.59 1215.86 L1220 1215.86 L1219.42 1215.86 L1218.83 1215.86 L1218.24 1215.86 L1217.66 1215.86 L1217.07 1215.86 L1216.49 1215.86 L1215.9 1215.86 L1215.31 1215.86 L1214.73 1215.86 L1214.14 1215.86 L1213.55 1215.86 L1212.97 1215.86 L1212.38 1215.86 L1211.79 1215.86 L1211.21 1215.86 L1210.62 1215.86 L1210.03 1215.86 L1209.45 1215.86 L1208.86 1215.86 L1208.28 1215.86 L1207.69 1215.86 L1207.1 1215.86 L1206.52 1215.86 L1205.93 1215.86 L1205.34 1215.86 L1204.76 1215.86 L1204.17 1215.86 L1203.58 1215.86 L1203 1215.86 L1202.41 1215.86 L1201.83 1215.86 L1201.24 1215.86 L1200.65 1215.86 L1200.07 1215.86 L1199.48 1215.86 L1198.89 1215.86 L1198.31 1215.86 L1197.72 1215.86 L1197.13 1215.86 L1196.55 1215.86 L1195.96 1215.86 L1195.37 1215.86 L1194.79 1215.86 L1194.2 1215.86 L1193.62 1215.86 L1193.03 1215.86 L1192.44 1215.86 L1191.86 1215.86 L1191.27 1215.86 L1190.68 1215.86 L1190.1 1215.86 L1189.51 1215.86 L1188.92 1215.86 L1188.34 1215.86 L1187.75 1215.86 L1187.16 1215.86 L1186.58 1215.86 L1185.99 1215.86 L1185.41 1215.86 L1184.82 1215.86 L1184.23 1215.86 L1183.65 1215.86 L1183.06 1215.86 L1182.47 1215.86 L1181.89 1215.86 L1181.3 1215.86 L1180.71 1215.86 L1180.13 1215.86 L1179.54 1215.86 L1178.96 1215.86 L1178.37 1215.86 L1177.78 1215.86 L1177.2 1215.86 L1176.61 1215.86 L1176.02 1215.86 L1175.44 1215.86 L1174.85 1215.86 L1174.26 1215.86 L1173.68 1215.86 L1173.09 1215.86 L1172.5 1215.86 L1171.92 1215.86 L1171.33 1215.86 L1170.75 1215.86 L1170.16 1215.86 L1169.57 1215.86 L1168.99 1215.86 L1168.4 1215.86 L1167.81 1215.86 L1167.23 1215.86 L1166.64 1215.86 L1166.05 1215.86 L1165.47 1215.86 L1164.88 1215.86 L1164.29 1215.86 L1163.71 1215.86 L1163.12 1215.86 L1162.54 1215.86 L1161.95 1215.86 L1161.36 1215.86 L1160.78 1215.86 L1160.19 1215.86 L1159.6 1215.86 L1159.02 1215.86 L1158.43 1215.86 L1157.84 1215.86 L1157.26 1215.86 L1156.67 1215.86 L1156.09 1215.86 L1155.5 1215.86 L1154.91 1215.86 L1154.33 1215.86 L1153.74 1215.86 L1153.15 1215.86 L1152.57 1215.86 L1151.98 1215.86 L1151.39 1215.86 L1150.81 1215.86 L1150.22 1215.86 L1149.63 1215.86 L1149.05 1215.86 L1148.46 1215.86 L1147.88 1215.86 L1147.29 1215.86 L1146.7 1215.86 L1146.12 1215.86 L1145.53 1215.86 L1144.94 1215.86 L1144.36 1215.86 L1143.77 1215.86 L1143.18 1215.86 L1142.6 1215.86 L1142.01 1215.86 L1141.42 1215.86 L1140.84 1215.86 L1140.25 1215.86 L1139.67 1215.86 L1139.08 1215.86 L1138.49 1215.86 L1137.91 1215.86 L1137.32 1215.86 L1136.73 1215.86 L1136.15 1215.86 L1135.56 1215.86 L1134.97 1215.86 L1134.39 1215.86 L1133.8 1215.86 L1133.21 1215.86 L1132.63 1215.86 L1132.04 1215.86 L1131.46 1215.86 L1130.87 1215.86 L1130.28 1215.86 L1129.7 1215.86 L1129.11 1215.86 L1128.52 1215.86 L1127.94 1215.86 L1127.35 1215.86 L1126.76 1215.86 L1126.18 1215.86 L1125.59 1215.86 L1125.01 1215.86 L1124.42 1215.86 L1123.83 1215.86 L1123.25 1215.86 L1122.66 1215.86 L1122.07 1215.86 L1121.49 1215.86 L1120.9 1215.86 L1120.31 1215.86 L1119.73 1215.86 L1119.14 1215.86 L1118.55 1215.86 L1117.97 1215.86 L1117.38 1215.86 L1116.8 1215.86 L1116.21 1215.86 L1115.62 1215.86 L1115.04 1215.86 L1114.45 1215.86 L1113.86 1215.86 L1113.28 1215.86 L1112.69 1215.86 L1112.1 1215.86 L1111.52 1215.86 L1110.93 1215.86 L1110.34 1215.86 L1109.76 1215.86 L1109.17 1215.86 L1108.59 1215.86 L1108 1215.86 L1107.41 1215.86 L1106.83 1215.86 L1106.24 1215.86 L1105.65 1215.86 L1105.07 1215.86 L1104.48 1215.86 L1103.89 1215.86 L1103.31 1215.86 L1102.72 1215.86 L1102.14 1215.86 L1101.55 1215.86 L1100.96 1215.86 L1100.38 1215.86 L1099.79 1215.86 L1099.2 1215.86 L1098.62 1215.86 L1098.03 1215.86 L1097.44 1215.86 L1096.86 1215.86 L1096.27 1215.86 L1095.68 1215.86 L1095.1 1215.86 L1094.51 1215.86 L1093.93 1215.86 L1093.34 1215.86 L1092.75 1215.86 L1092.17 1215.86 L1091.58 1215.86 L1090.99 1215.86 L1090.41 1215.86 L1089.82 1215.86 L1089.23 1215.86 L1088.65 1215.86 L1088.06 1215.86 L1087.47 1215.86 L1086.89 1215.86 L1086.3 1215.86 L1085.72 1215.86 L1085.13 1215.86 L1084.54 1215.86 L1083.96 1215.86 L1083.37 1215.86 L1082.78 1215.86 L1082.2 1215.86 L1081.61 1215.86 L1081.02 1215.86 L1080.44 1215.86 L1079.85 1215.86 L1079.26 1215.86 L1078.68 1215.86 L1078.09 1215.86 L1077.51 1215.86 L1076.92 1215.86 L1076.33 1215.86 L1075.75 1215.86 L1075.16 1215.86 L1074.57 1215.86 L1073.99 1215.86 L1073.4 1215.86 L1072.81 1215.86 L1072.23 1215.86 L1071.64 1215.86 L1071.06 1215.86 L1070.47 1215.86 L1069.88 1215.86 L1069.3 1215.86 L1068.71 1215.86 L1068.12 1215.86 L1067.54 1215.86 L1066.95 1215.86 L1066.36 1215.86 L1065.78 1215.86 L1065.19 1215.86 L1064.6 1215.86 L1064.02 1215.86 L1063.43 1215.86 L1062.85 1215.86 L1062.26 1215.86 L1061.67 1215.86 L1061.09 1215.86 L1060.5 1215.86 L1059.91 1215.86 L1059.33 1215.86 L1058.74 1215.86 L1058.15 1215.86 L1057.57 1215.86 L1056.98 1215.86 L1056.39 1215.86 L1055.81 1215.86 L1055.22 1215.86 L1054.64 1215.86 L1054.05 1215.86 L1053.46 1215.86 L1052.88 1215.86 L1052.29 1215.86 L1051.7 1215.86 L1051.12 1215.86 L1050.53 1215.86 L1049.94 1215.86 L1049.36 1215.86 L1048.77 1215.86 L1048.19 1215.86 L1047.6 1215.86 L1047.01 1215.86 L1046.43 1215.86 L1045.84 1215.86 L1045.25 1215.86 L1044.67 1215.86 L1044.08 1215.86 L1043.49 1215.86 L1042.91 1215.86 L1042.32 1215.86 L1041.73 1215.86 L1041.15 1215.86 L1040.56 1215.86 L1039.98 1215.86 L1039.39 1215.86 L1038.8 1215.86 L1038.22 1215.86 L1037.63 1215.86 L1037.04 1215.86 L1036.46 1215.86 L1035.87 1215.86 L1035.28 1215.86 L1034.7 1215.86 L1034.11 1215.86 L1033.52 1215.86 L1032.94 1215.86 L1032.35 1215.86 L1031.77 1215.86 L1031.18 1215.86 L1030.59 1215.86 L1030.01 1215.86 L1029.42 1215.86 L1028.83 1215.86 L1028.25 1215.86 L1027.66 1215.86 L1027.07 1215.86 L1026.49 1215.86 L1025.9 1215.86 L1025.32 1215.86 L1024.73 1215.86 L1024.14 1215.86 L1023.56 1215.86 L1022.97 1215.86 L1022.38 1215.86 L1021.8 1215.86 L1021.21 1215.86 L1020.62 1215.86 L1020.04 1215.86 L1019.45 1215.86 L1018.86 1215.86 L1018.28 1215.86 L1017.69 1215.86 L1017.11 1215.86 L1016.52 1215.86 L1015.93 1215.86 L1015.35 1215.86 L1014.76 1215.86 L1014.17 1215.86 L1013.59 1215.86 L1013 1215.86 L1012.41 1215.86 L1011.83 1215.86 L1011.24 1215.86 L1010.65 1215.86 L1010.07 1215.86 L1009.48 1215.86 L1008.9 1215.86 L1008.31 1215.86 L1007.72 1215.86 L1007.14 1215.86 L1006.55 1215.86 L1005.96 1215.86 L1005.38 1215.86 L1004.79 1215.86 L1004.2 1215.86 L1003.62 1215.86 L1003.03 1215.86 L1002.44 1215.86 L1001.86 1215.86 L1001.27 1215.86 L1000.69 1215.86 L1000.1 1215.86 L999.513 1215.86 L998.926 1215.86 L998.34 1215.86 L997.754 1215.86 L997.167 1215.86 L996.581 1215.86 L995.994 1215.86 L995.408 1215.86 L994.822 1215.86 L994.235 1215.86 L993.649 1215.86 L993.062 1215.86 L992.476 1215.86 L991.889 1215.86 L991.303 1215.86 L990.717 1215.86 L990.13 1215.86 L989.544 1215.86 L988.957 1215.86 L988.371 1215.86 L987.785 1215.86 L987.198 1215.86 L986.612 1215.86 L986.025 1215.86  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1216.3 986.612,1216.3 987.198,1216.3 987.785,1216.3 988.371,1216.3 988.957,1216.3 989.544,1216.3 990.13,1216.3 990.717,1216.3 991.303,1216.3 991.889,1216.3 992.476,1216.3 993.062,1216.3 993.649,1216.3 994.235,1216.3 994.822,1216.3 995.408,1216.3 995.994,1216.3 996.581,1216.3 997.167,1216.3 997.754,1216.3 998.34,1216.3 998.926,1216.3 999.513,1216.3 1000.1,1216.3 1000.69,1216.3 1001.27,1216.3 1001.86,1216.3 1002.44,1216.3 1003.03,1216.3 1003.62,1216.3 1004.2,1216.3 1004.79,1216.3 1005.38,1216.3 1005.96,1216.3 1006.55,1216.3 1007.14,1216.3 1007.72,1216.3 1008.31,1216.3 1008.9,1216.3 1009.48,1216.3 1010.07,1216.3 1010.65,1216.3 1011.24,1216.3 1011.83,1216.3 1012.41,1216.3 1013,1216.3 1013.59,1216.3 1014.17,1216.3 1014.76,1216.3 1015.35,1216.3 1015.93,1216.3 1016.52,1216.3 1017.11,1216.3 1017.69,1216.3 1018.28,1216.3 1018.86,1216.3 1019.45,1216.3 1020.04,1216.3 1020.62,1216.3 1021.21,1216.3 1021.8,1216.3 1022.38,1216.3 1022.97,1216.3 1023.56,1216.3 1024.14,1216.3 1024.73,1216.3 1025.32,1216.3 1025.9,1216.3 1026.49,1216.3 1027.07,1216.3 1027.66,1216.3 1028.25,1216.3 1028.83,1216.3 1029.42,1216.3 1030.01,1216.3 1030.59,1216.3 1031.18,1216.3 1031.77,1216.3 1032.35,1216.3 1032.94,1216.3 1033.52,1216.3 1034.11,1216.3 1034.7,1216.3 1035.28,1216.3 1035.87,1216.3 1036.46,1216.3 1037.04,1216.3 1037.63,1216.3 1038.22,1216.3 1038.8,1216.3 1039.39,1216.3 1039.98,1216.3 1040.56,1216.3 1041.15,1216.3 1041.73,1216.3 1042.32,1216.3 1042.91,1216.3 1043.49,1216.3 1044.08,1216.3 1044.67,1216.3 1045.25,1216.3 1045.84,1216.3 1046.43,1216.3 1047.01,1216.3 1047.6,1216.3 1048.19,1216.3 1048.77,1216.3 1049.36,1216.3 1049.94,1216.3 1050.53,1216.3 1051.12,1216.3 1051.7,1216.3 1052.29,1216.3 1052.88,1216.3 1053.46,1216.3 1054.05,1216.3 1054.64,1216.3 1055.22,1216.3 1055.81,1216.3 1056.39,1216.3 1056.98,1216.3 1057.57,1216.3 1058.15,1216.3 1058.74,1216.3 1059.33,1216.3 1059.91,1216.3 1060.5,1216.3 1061.09,1216.3 1061.67,1216.3 1062.26,1216.3 1062.85,1216.3 1063.43,1216.3 1064.02,1216.3 1064.6,1216.3 1065.19,1216.3 1065.78,1216.3 1066.36,1216.3 1066.95,1216.3 1067.54,1216.3 1068.12,1216.3 1068.71,1216.3 1069.3,1216.3 1069.88,1216.3 1070.47,1216.3 1071.06,1216.3 1071.64,1216.3 1072.23,1216.3 1072.81,1216.3 1073.4,1216.3 1073.99,1216.3 1074.57,1216.3 1075.16,1216.3 1075.75,1216.3 1076.33,1216.3 1076.92,1216.3 1077.51,1216.3 1078.09,1216.3 1078.68,1216.3 1079.26,1216.3 1079.85,1216.3 1080.44,1216.3 1081.02,1216.3 1081.61,1216.3 1082.2,1216.3 1082.78,1216.3 1083.37,1216.3 1083.96,1216.3 1084.54,1216.3 1085.13,1216.3 1085.72,1216.3 1086.3,1216.3 1086.89,1216.3 1087.47,1216.3 1088.06,1216.3 1088.65,1216.3 1089.23,1216.3 1089.82,1216.3 1090.41,1216.3 1090.99,1216.3 1091.58,1216.3 1092.17,1216.3 1092.75,1216.3 1093.34,1216.3 1093.93,1216.3 1094.51,1216.3 1095.1,1216.3 1095.68,1216.3 1096.27,1216.3 1096.86,1216.3 1097.44,1216.3 1098.03,1216.3 1098.62,1216.3 1099.2,1216.3 1099.79,1216.3 1100.38,1216.3 1100.96,1216.3 1101.55,1216.3 1102.14,1216.3 1102.72,1216.3 1103.31,1216.3 1103.89,1216.3 1104.48,1216.3 1105.07,1216.3 1105.65,1216.3 1106.24,1216.3 1106.83,1216.3 1107.41,1216.3 1108,1216.3 1108.59,1216.3 1109.17,1216.3 1109.76,1216.3 1110.34,1216.3 1110.93,1216.3 1111.52,1216.3 1112.1,1216.3 1112.69,1216.3 1113.28,1216.3 1113.86,1216.3 1114.45,1216.3 1115.04,1216.3 1115.62,1216.3 1116.21,1216.3 1116.8,1216.3 1117.38,1216.3 1117.97,1216.3 1118.55,1216.3 1119.14,1216.3 1119.73,1216.3 1120.31,1216.3 1120.9,1216.3 1121.49,1216.3 1122.07,1216.3 1122.66,1216.3 1123.25,1216.3 1123.83,1216.3 1124.42,1216.3 1125.01,1216.3 1125.59,1216.3 1126.18,1216.3 1126.76,1216.3 1127.35,1216.3 1127.94,1216.3 1128.52,1216.3 1129.11,1216.3 1129.7,1216.3 1130.28,1216.3 1130.87,1216.3 1131.46,1216.3 1132.04,1216.3 1132.63,1216.3 1133.21,1216.3 1133.8,1216.3 1134.39,1216.3 1134.97,1216.3 1135.56,1216.3 1136.15,1216.3 1136.73,1216.3 1137.32,1216.3 1137.91,1216.3 1138.49,1216.3 1139.08,1216.3 1139.67,1216.3 1140.25,1216.3 1140.84,1216.3 1141.42,1216.3 1142.01,1216.3 1142.6,1216.3 1143.18,1216.3 1143.77,1216.3 1144.36,1216.3 1144.94,1216.3 1145.53,1216.3 1146.12,1216.3 1146.7,1216.3 1147.29,1216.3 1147.88,1216.3 1148.46,1216.3 1149.05,1216.3 1149.63,1216.3 1150.22,1216.3 1150.81,1216.3 1151.39,1216.3 1151.98,1216.3 1152.57,1216.3 1153.15,1216.3 1153.74,1216.3 1154.33,1216.3 1154.91,1216.3 1155.5,1216.3 1156.09,1216.3 1156.67,1216.3 1157.26,1216.3 1157.84,1216.3 1158.43,1216.3 1159.02,1216.3 1159.6,1216.3 1160.19,1216.3 1160.78,1216.3 1161.36,1216.3 1161.95,1216.3 1162.54,1216.3 1163.12,1216.3 1163.71,1216.3 1164.29,1216.3 1164.88,1216.3 1165.47,1216.3 1166.05,1216.3 1166.64,1216.3 1167.23,1216.3 1167.81,1216.3 1168.4,1216.3 1168.99,1216.3 1169.57,1216.3 1170.16,1216.3 1170.75,1216.3 1171.33,1216.3 1171.92,1216.3 1172.5,1216.3 1173.09,1216.3 1173.68,1216.3 1174.26,1216.3 1174.85,1216.3 1175.44,1216.3 1176.02,1216.3 1176.61,1216.3 1177.2,1216.3 1177.78,1216.3 1178.37,1216.3 1178.96,1216.3 1179.54,1216.3 1180.13,1216.3 1180.71,1216.3 1181.3,1216.3 1181.89,1216.3 1182.47,1216.3 1183.06,1216.3 1183.65,1216.3 1184.23,1216.3 1184.82,1216.3 1185.41,1216.3 1185.99,1216.3 1186.58,1216.3 1187.16,1216.3 1187.75,1216.3 1188.34,1216.3 1188.92,1216.3 1189.51,1216.3 1190.1,1216.3 1190.68,1216.3 1191.27,1216.3 1191.86,1216.3 1192.44,1216.3 1193.03,1216.3 1193.62,1216.3 1194.2,1216.3 1194.79,1216.3 1195.37,1216.3 1195.96,1216.3 1196.55,1216.3 1197.13,1216.3 1197.72,1216.3 1198.31,1216.3 1198.89,1216.3 1199.48,1216.3 1200.07,1216.3 1200.65,1216.3 1201.24,1216.3 1201.83,1216.3 1202.41,1216.3 1203,1216.3 1203.58,1216.3 1204.17,1216.3 1204.76,1216.3 1205.34,1216.3 1205.93,1216.3 1206.52,1216.3 1207.1,1216.3 1207.69,1216.3 1208.28,1216.3 1208.86,1216.3 1209.45,1216.3 1210.03,1216.3 1210.62,1216.3 1211.21,1216.3 1211.79,1216.3 1212.38,1216.3 1212.97,1216.3 1213.55,1216.3 1214.14,1216.3 1214.73,1216.3 1215.31,1216.3 1215.9,1216.3 1216.49,1216.3 1217.07,1216.3 1217.66,1216.3 1218.24,1216.3 1218.83,1216.3 1219.42,1216.3 1220,1216.3 1220.59,1216.3 1221.18,1216.3 1221.76,1216.3 1222.35,1216.3 1222.94,1216.3 1223.52,1216.3 1224.11,1216.3 1224.7,1216.3 1225.28,1216.3 1225.87,1216.3 1226.45,1216.3 1227.04,1216.3 1227.63,1216.3 1228.21,1216.3 1228.8,1216.3 1229.39,1216.3 1229.97,1216.3 1230.56,1216.3 1231.15,1216.3 1231.73,1216.3 1232.32,1216.3 1232.91,1216.3 1233.49,1216.3 1234.08,1216.3 1234.66,1216.3 1235.25,1216.3 1235.84,1216.3 1236.42,1216.3 1237.01,1216.3 1237.6,1216.3 1238.18,1216.3 1238.77,1216.3 1239.36,1216.3 1239.94,1216.3 1240.53,1216.3 1241.11,1216.3 1241.7,1216.3 1242.29,1216.3 1242.87,1216.3 1243.46,1216.3 1244.05,1216.3 1244.63,1216.3 1245.22,1216.3 1245.81,1216.3 1246.39,1216.3 1246.98,1216.3 1247.57,1216.3 1248.15,1216.3 1248.74,1216.3 1249.32,1216.3 1249.91,1216.3 1250.5,1216.3 1251.08,1216.3 1251.67,1216.3 1252.26,1216.3 1252.84,1216.3 1253.43,1216.3 1254.02,1216.3 1254.6,1216.3 1255.19,1216.3 1255.78,1216.3 1256.36,1216.3 1256.95,1216.3 1257.53,1216.3 1258.12,1216.3 1258.71,1216.3 1259.29,1216.3 1259.88,1216.3 1260.47,1216.3 1261.05,1216.3 1261.64,1216.3 1262.23,1216.3 1262.81,1216.3 1263.4,1216.3 1263.98,1216.3 1264.57,1216.3 1265.16,1216.3 1265.74,1216.3 1266.33,1216.3 1266.92,1216.3 1267.5,1216.3 1268.09,1216.3 1268.68,1216.3 1269.26,1216.3 1269.85,1216.3 1270.44,1216.3 1271.02,1216.3 1271.61,1216.3 1272.19,1216.3 1272.78,1216.3 1273.37,1216.3 1273.95,1216.3 1274.54,1216.3 1275.13,1216.3 1275.71,1216.3 1276.3,1216.3 1276.89,1216.3 1277.47,1216.3 1278.06,1216.3 1278.65,1216.3 1279.23,1216.3 1279.82,1216.3 1280.4,1216.3 1280.99,1216.3 1281.58,1216.3 1282.16,1216.3 1282.75,1216.3 1283.34,1216.3 1283.92,1216.3 1284.51,1216.3 1285.1,1216.3 1285.68,1216.3 1286.27,1216.3 1286.86,1216.3 1287.44,1216.3 1288.03,1216.3 1288.61,1216.3 1289.2,1216.3 1289.79,1216.3 1290.37,1216.3 1290.96,1216.3 1291.55,1216.3 1292.13,1216.3 1292.72,1216.3 1293.31,1216.3 1293.89,1216.3 1294.48,1216.3 1295.06,1216.3 1295.65,1216.3 1296.24,1216.3 1296.82,1216.3 1297.41,1216.3 1298,1216.3 1298.58,1216.3 1299.17,1216.3 1299.76,1216.3 1300.34,1216.3 1300.93,1216.3 1301.52,1216.3 1302.1,1216.3 1302.69,1216.3 1303.27,1216.3 1303.86,1216.3 1304.45,1216.3 1305.03,1216.3 1305.62,1216.3 1306.21,1216.3 1306.79,1216.3 1307.38,1216.3 1307.97,1216.3 1308.55,1216.3 1309.14,1216.3 1309.73,1216.3 1310.31,1216.3 1310.9,1216.3 1311.48,1216.3 1312.07,1216.3 1312.66,1216.3 1313.24,1216.3 1313.83,1216.3 1314.42,1216.3 1315,1216.3 1315.59,1216.3 1316.18,1216.3 1316.76,1216.3 1317.35,1216.3 1317.93,1216.3 1318.52,1216.3 1319.11,1216.3 1319.69,1216.3 1320.28,1216.3 1320.87,1216.3 1321.45,1216.3 1322.04,1216.3 1322.63,1216.3 1323.21,1216.3 1323.8,1216.3 1324.39,1216.3 1324.97,1216.3 1325.56,1216.3 1326.14,1216.3 1326.73,1216.3 1327.32,1216.3 1327.9,1216.3 1328.49,1216.3 1329.08,1216.3 1329.66,1216.3 1330.25,1216.3 1330.84,1216.3 1331.42,1216.3 1332.01,1216.3 1332.6,1216.3 1333.18,1216.3 1333.77,1216.3 1334.35,1216.3 1334.94,1216.3 1335.53,1216.3 1336.11,1216.3 1336.7,1216.3 1337.29,1216.3 1337.87,1216.3 1338.46,1216.3 1339.05,1216.3 1339.63,1216.3 1340.22,1216.3 1340.8,1216.3 1341.39,1216.3 1341.98,1216.3 1342.56,1216.3 1343.15,1216.3 1343.74,1216.3 1344.32,1216.3 1344.91,1216.3 1345.5,1216.3 1346.08,1216.3 1346.67,1216.3 1347.26,1216.3 1347.84,1216.3 1348.43,1216.3 1349.01,1216.3 1349.6,1216.3 1350.19,1216.3 1350.77,1216.3 1351.36,1216.3 1351.95,1216.3 1352.53,1216.3 1353.12,1216.3 1353.71,1216.3 1354.29,1216.3 1354.88,1216.3 1355.47,1216.3 1356.05,1216.3 1356.64,1216.3 1357.22,1216.3 1357.81,1216.3 1358.4,1216.3 1358.98,1216.3 1359.57,1216.3 1360.16,1216.3 1360.74,1216.3 1361.33,1216.3 1361.92,1216.3 1362.5,1216.3 1363.09,1216.3 1363.68,1216.3 1364.26,1216.3 1364.85,1216.3 1365.43,1216.3 1366.02,1216.3 1366.61,1216.3 1367.19,1216.3 1367.78,1216.3 1368.37,1216.3 1368.95,1216.3 1369.54,1216.3 1370.13,1216.3 1370.71,1216.3 1371.3,1216.3 1371.88,1216.3 1372.47,1216.3 1373.06,1216.3 1373.64,1216.3 1374.23,1216.3 1374.82,1216.3 1375.4,1216.3 1375.99,1216.3 1376.58,1216.3 1377.16,1216.3 1377.75,1216.3 1378.34,1216.3 1378.92,1216.3 1379.51,1216.3 1380.09,1216.3 1380.68,1216.3 1381.27,1216.3 1381.85,1216.3 1382.44,1216.3 1383.03,1216.3 1383.61,1216.3 1384.2,1216.3 1384.79,1216.3 1385.37,1216.3 1385.96,1216.3 1386.55,1216.3 1387.13,1216.3 1387.72,1216.3 1388.3,1216.3 1388.89,1216.3 1389.48,1216.3 1390.06,1216.3 1390.65,1216.3 1391.24,1216.3 1391.82,1216.3 1392.41,1216.3 1393,1216.3 1393.58,1216.3 1394.17,1216.3 1394.75,1216.3 1395.34,1216.3 1395.93,1216.3 1396.51,1216.3 1397.1,1216.3 1397.69,1216.3 1398.27,1216.3 1398.86,1216.3 1399.45,1216.3 1400.03,1216.3 1400.62,1216.3 1401.21,1216.3 1401.79,1216.3 1402.38,1216.3 1402.96,1216.3 1403.55,1216.3 1404.14,1216.3 1404.72,1216.3 1405.31,1216.3 1405.9,1216.3 1406.48,1216.3 1407.07,1216.3 1407.66,1216.3 1408.24,1216.3 1408.83,1216.3 1409.42,1216.3 1410,1216.3 1410.59,1216.3 1411.17,1216.3 1411.76,1216.3 1412.35,1216.3 1412.93,1216.3 1413.52,1216.3 1414.11,1216.3 1414.69,1216.3 1415.28,1216.3 1415.87,1216.3 1416.45,1216.3 1417.04,1216.3 1417.63,1216.3 1418.21,1216.3 1418.8,1216.3 1419.38,1216.3 1419.97,1216.3 1420.56,1216.3 1421.14,1216.3 1421.73,1216.3 1422.32,1216.3 1422.9,1216.3 1423.49,1216.3 1424.08,1216.3 1424.66,1216.3 1425.25,1216.3 1425.83,1216.3 1426.42,1216.3 1427.01,1216.3 1427.59,1216.3 1428.18,1216.3 1428.77,1216.3 1429.35,1216.3 1429.94,1216.3 1430.53,1216.3 1431.11,1216.3 1431.7,1216.3 1432.29,1216.3 1432.87,1216.3 1433.46,1216.3 1434.04,1216.3 1434.63,1216.3 1435.22,1216.3 1435.8,1216.3 1436.39,1216.3 1436.98,1216.3 1437.56,1216.3 1438.15,1216.3 1438.74,1216.3 1439.32,1216.3 1439.91,1216.3 1440.5,1216.3 1441.08,1216.3 1441.67,1216.3 1442.25,1216.3 1442.84,1216.3 1443.43,1216.3 1444.01,1216.3 1444.6,1216.3 1445.19,1216.3 1445.77,1216.3 1446.36,1216.3 1446.95,1216.3 1447.53,1216.3 1448.12,1216.3 1448.7,1216.3 1449.29,1216.3 1449.88,1216.3 1450.46,1216.3 1451.05,1216.3 1451.64,1216.3 1452.22,1216.3 1452.81,1216.3 1453.4,1216.3 1453.98,1216.3 1454.57,1216.3 1455.16,1216.3 1455.74,1216.3 1456.33,1216.3 1456.91,1216.3 1457.5,1216.3 1458.09,1216.3 1458.67,1216.3 1459.26,1216.3 1459.85,1216.3 1460.43,1216.3 1461.02,1216.3 1461.61,1216.3 1462.19,1216.3 1462.78,1216.3 1463.37,1216.3 1463.95,1216.3 1464.54,1216.3 1465.12,1216.3 1465.71,1216.3 1466.3,1216.3 1466.88,1216.3 1467.47,1216.3 1468.06,1216.3 1468.64,1216.3 1469.23,1216.3 1469.82,1216.3 1470.4,1216.3 1470.99,1216.3 1471.57,1216.3 1472.16,1216.3 1472.75,1216.3 1473.33,1216.3 1473.92,1216.3 1474.51,1216.3 1475.09,1216.3 1475.68,1216.3 1476.27,1216.3 1476.85,1216.3 1477.44,1216.3 1478.03,1216.3 1478.61,1216.3 1479.2,1216.3 1479.78,1216.3 1480.37,1216.3 1480.96,1216.3 1481.54,1216.3 1482.13,1216.3 1482.72,1216.3 1483.3,1216.3 1483.89,1216.3 1484.48,1216.3 1485.06,1216.3 1485.65,1216.3 1486.24,1216.3 1486.82,1216.3 1487.41,1216.3 1487.99,1216.3 1488.58,1216.3 1489.17,1216.3 1489.75,1216.3 1490.34,1216.3 1490.93,1216.3 1491.51,1216.3 1492.1,1216.3 1492.69,1216.3 1493.27,1216.3 1493.86,1216.3 1494.45,1216.3 1495.03,1216.3 1495.62,1216.3 1496.2,1216.3 1496.79,1216.3 1497.38,1216.3 1497.96,1216.3 1498.55,1216.3 1499.14,1216.3 1499.72,1216.3 1500.31,1216.3 1500.9,1216.3 1501.48,1216.3 1502.07,1216.3 1502.65,1216.3 1503.24,1216.3 1503.83,1216.3 1504.41,1216.3 1505,1216.3 1505.59,1216.3 1506.17,1216.3 1506.76,1216.3 1507.35,1216.3 1507.93,1216.3 1508.52,1216.3 1509.11,1216.3 1509.69,1216.3 1510.28,1216.3 1510.86,1216.3 1511.45,1216.3 1512.04,1216.3 1512.62,1216.3 1513.21,1216.3 1513.8,1216.3 1514.38,1216.3 1514.97,1216.3 1515.56,1216.3 1516.14,1216.3 1516.73,1216.3 1517.32,1216.3 1517.9,1216.3 1518.49,1216.3 1519.07,1216.3 1519.66,1216.3 1520.25,1216.3 1520.83,1216.3 1521.42,1216.3 1522.01,1216.3 1522.59,1216.3 1523.18,1216.3 1523.77,1216.3 1524.35,1216.3 1524.94,1216.3 1525.52,1216.3 1526.11,1216.3 1526.7,1216.3 1527.28,1216.3 1527.87,1216.3 1528.46,1216.3 1529.04,1216.3 1529.63,1216.3 1530.22,1216.3 1530.8,1216.3 1531.39,1216.3 1531.98,1216.3 1532.56,1216.3 1533.15,1216.3 1533.73,1216.3 1534.32,1216.3 1534.91,1216.3 1535.49,1216.3 1536.08,1216.3 1536.67,1216.3 1537.25,1216.3 1537.84,1216.3 1538.43,1216.3 1539.01,1216.3 1539.6,1216.3 1540.19,1216.3 1540.77,1216.3 1541.36,1216.3 1541.94,1216.3 1542.53,1216.3 1543.12,1216.3 1543.7,1216.3 1544.29,1216.3 1544.88,1216.3 1545.46,1216.3 1546.05,1216.3 1546.64,1216.3 1547.22,1216.3 1547.81,1216.3 1548.4,1216.3 1548.98,1216.3 1549.57,1216.3 1550.15,1216.3 1550.74,1216.3 1551.33,1216.3 1551.91,1216.3 1552.5,1216.3 1553.09,1216.3 1553.67,1216.3 1554.26,1216.3 1554.85,1216.3 1555.43,1216.3 1556.02,1216.3 1556.6,1216.3 1557.19,1216.3 1557.78,1216.3 1558.36,1216.3 1558.95,1216.3 1559.54,1216.3 1560.12,1216.3 1560.71,1216.3 1561.3,1216.3 1561.88,1216.3 1562.47,1216.3 1563.06,1216.3 1563.64,1216.3 1564.23,1216.3 1564.81,1216.3 1565.4,1216.3 1565.99,1216.3 1566.57,1216.3 1567.16,1216.3 1567.75,1216.3 1568.33,1216.3 1568.92,1216.3 1569.51,1216.3 1570.09,1216.3 1570.68,1216.3 1571.27,1216.3 1571.85,1216.3 1572.44,1216.3 1573.02,1216.3 1573.61,1216.3 1574.2,1216.3 1574.78,1216.3 1575.37,1216.3 1575.96,1216.3 1576.54,1216.3 1577.13,1216.3 1577.72,1216.3 1578.3,1216.3 1578.89,1216.3 1579.47,1216.3 1580.06,1216.3 1580.65,1216.3 1581.23,1216.3 1581.82,1216.3 1582.41,1216.3 1582.99,1216.3 1583.58,1216.3 1584.17,1216.3 1584.75,1216.3 1585.34,1216.3 1585.93,1216.3 1586.51,1216.3 1587.1,1216.3 1587.68,1216.3 1588.27,1216.3 1588.86,1216.3 1589.44,1216.3 1590.03,1216.3 1590.62,1216.3 1591.2,1216.3 1591.79,1216.3 1592.38,1216.3 1592.96,1216.3 1593.55,1216.3 1594.14,1216.3 1594.72,1216.3 1595.31,1216.3 1595.89,1216.3 1596.48,1216.3 1597.07,1216.3 1597.65,1216.3 1598.24,1216.3 1598.83,1216.3 1599.41,1216.3 1600,1216.3 1600.59,1216.3 1601.17,1216.3 1601.76,1216.3 1602.34,1216.3 1602.93,1216.3 1603.52,1216.3 1604.1,1216.3 1604.69,1216.3 1605.28,1216.3 1605.86,1216.3 1606.45,1216.3 1607.04,1216.3 1607.62,1216.3 1608.21,1216.3 1608.8,1216.3 1609.38,1216.3 1609.97,1216.3 1610.55,1216.3 1611.14,1216.3 1611.73,1216.3 1612.31,1216.3 1612.9,1216.3 1613.49,1216.3 1614.07,1216.3 1614.66,1216.3 1615.25,1216.3 1615.83,1216.3 1616.42,1216.3 1617.01,1216.3 1617.59,1216.3 1618.18,1216.3 1618.76,1216.3 1619.35,1216.3 1619.94,1216.3 1620.52,1216.3 1621.11,1216.3 1621.7,1216.3 1622.28,1216.3 1622.87,1216.3 1623.46,1216.3 1624.04,1216.3 1624.63,1216.3 1625.22,1216.3 1625.8,1216.3 1626.39,1216.3 1626.97,1216.3 1627.56,1216.3 1628.15,1216.3 1628.73,1216.3 1629.32,1216.3 1629.91,1216.3 1630.49,1216.3 1631.08,1216.3 1631.67,1216.3 1632.25,1216.3 1632.84,1216.3 1633.42,1216.3 1634.01,1216.3 1634.6,1216.3 1635.18,1216.3 1635.77,1216.3 1636.36,1216.3 1636.94,1216.3 1637.53,1216.3 1638.12,1216.3 1638.7,1216.3 1639.29,1216.3 1639.88,1216.3 1640.46,1216.3 1641.05,1216.3 1641.63,1216.3 1642.22,1216.3 1642.81,1216.3 1643.39,1216.3 1643.98,1216.3 1644.57,1216.3 1645.15,1216.3 1645.74,1216.3 1646.33,1216.3 1646.91,1216.3 1647.5,1216.3 1648.09,1216.3 1648.67,1216.3 1649.26,1216.3 1649.84,1216.3 1650.43,1216.3 1651.02,1216.3 1651.6,1216.3 1652.19,1216.3 1652.78,1216.3 1653.36,1216.3 1653.95,1216.3 1654.54,1216.3 1655.12,1216.3 1655.71,1216.3 1656.29,1216.3 1656.88,1216.3 1657.47,1216.3 1658.05,1216.3 1658.64,1216.3 1659.23,1216.3 1659.81,1216.3 1660.4,1216.3 1660.99,1216.3 1661.57,1216.3 1662.16,1216.3 1662.75,1216.3 1663.33,1216.3 1663.92,1216.3 1664.5,1216.3 1665.09,1216.3 1665.68,1216.3 1666.26,1216.3 1666.85,1216.3 1667.44,1216.3 1668.02,1216.3 1668.61,1216.3 1669.2,1216.3 1669.78,1216.3 1670.37,1216.3 1670.96,1216.3 1671.54,1216.3 1672.13,1216.3 1672.71,1216.3 1673.3,1216.3 1673.89,1216.3 1674.47,1216.3 1675.06,1216.3 1675.65,1216.3 1676.23,1216.3 1676.82,1216.3 1677.41,1216.3 1677.99,1216.3 1678.58,1216.3 1679.17,1216.3 1679.75,1216.3 1680.34,1216.3 1680.92,1216.3 1681.51,1216.3 1682.1,1216.3 1682.68,1216.3 1683.27,1216.3 1683.86,1216.3 1684.44,1216.3 1685.03,1216.3 1685.62,1216.3 1686.2,1216.3 1686.79,1216.3 1687.37,1216.3 1687.96,1216.3 1688.55,1216.3 1689.13,1216.3 1689.72,1216.3 1690.31,1216.3 1690.89,1216.3 1691.48,1216.3 1692.07,1216.3 1692.65,1216.3 1693.24,1216.3 1693.83,1216.3 1694.41,1216.3 1695,1216.3 1695.58,1216.3 1696.17,1216.3 1696.76,1216.3 1697.34,1216.3 1697.93,1216.3 1698.52,1216.3 1699.1,1216.3 1699.69,1216.3 1700.28,1216.3 1700.86,1216.3 1701.45,1216.3 1702.04,1216.3 1702.62,1216.3 1703.21,1216.3 1703.79,1216.3 1704.38,1216.3 1704.97,1216.3 1705.55,1216.3 1706.14,1216.3 1706.73,1216.3 1707.31,1216.3 1707.9,1216.3 1708.49,1216.3 1709.07,1216.3 1709.66,1216.3 1710.24,1216.3 1710.83,1216.3 1711.42,1216.3 1712,1216.3 1712.59,1216.3 1713.18,1216.3 1713.76,1216.3 1714.35,1216.3 1714.94,1216.3 1715.52,1216.3 1716.11,1216.3 1716.7,1216.3 1717.28,1216.3 1717.87,1216.3 1718.45,1216.3 1719.04,1216.3 1719.63,1216.3 1720.21,1216.3 1720.8,1216.3 1721.39,1216.3 1721.97,1216.3 1722.56,1216.3 1723.15,1216.3 1723.73,1216.3 1724.32,1216.3 1724.91,1216.3 1725.49,1216.3 1726.08,1216.3 1726.66,1216.3 1727.25,1216.3 1727.84,1216.3 1728.42,1216.3 1729.01,1216.3 1729.6,1216.3 1730.18,1216.3 1730.77,1216.3 1731.36,1216.3 1731.94,1216.3 1732.53,1216.3 1733.11,1216.3 1733.7,1216.3 1734.29,1216.3 1734.87,1216.3 1735.46,1216.3 1736.05,1216.3 1736.63,1216.3 1737.22,1216.3 1737.81,1216.3 1738.39,1216.3 1738.98,1216.3 1739.57,1216.3 1740.15,1216.3 1740.74,1216.3 1741.32,1216.3 1741.91,1216.3 1742.5,1216.3 1743.08,1216.3 1743.67,1216.3 1744.26,1216.3 1744.84,1216.3 1745.43,1216.3 1746.02,1216.3 1746.6,1216.3 1747.19,1216.3 1747.78,1216.3 1748.36,1216.3 1748.95,1216.3 1749.53,1216.3 1750.12,1216.3 1750.71,1216.3 1751.29,1216.3 1751.88,1216.3 1752.47,1216.3 1753.05,1216.3 1753.64,1216.3 1754.23,1216.3 1754.81,1216.3 1755.4,1216.3 1755.99,1216.3 1756.57,1216.3 1757.16,1216.3 1757.74,1216.3 1758.33,1216.3 1758.92,1216.3 1759.5,1216.3 1760.09,1216.3 1760.68,1216.3 1761.26,1216.3 1761.85,1216.3 1762.44,1216.3 1763.02,1216.3 1763.61,1216.3 1764.19,1216.3 1764.78,1216.3 1765.37,1216.3 1765.95,1216.3 1766.54,1216.3 1767.13,1216.3 1767.71,1216.3 1768.3,1216.3 1768.89,1216.3 1769.47,1216.3 1770.06,1216.3 1770.65,1216.3 1771.23,1216.3 1771.82,1216.3 1772.4,1216.3 1772.99,1216.3 1773.58,1216.3 1774.16,1216.3 1774.75,1216.3 1775.34,1216.3 1775.92,1216.3 1776.51,1216.3 1777.1,1216.3 1777.68,1216.3 1778.27,1216.3 1778.86,1216.3 1779.44,1216.3 1780.03,1216.3 1780.61,1216.3 1781.2,1216.3 1781.79,1216.3 1782.37,1216.3 1782.96,1216.3 1783.55,1216.3 1784.13,1216.3 1784.72,1216.3 1785.31,1216.3 1785.89,1216.3 1786.48,1216.3 1787.06,1216.3 1787.65,1216.3 1788.24,1216.3 1788.82,1216.3 1789.41,1216.3 1790,1216.3 1790.58,1216.3 1791.17,1216.3 1791.76,1216.3 1792.34,1216.3 1792.93,1216.3 1793.52,1216.3 1794.1,1216.3 1794.69,1216.3 1795.27,1216.3 1795.86,1216.3 1796.45,1216.3 1797.03,1216.3 1797.62,1216.3 1798.21,1216.3 1798.79,1216.3 1799.38,1216.3 1799.97,1216.3 1800.55,1216.3 1801.14,1216.3 1801.73,1216.3 1802.31,1216.3 1802.9,1216.3 1803.48,1216.3 1804.07,1216.3 1804.66,1216.3 1805.24,1216.3 1805.83,1216.3 1806.42,1216.3 1807,1216.3 1807.59,1216.3 1808.18,1216.3 1808.76,1216.3 1809.35,1216.3 1809.94,1216.3 1810.52,1216.3 1811.11,1216.3 1811.69,1216.3 1812.28,1216.3 1812.87,1216.3 1813.45,1216.3 1814.04,1216.3 1814.63,1216.3 1815.21,1216.3 1815.8,1216.3 1816.39,1216.3 1816.97,1216.3 1817.56,1216.3 1818.14,1216.3 1818.73,1216.3 1819.32,1216.3 1819.9,1216.3 1820.49,1216.3 1821.08,1216.3 1821.66,1216.3 1822.25,1216.3 1822.84,1216.3 1823.42,1216.3 1824.01,1216.3 1824.6,1216.3 1825.18,1216.3 1825.77,1216.3 1826.35,1216.3 1826.94,1216.3 1827.53,1216.3 1828.11,1216.3 1828.7,1216.3 1829.29,1216.3 1829.87,1216.3 1830.46,1216.3 1831.05,1216.3 1831.63,1216.3 1832.22,1216.3 1832.81,1216.3 1833.39,1216.3 1833.98,1216.3 1834.56,1216.3 1835.15,1216.3 1835.74,1216.3 1836.32,1216.3 1836.91,1216.3 1837.5,1216.3 1838.08,1216.3 1838.67,1216.3 1839.26,1216.3 1839.84,1216.3 1840.43,1216.3 1841.01,1216.3 1841.6,1216.3 1842.19,1216.3 1842.77,1216.3 1843.36,1216.3 1843.95,1216.3 1844.53,1216.3 1845.12,1216.3 1845.71,1216.3 1846.29,1216.3 1846.88,1216.3 1847.47,1216.3 1848.05,1216.3 1848.64,1216.3 1849.22,1216.3 1849.81,1216.3 1850.4,1216.3 1850.98,1216.3 1851.57,1216.3 1852.16,1216.3 1852.74,1216.3 1853.33,1216.3 1853.92,1216.3 1854.5,1216.3 1855.09,1216.3 1855.68,1216.3 1856.26,1216.3 1856.85,1216.3 1857.43,1216.3 1858.02,1216.3 1858.61,1216.3 1859.19,1216.3 1859.78,1216.3 1860.37,1216.3 1860.95,1216.3 1861.54,1216.3 1862.13,1216.3 1862.71,1216.3 1863.3,1216.3 1863.88,1216.3 1864.47,1216.3 1865.06,1216.3 1865.64,1216.3 1866.23,1216.3 1866.82,1216.3 1867.4,1216.3 1867.99,1216.3 1868.58,1216.3 1869.16,1216.3 1869.75,1216.3 1870.34,1216.3 1870.92,1216.3 1871.51,1216.3 1872.09,1216.3 1872.68,1216.3 1873.27,1216.3 1873.85,1216.3 1874.44,1216.3 1875.03,1216.3 1875.61,1216.3 1876.2,1216.3 1876.79,1216.3 1877.37,1216.3 1877.96,1216.3 1878.55,1216.3 1879.13,1216.3 1879.72,1216.3 1880.3,1216.3 1880.89,1216.3 1881.48,1216.3 1882.06,1216.3 1882.65,1216.3 1883.24,1216.3 1883.82,1216.3 1884.41,1216.3 1885,1216.3 1885.58,1216.3 1886.17,1216.3 1886.76,1216.3 1887.34,1216.3 1887.93,1216.3 1888.51,1216.3 1889.1,1216.3 1889.69,1216.3 1890.27,1216.3 1890.86,1216.3 1891.45,1216.3 1892.03,1216.3 1892.62,1216.3 1893.21,1216.3 1893.79,1216.3 1894.38,1216.3 1894.96,1216.3 1895.55,1216.3 1896.14,1216.3 1896.72,1216.3 1897.31,1216.3 1897.9,1216.3 1898.48,1216.3 1899.07,1216.3 1899.66,1216.3 1900.24,1216.3 1900.83,1216.3 1901.42,1216.3 1902,1216.3 1902.59,1216.3 1903.17,1216.3 1903.76,1216.3 1904.35,1216.3 1904.93,1216.3 1905.52,1216.3 1906.11,1216.3 1906.69,1216.3 1907.28,1216.3 1907.87,1216.3 1908.45,1216.3 1909.04,1216.3 1909.63,1216.3 1910.21,1216.3 1910.8,1216.3 1911.38,1216.3 1911.97,1216.3 1912.56,1216.3 1913.14,1216.3 1913.73,1216.3 1914.32,1216.3 1914.9,1216.3 1915.49,1216.3 1916.08,1216.3 1916.66,1216.3 1917.25,1216.3 1917.83,1216.3 1918.42,1216.3 1919.01,1216.3 1919.59,1216.3 1920.18,1216.3 1920.77,1216.3 1921.35,1216.3 1921.94,1216.3 1922.53,1216.3 1923.11,1216.3 1923.7,1216.3 1924.29,1216.3 1924.87,1216.3 1925.46,1216.3 1926.04,1216.3 1926.63,1216.3 1927.22,1216.3 1927.8,1216.3 1928.39,1216.3 1928.98,1216.3 1929.56,1216.3 1930.15,1216.3 1930.74,1216.3 1931.32,1216.3 1931.91,1216.3 1932.5,1216.3 1933.08,1216.3 1933.67,1216.3 1934.25,1216.3 1934.84,1216.3 1935.43,1216.3 1936.01,1216.3 1936.6,1216.3 1937.19,1216.3 1937.77,1216.3 1938.36,1216.3 1938.95,1216.3 1939.53,1216.3 1940.12,1216.3 1940.71,1216.3 1941.29,1216.3 1941.88,1216.3 1942.46,1216.3 1943.05,1216.3 1943.64,1216.3 1944.22,1216.3 1944.81,1216.3 1945.4,1216.3 1945.98,1216.3 1946.57,1216.3 1947.16,1216.3 1947.74,1216.3 1948.33,1216.3 1948.91,1216.3 1949.5,1216.3 1950.09,1216.3 1950.67,1216.3 1951.26,1216.3 1951.85,1216.3 1952.43,1216.3 1953.02,1216.3 1953.61,1216.3 1954.19,1216.3 1954.78,1216.3 1955.37,1216.3 1955.95,1216.3 1956.54,1216.3 1957.12,1216.3 1957.71,1216.3 1958.3,1216.3 1958.88,1216.3 1959.47,1216.3 1960.06,1216.3 1960.64,1216.3 1961.23,1216.3 1961.82,1216.3 1962.4,1216.3 1962.99,1216.3 1963.58,1216.3 1964.16,1216.3 1964.75,1216.3 1965.33,1216.3 1965.92,1216.3 1966.51,1216.3 1967.09,1216.3 1967.68,1216.3 1968.27,1216.3 1968.85,1216.3 1969.44,1216.3 1970.03,1216.3 1970.61,1216.3 1971.2,1216.3 1971.78,1216.3 1972.37,1216.3 1972.96,1216.3 1973.54,1216.3 1974.13,1216.3 1974.72,1216.3 1975.3,1216.3 1975.89,1216.3 1976.48,1216.3 1977.06,1216.3 1977.65,1216.3 1978.24,1216.3 1978.82,1216.3 1979.41,1216.3 1979.99,1216.3 1980.58,1216.3 1981.17,1216.3 1981.75,1216.3 1982.34,1216.3 1982.93,1216.3 1983.51,1216.3 1984.1,1216.3 1984.69,1216.3 1985.27,1216.3 1985.86,1216.3 1986.45,1216.3 1987.03,1216.3 1987.62,1216.3 1988.2,1216.3 1988.79,1216.3 1989.38,1216.3 1989.96,1216.3 1990.55,1216.3 1991.14,1216.3 1991.72,1216.3 1992.31,1216.3 1992.9,1216.3 1993.48,1216.3 1994.07,1216.3 1994.65,1216.3 1995.24,1216.3 1995.83,1216.3 1996.41,1216.3 1997,1216.3 1997.59,1216.3 1998.17,1216.3 1998.76,1216.3 1999.35,1216.3 1999.93,1216.3 2000.52,1216.3 2001.11,1216.3 2001.69,1216.3 2002.28,1216.3 2002.86,1216.3 2003.45,1216.3 2004.04,1216.3 2004.62,1216.3 2005.21,1216.3 2005.8,1216.3 2006.38,1216.3 2006.97,1216.3 2007.56,1216.3 2008.14,1216.3 2008.73,1216.3 2009.32,1216.3 2009.9,1216.3 2010.49,1216.3 2011.07,1216.3 2011.66,1216.3 2012.25,1216.3 2012.83,1216.3 2013.42,1216.3 2014.01,1216.3 2014.59,1216.3 2015.18,1216.3 2015.77,1216.3 2016.35,1216.3 2016.94,1216.3 2017.53,1216.3 2018.11,1216.3 2018.7,1216.3 2019.28,1216.3 2019.87,1216.3 2020.46,1216.3 2021.04,1216.3 2021.63,1216.3 2022.22,1216.3 2022.8,1216.3 2023.39,1216.3 2023.98,1216.3 2024.56,1216.3 2025.15,1216.3 2025.73,1216.3 2026.32,1216.3 2026.91,1216.3 2027.49,1216.3 2028.08,1216.3 2028.67,1216.3 2029.25,1216.3 2029.84,1216.3 2030.43,1216.3 2031.01,1216.3 2031.6,1216.3 2032.19,1216.3 2032.77,1216.3 2033.36,1216.3 2033.94,1216.3 2034.53,1216.3 2035.12,1216.3 2035.7,1216.3 2036.29,1216.3 2036.88,1216.3 2037.46,1216.3 2038.05,1216.3 2038.64,1216.3 2039.22,1216.3 2039.81,1216.3 2040.4,1216.3 2040.98,1216.3 2041.57,1216.3 2042.15,1216.3 2042.74,1216.3 2043.33,1216.3 2043.91,1216.3 2044.5,1216.3 2045.09,1216.3 2045.67,1216.3 2046.26,1216.3 2046.85,1216.3 2047.43,1216.3 2048.02,1216.3 2048.6,1216.3 2049.19,1216.3 2049.78,1216.3 2050.36,1216.3 2050.95,1216.3 2051.54,1216.3 2052.12,1216.3 2052.71,1216.3 2053.3,1216.3 2053.88,1216.3 2054.47,1216.3 2055.06,1216.3 2055.64,1216.3 2056.23,1216.3 2056.81,1216.3 2057.4,1216.3 2057.99,1216.3 2058.57,1216.3 2059.16,1216.3 2059.75,1216.3 2060.33,1216.3 2060.92,1216.3 2061.51,1216.3 2062.09,1216.3 2062.68,1216.3 2063.27,1216.3 2063.85,1216.3 2064.44,1216.3 2065.02,1216.3 2065.61,1216.3 2066.2,1216.3 2066.78,1216.3 2067.37,1216.3 2067.96,1216.3 2068.54,1216.3 2069.13,1216.3 2069.72,1216.3 2070.3,1216.3 2070.89,1216.3 2071.48,1216.3 2072.06,1216.3 2072.65,1216.3 2073.23,1216.3 2073.82,1216.3 2074.41,1216.3 2074.99,1216.3 2075.58,1216.3 2076.17,1216.3 2076.75,1216.3 2077.34,1216.3 2077.93,1216.3 2078.51,1216.3 2079.1,1216.3 2079.68,1216.3 2080.27,1216.3 2080.86,1216.3 2081.44,1216.3 2082.03,1216.3 2082.62,1216.3 2083.2,1216.3 2083.79,1216.3 2084.38,1216.3 2084.96,1216.3 2085.55,1216.3 2086.14,1216.3 2086.72,1216.3 2087.31,1216.3 2087.89,1216.3 2088.48,1216.3 2089.07,1216.3 2089.65,1216.3 2090.24,1216.3 2090.83,1216.3 2091.41,1216.3 2092,1216.3 2092.59,1216.3 2093.17,1216.3 2093.76,1216.3 2094.35,1216.3 2094.93,1216.3 2095.52,1216.3 2096.1,1216.3 2096.69,1216.3 2097.28,1216.3 2097.86,1216.3 2098.45,1216.3 2099.04,1216.3 2099.62,1216.3 2100.21,1216.3 2100.8,1216.3 2101.38,1216.3 2101.97,1216.3 2102.55,1216.3 2103.14,1216.3 2103.73,1216.3 2104.31,1216.3 2104.9,1216.3 2105.49,1216.3 2106.07,1216.3 2106.66,1216.3 2107.25,1216.3 2107.83,1216.3 2108.42,1216.3 2109.01,1216.3 2109.59,1216.3 2110.18,1216.3 2110.76,1216.3 2111.35,1216.3 2111.94,1216.3 2112.52,1216.3 2113.11,1216.3 2113.7,1216.3 2114.28,1216.3 2114.87,1216.3 2115.46,1216.3 2116.04,1216.3 2116.63,1216.3 2117.22,1216.3 2117.8,1216.3 2118.39,1216.3 2118.97,1216.3 2119.56,1216.3 2120.15,1216.3 2120.73,1216.3 2121.32,1216.3 2121.91,1216.3 2122.49,1216.3 2123.08,1216.3 2123.67,1216.3 2124.25,1216.3 2124.84,1216.3 2125.42,1216.3 2126.01,1216.3 2126.6,1216.3 2127.18,1216.3 2127.77,1216.3 2128.36,1216.3 2128.94,1216.3 2129.53,1216.3 2130.12,1216.3 2130.7,1216.3 2131.29,1216.3 2131.88,1216.3 2132.46,1216.3 2133.05,1216.3 2133.63,1216.3 2134.22,1216.3 2134.81,1216.3 2135.39,1216.3 2135.98,1216.3 2136.57,1216.3 2137.15,1216.3 2137.74,1216.3 2138.33,1216.3 2138.91,1216.3 2139.5,1216.3 2140.09,1216.3 2140.67,1216.3 2141.26,1216.3 2141.84,1216.3 2142.43,1216.3 2143.02,1216.3 2143.6,1216.3 2144.19,1216.3 2144.78,1216.3 2145.36,1216.3 2145.95,1216.3 2146.54,1216.3 2147.12,1216.3 2147.71,1216.3 2148.3,1216.3 2148.88,1216.3 2149.47,1216.3 2150.05,1216.3 2150.64,1216.3 2151.23,1216.3 2151.81,1216.3 2152.4,1216.3 2152.99,1216.3 2153.57,1216.3 2154.16,1216.3 2154.75,1216.3 2155.33,1216.3 2155.92,1216.3 2156.5,1216.3 2157.09,1216.3 2157.68,1216.3 2158.26,1216.3 \"/>\n<path clip-path=\"url(#clip922)\" d=\"M986.025 1216.29 L986.612 1216.29 L987.198 1216.29 L987.785 1216.29 L988.371 1216.29 L988.957 1216.29 L989.544 1216.29 L990.13 1216.29 L990.717 1216.29 L991.303 1216.29 L991.889 1216.29 L992.476 1216.29 L993.062 1216.29 L993.649 1216.29 L994.235 1216.29 L994.822 1216.29 L995.408 1216.29 L995.994 1216.29 L996.581 1216.29 L997.167 1216.29 L997.754 1216.29 L998.34 1216.29 L998.926 1216.29 L999.513 1216.29 L1000.1 1216.29 L1000.69 1216.29 L1001.27 1216.29 L1001.86 1216.29 L1002.44 1216.29 L1003.03 1216.29 L1003.62 1216.29 L1004.2 1216.29 L1004.79 1216.29 L1005.38 1216.29 L1005.96 1216.29 L1006.55 1216.29 L1007.14 1216.29 L1007.72 1216.29 L1008.31 1216.29 L1008.9 1216.29 L1009.48 1216.29 L1010.07 1216.29 L1010.65 1216.29 L1011.24 1216.29 L1011.83 1216.29 L1012.41 1216.29 L1013 1216.29 L1013.59 1216.29 L1014.17 1216.29 L1014.76 1216.29 L1015.35 1216.29 L1015.93 1216.29 L1016.52 1216.29 L1017.11 1216.29 L1017.69 1216.29 L1018.28 1216.29 L1018.86 1216.29 L1019.45 1216.29 L1020.04 1216.29 L1020.62 1216.29 L1021.21 1216.29 L1021.8 1216.29 L1022.38 1216.29 L1022.97 1216.29 L1023.56 1216.29 L1024.14 1216.29 L1024.73 1216.29 L1025.32 1216.29 L1025.9 1216.29 L1026.49 1216.29 L1027.07 1216.29 L1027.66 1216.29 L1028.25 1216.29 L1028.83 1216.29 L1029.42 1216.29 L1030.01 1216.29 L1030.59 1216.29 L1031.18 1216.29 L1031.77 1216.29 L1032.35 1216.29 L1032.94 1216.29 L1033.52 1216.29 L1034.11 1216.29 L1034.7 1216.29 L1035.28 1216.29 L1035.87 1216.29 L1036.46 1216.29 L1037.04 1216.29 L1037.63 1216.29 L1038.22 1216.29 L1038.8 1216.29 L1039.39 1216.29 L1039.98 1216.29 L1040.56 1216.29 L1041.15 1216.29 L1041.73 1216.29 L1042.32 1216.29 L1042.91 1216.29 L1043.49 1216.29 L1044.08 1216.29 L1044.67 1216.29 L1045.25 1216.29 L1045.84 1216.29 L1046.43 1216.29 L1047.01 1216.29 L1047.6 1216.29 L1048.19 1216.29 L1048.77 1216.29 L1049.36 1216.29 L1049.94 1216.29 L1050.53 1216.29 L1051.12 1216.29 L1051.7 1216.29 L1052.29 1216.29 L1052.88 1216.29 L1053.46 1216.29 L1054.05 1216.29 L1054.64 1216.29 L1055.22 1216.29 L1055.81 1216.29 L1056.39 1216.29 L1056.98 1216.29 L1057.57 1216.29 L1058.15 1216.29 L1058.74 1216.29 L1059.33 1216.29 L1059.91 1216.29 L1060.5 1216.29 L1061.09 1216.29 L1061.67 1216.29 L1062.26 1216.29 L1062.85 1216.29 L1063.43 1216.29 L1064.02 1216.29 L1064.6 1216.29 L1065.19 1216.29 L1065.78 1216.29 L1066.36 1216.29 L1066.95 1216.29 L1067.54 1216.29 L1068.12 1216.29 L1068.71 1216.29 L1069.3 1216.29 L1069.88 1216.29 L1070.47 1216.29 L1071.06 1216.29 L1071.64 1216.29 L1072.23 1216.29 L1072.81 1216.29 L1073.4 1216.29 L1073.99 1216.29 L1074.57 1216.29 L1075.16 1216.29 L1075.75 1216.29 L1076.33 1216.29 L1076.92 1216.29 L1077.51 1216.29 L1078.09 1216.29 L1078.68 1216.29 L1079.26 1216.29 L1079.85 1216.29 L1080.44 1216.29 L1081.02 1216.29 L1081.61 1216.29 L1082.2 1216.29 L1082.78 1216.29 L1083.37 1216.29 L1083.96 1216.29 L1084.54 1216.29 L1085.13 1216.29 L1085.72 1216.29 L1086.3 1216.29 L1086.89 1216.29 L1087.47 1216.29 L1088.06 1216.29 L1088.65 1216.29 L1089.23 1216.29 L1089.82 1216.29 L1090.41 1216.29 L1090.99 1216.29 L1091.58 1216.29 L1092.17 1216.29 L1092.75 1216.29 L1093.34 1216.29 L1093.93 1216.29 L1094.51 1216.29 L1095.1 1216.29 L1095.68 1216.29 L1096.27 1216.29 L1096.86 1216.29 L1097.44 1216.29 L1098.03 1216.29 L1098.62 1216.29 L1099.2 1216.29 L1099.79 1216.29 L1100.38 1216.29 L1100.96 1216.29 L1101.55 1216.29 L1102.14 1216.29 L1102.72 1216.29 L1103.31 1216.29 L1103.89 1216.29 L1104.48 1216.29 L1105.07 1216.29 L1105.65 1216.29 L1106.24 1216.29 L1106.83 1216.29 L1107.41 1216.29 L1108 1216.29 L1108.59 1216.29 L1109.17 1216.29 L1109.76 1216.29 L1110.34 1216.29 L1110.93 1216.29 L1111.52 1216.29 L1112.1 1216.29 L1112.69 1216.29 L1113.28 1216.29 L1113.86 1216.29 L1114.45 1216.29 L1115.04 1216.29 L1115.62 1216.29 L1116.21 1216.29 L1116.8 1216.29 L1117.38 1216.29 L1117.97 1216.29 L1118.55 1216.29 L1119.14 1216.29 L1119.73 1216.29 L1120.31 1216.29 L1120.9 1216.29 L1121.49 1216.29 L1122.07 1216.29 L1122.66 1216.29 L1123.25 1216.29 L1123.83 1216.29 L1124.42 1216.29 L1125.01 1216.29 L1125.59 1216.29 L1126.18 1216.29 L1126.76 1216.29 L1127.35 1216.29 L1127.94 1216.29 L1128.52 1216.29 L1129.11 1216.29 L1129.7 1216.29 L1130.28 1216.29 L1130.87 1216.29 L1131.46 1216.29 L1132.04 1216.29 L1132.63 1216.29 L1133.21 1216.29 L1133.8 1216.29 L1134.39 1216.29 L1134.97 1216.29 L1135.56 1216.29 L1136.15 1216.29 L1136.73 1216.29 L1137.32 1216.29 L1137.91 1216.29 L1138.49 1216.29 L1139.08 1216.29 L1139.67 1216.29 L1140.25 1216.29 L1140.84 1216.29 L1141.42 1216.29 L1142.01 1216.29 L1142.6 1216.29 L1143.18 1216.29 L1143.77 1216.29 L1144.36 1216.29 L1144.94 1216.29 L1145.53 1216.29 L1146.12 1216.29 L1146.7 1216.29 L1147.29 1216.29 L1147.88 1216.29 L1148.46 1216.29 L1149.05 1216.29 L1149.63 1216.29 L1150.22 1216.29 L1150.81 1216.29 L1151.39 1216.29 L1151.98 1216.29 L1152.57 1216.29 L1153.15 1216.29 L1153.74 1216.29 L1154.33 1216.29 L1154.91 1216.29 L1155.5 1216.29 L1156.09 1216.29 L1156.67 1216.29 L1157.26 1216.29 L1157.84 1216.29 L1158.43 1216.29 L1159.02 1216.29 L1159.6 1216.29 L1160.19 1216.29 L1160.78 1216.29 L1161.36 1216.29 L1161.95 1216.29 L1162.54 1216.29 L1163.12 1216.29 L1163.71 1216.29 L1164.29 1216.29 L1164.88 1216.29 L1165.47 1216.29 L1166.05 1216.29 L1166.64 1216.29 L1167.23 1216.29 L1167.81 1216.29 L1168.4 1216.29 L1168.99 1216.29 L1169.57 1216.29 L1170.16 1216.29 L1170.75 1216.29 L1171.33 1216.29 L1171.92 1216.29 L1172.5 1216.29 L1173.09 1216.29 L1173.68 1216.29 L1174.26 1216.29 L1174.85 1216.29 L1175.44 1216.29 L1176.02 1216.29 L1176.61 1216.29 L1177.2 1216.29 L1177.78 1216.29 L1178.37 1216.29 L1178.96 1216.29 L1179.54 1216.29 L1180.13 1216.29 L1180.71 1216.29 L1181.3 1216.29 L1181.89 1216.29 L1182.47 1216.29 L1183.06 1216.29 L1183.65 1216.29 L1184.23 1216.29 L1184.82 1216.29 L1185.41 1216.29 L1185.99 1216.29 L1186.58 1216.29 L1187.16 1216.29 L1187.75 1216.29 L1188.34 1216.29 L1188.92 1216.29 L1189.51 1216.29 L1190.1 1216.29 L1190.68 1216.29 L1191.27 1216.29 L1191.86 1216.29 L1192.44 1216.29 L1193.03 1216.29 L1193.62 1216.29 L1194.2 1216.29 L1194.79 1216.29 L1195.37 1216.29 L1195.96 1216.29 L1196.55 1216.29 L1197.13 1216.29 L1197.72 1216.29 L1198.31 1216.29 L1198.89 1216.29 L1199.48 1216.29 L1200.07 1216.29 L1200.65 1216.29 L1201.24 1216.29 L1201.83 1216.29 L1202.41 1216.29 L1203 1216.29 L1203.58 1216.29 L1204.17 1216.29 L1204.76 1216.29 L1205.34 1216.29 L1205.93 1216.29 L1206.52 1216.29 L1207.1 1216.29 L1207.69 1216.29 L1208.28 1216.29 L1208.86 1216.29 L1209.45 1216.29 L1210.03 1216.29 L1210.62 1216.29 L1211.21 1216.29 L1211.79 1216.29 L1212.38 1216.29 L1212.97 1216.29 L1213.55 1216.29 L1214.14 1216.29 L1214.73 1216.29 L1215.31 1216.29 L1215.9 1216.29 L1216.49 1216.29 L1217.07 1216.29 L1217.66 1216.29 L1218.24 1216.29 L1218.83 1216.29 L1219.42 1216.29 L1220 1216.29 L1220.59 1216.29 L1221.18 1216.29 L1221.76 1216.29 L1222.35 1216.29 L1222.94 1216.29 L1223.52 1216.29 L1224.11 1216.29 L1224.7 1216.29 L1225.28 1216.29 L1225.87 1216.29 L1226.45 1216.29 L1227.04 1216.29 L1227.63 1216.29 L1228.21 1216.29 L1228.8 1216.29 L1229.39 1216.29 L1229.97 1216.29 L1230.56 1216.29 L1231.15 1216.29 L1231.73 1216.29 L1232.32 1216.29 L1232.91 1216.29 L1233.49 1216.29 L1234.08 1216.29 L1234.66 1216.29 L1235.25 1216.29 L1235.84 1216.29 L1236.42 1216.29 L1237.01 1216.29 L1237.6 1216.29 L1238.18 1216.29 L1238.77 1216.29 L1239.36 1216.29 L1239.94 1216.29 L1240.53 1216.29 L1241.11 1216.29 L1241.7 1216.29 L1242.29 1216.29 L1242.87 1216.29 L1243.46 1216.29 L1244.05 1216.29 L1244.63 1216.29 L1245.22 1216.29 L1245.81 1216.29 L1246.39 1216.29 L1246.98 1216.29 L1247.57 1216.29 L1248.15 1216.29 L1248.74 1216.29 L1249.32 1216.29 L1249.91 1216.29 L1250.5 1216.29 L1251.08 1216.29 L1251.67 1216.29 L1252.26 1216.29 L1252.84 1216.29 L1253.43 1216.29 L1254.02 1216.29 L1254.6 1216.29 L1255.19 1216.29 L1255.78 1216.29 L1256.36 1216.29 L1256.95 1216.29 L1257.53 1216.29 L1258.12 1216.29 L1258.71 1216.29 L1259.29 1216.29 L1259.88 1216.29 L1260.47 1216.29 L1261.05 1216.29 L1261.64 1216.29 L1262.23 1216.29 L1262.81 1216.29 L1263.4 1216.29 L1263.98 1216.29 L1264.57 1216.29 L1265.16 1216.29 L1265.74 1216.29 L1266.33 1216.29 L1266.92 1216.29 L1267.5 1216.29 L1268.09 1216.29 L1268.68 1216.29 L1269.26 1216.29 L1269.85 1216.29 L1270.44 1216.29 L1271.02 1216.29 L1271.61 1216.29 L1272.19 1216.29 L1272.78 1216.29 L1273.37 1216.29 L1273.95 1216.29 L1274.54 1216.29 L1275.13 1216.29 L1275.71 1216.29 L1276.3 1216.29 L1276.89 1216.29 L1277.47 1216.29 L1278.06 1216.29 L1278.65 1216.29 L1279.23 1216.29 L1279.82 1216.29 L1280.4 1216.29 L1280.99 1216.29 L1281.58 1216.29 L1282.16 1216.29 L1282.75 1216.29 L1283.34 1216.29 L1283.92 1216.29 L1284.51 1216.29 L1285.1 1216.29 L1285.68 1216.29 L1286.27 1216.29 L1286.86 1216.29 L1287.44 1216.29 L1288.03 1216.29 L1288.61 1216.29 L1289.2 1216.29 L1289.79 1216.29 L1290.37 1216.29 L1290.96 1216.29 L1291.55 1216.29 L1292.13 1216.29 L1292.72 1216.29 L1293.31 1216.29 L1293.89 1216.29 L1294.48 1216.29 L1295.06 1216.29 L1295.65 1216.29 L1296.24 1216.29 L1296.82 1216.29 L1297.41 1216.29 L1298 1216.29 L1298.58 1216.29 L1299.17 1216.29 L1299.76 1216.29 L1300.34 1216.29 L1300.93 1216.29 L1301.52 1216.29 L1302.1 1216.29 L1302.69 1216.29 L1303.27 1216.29 L1303.86 1216.29 L1304.45 1216.29 L1305.03 1216.29 L1305.62 1216.29 L1306.21 1216.29 L1306.79 1216.29 L1307.38 1216.29 L1307.97 1216.29 L1308.55 1216.29 L1309.14 1216.29 L1309.73 1216.29 L1310.31 1216.29 L1310.9 1216.29 L1311.48 1216.29 L1312.07 1216.29 L1312.66 1216.29 L1313.24 1216.29 L1313.83 1216.29 L1314.42 1216.29 L1315 1216.29 L1315.59 1216.29 L1316.18 1216.29 L1316.76 1216.29 L1317.35 1216.29 L1317.93 1216.29 L1318.52 1216.29 L1319.11 1216.29 L1319.69 1216.29 L1320.28 1216.29 L1320.87 1216.29 L1321.45 1216.29 L1322.04 1216.29 L1322.63 1216.29 L1323.21 1216.29 L1323.8 1216.29 L1324.39 1216.29 L1324.97 1216.29 L1325.56 1216.29 L1326.14 1216.29 L1326.73 1216.29 L1327.32 1216.29 L1327.9 1216.29 L1328.49 1216.29 L1329.08 1216.29 L1329.66 1216.29 L1330.25 1216.29 L1330.84 1216.29 L1331.42 1216.29 L1332.01 1216.29 L1332.6 1216.29 L1333.18 1216.29 L1333.77 1216.29 L1334.35 1216.29 L1334.94 1216.29 L1335.53 1216.29 L1336.11 1216.29 L1336.7 1216.29 L1337.29 1216.29 L1337.87 1216.29 L1338.46 1216.29 L1339.05 1216.29 L1339.63 1216.29 L1340.22 1216.29 L1340.8 1216.29 L1341.39 1216.29 L1341.98 1216.29 L1342.56 1216.29 L1343.15 1216.29 L1343.74 1216.29 L1344.32 1216.29 L1344.91 1216.29 L1345.5 1216.29 L1346.08 1216.29 L1346.67 1216.29 L1347.26 1216.29 L1347.84 1216.29 L1348.43 1216.29 L1349.01 1216.29 L1349.6 1216.29 L1350.19 1216.29 L1350.77 1216.29 L1351.36 1216.29 L1351.95 1216.29 L1352.53 1216.29 L1353.12 1216.29 L1353.71 1216.29 L1354.29 1216.29 L1354.88 1216.29 L1355.47 1216.29 L1356.05 1216.29 L1356.64 1216.29 L1357.22 1216.29 L1357.81 1216.29 L1358.4 1216.29 L1358.98 1216.29 L1359.57 1216.29 L1360.16 1216.29 L1360.74 1216.29 L1361.33 1216.29 L1361.92 1216.29 L1362.5 1216.29 L1363.09 1216.29 L1363.68 1216.29 L1364.26 1216.29 L1364.85 1216.29 L1365.43 1216.29 L1366.02 1216.29 L1366.61 1216.29 L1367.19 1216.29 L1367.78 1216.29 L1368.37 1216.29 L1368.95 1216.29 L1369.54 1216.29 L1370.13 1216.29 L1370.71 1216.29 L1371.3 1216.29 L1371.88 1216.29 L1372.47 1216.29 L1373.06 1216.29 L1373.64 1216.29 L1374.23 1216.29 L1374.82 1216.29 L1375.4 1216.29 L1375.99 1216.29 L1376.58 1216.29 L1377.16 1216.29 L1377.75 1216.29 L1378.34 1216.29 L1378.92 1216.29 L1379.51 1216.29 L1380.09 1216.29 L1380.68 1216.29 L1381.27 1216.29 L1381.85 1216.29 L1382.44 1216.29 L1383.03 1216.29 L1383.61 1216.29 L1384.2 1216.29 L1384.79 1216.29 L1385.37 1216.29 L1385.96 1216.29 L1386.55 1216.29 L1387.13 1216.29 L1387.72 1216.29 L1388.3 1216.29 L1388.89 1216.29 L1389.48 1216.29 L1390.06 1216.29 L1390.65 1216.29 L1391.24 1216.29 L1391.82 1216.29 L1392.41 1216.29 L1393 1216.29 L1393.58 1216.29 L1394.17 1216.29 L1394.75 1216.29 L1395.34 1216.29 L1395.93 1216.29 L1396.51 1216.29 L1397.1 1216.29 L1397.69 1216.29 L1398.27 1216.29 L1398.86 1216.29 L1399.45 1216.29 L1400.03 1216.29 L1400.62 1216.29 L1401.21 1216.29 L1401.79 1216.29 L1402.38 1216.29 L1402.96 1216.29 L1403.55 1216.29 L1404.14 1216.29 L1404.72 1216.29 L1405.31 1216.29 L1405.9 1216.29 L1406.48 1216.29 L1407.07 1216.29 L1407.66 1216.29 L1408.24 1216.29 L1408.83 1216.29 L1409.42 1216.29 L1410 1216.29 L1410.59 1216.29 L1411.17 1216.29 L1411.76 1216.29 L1412.35 1216.29 L1412.93 1216.29 L1413.52 1216.29 L1414.11 1216.29 L1414.69 1216.29 L1415.28 1216.29 L1415.87 1216.29 L1416.45 1216.29 L1417.04 1216.29 L1417.63 1216.29 L1418.21 1216.29 L1418.8 1216.29 L1419.38 1216.29 L1419.97 1216.29 L1420.56 1216.29 L1421.14 1216.29 L1421.73 1216.29 L1422.32 1216.29 L1422.9 1216.29 L1423.49 1216.29 L1424.08 1216.29 L1424.66 1216.29 L1425.25 1216.29 L1425.83 1216.29 L1426.42 1216.29 L1427.01 1216.29 L1427.59 1216.29 L1428.18 1216.29 L1428.77 1216.29 L1429.35 1216.29 L1429.94 1216.29 L1430.53 1216.29 L1431.11 1216.29 L1431.7 1216.29 L1432.29 1216.29 L1432.87 1216.29 L1433.46 1216.29 L1434.04 1216.29 L1434.63 1216.29 L1435.22 1216.29 L1435.8 1216.29 L1436.39 1216.29 L1436.98 1216.29 L1437.56 1216.29 L1438.15 1216.29 L1438.74 1216.29 L1439.32 1216.29 L1439.91 1216.29 L1440.5 1216.29 L1441.08 1216.29 L1441.67 1216.29 L1442.25 1216.29 L1442.84 1216.29 L1443.43 1216.29 L1444.01 1216.29 L1444.6 1216.29 L1445.19 1216.29 L1445.77 1216.29 L1446.36 1216.29 L1446.95 1216.29 L1447.53 1216.29 L1448.12 1216.29 L1448.7 1216.29 L1449.29 1216.29 L1449.88 1216.29 L1450.46 1216.29 L1451.05 1216.29 L1451.64 1216.29 L1452.22 1216.29 L1452.81 1216.29 L1453.4 1216.29 L1453.98 1216.29 L1454.57 1216.29 L1455.16 1216.29 L1455.74 1216.29 L1456.33 1216.29 L1456.91 1216.29 L1457.5 1216.29 L1458.09 1216.29 L1458.67 1216.29 L1459.26 1216.29 L1459.85 1216.29 L1460.43 1216.29 L1461.02 1216.29 L1461.61 1216.29 L1462.19 1216.29 L1462.78 1216.29 L1463.37 1216.29 L1463.95 1216.29 L1464.54 1216.29 L1465.12 1216.29 L1465.71 1216.29 L1466.3 1216.29 L1466.88 1216.29 L1467.47 1216.29 L1468.06 1216.29 L1468.64 1216.29 L1469.23 1216.29 L1469.82 1216.29 L1470.4 1216.29 L1470.99 1216.29 L1471.57 1216.29 L1472.16 1216.29 L1472.75 1216.29 L1473.33 1216.29 L1473.92 1216.29 L1474.51 1216.29 L1475.09 1216.29 L1475.68 1216.29 L1476.27 1216.29 L1476.85 1216.29 L1477.44 1216.29 L1478.03 1216.29 L1478.61 1216.29 L1479.2 1216.29 L1479.78 1216.29 L1480.37 1216.29 L1480.96 1216.29 L1481.54 1216.29 L1482.13 1216.29 L1482.72 1216.29 L1483.3 1216.29 L1483.89 1216.29 L1484.48 1216.29 L1485.06 1216.29 L1485.65 1216.29 L1486.24 1216.29 L1486.82 1216.29 L1487.41 1216.29 L1487.99 1216.29 L1488.58 1216.29 L1489.17 1216.29 L1489.75 1216.29 L1490.34 1216.29 L1490.93 1216.29 L1491.51 1216.29 L1492.1 1216.29 L1492.69 1216.29 L1493.27 1216.29 L1493.86 1216.29 L1494.45 1216.29 L1495.03 1216.29 L1495.62 1216.29 L1496.2 1216.29 L1496.79 1216.29 L1497.38 1216.29 L1497.96 1216.29 L1498.55 1216.29 L1499.14 1216.29 L1499.72 1216.29 L1500.31 1216.29 L1500.9 1216.29 L1501.48 1216.29 L1502.07 1216.29 L1502.65 1216.29 L1503.24 1216.29 L1503.83 1216.29 L1504.41 1216.29 L1505 1216.29 L1505.59 1216.29 L1506.17 1216.29 L1506.76 1216.29 L1507.35 1216.29 L1507.93 1216.29 L1508.52 1216.29 L1509.11 1216.29 L1509.69 1216.29 L1510.28 1216.29 L1510.86 1216.29 L1511.45 1216.29 L1512.04 1216.29 L1512.62 1216.29 L1513.21 1216.29 L1513.8 1216.29 L1514.38 1216.29 L1514.97 1216.29 L1515.56 1216.29 L1516.14 1216.29 L1516.73 1216.29 L1517.32 1216.29 L1517.9 1216.29 L1518.49 1216.29 L1519.07 1216.29 L1519.66 1216.29 L1520.25 1216.29 L1520.83 1216.29 L1521.42 1216.29 L1522.01 1216.29 L1522.59 1216.29 L1523.18 1216.29 L1523.77 1216.29 L1524.35 1216.29 L1524.94 1216.29 L1525.52 1216.29 L1526.11 1216.29 L1526.7 1216.29 L1527.28 1216.29 L1527.87 1216.29 L1528.46 1216.29 L1529.04 1216.29 L1529.63 1216.29 L1530.22 1216.29 L1530.8 1216.29 L1531.39 1216.29 L1531.98 1216.29 L1532.56 1216.29 L1533.15 1216.29 L1533.73 1216.29 L1534.32 1216.29 L1534.91 1216.29 L1535.49 1216.29 L1536.08 1216.29 L1536.67 1216.29 L1537.25 1216.29 L1537.84 1216.29 L1538.43 1216.29 L1539.01 1216.29 L1539.6 1216.29 L1540.19 1216.29 L1540.77 1216.29 L1541.36 1216.29 L1541.94 1216.29 L1542.53 1216.29 L1543.12 1216.29 L1543.7 1216.29 L1544.29 1216.29 L1544.88 1216.29 L1545.46 1216.29 L1546.05 1216.29 L1546.64 1216.29 L1547.22 1216.29 L1547.81 1216.29 L1548.4 1216.29 L1548.98 1216.29 L1549.57 1216.29 L1550.15 1216.29 L1550.74 1216.29 L1551.33 1216.29 L1551.91 1216.29 L1552.5 1216.29 L1553.09 1216.29 L1553.67 1216.29 L1554.26 1216.29 L1554.85 1216.29 L1555.43 1216.29 L1556.02 1216.29 L1556.6 1216.29 L1557.19 1216.29 L1557.78 1216.29 L1558.36 1216.29 L1558.95 1216.29 L1559.54 1216.29 L1560.12 1216.29 L1560.71 1216.29 L1561.3 1216.29 L1561.88 1216.29 L1562.47 1216.29 L1563.06 1216.29 L1563.64 1216.29 L1564.23 1216.29 L1564.81 1216.29 L1565.4 1216.29 L1565.99 1216.29 L1566.57 1216.29 L1567.16 1216.29 L1567.75 1216.29 L1568.33 1216.29 L1568.92 1216.29 L1569.51 1216.29 L1570.09 1216.29 L1570.68 1216.29 L1571.27 1216.29 L1571.85 1216.29 L1572.44 1216.29 L1573.02 1216.29 L1573.61 1216.29 L1574.2 1216.29 L1574.78 1216.29 L1575.37 1216.29 L1575.96 1216.29 L1576.54 1216.29 L1577.13 1216.29 L1577.72 1216.29 L1578.3 1216.29 L1578.89 1216.29 L1579.47 1216.29 L1580.06 1216.29 L1580.65 1216.29 L1581.23 1216.29 L1581.82 1216.29 L1582.41 1216.29 L1582.99 1216.29 L1583.58 1216.29 L1584.17 1216.29 L1584.75 1216.29 L1585.34 1216.29 L1585.93 1216.29 L1586.51 1216.29 L1587.1 1216.29 L1587.68 1216.29 L1588.27 1216.29 L1588.86 1216.29 L1589.44 1216.29 L1590.03 1216.29 L1590.62 1216.29 L1591.2 1216.29 L1591.79 1216.29 L1592.38 1216.29 L1592.96 1216.29 L1593.55 1216.29 L1594.14 1216.29 L1594.72 1216.29 L1595.31 1216.29 L1595.89 1216.29 L1596.48 1216.29 L1597.07 1216.29 L1597.65 1216.29 L1598.24 1216.29 L1598.83 1216.29 L1599.41 1216.29 L1600 1216.29 L1600.59 1216.29 L1601.17 1216.29 L1601.76 1216.29 L1602.34 1216.29 L1602.93 1216.29 L1603.52 1216.29 L1604.1 1216.29 L1604.69 1216.29 L1605.28 1216.29 L1605.86 1216.29 L1606.45 1216.29 L1607.04 1216.29 L1607.62 1216.29 L1608.21 1216.29 L1608.8 1216.29 L1609.38 1216.29 L1609.97 1216.29 L1610.55 1216.29 L1611.14 1216.29 L1611.73 1216.29 L1612.31 1216.29 L1612.9 1216.29 L1613.49 1216.29 L1614.07 1216.29 L1614.66 1216.29 L1615.25 1216.29 L1615.83 1216.29 L1616.42 1216.29 L1617.01 1216.29 L1617.59 1216.29 L1618.18 1216.29 L1618.76 1216.29 L1619.35 1216.29 L1619.94 1216.29 L1620.52 1216.29 L1621.11 1216.29 L1621.7 1216.29 L1622.28 1216.29 L1622.87 1216.29 L1623.46 1216.29 L1624.04 1216.29 L1624.63 1216.29 L1625.22 1216.29 L1625.8 1216.29 L1626.39 1216.29 L1626.97 1216.29 L1627.56 1216.29 L1628.15 1216.29 L1628.73 1216.29 L1629.32 1216.29 L1629.91 1216.29 L1630.49 1216.29 L1631.08 1216.29 L1631.67 1216.29 L1632.25 1216.29 L1632.84 1216.29 L1633.42 1216.29 L1634.01 1216.29 L1634.6 1216.29 L1635.18 1216.29 L1635.77 1216.29 L1636.36 1216.29 L1636.94 1216.29 L1637.53 1216.29 L1638.12 1216.29 L1638.7 1216.29 L1639.29 1216.29 L1639.88 1216.29 L1640.46 1216.29 L1641.05 1216.29 L1641.63 1216.29 L1642.22 1216.29 L1642.81 1216.29 L1643.39 1216.29 L1643.98 1216.29 L1644.57 1216.29 L1645.15 1216.29 L1645.74 1216.29 L1646.33 1216.29 L1646.91 1216.29 L1647.5 1216.29 L1648.09 1216.29 L1648.67 1216.29 L1649.26 1216.29 L1649.84 1216.29 L1650.43 1216.29 L1651.02 1216.29 L1651.6 1216.29 L1652.19 1216.29 L1652.78 1216.29 L1653.36 1216.29 L1653.95 1216.29 L1654.54 1216.29 L1655.12 1216.29 L1655.71 1216.29 L1656.29 1216.29 L1656.88 1216.29 L1657.47 1216.29 L1658.05 1216.29 L1658.64 1216.29 L1659.23 1216.29 L1659.81 1216.29 L1660.4 1216.29 L1660.99 1216.29 L1661.57 1216.29 L1662.16 1216.29 L1662.75 1216.29 L1663.33 1216.29 L1663.92 1216.29 L1664.5 1216.29 L1665.09 1216.29 L1665.68 1216.29 L1666.26 1216.29 L1666.85 1216.29 L1667.44 1216.29 L1668.02 1216.29 L1668.61 1216.29 L1669.2 1216.29 L1669.78 1216.29 L1670.37 1216.29 L1670.96 1216.29 L1671.54 1216.29 L1672.13 1216.29 L1672.71 1216.29 L1673.3 1216.29 L1673.89 1216.29 L1674.47 1216.29 L1675.06 1216.29 L1675.65 1216.29 L1676.23 1216.29 L1676.82 1216.29 L1677.41 1216.29 L1677.99 1216.29 L1678.58 1216.29 L1679.17 1216.29 L1679.75 1216.29 L1680.34 1216.29 L1680.92 1216.29 L1681.51 1216.29 L1682.1 1216.29 L1682.68 1216.29 L1683.27 1216.29 L1683.86 1216.29 L1684.44 1216.29 L1685.03 1216.29 L1685.62 1216.29 L1686.2 1216.29 L1686.79 1216.29 L1687.37 1216.29 L1687.96 1216.29 L1688.55 1216.29 L1689.13 1216.29 L1689.72 1216.29 L1690.31 1216.29 L1690.89 1216.29 L1691.48 1216.29 L1692.07 1216.29 L1692.65 1216.29 L1693.24 1216.29 L1693.83 1216.29 L1694.41 1216.29 L1695 1216.29 L1695.58 1216.29 L1696.17 1216.29 L1696.76 1216.29 L1697.34 1216.29 L1697.93 1216.29 L1698.52 1216.29 L1699.1 1216.29 L1699.69 1216.29 L1700.28 1216.29 L1700.86 1216.29 L1701.45 1216.29 L1702.04 1216.29 L1702.62 1216.29 L1703.21 1216.29 L1703.79 1216.29 L1704.38 1216.29 L1704.97 1216.29 L1705.55 1216.29 L1706.14 1216.29 L1706.73 1216.29 L1707.31 1216.29 L1707.9 1216.29 L1708.49 1216.29 L1709.07 1216.29 L1709.66 1216.29 L1710.24 1216.29 L1710.83 1216.29 L1711.42 1216.29 L1712 1216.29 L1712.59 1216.29 L1713.18 1216.29 L1713.76 1216.29 L1714.35 1216.29 L1714.94 1216.29 L1715.52 1216.29 L1716.11 1216.29 L1716.7 1216.29 L1717.28 1216.29 L1717.87 1216.29 L1718.45 1216.29 L1719.04 1216.29 L1719.63 1216.29 L1720.21 1216.29 L1720.8 1216.29 L1721.39 1216.29 L1721.97 1216.29 L1722.56 1216.29 L1723.15 1216.29 L1723.73 1216.29 L1724.32 1216.29 L1724.91 1216.29 L1725.49 1216.29 L1726.08 1216.29 L1726.66 1216.29 L1727.25 1216.29 L1727.84 1216.29 L1728.42 1216.29 L1729.01 1216.29 L1729.6 1216.29 L1730.18 1216.29 L1730.77 1216.29 L1731.36 1216.29 L1731.94 1216.29 L1732.53 1216.29 L1733.11 1216.29 L1733.7 1216.29 L1734.29 1216.29 L1734.87 1216.29 L1735.46 1216.29 L1736.05 1216.29 L1736.63 1216.29 L1737.22 1216.29 L1737.81 1216.29 L1738.39 1216.29 L1738.98 1216.29 L1739.57 1216.29 L1740.15 1216.29 L1740.74 1216.29 L1741.32 1216.29 L1741.91 1216.29 L1742.5 1216.29 L1743.08 1216.29 L1743.67 1216.29 L1744.26 1216.29 L1744.84 1216.29 L1745.43 1216.29 L1746.02 1216.29 L1746.6 1216.29 L1747.19 1216.29 L1747.78 1216.29 L1748.36 1216.29 L1748.95 1216.29 L1749.53 1216.29 L1750.12 1216.29 L1750.71 1216.29 L1751.29 1216.29 L1751.88 1216.29 L1752.47 1216.29 L1753.05 1216.29 L1753.64 1216.29 L1754.23 1216.29 L1754.81 1216.29 L1755.4 1216.29 L1755.99 1216.29 L1756.57 1216.29 L1757.16 1216.29 L1757.74 1216.29 L1758.33 1216.29 L1758.92 1216.29 L1759.5 1216.29 L1760.09 1216.29 L1760.68 1216.29 L1761.26 1216.29 L1761.85 1216.29 L1762.44 1216.29 L1763.02 1216.29 L1763.61 1216.29 L1764.19 1216.29 L1764.78 1216.29 L1765.37 1216.29 L1765.95 1216.29 L1766.54 1216.29 L1767.13 1216.29 L1767.71 1216.29 L1768.3 1216.29 L1768.89 1216.29 L1769.47 1216.29 L1770.06 1216.29 L1770.65 1216.29 L1771.23 1216.29 L1771.82 1216.29 L1772.4 1216.29 L1772.99 1216.29 L1773.58 1216.29 L1774.16 1216.29 L1774.75 1216.29 L1775.34 1216.29 L1775.92 1216.29 L1776.51 1216.29 L1777.1 1216.29 L1777.68 1216.29 L1778.27 1216.29 L1778.86 1216.29 L1779.44 1216.29 L1780.03 1216.29 L1780.61 1216.29 L1781.2 1216.29 L1781.79 1216.29 L1782.37 1216.29 L1782.96 1216.29 L1783.55 1216.29 L1784.13 1216.29 L1784.72 1216.29 L1785.31 1216.29 L1785.89 1216.29 L1786.48 1216.29 L1787.06 1216.29 L1787.65 1216.29 L1788.24 1216.29 L1788.82 1216.29 L1789.41 1216.29 L1790 1216.29 L1790.58 1216.29 L1791.17 1216.29 L1791.76 1216.29 L1792.34 1216.29 L1792.93 1216.29 L1793.52 1216.29 L1794.1 1216.29 L1794.69 1216.29 L1795.27 1216.29 L1795.86 1216.29 L1796.45 1216.29 L1797.03 1216.29 L1797.62 1216.29 L1798.21 1216.29 L1798.79 1216.29 L1799.38 1216.29 L1799.97 1216.29 L1800.55 1216.29 L1801.14 1216.29 L1801.73 1216.29 L1802.31 1216.29 L1802.9 1216.29 L1803.48 1216.29 L1804.07 1216.29 L1804.66 1216.29 L1805.24 1216.29 L1805.83 1216.29 L1806.42 1216.29 L1807 1216.29 L1807.59 1216.29 L1808.18 1216.29 L1808.76 1216.29 L1809.35 1216.29 L1809.94 1216.29 L1810.52 1216.29 L1811.11 1216.29 L1811.69 1216.29 L1812.28 1216.29 L1812.87 1216.29 L1813.45 1216.29 L1814.04 1216.29 L1814.63 1216.29 L1815.21 1216.29 L1815.8 1216.29 L1816.39 1216.29 L1816.97 1216.29 L1817.56 1216.29 L1818.14 1216.29 L1818.73 1216.29 L1819.32 1216.29 L1819.9 1216.29 L1820.49 1216.29 L1821.08 1216.29 L1821.66 1216.29 L1822.25 1216.29 L1822.84 1216.29 L1823.42 1216.29 L1824.01 1216.29 L1824.6 1216.29 L1825.18 1216.29 L1825.77 1216.29 L1826.35 1216.29 L1826.94 1216.29 L1827.53 1216.29 L1828.11 1216.29 L1828.7 1216.29 L1829.29 1216.29 L1829.87 1216.29 L1830.46 1216.29 L1831.05 1216.29 L1831.63 1216.29 L1832.22 1216.29 L1832.81 1216.29 L1833.39 1216.29 L1833.98 1216.29 L1834.56 1216.29 L1835.15 1216.29 L1835.74 1216.29 L1836.32 1216.29 L1836.91 1216.29 L1837.5 1216.29 L1838.08 1216.29 L1838.67 1216.29 L1839.26 1216.29 L1839.84 1216.29 L1840.43 1216.29 L1841.01 1216.29 L1841.6 1216.29 L1842.19 1216.29 L1842.77 1216.29 L1843.36 1216.29 L1843.95 1216.29 L1844.53 1216.29 L1845.12 1216.29 L1845.71 1216.29 L1846.29 1216.29 L1846.88 1216.29 L1847.47 1216.29 L1848.05 1216.29 L1848.64 1216.29 L1849.22 1216.29 L1849.81 1216.29 L1850.4 1216.29 L1850.98 1216.29 L1851.57 1216.29 L1852.16 1216.29 L1852.74 1216.29 L1853.33 1216.29 L1853.92 1216.29 L1854.5 1216.29 L1855.09 1216.29 L1855.68 1216.29 L1856.26 1216.29 L1856.85 1216.29 L1857.43 1216.29 L1858.02 1216.29 L1858.61 1216.29 L1859.19 1216.29 L1859.78 1216.29 L1860.37 1216.29 L1860.95 1216.29 L1861.54 1216.29 L1862.13 1216.29 L1862.71 1216.29 L1863.3 1216.29 L1863.88 1216.29 L1864.47 1216.29 L1865.06 1216.29 L1865.64 1216.29 L1866.23 1216.29 L1866.82 1216.29 L1867.4 1216.29 L1867.99 1216.29 L1868.58 1216.29 L1869.16 1216.29 L1869.75 1216.29 L1870.34 1216.29 L1870.92 1216.29 L1871.51 1216.29 L1872.09 1216.29 L1872.68 1216.29 L1873.27 1216.29 L1873.85 1216.29 L1874.44 1216.29 L1875.03 1216.29 L1875.61 1216.29 L1876.2 1216.29 L1876.79 1216.29 L1877.37 1216.29 L1877.96 1216.29 L1878.55 1216.29 L1879.13 1216.29 L1879.72 1216.29 L1880.3 1216.29 L1880.89 1216.29 L1881.48 1216.29 L1882.06 1216.29 L1882.65 1216.29 L1883.24 1216.29 L1883.82 1216.29 L1884.41 1216.29 L1885 1216.29 L1885.58 1216.29 L1886.17 1216.29 L1886.76 1216.29 L1887.34 1216.29 L1887.93 1216.29 L1888.51 1216.29 L1889.1 1216.29 L1889.69 1216.29 L1890.27 1216.29 L1890.86 1216.29 L1891.45 1216.29 L1892.03 1216.29 L1892.62 1216.29 L1893.21 1216.29 L1893.79 1216.29 L1894.38 1216.29 L1894.96 1216.29 L1895.55 1216.29 L1896.14 1216.29 L1896.72 1216.29 L1897.31 1216.29 L1897.9 1216.29 L1898.48 1216.29 L1899.07 1216.29 L1899.66 1216.29 L1900.24 1216.29 L1900.83 1216.29 L1901.42 1216.29 L1902 1216.29 L1902.59 1216.29 L1903.17 1216.29 L1903.76 1216.29 L1904.35 1216.29 L1904.93 1216.29 L1905.52 1216.29 L1906.11 1216.29 L1906.69 1216.29 L1907.28 1216.29 L1907.87 1216.29 L1908.45 1216.29 L1909.04 1216.29 L1909.63 1216.29 L1910.21 1216.29 L1910.8 1216.29 L1911.38 1216.29 L1911.97 1216.29 L1912.56 1216.29 L1913.14 1216.29 L1913.73 1216.29 L1914.32 1216.29 L1914.9 1216.29 L1915.49 1216.29 L1916.08 1216.29 L1916.66 1216.29 L1917.25 1216.29 L1917.83 1216.29 L1918.42 1216.29 L1919.01 1216.29 L1919.59 1216.29 L1920.18 1216.29 L1920.77 1216.29 L1921.35 1216.29 L1921.94 1216.29 L1922.53 1216.29 L1923.11 1216.29 L1923.7 1216.29 L1924.29 1216.29 L1924.87 1216.29 L1925.46 1216.29 L1926.04 1216.29 L1926.63 1216.29 L1927.22 1216.29 L1927.8 1216.29 L1928.39 1216.29 L1928.98 1216.29 L1929.56 1216.29 L1930.15 1216.29 L1930.74 1216.29 L1931.32 1216.29 L1931.91 1216.29 L1932.5 1216.29 L1933.08 1216.29 L1933.67 1216.29 L1934.25 1216.29 L1934.84 1216.29 L1935.43 1216.29 L1936.01 1216.29 L1936.6 1216.29 L1937.19 1216.29 L1937.77 1216.29 L1938.36 1216.29 L1938.95 1216.29 L1939.53 1216.29 L1940.12 1216.29 L1940.71 1216.29 L1941.29 1216.29 L1941.88 1216.29 L1942.46 1216.29 L1943.05 1216.29 L1943.64 1216.29 L1944.22 1216.29 L1944.81 1216.29 L1945.4 1216.29 L1945.98 1216.29 L1946.57 1216.29 L1947.16 1216.29 L1947.74 1216.29 L1948.33 1216.29 L1948.91 1216.29 L1949.5 1216.29 L1950.09 1216.29 L1950.67 1216.29 L1951.26 1216.29 L1951.85 1216.29 L1952.43 1216.29 L1953.02 1216.29 L1953.61 1216.29 L1954.19 1216.29 L1954.78 1216.29 L1955.37 1216.29 L1955.95 1216.29 L1956.54 1216.29 L1957.12 1216.29 L1957.71 1216.29 L1958.3 1216.29 L1958.88 1216.29 L1959.47 1216.29 L1960.06 1216.29 L1960.64 1216.29 L1961.23 1216.29 L1961.82 1216.29 L1962.4 1216.29 L1962.99 1216.29 L1963.58 1216.29 L1964.16 1216.29 L1964.75 1216.29 L1965.33 1216.29 L1965.92 1216.29 L1966.51 1216.29 L1967.09 1216.29 L1967.68 1216.29 L1968.27 1216.29 L1968.85 1216.29 L1969.44 1216.29 L1970.03 1216.29 L1970.61 1216.29 L1971.2 1216.29 L1971.78 1216.29 L1972.37 1216.29 L1972.96 1216.29 L1973.54 1216.29 L1974.13 1216.29 L1974.72 1216.29 L1975.3 1216.29 L1975.89 1216.29 L1976.48 1216.29 L1977.06 1216.29 L1977.65 1216.29 L1978.24 1216.29 L1978.82 1216.29 L1979.41 1216.29 L1979.99 1216.29 L1980.58 1216.29 L1981.17 1216.29 L1981.75 1216.29 L1982.34 1216.29 L1982.93 1216.29 L1983.51 1216.29 L1984.1 1216.29 L1984.69 1216.29 L1985.27 1216.29 L1985.86 1216.29 L1986.45 1216.29 L1987.03 1216.29 L1987.62 1216.29 L1988.2 1216.29 L1988.79 1216.29 L1989.38 1216.29 L1989.96 1216.29 L1990.55 1216.29 L1991.14 1216.29 L1991.72 1216.29 L1992.31 1216.29 L1992.9 1216.29 L1993.48 1216.29 L1994.07 1216.29 L1994.65 1216.29 L1995.24 1216.29 L1995.83 1216.29 L1996.41 1216.29 L1997 1216.29 L1997.59 1216.29 L1998.17 1216.29 L1998.76 1216.29 L1999.35 1216.29 L1999.93 1216.29 L2000.52 1216.29 L2001.11 1216.29 L2001.69 1216.29 L2002.28 1216.29 L2002.86 1216.29 L2003.45 1216.29 L2004.04 1216.29 L2004.62 1216.29 L2005.21 1216.29 L2005.8 1216.29 L2006.38 1216.29 L2006.97 1216.29 L2007.56 1216.29 L2008.14 1216.29 L2008.73 1216.29 L2009.32 1216.29 L2009.9 1216.29 L2010.49 1216.29 L2011.07 1216.29 L2011.66 1216.29 L2012.25 1216.29 L2012.83 1216.29 L2013.42 1216.29 L2014.01 1216.29 L2014.59 1216.29 L2015.18 1216.29 L2015.77 1216.29 L2016.35 1216.29 L2016.94 1216.29 L2017.53 1216.29 L2018.11 1216.29 L2018.7 1216.29 L2019.28 1216.29 L2019.87 1216.29 L2020.46 1216.29 L2021.04 1216.29 L2021.63 1216.29 L2022.22 1216.29 L2022.8 1216.29 L2023.39 1216.29 L2023.98 1216.29 L2024.56 1216.29 L2025.15 1216.29 L2025.73 1216.29 L2026.32 1216.29 L2026.91 1216.29 L2027.49 1216.29 L2028.08 1216.29 L2028.67 1216.29 L2029.25 1216.29 L2029.84 1216.29 L2030.43 1216.29 L2031.01 1216.29 L2031.6 1216.29 L2032.19 1216.29 L2032.77 1216.29 L2033.36 1216.29 L2033.94 1216.29 L2034.53 1216.29 L2035.12 1216.29 L2035.7 1216.29 L2036.29 1216.29 L2036.88 1216.29 L2037.46 1216.29 L2038.05 1216.29 L2038.64 1216.29 L2039.22 1216.29 L2039.81 1216.29 L2040.4 1216.29 L2040.98 1216.29 L2041.57 1216.29 L2042.15 1216.29 L2042.74 1216.29 L2043.33 1216.29 L2043.91 1216.29 L2044.5 1216.29 L2045.09 1216.29 L2045.67 1216.29 L2046.26 1216.29 L2046.85 1216.29 L2047.43 1216.29 L2048.02 1216.29 L2048.6 1216.29 L2049.19 1216.29 L2049.78 1216.29 L2050.36 1216.29 L2050.95 1216.29 L2051.54 1216.29 L2052.12 1216.29 L2052.71 1216.29 L2053.3 1216.29 L2053.88 1216.29 L2054.47 1216.29 L2055.06 1216.29 L2055.64 1216.29 L2056.23 1216.29 L2056.81 1216.29 L2057.4 1216.29 L2057.99 1216.29 L2058.57 1216.29 L2059.16 1216.29 L2059.75 1216.29 L2060.33 1216.29 L2060.92 1216.29 L2061.51 1216.29 L2062.09 1216.29 L2062.68 1216.29 L2063.27 1216.29 L2063.85 1216.29 L2064.44 1216.29 L2065.02 1216.29 L2065.61 1216.29 L2066.2 1216.29 L2066.78 1216.29 L2067.37 1216.29 L2067.96 1216.29 L2068.54 1216.29 L2069.13 1216.29 L2069.72 1216.29 L2070.3 1216.29 L2070.89 1216.29 L2071.48 1216.29 L2072.06 1216.29 L2072.65 1216.29 L2073.23 1216.29 L2073.82 1216.29 L2074.41 1216.29 L2074.99 1216.29 L2075.58 1216.29 L2076.17 1216.29 L2076.75 1216.29 L2077.34 1216.29 L2077.93 1216.29 L2078.51 1216.29 L2079.1 1216.29 L2079.68 1216.29 L2080.27 1216.29 L2080.86 1216.29 L2081.44 1216.29 L2082.03 1216.29 L2082.62 1216.29 L2083.2 1216.29 L2083.79 1216.29 L2084.38 1216.29 L2084.96 1216.29 L2085.55 1216.29 L2086.14 1216.29 L2086.72 1216.29 L2087.31 1216.29 L2087.89 1216.29 L2088.48 1216.29 L2089.07 1216.29 L2089.65 1216.29 L2090.24 1216.29 L2090.83 1216.29 L2091.41 1216.29 L2092 1216.29 L2092.59 1216.29 L2093.17 1216.29 L2093.76 1216.29 L2094.35 1216.29 L2094.93 1216.29 L2095.52 1216.29 L2096.1 1216.29 L2096.69 1216.29 L2097.28 1216.29 L2097.86 1216.29 L2098.45 1216.29 L2099.04 1216.29 L2099.62 1216.29 L2100.21 1216.29 L2100.8 1216.29 L2101.38 1216.29 L2101.97 1216.29 L2102.55 1216.29 L2103.14 1216.29 L2103.73 1216.29 L2104.31 1216.29 L2104.9 1216.29 L2105.49 1216.29 L2106.07 1216.29 L2106.66 1216.29 L2107.25 1216.29 L2107.83 1216.29 L2108.42 1216.29 L2109.01 1216.29 L2109.59 1216.29 L2110.18 1216.29 L2110.76 1216.29 L2111.35 1216.29 L2111.94 1216.29 L2112.52 1216.29 L2113.11 1216.29 L2113.7 1216.29 L2114.28 1216.29 L2114.87 1216.29 L2115.46 1216.29 L2116.04 1216.29 L2116.63 1216.29 L2117.22 1216.29 L2117.8 1216.29 L2118.39 1216.29 L2118.97 1216.29 L2119.56 1216.29 L2120.15 1216.29 L2120.73 1216.29 L2121.32 1216.29 L2121.91 1216.29 L2122.49 1216.29 L2123.08 1216.29 L2123.67 1216.29 L2124.25 1216.29 L2124.84 1216.29 L2125.42 1216.29 L2126.01 1216.29 L2126.6 1216.29 L2127.18 1216.29 L2127.77 1216.29 L2128.36 1216.29 L2128.94 1216.29 L2129.53 1216.29 L2130.12 1216.29 L2130.7 1216.29 L2131.29 1216.29 L2131.88 1216.29 L2132.46 1216.29 L2133.05 1216.29 L2133.63 1216.29 L2134.22 1216.29 L2134.81 1216.29 L2135.39 1216.29 L2135.98 1216.29 L2136.57 1216.29 L2137.15 1216.29 L2137.74 1216.29 L2138.33 1216.29 L2138.91 1216.29 L2139.5 1216.29 L2140.09 1216.29 L2140.67 1216.29 L2141.26 1216.29 L2141.84 1216.29 L2142.43 1216.29 L2143.02 1216.29 L2143.6 1216.29 L2144.19 1216.29 L2144.78 1216.29 L2145.36 1216.29 L2145.95 1216.29 L2146.54 1216.29 L2147.12 1216.29 L2147.71 1216.29 L2148.3 1216.29 L2148.88 1216.29 L2149.47 1216.29 L2150.05 1216.29 L2150.64 1216.29 L2151.23 1216.29 L2151.81 1216.29 L2152.4 1216.29 L2152.99 1216.29 L2153.57 1216.29 L2154.16 1216.29 L2154.75 1216.29 L2155.33 1216.29 L2155.92 1216.29 L2156.5 1216.29 L2157.09 1216.29 L2157.68 1216.29 L2158.26 1216.29 L2158.26 1216.21 L2157.68 1216.21 L2157.09 1216.21 L2156.5 1216.21 L2155.92 1216.21 L2155.33 1216.21 L2154.75 1216.21 L2154.16 1216.21 L2153.57 1216.21 L2152.99 1216.21 L2152.4 1216.21 L2151.81 1216.21 L2151.23 1216.21 L2150.64 1216.21 L2150.05 1216.21 L2149.47 1216.21 L2148.88 1216.21 L2148.3 1216.21 L2147.71 1216.21 L2147.12 1216.21 L2146.54 1216.21 L2145.95 1216.21 L2145.36 1216.21 L2144.78 1216.21 L2144.19 1216.21 L2143.6 1216.21 L2143.02 1216.21 L2142.43 1216.21 L2141.84 1216.21 L2141.26 1216.21 L2140.67 1216.21 L2140.09 1216.21 L2139.5 1216.21 L2138.91 1216.21 L2138.33 1216.21 L2137.74 1216.21 L2137.15 1216.21 L2136.57 1216.21 L2135.98 1216.21 L2135.39 1216.21 L2134.81 1216.21 L2134.22 1216.21 L2133.63 1216.21 L2133.05 1216.21 L2132.46 1216.21 L2131.88 1216.21 L2131.29 1216.21 L2130.7 1216.21 L2130.12 1216.21 L2129.53 1216.21 L2128.94 1216.21 L2128.36 1216.21 L2127.77 1216.21 L2127.18 1216.21 L2126.6 1216.21 L2126.01 1216.21 L2125.42 1216.21 L2124.84 1216.21 L2124.25 1216.21 L2123.67 1216.21 L2123.08 1216.21 L2122.49 1216.21 L2121.91 1216.21 L2121.32 1216.21 L2120.73 1216.21 L2120.15 1216.21 L2119.56 1216.21 L2118.97 1216.21 L2118.39 1216.21 L2117.8 1216.21 L2117.22 1216.21 L2116.63 1216.21 L2116.04 1216.21 L2115.46 1216.21 L2114.87 1216.21 L2114.28 1216.21 L2113.7 1216.21 L2113.11 1216.21 L2112.52 1216.21 L2111.94 1216.21 L2111.35 1216.21 L2110.76 1216.21 L2110.18 1216.21 L2109.59 1216.21 L2109.01 1216.21 L2108.42 1216.21 L2107.83 1216.21 L2107.25 1216.21 L2106.66 1216.21 L2106.07 1216.21 L2105.49 1216.21 L2104.9 1216.21 L2104.31 1216.21 L2103.73 1216.21 L2103.14 1216.21 L2102.55 1216.21 L2101.97 1216.21 L2101.38 1216.21 L2100.8 1216.21 L2100.21 1216.21 L2099.62 1216.21 L2099.04 1216.21 L2098.45 1216.21 L2097.86 1216.21 L2097.28 1216.21 L2096.69 1216.21 L2096.1 1216.21 L2095.52 1216.21 L2094.93 1216.21 L2094.35 1216.21 L2093.76 1216.21 L2093.17 1216.21 L2092.59 1216.21 L2092 1216.21 L2091.41 1216.21 L2090.83 1216.21 L2090.24 1216.21 L2089.65 1216.21 L2089.07 1216.21 L2088.48 1216.21 L2087.89 1216.21 L2087.31 1216.21 L2086.72 1216.21 L2086.14 1216.21 L2085.55 1216.21 L2084.96 1216.21 L2084.38 1216.21 L2083.79 1216.21 L2083.2 1216.21 L2082.62 1216.21 L2082.03 1216.21 L2081.44 1216.21 L2080.86 1216.21 L2080.27 1216.21 L2079.68 1216.21 L2079.1 1216.21 L2078.51 1216.21 L2077.93 1216.21 L2077.34 1216.21 L2076.75 1216.21 L2076.17 1216.21 L2075.58 1216.21 L2074.99 1216.21 L2074.41 1216.21 L2073.82 1216.21 L2073.23 1216.21 L2072.65 1216.21 L2072.06 1216.21 L2071.48 1216.21 L2070.89 1216.21 L2070.3 1216.21 L2069.72 1216.21 L2069.13 1216.21 L2068.54 1216.21 L2067.96 1216.21 L2067.37 1216.21 L2066.78 1216.21 L2066.2 1216.21 L2065.61 1216.21 L2065.02 1216.21 L2064.44 1216.21 L2063.85 1216.21 L2063.27 1216.21 L2062.68 1216.21 L2062.09 1216.21 L2061.51 1216.21 L2060.92 1216.21 L2060.33 1216.21 L2059.75 1216.21 L2059.16 1216.21 L2058.57 1216.21 L2057.99 1216.21 L2057.4 1216.21 L2056.81 1216.21 L2056.23 1216.21 L2055.64 1216.21 L2055.06 1216.21 L2054.47 1216.21 L2053.88 1216.21 L2053.3 1216.21 L2052.71 1216.21 L2052.12 1216.21 L2051.54 1216.21 L2050.95 1216.21 L2050.36 1216.21 L2049.78 1216.21 L2049.19 1216.21 L2048.6 1216.21 L2048.02 1216.21 L2047.43 1216.21 L2046.85 1216.21 L2046.26 1216.21 L2045.67 1216.21 L2045.09 1216.21 L2044.5 1216.21 L2043.91 1216.21 L2043.33 1216.21 L2042.74 1216.21 L2042.15 1216.21 L2041.57 1216.21 L2040.98 1216.21 L2040.4 1216.21 L2039.81 1216.21 L2039.22 1216.21 L2038.64 1216.21 L2038.05 1216.21 L2037.46 1216.21 L2036.88 1216.21 L2036.29 1216.21 L2035.7 1216.21 L2035.12 1216.21 L2034.53 1216.21 L2033.94 1216.21 L2033.36 1216.21 L2032.77 1216.21 L2032.19 1216.21 L2031.6 1216.21 L2031.01 1216.21 L2030.43 1216.21 L2029.84 1216.21 L2029.25 1216.21 L2028.67 1216.21 L2028.08 1216.21 L2027.49 1216.21 L2026.91 1216.21 L2026.32 1216.21 L2025.73 1216.21 L2025.15 1216.21 L2024.56 1216.21 L2023.98 1216.21 L2023.39 1216.21 L2022.8 1216.21 L2022.22 1216.21 L2021.63 1216.21 L2021.04 1216.21 L2020.46 1216.21 L2019.87 1216.21 L2019.28 1216.21 L2018.7 1216.21 L2018.11 1216.21 L2017.53 1216.21 L2016.94 1216.21 L2016.35 1216.21 L2015.77 1216.21 L2015.18 1216.21 L2014.59 1216.21 L2014.01 1216.21 L2013.42 1216.21 L2012.83 1216.21 L2012.25 1216.21 L2011.66 1216.21 L2011.07 1216.21 L2010.49 1216.21 L2009.9 1216.21 L2009.32 1216.21 L2008.73 1216.21 L2008.14 1216.21 L2007.56 1216.21 L2006.97 1216.21 L2006.38 1216.21 L2005.8 1216.21 L2005.21 1216.21 L2004.62 1216.21 L2004.04 1216.21 L2003.45 1216.21 L2002.86 1216.21 L2002.28 1216.21 L2001.69 1216.21 L2001.11 1216.21 L2000.52 1216.21 L1999.93 1216.21 L1999.35 1216.21 L1998.76 1216.21 L1998.17 1216.21 L1997.59 1216.21 L1997 1216.21 L1996.41 1216.21 L1995.83 1216.21 L1995.24 1216.21 L1994.65 1216.21 L1994.07 1216.21 L1993.48 1216.21 L1992.9 1216.21 L1992.31 1216.21 L1991.72 1216.21 L1991.14 1216.21 L1990.55 1216.21 L1989.96 1216.21 L1989.38 1216.21 L1988.79 1216.21 L1988.2 1216.21 L1987.62 1216.21 L1987.03 1216.21 L1986.45 1216.21 L1985.86 1216.21 L1985.27 1216.21 L1984.69 1216.21 L1984.1 1216.21 L1983.51 1216.21 L1982.93 1216.21 L1982.34 1216.21 L1981.75 1216.21 L1981.17 1216.21 L1980.58 1216.21 L1979.99 1216.21 L1979.41 1216.21 L1978.82 1216.21 L1978.24 1216.21 L1977.65 1216.21 L1977.06 1216.21 L1976.48 1216.21 L1975.89 1216.21 L1975.3 1216.21 L1974.72 1216.21 L1974.13 1216.21 L1973.54 1216.21 L1972.96 1216.21 L1972.37 1216.21 L1971.78 1216.21 L1971.2 1216.21 L1970.61 1216.21 L1970.03 1216.21 L1969.44 1216.21 L1968.85 1216.21 L1968.27 1216.21 L1967.68 1216.21 L1967.09 1216.21 L1966.51 1216.21 L1965.92 1216.21 L1965.33 1216.21 L1964.75 1216.21 L1964.16 1216.21 L1963.58 1216.21 L1962.99 1216.21 L1962.4 1216.21 L1961.82 1216.21 L1961.23 1216.21 L1960.64 1216.21 L1960.06 1216.21 L1959.47 1216.21 L1958.88 1216.21 L1958.3 1216.21 L1957.71 1216.21 L1957.12 1216.21 L1956.54 1216.21 L1955.95 1216.21 L1955.37 1216.21 L1954.78 1216.21 L1954.19 1216.21 L1953.61 1216.21 L1953.02 1216.21 L1952.43 1216.21 L1951.85 1216.21 L1951.26 1216.21 L1950.67 1216.21 L1950.09 1216.21 L1949.5 1216.21 L1948.91 1216.21 L1948.33 1216.21 L1947.74 1216.21 L1947.16 1216.21 L1946.57 1216.21 L1945.98 1216.21 L1945.4 1216.21 L1944.81 1216.21 L1944.22 1216.21 L1943.64 1216.21 L1943.05 1216.21 L1942.46 1216.21 L1941.88 1216.21 L1941.29 1216.21 L1940.71 1216.21 L1940.12 1216.21 L1939.53 1216.21 L1938.95 1216.21 L1938.36 1216.21 L1937.77 1216.21 L1937.19 1216.21 L1936.6 1216.21 L1936.01 1216.21 L1935.43 1216.21 L1934.84 1216.21 L1934.25 1216.21 L1933.67 1216.21 L1933.08 1216.21 L1932.5 1216.21 L1931.91 1216.21 L1931.32 1216.21 L1930.74 1216.21 L1930.15 1216.21 L1929.56 1216.21 L1928.98 1216.21 L1928.39 1216.21 L1927.8 1216.21 L1927.22 1216.21 L1926.63 1216.21 L1926.04 1216.21 L1925.46 1216.21 L1924.87 1216.21 L1924.29 1216.21 L1923.7 1216.21 L1923.11 1216.21 L1922.53 1216.21 L1921.94 1216.21 L1921.35 1216.21 L1920.77 1216.21 L1920.18 1216.21 L1919.59 1216.21 L1919.01 1216.21 L1918.42 1216.21 L1917.83 1216.21 L1917.25 1216.21 L1916.66 1216.21 L1916.08 1216.21 L1915.49 1216.21 L1914.9 1216.21 L1914.32 1216.21 L1913.73 1216.21 L1913.14 1216.21 L1912.56 1216.21 L1911.97 1216.21 L1911.38 1216.21 L1910.8 1216.21 L1910.21 1216.21 L1909.63 1216.21 L1909.04 1216.21 L1908.45 1216.21 L1907.87 1216.21 L1907.28 1216.21 L1906.69 1216.21 L1906.11 1216.21 L1905.52 1216.21 L1904.93 1216.21 L1904.35 1216.21 L1903.76 1216.21 L1903.17 1216.21 L1902.59 1216.21 L1902 1216.21 L1901.42 1216.21 L1900.83 1216.21 L1900.24 1216.21 L1899.66 1216.21 L1899.07 1216.21 L1898.48 1216.21 L1897.9 1216.21 L1897.31 1216.21 L1896.72 1216.21 L1896.14 1216.21 L1895.55 1216.21 L1894.96 1216.21 L1894.38 1216.21 L1893.79 1216.21 L1893.21 1216.21 L1892.62 1216.21 L1892.03 1216.21 L1891.45 1216.21 L1890.86 1216.21 L1890.27 1216.21 L1889.69 1216.21 L1889.1 1216.21 L1888.51 1216.21 L1887.93 1216.21 L1887.34 1216.21 L1886.76 1216.21 L1886.17 1216.21 L1885.58 1216.21 L1885 1216.21 L1884.41 1216.21 L1883.82 1216.21 L1883.24 1216.21 L1882.65 1216.21 L1882.06 1216.21 L1881.48 1216.21 L1880.89 1216.21 L1880.3 1216.21 L1879.72 1216.21 L1879.13 1216.21 L1878.55 1216.21 L1877.96 1216.21 L1877.37 1216.21 L1876.79 1216.21 L1876.2 1216.21 L1875.61 1216.21 L1875.03 1216.21 L1874.44 1216.21 L1873.85 1216.21 L1873.27 1216.21 L1872.68 1216.21 L1872.09 1216.21 L1871.51 1216.21 L1870.92 1216.21 L1870.34 1216.21 L1869.75 1216.21 L1869.16 1216.21 L1868.58 1216.21 L1867.99 1216.21 L1867.4 1216.21 L1866.82 1216.21 L1866.23 1216.21 L1865.64 1216.21 L1865.06 1216.21 L1864.47 1216.21 L1863.88 1216.21 L1863.3 1216.21 L1862.71 1216.21 L1862.13 1216.21 L1861.54 1216.21 L1860.95 1216.21 L1860.37 1216.21 L1859.78 1216.21 L1859.19 1216.21 L1858.61 1216.21 L1858.02 1216.21 L1857.43 1216.21 L1856.85 1216.21 L1856.26 1216.21 L1855.68 1216.21 L1855.09 1216.21 L1854.5 1216.21 L1853.92 1216.21 L1853.33 1216.21 L1852.74 1216.21 L1852.16 1216.21 L1851.57 1216.21 L1850.98 1216.21 L1850.4 1216.21 L1849.81 1216.21 L1849.22 1216.21 L1848.64 1216.21 L1848.05 1216.21 L1847.47 1216.21 L1846.88 1216.21 L1846.29 1216.21 L1845.71 1216.21 L1845.12 1216.21 L1844.53 1216.21 L1843.95 1216.21 L1843.36 1216.21 L1842.77 1216.21 L1842.19 1216.21 L1841.6 1216.21 L1841.01 1216.21 L1840.43 1216.21 L1839.84 1216.21 L1839.26 1216.21 L1838.67 1216.21 L1838.08 1216.21 L1837.5 1216.21 L1836.91 1216.21 L1836.32 1216.21 L1835.74 1216.21 L1835.15 1216.21 L1834.56 1216.21 L1833.98 1216.21 L1833.39 1216.21 L1832.81 1216.21 L1832.22 1216.21 L1831.63 1216.21 L1831.05 1216.21 L1830.46 1216.21 L1829.87 1216.21 L1829.29 1216.21 L1828.7 1216.21 L1828.11 1216.21 L1827.53 1216.21 L1826.94 1216.21 L1826.35 1216.21 L1825.77 1216.21 L1825.18 1216.21 L1824.6 1216.21 L1824.01 1216.21 L1823.42 1216.21 L1822.84 1216.21 L1822.25 1216.21 L1821.66 1216.21 L1821.08 1216.21 L1820.49 1216.21 L1819.9 1216.21 L1819.32 1216.21 L1818.73 1216.21 L1818.14 1216.21 L1817.56 1216.21 L1816.97 1216.21 L1816.39 1216.21 L1815.8 1216.21 L1815.21 1216.21 L1814.63 1216.21 L1814.04 1216.21 L1813.45 1216.21 L1812.87 1216.21 L1812.28 1216.21 L1811.69 1216.21 L1811.11 1216.21 L1810.52 1216.21 L1809.94 1216.21 L1809.35 1216.21 L1808.76 1216.21 L1808.18 1216.21 L1807.59 1216.21 L1807 1216.21 L1806.42 1216.21 L1805.83 1216.21 L1805.24 1216.21 L1804.66 1216.21 L1804.07 1216.21 L1803.48 1216.21 L1802.9 1216.21 L1802.31 1216.21 L1801.73 1216.21 L1801.14 1216.21 L1800.55 1216.21 L1799.97 1216.21 L1799.38 1216.21 L1798.79 1216.21 L1798.21 1216.21 L1797.62 1216.21 L1797.03 1216.21 L1796.45 1216.21 L1795.86 1216.21 L1795.27 1216.21 L1794.69 1216.21 L1794.1 1216.21 L1793.52 1216.21 L1792.93 1216.21 L1792.34 1216.21 L1791.76 1216.21 L1791.17 1216.21 L1790.58 1216.21 L1790 1216.21 L1789.41 1216.21 L1788.82 1216.21 L1788.24 1216.21 L1787.65 1216.21 L1787.06 1216.21 L1786.48 1216.21 L1785.89 1216.21 L1785.31 1216.21 L1784.72 1216.21 L1784.13 1216.21 L1783.55 1216.21 L1782.96 1216.21 L1782.37 1216.21 L1781.79 1216.21 L1781.2 1216.21 L1780.61 1216.21 L1780.03 1216.21 L1779.44 1216.21 L1778.86 1216.21 L1778.27 1216.21 L1777.68 1216.21 L1777.1 1216.21 L1776.51 1216.21 L1775.92 1216.21 L1775.34 1216.21 L1774.75 1216.21 L1774.16 1216.21 L1773.58 1216.21 L1772.99 1216.21 L1772.4 1216.21 L1771.82 1216.21 L1771.23 1216.21 L1770.65 1216.21 L1770.06 1216.21 L1769.47 1216.21 L1768.89 1216.21 L1768.3 1216.21 L1767.71 1216.21 L1767.13 1216.21 L1766.54 1216.21 L1765.95 1216.21 L1765.37 1216.21 L1764.78 1216.21 L1764.19 1216.21 L1763.61 1216.21 L1763.02 1216.21 L1762.44 1216.21 L1761.85 1216.21 L1761.26 1216.21 L1760.68 1216.21 L1760.09 1216.21 L1759.5 1216.21 L1758.92 1216.21 L1758.33 1216.21 L1757.74 1216.21 L1757.16 1216.21 L1756.57 1216.21 L1755.99 1216.21 L1755.4 1216.21 L1754.81 1216.21 L1754.23 1216.21 L1753.64 1216.21 L1753.05 1216.21 L1752.47 1216.21 L1751.88 1216.21 L1751.29 1216.21 L1750.71 1216.21 L1750.12 1216.21 L1749.53 1216.21 L1748.95 1216.21 L1748.36 1216.21 L1747.78 1216.21 L1747.19 1216.21 L1746.6 1216.21 L1746.02 1216.21 L1745.43 1216.21 L1744.84 1216.21 L1744.26 1216.21 L1743.67 1216.21 L1743.08 1216.21 L1742.5 1216.21 L1741.91 1216.21 L1741.32 1216.21 L1740.74 1216.21 L1740.15 1216.21 L1739.57 1216.21 L1738.98 1216.21 L1738.39 1216.21 L1737.81 1216.21 L1737.22 1216.21 L1736.63 1216.21 L1736.05 1216.21 L1735.46 1216.21 L1734.87 1216.21 L1734.29 1216.21 L1733.7 1216.21 L1733.11 1216.21 L1732.53 1216.21 L1731.94 1216.21 L1731.36 1216.21 L1730.77 1216.21 L1730.18 1216.21 L1729.6 1216.21 L1729.01 1216.21 L1728.42 1216.21 L1727.84 1216.21 L1727.25 1216.21 L1726.66 1216.21 L1726.08 1216.21 L1725.49 1216.21 L1724.91 1216.21 L1724.32 1216.21 L1723.73 1216.21 L1723.15 1216.21 L1722.56 1216.21 L1721.97 1216.21 L1721.39 1216.21 L1720.8 1216.21 L1720.21 1216.21 L1719.63 1216.21 L1719.04 1216.21 L1718.45 1216.21 L1717.87 1216.21 L1717.28 1216.21 L1716.7 1216.21 L1716.11 1216.21 L1715.52 1216.21 L1714.94 1216.21 L1714.35 1216.21 L1713.76 1216.21 L1713.18 1216.21 L1712.59 1216.21 L1712 1216.21 L1711.42 1216.21 L1710.83 1216.21 L1710.24 1216.21 L1709.66 1216.21 L1709.07 1216.21 L1708.49 1216.21 L1707.9 1216.21 L1707.31 1216.21 L1706.73 1216.21 L1706.14 1216.21 L1705.55 1216.21 L1704.97 1216.21 L1704.38 1216.21 L1703.79 1216.21 L1703.21 1216.21 L1702.62 1216.21 L1702.04 1216.21 L1701.45 1216.21 L1700.86 1216.21 L1700.28 1216.21 L1699.69 1216.21 L1699.1 1216.21 L1698.52 1216.21 L1697.93 1216.21 L1697.34 1216.21 L1696.76 1216.21 L1696.17 1216.21 L1695.58 1216.21 L1695 1216.21 L1694.41 1216.21 L1693.83 1216.21 L1693.24 1216.21 L1692.65 1216.21 L1692.07 1216.21 L1691.48 1216.21 L1690.89 1216.21 L1690.31 1216.21 L1689.72 1216.21 L1689.13 1216.21 L1688.55 1216.21 L1687.96 1216.21 L1687.37 1216.21 L1686.79 1216.21 L1686.2 1216.21 L1685.62 1216.21 L1685.03 1216.21 L1684.44 1216.21 L1683.86 1216.21 L1683.27 1216.21 L1682.68 1216.21 L1682.1 1216.21 L1681.51 1216.21 L1680.92 1216.21 L1680.34 1216.21 L1679.75 1216.21 L1679.17 1216.21 L1678.58 1216.21 L1677.99 1216.21 L1677.41 1216.21 L1676.82 1216.21 L1676.23 1216.21 L1675.65 1216.21 L1675.06 1216.21 L1674.47 1216.21 L1673.89 1216.21 L1673.3 1216.21 L1672.71 1216.21 L1672.13 1216.21 L1671.54 1216.21 L1670.96 1216.21 L1670.37 1216.21 L1669.78 1216.21 L1669.2 1216.21 L1668.61 1216.21 L1668.02 1216.21 L1667.44 1216.21 L1666.85 1216.21 L1666.26 1216.21 L1665.68 1216.21 L1665.09 1216.21 L1664.5 1216.21 L1663.92 1216.21 L1663.33 1216.21 L1662.75 1216.21 L1662.16 1216.21 L1661.57 1216.21 L1660.99 1216.21 L1660.4 1216.21 L1659.81 1216.21 L1659.23 1216.21 L1658.64 1216.21 L1658.05 1216.21 L1657.47 1216.21 L1656.88 1216.21 L1656.29 1216.21 L1655.71 1216.21 L1655.12 1216.21 L1654.54 1216.21 L1653.95 1216.21 L1653.36 1216.21 L1652.78 1216.21 L1652.19 1216.21 L1651.6 1216.21 L1651.02 1216.21 L1650.43 1216.21 L1649.84 1216.21 L1649.26 1216.21 L1648.67 1216.21 L1648.09 1216.21 L1647.5 1216.21 L1646.91 1216.21 L1646.33 1216.21 L1645.74 1216.21 L1645.15 1216.21 L1644.57 1216.21 L1643.98 1216.21 L1643.39 1216.21 L1642.81 1216.21 L1642.22 1216.21 L1641.63 1216.21 L1641.05 1216.21 L1640.46 1216.21 L1639.88 1216.21 L1639.29 1216.21 L1638.7 1216.21 L1638.12 1216.21 L1637.53 1216.21 L1636.94 1216.21 L1636.36 1216.21 L1635.77 1216.21 L1635.18 1216.21 L1634.6 1216.21 L1634.01 1216.21 L1633.42 1216.21 L1632.84 1216.21 L1632.25 1216.21 L1631.67 1216.21 L1631.08 1216.21 L1630.49 1216.21 L1629.91 1216.21 L1629.32 1216.21 L1628.73 1216.21 L1628.15 1216.21 L1627.56 1216.21 L1626.97 1216.21 L1626.39 1216.21 L1625.8 1216.21 L1625.22 1216.21 L1624.63 1216.21 L1624.04 1216.21 L1623.46 1216.21 L1622.87 1216.21 L1622.28 1216.21 L1621.7 1216.21 L1621.11 1216.21 L1620.52 1216.21 L1619.94 1216.21 L1619.35 1216.21 L1618.76 1216.21 L1618.18 1216.21 L1617.59 1216.21 L1617.01 1216.21 L1616.42 1216.21 L1615.83 1216.21 L1615.25 1216.21 L1614.66 1216.21 L1614.07 1216.21 L1613.49 1216.21 L1612.9 1216.21 L1612.31 1216.21 L1611.73 1216.21 L1611.14 1216.21 L1610.55 1216.21 L1609.97 1216.21 L1609.38 1216.21 L1608.8 1216.21 L1608.21 1216.21 L1607.62 1216.21 L1607.04 1216.21 L1606.45 1216.21 L1605.86 1216.21 L1605.28 1216.21 L1604.69 1216.21 L1604.1 1216.21 L1603.52 1216.21 L1602.93 1216.21 L1602.34 1216.21 L1601.76 1216.21 L1601.17 1216.21 L1600.59 1216.21 L1600 1216.21 L1599.41 1216.21 L1598.83 1216.21 L1598.24 1216.21 L1597.65 1216.21 L1597.07 1216.21 L1596.48 1216.21 L1595.89 1216.21 L1595.31 1216.21 L1594.72 1216.21 L1594.14 1216.21 L1593.55 1216.21 L1592.96 1216.21 L1592.38 1216.21 L1591.79 1216.21 L1591.2 1216.21 L1590.62 1216.21 L1590.03 1216.21 L1589.44 1216.21 L1588.86 1216.21 L1588.27 1216.21 L1587.68 1216.21 L1587.1 1216.21 L1586.51 1216.21 L1585.93 1216.21 L1585.34 1216.21 L1584.75 1216.21 L1584.17 1216.21 L1583.58 1216.21 L1582.99 1216.21 L1582.41 1216.21 L1581.82 1216.21 L1581.23 1216.21 L1580.65 1216.21 L1580.06 1216.21 L1579.47 1216.21 L1578.89 1216.21 L1578.3 1216.21 L1577.72 1216.21 L1577.13 1216.21 L1576.54 1216.21 L1575.96 1216.21 L1575.37 1216.21 L1574.78 1216.21 L1574.2 1216.21 L1573.61 1216.21 L1573.02 1216.21 L1572.44 1216.21 L1571.85 1216.21 L1571.27 1216.21 L1570.68 1216.21 L1570.09 1216.21 L1569.51 1216.21 L1568.92 1216.21 L1568.33 1216.21 L1567.75 1216.21 L1567.16 1216.21 L1566.57 1216.21 L1565.99 1216.21 L1565.4 1216.21 L1564.81 1216.21 L1564.23 1216.21 L1563.64 1216.21 L1563.06 1216.21 L1562.47 1216.21 L1561.88 1216.21 L1561.3 1216.21 L1560.71 1216.21 L1560.12 1216.21 L1559.54 1216.21 L1558.95 1216.21 L1558.36 1216.21 L1557.78 1216.21 L1557.19 1216.21 L1556.6 1216.21 L1556.02 1216.21 L1555.43 1216.21 L1554.85 1216.21 L1554.26 1216.21 L1553.67 1216.21 L1553.09 1216.21 L1552.5 1216.21 L1551.91 1216.21 L1551.33 1216.21 L1550.74 1216.21 L1550.15 1216.21 L1549.57 1216.21 L1548.98 1216.21 L1548.4 1216.21 L1547.81 1216.21 L1547.22 1216.21 L1546.64 1216.21 L1546.05 1216.21 L1545.46 1216.21 L1544.88 1216.21 L1544.29 1216.21 L1543.7 1216.21 L1543.12 1216.21 L1542.53 1216.21 L1541.94 1216.21 L1541.36 1216.21 L1540.77 1216.21 L1540.19 1216.21 L1539.6 1216.21 L1539.01 1216.21 L1538.43 1216.21 L1537.84 1216.21 L1537.25 1216.21 L1536.67 1216.21 L1536.08 1216.21 L1535.49 1216.21 L1534.91 1216.21 L1534.32 1216.21 L1533.73 1216.21 L1533.15 1216.21 L1532.56 1216.21 L1531.98 1216.21 L1531.39 1216.21 L1530.8 1216.21 L1530.22 1216.21 L1529.63 1216.21 L1529.04 1216.21 L1528.46 1216.21 L1527.87 1216.21 L1527.28 1216.21 L1526.7 1216.21 L1526.11 1216.21 L1525.52 1216.21 L1524.94 1216.21 L1524.35 1216.21 L1523.77 1216.21 L1523.18 1216.21 L1522.59 1216.21 L1522.01 1216.21 L1521.42 1216.21 L1520.83 1216.21 L1520.25 1216.21 L1519.66 1216.21 L1519.07 1216.21 L1518.49 1216.21 L1517.9 1216.21 L1517.32 1216.21 L1516.73 1216.21 L1516.14 1216.21 L1515.56 1216.21 L1514.97 1216.21 L1514.38 1216.21 L1513.8 1216.21 L1513.21 1216.21 L1512.62 1216.21 L1512.04 1216.21 L1511.45 1216.21 L1510.86 1216.21 L1510.28 1216.21 L1509.69 1216.21 L1509.11 1216.21 L1508.52 1216.21 L1507.93 1216.21 L1507.35 1216.21 L1506.76 1216.21 L1506.17 1216.21 L1505.59 1216.21 L1505 1216.21 L1504.41 1216.21 L1503.83 1216.21 L1503.24 1216.21 L1502.65 1216.21 L1502.07 1216.21 L1501.48 1216.21 L1500.9 1216.21 L1500.31 1216.21 L1499.72 1216.21 L1499.14 1216.21 L1498.55 1216.21 L1497.96 1216.21 L1497.38 1216.21 L1496.79 1216.21 L1496.2 1216.21 L1495.62 1216.21 L1495.03 1216.21 L1494.45 1216.21 L1493.86 1216.21 L1493.27 1216.21 L1492.69 1216.21 L1492.1 1216.21 L1491.51 1216.21 L1490.93 1216.21 L1490.34 1216.21 L1489.75 1216.21 L1489.17 1216.21 L1488.58 1216.21 L1487.99 1216.21 L1487.41 1216.21 L1486.82 1216.21 L1486.24 1216.21 L1485.65 1216.21 L1485.06 1216.21 L1484.48 1216.21 L1483.89 1216.21 L1483.3 1216.21 L1482.72 1216.21 L1482.13 1216.21 L1481.54 1216.21 L1480.96 1216.21 L1480.37 1216.21 L1479.78 1216.21 L1479.2 1216.21 L1478.61 1216.21 L1478.03 1216.21 L1477.44 1216.21 L1476.85 1216.21 L1476.27 1216.21 L1475.68 1216.21 L1475.09 1216.21 L1474.51 1216.21 L1473.92 1216.21 L1473.33 1216.21 L1472.75 1216.21 L1472.16 1216.21 L1471.57 1216.21 L1470.99 1216.21 L1470.4 1216.21 L1469.82 1216.21 L1469.23 1216.21 L1468.64 1216.21 L1468.06 1216.21 L1467.47 1216.21 L1466.88 1216.21 L1466.3 1216.21 L1465.71 1216.21 L1465.12 1216.21 L1464.54 1216.21 L1463.95 1216.21 L1463.37 1216.21 L1462.78 1216.21 L1462.19 1216.21 L1461.61 1216.21 L1461.02 1216.21 L1460.43 1216.21 L1459.85 1216.21 L1459.26 1216.21 L1458.67 1216.21 L1458.09 1216.21 L1457.5 1216.21 L1456.91 1216.21 L1456.33 1216.21 L1455.74 1216.21 L1455.16 1216.21 L1454.57 1216.21 L1453.98 1216.21 L1453.4 1216.21 L1452.81 1216.21 L1452.22 1216.21 L1451.64 1216.21 L1451.05 1216.21 L1450.46 1216.21 L1449.88 1216.21 L1449.29 1216.21 L1448.7 1216.21 L1448.12 1216.21 L1447.53 1216.21 L1446.95 1216.21 L1446.36 1216.21 L1445.77 1216.21 L1445.19 1216.21 L1444.6 1216.21 L1444.01 1216.21 L1443.43 1216.21 L1442.84 1216.21 L1442.25 1216.21 L1441.67 1216.21 L1441.08 1216.21 L1440.5 1216.21 L1439.91 1216.21 L1439.32 1216.21 L1438.74 1216.21 L1438.15 1216.21 L1437.56 1216.21 L1436.98 1216.21 L1436.39 1216.21 L1435.8 1216.21 L1435.22 1216.21 L1434.63 1216.21 L1434.04 1216.21 L1433.46 1216.21 L1432.87 1216.21 L1432.29 1216.21 L1431.7 1216.21 L1431.11 1216.21 L1430.53 1216.21 L1429.94 1216.21 L1429.35 1216.21 L1428.77 1216.21 L1428.18 1216.21 L1427.59 1216.21 L1427.01 1216.21 L1426.42 1216.21 L1425.83 1216.21 L1425.25 1216.21 L1424.66 1216.21 L1424.08 1216.21 L1423.49 1216.21 L1422.9 1216.21 L1422.32 1216.21 L1421.73 1216.21 L1421.14 1216.21 L1420.56 1216.21 L1419.97 1216.21 L1419.38 1216.21 L1418.8 1216.21 L1418.21 1216.21 L1417.63 1216.21 L1417.04 1216.21 L1416.45 1216.21 L1415.87 1216.21 L1415.28 1216.21 L1414.69 1216.21 L1414.11 1216.21 L1413.52 1216.21 L1412.93 1216.21 L1412.35 1216.21 L1411.76 1216.21 L1411.17 1216.21 L1410.59 1216.21 L1410 1216.21 L1409.42 1216.21 L1408.83 1216.21 L1408.24 1216.21 L1407.66 1216.21 L1407.07 1216.21 L1406.48 1216.21 L1405.9 1216.21 L1405.31 1216.21 L1404.72 1216.21 L1404.14 1216.21 L1403.55 1216.21 L1402.96 1216.21 L1402.38 1216.21 L1401.79 1216.21 L1401.21 1216.21 L1400.62 1216.21 L1400.03 1216.21 L1399.45 1216.21 L1398.86 1216.21 L1398.27 1216.21 L1397.69 1216.21 L1397.1 1216.21 L1396.51 1216.21 L1395.93 1216.21 L1395.34 1216.21 L1394.75 1216.21 L1394.17 1216.21 L1393.58 1216.21 L1393 1216.21 L1392.41 1216.21 L1391.82 1216.21 L1391.24 1216.21 L1390.65 1216.21 L1390.06 1216.21 L1389.48 1216.21 L1388.89 1216.21 L1388.3 1216.21 L1387.72 1216.21 L1387.13 1216.21 L1386.55 1216.21 L1385.96 1216.21 L1385.37 1216.21 L1384.79 1216.21 L1384.2 1216.21 L1383.61 1216.21 L1383.03 1216.21 L1382.44 1216.21 L1381.85 1216.21 L1381.27 1216.21 L1380.68 1216.21 L1380.09 1216.21 L1379.51 1216.21 L1378.92 1216.21 L1378.34 1216.21 L1377.75 1216.21 L1377.16 1216.21 L1376.58 1216.21 L1375.99 1216.21 L1375.4 1216.21 L1374.82 1216.21 L1374.23 1216.21 L1373.64 1216.21 L1373.06 1216.21 L1372.47 1216.21 L1371.88 1216.21 L1371.3 1216.21 L1370.71 1216.21 L1370.13 1216.21 L1369.54 1216.21 L1368.95 1216.21 L1368.37 1216.21 L1367.78 1216.21 L1367.19 1216.21 L1366.61 1216.21 L1366.02 1216.21 L1365.43 1216.21 L1364.85 1216.21 L1364.26 1216.21 L1363.68 1216.21 L1363.09 1216.21 L1362.5 1216.21 L1361.92 1216.21 L1361.33 1216.21 L1360.74 1216.21 L1360.16 1216.21 L1359.57 1216.21 L1358.98 1216.21 L1358.4 1216.21 L1357.81 1216.21 L1357.22 1216.21 L1356.64 1216.21 L1356.05 1216.21 L1355.47 1216.21 L1354.88 1216.21 L1354.29 1216.21 L1353.71 1216.21 L1353.12 1216.21 L1352.53 1216.21 L1351.95 1216.21 L1351.36 1216.21 L1350.77 1216.21 L1350.19 1216.21 L1349.6 1216.21 L1349.01 1216.21 L1348.43 1216.21 L1347.84 1216.21 L1347.26 1216.21 L1346.67 1216.21 L1346.08 1216.21 L1345.5 1216.21 L1344.91 1216.21 L1344.32 1216.21 L1343.74 1216.21 L1343.15 1216.21 L1342.56 1216.21 L1341.98 1216.21 L1341.39 1216.21 L1340.8 1216.21 L1340.22 1216.21 L1339.63 1216.21 L1339.05 1216.21 L1338.46 1216.21 L1337.87 1216.21 L1337.29 1216.21 L1336.7 1216.21 L1336.11 1216.21 L1335.53 1216.21 L1334.94 1216.21 L1334.35 1216.21 L1333.77 1216.21 L1333.18 1216.21 L1332.6 1216.21 L1332.01 1216.21 L1331.42 1216.21 L1330.84 1216.21 L1330.25 1216.21 L1329.66 1216.21 L1329.08 1216.21 L1328.49 1216.21 L1327.9 1216.21 L1327.32 1216.21 L1326.73 1216.21 L1326.14 1216.21 L1325.56 1216.21 L1324.97 1216.21 L1324.39 1216.21 L1323.8 1216.21 L1323.21 1216.21 L1322.63 1216.21 L1322.04 1216.21 L1321.45 1216.21 L1320.87 1216.21 L1320.28 1216.21 L1319.69 1216.21 L1319.11 1216.21 L1318.52 1216.21 L1317.93 1216.21 L1317.35 1216.21 L1316.76 1216.21 L1316.18 1216.21 L1315.59 1216.21 L1315 1216.21 L1314.42 1216.21 L1313.83 1216.21 L1313.24 1216.21 L1312.66 1216.21 L1312.07 1216.21 L1311.48 1216.21 L1310.9 1216.21 L1310.31 1216.21 L1309.73 1216.21 L1309.14 1216.21 L1308.55 1216.21 L1307.97 1216.21 L1307.38 1216.21 L1306.79 1216.21 L1306.21 1216.21 L1305.62 1216.21 L1305.03 1216.21 L1304.45 1216.21 L1303.86 1216.21 L1303.27 1216.21 L1302.69 1216.21 L1302.1 1216.21 L1301.52 1216.21 L1300.93 1216.21 L1300.34 1216.21 L1299.76 1216.21 L1299.17 1216.21 L1298.58 1216.21 L1298 1216.21 L1297.41 1216.21 L1296.82 1216.21 L1296.24 1216.21 L1295.65 1216.21 L1295.06 1216.21 L1294.48 1216.21 L1293.89 1216.21 L1293.31 1216.21 L1292.72 1216.21 L1292.13 1216.21 L1291.55 1216.21 L1290.96 1216.21 L1290.37 1216.21 L1289.79 1216.21 L1289.2 1216.21 L1288.61 1216.21 L1288.03 1216.21 L1287.44 1216.21 L1286.86 1216.21 L1286.27 1216.21 L1285.68 1216.21 L1285.1 1216.21 L1284.51 1216.21 L1283.92 1216.21 L1283.34 1216.21 L1282.75 1216.21 L1282.16 1216.21 L1281.58 1216.21 L1280.99 1216.21 L1280.4 1216.21 L1279.82 1216.21 L1279.23 1216.21 L1278.65 1216.21 L1278.06 1216.21 L1277.47 1216.21 L1276.89 1216.21 L1276.3 1216.21 L1275.71 1216.21 L1275.13 1216.21 L1274.54 1216.21 L1273.95 1216.21 L1273.37 1216.21 L1272.78 1216.21 L1272.19 1216.21 L1271.61 1216.21 L1271.02 1216.21 L1270.44 1216.21 L1269.85 1216.21 L1269.26 1216.21 L1268.68 1216.21 L1268.09 1216.21 L1267.5 1216.21 L1266.92 1216.21 L1266.33 1216.21 L1265.74 1216.21 L1265.16 1216.21 L1264.57 1216.21 L1263.98 1216.21 L1263.4 1216.21 L1262.81 1216.21 L1262.23 1216.21 L1261.64 1216.21 L1261.05 1216.21 L1260.47 1216.21 L1259.88 1216.21 L1259.29 1216.21 L1258.71 1216.21 L1258.12 1216.21 L1257.53 1216.21 L1256.95 1216.21 L1256.36 1216.21 L1255.78 1216.21 L1255.19 1216.21 L1254.6 1216.21 L1254.02 1216.21 L1253.43 1216.21 L1252.84 1216.21 L1252.26 1216.21 L1251.67 1216.21 L1251.08 1216.21 L1250.5 1216.21 L1249.91 1216.21 L1249.32 1216.21 L1248.74 1216.21 L1248.15 1216.21 L1247.57 1216.21 L1246.98 1216.21 L1246.39 1216.21 L1245.81 1216.21 L1245.22 1216.21 L1244.63 1216.21 L1244.05 1216.21 L1243.46 1216.21 L1242.87 1216.21 L1242.29 1216.21 L1241.7 1216.21 L1241.11 1216.21 L1240.53 1216.21 L1239.94 1216.21 L1239.36 1216.21 L1238.77 1216.21 L1238.18 1216.21 L1237.6 1216.21 L1237.01 1216.21 L1236.42 1216.21 L1235.84 1216.21 L1235.25 1216.21 L1234.66 1216.21 L1234.08 1216.21 L1233.49 1216.21 L1232.91 1216.21 L1232.32 1216.21 L1231.73 1216.21 L1231.15 1216.21 L1230.56 1216.21 L1229.97 1216.21 L1229.39 1216.21 L1228.8 1216.21 L1228.21 1216.21 L1227.63 1216.21 L1227.04 1216.21 L1226.45 1216.21 L1225.87 1216.21 L1225.28 1216.21 L1224.7 1216.21 L1224.11 1216.21 L1223.52 1216.21 L1222.94 1216.21 L1222.35 1216.21 L1221.76 1216.21 L1221.18 1216.21 L1220.59 1216.21 L1220 1216.21 L1219.42 1216.21 L1218.83 1216.21 L1218.24 1216.21 L1217.66 1216.21 L1217.07 1216.21 L1216.49 1216.21 L1215.9 1216.21 L1215.31 1216.21 L1214.73 1216.21 L1214.14 1216.21 L1213.55 1216.21 L1212.97 1216.21 L1212.38 1216.21 L1211.79 1216.21 L1211.21 1216.21 L1210.62 1216.21 L1210.03 1216.21 L1209.45 1216.21 L1208.86 1216.21 L1208.28 1216.21 L1207.69 1216.21 L1207.1 1216.21 L1206.52 1216.21 L1205.93 1216.21 L1205.34 1216.21 L1204.76 1216.21 L1204.17 1216.21 L1203.58 1216.21 L1203 1216.21 L1202.41 1216.21 L1201.83 1216.21 L1201.24 1216.21 L1200.65 1216.21 L1200.07 1216.21 L1199.48 1216.21 L1198.89 1216.21 L1198.31 1216.21 L1197.72 1216.21 L1197.13 1216.21 L1196.55 1216.21 L1195.96 1216.21 L1195.37 1216.21 L1194.79 1216.21 L1194.2 1216.21 L1193.62 1216.21 L1193.03 1216.21 L1192.44 1216.21 L1191.86 1216.21 L1191.27 1216.21 L1190.68 1216.21 L1190.1 1216.21 L1189.51 1216.21 L1188.92 1216.21 L1188.34 1216.21 L1187.75 1216.21 L1187.16 1216.21 L1186.58 1216.21 L1185.99 1216.21 L1185.41 1216.21 L1184.82 1216.21 L1184.23 1216.21 L1183.65 1216.21 L1183.06 1216.21 L1182.47 1216.21 L1181.89 1216.21 L1181.3 1216.21 L1180.71 1216.21 L1180.13 1216.21 L1179.54 1216.21 L1178.96 1216.21 L1178.37 1216.21 L1177.78 1216.21 L1177.2 1216.21 L1176.61 1216.21 L1176.02 1216.21 L1175.44 1216.21 L1174.85 1216.21 L1174.26 1216.21 L1173.68 1216.21 L1173.09 1216.21 L1172.5 1216.21 L1171.92 1216.21 L1171.33 1216.21 L1170.75 1216.21 L1170.16 1216.21 L1169.57 1216.21 L1168.99 1216.21 L1168.4 1216.21 L1167.81 1216.21 L1167.23 1216.21 L1166.64 1216.21 L1166.05 1216.21 L1165.47 1216.21 L1164.88 1216.21 L1164.29 1216.21 L1163.71 1216.21 L1163.12 1216.21 L1162.54 1216.21 L1161.95 1216.21 L1161.36 1216.21 L1160.78 1216.21 L1160.19 1216.21 L1159.6 1216.21 L1159.02 1216.21 L1158.43 1216.21 L1157.84 1216.21 L1157.26 1216.21 L1156.67 1216.21 L1156.09 1216.21 L1155.5 1216.21 L1154.91 1216.21 L1154.33 1216.21 L1153.74 1216.21 L1153.15 1216.21 L1152.57 1216.21 L1151.98 1216.21 L1151.39 1216.21 L1150.81 1216.21 L1150.22 1216.21 L1149.63 1216.21 L1149.05 1216.21 L1148.46 1216.21 L1147.88 1216.21 L1147.29 1216.21 L1146.7 1216.21 L1146.12 1216.21 L1145.53 1216.21 L1144.94 1216.21 L1144.36 1216.21 L1143.77 1216.21 L1143.18 1216.21 L1142.6 1216.21 L1142.01 1216.21 L1141.42 1216.21 L1140.84 1216.21 L1140.25 1216.21 L1139.67 1216.21 L1139.08 1216.21 L1138.49 1216.21 L1137.91 1216.21 L1137.32 1216.21 L1136.73 1216.21 L1136.15 1216.21 L1135.56 1216.21 L1134.97 1216.21 L1134.39 1216.21 L1133.8 1216.21 L1133.21 1216.21 L1132.63 1216.21 L1132.04 1216.21 L1131.46 1216.21 L1130.87 1216.21 L1130.28 1216.21 L1129.7 1216.21 L1129.11 1216.21 L1128.52 1216.21 L1127.94 1216.21 L1127.35 1216.21 L1126.76 1216.21 L1126.18 1216.21 L1125.59 1216.21 L1125.01 1216.21 L1124.42 1216.21 L1123.83 1216.21 L1123.25 1216.21 L1122.66 1216.21 L1122.07 1216.21 L1121.49 1216.21 L1120.9 1216.21 L1120.31 1216.21 L1119.73 1216.21 L1119.14 1216.21 L1118.55 1216.21 L1117.97 1216.21 L1117.38 1216.21 L1116.8 1216.21 L1116.21 1216.21 L1115.62 1216.21 L1115.04 1216.21 L1114.45 1216.21 L1113.86 1216.21 L1113.28 1216.21 L1112.69 1216.21 L1112.1 1216.21 L1111.52 1216.21 L1110.93 1216.21 L1110.34 1216.21 L1109.76 1216.21 L1109.17 1216.21 L1108.59 1216.21 L1108 1216.21 L1107.41 1216.21 L1106.83 1216.21 L1106.24 1216.21 L1105.65 1216.21 L1105.07 1216.21 L1104.48 1216.21 L1103.89 1216.21 L1103.31 1216.21 L1102.72 1216.21 L1102.14 1216.21 L1101.55 1216.21 L1100.96 1216.21 L1100.38 1216.21 L1099.79 1216.21 L1099.2 1216.21 L1098.62 1216.21 L1098.03 1216.21 L1097.44 1216.21 L1096.86 1216.21 L1096.27 1216.21 L1095.68 1216.21 L1095.1 1216.21 L1094.51 1216.21 L1093.93 1216.21 L1093.34 1216.21 L1092.75 1216.21 L1092.17 1216.21 L1091.58 1216.21 L1090.99 1216.21 L1090.41 1216.21 L1089.82 1216.21 L1089.23 1216.21 L1088.65 1216.21 L1088.06 1216.21 L1087.47 1216.21 L1086.89 1216.21 L1086.3 1216.21 L1085.72 1216.21 L1085.13 1216.21 L1084.54 1216.21 L1083.96 1216.21 L1083.37 1216.21 L1082.78 1216.21 L1082.2 1216.21 L1081.61 1216.21 L1081.02 1216.21 L1080.44 1216.21 L1079.85 1216.21 L1079.26 1216.21 L1078.68 1216.21 L1078.09 1216.21 L1077.51 1216.21 L1076.92 1216.21 L1076.33 1216.21 L1075.75 1216.21 L1075.16 1216.21 L1074.57 1216.21 L1073.99 1216.21 L1073.4 1216.21 L1072.81 1216.21 L1072.23 1216.21 L1071.64 1216.21 L1071.06 1216.21 L1070.47 1216.21 L1069.88 1216.21 L1069.3 1216.21 L1068.71 1216.21 L1068.12 1216.21 L1067.54 1216.21 L1066.95 1216.21 L1066.36 1216.21 L1065.78 1216.21 L1065.19 1216.21 L1064.6 1216.21 L1064.02 1216.21 L1063.43 1216.21 L1062.85 1216.21 L1062.26 1216.21 L1061.67 1216.21 L1061.09 1216.21 L1060.5 1216.21 L1059.91 1216.21 L1059.33 1216.21 L1058.74 1216.21 L1058.15 1216.21 L1057.57 1216.21 L1056.98 1216.21 L1056.39 1216.21 L1055.81 1216.21 L1055.22 1216.21 L1054.64 1216.21 L1054.05 1216.21 L1053.46 1216.21 L1052.88 1216.21 L1052.29 1216.21 L1051.7 1216.21 L1051.12 1216.21 L1050.53 1216.21 L1049.94 1216.21 L1049.36 1216.21 L1048.77 1216.21 L1048.19 1216.21 L1047.6 1216.21 L1047.01 1216.21 L1046.43 1216.21 L1045.84 1216.21 L1045.25 1216.21 L1044.67 1216.21 L1044.08 1216.21 L1043.49 1216.21 L1042.91 1216.21 L1042.32 1216.21 L1041.73 1216.21 L1041.15 1216.21 L1040.56 1216.21 L1039.98 1216.21 L1039.39 1216.21 L1038.8 1216.21 L1038.22 1216.21 L1037.63 1216.21 L1037.04 1216.21 L1036.46 1216.21 L1035.87 1216.21 L1035.28 1216.21 L1034.7 1216.21 L1034.11 1216.21 L1033.52 1216.21 L1032.94 1216.21 L1032.35 1216.21 L1031.77 1216.21 L1031.18 1216.21 L1030.59 1216.21 L1030.01 1216.21 L1029.42 1216.21 L1028.83 1216.21 L1028.25 1216.21 L1027.66 1216.21 L1027.07 1216.21 L1026.49 1216.21 L1025.9 1216.21 L1025.32 1216.21 L1024.73 1216.21 L1024.14 1216.21 L1023.56 1216.21 L1022.97 1216.21 L1022.38 1216.21 L1021.8 1216.21 L1021.21 1216.21 L1020.62 1216.21 L1020.04 1216.21 L1019.45 1216.21 L1018.86 1216.21 L1018.28 1216.21 L1017.69 1216.21 L1017.11 1216.21 L1016.52 1216.21 L1015.93 1216.21 L1015.35 1216.21 L1014.76 1216.21 L1014.17 1216.21 L1013.59 1216.21 L1013 1216.21 L1012.41 1216.21 L1011.83 1216.21 L1011.24 1216.21 L1010.65 1216.21 L1010.07 1216.21 L1009.48 1216.21 L1008.9 1216.21 L1008.31 1216.21 L1007.72 1216.21 L1007.14 1216.21 L1006.55 1216.21 L1005.96 1216.21 L1005.38 1216.21 L1004.79 1216.21 L1004.2 1216.21 L1003.62 1216.21 L1003.03 1216.21 L1002.44 1216.21 L1001.86 1216.21 L1001.27 1216.21 L1000.69 1216.21 L1000.1 1216.21 L999.513 1216.21 L998.926 1216.21 L998.34 1216.21 L997.754 1216.21 L997.167 1216.21 L996.581 1216.21 L995.994 1216.21 L995.408 1216.21 L994.822 1216.21 L994.235 1216.21 L993.649 1216.21 L993.062 1216.21 L992.476 1216.21 L991.889 1216.21 L991.303 1216.21 L990.717 1216.21 L990.13 1216.21 L989.544 1216.21 L988.957 1216.21 L988.371 1216.21 L987.785 1216.21 L987.198 1216.21 L986.612 1216.21 L986.025 1216.21  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1216.25 986.612,1216.25 987.198,1216.25 987.785,1216.25 988.371,1216.25 988.957,1216.25 989.544,1216.25 990.13,1216.25 990.717,1216.25 991.303,1216.25 991.889,1216.25 992.476,1216.25 993.062,1216.25 993.649,1216.25 994.235,1216.25 994.822,1216.25 995.408,1216.25 995.994,1216.25 996.581,1216.25 997.167,1216.25 997.754,1216.25 998.34,1216.25 998.926,1216.25 999.513,1216.25 1000.1,1216.25 1000.69,1216.25 1001.27,1216.25 1001.86,1216.25 1002.44,1216.25 1003.03,1216.25 1003.62,1216.25 1004.2,1216.25 1004.79,1216.25 1005.38,1216.25 1005.96,1216.25 1006.55,1216.25 1007.14,1216.25 1007.72,1216.25 1008.31,1216.25 1008.9,1216.25 1009.48,1216.25 1010.07,1216.25 1010.65,1216.25 1011.24,1216.25 1011.83,1216.25 1012.41,1216.25 1013,1216.25 1013.59,1216.25 1014.17,1216.25 1014.76,1216.25 1015.35,1216.25 1015.93,1216.25 1016.52,1216.25 1017.11,1216.25 1017.69,1216.25 1018.28,1216.25 1018.86,1216.25 1019.45,1216.25 1020.04,1216.25 1020.62,1216.25 1021.21,1216.25 1021.8,1216.25 1022.38,1216.25 1022.97,1216.25 1023.56,1216.25 1024.14,1216.25 1024.73,1216.25 1025.32,1216.25 1025.9,1216.25 1026.49,1216.25 1027.07,1216.25 1027.66,1216.25 1028.25,1216.25 1028.83,1216.25 1029.42,1216.25 1030.01,1216.25 1030.59,1216.25 1031.18,1216.25 1031.77,1216.25 1032.35,1216.25 1032.94,1216.25 1033.52,1216.25 1034.11,1216.25 1034.7,1216.25 1035.28,1216.25 1035.87,1216.25 1036.46,1216.25 1037.04,1216.25 1037.63,1216.25 1038.22,1216.25 1038.8,1216.25 1039.39,1216.25 1039.98,1216.25 1040.56,1216.25 1041.15,1216.25 1041.73,1216.25 1042.32,1216.25 1042.91,1216.25 1043.49,1216.25 1044.08,1216.25 1044.67,1216.25 1045.25,1216.25 1045.84,1216.25 1046.43,1216.25 1047.01,1216.25 1047.6,1216.25 1048.19,1216.25 1048.77,1216.25 1049.36,1216.25 1049.94,1216.25 1050.53,1216.25 1051.12,1216.25 1051.7,1216.25 1052.29,1216.25 1052.88,1216.25 1053.46,1216.25 1054.05,1216.25 1054.64,1216.25 1055.22,1216.25 1055.81,1216.25 1056.39,1216.25 1056.98,1216.25 1057.57,1216.25 1058.15,1216.25 1058.74,1216.25 1059.33,1216.25 1059.91,1216.25 1060.5,1216.25 1061.09,1216.25 1061.67,1216.25 1062.26,1216.25 1062.85,1216.25 1063.43,1216.25 1064.02,1216.25 1064.6,1216.25 1065.19,1216.25 1065.78,1216.25 1066.36,1216.25 1066.95,1216.25 1067.54,1216.25 1068.12,1216.25 1068.71,1216.25 1069.3,1216.25 1069.88,1216.25 1070.47,1216.25 1071.06,1216.25 1071.64,1216.25 1072.23,1216.25 1072.81,1216.25 1073.4,1216.25 1073.99,1216.25 1074.57,1216.25 1075.16,1216.25 1075.75,1216.25 1076.33,1216.25 1076.92,1216.25 1077.51,1216.25 1078.09,1216.25 1078.68,1216.25 1079.26,1216.25 1079.85,1216.25 1080.44,1216.25 1081.02,1216.25 1081.61,1216.25 1082.2,1216.25 1082.78,1216.25 1083.37,1216.25 1083.96,1216.25 1084.54,1216.25 1085.13,1216.25 1085.72,1216.25 1086.3,1216.25 1086.89,1216.25 1087.47,1216.25 1088.06,1216.25 1088.65,1216.25 1089.23,1216.25 1089.82,1216.25 1090.41,1216.25 1090.99,1216.25 1091.58,1216.25 1092.17,1216.25 1092.75,1216.25 1093.34,1216.25 1093.93,1216.25 1094.51,1216.25 1095.1,1216.25 1095.68,1216.25 1096.27,1216.25 1096.86,1216.25 1097.44,1216.25 1098.03,1216.25 1098.62,1216.25 1099.2,1216.25 1099.79,1216.25 1100.38,1216.25 1100.96,1216.25 1101.55,1216.25 1102.14,1216.25 1102.72,1216.25 1103.31,1216.25 1103.89,1216.25 1104.48,1216.25 1105.07,1216.25 1105.65,1216.25 1106.24,1216.25 1106.83,1216.25 1107.41,1216.25 1108,1216.25 1108.59,1216.25 1109.17,1216.25 1109.76,1216.25 1110.34,1216.25 1110.93,1216.25 1111.52,1216.25 1112.1,1216.25 1112.69,1216.25 1113.28,1216.25 1113.86,1216.25 1114.45,1216.25 1115.04,1216.25 1115.62,1216.25 1116.21,1216.25 1116.8,1216.25 1117.38,1216.25 1117.97,1216.25 1118.55,1216.25 1119.14,1216.25 1119.73,1216.25 1120.31,1216.25 1120.9,1216.25 1121.49,1216.25 1122.07,1216.25 1122.66,1216.25 1123.25,1216.25 1123.83,1216.25 1124.42,1216.25 1125.01,1216.25 1125.59,1216.25 1126.18,1216.25 1126.76,1216.25 1127.35,1216.25 1127.94,1216.25 1128.52,1216.25 1129.11,1216.25 1129.7,1216.25 1130.28,1216.25 1130.87,1216.25 1131.46,1216.25 1132.04,1216.25 1132.63,1216.25 1133.21,1216.25 1133.8,1216.25 1134.39,1216.25 1134.97,1216.25 1135.56,1216.25 1136.15,1216.25 1136.73,1216.25 1137.32,1216.25 1137.91,1216.25 1138.49,1216.25 1139.08,1216.25 1139.67,1216.25 1140.25,1216.25 1140.84,1216.25 1141.42,1216.25 1142.01,1216.25 1142.6,1216.25 1143.18,1216.25 1143.77,1216.25 1144.36,1216.25 1144.94,1216.25 1145.53,1216.25 1146.12,1216.25 1146.7,1216.25 1147.29,1216.25 1147.88,1216.25 1148.46,1216.25 1149.05,1216.25 1149.63,1216.25 1150.22,1216.25 1150.81,1216.25 1151.39,1216.25 1151.98,1216.25 1152.57,1216.25 1153.15,1216.25 1153.74,1216.25 1154.33,1216.25 1154.91,1216.25 1155.5,1216.25 1156.09,1216.25 1156.67,1216.25 1157.26,1216.25 1157.84,1216.25 1158.43,1216.25 1159.02,1216.25 1159.6,1216.25 1160.19,1216.25 1160.78,1216.25 1161.36,1216.25 1161.95,1216.25 1162.54,1216.25 1163.12,1216.25 1163.71,1216.25 1164.29,1216.25 1164.88,1216.25 1165.47,1216.25 1166.05,1216.25 1166.64,1216.25 1167.23,1216.25 1167.81,1216.25 1168.4,1216.25 1168.99,1216.25 1169.57,1216.25 1170.16,1216.25 1170.75,1216.25 1171.33,1216.25 1171.92,1216.25 1172.5,1216.25 1173.09,1216.25 1173.68,1216.25 1174.26,1216.25 1174.85,1216.25 1175.44,1216.25 1176.02,1216.25 1176.61,1216.25 1177.2,1216.25 1177.78,1216.25 1178.37,1216.25 1178.96,1216.25 1179.54,1216.25 1180.13,1216.25 1180.71,1216.25 1181.3,1216.25 1181.89,1216.25 1182.47,1216.25 1183.06,1216.25 1183.65,1216.25 1184.23,1216.25 1184.82,1216.25 1185.41,1216.25 1185.99,1216.25 1186.58,1216.25 1187.16,1216.25 1187.75,1216.25 1188.34,1216.25 1188.92,1216.25 1189.51,1216.25 1190.1,1216.25 1190.68,1216.25 1191.27,1216.25 1191.86,1216.25 1192.44,1216.25 1193.03,1216.25 1193.62,1216.25 1194.2,1216.25 1194.79,1216.25 1195.37,1216.25 1195.96,1216.25 1196.55,1216.25 1197.13,1216.25 1197.72,1216.25 1198.31,1216.25 1198.89,1216.25 1199.48,1216.25 1200.07,1216.25 1200.65,1216.25 1201.24,1216.25 1201.83,1216.25 1202.41,1216.25 1203,1216.25 1203.58,1216.25 1204.17,1216.25 1204.76,1216.25 1205.34,1216.25 1205.93,1216.25 1206.52,1216.25 1207.1,1216.25 1207.69,1216.25 1208.28,1216.25 1208.86,1216.25 1209.45,1216.25 1210.03,1216.25 1210.62,1216.25 1211.21,1216.25 1211.79,1216.25 1212.38,1216.25 1212.97,1216.25 1213.55,1216.25 1214.14,1216.25 1214.73,1216.25 1215.31,1216.25 1215.9,1216.25 1216.49,1216.25 1217.07,1216.25 1217.66,1216.25 1218.24,1216.25 1218.83,1216.25 1219.42,1216.25 1220,1216.25 1220.59,1216.25 1221.18,1216.25 1221.76,1216.25 1222.35,1216.25 1222.94,1216.25 1223.52,1216.25 1224.11,1216.25 1224.7,1216.25 1225.28,1216.25 1225.87,1216.25 1226.45,1216.25 1227.04,1216.25 1227.63,1216.25 1228.21,1216.25 1228.8,1216.25 1229.39,1216.25 1229.97,1216.25 1230.56,1216.25 1231.15,1216.25 1231.73,1216.25 1232.32,1216.25 1232.91,1216.25 1233.49,1216.25 1234.08,1216.25 1234.66,1216.25 1235.25,1216.25 1235.84,1216.25 1236.42,1216.25 1237.01,1216.25 1237.6,1216.25 1238.18,1216.25 1238.77,1216.25 1239.36,1216.25 1239.94,1216.25 1240.53,1216.25 1241.11,1216.25 1241.7,1216.25 1242.29,1216.25 1242.87,1216.25 1243.46,1216.25 1244.05,1216.25 1244.63,1216.25 1245.22,1216.25 1245.81,1216.25 1246.39,1216.25 1246.98,1216.25 1247.57,1216.25 1248.15,1216.25 1248.74,1216.25 1249.32,1216.25 1249.91,1216.25 1250.5,1216.25 1251.08,1216.25 1251.67,1216.25 1252.26,1216.25 1252.84,1216.25 1253.43,1216.25 1254.02,1216.25 1254.6,1216.25 1255.19,1216.25 1255.78,1216.25 1256.36,1216.25 1256.95,1216.25 1257.53,1216.25 1258.12,1216.25 1258.71,1216.25 1259.29,1216.25 1259.88,1216.25 1260.47,1216.25 1261.05,1216.25 1261.64,1216.25 1262.23,1216.25 1262.81,1216.25 1263.4,1216.25 1263.98,1216.25 1264.57,1216.25 1265.16,1216.25 1265.74,1216.25 1266.33,1216.25 1266.92,1216.25 1267.5,1216.25 1268.09,1216.25 1268.68,1216.25 1269.26,1216.25 1269.85,1216.25 1270.44,1216.25 1271.02,1216.25 1271.61,1216.25 1272.19,1216.25 1272.78,1216.25 1273.37,1216.25 1273.95,1216.25 1274.54,1216.25 1275.13,1216.25 1275.71,1216.25 1276.3,1216.25 1276.89,1216.25 1277.47,1216.25 1278.06,1216.25 1278.65,1216.25 1279.23,1216.25 1279.82,1216.25 1280.4,1216.25 1280.99,1216.25 1281.58,1216.25 1282.16,1216.25 1282.75,1216.25 1283.34,1216.25 1283.92,1216.25 1284.51,1216.25 1285.1,1216.25 1285.68,1216.25 1286.27,1216.25 1286.86,1216.25 1287.44,1216.25 1288.03,1216.25 1288.61,1216.25 1289.2,1216.25 1289.79,1216.25 1290.37,1216.25 1290.96,1216.25 1291.55,1216.25 1292.13,1216.25 1292.72,1216.25 1293.31,1216.25 1293.89,1216.25 1294.48,1216.25 1295.06,1216.25 1295.65,1216.25 1296.24,1216.25 1296.82,1216.25 1297.41,1216.25 1298,1216.25 1298.58,1216.25 1299.17,1216.25 1299.76,1216.25 1300.34,1216.25 1300.93,1216.25 1301.52,1216.25 1302.1,1216.25 1302.69,1216.25 1303.27,1216.25 1303.86,1216.25 1304.45,1216.25 1305.03,1216.25 1305.62,1216.25 1306.21,1216.25 1306.79,1216.25 1307.38,1216.25 1307.97,1216.25 1308.55,1216.25 1309.14,1216.25 1309.73,1216.25 1310.31,1216.25 1310.9,1216.25 1311.48,1216.25 1312.07,1216.25 1312.66,1216.25 1313.24,1216.25 1313.83,1216.25 1314.42,1216.25 1315,1216.25 1315.59,1216.25 1316.18,1216.25 1316.76,1216.25 1317.35,1216.25 1317.93,1216.25 1318.52,1216.25 1319.11,1216.25 1319.69,1216.25 1320.28,1216.25 1320.87,1216.25 1321.45,1216.25 1322.04,1216.25 1322.63,1216.25 1323.21,1216.25 1323.8,1216.25 1324.39,1216.25 1324.97,1216.25 1325.56,1216.25 1326.14,1216.25 1326.73,1216.25 1327.32,1216.25 1327.9,1216.25 1328.49,1216.25 1329.08,1216.25 1329.66,1216.25 1330.25,1216.25 1330.84,1216.25 1331.42,1216.25 1332.01,1216.25 1332.6,1216.25 1333.18,1216.25 1333.77,1216.25 1334.35,1216.25 1334.94,1216.25 1335.53,1216.25 1336.11,1216.25 1336.7,1216.25 1337.29,1216.25 1337.87,1216.25 1338.46,1216.25 1339.05,1216.25 1339.63,1216.25 1340.22,1216.25 1340.8,1216.25 1341.39,1216.25 1341.98,1216.25 1342.56,1216.25 1343.15,1216.25 1343.74,1216.25 1344.32,1216.25 1344.91,1216.25 1345.5,1216.25 1346.08,1216.25 1346.67,1216.25 1347.26,1216.25 1347.84,1216.25 1348.43,1216.25 1349.01,1216.25 1349.6,1216.25 1350.19,1216.25 1350.77,1216.25 1351.36,1216.25 1351.95,1216.25 1352.53,1216.25 1353.12,1216.25 1353.71,1216.25 1354.29,1216.25 1354.88,1216.25 1355.47,1216.25 1356.05,1216.25 1356.64,1216.25 1357.22,1216.25 1357.81,1216.25 1358.4,1216.25 1358.98,1216.25 1359.57,1216.25 1360.16,1216.25 1360.74,1216.25 1361.33,1216.25 1361.92,1216.25 1362.5,1216.25 1363.09,1216.25 1363.68,1216.25 1364.26,1216.25 1364.85,1216.25 1365.43,1216.25 1366.02,1216.25 1366.61,1216.25 1367.19,1216.25 1367.78,1216.25 1368.37,1216.25 1368.95,1216.25 1369.54,1216.25 1370.13,1216.25 1370.71,1216.25 1371.3,1216.25 1371.88,1216.25 1372.47,1216.25 1373.06,1216.25 1373.64,1216.25 1374.23,1216.25 1374.82,1216.25 1375.4,1216.25 1375.99,1216.25 1376.58,1216.25 1377.16,1216.25 1377.75,1216.25 1378.34,1216.25 1378.92,1216.25 1379.51,1216.25 1380.09,1216.25 1380.68,1216.25 1381.27,1216.25 1381.85,1216.25 1382.44,1216.25 1383.03,1216.25 1383.61,1216.25 1384.2,1216.25 1384.79,1216.25 1385.37,1216.25 1385.96,1216.25 1386.55,1216.25 1387.13,1216.25 1387.72,1216.25 1388.3,1216.25 1388.89,1216.25 1389.48,1216.25 1390.06,1216.25 1390.65,1216.25 1391.24,1216.25 1391.82,1216.25 1392.41,1216.25 1393,1216.25 1393.58,1216.25 1394.17,1216.25 1394.75,1216.25 1395.34,1216.25 1395.93,1216.25 1396.51,1216.25 1397.1,1216.25 1397.69,1216.25 1398.27,1216.25 1398.86,1216.25 1399.45,1216.25 1400.03,1216.25 1400.62,1216.25 1401.21,1216.25 1401.79,1216.25 1402.38,1216.25 1402.96,1216.25 1403.55,1216.25 1404.14,1216.25 1404.72,1216.25 1405.31,1216.25 1405.9,1216.25 1406.48,1216.25 1407.07,1216.25 1407.66,1216.25 1408.24,1216.25 1408.83,1216.25 1409.42,1216.25 1410,1216.25 1410.59,1216.25 1411.17,1216.25 1411.76,1216.25 1412.35,1216.25 1412.93,1216.25 1413.52,1216.25 1414.11,1216.25 1414.69,1216.25 1415.28,1216.25 1415.87,1216.25 1416.45,1216.25 1417.04,1216.25 1417.63,1216.25 1418.21,1216.25 1418.8,1216.25 1419.38,1216.25 1419.97,1216.25 1420.56,1216.25 1421.14,1216.25 1421.73,1216.25 1422.32,1216.25 1422.9,1216.25 1423.49,1216.25 1424.08,1216.25 1424.66,1216.25 1425.25,1216.25 1425.83,1216.25 1426.42,1216.25 1427.01,1216.25 1427.59,1216.25 1428.18,1216.25 1428.77,1216.25 1429.35,1216.25 1429.94,1216.25 1430.53,1216.25 1431.11,1216.25 1431.7,1216.25 1432.29,1216.25 1432.87,1216.25 1433.46,1216.25 1434.04,1216.25 1434.63,1216.25 1435.22,1216.25 1435.8,1216.25 1436.39,1216.25 1436.98,1216.25 1437.56,1216.25 1438.15,1216.25 1438.74,1216.25 1439.32,1216.25 1439.91,1216.25 1440.5,1216.25 1441.08,1216.25 1441.67,1216.25 1442.25,1216.25 1442.84,1216.25 1443.43,1216.25 1444.01,1216.25 1444.6,1216.25 1445.19,1216.25 1445.77,1216.25 1446.36,1216.25 1446.95,1216.25 1447.53,1216.25 1448.12,1216.25 1448.7,1216.25 1449.29,1216.25 1449.88,1216.25 1450.46,1216.25 1451.05,1216.25 1451.64,1216.25 1452.22,1216.25 1452.81,1216.25 1453.4,1216.25 1453.98,1216.25 1454.57,1216.25 1455.16,1216.25 1455.74,1216.25 1456.33,1216.25 1456.91,1216.25 1457.5,1216.25 1458.09,1216.25 1458.67,1216.25 1459.26,1216.25 1459.85,1216.25 1460.43,1216.25 1461.02,1216.25 1461.61,1216.25 1462.19,1216.25 1462.78,1216.25 1463.37,1216.25 1463.95,1216.25 1464.54,1216.25 1465.12,1216.25 1465.71,1216.25 1466.3,1216.25 1466.88,1216.25 1467.47,1216.25 1468.06,1216.25 1468.64,1216.25 1469.23,1216.25 1469.82,1216.25 1470.4,1216.25 1470.99,1216.25 1471.57,1216.25 1472.16,1216.25 1472.75,1216.25 1473.33,1216.25 1473.92,1216.25 1474.51,1216.25 1475.09,1216.25 1475.68,1216.25 1476.27,1216.25 1476.85,1216.25 1477.44,1216.25 1478.03,1216.25 1478.61,1216.25 1479.2,1216.25 1479.78,1216.25 1480.37,1216.25 1480.96,1216.25 1481.54,1216.25 1482.13,1216.25 1482.72,1216.25 1483.3,1216.25 1483.89,1216.25 1484.48,1216.25 1485.06,1216.25 1485.65,1216.25 1486.24,1216.25 1486.82,1216.25 1487.41,1216.25 1487.99,1216.25 1488.58,1216.25 1489.17,1216.25 1489.75,1216.25 1490.34,1216.25 1490.93,1216.25 1491.51,1216.25 1492.1,1216.25 1492.69,1216.25 1493.27,1216.25 1493.86,1216.25 1494.45,1216.25 1495.03,1216.25 1495.62,1216.25 1496.2,1216.25 1496.79,1216.25 1497.38,1216.25 1497.96,1216.25 1498.55,1216.25 1499.14,1216.25 1499.72,1216.25 1500.31,1216.25 1500.9,1216.25 1501.48,1216.25 1502.07,1216.25 1502.65,1216.25 1503.24,1216.25 1503.83,1216.25 1504.41,1216.25 1505,1216.25 1505.59,1216.25 1506.17,1216.25 1506.76,1216.25 1507.35,1216.25 1507.93,1216.25 1508.52,1216.25 1509.11,1216.25 1509.69,1216.25 1510.28,1216.25 1510.86,1216.25 1511.45,1216.25 1512.04,1216.25 1512.62,1216.25 1513.21,1216.25 1513.8,1216.25 1514.38,1216.25 1514.97,1216.25 1515.56,1216.25 1516.14,1216.25 1516.73,1216.25 1517.32,1216.25 1517.9,1216.25 1518.49,1216.25 1519.07,1216.25 1519.66,1216.25 1520.25,1216.25 1520.83,1216.25 1521.42,1216.25 1522.01,1216.25 1522.59,1216.25 1523.18,1216.25 1523.77,1216.25 1524.35,1216.25 1524.94,1216.25 1525.52,1216.25 1526.11,1216.25 1526.7,1216.25 1527.28,1216.25 1527.87,1216.25 1528.46,1216.25 1529.04,1216.25 1529.63,1216.25 1530.22,1216.25 1530.8,1216.25 1531.39,1216.25 1531.98,1216.25 1532.56,1216.25 1533.15,1216.25 1533.73,1216.25 1534.32,1216.25 1534.91,1216.25 1535.49,1216.25 1536.08,1216.25 1536.67,1216.25 1537.25,1216.25 1537.84,1216.25 1538.43,1216.25 1539.01,1216.25 1539.6,1216.25 1540.19,1216.25 1540.77,1216.25 1541.36,1216.25 1541.94,1216.25 1542.53,1216.25 1543.12,1216.25 1543.7,1216.25 1544.29,1216.25 1544.88,1216.25 1545.46,1216.25 1546.05,1216.25 1546.64,1216.25 1547.22,1216.25 1547.81,1216.25 1548.4,1216.25 1548.98,1216.25 1549.57,1216.25 1550.15,1216.25 1550.74,1216.25 1551.33,1216.25 1551.91,1216.25 1552.5,1216.25 1553.09,1216.25 1553.67,1216.25 1554.26,1216.25 1554.85,1216.25 1555.43,1216.25 1556.02,1216.25 1556.6,1216.25 1557.19,1216.25 1557.78,1216.25 1558.36,1216.25 1558.95,1216.25 1559.54,1216.25 1560.12,1216.25 1560.71,1216.25 1561.3,1216.25 1561.88,1216.25 1562.47,1216.25 1563.06,1216.25 1563.64,1216.25 1564.23,1216.25 1564.81,1216.25 1565.4,1216.25 1565.99,1216.25 1566.57,1216.25 1567.16,1216.25 1567.75,1216.25 1568.33,1216.25 1568.92,1216.25 1569.51,1216.25 1570.09,1216.25 1570.68,1216.25 1571.27,1216.25 1571.85,1216.25 1572.44,1216.25 1573.02,1216.25 1573.61,1216.25 1574.2,1216.25 1574.78,1216.25 1575.37,1216.25 1575.96,1216.25 1576.54,1216.25 1577.13,1216.25 1577.72,1216.25 1578.3,1216.25 1578.89,1216.25 1579.47,1216.25 1580.06,1216.25 1580.65,1216.25 1581.23,1216.25 1581.82,1216.25 1582.41,1216.25 1582.99,1216.25 1583.58,1216.25 1584.17,1216.25 1584.75,1216.25 1585.34,1216.25 1585.93,1216.25 1586.51,1216.25 1587.1,1216.25 1587.68,1216.25 1588.27,1216.25 1588.86,1216.25 1589.44,1216.25 1590.03,1216.25 1590.62,1216.25 1591.2,1216.25 1591.79,1216.25 1592.38,1216.25 1592.96,1216.25 1593.55,1216.25 1594.14,1216.25 1594.72,1216.25 1595.31,1216.25 1595.89,1216.25 1596.48,1216.25 1597.07,1216.25 1597.65,1216.25 1598.24,1216.25 1598.83,1216.25 1599.41,1216.25 1600,1216.25 1600.59,1216.25 1601.17,1216.25 1601.76,1216.25 1602.34,1216.25 1602.93,1216.25 1603.52,1216.25 1604.1,1216.25 1604.69,1216.25 1605.28,1216.25 1605.86,1216.25 1606.45,1216.25 1607.04,1216.25 1607.62,1216.25 1608.21,1216.25 1608.8,1216.25 1609.38,1216.25 1609.97,1216.25 1610.55,1216.25 1611.14,1216.25 1611.73,1216.25 1612.31,1216.25 1612.9,1216.25 1613.49,1216.25 1614.07,1216.25 1614.66,1216.25 1615.25,1216.25 1615.83,1216.25 1616.42,1216.25 1617.01,1216.25 1617.59,1216.25 1618.18,1216.25 1618.76,1216.25 1619.35,1216.25 1619.94,1216.25 1620.52,1216.25 1621.11,1216.25 1621.7,1216.25 1622.28,1216.25 1622.87,1216.25 1623.46,1216.25 1624.04,1216.25 1624.63,1216.25 1625.22,1216.25 1625.8,1216.25 1626.39,1216.25 1626.97,1216.25 1627.56,1216.25 1628.15,1216.25 1628.73,1216.25 1629.32,1216.25 1629.91,1216.25 1630.49,1216.25 1631.08,1216.25 1631.67,1216.25 1632.25,1216.25 1632.84,1216.25 1633.42,1216.25 1634.01,1216.25 1634.6,1216.25 1635.18,1216.25 1635.77,1216.25 1636.36,1216.25 1636.94,1216.25 1637.53,1216.25 1638.12,1216.25 1638.7,1216.25 1639.29,1216.25 1639.88,1216.25 1640.46,1216.25 1641.05,1216.25 1641.63,1216.25 1642.22,1216.25 1642.81,1216.25 1643.39,1216.25 1643.98,1216.25 1644.57,1216.25 1645.15,1216.25 1645.74,1216.25 1646.33,1216.25 1646.91,1216.25 1647.5,1216.25 1648.09,1216.25 1648.67,1216.25 1649.26,1216.25 1649.84,1216.25 1650.43,1216.25 1651.02,1216.25 1651.6,1216.25 1652.19,1216.25 1652.78,1216.25 1653.36,1216.25 1653.95,1216.25 1654.54,1216.25 1655.12,1216.25 1655.71,1216.25 1656.29,1216.25 1656.88,1216.25 1657.47,1216.25 1658.05,1216.25 1658.64,1216.25 1659.23,1216.25 1659.81,1216.25 1660.4,1216.25 1660.99,1216.25 1661.57,1216.25 1662.16,1216.25 1662.75,1216.25 1663.33,1216.25 1663.92,1216.25 1664.5,1216.25 1665.09,1216.25 1665.68,1216.25 1666.26,1216.25 1666.85,1216.25 1667.44,1216.25 1668.02,1216.25 1668.61,1216.25 1669.2,1216.25 1669.78,1216.25 1670.37,1216.25 1670.96,1216.25 1671.54,1216.25 1672.13,1216.25 1672.71,1216.25 1673.3,1216.25 1673.89,1216.25 1674.47,1216.25 1675.06,1216.25 1675.65,1216.25 1676.23,1216.25 1676.82,1216.25 1677.41,1216.25 1677.99,1216.25 1678.58,1216.25 1679.17,1216.25 1679.75,1216.25 1680.34,1216.25 1680.92,1216.25 1681.51,1216.25 1682.1,1216.25 1682.68,1216.25 1683.27,1216.25 1683.86,1216.25 1684.44,1216.25 1685.03,1216.25 1685.62,1216.25 1686.2,1216.25 1686.79,1216.25 1687.37,1216.25 1687.96,1216.25 1688.55,1216.25 1689.13,1216.25 1689.72,1216.25 1690.31,1216.25 1690.89,1216.25 1691.48,1216.25 1692.07,1216.25 1692.65,1216.25 1693.24,1216.25 1693.83,1216.25 1694.41,1216.25 1695,1216.25 1695.58,1216.25 1696.17,1216.25 1696.76,1216.25 1697.34,1216.25 1697.93,1216.25 1698.52,1216.25 1699.1,1216.25 1699.69,1216.25 1700.28,1216.25 1700.86,1216.25 1701.45,1216.25 1702.04,1216.25 1702.62,1216.25 1703.21,1216.25 1703.79,1216.25 1704.38,1216.25 1704.97,1216.25 1705.55,1216.25 1706.14,1216.25 1706.73,1216.25 1707.31,1216.25 1707.9,1216.25 1708.49,1216.25 1709.07,1216.25 1709.66,1216.25 1710.24,1216.25 1710.83,1216.25 1711.42,1216.25 1712,1216.25 1712.59,1216.25 1713.18,1216.25 1713.76,1216.25 1714.35,1216.25 1714.94,1216.25 1715.52,1216.25 1716.11,1216.25 1716.7,1216.25 1717.28,1216.25 1717.87,1216.25 1718.45,1216.25 1719.04,1216.25 1719.63,1216.25 1720.21,1216.25 1720.8,1216.25 1721.39,1216.25 1721.97,1216.25 1722.56,1216.25 1723.15,1216.25 1723.73,1216.25 1724.32,1216.25 1724.91,1216.25 1725.49,1216.25 1726.08,1216.25 1726.66,1216.25 1727.25,1216.25 1727.84,1216.25 1728.42,1216.25 1729.01,1216.25 1729.6,1216.25 1730.18,1216.25 1730.77,1216.25 1731.36,1216.25 1731.94,1216.25 1732.53,1216.25 1733.11,1216.25 1733.7,1216.25 1734.29,1216.25 1734.87,1216.25 1735.46,1216.25 1736.05,1216.25 1736.63,1216.25 1737.22,1216.25 1737.81,1216.25 1738.39,1216.25 1738.98,1216.25 1739.57,1216.25 1740.15,1216.25 1740.74,1216.25 1741.32,1216.25 1741.91,1216.25 1742.5,1216.25 1743.08,1216.25 1743.67,1216.25 1744.26,1216.25 1744.84,1216.25 1745.43,1216.25 1746.02,1216.25 1746.6,1216.25 1747.19,1216.25 1747.78,1216.25 1748.36,1216.25 1748.95,1216.25 1749.53,1216.25 1750.12,1216.25 1750.71,1216.25 1751.29,1216.25 1751.88,1216.25 1752.47,1216.25 1753.05,1216.25 1753.64,1216.25 1754.23,1216.25 1754.81,1216.25 1755.4,1216.25 1755.99,1216.25 1756.57,1216.25 1757.16,1216.25 1757.74,1216.25 1758.33,1216.25 1758.92,1216.25 1759.5,1216.25 1760.09,1216.25 1760.68,1216.25 1761.26,1216.25 1761.85,1216.25 1762.44,1216.25 1763.02,1216.25 1763.61,1216.25 1764.19,1216.25 1764.78,1216.25 1765.37,1216.25 1765.95,1216.25 1766.54,1216.25 1767.13,1216.25 1767.71,1216.25 1768.3,1216.25 1768.89,1216.25 1769.47,1216.25 1770.06,1216.25 1770.65,1216.25 1771.23,1216.25 1771.82,1216.25 1772.4,1216.25 1772.99,1216.25 1773.58,1216.25 1774.16,1216.25 1774.75,1216.25 1775.34,1216.25 1775.92,1216.25 1776.51,1216.25 1777.1,1216.25 1777.68,1216.25 1778.27,1216.25 1778.86,1216.25 1779.44,1216.25 1780.03,1216.25 1780.61,1216.25 1781.2,1216.25 1781.79,1216.25 1782.37,1216.25 1782.96,1216.25 1783.55,1216.25 1784.13,1216.25 1784.72,1216.25 1785.31,1216.25 1785.89,1216.25 1786.48,1216.25 1787.06,1216.25 1787.65,1216.25 1788.24,1216.25 1788.82,1216.25 1789.41,1216.25 1790,1216.25 1790.58,1216.25 1791.17,1216.25 1791.76,1216.25 1792.34,1216.25 1792.93,1216.25 1793.52,1216.25 1794.1,1216.25 1794.69,1216.25 1795.27,1216.25 1795.86,1216.25 1796.45,1216.25 1797.03,1216.25 1797.62,1216.25 1798.21,1216.25 1798.79,1216.25 1799.38,1216.25 1799.97,1216.25 1800.55,1216.25 1801.14,1216.25 1801.73,1216.25 1802.31,1216.25 1802.9,1216.25 1803.48,1216.25 1804.07,1216.25 1804.66,1216.25 1805.24,1216.25 1805.83,1216.25 1806.42,1216.25 1807,1216.25 1807.59,1216.25 1808.18,1216.25 1808.76,1216.25 1809.35,1216.25 1809.94,1216.25 1810.52,1216.25 1811.11,1216.25 1811.69,1216.25 1812.28,1216.25 1812.87,1216.25 1813.45,1216.25 1814.04,1216.25 1814.63,1216.25 1815.21,1216.25 1815.8,1216.25 1816.39,1216.25 1816.97,1216.25 1817.56,1216.25 1818.14,1216.25 1818.73,1216.25 1819.32,1216.25 1819.9,1216.25 1820.49,1216.25 1821.08,1216.25 1821.66,1216.25 1822.25,1216.25 1822.84,1216.25 1823.42,1216.25 1824.01,1216.25 1824.6,1216.25 1825.18,1216.25 1825.77,1216.25 1826.35,1216.25 1826.94,1216.25 1827.53,1216.25 1828.11,1216.25 1828.7,1216.25 1829.29,1216.25 1829.87,1216.25 1830.46,1216.25 1831.05,1216.25 1831.63,1216.25 1832.22,1216.25 1832.81,1216.25 1833.39,1216.25 1833.98,1216.25 1834.56,1216.25 1835.15,1216.25 1835.74,1216.25 1836.32,1216.25 1836.91,1216.25 1837.5,1216.25 1838.08,1216.25 1838.67,1216.25 1839.26,1216.25 1839.84,1216.25 1840.43,1216.25 1841.01,1216.25 1841.6,1216.25 1842.19,1216.25 1842.77,1216.25 1843.36,1216.25 1843.95,1216.25 1844.53,1216.25 1845.12,1216.25 1845.71,1216.25 1846.29,1216.25 1846.88,1216.25 1847.47,1216.25 1848.05,1216.25 1848.64,1216.25 1849.22,1216.25 1849.81,1216.25 1850.4,1216.25 1850.98,1216.25 1851.57,1216.25 1852.16,1216.25 1852.74,1216.25 1853.33,1216.25 1853.92,1216.25 1854.5,1216.25 1855.09,1216.25 1855.68,1216.25 1856.26,1216.25 1856.85,1216.25 1857.43,1216.25 1858.02,1216.25 1858.61,1216.25 1859.19,1216.25 1859.78,1216.25 1860.37,1216.25 1860.95,1216.25 1861.54,1216.25 1862.13,1216.25 1862.71,1216.25 1863.3,1216.25 1863.88,1216.25 1864.47,1216.25 1865.06,1216.25 1865.64,1216.25 1866.23,1216.25 1866.82,1216.25 1867.4,1216.25 1867.99,1216.25 1868.58,1216.25 1869.16,1216.25 1869.75,1216.25 1870.34,1216.25 1870.92,1216.25 1871.51,1216.25 1872.09,1216.25 1872.68,1216.25 1873.27,1216.25 1873.85,1216.25 1874.44,1216.25 1875.03,1216.25 1875.61,1216.25 1876.2,1216.25 1876.79,1216.25 1877.37,1216.25 1877.96,1216.25 1878.55,1216.25 1879.13,1216.25 1879.72,1216.25 1880.3,1216.25 1880.89,1216.25 1881.48,1216.25 1882.06,1216.25 1882.65,1216.25 1883.24,1216.25 1883.82,1216.25 1884.41,1216.25 1885,1216.25 1885.58,1216.25 1886.17,1216.25 1886.76,1216.25 1887.34,1216.25 1887.93,1216.25 1888.51,1216.25 1889.1,1216.25 1889.69,1216.25 1890.27,1216.25 1890.86,1216.25 1891.45,1216.25 1892.03,1216.25 1892.62,1216.25 1893.21,1216.25 1893.79,1216.25 1894.38,1216.25 1894.96,1216.25 1895.55,1216.25 1896.14,1216.25 1896.72,1216.25 1897.31,1216.25 1897.9,1216.25 1898.48,1216.25 1899.07,1216.25 1899.66,1216.25 1900.24,1216.25 1900.83,1216.25 1901.42,1216.25 1902,1216.25 1902.59,1216.25 1903.17,1216.25 1903.76,1216.25 1904.35,1216.25 1904.93,1216.25 1905.52,1216.25 1906.11,1216.25 1906.69,1216.25 1907.28,1216.25 1907.87,1216.25 1908.45,1216.25 1909.04,1216.25 1909.63,1216.25 1910.21,1216.25 1910.8,1216.25 1911.38,1216.25 1911.97,1216.25 1912.56,1216.25 1913.14,1216.25 1913.73,1216.25 1914.32,1216.25 1914.9,1216.25 1915.49,1216.25 1916.08,1216.25 1916.66,1216.25 1917.25,1216.25 1917.83,1216.25 1918.42,1216.25 1919.01,1216.25 1919.59,1216.25 1920.18,1216.25 1920.77,1216.25 1921.35,1216.25 1921.94,1216.25 1922.53,1216.25 1923.11,1216.25 1923.7,1216.25 1924.29,1216.25 1924.87,1216.25 1925.46,1216.25 1926.04,1216.25 1926.63,1216.25 1927.22,1216.25 1927.8,1216.25 1928.39,1216.25 1928.98,1216.25 1929.56,1216.25 1930.15,1216.25 1930.74,1216.25 1931.32,1216.25 1931.91,1216.25 1932.5,1216.25 1933.08,1216.25 1933.67,1216.25 1934.25,1216.25 1934.84,1216.25 1935.43,1216.25 1936.01,1216.25 1936.6,1216.25 1937.19,1216.25 1937.77,1216.25 1938.36,1216.25 1938.95,1216.25 1939.53,1216.25 1940.12,1216.25 1940.71,1216.25 1941.29,1216.25 1941.88,1216.25 1942.46,1216.25 1943.05,1216.25 1943.64,1216.25 1944.22,1216.25 1944.81,1216.25 1945.4,1216.25 1945.98,1216.25 1946.57,1216.25 1947.16,1216.25 1947.74,1216.25 1948.33,1216.25 1948.91,1216.25 1949.5,1216.25 1950.09,1216.25 1950.67,1216.25 1951.26,1216.25 1951.85,1216.25 1952.43,1216.25 1953.02,1216.25 1953.61,1216.25 1954.19,1216.25 1954.78,1216.25 1955.37,1216.25 1955.95,1216.25 1956.54,1216.25 1957.12,1216.25 1957.71,1216.25 1958.3,1216.25 1958.88,1216.25 1959.47,1216.25 1960.06,1216.25 1960.64,1216.25 1961.23,1216.25 1961.82,1216.25 1962.4,1216.25 1962.99,1216.25 1963.58,1216.25 1964.16,1216.25 1964.75,1216.25 1965.33,1216.25 1965.92,1216.25 1966.51,1216.25 1967.09,1216.25 1967.68,1216.25 1968.27,1216.25 1968.85,1216.25 1969.44,1216.25 1970.03,1216.25 1970.61,1216.25 1971.2,1216.25 1971.78,1216.25 1972.37,1216.25 1972.96,1216.25 1973.54,1216.25 1974.13,1216.25 1974.72,1216.25 1975.3,1216.25 1975.89,1216.25 1976.48,1216.25 1977.06,1216.25 1977.65,1216.25 1978.24,1216.25 1978.82,1216.25 1979.41,1216.25 1979.99,1216.25 1980.58,1216.25 1981.17,1216.25 1981.75,1216.25 1982.34,1216.25 1982.93,1216.25 1983.51,1216.25 1984.1,1216.25 1984.69,1216.25 1985.27,1216.25 1985.86,1216.25 1986.45,1216.25 1987.03,1216.25 1987.62,1216.25 1988.2,1216.25 1988.79,1216.25 1989.38,1216.25 1989.96,1216.25 1990.55,1216.25 1991.14,1216.25 1991.72,1216.25 1992.31,1216.25 1992.9,1216.25 1993.48,1216.25 1994.07,1216.25 1994.65,1216.25 1995.24,1216.25 1995.83,1216.25 1996.41,1216.25 1997,1216.25 1997.59,1216.25 1998.17,1216.25 1998.76,1216.25 1999.35,1216.25 1999.93,1216.25 2000.52,1216.25 2001.11,1216.25 2001.69,1216.25 2002.28,1216.25 2002.86,1216.25 2003.45,1216.25 2004.04,1216.25 2004.62,1216.25 2005.21,1216.25 2005.8,1216.25 2006.38,1216.25 2006.97,1216.25 2007.56,1216.25 2008.14,1216.25 2008.73,1216.25 2009.32,1216.25 2009.9,1216.25 2010.49,1216.25 2011.07,1216.25 2011.66,1216.25 2012.25,1216.25 2012.83,1216.25 2013.42,1216.25 2014.01,1216.25 2014.59,1216.25 2015.18,1216.25 2015.77,1216.25 2016.35,1216.25 2016.94,1216.25 2017.53,1216.25 2018.11,1216.25 2018.7,1216.25 2019.28,1216.25 2019.87,1216.25 2020.46,1216.25 2021.04,1216.25 2021.63,1216.25 2022.22,1216.25 2022.8,1216.25 2023.39,1216.25 2023.98,1216.25 2024.56,1216.25 2025.15,1216.25 2025.73,1216.25 2026.32,1216.25 2026.91,1216.25 2027.49,1216.25 2028.08,1216.25 2028.67,1216.25 2029.25,1216.25 2029.84,1216.25 2030.43,1216.25 2031.01,1216.25 2031.6,1216.25 2032.19,1216.25 2032.77,1216.25 2033.36,1216.25 2033.94,1216.25 2034.53,1216.25 2035.12,1216.25 2035.7,1216.25 2036.29,1216.25 2036.88,1216.25 2037.46,1216.25 2038.05,1216.25 2038.64,1216.25 2039.22,1216.25 2039.81,1216.25 2040.4,1216.25 2040.98,1216.25 2041.57,1216.25 2042.15,1216.25 2042.74,1216.25 2043.33,1216.25 2043.91,1216.25 2044.5,1216.25 2045.09,1216.25 2045.67,1216.25 2046.26,1216.25 2046.85,1216.25 2047.43,1216.25 2048.02,1216.25 2048.6,1216.25 2049.19,1216.25 2049.78,1216.25 2050.36,1216.25 2050.95,1216.25 2051.54,1216.25 2052.12,1216.25 2052.71,1216.25 2053.3,1216.25 2053.88,1216.25 2054.47,1216.25 2055.06,1216.25 2055.64,1216.25 2056.23,1216.25 2056.81,1216.25 2057.4,1216.25 2057.99,1216.25 2058.57,1216.25 2059.16,1216.25 2059.75,1216.25 2060.33,1216.25 2060.92,1216.25 2061.51,1216.25 2062.09,1216.25 2062.68,1216.25 2063.27,1216.25 2063.85,1216.25 2064.44,1216.25 2065.02,1216.25 2065.61,1216.25 2066.2,1216.25 2066.78,1216.25 2067.37,1216.25 2067.96,1216.25 2068.54,1216.25 2069.13,1216.25 2069.72,1216.25 2070.3,1216.25 2070.89,1216.25 2071.48,1216.25 2072.06,1216.25 2072.65,1216.25 2073.23,1216.25 2073.82,1216.25 2074.41,1216.25 2074.99,1216.25 2075.58,1216.25 2076.17,1216.25 2076.75,1216.25 2077.34,1216.25 2077.93,1216.25 2078.51,1216.25 2079.1,1216.25 2079.68,1216.25 2080.27,1216.25 2080.86,1216.25 2081.44,1216.25 2082.03,1216.25 2082.62,1216.25 2083.2,1216.25 2083.79,1216.25 2084.38,1216.25 2084.96,1216.25 2085.55,1216.25 2086.14,1216.25 2086.72,1216.25 2087.31,1216.25 2087.89,1216.25 2088.48,1216.25 2089.07,1216.25 2089.65,1216.25 2090.24,1216.25 2090.83,1216.25 2091.41,1216.25 2092,1216.25 2092.59,1216.25 2093.17,1216.25 2093.76,1216.25 2094.35,1216.25 2094.93,1216.25 2095.52,1216.25 2096.1,1216.25 2096.69,1216.25 2097.28,1216.25 2097.86,1216.25 2098.45,1216.25 2099.04,1216.25 2099.62,1216.25 2100.21,1216.25 2100.8,1216.25 2101.38,1216.25 2101.97,1216.25 2102.55,1216.25 2103.14,1216.25 2103.73,1216.25 2104.31,1216.25 2104.9,1216.25 2105.49,1216.25 2106.07,1216.25 2106.66,1216.25 2107.25,1216.25 2107.83,1216.25 2108.42,1216.25 2109.01,1216.25 2109.59,1216.25 2110.18,1216.25 2110.76,1216.25 2111.35,1216.25 2111.94,1216.25 2112.52,1216.25 2113.11,1216.25 2113.7,1216.25 2114.28,1216.25 2114.87,1216.25 2115.46,1216.25 2116.04,1216.25 2116.63,1216.25 2117.22,1216.25 2117.8,1216.25 2118.39,1216.25 2118.97,1216.25 2119.56,1216.25 2120.15,1216.25 2120.73,1216.25 2121.32,1216.25 2121.91,1216.25 2122.49,1216.25 2123.08,1216.25 2123.67,1216.25 2124.25,1216.25 2124.84,1216.25 2125.42,1216.25 2126.01,1216.25 2126.6,1216.25 2127.18,1216.25 2127.77,1216.25 2128.36,1216.25 2128.94,1216.25 2129.53,1216.25 2130.12,1216.25 2130.7,1216.25 2131.29,1216.25 2131.88,1216.25 2132.46,1216.25 2133.05,1216.25 2133.63,1216.25 2134.22,1216.25 2134.81,1216.25 2135.39,1216.25 2135.98,1216.25 2136.57,1216.25 2137.15,1216.25 2137.74,1216.25 2138.33,1216.25 2138.91,1216.25 2139.5,1216.25 2140.09,1216.25 2140.67,1216.25 2141.26,1216.25 2141.84,1216.25 2142.43,1216.25 2143.02,1216.25 2143.6,1216.25 2144.19,1216.25 2144.78,1216.25 2145.36,1216.25 2145.95,1216.25 2146.54,1216.25 2147.12,1216.25 2147.71,1216.25 2148.3,1216.25 2148.88,1216.25 2149.47,1216.25 2150.05,1216.25 2150.64,1216.25 2151.23,1216.25 2151.81,1216.25 2152.4,1216.25 2152.99,1216.25 2153.57,1216.25 2154.16,1216.25 2154.75,1216.25 2155.33,1216.25 2155.92,1216.25 2156.5,1216.25 2157.09,1216.25 2157.68,1216.25 2158.26,1216.25 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.3,1198.54 1398.47,899.083 \"/>\n<polyline clip-path=\"url(#clip922)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1233.47 985.439,1198.54 2158.26,1198.54 2158.26,1233.47 985.439,1233.47 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip920)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip920)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip923\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip920)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip920)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip920)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip923)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-32.6883 161.555,-1381.63 162.114,-1323.89 162.673,-2576.33 163.232,-3792.72 163.792,-4907.58 164.351,-5816.65 164.91,-6711.38 165.469,-7504.24 166.029,-8269.28 166.588,-8962.61 167.147,-9572.52 167.706,-10120.8 168.266,-10611.5 168.825,-11048.3 169.384,-10612.2 169.943,-10987.6 170.503,-11297.9 171.062,-11574.8 171.621,-11186.2 172.18,-11422.6 172.74,-11613.7 173.299,-11781.2 173.858,-11428.1 174.417,-11551.7 174.977,-11641.6 175.536,-11700 176.095,-11747.3 176.655,-11419.4 177.214,-11432.4 177.773,-11114.7 178.332,-11104 178.892,-11085.3 179.451,-11042.3 180.01,-10985.7 180.569,-10688.2 181.129,-10398.5 181.688,-10125.2 182.247,-10044.3 182.806,-9611.84 183.366,-9343.38 183.925,-9098.11 184.484,-8996.59 185.043,-8624.11 185.603,-8514.1 186.162,-8283.69 186.721,-8167.64 187.28,-7938.75 187.84,-7611.93 188.399,-7399.16 188.958,-7282.37 189.517,-6985.89 190.077,-6537.56 190.636,-6452.85 191.195,-6279.87 191.754,-6180.08 192.314,-6066.89 192.873,-5743.23 193.432,-5649.3 193.991,-5418.25 194.551,-5262.78 195.11,-5107.17 195.669,-4894.02 196.228,-4739.81 196.788,-4479.74 197.347,-4280.6 197.906,-4044.85 198.465,-3865.61 199.025,-3739.85 199.584,-3620.19 200.143,-3535.41 200.702,-3370.98 201.262,-3254.67 201.821,-3099.67 202.38,-2986.09 202.939,-2920.45 203.499,-2852.83 204.058,-2743.28 204.617,-2597.79 205.176,-2532.54 205.736,-2432.88 206.295,-2268.09 206.854,-2106.79 207.413,-1991.23 207.973,-1911.53 208.532,-1764.24 209.091,-1679.38 209.65,-1598.98 210.21,-1459.43 210.769,-1302.34 211.328,-1204.43 211.887,-1167.74 212.447,-1078.02 213.006,-909.506 213.565,-854.434 214.124,-802.247 214.684,-751.952 215.243,-695.558 215.802,-668.284 216.361,-565.742 216.921,-420.218 217.48,-379.06 218.039,-316.529 218.598,-298.261 219.158,-284.479 219.717,-268.913 220.276,-226.549 220.835,-208.7 221.395,-168.06 221.954,-83.3672 222.513,-90.6856 223.072,-74.8517 223.632,-35.8189 224.191,-24.4269 224.75,12.7525 225.309,67.5983 225.869,101.234 226.428,114.711 226.987,150.305 227.546,265.189 228.106,272.847 228.665,282.846 229.224,332.789 229.783,399.636 230.343,485.972 230.902,528.843 231.461,532.187 232.02,512.888 232.58,494.396 233.139,555.604 233.698,556.955 234.257,565.628 234.817,586.606 235.376,569.447 235.935,613.605 236.494,618.101 237.054,657.102 237.613,678.281 238.172,659.534 238.731,659.363 239.291,661.198 239.85,660.594 240.409,697.016 240.968,699.999 241.528,739.228 242.087,777.871 242.646,755.343 243.205,758.08 243.765,776.414 244.324,777.691 244.883,764.241 245.442,801.844 246.002,785.623 246.561,805.31 247.12,823.915 247.679,805.482 248.239,821.654 248.798,858.218 249.357,892.102 249.916,889.176 250.476,901.75 251.035,930.345 251.594,943.419 252.153,955.366 252.713,966.258 253.272,978.545 253.831,969.357 254.39,979.877 254.95,1026.38 255.509,1035.55 256.068,1044.76 256.627,1018.9 257.187,1064.1 257.746,1088.66 258.305,1090.9 258.864,1082.98 259.424,1091.7 259.983,1100.35 260.542,1075.04 261.101,1065.03 261.661,1057.64 262.22,1069.24 262.779,1060.28 263.338,1070.8 263.898,1030.52 264.457,1046.44 265.016,1023.18 265.575,1018.53 266.135,1029.85 266.694,1023.7 267.253,1019.38 267.812,1013.59 268.372,1013.15 268.931,1057.63 269.49,1063.32 270.049,1042.9 270.609,1036.26 271.168,1048.82 271.727,1061.83 272.286,1041.88 272.846,1055.92 273.405,1049.84 273.964,1043.96 274.523,1049.52 275.083,1026.27 275.642,1018.89 276.201,1015.29 276.76,1044.57 277.32,1072.8 277.879,1112.5 278.438,1085.88 278.997,1097.37 279.557,1088.86 280.116,1083.26 280.675,1079.37 281.234,1056.43 281.794,1083.9 282.353,1077.55 282.912,1085.83 283.471,1075.26 284.031,1080.23 284.59,1073.99 285.149,1100.86 285.708,1090.83 286.268,1099.07 286.827,1058.48 287.386,1070.44 287.945,1063.82 288.505,1044.56 289.064,1056.04 289.623,1065.64 290.182,1075.05 290.742,1098.26 291.301,1104.61 291.86,1075.06 292.419,1097.48 292.979,1052.98 293.538,1059.79 294.097,1033.5 294.656,1028.8 295.216,1005.78 295.775,1016.02 296.334,1011.73 296.893,985.954 297.453,1029.15 298.012,1038.23 298.571,1065.73 299.13,1089.89 299.69,1096.27 300.249,1086.59 300.808,1096.51 301.368,1070.32 301.927,1031.07 302.486,1022.37 303.045,1046.99 303.605,1021.02 304.164,998.698 304.723,974.34 305.282,970.764 305.842,962.472 306.401,992.256 306.96,968.016 307.519,1014.44 308.079,1010.4 308.638,1005.74 309.197,968.165 309.756,980.783 310.316,978.972 310.875,979.017 311.434,989.856 311.993,1037.87 312.553,1028.96 313.112,1005.36 313.671,1016.63 314.23,1023.41 314.79,1015.07 315.349,976.515 315.908,989.437 316.467,1002.62 317.027,1010.31 317.586,1006.18 318.145,1049.51 318.704,1059.98 319.264,1016.79 319.823,1059.02 320.382,1047.81 320.941,1055.71 321.501,1011.62 322.06,1019.73 322.619,979.231 323.178,1022.01 323.738,1027.32 324.297,1036.12 324.856,1027.99 325.415,999.505 325.975,976.343 326.534,1002.33 327.093,1010.55 327.652,1004.75 328.212,978.51 328.771,958.163 329.33,999.761 329.889,961.359 330.449,970.108 331.008,962.632 331.567,942.776 332.126,953.296 332.686,950.675 333.245,948.229 333.804,941.639 334.363,906.191 334.923,902.105 335.482,870.947 336.041,871.348 336.6,836.187 337.16,836.609 337.719,872.192 338.278,870.7 338.837,852.694 339.397,851.182 339.956,884.569 340.515,866.26 341.074,862.523 341.634,823.656 342.193,792.505 342.752,780.541 343.311,783.314 343.871,800.606 344.43,834.52 344.989,833.388 345.548,883.52 346.108,897.099 346.667,894.117 347.226,874.838 347.785,856.134 348.345,872.769 348.904,856.744 349.463,855.095 350.022,886.599 350.582,866.243 351.141,862.252 351.7,863.433 352.259,878.635 352.819,860.049 353.378,824.524 353.937,843.236 354.496,826.113 355.056,777.902 355.615,781.783 356.174,782.198 356.733,782.131 357.293,769.111 357.852,788.452 358.411,792.21 358.97,804.294 359.53,822.723 360.089,841.071 360.648,844.011 361.207,875.596 361.767,853.641 362.326,885.433 362.885,880.947 363.444,861.664 364.004,872.896 364.563,872.37 365.122,885.808 365.681,898.149 366.241,877.44 366.8,856.496 367.359,855.729 367.918,884.143 368.478,881.767 369.037,894.378 369.596,908.527 370.155,952.59 370.715,943.745 371.274,936.086 371.833,930.368 372.392,958.811 372.952,919.847 373.511,900.472 374.07,925.527 374.629,885.191 375.189,879.801 375.748,924.352 376.307,915.743 376.866,923.273 377.426,898.446 377.985,892.782 378.544,889.937 379.103,882.849 379.663,912.476 380.222,923.557 380.781,914.661 381.34,923.632 381.9,912.386 382.459,891.249 383.018,889.27 383.577,882.367 384.137,876.886 384.696,857.035 385.255,870.031 385.814,895.172 386.374,887.995 386.933,899.819 387.492,863.19 388.051,880.647 388.611,855.894 389.17,854.594 389.729,884.432 390.288,829.882 390.848,842.599 391.407,840.416 391.966,836.358 392.525,867.883 393.085,910.001 393.644,921.258 394.203,931.217 394.762,905.666 395.322,900.411 395.881,892.98 396.44,853.775 396.999,830.82 397.559,795.064 398.118,761.284 398.677,764.313 399.236,749.132 399.796,704.301 400.355,711.198 400.914,698.017 401.473,704.533 402.033,712.546 402.592,683.7 403.151,708.508 403.71,713.581 404.27,730.824 404.829,751.493 405.388,752.347 405.947,754.573 406.507,754.573 407.066,756.893 407.625,774.277 408.184,759.922 408.744,759.6 409.303,775.163 409.862,763.136 410.421,766.232 410.981,750.511 411.54,751.515 412.099,766.709 412.658,763.637 413.218,732.593 413.777,737.512 414.336,740.197 414.895,740.466 415.455,755.634 416.014,774.294 416.573,807.211 417.132,822.926 417.692,805.587 418.251,785.937 418.81,818.449 419.369,848.416 419.929,876.855 420.488,887.065 421.047,931.992 421.606,986.839 422.166,993.081 422.725,961.822 423.284,901.605 423.843,940.582 424.403,931.873 424.962,906.26 425.521,880.729 426.08,888.2 426.64,898.568 427.199,892.513 427.758,885.173 428.318,878.821 428.877,856.926 429.436,835.752 429.995,831.574 430.555,828.086 431.114,808.701 431.673,805.969 432.232,836.893 432.792,867.583 433.351,827.317 433.91,774.812 434.469,757.063 435.029,786.41 435.588,768.255 436.147,735.131 436.706,768.619 437.266,733.981 437.825,751.897 438.384,798.087 438.943,845.761 439.503,855.731 440.062,867.125 440.621,860.747 441.18,839.012 441.74,833.537 442.299,811.977 442.858,793.716 443.417,829.495 443.977,793.367 444.536,808.237 445.095,821.678 445.654,832.349 446.214,794.635 446.773,812.028 447.332,793.528 447.891,806.727 448.451,754.619 449.01,769.095 449.569,782.183 450.128,779.885 450.688,746.105 451.247,742.021 451.806,759.325 452.365,753.392 452.925,736.231 453.484,716.891 454.043,719.841 454.602,722.292 455.162,740.49 455.721,725.576 456.28,724.854 456.839,740.636 457.399,758.187 457.958,761.345 458.517,777.152 459.076,758.354 459.636,741.342 460.195,739.448 460.754,739.633 461.313,759.753 461.873,777.827 462.432,775.866 462.991,790.01 463.55,816.868 464.11,843.326 464.669,835.062 465.228,828.161 465.787,792.225 466.347,756.016 466.906,772.504 467.465,757.123 468.024,774.361 468.584,759.541 469.143,778.931 469.702,777.04 470.261,793.074 470.821,772.922 471.38,805.409 471.939,803.544 472.498,801.194 473.058,781.335 473.617,760.482 474.176,746.502 474.735,764.734 475.295,762.899 475.854,749.171 476.413,717.77 476.972,702.291 477.532,702.064 478.091,718.545 478.65,720.204 479.209,720.182 479.769,720.539 480.328,749.371 480.887,714.202 481.446,735.523 482.006,722.287 482.565,752.09 483.124,735.717 483.683,767.049 484.243,783.086 484.802,752.841 485.361,751.382 485.92,734.404 486.48,734.724 487.039,735.463 487.598,736.941 488.157,766.845 488.717,748.275 489.276,763.996 489.835,730.246 490.394,749.055 490.954,734.125 491.513,734.758 492.072,699.729 492.631,699.356 493.191,704.039 493.75,725.349 494.309,740.29 494.868,755.433 495.428,751.603 495.987,770.096 496.546,784.404 497.105,762.464 497.665,775.628 498.224,773.236 498.783,753.655 499.342,750.508 499.902,715.583 500.461,731.593 501.02,763.846 501.579,759.996 502.139,745.639 502.698,727.935 503.257,741.786 503.816,739.816 504.376,791.202 504.935,805.898 505.494,803.44 506.053,785.424 506.613,752.337 507.172,767.618 507.731,783.574 508.29,781.471 508.85,762.896 509.409,732.062 509.968,732.514 510.527,716.596 511.087,767.021 511.646,797.558 512.205,776.115 512.764,757.962 513.324,773.44 513.883,771.039 514.442,766.462 515.001,763.454 515.561,762.826 516.12,779.966 516.679,747.331 517.238,763.681 517.798,744.603 518.357,742.767 518.916,722.683 519.475,722.364 520.035,733.619 520.594,750.532 521.153,719.839 521.712,707.232 522.272,674.51 522.831,676.83 523.39,696.601 523.949,719.812 524.509,736.826 525.068,737.877 525.627,735.814 526.186,767.755 526.746,766.314 527.305,765.385 527.864,742.819 528.423,762.623 528.983,747.247 529.542,745.11 530.101,761.132 530.66,775.631 531.22,756.964 531.779,755.214 532.338,785.404 532.897,814.825 533.457,812.001 534.016,807.117 534.575,822.681 535.134,800.09 535.694,800.599 536.253,812.169 536.812,841.939 537.371,824.475 537.931,866.124 538.49,858.297 539.049,836.917 539.608,798.703 540.168,813.365 540.727,809.902 541.286,790.948 541.845,769.118 542.405,812.886 542.964,854.683 543.523,832.385 544.082,839.394 544.642,847.894 545.201,823.549 545.76,819.637 546.319,810.806 546.879,806.049 547.438,770.217 547.997,768.931 548.556,783.628 549.116,782.792 549.675,761.478 550.234,728.694 550.793,725.974 551.353,724.76 551.912,725.176 552.471,740.923 553.031,710.631 553.59,696.571 554.149,682.436 554.708,668.028 555.268,654.681 555.827,654.023 556.386,654.684 556.945,653.218 557.505,689.707 558.064,691.92 558.623,711.187 559.182,711.461 559.742,695.628 560.301,713.017 560.86,715.403 561.419,718.271 561.979,698.468 562.538,684.242 563.097,697.683 563.656,712.626 564.216,647.934 564.775,696.622 565.334,681.789 565.893,698.617 566.453,668.202 567.012,638.287 567.571,624.053 568.13,612.593 568.69,630.782 569.249,639.798 569.808,657.359 570.367,676.901 570.927,678.601 571.486,645.921 572.045,668.923 572.604,669.94 573.164,674.273 573.723,672.532 574.282,706.704 574.841,691.514 575.401,705.009 575.96,704.423 576.519,719.617 577.078,751.87 577.638,752.154 578.197,751.539 578.756,778.879 579.315,755.521 579.875,736.67 580.434,720.94 580.993,720.767 581.552,735.554 582.112,732.301 582.671,745.922 583.23,761.319 583.789,724.717 584.349,724.264 584.908,722.982 585.467,692.142 586.026,692.431 586.586,690.509 587.145,692.049 587.704,694.625 588.263,679.867 588.823,696.778 589.382,714.614 589.941,744.129 590.5,758.62 591.06,787.996 591.619,768.025 592.178,715.972 592.737,715.41 593.297,714.597 593.856,698.179 594.415,684.578 594.974,686.967 595.534,688.466 596.093,676.128 596.652,660.684 597.211,629.532 597.771,665.333 598.33,685.455 598.889,689.047 599.448,671.107 600.008,673.908 600.567,693.03 601.126,693.369 601.685,694.099 602.245,693.879 602.804,694.933 603.363,695.809 603.922,728.994 604.482,759.331 605.041,726.662 605.6,744.387 606.159,726.752 606.719,726.877 607.278,726.349 607.837,727.361 608.396,707.765 608.956,680.02 609.515,677.995 610.074,662.768 610.633,666.293 611.193,669.683 611.752,666.124 612.311,672.109 612.87,673.186 613.43,663.735 613.989,680.971 614.548,651.822 615.107,655.553 615.667,658.415 616.226,630.213 616.785,617.738 617.344,608.68 617.904,628.91 618.463,614.634 619.022,603.508 619.581,641.495 620.141,630.778 620.7,652.044 621.259,639.355 621.818,660.17 622.378,679.47 622.937,666.478 623.496,685.178 624.055,686.179 624.615,699.748 625.174,700.097 625.733,730.501 626.292,700.182 626.852,668.959 627.411,686.501 627.97,702.998 628.529,703.094 629.089,670.598 629.648,673.208 630.207,624.663 630.766,645.651 631.326,668.897 631.885,605.095 632.444,624.419 633.003,644.031 633.563,700.098 634.122,703.667 634.681,706.43 635.24,693.18 635.8,724.745 636.359,737.969 636.918,753.066 637.477,766.639 638.037,759.513 638.596,724.041 639.155,677.229 639.714,682.245 640.274,699.209 640.833,699.782 641.392,732.505 641.951,745.284 642.511,773.302 643.07,773.921 643.629,733.667 644.188,682.848 644.748,687.692 645.307,690.05 645.866,703.916 646.425,702.606 646.985,700.156 647.544,718.574 648.103,703.851 648.662,704.13 649.222,690.706 649.781,675.234 650.34,662.136 650.899,665.678 651.459,682.454 652.018,650.581 652.577,669.665 653.136,735.507 653.696,734.163 654.255,762.171 654.814,776.272 655.373,772.543 655.933,754.106 656.492,769.024 657.051,783.397 657.61,808.958 658.17,789.153 658.729,784.421 659.288,799.384 659.847,781.014 660.407,856.275 660.966,850.194 661.525,890.446 662.084,850.844 662.644,842.774 663.203,820.633 663.762,826.785 664.321,820.663 664.881,813.183 665.44,771.686 665.999,734.247 666.558,697.284 667.118,692.922 667.677,694.254 668.236,695.787 668.795,682.361 669.355,699.23 669.914,668.401 670.473,666.466 671.032,695.806 671.592,658.31 672.151,642.094 672.71,629.267 673.269,616.531 673.829,605.946 674.388,610.146 674.947,615.7 675.506,602.87 676.066,625.809 676.625,613.674 677.184,636.089 677.743,687.568 678.303,702.313 678.862,718.56 679.421,702.38 679.981,700.923 680.54,732.917 681.099,747.166 681.658,759.181 682.218,786.743 682.777,770.146 683.336,782.377 683.895,762.357 684.455,755.16 685.014,732.698 685.573,730.393 686.132,727.94 686.692,743.398 687.251,725.808 687.81,709.568 688.369,672.462 688.929,657.226 689.488,707.152 690.047,725.633 690.606,724.471 691.166,739.149 691.725,703.449 692.284,704.416 692.843,652.213 693.403,656.965 693.962,640.917 694.521,655.78 695.08,674.19 695.64,691.518 696.199,705.892 696.758,671.216 697.317,701.951 697.877,722.419 698.436,751.22 698.995,747.598 699.554,729.555 700.114,744.453 700.673,740.907 701.232,755 701.791,768.666 702.351,766.465 702.91,746.587 703.469,761.985 704.028,760.877 704.588,745.26 705.147,760.621 705.706,741.163 706.265,789.971 706.825,785.591 707.384,798.795 707.943,794.508 708.502,774.214 709.062,791.218 709.621,819.14 710.18,810.237 710.739,867.734 711.299,874.31 711.858,849.347 712.417,860.375 712.976,851.359 713.536,825.682 714.095,786.65 714.654,779.797 715.213,756.688 715.773,719.002 716.332,716.619 716.891,698.548 717.45,651.627 718.01,620.971 718.569,625.617 719.128,629.702 719.687,643.968 720.247,596.177 720.806,616.842 721.365,602.593 721.924,590.594 722.484,613.167 723.043,665.319 723.602,667.701 724.161,700.373 724.721,682.27 725.28,648.53 725.839,652.353 726.398,639.564 726.958,658.83 727.517,657.272 728.076,678.362 728.635,679.127 729.195,697.217 729.754,662.94 730.313,679.952 730.872,667.217 731.432,636.206 731.991,656.737 732.55,641.465 733.109,627.433 733.669,648.198 734.228,635.804 734.787,686.47 735.346,705.398 735.906,690.452 736.465,706.728 737.024,708.832 737.583,723.626 738.143,725.634 738.702,675.29 739.261,690.204 739.82,706.721 740.38,688.173 740.939,706.375 741.498,702.446 742.057,686.415 742.617,686.047 743.176,702.846 743.735,686.911 744.294,719.172 744.854,718.769 745.413,667.244 745.972,652.977 746.531,653.927 747.091,641.154 747.65,644.253 748.209,647.445 748.768,600.711 749.328,604.874 749.887,611.242 750.446,631.016 751.005,617.595 751.565,624.001 752.124,641.53 752.683,661.584 753.242,679.75 753.802,683.68 754.361,670.528 754.92,706.106 755.479,740.818 756.039,722.008 756.598,733.762 757.157,716.944 757.716,717.285 758.276,699.814 758.835,715.479 759.394,699.752 759.953,685.117 760.513,684.45 761.072,669.028 761.631,682.957 762.19,699.874 762.75,681.565 763.309,683.417 763.868,683.073 764.427,688.289 764.987,690.343 765.546,693.144 766.105,693.577 766.664,675.589 767.224,693.995 767.783,711.597 768.342,708.827 768.901,724.673 769.461,722.949 770.02,721.984 770.579,706.215 771.138,737.603 771.698,719.666 772.257,718.615 772.816,729.863 773.375,694.621 773.935,708.232 774.494,720.598 775.053,707.134 775.612,692.342 776.172,679.182 776.731,680.168 777.29,681.173 777.849,685.348 778.409,687.374 778.968,656.591 779.527,670.965 780.086,673.575 780.646,690.586 781.205,709.217 781.764,723.263 782.323,719.094 782.883,716.417 783.442,680.607 784.001,613.155 784.56,636.414 785.12,638.187 785.679,641.007 786.238,642.88 786.797,644.577 787.357,649.131 787.916,684.26 788.475,701.977 789.034,684.404 789.594,669.939 790.153,669.502 790.712,670.009 791.271,666.473 791.831,716.661 792.39,730.447 792.949,776.993 793.508,755.153 794.068,732.841 794.627,715.251 795.186,714.454 795.745,712.105 796.305,746.837 796.864,760.446 797.423,757.154 797.982,768.912 798.542,749.427 799.101,712.23 799.66,723.636 800.219,754.59 800.779,719.794 801.338,719.032 801.897,684.488 802.456,685.247 803.016,720.049 803.575,703.719 804.134,701.247 804.693,700.198 805.253,686.184 805.812,700.209 806.371,668.986 806.931,686.362 807.49,687.074 808.049,667.471 808.608,697.733 809.168,684.197 809.727,668.29 810.286,673.201 810.845,688.941 811.405,707.682 811.964,769.34 812.523,783.935 813.082,794.713 813.642,789.77 814.201,781.939 814.76,795.059 815.319,788.529 815.879,769.142 816.438,748.443 816.997,744.151 817.556,790.671 818.116,785.517 818.675,799.509 819.234,854.432 819.793,815.672 820.353,794.331 820.912,791.905 821.471,801.365 822.03,795.93 822.59,789.622 823.149,783.052 823.708,807.832 824.267,786.62 824.827,765.691 825.386,744.242 825.945,756.528 826.504,734.857 827.064,729.95 827.623,742.295 828.182,710.424 828.741,710.613 829.301,710.512 829.86,742.189 830.419,789.601 830.978,782.521 831.538,778.261 832.097,757.122 832.656,737.023 833.215,754.552 833.775,769.937 834.334,785.554 834.893,765.845 835.452,727.334 836.012,724.525 836.571,690.071 837.13,662.24 837.689,663.678 838.249,648.992 838.808,663.895 839.367,680.039 839.926,696.248 840.486,708.465 841.045,720.243 841.604,719.861 842.163,670.009 842.723,653.601 843.282,658.957 843.841,629.461 844.4,615.88 844.96,635.652 845.519,622.537 846.078,624.442 846.637,628.458 847.197,666.745 847.756,649.799 848.315,633.345 848.874,653.348 849.434,671.359 849.993,669.955 850.552,704.751 851.111,685.116 851.671,700.119 852.23,684.088 852.789,681.776 853.348,665.235 853.908,636.186 854.467,689.956 855.026,689.828 855.585,689.275 856.145,670.62 856.704,653.697 857.263,672.111 857.822,690.413 858.382,688.283 858.941,706.836 859.5,706.72 860.059,671.716 860.619,673.003 861.178,658.45 861.737,660.759 862.296,629.658 862.856,634.621 863.415,605.125 863.974,590.397 864.533,594.585 865.093,586.923 865.652,592.125 866.211,582.124 866.77,588.933 867.33,575.954 867.889,628.59 868.448,633.722 869.007,639.21 869.567,641.169 870.126,624.842 870.685,627.39 871.244,629.203 871.804,634.03 872.363,616.933 872.922,605.011 873.481,642.65 874.041,656.623 874.6,643.413 875.159,693.084 875.718,675.822 876.278,647.351 876.837,666.476 877.396,683.053 877.955,664.063 878.515,667.041 879.074,683.241 879.633,704.452 880.192,705.314 880.752,723.071 881.311,686.452 881.87,684.231 882.429,668.031 882.989,699.823 883.548,681.506 884.107,670.499 884.666,673.874 885.226,675.672 885.785,675.17 886.344,677.62 886.903,697.258 887.463,776.172 888.022,773.717 888.581,785.96 889.14,764.841 889.7,742.619 890.259,739.092 890.818,702.742 891.377,716.891 891.937,696.537 892.496,713.06 893.055,727.571 893.614,677.358 894.174,679.912 894.733,681.82 895.292,711.77 895.851,695.556 896.411,709.449 896.97,692.581 897.529,739.686 898.088,750.462 898.648,732.066 899.207,692.889 899.766,658.101 900.325,677.361 900.885,678.901 901.444,696.766 902.003,714.532 902.562,727.982 903.122,712.825 903.681,696.163 904.24,677.992 904.799,647.444 905.359,633.564 905.918,619.676 906.477,641.364 907.036,674.609 907.596,672.974 908.155,686.232 908.714,685.787 909.273,688.339 909.833,684.694 910.392,666.925 910.951,665.988 911.51,648.951 912.07,600.016 912.629,619.93 913.188,621.887 913.747,673.286 914.307,690.873 914.866,671.85 915.425,675.118 915.984,646.428 916.544,617.064 917.103,641.736 917.662,643.664 918.221,667.483 918.781,685.477 919.34,717.223 919.899,715.615 920.458,745.641 921.018,744.257 921.577,740.179 922.136,754.196 922.695,752.54 923.255,764.801 923.814,776.682 924.373,757.722 924.932,737.991 925.492,750.808 926.051,761.656 926.61,807.155 927.169,785.462 927.729,781.015 928.288,745.204 928.847,696.491 929.406,647.996 929.966,647.726 930.525,646.678 931.084,647.69 931.644,632.146 932.203,586.962 932.762,622.472 933.321,626.695 933.881,648.982 934.44,665.886 934.999,665.203 935.558,699.335 936.118,697.378 936.677,696.839 937.236,698.276 937.795,680.272 938.355,710.535 938.914,726.841 939.473,725.86 940.032,710.078 940.592,675.844 941.151,693.334 941.71,705.325 942.269,735.394 942.829,717.048 943.388,714.109 943.947,761.116 944.506,739.797 945.066,750.96 945.625,765.303 946.184,779.034 946.743,791.327 947.303,785.137 947.862,744.15 948.421,708.809 948.98,736.813 949.54,702.72 950.099,715.346 950.658,680.118 951.217,681.763 951.777,698.474 952.336,648.692 952.895,651.18 953.454,652.575 954.014,634.877 954.573,670.857 955.132,641.281 955.691,645.377 956.251,616.442 956.81,604.429 957.369,591.771 957.928,561.726 958.488,571.615 959.047,591.005 959.606,598.017 960.165,553.881 960.725,579.914 961.284,583.968 961.843,593.708 962.402,612.129 962.962,597.121 963.521,585.469 964.08,606.469 964.639,593.236 965.199,597.622 965.758,573.37 966.317,581.324 966.876,587.907 967.436,578.459 967.995,599.549 968.554,619.7 969.113,607.452 969.673,574.73 970.232,561.993 970.791,552.351 971.35,575.418 971.91,585.476 972.469,607.015 973.028,612.943 973.587,650.598 974.147,635.659 974.706,652.556 975.265,641.08 975.824,647.258 976.384,653.307 976.943,642.547 977.502,648.661 978.061,670.612 978.621,671.954 979.18,673.768 979.739,657.98 980.298,642.393 980.858,644.052 981.417,662.425 981.976,646.319 982.535,645.098 983.095,680.035 983.654,684.797 984.213,682.098 984.772,698.296 985.332,697.564 985.891,682.611 986.45,663.914 987.009,680.203 987.569,712.389 988.128,674.693 988.687,660.833 989.246,662.772 989.806,677.821 990.365,645.012 990.924,646.223 991.483,664.642 992.043,651.006 992.602,687.014 993.161,705.303 993.72,673.306 994.28,679.468 994.839,680.738 995.398,663.842 995.957,662.573 996.517,667.313 997.076,652.415 997.635,668.167 998.194,671.562 998.754,691.165 999.313,709.182 999.872,690.901 1000.43,678.762 1000.99,697.873 1001.55,683.318 1002.11,698.747 1002.67,684.953 1003.23,671.445 1003.79,684.806 1004.35,699.18 1004.91,682.737 1005.46,700.568 1006.02,680.69 1006.58,680.103 1007.14,717.643 1007.7,716.696 1008.26,696.042 1008.82,662.62 1009.38,650.438 1009.94,666.626 1010.5,713.084 1011.06,727.864 1011.62,710.086 1012.18,723.94 1012.73,771.202 1013.29,748.68 1013.85,741.273 1014.41,723.065 1014.97,719.482 1015.53,703.157 1016.09,763.062 1016.65,787.161 1017.21,785.648 1017.77,765.978 1018.33,761.229 1018.89,753.666 1019.45,752.072 1020.01,747.908 1020.56,730.123 1021.12,761.598 1021.68,692.243 1022.24,673.568 1022.8,676.239 1023.36,711.64 1023.92,709.207 1024.48,690.744 1025.04,705.647 1025.6,703.064 1026.16,698.604 1026.72,698.459 1027.28,666.922 1027.83,670.058 1028.39,671.141 1028.95,673.019 1029.51,739.893 1030.07,721.519 1030.63,702.299 1031.19,714.086 1031.75,669.192 1032.31,668.98 1032.87,654.987 1033.43,623.426 1033.99,606.061 1034.55,609.906 1035.1,644.624 1035.66,613.575 1036.22,620.021 1036.78,623.964 1037.34,609.89 1037.9,661.088 1038.46,678.796 1039.02,682.299 1039.58,684.314 1040.14,701.913 1040.7,702.119 1041.26,731.626 1041.82,728.674 1042.38,672.116 1042.93,687.129 1043.49,654.994 1044.05,639.145 1044.61,623.691 1045.17,627.84 1045.73,614.991 1046.29,551.467 1046.85,553.328 1047.41,578.696 1047.97,580.77 1048.53,568.4 1049.09,575.164 1049.65,564.526 1050.2,552.699 1050.76,545.12 1051.32,550.928 1051.88,555.542 1052.44,578.351 1053,631.262 1053.56,631.593 1054.12,617.397 1054.68,635.88 1055.24,670.436 1055.8,639.673 1056.36,642.513 1056.92,647.48 1057.48,669.52 1058.03,670.222 1058.59,656.44 1059.15,641.544 1059.71,656.387 1060.27,656.618 1060.83,656.708 1061.39,675.792 1061.95,676.082 1062.51,674.464 1063.07,640.06 1063.63,658.585 1064.19,627.274 1064.75,596.14 1065.3,582.964 1065.86,572.974 1066.42,561.521 1066.98,571.037 1067.54,611.787 1068.1,635.947 1068.66,654.854 1069.22,657.725 1069.78,661.931 1070.34,677.88 1070.9,681.74 1071.46,701.166 1072.02,716.062 1072.57,713.354 1073.13,679.205 1073.69,665.435 1074.25,665.393 1074.81,665.158 1075.37,666.104 1075.93,665.604 1076.49,634.113 1077.05,624.989 1077.61,625.784 1078.17,678.663 1078.73,678.598 1079.29,676.22 1079.85,663.533 1080.4,664.507 1080.96,678.562 1081.52,645.51 1082.08,649.801 1082.64,683.653 1083.2,667.271 1083.76,682.075 1084.32,716.792 1084.88,733.925 1085.44,713.938 1086,730.219 1086.56,730.509 1087.12,745.501 1087.67,773.008 1088.23,765.972 1088.79,760.882 1089.35,772.857 1089.91,752.861 1090.47,762.783 1091.03,791.483 1091.59,803.733 1092.15,796.453 1092.71,755.958 1093.27,751.043 1093.83,729.407 1094.39,711.665 1094.94,693.584 1095.5,672.519 1096.06,689.141 1096.62,676.515 1097.18,645.444 1097.74,649.072 1098.3,647.137 1098.86,667.509 1099.42,683.084 1099.98,683.964 1100.54,652.793 1101.1,654.577 1101.66,658.622 1102.22,641.914 1102.77,659.601 1103.33,641.794 1103.89,655.65 1104.45,620.705 1105.01,642.511 1105.57,629.64 1106.13,634.081 1106.69,637.677 1107.25,623.376 1107.81,629.854 1108.37,632.804 1108.93,618.064 1109.49,620.496 1110.04,640.027 1110.6,673.72 1111.16,660.403 1111.72,660.719 1112.28,644.837 1112.84,646.443 1113.4,662.739 1113.96,662.389 1114.52,678.956 1115.08,665.128 1115.64,680.321 1116.2,684.817 1116.76,683.534 1117.31,699.449 1117.87,680.89 1118.43,701.006 1118.99,687.805 1119.55,701.837 1120.11,704.339 1120.67,750.127 1121.23,727.839 1121.79,724.725 1122.35,753.591 1122.91,781.531 1123.47,776.967 1124.03,773.94 1124.59,800.691 1125.14,796.629 1125.7,789.863 1126.26,766.475 1126.82,761.503 1127.38,730.213 1127.94,759.589 1128.5,773.66 1129.06,766.951 1129.62,744.919 1130.18,723.139 1130.74,716.933 1131.3,700.717 1131.86,667.924 1132.41,683.461 1132.97,714.177 1133.53,697.633 1134.09,777.382 1134.65,791.777 1135.21,803.463 1135.77,793.968 1136.33,807.192 1136.89,828.605 1137.45,804.928 1138.01,862.611 1138.57,821.255 1139.13,798.9 1139.68,808.781 1140.24,835.531 1140.8,827.631 1141.36,836.159 1141.92,827.973 1142.48,801.307 1143.04,764.205 1143.6,729.15 1144.16,725.317 1144.72,722.974 1145.28,706.232 1145.84,718.915 1146.4,703.223 1146.96,669.641 1147.51,699.891 1148.07,730.646 1148.63,712.85 1149.19,695.668 1149.75,709.371 1150.31,673.517 1150.87,671.477 1151.43,721.838 1151.99,749.449 1152.55,763.76 1153.11,787.662 1153.67,779.744 1154.23,792.436 1154.78,786.839 1155.34,765.056 1155.9,759.475 1156.46,785.303 1157.02,782.582 1157.58,789.725 1158.14,750.476 1158.7,699.792 1159.26,664.75 1159.82,680.779 1160.38,731.99 1160.94,681.398 1161.5,666.83 1162.05,651.405 1162.61,651.954 1163.17,635.26 1163.73,649.942 1164.29,683.344 1164.85,713.228 1165.41,713.699 1165.97,747.33 1166.53,723.609 1167.09,688.322 1167.65,666.916 1168.21,633.051 1168.77,637.281 1169.33,656.254 1169.88,657.631 1170.44,640.935 1171,656.496 1171.56,656.242 1172.12,624.399 1172.68,598.148 1173.24,601.96 1173.8,618.475 1174.36,637.882 1174.92,657.26 1175.48,693.959 1176.04,725.607 1176.6,719.147 1177.15,682.512 1177.71,701.039 1178.27,702.603 1178.83,652.853 1179.39,721.035 1179.95,700.262 1180.51,696.318 1181.07,679.722 1181.63,663.266 1182.19,695.931 1182.75,677.849 1183.31,665.582 1183.87,632.506 1184.43,652.331 1184.98,653.302 1185.54,640.31 1186.1,626.098 1186.66,679.664 1187.22,678.376 1187.78,649.199 1188.34,666.811 1188.9,667.34 1189.46,665.377 1190.02,652.738 1190.58,624.768 1191.14,659.577 1191.7,643.105 1192.25,641.549 1192.81,628.206 1193.37,666.282 1193.93,666.395 1194.49,621.031 1195.05,622.886 1195.61,626.818 1196.17,615.342 1196.73,600.437 1197.29,603.88 1197.85,608.867 1198.41,647.847 1198.97,632.501 1199.52,636.474 1200.08,605.088 1200.64,593.131 1201.2,584.832 1201.76,577.003 1202.32,598.123 1202.88,663.778 1203.44,699.088 1204,666.946 1204.56,685.394 1205.12,700.438 1205.68,669.525 1206.24,685.072 1206.8,671.217 1207.35,652.061 1207.91,645.48 1208.47,612.882 1209.03,634.157 1209.59,636.684 1210.15,672.533 1210.71,689.51 1211.27,675.899 1211.83,691.404 1212.39,673.479 1212.95,671.843 1213.51,675.594 1214.07,697.257 1214.62,678.526 1215.18,694.492 1215.74,677.556 1216.3,694.045 1216.86,710.835 1217.42,706.988 1217.98,689.503 1218.54,710.893 1219.1,727.703 1219.66,738.3 1220.22,719.492 1220.78,700.408 1221.34,712.761 1221.89,725.744 1222.45,719.609 1223.01,699.499 1223.57,662.61 1224.13,647.951 1224.69,601.863 1225.25,639.569 1225.81,625.534 1226.37,662.043 1226.93,666.042 1227.49,616.996 1228.05,617.304 1228.61,636.986 1229.17,675.374 1229.72,639.793 1230.28,675.984 1230.84,608.163 1231.4,615.407 1231.96,602.787 1232.52,621.74 1233.08,628.841 1233.64,662.194 1234.2,648.496 1234.76,637.597 1235.32,656.783 1235.88,639.899 1236.44,692.832 1236.99,675.151 1237.55,693.921 1238.11,641.82 1238.67,629.496 1239.23,614.893 1239.79,585.622 1240.35,608.513 1240.91,611.494 1241.47,584.013 1242.03,572.869 1242.59,577.724 1243.15,586.934 1243.71,575.257 1244.26,597.776 1244.82,571.885 1245.38,577.661 1245.94,584.846 1246.5,587.918 1247.06,596.669 1247.62,603.012 1248.18,626.977 1248.74,633.002 1249.3,605.245 1249.86,609.999 1250.42,581.65 1250.98,588.703 1251.54,609.761 1252.09,615.456 1252.65,617.797 1253.21,622.194 1253.77,605.324 1254.33,594.735 1254.89,600.621 1255.45,636.527 1256.01,622.314 1256.57,639.798 1257.13,630.45 1257.69,630.88 1258.25,634.941 1258.81,654.194 1259.36,660.863 1259.92,663.779 1260.48,669.401 1261.04,708.878 1261.6,693.211 1262.16,709.949 1262.72,690.415 1263.28,705.226 1263.84,721.454 1264.4,703.993 1264.96,703.091 1265.52,706.564 1266.08,737.075 1266.63,714.203 1267.19,730.762 1267.75,730.788 1268.31,726.798 1268.87,704.87 1269.43,721.337 1269.99,717.471 1270.55,714.736 1271.11,713.404 1271.67,711.264 1272.23,756.838 1272.79,768.74 1273.35,827.715 1273.91,821.183 1274.46,779.621 1275.02,787.711 1275.58,765.449 1276.14,808.893 1276.7,753.163 1277.26,750.168 1277.82,781.746 1278.38,790.472 1278.94,791.511 1279.5,767.45 1280.06,762.104 1280.62,741.126 1281.18,735.649 1281.73,735.594 1282.29,731.494 1282.85,731.495 1283.41,710.483 1283.97,691.755 1284.53,691.373 1285.09,688.658 1285.65,717.376 1286.21,718.434 1286.77,734.208 1287.33,735.237 1287.89,731.904 1288.45,744.916 1289,738.748 1289.56,736.357 1290.12,748.746 1290.68,725.419 1291.24,770.343 1291.8,783.935 1292.36,789.654 1292.92,768.165 1293.48,750.58 1294.04,714.21 1294.6,711.989 1295.16,693.459 1295.72,710.534 1296.28,695.307 1296.83,742.53 1297.39,756.648 1297.95,756.25 1298.51,721.911 1299.07,703.469 1299.63,668.173 1300.19,669.1 1300.75,655.152 1301.31,657.697 1301.87,656.811 1302.43,658.107 1302.99,641.624 1303.55,645.933 1304.1,634.64 1304.66,623.228 1305.22,626.53 1305.78,648.137 1306.34,669.473 1306.9,671.84 1307.46,639.293 1308.02,672.304 1308.58,669.629 1309.14,686.449 1309.7,733.498 1310.26,748.406 1310.82,756.863 1311.38,785.034 1311.93,795.948 1312.49,776.436 1313.05,755.941 1313.61,767.577 1314.17,759.807 1314.73,770.77 1315.29,783.255 1315.85,795.659 1316.41,740.234 1316.97,736.759 1317.53,752.765 1318.09,733.903 1318.65,750.895 1319.2,762.292 1319.76,775.399 1320.32,723.144 1320.88,686.401 1321.44,688.624 1322,686.143 1322.56,636.948 1323.12,606.503 1323.68,596.825 1324.24,603.393 1324.8,641.711 1325.36,627.69 1325.92,627.494 1326.47,645.903 1327.03,631.965 1327.59,669.06 1328.15,653.998 1328.71,688.67 1329.27,686.298 1329.83,684.765 1330.39,686.286 1330.95,732.269 1331.51,732.588 1332.07,749.343 1332.63,713.964 1333.19,681.35 1333.75,684.403 1334.3,669.03 1334.86,654.393 1335.42,669.854 1335.98,688.008 1336.54,636.217 1337.1,672.955 1337.66,674.758 1338.22,673.604 1338.78,658.501 1339.34,657.796 1339.9,673.854 1340.46,658.738 1341.02,642.86 1341.57,676.091 1342.13,660.91 1342.69,681.448 1343.25,684.466 1343.81,654.23 1344.37,674.74 1344.93,693.266 1345.49,674.935 1346.05,643.592 1346.61,632.629 1347.17,606.158 1347.73,607.608 1348.29,644.823 1348.84,648.907 1349.4,671.615 1349.96,688.919 1350.52,704.679 1351.08,687.018 1351.64,690.156 1352.2,687.873 1352.76,686.611 1353.32,703.784 1353.88,686.259 1354.44,669.66 1355,637.642 1355.56,675.123 1356.12,646.624 1356.67,644.06 1357.23,646.225 1357.79,648.606 1358.35,667.593 1358.91,667.072 1359.47,701.738 1360.03,717.453 1360.59,730.58 1361.15,707.942 1361.71,707.97 1362.27,705.675 1362.83,653.319 1363.39,621.958 1363.94,607.54 1364.5,611.276 1365.06,565.433 1365.62,588.88 1366.18,589.194 1366.74,559.409 1367.3,583.068 1367.86,569.829 1368.42,560.183 1368.98,535.617 1369.54,527.704 1370.1,550.418 1370.66,555.596 1371.21,580.216 1371.77,572.083 1372.33,610.302 1372.89,633.51 1373.45,621.246 1374.01,612.222 1374.57,601.9 1375.13,594.469 1375.69,601.626 1376.25,603.365 1376.81,572.736 1377.37,607.568 1377.93,627.487 1378.49,627.848 1379.04,601.346 1379.6,573.869 1380.16,597.348 1380.72,587.734 1381.28,626.681 1381.84,668.219 1382.4,667.555 1382.96,669.24 1383.52,689.234 1384.08,707.918 1384.64,727.419 1385.2,744.272 1385.76,724.89 1386.31,723.904 1386.87,724.449 1387.43,755.14 1387.99,767.923 1388.55,780.052 1389.11,756.73 1389.67,751.502 1390.23,796.095 1390.79,809.3 1391.35,821.163 1391.91,828.252 1392.47,819.305 1393.03,797.434 1393.58,822.821 1394.14,844.325 1394.7,849.395 1395.26,791.014 1395.82,767.382 1396.38,750.188 1396.94,747.072 1397.5,791.168 1398.06,738.918 1398.62,717.384 1399.18,699.652 1399.74,713.928 1400.3,711.947 1400.86,727.224 1401.41,711.372 1401.97,709.042 1402.53,711.235 1403.09,707.544 1403.65,725.147 1404.21,672.749 1404.77,658.342 1405.33,655.094 1405.89,659.097 1406.45,661.751 1407.01,692.702 1407.57,688 1408.13,671.701 1408.68,705.387 1409.24,703.045 1409.8,718.225 1410.36,734.058 1410.92,713.837 1411.48,696.367 1412.04,709.214 1412.6,705.074 1413.16,705.63 1413.72,687.783 1414.28,670.185 1414.84,723.649 1415.4,738.681 1415.95,735.769 1416.51,747.496 1417.07,728.146 1417.63,743.784 1418.19,755.581 1418.75,766.911 1419.31,762.509 1419.87,808.901 1420.43,784.305 1420.99,810.808 1421.55,788.679 1422.11,783.971 1422.67,796.497 1423.23,821.095 1423.78,815.8 1424.34,816.284 1424.9,809.677 1425.46,836.943 1426.02,811.403 1426.58,820.51 1427.14,815.638 1427.7,839.931 1428.26,815.119 1428.82,823.11 1429.38,814.22 1429.94,820.81 1430.5,827.939 1431.05,821.83 1431.61,797.668 1432.17,773.147 1432.73,785.508 1433.29,765.188 1433.85,760.767 1434.41,726.449 1434.97,706.293 1435.53,656.296 1436.09,657.476 1436.65,670.027 1437.21,618.148 1437.77,603.895 1438.33,623.591 1438.88,627.521 1439.44,647.076 1440,649.87 1440.56,620.523 1441.12,622.641 1441.68,622.79 1442.24,640.565 1442.8,673.412 1443.36,636.233 1443.92,652.264 1444.48,687.024 1445.04,688.663 1445.6,690.418 1446.15,703.377 1446.71,670.512 1447.27,624.223 1447.83,625.976 1448.39,595.754 1448.95,599.253 1449.51,586.426 1450.07,603.83 1450.63,641.286 1451.19,630.547 1451.75,664.172 1452.31,667.096 1452.87,701.804 1453.42,684.151 1453.98,686.159 1454.54,699.639 1455.1,696.47 1455.66,664.92 1456.22,632.95 1456.78,616.79 1457.34,633.518 1457.9,635.963 1458.46,640.658 1459.02,660.546 1459.58,664.583 1460.14,647.716 1460.7,666.256 1461.25,680.727 1461.81,648.607 1462.37,682.55 1462.93,682.569 1463.49,702.067 1464.05,701.346 1464.61,700.293 1465.17,703.865 1465.73,657.637 1466.29,708.742 1466.85,695.14 1467.41,742.611 1467.97,706.031 1468.52,702.395 1469.08,716.087 1469.64,715.65 1470.2,714.749 1470.76,715.477 1471.32,713.189 1471.88,680.931 1472.44,665.13 1473,635.485 1473.56,651.484 1474.12,670.474 1474.68,655.936 1475.24,640.344 1475.79,628.427 1476.35,632.97 1476.91,638.9 1477.47,642.385 1478.03,642.253 1478.59,656.306 1479.15,627.338 1479.71,664.297 1480.27,664.894 1480.83,668.567 1481.39,651.709 1481.95,637.601 1482.51,656.405 1483.07,671.271 1483.62,635.56 1484.18,640.944 1484.74,641.028 1485.3,658.884 1485.86,690.425 1486.42,722.075 1486.98,703.23 1487.54,725.384 1488.1,709.884 1488.66,709.912 1489.22,709.132 1489.78,726.424 1490.34,723.965 1490.89,691.114 1491.45,705.61 1492.01,717.663 1492.57,686.249 1493.13,703.84 1493.69,703.335 1494.25,719.263 1494.81,720.352 1495.37,733.274 1495.93,709.952 1496.49,708.493 1497.05,726.19 1497.61,708.734 1498.16,750.626 1498.72,763.92 1499.28,779.301 1499.84,788.332 1500.4,781.933 1500.96,794.505 1501.52,773.062 1502.08,800.119 1502.64,795.09 1503.2,819.707 1503.76,783.345 1504.32,776.519 1504.88,738.094 1505.44,752.474 1505.99,730.566 1506.55,727.761 1507.11,756.336 1507.67,737.291 1508.23,719.954 1508.79,687.031 1509.35,702.474 1509.91,718.35 1510.47,719.609 1511.03,669.353 1511.59,674.118 1512.15,688.053 1512.71,706.225 1513.26,704.082 1513.82,716.711 1514.38,679.75 1514.94,679.15 1515.5,660.51 1516.06,662.917 1516.62,647.047 1517.18,665.165 1517.74,648.32 1518.3,651.094 1518.86,638.901 1519.42,622.368 1519.98,609.495 1520.53,612.035 1521.09,616.067 1521.65,588.937 1522.21,610.949 1522.77,597.767 1523.33,599.241 1523.89,618.976 1524.45,655.226 1525.01,653.258 1525.57,672.035 1526.13,654.221 1526.69,624.808 1527.25,626.208 1527.81,645.346 1528.36,646.685 1528.92,648.807 1529.48,618.202 1530.04,619.48 1530.6,638.791 1531.16,623.586 1531.72,596.273 1532.28,618.102 1532.84,637.951 1533.4,620.729 1533.96,627.551 1534.52,633.061 1535.08,601.485 1535.63,604.307 1536.19,594.319 1536.75,620.694 1537.31,641.27 1537.87,660.552 1538.43,677.292 1538.99,664.146 1539.55,699.773 1540.11,637.391 1540.67,656.369 1541.23,669.678 1541.79,684.9 1542.35,699.566 1542.9,697.35 1543.46,698.844 1544.02,681.671 1544.58,678.254 1545.14,677.11 1545.7,662.088 1546.26,648.541 1546.82,649.791 1547.38,623.044 1547.94,643.041 1548.5,648.169 1549.06,667.113 1549.62,716.357 1550.18,710.749 1550.73,725.686 1551.29,771.645 1551.85,765.327 1552.41,762.391 1552.97,757.117 1553.53,751.616 1554.09,728.751 1554.65,745.068 1555.21,737.166 1555.77,739.239 1556.33,734.652 1556.89,751.78 1557.45,763.594 1558,724.148 1558.56,719.803 1559.12,690.029 1559.68,718.922 1560.24,729.785 1560.8,741.889 1561.36,751.204 1561.92,749.586 1562.48,732.763 1563.04,697.403 1563.6,697.36 1564.16,694.543 1564.72,690.476 1565.28,658.557 1565.83,660.637 1566.39,650.02 1566.95,635.475 1567.51,636.927 1568.07,621.722 1568.63,624.502 1569.19,657.34 1569.75,661.545 1570.31,662.494 1570.87,633.973 1571.43,634.262 1571.99,636.87 1572.55,591.645 1573.1,599.536 1573.66,573.425 1574.22,582.666 1574.78,575.004 1575.34,601.938 1575.9,585.361 1576.46,589.667 1577.02,561.947 1577.58,554.454 1578.14,512.972 1578.7,591.451 1579.26,596.52 1579.82,602.924 1580.37,626.062 1580.93,647.003 1581.49,636.095 1582.05,682.742 1582.61,702.532 1583.17,718.047 1583.73,718.11 1584.29,749.822 1584.85,744.404 1585.41,774.184 1585.97,787.095 1586.53,780.599 1587.09,779.263 1587.65,792.127 1588.2,786.807 1588.76,764.797 1589.32,725.438 1589.88,707.422 1590.44,719.52 1591,713.476 1591.56,709.957 1592.12,691.512 1592.68,705.021 1593.24,670.871 1593.8,604.566 1594.36,608.799 1594.92,573.64 1595.47,559.904 1596.03,602.436 1596.59,587.886 1597.15,593.207 1597.71,599.946 1598.27,602.359 1598.83,607.34 1599.39,625.934 1599.95,610.199 1600.51,643.373 1601.07,645.537 1601.63,661.837 1602.19,699.068 1602.74,685.083 1603.3,683.695 1603.86,717.498 1604.42,746.489 1604.98,725.764 1605.54,708.93 1606.1,688.411 1606.66,673.1 1607.22,656.087 1607.78,673.378 1608.34,705.536 1608.9,671.365 1609.46,669.649 1610.02,671.011 1610.57,670.887 1611.13,638.875 1611.69,643.778 1612.25,660.91 1612.81,677.76 1613.37,661.346 1613.93,662.152 1614.49,692.246 1615.05,676.8 1615.61,693.172 1616.17,675.574 1616.73,741.453 1617.29,769.137 1617.84,766.434 1618.4,746.029 1618.96,773.468 1619.52,769.913 1620.08,780.368 1620.64,794.584 1621.2,771.146 1621.76,766.556 1622.32,763.165 1622.88,757.193 1623.44,753.203 1624,777.568 1624.56,758.773 1625.11,772.196 1625.67,768.318 1626.23,760.012 1626.79,786.394 1627.35,748.803 1627.91,744.793 1628.47,739.794 1629.03,703.11 1629.59,689.316 1630.15,706.037 1630.71,659.601 1631.27,631.446 1631.83,619.215 1632.39,654.125 1632.94,641.686 1633.5,643.686 1634.06,662.905 1634.62,648.837 1635.18,665.964 1635.74,668.999 1636.3,686.031 1636.86,655.739 1637.42,674.254 1637.98,689.423 1638.54,706.266 1639.1,704.09 1639.66,670.572 1640.21,688.238 1640.77,685.721 1641.33,636.3 1641.89,689.372 1642.45,671.719 1643.01,689.931 1643.57,656.427 1644.13,690.952 1644.69,707.412 1645.25,690.531 1645.81,722.692 1646.37,752.885 1646.93,715.531 1647.48,707.535 1648.04,704.739 1648.6,717.839 1649.16,732.903 1649.72,746.182 1650.28,709.641 1650.84,691.529 1651.4,689.807 1651.96,704.31 1652.52,703.335 1653.08,708.069 1653.64,709.508 1654.2,691.573 1654.76,736.984 1655.31,717.385 1655.87,732.498 1656.43,746.928 1656.99,726.61 1657.55,788.678 1658.11,796.507 1658.67,805.116 1659.23,784.852 1659.79,775.936 1660.35,783.988 1660.91,764.157 1661.47,793.389 1662.03,790.593 1662.58,768.346 1663.14,765.67 1663.7,744.648 1664.26,708.847 1664.82,706.679 1665.38,690.004 1665.94,638.181 1666.5,606.006 1667.06,576.195 1667.62,599.503 1668.18,589.138 1668.74,590.659 1669.3,611.697 1669.85,598.816 1670.41,584.506 1670.97,606.305 1671.53,625.84 1672.09,630.712 1672.65,615.995 1673.21,635.005 1673.77,636.089 1674.33,602.968 1674.89,557.068 1675.45,494.364 1676.01,518.603 1676.57,528.336 1677.13,556.306 1677.68,608.182 1678.24,596.627 1678.8,623.795 1679.36,595.873 1679.92,618.302 1680.48,653.356 1681.04,689.181 1681.6,718.205 1682.16,701.48 1682.72,715.772 1683.28,713.966 1683.84,730.405 1684.4,712.345 1684.95,712.035 1685.51,706.479 1686.07,673.739 1686.63,691.593 1687.19,720.485 1687.75,688.896 1688.31,676.036 1688.87,646.787 1689.43,635.116 1689.99,625.238 1690.55,655.678 1691.11,659.549 1691.67,694.061 1692.23,728.126 1692.78,725.944 1693.34,724.958 1693.9,723.684 1694.46,671.144 1695.02,689.687 1695.58,690.266 1696.14,691.996 1696.7,677.184 1697.26,663.968 1697.82,679.138 1698.38,710.586 1698.94,676.421 1699.5,661.7 1700.05,679.78 1700.61,694.319 1701.17,695.273 1701.73,680.883 1702.29,698.496 1702.85,695.968 1703.41,696.58 1703.97,729.15 1704.53,712.23 1705.09,699.37 1705.65,697.252 1706.21,647.922 1706.77,652.819 1707.32,660.544 1707.88,628.739 1708.44,630.258 1709,635.366 1709.56,640.048 1710.12,641.131 1710.68,660.342 1711.24,648.964 1711.8,648.978 1712.36,651.167 1712.92,622.904 1713.48,613.601 1714.04,636.514 1714.6,671.19 1715.15,687.91 1715.71,704.535 1716.27,735.036 1716.83,702.49 1717.39,633.849 1717.95,655.077 1718.51,674.993 1719.07,673.167 1719.63,672.128 1720.19,687.51 1720.75,670.739 1721.31,701.781 1721.87,714.617 1722.42,729.349 1722.98,761.672 1723.54,773.03 1724.1,765.468 1724.66,744.908 1725.22,712.421 1725.78,713.28 1726.34,693.431 1726.9,691.748 1727.46,723.836 1728.02,751.989 1728.58,749.302 1729.14,744.016 1729.69,713.207 1730.25,743.854 1730.81,725.666 1731.37,705.323 1731.93,722.236 1732.49,702.784 1733.05,716.113 1733.61,695.525 1734.17,693.664 1734.73,709.565 1735.29,707.026 1735.85,687.299 1736.41,652.424 1736.97,672.014 1737.52,658.856 1738.08,676.692 1738.64,661.855 1739.2,641.2 1739.76,644.397 1740.32,583.869 1740.88,592.427 1741.44,579.95 1742,633.42 1742.56,619.13 1743.12,607.607 1743.68,629 1744.24,632.478 1744.79,634.012 1745.35,631.484 1745.91,615.909 1746.47,599.97 1747.03,603.867 1747.59,608.086 1748.15,615.823 1748.71,604.488 1749.27,563.19 1749.83,585.469 1750.39,593.079 1750.95,601.734 1751.51,603.71 1752.06,593.09 1752.62,597.348 1753.18,590.715 1753.74,629.228 1754.3,636.846 1754.86,624.095 1755.42,609.334 1755.98,627.955 1756.54,643.008 1757.1,627.566 1757.66,634.536 1758.22,652.831 1758.78,686.493 1759.34,686.53 1759.89,671.962 1760.45,657.953 1761.01,674.968 1761.57,693.001 1762.13,675.698 1762.69,691.97 1763.25,694.447 1763.81,662.128 1764.37,665.169 1764.93,680.262 1765.49,634.018 1766.05,588.009 1766.61,593.561 1767.16,598.275 1767.72,604.217 1768.28,640.918 1768.84,690.502 1769.4,690.451 1769.96,690.596 1770.52,706.485 1771.08,723.206 1771.64,724.454 1772.2,720.684 1772.76,702.911 1773.32,717.893 1773.88,718.819 1774.43,716.536 1774.99,716.07 1775.55,713.791 1776.11,677.981 1776.67,725.999 1777.23,723.098 1777.79,723.963 1778.35,704.292 1778.91,685.631 1779.47,697.98 1780.03,678.997 1780.59,696.039 1781.15,690.556 1781.71,671.916 1782.26,688.42 1782.82,687.834 1783.38,718.933 1783.94,733.358 1784.5,763.06 1785.06,788.518 1785.62,798.033 1786.18,809.779 1786.74,788.626 1787.3,801.478 1787.86,746.839 1788.42,693.555 1788.98,689.413 1789.53,689.876 1790.09,689.699 1790.65,686.137 1791.21,703.894 1791.77,717.083 1792.33,699.5 1792.89,663.683 1793.45,631.378 1794.01,618.065 1794.57,606.116 1795.13,610.301 1795.69,610.541 1796.25,646.122 1796.8,664.157 1797.36,665.561 1797.92,665.097 1798.48,664.734 1799.04,668.018 1799.6,668.449 1800.16,654.058 1800.72,669.29 1801.28,669.726 1801.84,670.31 1802.4,672.199 1802.96,671.181 1803.52,707.768 1804.08,705.349 1804.63,706.08 1805.19,723.244 1805.75,751.969 1806.31,781.899 1806.87,774.576 1807.43,767.679 1807.99,764.984 1808.55,776.955 1809.11,752.96 1809.67,732.646 1810.23,714.359 1810.79,713.121 1811.35,709.567 1811.9,707.376 1812.46,708.165 1813.02,760.303 1813.58,737.285 1814.14,768.12 1814.7,745.72 1815.26,743.44 1815.82,723.857 1816.38,708.903 1816.94,740.837 1817.5,738.726 1818.06,704.337 1818.62,704.859 1819.18,720.211 1819.73,717.723 1820.29,712.398 1820.85,728.482 1821.41,707.605 1821.97,703.376 1822.53,700.813 1823.09,700.683 1823.65,684.866 1824.21,663.368 1824.77,683.108 1825.33,668.537 1825.89,668.427 1826.45,670.908 1827,673.085 1827.56,654.211 1828.12,624.703 1828.68,596.614 1829.24,634.055 1829.8,638.319 1830.36,626.146 1830.92,629.647 1831.48,633.905 1832.04,653.459 1832.6,670.275 1833.16,653.054 1833.72,653.112 1834.27,656.051 1834.83,654.753 1835.39,660.463 1835.95,659.953 1836.51,662.12 1837.07,647.639 1837.63,627.725 1838.19,616.042 \"/>\n<path clip-path=\"url(#clip923)\" d=\"M720.247 689.641 L720.806 689.641 L721.365 689.641 L721.924 689.641 L722.484 689.641 L723.043 689.641 L723.602 689.641 L724.161 689.641 L724.721 689.641 L725.28 689.641 L725.839 689.641 L726.398 689.641 L726.958 689.641 L727.517 689.641 L728.076 689.641 L728.635 689.641 L729.195 689.641 L729.754 689.641 L730.313 689.641 L730.872 689.641 L731.432 689.641 L731.991 689.641 L732.55 689.641 L733.109 689.641 L733.669 689.641 L734.228 689.641 L734.787 689.641 L735.346 689.641 L735.906 689.641 L736.465 689.641 L737.024 689.641 L737.583 689.641 L738.143 689.641 L738.702 689.641 L739.261 689.641 L739.82 689.641 L740.38 689.641 L740.939 689.641 L741.498 689.641 L742.057 689.641 L742.617 689.641 L743.176 689.641 L743.735 689.641 L744.294 689.641 L744.854 689.641 L745.413 689.641 L745.972 689.641 L746.531 689.641 L747.091 689.641 L747.65 689.641 L748.209 689.641 L748.768 689.641 L749.328 689.641 L749.887 689.641 L750.446 689.641 L751.005 689.641 L751.565 689.641 L752.124 689.641 L752.683 689.641 L753.242 689.641 L753.802 689.641 L754.361 689.641 L754.92 689.641 L755.479 689.641 L756.039 689.641 L756.598 689.641 L757.157 689.641 L757.716 689.641 L758.276 689.641 L758.835 689.641 L759.394 689.641 L759.953 689.641 L760.513 689.641 L761.072 689.641 L761.631 689.641 L762.19 689.641 L762.75 689.641 L763.309 689.641 L763.868 689.641 L764.427 689.641 L764.987 689.641 L765.546 689.641 L766.105 689.641 L766.664 689.641 L767.224 689.641 L767.783 689.641 L768.342 689.641 L768.901 689.641 L769.461 689.641 L770.02 689.641 L770.579 689.641 L771.138 689.641 L771.698 689.641 L772.257 689.641 L772.816 689.641 L773.375 689.641 L773.935 689.641 L774.494 689.641 L775.053 689.641 L775.612 689.641 L776.172 689.641 L776.731 689.641 L777.29 689.641 L777.849 689.641 L778.409 689.641 L778.968 689.641 L779.527 689.641 L780.086 689.641 L780.646 689.641 L781.205 689.641 L781.764 689.641 L782.323 689.641 L782.883 689.641 L783.442 689.641 L784.001 689.641 L784.56 689.641 L785.12 689.641 L785.679 689.641 L786.238 689.641 L786.797 689.641 L787.357 689.641 L787.916 689.641 L788.475 689.641 L789.034 689.641 L789.594 689.641 L790.153 689.641 L790.712 689.641 L791.271 689.641 L791.831 689.641 L792.39 689.641 L792.949 689.641 L793.508 689.641 L794.068 689.641 L794.627 689.641 L795.186 689.641 L795.745 689.641 L796.305 689.641 L796.864 689.641 L797.423 689.641 L797.982 689.641 L798.542 689.641 L799.101 689.641 L799.66 689.641 L800.219 689.641 L800.779 689.641 L801.338 689.641 L801.897 689.641 L802.456 689.641 L803.016 689.641 L803.575 689.641 L804.134 689.641 L804.693 689.641 L805.253 689.641 L805.812 689.641 L806.371 689.641 L806.931 689.641 L807.49 689.641 L808.049 689.641 L808.608 689.641 L809.168 689.641 L809.727 689.641 L810.286 689.641 L810.845 689.641 L811.405 689.641 L811.964 689.641 L812.523 689.641 L813.082 689.641 L813.642 689.641 L814.201 689.641 L814.76 689.641 L815.319 689.641 L815.879 689.641 L816.438 689.641 L816.997 689.641 L817.556 689.641 L818.116 689.641 L818.675 689.641 L819.234 689.641 L819.793 689.641 L820.353 689.641 L820.912 689.641 L821.471 689.641 L822.03 689.641 L822.59 689.641 L823.149 689.641 L823.708 689.641 L824.267 689.641 L824.827 689.641 L825.386 689.641 L825.945 689.641 L826.504 689.641 L827.064 689.641 L827.623 689.641 L828.182 689.641 L828.741 689.641 L829.301 689.641 L829.86 689.641 L830.419 689.641 L830.978 689.641 L831.538 689.641 L832.097 689.641 L832.656 689.641 L833.215 689.641 L833.775 689.641 L834.334 689.641 L834.893 689.641 L835.452 689.641 L836.012 689.641 L836.571 689.641 L837.13 689.641 L837.689 689.641 L838.249 689.641 L838.808 689.641 L839.367 689.641 L839.926 689.641 L840.486 689.641 L841.045 689.641 L841.604 689.641 L842.163 689.641 L842.723 689.641 L843.282 689.641 L843.841 689.641 L844.4 689.641 L844.96 689.641 L845.519 689.641 L846.078 689.641 L846.637 689.641 L847.197 689.641 L847.756 689.641 L848.315 689.641 L848.874 689.641 L849.434 689.641 L849.993 689.641 L850.552 689.641 L851.111 689.641 L851.671 689.641 L852.23 689.641 L852.789 689.641 L853.348 689.641 L853.908 689.641 L854.467 689.641 L855.026 689.641 L855.585 689.641 L856.145 689.641 L856.704 689.641 L857.263 689.641 L857.822 689.641 L858.382 689.641 L858.941 689.641 L859.5 689.641 L860.059 689.641 L860.619 689.641 L861.178 689.641 L861.737 689.641 L862.296 689.641 L862.856 689.641 L863.415 689.641 L863.974 689.641 L864.533 689.641 L865.093 689.641 L865.652 689.641 L866.211 689.641 L866.77 689.641 L867.33 689.641 L867.889 689.641 L868.448 689.641 L869.007 689.641 L869.567 689.641 L870.126 689.641 L870.685 689.641 L871.244 689.641 L871.804 689.641 L872.363 689.641 L872.922 689.641 L873.481 689.641 L874.041 689.641 L874.6 689.641 L875.159 689.641 L875.718 689.641 L876.278 689.641 L876.837 689.641 L877.396 689.641 L877.955 689.641 L878.515 689.641 L879.074 689.641 L879.633 689.641 L880.192 689.641 L880.752 689.641 L881.311 689.641 L881.87 689.641 L882.429 689.641 L882.989 689.641 L883.548 689.641 L884.107 689.641 L884.666 689.641 L885.226 689.641 L885.785 689.641 L886.344 689.641 L886.903 689.641 L887.463 689.641 L888.022 689.641 L888.581 689.641 L889.14 689.641 L889.7 689.641 L890.259 689.641 L890.818 689.641 L891.377 689.641 L891.937 689.641 L892.496 689.641 L893.055 689.641 L893.614 689.641 L894.174 689.641 L894.733 689.641 L895.292 689.641 L895.851 689.641 L896.411 689.641 L896.97 689.641 L897.529 689.641 L898.088 689.641 L898.648 689.641 L899.207 689.641 L899.766 689.641 L900.325 689.641 L900.885 689.641 L901.444 689.641 L902.003 689.641 L902.562 689.641 L903.122 689.641 L903.681 689.641 L904.24 689.641 L904.799 689.641 L905.359 689.641 L905.918 689.641 L906.477 689.641 L907.036 689.641 L907.596 689.641 L908.155 689.641 L908.714 689.641 L909.273 689.641 L909.833 689.641 L910.392 689.641 L910.951 689.641 L911.51 689.641 L912.07 689.641 L912.629 689.641 L913.188 689.641 L913.747 689.641 L914.307 689.641 L914.866 689.641 L915.425 689.641 L915.984 689.641 L916.544 689.641 L917.103 689.641 L917.662 689.641 L918.221 689.641 L918.781 689.641 L919.34 689.641 L919.899 689.641 L920.458 689.641 L921.018 689.641 L921.577 689.641 L922.136 689.641 L922.695 689.641 L923.255 689.641 L923.814 689.641 L924.373 689.641 L924.932 689.641 L925.492 689.641 L926.051 689.641 L926.61 689.641 L927.169 689.641 L927.729 689.641 L928.288 689.641 L928.847 689.641 L929.406 689.641 L929.966 689.641 L930.525 689.641 L931.084 689.641 L931.644 689.641 L932.203 689.641 L932.762 689.641 L933.321 689.641 L933.881 689.641 L934.44 689.641 L934.999 689.641 L935.558 689.641 L936.118 689.641 L936.677 689.641 L937.236 689.641 L937.795 689.641 L938.355 689.641 L938.914 689.641 L939.473 689.641 L940.032 689.641 L940.592 689.641 L941.151 689.641 L941.71 689.641 L942.269 689.641 L942.829 689.641 L943.388 689.641 L943.947 689.641 L944.506 689.641 L945.066 689.641 L945.625 689.641 L946.184 689.641 L946.743 689.641 L947.303 689.641 L947.862 689.641 L948.421 689.641 L948.98 689.641 L949.54 689.641 L950.099 689.641 L950.658 689.641 L951.217 689.641 L951.777 689.641 L952.336 689.641 L952.895 689.641 L953.454 689.641 L954.014 689.641 L954.573 689.641 L955.132 689.641 L955.691 689.641 L956.251 689.641 L956.81 689.641 L957.369 689.641 L957.928 689.641 L958.488 689.641 L959.047 689.641 L959.606 689.641 L960.165 689.641 L960.725 689.641 L961.284 689.641 L961.843 689.641 L962.402 689.641 L962.962 689.641 L963.521 689.641 L964.08 689.641 L964.639 689.641 L965.199 689.641 L965.758 689.641 L966.317 689.641 L966.876 689.641 L967.436 689.641 L967.995 689.641 L968.554 689.641 L969.113 689.641 L969.673 689.641 L970.232 689.641 L970.791 689.641 L971.35 689.641 L971.91 689.641 L972.469 689.641 L973.028 689.641 L973.587 689.641 L974.147 689.641 L974.706 689.641 L975.265 689.641 L975.824 689.641 L976.384 689.641 L976.943 689.641 L977.502 689.641 L978.061 689.641 L978.621 689.641 L979.18 689.641 L979.739 689.641 L980.298 689.641 L980.858 689.641 L981.417 689.641 L981.976 689.641 L982.535 689.641 L983.095 689.641 L983.654 689.641 L984.213 689.641 L984.772 689.641 L985.332 689.641 L985.891 689.641 L986.45 689.641 L987.009 689.641 L987.569 689.641 L988.128 689.641 L988.687 689.641 L989.246 689.641 L989.806 689.641 L990.365 689.641 L990.924 689.641 L991.483 689.641 L992.043 689.641 L992.602 689.641 L993.161 689.641 L993.72 689.641 L994.28 689.641 L994.839 689.641 L995.398 689.641 L995.957 689.641 L996.517 689.641 L997.076 689.641 L997.635 689.641 L998.194 689.641 L998.754 689.641 L999.313 689.641 L999.872 689.641 L1000.43 689.641 L1000.99 689.641 L1001.55 689.641 L1002.11 689.641 L1002.67 689.641 L1003.23 689.641 L1003.79 689.641 L1004.35 689.641 L1004.91 689.641 L1005.46 689.641 L1006.02 689.641 L1006.58 689.641 L1007.14 689.641 L1007.7 689.641 L1008.26 689.641 L1008.82 689.641 L1009.38 689.641 L1009.94 689.641 L1010.5 689.641 L1011.06 689.641 L1011.62 689.641 L1012.18 689.641 L1012.73 689.641 L1013.29 689.641 L1013.85 689.641 L1014.41 689.641 L1014.97 689.641 L1015.53 689.641 L1016.09 689.641 L1016.65 689.641 L1017.21 689.641 L1017.77 689.641 L1018.33 689.641 L1018.89 689.641 L1019.45 689.641 L1020.01 689.641 L1020.56 689.641 L1021.12 689.641 L1021.68 689.641 L1022.24 689.641 L1022.8 689.641 L1023.36 689.641 L1023.92 689.641 L1024.48 689.641 L1025.04 689.641 L1025.6 689.641 L1026.16 689.641 L1026.72 689.641 L1027.28 689.641 L1027.83 689.641 L1028.39 689.641 L1028.95 689.641 L1029.51 689.641 L1030.07 689.641 L1030.63 689.641 L1031.19 689.641 L1031.75 689.641 L1032.31 689.641 L1032.87 689.641 L1033.43 689.641 L1033.99 689.641 L1034.55 689.641 L1035.1 689.641 L1035.66 689.641 L1036.22 689.641 L1036.78 689.641 L1037.34 689.641 L1037.9 689.641 L1038.46 689.641 L1039.02 689.641 L1039.58 689.641 L1040.14 689.641 L1040.7 689.641 L1041.26 689.641 L1041.82 689.641 L1042.38 689.641 L1042.93 689.641 L1043.49 689.641 L1044.05 689.641 L1044.61 689.641 L1045.17 689.641 L1045.73 689.641 L1046.29 689.641 L1046.85 689.641 L1047.41 689.641 L1047.97 689.641 L1048.53 689.641 L1049.09 689.641 L1049.65 689.641 L1050.2 689.641 L1050.76 689.641 L1051.32 689.641 L1051.88 689.641 L1052.44 689.641 L1053 689.641 L1053.56 689.641 L1054.12 689.641 L1054.68 689.641 L1055.24 689.641 L1055.8 689.641 L1056.36 689.641 L1056.92 689.641 L1057.48 689.641 L1058.03 689.641 L1058.59 689.641 L1059.15 689.641 L1059.71 689.641 L1060.27 689.641 L1060.83 689.641 L1061.39 689.641 L1061.95 689.641 L1062.51 689.641 L1063.07 689.641 L1063.63 689.641 L1064.19 689.641 L1064.75 689.641 L1065.3 689.641 L1065.86 689.641 L1066.42 689.641 L1066.98 689.641 L1067.54 689.641 L1068.1 689.641 L1068.66 689.641 L1069.22 689.641 L1069.78 689.641 L1070.34 689.641 L1070.9 689.641 L1071.46 689.641 L1072.02 689.641 L1072.57 689.641 L1073.13 689.641 L1073.69 689.641 L1074.25 689.641 L1074.81 689.641 L1075.37 689.641 L1075.93 689.641 L1076.49 689.641 L1077.05 689.641 L1077.61 689.641 L1078.17 689.641 L1078.73 689.641 L1079.29 689.641 L1079.85 689.641 L1080.4 689.641 L1080.96 689.641 L1081.52 689.641 L1082.08 689.641 L1082.64 689.641 L1083.2 689.641 L1083.76 689.641 L1084.32 689.641 L1084.88 689.641 L1085.44 689.641 L1086 689.641 L1086.56 689.641 L1087.12 689.641 L1087.67 689.641 L1088.23 689.641 L1088.79 689.641 L1089.35 689.641 L1089.91 689.641 L1090.47 689.641 L1091.03 689.641 L1091.59 689.641 L1092.15 689.641 L1092.71 689.641 L1093.27 689.641 L1093.83 689.641 L1094.39 689.641 L1094.94 689.641 L1095.5 689.641 L1096.06 689.641 L1096.62 689.641 L1097.18 689.641 L1097.74 689.641 L1098.3 689.641 L1098.86 689.641 L1099.42 689.641 L1099.98 689.641 L1100.54 689.641 L1101.1 689.641 L1101.66 689.641 L1102.22 689.641 L1102.77 689.641 L1103.33 689.641 L1103.89 689.641 L1104.45 689.641 L1105.01 689.641 L1105.57 689.641 L1106.13 689.641 L1106.69 689.641 L1107.25 689.641 L1107.81 689.641 L1108.37 689.641 L1108.93 689.641 L1109.49 689.641 L1110.04 689.641 L1110.6 689.641 L1111.16 689.641 L1111.72 689.641 L1112.28 689.641 L1112.84 689.641 L1113.4 689.641 L1113.96 689.641 L1114.52 689.641 L1115.08 689.641 L1115.64 689.641 L1116.2 689.641 L1116.76 689.641 L1117.31 689.641 L1117.87 689.641 L1118.43 689.641 L1118.99 689.641 L1119.55 689.641 L1120.11 689.641 L1120.67 689.641 L1121.23 689.641 L1121.79 689.641 L1122.35 689.641 L1122.91 689.641 L1123.47 689.641 L1124.03 689.641 L1124.59 689.641 L1125.14 689.641 L1125.7 689.641 L1126.26 689.641 L1126.82 689.641 L1127.38 689.641 L1127.94 689.641 L1128.5 689.641 L1129.06 689.641 L1129.62 689.641 L1130.18 689.641 L1130.74 689.641 L1131.3 689.641 L1131.86 689.641 L1132.41 689.641 L1132.97 689.641 L1133.53 689.641 L1134.09 689.641 L1134.65 689.641 L1135.21 689.641 L1135.77 689.641 L1136.33 689.641 L1136.89 689.641 L1137.45 689.641 L1138.01 689.641 L1138.57 689.641 L1139.13 689.641 L1139.68 689.641 L1140.24 689.641 L1140.8 689.641 L1141.36 689.641 L1141.92 689.641 L1142.48 689.641 L1143.04 689.641 L1143.6 689.641 L1144.16 689.641 L1144.72 689.641 L1145.28 689.641 L1145.84 689.641 L1146.4 689.641 L1146.96 689.641 L1147.51 689.641 L1148.07 689.641 L1148.63 689.641 L1149.19 689.641 L1149.75 689.641 L1150.31 689.641 L1150.87 689.641 L1151.43 689.641 L1151.99 689.641 L1152.55 689.641 L1153.11 689.641 L1153.67 689.641 L1154.23 689.641 L1154.78 689.641 L1155.34 689.641 L1155.9 689.641 L1156.46 689.641 L1157.02 689.641 L1157.58 689.641 L1158.14 689.641 L1158.7 689.641 L1159.26 689.641 L1159.82 689.641 L1160.38 689.641 L1160.94 689.641 L1161.5 689.641 L1162.05 689.641 L1162.61 689.641 L1163.17 689.641 L1163.73 689.641 L1164.29 689.641 L1164.85 689.641 L1165.41 689.641 L1165.97 689.641 L1166.53 689.641 L1167.09 689.641 L1167.65 689.641 L1168.21 689.641 L1168.77 689.641 L1169.33 689.641 L1169.88 689.641 L1170.44 689.641 L1171 689.641 L1171.56 689.641 L1172.12 689.641 L1172.68 689.641 L1173.24 689.641 L1173.8 689.641 L1174.36 689.641 L1174.92 689.641 L1175.48 689.641 L1176.04 689.641 L1176.6 689.641 L1177.15 689.641 L1177.71 689.641 L1178.27 689.641 L1178.83 689.641 L1179.39 689.641 L1179.95 689.641 L1180.51 689.641 L1181.07 689.641 L1181.63 689.641 L1182.19 689.641 L1182.75 689.641 L1183.31 689.641 L1183.87 689.641 L1184.43 689.641 L1184.98 689.641 L1185.54 689.641 L1186.1 689.641 L1186.66 689.641 L1187.22 689.641 L1187.78 689.641 L1188.34 689.641 L1188.9 689.641 L1189.46 689.641 L1190.02 689.641 L1190.58 689.641 L1191.14 689.641 L1191.7 689.641 L1192.25 689.641 L1192.81 689.641 L1193.37 689.641 L1193.93 689.641 L1194.49 689.641 L1195.05 689.641 L1195.61 689.641 L1196.17 689.641 L1196.73 689.641 L1197.29 689.641 L1197.85 689.641 L1198.41 689.641 L1198.97 689.641 L1199.52 689.641 L1200.08 689.641 L1200.64 689.641 L1201.2 689.641 L1201.76 689.641 L1202.32 689.641 L1202.88 689.641 L1203.44 689.641 L1204 689.641 L1204.56 689.641 L1205.12 689.641 L1205.68 689.641 L1206.24 689.641 L1206.8 689.641 L1207.35 689.641 L1207.91 689.641 L1208.47 689.641 L1209.03 689.641 L1209.59 689.641 L1210.15 689.641 L1210.71 689.641 L1211.27 689.641 L1211.83 689.641 L1212.39 689.641 L1212.95 689.641 L1213.51 689.641 L1214.07 689.641 L1214.62 689.641 L1215.18 689.641 L1215.74 689.641 L1216.3 689.641 L1216.86 689.641 L1217.42 689.641 L1217.98 689.641 L1218.54 689.641 L1219.1 689.641 L1219.66 689.641 L1220.22 689.641 L1220.78 689.641 L1221.34 689.641 L1221.89 689.641 L1222.45 689.641 L1223.01 689.641 L1223.57 689.641 L1224.13 689.641 L1224.69 689.641 L1225.25 689.641 L1225.81 689.641 L1226.37 689.641 L1226.93 689.641 L1227.49 689.641 L1228.05 689.641 L1228.61 689.641 L1229.17 689.641 L1229.72 689.641 L1230.28 689.641 L1230.84 689.641 L1231.4 689.641 L1231.96 689.641 L1232.52 689.641 L1233.08 689.641 L1233.64 689.641 L1234.2 689.641 L1234.76 689.641 L1235.32 689.641 L1235.88 689.641 L1236.44 689.641 L1236.99 689.641 L1237.55 689.641 L1238.11 689.641 L1238.67 689.641 L1239.23 689.641 L1239.79 689.641 L1240.35 689.641 L1240.91 689.641 L1241.47 689.641 L1242.03 689.641 L1242.59 689.641 L1243.15 689.641 L1243.71 689.641 L1244.26 689.641 L1244.82 689.641 L1245.38 689.641 L1245.94 689.641 L1246.5 689.641 L1247.06 689.641 L1247.62 689.641 L1248.18 689.641 L1248.74 689.641 L1249.3 689.641 L1249.86 689.641 L1250.42 689.641 L1250.98 689.641 L1251.54 689.641 L1252.09 689.641 L1252.65 689.641 L1253.21 689.641 L1253.77 689.641 L1254.33 689.641 L1254.89 689.641 L1255.45 689.641 L1256.01 689.641 L1256.57 689.641 L1257.13 689.641 L1257.69 689.641 L1258.25 689.641 L1258.81 689.641 L1259.36 689.641 L1259.92 689.641 L1260.48 689.641 L1261.04 689.641 L1261.6 689.641 L1262.16 689.641 L1262.72 689.641 L1263.28 689.641 L1263.84 689.641 L1264.4 689.641 L1264.96 689.641 L1265.52 689.641 L1266.08 689.641 L1266.63 689.641 L1267.19 689.641 L1267.75 689.641 L1268.31 689.641 L1268.87 689.641 L1269.43 689.641 L1269.99 689.641 L1270.55 689.641 L1271.11 689.641 L1271.67 689.641 L1272.23 689.641 L1272.79 689.641 L1273.35 689.641 L1273.91 689.641 L1274.46 689.641 L1275.02 689.641 L1275.58 689.641 L1276.14 689.641 L1276.7 689.641 L1277.26 689.641 L1277.82 689.641 L1278.38 689.641 L1278.94 689.641 L1279.5 689.641 L1280.06 689.641 L1280.62 689.641 L1281.18 689.641 L1281.73 689.641 L1282.29 689.641 L1282.85 689.641 L1283.41 689.641 L1283.97 689.641 L1284.53 689.641 L1285.09 689.641 L1285.65 689.641 L1286.21 689.641 L1286.77 689.641 L1287.33 689.641 L1287.89 689.641 L1288.45 689.641 L1289 689.641 L1289.56 689.641 L1290.12 689.641 L1290.68 689.641 L1291.24 689.641 L1291.8 689.641 L1292.36 689.641 L1292.92 689.641 L1293.48 689.641 L1294.04 689.641 L1294.6 689.641 L1295.16 689.641 L1295.72 689.641 L1296.28 689.641 L1296.83 689.641 L1297.39 689.641 L1297.95 689.641 L1298.51 689.641 L1299.07 689.641 L1299.63 689.641 L1300.19 689.641 L1300.75 689.641 L1301.31 689.641 L1301.87 689.641 L1302.43 689.641 L1302.99 689.641 L1303.55 689.641 L1304.1 689.641 L1304.66 689.641 L1305.22 689.641 L1305.78 689.641 L1306.34 689.641 L1306.9 689.641 L1307.46 689.641 L1308.02 689.641 L1308.58 689.641 L1309.14 689.641 L1309.7 689.641 L1310.26 689.641 L1310.82 689.641 L1311.38 689.641 L1311.93 689.641 L1312.49 689.641 L1313.05 689.641 L1313.61 689.641 L1314.17 689.641 L1314.73 689.641 L1315.29 689.641 L1315.85 689.641 L1316.41 689.641 L1316.97 689.641 L1317.53 689.641 L1318.09 689.641 L1318.65 689.641 L1319.2 689.641 L1319.76 689.641 L1320.32 689.641 L1320.88 689.641 L1321.44 689.641 L1322 689.641 L1322.56 689.641 L1323.12 689.641 L1323.68 689.641 L1324.24 689.641 L1324.8 689.641 L1325.36 689.641 L1325.92 689.641 L1326.47 689.641 L1327.03 689.641 L1327.59 689.641 L1328.15 689.641 L1328.71 689.641 L1329.27 689.641 L1329.83 689.641 L1330.39 689.641 L1330.95 689.641 L1331.51 689.641 L1332.07 689.641 L1332.63 689.641 L1333.19 689.641 L1333.75 689.641 L1334.3 689.641 L1334.86 689.641 L1335.42 689.641 L1335.98 689.641 L1336.54 689.641 L1337.1 689.641 L1337.66 689.641 L1338.22 689.641 L1338.78 689.641 L1339.34 689.641 L1339.9 689.641 L1340.46 689.641 L1341.02 689.641 L1341.57 689.641 L1342.13 689.641 L1342.69 689.641 L1343.25 689.641 L1343.81 689.641 L1344.37 689.641 L1344.93 689.641 L1345.49 689.641 L1346.05 689.641 L1346.61 689.641 L1347.17 689.641 L1347.73 689.641 L1348.29 689.641 L1348.84 689.641 L1349.4 689.641 L1349.96 689.641 L1350.52 689.641 L1351.08 689.641 L1351.64 689.641 L1352.2 689.641 L1352.76 689.641 L1353.32 689.641 L1353.88 689.641 L1354.44 689.641 L1355 689.641 L1355.56 689.641 L1356.12 689.641 L1356.67 689.641 L1357.23 689.641 L1357.79 689.641 L1358.35 689.641 L1358.91 689.641 L1359.47 689.641 L1360.03 689.641 L1360.59 689.641 L1361.15 689.641 L1361.71 689.641 L1362.27 689.641 L1362.83 689.641 L1363.39 689.641 L1363.94 689.641 L1364.5 689.641 L1365.06 689.641 L1365.62 689.641 L1366.18 689.641 L1366.74 689.641 L1367.3 689.641 L1367.86 689.641 L1368.42 689.641 L1368.98 689.641 L1369.54 689.641 L1370.1 689.641 L1370.66 689.641 L1371.21 689.641 L1371.77 689.641 L1372.33 689.641 L1372.89 689.641 L1373.45 689.641 L1374.01 689.641 L1374.57 689.641 L1375.13 689.641 L1375.69 689.641 L1376.25 689.641 L1376.81 689.641 L1377.37 689.641 L1377.93 689.641 L1378.49 689.641 L1379.04 689.641 L1379.6 689.641 L1380.16 689.641 L1380.72 689.641 L1381.28 689.641 L1381.84 689.641 L1382.4 689.641 L1382.96 689.641 L1383.52 689.641 L1384.08 689.641 L1384.64 689.641 L1385.2 689.641 L1385.76 689.641 L1386.31 689.641 L1386.87 689.641 L1387.43 689.641 L1387.99 689.641 L1388.55 689.641 L1389.11 689.641 L1389.67 689.641 L1390.23 689.641 L1390.79 689.641 L1391.35 689.641 L1391.91 689.641 L1392.47 689.641 L1393.03 689.641 L1393.58 689.641 L1394.14 689.641 L1394.7 689.641 L1395.26 689.641 L1395.82 689.641 L1396.38 689.641 L1396.94 689.641 L1397.5 689.641 L1398.06 689.641 L1398.62 689.641 L1399.18 689.641 L1399.74 689.641 L1400.3 689.641 L1400.86 689.641 L1401.41 689.641 L1401.97 689.641 L1402.53 689.641 L1403.09 689.641 L1403.65 689.641 L1404.21 689.641 L1404.77 689.641 L1405.33 689.641 L1405.89 689.641 L1406.45 689.641 L1407.01 689.641 L1407.57 689.641 L1408.13 689.641 L1408.68 689.641 L1409.24 689.641 L1409.8 689.641 L1410.36 689.641 L1410.92 689.641 L1411.48 689.641 L1412.04 689.641 L1412.6 689.641 L1413.16 689.641 L1413.72 689.641 L1414.28 689.641 L1414.84 689.641 L1415.4 689.641 L1415.95 689.641 L1416.51 689.641 L1417.07 689.641 L1417.63 689.641 L1418.19 689.641 L1418.75 689.641 L1419.31 689.641 L1419.87 689.641 L1420.43 689.641 L1420.99 689.641 L1421.55 689.641 L1422.11 689.641 L1422.67 689.641 L1423.23 689.641 L1423.78 689.641 L1424.34 689.641 L1424.9 689.641 L1425.46 689.641 L1426.02 689.641 L1426.58 689.641 L1427.14 689.641 L1427.7 689.641 L1428.26 689.641 L1428.82 689.641 L1429.38 689.641 L1429.94 689.641 L1430.5 689.641 L1431.05 689.641 L1431.61 689.641 L1432.17 689.641 L1432.73 689.641 L1433.29 689.641 L1433.85 689.641 L1434.41 689.641 L1434.97 689.641 L1435.53 689.641 L1436.09 689.641 L1436.65 689.641 L1437.21 689.641 L1437.77 689.641 L1438.33 689.641 L1438.88 689.641 L1439.44 689.641 L1440 689.641 L1440.56 689.641 L1441.12 689.641 L1441.68 689.641 L1442.24 689.641 L1442.8 689.641 L1443.36 689.641 L1443.92 689.641 L1444.48 689.641 L1445.04 689.641 L1445.6 689.641 L1446.15 689.641 L1446.71 689.641 L1447.27 689.641 L1447.83 689.641 L1448.39 689.641 L1448.95 689.641 L1449.51 689.641 L1450.07 689.641 L1450.63 689.641 L1451.19 689.641 L1451.75 689.641 L1452.31 689.641 L1452.87 689.641 L1453.42 689.641 L1453.98 689.641 L1454.54 689.641 L1455.1 689.641 L1455.66 689.641 L1456.22 689.641 L1456.78 689.641 L1457.34 689.641 L1457.9 689.641 L1458.46 689.641 L1459.02 689.641 L1459.58 689.641 L1460.14 689.641 L1460.7 689.641 L1461.25 689.641 L1461.81 689.641 L1462.37 689.641 L1462.93 689.641 L1463.49 689.641 L1464.05 689.641 L1464.61 689.641 L1465.17 689.641 L1465.73 689.641 L1466.29 689.641 L1466.85 689.641 L1467.41 689.641 L1467.97 689.641 L1468.52 689.641 L1469.08 689.641 L1469.64 689.641 L1470.2 689.641 L1470.76 689.641 L1471.32 689.641 L1471.88 689.641 L1472.44 689.641 L1473 689.641 L1473.56 689.641 L1474.12 689.641 L1474.68 689.641 L1475.24 689.641 L1475.79 689.641 L1476.35 689.641 L1476.91 689.641 L1477.47 689.641 L1478.03 689.641 L1478.59 689.641 L1479.15 689.641 L1479.71 689.641 L1480.27 689.641 L1480.83 689.641 L1481.39 689.641 L1481.95 689.641 L1482.51 689.641 L1483.07 689.641 L1483.62 689.641 L1484.18 689.641 L1484.74 689.641 L1485.3 689.641 L1485.86 689.641 L1486.42 689.641 L1486.98 689.641 L1487.54 689.641 L1488.1 689.641 L1488.66 689.641 L1489.22 689.641 L1489.78 689.641 L1490.34 689.641 L1490.89 689.641 L1491.45 689.641 L1492.01 689.641 L1492.57 689.641 L1493.13 689.641 L1493.69 689.641 L1494.25 689.641 L1494.81 689.641 L1495.37 689.641 L1495.93 689.641 L1496.49 689.641 L1497.05 689.641 L1497.61 689.641 L1498.16 689.641 L1498.72 689.641 L1499.28 689.641 L1499.84 689.641 L1500.4 689.641 L1500.96 689.641 L1501.52 689.641 L1502.08 689.641 L1502.64 689.641 L1503.2 689.641 L1503.76 689.641 L1504.32 689.641 L1504.88 689.641 L1505.44 689.641 L1505.99 689.641 L1506.55 689.641 L1507.11 689.641 L1507.67 689.641 L1508.23 689.641 L1508.79 689.641 L1509.35 689.641 L1509.91 689.641 L1510.47 689.641 L1511.03 689.641 L1511.59 689.641 L1512.15 689.641 L1512.71 689.641 L1513.26 689.641 L1513.82 689.641 L1514.38 689.641 L1514.94 689.641 L1515.5 689.641 L1516.06 689.641 L1516.62 689.641 L1517.18 689.641 L1517.74 689.641 L1518.3 689.641 L1518.86 689.641 L1519.42 689.641 L1519.98 689.641 L1520.53 689.641 L1521.09 689.641 L1521.65 689.641 L1522.21 689.641 L1522.77 689.641 L1523.33 689.641 L1523.89 689.641 L1524.45 689.641 L1525.01 689.641 L1525.57 689.641 L1526.13 689.641 L1526.69 689.641 L1527.25 689.641 L1527.81 689.641 L1528.36 689.641 L1528.92 689.641 L1529.48 689.641 L1530.04 689.641 L1530.6 689.641 L1531.16 689.641 L1531.72 689.641 L1532.28 689.641 L1532.84 689.641 L1533.4 689.641 L1533.96 689.641 L1534.52 689.641 L1535.08 689.641 L1535.63 689.641 L1536.19 689.641 L1536.75 689.641 L1537.31 689.641 L1537.87 689.641 L1538.43 689.641 L1538.99 689.641 L1539.55 689.641 L1540.11 689.641 L1540.67 689.641 L1541.23 689.641 L1541.79 689.641 L1542.35 689.641 L1542.9 689.641 L1543.46 689.641 L1544.02 689.641 L1544.58 689.641 L1545.14 689.641 L1545.7 689.641 L1546.26 689.641 L1546.82 689.641 L1547.38 689.641 L1547.94 689.641 L1548.5 689.641 L1549.06 689.641 L1549.62 689.641 L1550.18 689.641 L1550.73 689.641 L1551.29 689.641 L1551.85 689.641 L1552.41 689.641 L1552.97 689.641 L1553.53 689.641 L1554.09 689.641 L1554.65 689.641 L1555.21 689.641 L1555.77 689.641 L1556.33 689.641 L1556.89 689.641 L1557.45 689.641 L1558 689.641 L1558.56 689.641 L1559.12 689.641 L1559.68 689.641 L1560.24 689.641 L1560.8 689.641 L1561.36 689.641 L1561.92 689.641 L1562.48 689.641 L1563.04 689.641 L1563.6 689.641 L1564.16 689.641 L1564.72 689.641 L1565.28 689.641 L1565.83 689.641 L1566.39 689.641 L1566.95 689.641 L1567.51 689.641 L1568.07 689.641 L1568.63 689.641 L1569.19 689.641 L1569.75 689.641 L1570.31 689.641 L1570.87 689.641 L1571.43 689.641 L1571.99 689.641 L1572.55 689.641 L1573.1 689.641 L1573.66 689.641 L1574.22 689.641 L1574.78 689.641 L1575.34 689.641 L1575.9 689.641 L1576.46 689.641 L1577.02 689.641 L1577.58 689.641 L1578.14 689.641 L1578.7 689.641 L1579.26 689.641 L1579.82 689.641 L1580.37 689.641 L1580.93 689.641 L1581.49 689.641 L1582.05 689.641 L1582.61 689.641 L1583.17 689.641 L1583.73 689.641 L1584.29 689.641 L1584.85 689.641 L1585.41 689.641 L1585.97 689.641 L1586.53 689.641 L1587.09 689.641 L1587.65 689.641 L1588.2 689.641 L1588.76 689.641 L1589.32 689.641 L1589.88 689.641 L1590.44 689.641 L1591 689.641 L1591.56 689.641 L1592.12 689.641 L1592.68 689.641 L1593.24 689.641 L1593.8 689.641 L1594.36 689.641 L1594.92 689.641 L1595.47 689.641 L1596.03 689.641 L1596.59 689.641 L1597.15 689.641 L1597.71 689.641 L1598.27 689.641 L1598.83 689.641 L1599.39 689.641 L1599.95 689.641 L1600.51 689.641 L1601.07 689.641 L1601.63 689.641 L1602.19 689.641 L1602.74 689.641 L1603.3 689.641 L1603.86 689.641 L1604.42 689.641 L1604.98 689.641 L1605.54 689.641 L1606.1 689.641 L1606.66 689.641 L1607.22 689.641 L1607.78 689.641 L1608.34 689.641 L1608.9 689.641 L1609.46 689.641 L1610.02 689.641 L1610.57 689.641 L1611.13 689.641 L1611.69 689.641 L1612.25 689.641 L1612.81 689.641 L1613.37 689.641 L1613.93 689.641 L1614.49 689.641 L1615.05 689.641 L1615.61 689.641 L1616.17 689.641 L1616.73 689.641 L1617.29 689.641 L1617.84 689.641 L1618.4 689.641 L1618.96 689.641 L1619.52 689.641 L1620.08 689.641 L1620.64 689.641 L1621.2 689.641 L1621.76 689.641 L1622.32 689.641 L1622.88 689.641 L1623.44 689.641 L1624 689.641 L1624.56 689.641 L1625.11 689.641 L1625.67 689.641 L1626.23 689.641 L1626.79 689.641 L1627.35 689.641 L1627.91 689.641 L1628.47 689.641 L1629.03 689.641 L1629.59 689.641 L1630.15 689.641 L1630.71 689.641 L1631.27 689.641 L1631.83 689.641 L1632.39 689.641 L1632.94 689.641 L1633.5 689.641 L1634.06 689.641 L1634.62 689.641 L1635.18 689.641 L1635.74 689.641 L1636.3 689.641 L1636.86 689.641 L1637.42 689.641 L1637.98 689.641 L1638.54 689.641 L1639.1 689.641 L1639.66 689.641 L1640.21 689.641 L1640.77 689.641 L1641.33 689.641 L1641.89 689.641 L1642.45 689.641 L1643.01 689.641 L1643.57 689.641 L1644.13 689.641 L1644.69 689.641 L1645.25 689.641 L1645.81 689.641 L1646.37 689.641 L1646.93 689.641 L1647.48 689.641 L1648.04 689.641 L1648.6 689.641 L1649.16 689.641 L1649.72 689.641 L1650.28 689.641 L1650.84 689.641 L1651.4 689.641 L1651.96 689.641 L1652.52 689.641 L1653.08 689.641 L1653.64 689.641 L1654.2 689.641 L1654.76 689.641 L1655.31 689.641 L1655.87 689.641 L1656.43 689.641 L1656.99 689.641 L1657.55 689.641 L1658.11 689.641 L1658.67 689.641 L1659.23 689.641 L1659.79 689.641 L1660.35 689.641 L1660.91 689.641 L1661.47 689.641 L1662.03 689.641 L1662.58 689.641 L1663.14 689.641 L1663.7 689.641 L1664.26 689.641 L1664.82 689.641 L1665.38 689.641 L1665.94 689.641 L1666.5 689.641 L1667.06 689.641 L1667.62 689.641 L1668.18 689.641 L1668.74 689.641 L1669.3 689.641 L1669.85 689.641 L1670.41 689.641 L1670.97 689.641 L1671.53 689.641 L1672.09 689.641 L1672.65 689.641 L1673.21 689.641 L1673.77 689.641 L1674.33 689.641 L1674.89 689.641 L1675.45 689.641 L1676.01 689.641 L1676.57 689.641 L1677.13 689.641 L1677.68 689.641 L1678.24 689.641 L1678.8 689.641 L1679.36 689.641 L1679.92 689.641 L1680.48 689.641 L1681.04 689.641 L1681.6 689.641 L1682.16 689.641 L1682.72 689.641 L1683.28 689.641 L1683.84 689.641 L1684.4 689.641 L1684.95 689.641 L1685.51 689.641 L1686.07 689.641 L1686.63 689.641 L1687.19 689.641 L1687.75 689.641 L1688.31 689.641 L1688.87 689.641 L1689.43 689.641 L1689.99 689.641 L1690.55 689.641 L1691.11 689.641 L1691.67 689.641 L1692.23 689.641 L1692.78 689.641 L1693.34 689.641 L1693.9 689.641 L1694.46 689.641 L1695.02 689.641 L1695.58 689.641 L1696.14 689.641 L1696.7 689.641 L1697.26 689.641 L1697.82 689.641 L1698.38 689.641 L1698.94 689.641 L1699.5 689.641 L1700.05 689.641 L1700.61 689.641 L1701.17 689.641 L1701.73 689.641 L1702.29 689.641 L1702.85 689.641 L1703.41 689.641 L1703.97 689.641 L1704.53 689.641 L1705.09 689.641 L1705.65 689.641 L1706.21 689.641 L1706.77 689.641 L1707.32 689.641 L1707.88 689.641 L1708.44 689.641 L1709 689.641 L1709.56 689.641 L1710.12 689.641 L1710.68 689.641 L1711.24 689.641 L1711.8 689.641 L1712.36 689.641 L1712.92 689.641 L1713.48 689.641 L1714.04 689.641 L1714.6 689.641 L1715.15 689.641 L1715.71 689.641 L1716.27 689.641 L1716.83 689.641 L1717.39 689.641 L1717.95 689.641 L1718.51 689.641 L1719.07 689.641 L1719.63 689.641 L1720.19 689.641 L1720.75 689.641 L1721.31 689.641 L1721.87 689.641 L1722.42 689.641 L1722.98 689.641 L1723.54 689.641 L1724.1 689.641 L1724.66 689.641 L1725.22 689.641 L1725.78 689.641 L1726.34 689.641 L1726.9 689.641 L1727.46 689.641 L1728.02 689.641 L1728.58 689.641 L1729.14 689.641 L1729.69 689.641 L1730.25 689.641 L1730.81 689.641 L1731.37 689.641 L1731.93 689.641 L1732.49 689.641 L1733.05 689.641 L1733.61 689.641 L1734.17 689.641 L1734.73 689.641 L1735.29 689.641 L1735.85 689.641 L1736.41 689.641 L1736.97 689.641 L1737.52 689.641 L1738.08 689.641 L1738.64 689.641 L1739.2 689.641 L1739.76 689.641 L1740.32 689.641 L1740.88 689.641 L1741.44 689.641 L1742 689.641 L1742.56 689.641 L1743.12 689.641 L1743.68 689.641 L1744.24 689.641 L1744.79 689.641 L1745.35 689.641 L1745.91 689.641 L1746.47 689.641 L1747.03 689.641 L1747.59 689.641 L1748.15 689.641 L1748.71 689.641 L1749.27 689.641 L1749.83 689.641 L1750.39 689.641 L1750.95 689.641 L1751.51 689.641 L1752.06 689.641 L1752.62 689.641 L1753.18 689.641 L1753.74 689.641 L1754.3 689.641 L1754.86 689.641 L1755.42 689.641 L1755.98 689.641 L1756.54 689.641 L1757.1 689.641 L1757.66 689.641 L1758.22 689.641 L1758.78 689.641 L1759.34 689.641 L1759.89 689.641 L1760.45 689.641 L1761.01 689.641 L1761.57 689.641 L1762.13 689.641 L1762.69 689.641 L1763.25 689.641 L1763.81 689.641 L1764.37 689.641 L1764.93 689.641 L1765.49 689.641 L1766.05 689.641 L1766.61 689.641 L1767.16 689.641 L1767.72 689.641 L1768.28 689.641 L1768.84 689.641 L1769.4 689.641 L1769.96 689.641 L1770.52 689.641 L1771.08 689.641 L1771.64 689.641 L1772.2 689.641 L1772.76 689.641 L1773.32 689.641 L1773.88 689.641 L1774.43 689.641 L1774.99 689.641 L1775.55 689.641 L1776.11 689.641 L1776.67 689.641 L1777.23 689.641 L1777.79 689.641 L1778.35 689.641 L1778.91 689.641 L1779.47 689.641 L1780.03 689.641 L1780.59 689.641 L1781.15 689.641 L1781.71 689.641 L1782.26 689.641 L1782.82 689.641 L1783.38 689.641 L1783.94 689.641 L1784.5 689.641 L1785.06 689.641 L1785.62 689.641 L1786.18 689.641 L1786.74 689.641 L1787.3 689.641 L1787.86 689.641 L1788.42 689.641 L1788.98 689.641 L1789.53 689.641 L1790.09 689.641 L1790.65 689.641 L1791.21 689.641 L1791.77 689.641 L1792.33 689.641 L1792.89 689.641 L1793.45 689.641 L1794.01 689.641 L1794.57 689.641 L1795.13 689.641 L1795.69 689.641 L1796.25 689.641 L1796.8 689.641 L1797.36 689.641 L1797.92 689.641 L1798.48 689.641 L1799.04 689.641 L1799.6 689.641 L1800.16 689.641 L1800.72 689.641 L1801.28 689.641 L1801.84 689.641 L1802.4 689.641 L1802.96 689.641 L1803.52 689.641 L1804.08 689.641 L1804.63 689.641 L1805.19 689.641 L1805.75 689.641 L1806.31 689.641 L1806.87 689.641 L1807.43 689.641 L1807.99 689.641 L1808.55 689.641 L1809.11 689.641 L1809.67 689.641 L1810.23 689.641 L1810.79 689.641 L1811.35 689.641 L1811.9 689.641 L1812.46 689.641 L1813.02 689.641 L1813.58 689.641 L1814.14 689.641 L1814.7 689.641 L1815.26 689.641 L1815.82 689.641 L1816.38 689.641 L1816.94 689.641 L1817.5 689.641 L1818.06 689.641 L1818.62 689.641 L1819.18 689.641 L1819.73 689.641 L1820.29 689.641 L1820.85 689.641 L1821.41 689.641 L1821.97 689.641 L1822.53 689.641 L1823.09 689.641 L1823.65 689.641 L1824.21 689.641 L1824.77 689.641 L1825.33 689.641 L1825.89 689.641 L1826.45 689.641 L1827 689.641 L1827.56 689.641 L1828.12 689.641 L1828.68 689.641 L1829.24 689.641 L1829.8 689.641 L1830.36 689.641 L1830.92 689.641 L1831.48 689.641 L1832.04 689.641 L1832.6 689.641 L1833.16 689.641 L1833.72 689.641 L1834.27 689.641 L1834.83 689.641 L1835.39 689.641 L1835.95 689.641 L1836.51 689.641 L1837.07 689.641 L1837.63 689.641 L1838.19 689.641 L1838.19 678.816 L1837.63 678.816 L1837.07 678.816 L1836.51 678.816 L1835.95 678.816 L1835.39 678.816 L1834.83 678.816 L1834.27 678.816 L1833.72 678.816 L1833.16 678.816 L1832.6 678.816 L1832.04 678.816 L1831.48 678.816 L1830.92 678.816 L1830.36 678.816 L1829.8 678.816 L1829.24 678.816 L1828.68 678.816 L1828.12 678.816 L1827.56 678.816 L1827 678.816 L1826.45 678.816 L1825.89 678.816 L1825.33 678.816 L1824.77 678.816 L1824.21 678.816 L1823.65 678.816 L1823.09 678.816 L1822.53 678.816 L1821.97 678.816 L1821.41 678.816 L1820.85 678.816 L1820.29 678.816 L1819.73 678.816 L1819.18 678.816 L1818.62 678.816 L1818.06 678.816 L1817.5 678.816 L1816.94 678.816 L1816.38 678.816 L1815.82 678.816 L1815.26 678.816 L1814.7 678.816 L1814.14 678.816 L1813.58 678.816 L1813.02 678.816 L1812.46 678.816 L1811.9 678.816 L1811.35 678.816 L1810.79 678.816 L1810.23 678.816 L1809.67 678.816 L1809.11 678.816 L1808.55 678.816 L1807.99 678.816 L1807.43 678.816 L1806.87 678.816 L1806.31 678.816 L1805.75 678.816 L1805.19 678.816 L1804.63 678.816 L1804.08 678.816 L1803.52 678.816 L1802.96 678.816 L1802.4 678.816 L1801.84 678.816 L1801.28 678.816 L1800.72 678.816 L1800.16 678.816 L1799.6 678.816 L1799.04 678.816 L1798.48 678.816 L1797.92 678.816 L1797.36 678.816 L1796.8 678.816 L1796.25 678.816 L1795.69 678.816 L1795.13 678.816 L1794.57 678.816 L1794.01 678.816 L1793.45 678.816 L1792.89 678.816 L1792.33 678.816 L1791.77 678.816 L1791.21 678.816 L1790.65 678.816 L1790.09 678.816 L1789.53 678.816 L1788.98 678.816 L1788.42 678.816 L1787.86 678.816 L1787.3 678.816 L1786.74 678.816 L1786.18 678.816 L1785.62 678.816 L1785.06 678.816 L1784.5 678.816 L1783.94 678.816 L1783.38 678.816 L1782.82 678.816 L1782.26 678.816 L1781.71 678.816 L1781.15 678.816 L1780.59 678.816 L1780.03 678.816 L1779.47 678.816 L1778.91 678.816 L1778.35 678.816 L1777.79 678.816 L1777.23 678.816 L1776.67 678.816 L1776.11 678.816 L1775.55 678.816 L1774.99 678.816 L1774.43 678.816 L1773.88 678.816 L1773.32 678.816 L1772.76 678.816 L1772.2 678.816 L1771.64 678.816 L1771.08 678.816 L1770.52 678.816 L1769.96 678.816 L1769.4 678.816 L1768.84 678.816 L1768.28 678.816 L1767.72 678.816 L1767.16 678.816 L1766.61 678.816 L1766.05 678.816 L1765.49 678.816 L1764.93 678.816 L1764.37 678.816 L1763.81 678.816 L1763.25 678.816 L1762.69 678.816 L1762.13 678.816 L1761.57 678.816 L1761.01 678.816 L1760.45 678.816 L1759.89 678.816 L1759.34 678.816 L1758.78 678.816 L1758.22 678.816 L1757.66 678.816 L1757.1 678.816 L1756.54 678.816 L1755.98 678.816 L1755.42 678.816 L1754.86 678.816 L1754.3 678.816 L1753.74 678.816 L1753.18 678.816 L1752.62 678.816 L1752.06 678.816 L1751.51 678.816 L1750.95 678.816 L1750.39 678.816 L1749.83 678.816 L1749.27 678.816 L1748.71 678.816 L1748.15 678.816 L1747.59 678.816 L1747.03 678.816 L1746.47 678.816 L1745.91 678.816 L1745.35 678.816 L1744.79 678.816 L1744.24 678.816 L1743.68 678.816 L1743.12 678.816 L1742.56 678.816 L1742 678.816 L1741.44 678.816 L1740.88 678.816 L1740.32 678.816 L1739.76 678.816 L1739.2 678.816 L1738.64 678.816 L1738.08 678.816 L1737.52 678.816 L1736.97 678.816 L1736.41 678.816 L1735.85 678.816 L1735.29 678.816 L1734.73 678.816 L1734.17 678.816 L1733.61 678.816 L1733.05 678.816 L1732.49 678.816 L1731.93 678.816 L1731.37 678.816 L1730.81 678.816 L1730.25 678.816 L1729.69 678.816 L1729.14 678.816 L1728.58 678.816 L1728.02 678.816 L1727.46 678.816 L1726.9 678.816 L1726.34 678.816 L1725.78 678.816 L1725.22 678.816 L1724.66 678.816 L1724.1 678.816 L1723.54 678.816 L1722.98 678.816 L1722.42 678.816 L1721.87 678.816 L1721.31 678.816 L1720.75 678.816 L1720.19 678.816 L1719.63 678.816 L1719.07 678.816 L1718.51 678.816 L1717.95 678.816 L1717.39 678.816 L1716.83 678.816 L1716.27 678.816 L1715.71 678.816 L1715.15 678.816 L1714.6 678.816 L1714.04 678.816 L1713.48 678.816 L1712.92 678.816 L1712.36 678.816 L1711.8 678.816 L1711.24 678.816 L1710.68 678.816 L1710.12 678.816 L1709.56 678.816 L1709 678.816 L1708.44 678.816 L1707.88 678.816 L1707.32 678.816 L1706.77 678.816 L1706.21 678.816 L1705.65 678.816 L1705.09 678.816 L1704.53 678.816 L1703.97 678.816 L1703.41 678.816 L1702.85 678.816 L1702.29 678.816 L1701.73 678.816 L1701.17 678.816 L1700.61 678.816 L1700.05 678.816 L1699.5 678.816 L1698.94 678.816 L1698.38 678.816 L1697.82 678.816 L1697.26 678.816 L1696.7 678.816 L1696.14 678.816 L1695.58 678.816 L1695.02 678.816 L1694.46 678.816 L1693.9 678.816 L1693.34 678.816 L1692.78 678.816 L1692.23 678.816 L1691.67 678.816 L1691.11 678.816 L1690.55 678.816 L1689.99 678.816 L1689.43 678.816 L1688.87 678.816 L1688.31 678.816 L1687.75 678.816 L1687.19 678.816 L1686.63 678.816 L1686.07 678.816 L1685.51 678.816 L1684.95 678.816 L1684.4 678.816 L1683.84 678.816 L1683.28 678.816 L1682.72 678.816 L1682.16 678.816 L1681.6 678.816 L1681.04 678.816 L1680.48 678.816 L1679.92 678.816 L1679.36 678.816 L1678.8 678.816 L1678.24 678.816 L1677.68 678.816 L1677.13 678.816 L1676.57 678.816 L1676.01 678.816 L1675.45 678.816 L1674.89 678.816 L1674.33 678.816 L1673.77 678.816 L1673.21 678.816 L1672.65 678.816 L1672.09 678.816 L1671.53 678.816 L1670.97 678.816 L1670.41 678.816 L1669.85 678.816 L1669.3 678.816 L1668.74 678.816 L1668.18 678.816 L1667.62 678.816 L1667.06 678.816 L1666.5 678.816 L1665.94 678.816 L1665.38 678.816 L1664.82 678.816 L1664.26 678.816 L1663.7 678.816 L1663.14 678.816 L1662.58 678.816 L1662.03 678.816 L1661.47 678.816 L1660.91 678.816 L1660.35 678.816 L1659.79 678.816 L1659.23 678.816 L1658.67 678.816 L1658.11 678.816 L1657.55 678.816 L1656.99 678.816 L1656.43 678.816 L1655.87 678.816 L1655.31 678.816 L1654.76 678.816 L1654.2 678.816 L1653.64 678.816 L1653.08 678.816 L1652.52 678.816 L1651.96 678.816 L1651.4 678.816 L1650.84 678.816 L1650.28 678.816 L1649.72 678.816 L1649.16 678.816 L1648.6 678.816 L1648.04 678.816 L1647.48 678.816 L1646.93 678.816 L1646.37 678.816 L1645.81 678.816 L1645.25 678.816 L1644.69 678.816 L1644.13 678.816 L1643.57 678.816 L1643.01 678.816 L1642.45 678.816 L1641.89 678.816 L1641.33 678.816 L1640.77 678.816 L1640.21 678.816 L1639.66 678.816 L1639.1 678.816 L1638.54 678.816 L1637.98 678.816 L1637.42 678.816 L1636.86 678.816 L1636.3 678.816 L1635.74 678.816 L1635.18 678.816 L1634.62 678.816 L1634.06 678.816 L1633.5 678.816 L1632.94 678.816 L1632.39 678.816 L1631.83 678.816 L1631.27 678.816 L1630.71 678.816 L1630.15 678.816 L1629.59 678.816 L1629.03 678.816 L1628.47 678.816 L1627.91 678.816 L1627.35 678.816 L1626.79 678.816 L1626.23 678.816 L1625.67 678.816 L1625.11 678.816 L1624.56 678.816 L1624 678.816 L1623.44 678.816 L1622.88 678.816 L1622.32 678.816 L1621.76 678.816 L1621.2 678.816 L1620.64 678.816 L1620.08 678.816 L1619.52 678.816 L1618.96 678.816 L1618.4 678.816 L1617.84 678.816 L1617.29 678.816 L1616.73 678.816 L1616.17 678.816 L1615.61 678.816 L1615.05 678.816 L1614.49 678.816 L1613.93 678.816 L1613.37 678.816 L1612.81 678.816 L1612.25 678.816 L1611.69 678.816 L1611.13 678.816 L1610.57 678.816 L1610.02 678.816 L1609.46 678.816 L1608.9 678.816 L1608.34 678.816 L1607.78 678.816 L1607.22 678.816 L1606.66 678.816 L1606.1 678.816 L1605.54 678.816 L1604.98 678.816 L1604.42 678.816 L1603.86 678.816 L1603.3 678.816 L1602.74 678.816 L1602.19 678.816 L1601.63 678.816 L1601.07 678.816 L1600.51 678.816 L1599.95 678.816 L1599.39 678.816 L1598.83 678.816 L1598.27 678.816 L1597.71 678.816 L1597.15 678.816 L1596.59 678.816 L1596.03 678.816 L1595.47 678.816 L1594.92 678.816 L1594.36 678.816 L1593.8 678.816 L1593.24 678.816 L1592.68 678.816 L1592.12 678.816 L1591.56 678.816 L1591 678.816 L1590.44 678.816 L1589.88 678.816 L1589.32 678.816 L1588.76 678.816 L1588.2 678.816 L1587.65 678.816 L1587.09 678.816 L1586.53 678.816 L1585.97 678.816 L1585.41 678.816 L1584.85 678.816 L1584.29 678.816 L1583.73 678.816 L1583.17 678.816 L1582.61 678.816 L1582.05 678.816 L1581.49 678.816 L1580.93 678.816 L1580.37 678.816 L1579.82 678.816 L1579.26 678.816 L1578.7 678.816 L1578.14 678.816 L1577.58 678.816 L1577.02 678.816 L1576.46 678.816 L1575.9 678.816 L1575.34 678.816 L1574.78 678.816 L1574.22 678.816 L1573.66 678.816 L1573.1 678.816 L1572.55 678.816 L1571.99 678.816 L1571.43 678.816 L1570.87 678.816 L1570.31 678.816 L1569.75 678.816 L1569.19 678.816 L1568.63 678.816 L1568.07 678.816 L1567.51 678.816 L1566.95 678.816 L1566.39 678.816 L1565.83 678.816 L1565.28 678.816 L1564.72 678.816 L1564.16 678.816 L1563.6 678.816 L1563.04 678.816 L1562.48 678.816 L1561.92 678.816 L1561.36 678.816 L1560.8 678.816 L1560.24 678.816 L1559.68 678.816 L1559.12 678.816 L1558.56 678.816 L1558 678.816 L1557.45 678.816 L1556.89 678.816 L1556.33 678.816 L1555.77 678.816 L1555.21 678.816 L1554.65 678.816 L1554.09 678.816 L1553.53 678.816 L1552.97 678.816 L1552.41 678.816 L1551.85 678.816 L1551.29 678.816 L1550.73 678.816 L1550.18 678.816 L1549.62 678.816 L1549.06 678.816 L1548.5 678.816 L1547.94 678.816 L1547.38 678.816 L1546.82 678.816 L1546.26 678.816 L1545.7 678.816 L1545.14 678.816 L1544.58 678.816 L1544.02 678.816 L1543.46 678.816 L1542.9 678.816 L1542.35 678.816 L1541.79 678.816 L1541.23 678.816 L1540.67 678.816 L1540.11 678.816 L1539.55 678.816 L1538.99 678.816 L1538.43 678.816 L1537.87 678.816 L1537.31 678.816 L1536.75 678.816 L1536.19 678.816 L1535.63 678.816 L1535.08 678.816 L1534.52 678.816 L1533.96 678.816 L1533.4 678.816 L1532.84 678.816 L1532.28 678.816 L1531.72 678.816 L1531.16 678.816 L1530.6 678.816 L1530.04 678.816 L1529.48 678.816 L1528.92 678.816 L1528.36 678.816 L1527.81 678.816 L1527.25 678.816 L1526.69 678.816 L1526.13 678.816 L1525.57 678.816 L1525.01 678.816 L1524.45 678.816 L1523.89 678.816 L1523.33 678.816 L1522.77 678.816 L1522.21 678.816 L1521.65 678.816 L1521.09 678.816 L1520.53 678.816 L1519.98 678.816 L1519.42 678.816 L1518.86 678.816 L1518.3 678.816 L1517.74 678.816 L1517.18 678.816 L1516.62 678.816 L1516.06 678.816 L1515.5 678.816 L1514.94 678.816 L1514.38 678.816 L1513.82 678.816 L1513.26 678.816 L1512.71 678.816 L1512.15 678.816 L1511.59 678.816 L1511.03 678.816 L1510.47 678.816 L1509.91 678.816 L1509.35 678.816 L1508.79 678.816 L1508.23 678.816 L1507.67 678.816 L1507.11 678.816 L1506.55 678.816 L1505.99 678.816 L1505.44 678.816 L1504.88 678.816 L1504.32 678.816 L1503.76 678.816 L1503.2 678.816 L1502.64 678.816 L1502.08 678.816 L1501.52 678.816 L1500.96 678.816 L1500.4 678.816 L1499.84 678.816 L1499.28 678.816 L1498.72 678.816 L1498.16 678.816 L1497.61 678.816 L1497.05 678.816 L1496.49 678.816 L1495.93 678.816 L1495.37 678.816 L1494.81 678.816 L1494.25 678.816 L1493.69 678.816 L1493.13 678.816 L1492.57 678.816 L1492.01 678.816 L1491.45 678.816 L1490.89 678.816 L1490.34 678.816 L1489.78 678.816 L1489.22 678.816 L1488.66 678.816 L1488.1 678.816 L1487.54 678.816 L1486.98 678.816 L1486.42 678.816 L1485.86 678.816 L1485.3 678.816 L1484.74 678.816 L1484.18 678.816 L1483.62 678.816 L1483.07 678.816 L1482.51 678.816 L1481.95 678.816 L1481.39 678.816 L1480.83 678.816 L1480.27 678.816 L1479.71 678.816 L1479.15 678.816 L1478.59 678.816 L1478.03 678.816 L1477.47 678.816 L1476.91 678.816 L1476.35 678.816 L1475.79 678.816 L1475.24 678.816 L1474.68 678.816 L1474.12 678.816 L1473.56 678.816 L1473 678.816 L1472.44 678.816 L1471.88 678.816 L1471.32 678.816 L1470.76 678.816 L1470.2 678.816 L1469.64 678.816 L1469.08 678.816 L1468.52 678.816 L1467.97 678.816 L1467.41 678.816 L1466.85 678.816 L1466.29 678.816 L1465.73 678.816 L1465.17 678.816 L1464.61 678.816 L1464.05 678.816 L1463.49 678.816 L1462.93 678.816 L1462.37 678.816 L1461.81 678.816 L1461.25 678.816 L1460.7 678.816 L1460.14 678.816 L1459.58 678.816 L1459.02 678.816 L1458.46 678.816 L1457.9 678.816 L1457.34 678.816 L1456.78 678.816 L1456.22 678.816 L1455.66 678.816 L1455.1 678.816 L1454.54 678.816 L1453.98 678.816 L1453.42 678.816 L1452.87 678.816 L1452.31 678.816 L1451.75 678.816 L1451.19 678.816 L1450.63 678.816 L1450.07 678.816 L1449.51 678.816 L1448.95 678.816 L1448.39 678.816 L1447.83 678.816 L1447.27 678.816 L1446.71 678.816 L1446.15 678.816 L1445.6 678.816 L1445.04 678.816 L1444.48 678.816 L1443.92 678.816 L1443.36 678.816 L1442.8 678.816 L1442.24 678.816 L1441.68 678.816 L1441.12 678.816 L1440.56 678.816 L1440 678.816 L1439.44 678.816 L1438.88 678.816 L1438.33 678.816 L1437.77 678.816 L1437.21 678.816 L1436.65 678.816 L1436.09 678.816 L1435.53 678.816 L1434.97 678.816 L1434.41 678.816 L1433.85 678.816 L1433.29 678.816 L1432.73 678.816 L1432.17 678.816 L1431.61 678.816 L1431.05 678.816 L1430.5 678.816 L1429.94 678.816 L1429.38 678.816 L1428.82 678.816 L1428.26 678.816 L1427.7 678.816 L1427.14 678.816 L1426.58 678.816 L1426.02 678.816 L1425.46 678.816 L1424.9 678.816 L1424.34 678.816 L1423.78 678.816 L1423.23 678.816 L1422.67 678.816 L1422.11 678.816 L1421.55 678.816 L1420.99 678.816 L1420.43 678.816 L1419.87 678.816 L1419.31 678.816 L1418.75 678.816 L1418.19 678.816 L1417.63 678.816 L1417.07 678.816 L1416.51 678.816 L1415.95 678.816 L1415.4 678.816 L1414.84 678.816 L1414.28 678.816 L1413.72 678.816 L1413.16 678.816 L1412.6 678.816 L1412.04 678.816 L1411.48 678.816 L1410.92 678.816 L1410.36 678.816 L1409.8 678.816 L1409.24 678.816 L1408.68 678.816 L1408.13 678.816 L1407.57 678.816 L1407.01 678.816 L1406.45 678.816 L1405.89 678.816 L1405.33 678.816 L1404.77 678.816 L1404.21 678.816 L1403.65 678.816 L1403.09 678.816 L1402.53 678.816 L1401.97 678.816 L1401.41 678.816 L1400.86 678.816 L1400.3 678.816 L1399.74 678.816 L1399.18 678.816 L1398.62 678.816 L1398.06 678.816 L1397.5 678.816 L1396.94 678.816 L1396.38 678.816 L1395.82 678.816 L1395.26 678.816 L1394.7 678.816 L1394.14 678.816 L1393.58 678.816 L1393.03 678.816 L1392.47 678.816 L1391.91 678.816 L1391.35 678.816 L1390.79 678.816 L1390.23 678.816 L1389.67 678.816 L1389.11 678.816 L1388.55 678.816 L1387.99 678.816 L1387.43 678.816 L1386.87 678.816 L1386.31 678.816 L1385.76 678.816 L1385.2 678.816 L1384.64 678.816 L1384.08 678.816 L1383.52 678.816 L1382.96 678.816 L1382.4 678.816 L1381.84 678.816 L1381.28 678.816 L1380.72 678.816 L1380.16 678.816 L1379.6 678.816 L1379.04 678.816 L1378.49 678.816 L1377.93 678.816 L1377.37 678.816 L1376.81 678.816 L1376.25 678.816 L1375.69 678.816 L1375.13 678.816 L1374.57 678.816 L1374.01 678.816 L1373.45 678.816 L1372.89 678.816 L1372.33 678.816 L1371.77 678.816 L1371.21 678.816 L1370.66 678.816 L1370.1 678.816 L1369.54 678.816 L1368.98 678.816 L1368.42 678.816 L1367.86 678.816 L1367.3 678.816 L1366.74 678.816 L1366.18 678.816 L1365.62 678.816 L1365.06 678.816 L1364.5 678.816 L1363.94 678.816 L1363.39 678.816 L1362.83 678.816 L1362.27 678.816 L1361.71 678.816 L1361.15 678.816 L1360.59 678.816 L1360.03 678.816 L1359.47 678.816 L1358.91 678.816 L1358.35 678.816 L1357.79 678.816 L1357.23 678.816 L1356.67 678.816 L1356.12 678.816 L1355.56 678.816 L1355 678.816 L1354.44 678.816 L1353.88 678.816 L1353.32 678.816 L1352.76 678.816 L1352.2 678.816 L1351.64 678.816 L1351.08 678.816 L1350.52 678.816 L1349.96 678.816 L1349.4 678.816 L1348.84 678.816 L1348.29 678.816 L1347.73 678.816 L1347.17 678.816 L1346.61 678.816 L1346.05 678.816 L1345.49 678.816 L1344.93 678.816 L1344.37 678.816 L1343.81 678.816 L1343.25 678.816 L1342.69 678.816 L1342.13 678.816 L1341.57 678.816 L1341.02 678.816 L1340.46 678.816 L1339.9 678.816 L1339.34 678.816 L1338.78 678.816 L1338.22 678.816 L1337.66 678.816 L1337.1 678.816 L1336.54 678.816 L1335.98 678.816 L1335.42 678.816 L1334.86 678.816 L1334.3 678.816 L1333.75 678.816 L1333.19 678.816 L1332.63 678.816 L1332.07 678.816 L1331.51 678.816 L1330.95 678.816 L1330.39 678.816 L1329.83 678.816 L1329.27 678.816 L1328.71 678.816 L1328.15 678.816 L1327.59 678.816 L1327.03 678.816 L1326.47 678.816 L1325.92 678.816 L1325.36 678.816 L1324.8 678.816 L1324.24 678.816 L1323.68 678.816 L1323.12 678.816 L1322.56 678.816 L1322 678.816 L1321.44 678.816 L1320.88 678.816 L1320.32 678.816 L1319.76 678.816 L1319.2 678.816 L1318.65 678.816 L1318.09 678.816 L1317.53 678.816 L1316.97 678.816 L1316.41 678.816 L1315.85 678.816 L1315.29 678.816 L1314.73 678.816 L1314.17 678.816 L1313.61 678.816 L1313.05 678.816 L1312.49 678.816 L1311.93 678.816 L1311.38 678.816 L1310.82 678.816 L1310.26 678.816 L1309.7 678.816 L1309.14 678.816 L1308.58 678.816 L1308.02 678.816 L1307.46 678.816 L1306.9 678.816 L1306.34 678.816 L1305.78 678.816 L1305.22 678.816 L1304.66 678.816 L1304.1 678.816 L1303.55 678.816 L1302.99 678.816 L1302.43 678.816 L1301.87 678.816 L1301.31 678.816 L1300.75 678.816 L1300.19 678.816 L1299.63 678.816 L1299.07 678.816 L1298.51 678.816 L1297.95 678.816 L1297.39 678.816 L1296.83 678.816 L1296.28 678.816 L1295.72 678.816 L1295.16 678.816 L1294.6 678.816 L1294.04 678.816 L1293.48 678.816 L1292.92 678.816 L1292.36 678.816 L1291.8 678.816 L1291.24 678.816 L1290.68 678.816 L1290.12 678.816 L1289.56 678.816 L1289 678.816 L1288.45 678.816 L1287.89 678.816 L1287.33 678.816 L1286.77 678.816 L1286.21 678.816 L1285.65 678.816 L1285.09 678.816 L1284.53 678.816 L1283.97 678.816 L1283.41 678.816 L1282.85 678.816 L1282.29 678.816 L1281.73 678.816 L1281.18 678.816 L1280.62 678.816 L1280.06 678.816 L1279.5 678.816 L1278.94 678.816 L1278.38 678.816 L1277.82 678.816 L1277.26 678.816 L1276.7 678.816 L1276.14 678.816 L1275.58 678.816 L1275.02 678.816 L1274.46 678.816 L1273.91 678.816 L1273.35 678.816 L1272.79 678.816 L1272.23 678.816 L1271.67 678.816 L1271.11 678.816 L1270.55 678.816 L1269.99 678.816 L1269.43 678.816 L1268.87 678.816 L1268.31 678.816 L1267.75 678.816 L1267.19 678.816 L1266.63 678.816 L1266.08 678.816 L1265.52 678.816 L1264.96 678.816 L1264.4 678.816 L1263.84 678.816 L1263.28 678.816 L1262.72 678.816 L1262.16 678.816 L1261.6 678.816 L1261.04 678.816 L1260.48 678.816 L1259.92 678.816 L1259.36 678.816 L1258.81 678.816 L1258.25 678.816 L1257.69 678.816 L1257.13 678.816 L1256.57 678.816 L1256.01 678.816 L1255.45 678.816 L1254.89 678.816 L1254.33 678.816 L1253.77 678.816 L1253.21 678.816 L1252.65 678.816 L1252.09 678.816 L1251.54 678.816 L1250.98 678.816 L1250.42 678.816 L1249.86 678.816 L1249.3 678.816 L1248.74 678.816 L1248.18 678.816 L1247.62 678.816 L1247.06 678.816 L1246.5 678.816 L1245.94 678.816 L1245.38 678.816 L1244.82 678.816 L1244.26 678.816 L1243.71 678.816 L1243.15 678.816 L1242.59 678.816 L1242.03 678.816 L1241.47 678.816 L1240.91 678.816 L1240.35 678.816 L1239.79 678.816 L1239.23 678.816 L1238.67 678.816 L1238.11 678.816 L1237.55 678.816 L1236.99 678.816 L1236.44 678.816 L1235.88 678.816 L1235.32 678.816 L1234.76 678.816 L1234.2 678.816 L1233.64 678.816 L1233.08 678.816 L1232.52 678.816 L1231.96 678.816 L1231.4 678.816 L1230.84 678.816 L1230.28 678.816 L1229.72 678.816 L1229.17 678.816 L1228.61 678.816 L1228.05 678.816 L1227.49 678.816 L1226.93 678.816 L1226.37 678.816 L1225.81 678.816 L1225.25 678.816 L1224.69 678.816 L1224.13 678.816 L1223.57 678.816 L1223.01 678.816 L1222.45 678.816 L1221.89 678.816 L1221.34 678.816 L1220.78 678.816 L1220.22 678.816 L1219.66 678.816 L1219.1 678.816 L1218.54 678.816 L1217.98 678.816 L1217.42 678.816 L1216.86 678.816 L1216.3 678.816 L1215.74 678.816 L1215.18 678.816 L1214.62 678.816 L1214.07 678.816 L1213.51 678.816 L1212.95 678.816 L1212.39 678.816 L1211.83 678.816 L1211.27 678.816 L1210.71 678.816 L1210.15 678.816 L1209.59 678.816 L1209.03 678.816 L1208.47 678.816 L1207.91 678.816 L1207.35 678.816 L1206.8 678.816 L1206.24 678.816 L1205.68 678.816 L1205.12 678.816 L1204.56 678.816 L1204 678.816 L1203.44 678.816 L1202.88 678.816 L1202.32 678.816 L1201.76 678.816 L1201.2 678.816 L1200.64 678.816 L1200.08 678.816 L1199.52 678.816 L1198.97 678.816 L1198.41 678.816 L1197.85 678.816 L1197.29 678.816 L1196.73 678.816 L1196.17 678.816 L1195.61 678.816 L1195.05 678.816 L1194.49 678.816 L1193.93 678.816 L1193.37 678.816 L1192.81 678.816 L1192.25 678.816 L1191.7 678.816 L1191.14 678.816 L1190.58 678.816 L1190.02 678.816 L1189.46 678.816 L1188.9 678.816 L1188.34 678.816 L1187.78 678.816 L1187.22 678.816 L1186.66 678.816 L1186.1 678.816 L1185.54 678.816 L1184.98 678.816 L1184.43 678.816 L1183.87 678.816 L1183.31 678.816 L1182.75 678.816 L1182.19 678.816 L1181.63 678.816 L1181.07 678.816 L1180.51 678.816 L1179.95 678.816 L1179.39 678.816 L1178.83 678.816 L1178.27 678.816 L1177.71 678.816 L1177.15 678.816 L1176.6 678.816 L1176.04 678.816 L1175.48 678.816 L1174.92 678.816 L1174.36 678.816 L1173.8 678.816 L1173.24 678.816 L1172.68 678.816 L1172.12 678.816 L1171.56 678.816 L1171 678.816 L1170.44 678.816 L1169.88 678.816 L1169.33 678.816 L1168.77 678.816 L1168.21 678.816 L1167.65 678.816 L1167.09 678.816 L1166.53 678.816 L1165.97 678.816 L1165.41 678.816 L1164.85 678.816 L1164.29 678.816 L1163.73 678.816 L1163.17 678.816 L1162.61 678.816 L1162.05 678.816 L1161.5 678.816 L1160.94 678.816 L1160.38 678.816 L1159.82 678.816 L1159.26 678.816 L1158.7 678.816 L1158.14 678.816 L1157.58 678.816 L1157.02 678.816 L1156.46 678.816 L1155.9 678.816 L1155.34 678.816 L1154.78 678.816 L1154.23 678.816 L1153.67 678.816 L1153.11 678.816 L1152.55 678.816 L1151.99 678.816 L1151.43 678.816 L1150.87 678.816 L1150.31 678.816 L1149.75 678.816 L1149.19 678.816 L1148.63 678.816 L1148.07 678.816 L1147.51 678.816 L1146.96 678.816 L1146.4 678.816 L1145.84 678.816 L1145.28 678.816 L1144.72 678.816 L1144.16 678.816 L1143.6 678.816 L1143.04 678.816 L1142.48 678.816 L1141.92 678.816 L1141.36 678.816 L1140.8 678.816 L1140.24 678.816 L1139.68 678.816 L1139.13 678.816 L1138.57 678.816 L1138.01 678.816 L1137.45 678.816 L1136.89 678.816 L1136.33 678.816 L1135.77 678.816 L1135.21 678.816 L1134.65 678.816 L1134.09 678.816 L1133.53 678.816 L1132.97 678.816 L1132.41 678.816 L1131.86 678.816 L1131.3 678.816 L1130.74 678.816 L1130.18 678.816 L1129.62 678.816 L1129.06 678.816 L1128.5 678.816 L1127.94 678.816 L1127.38 678.816 L1126.82 678.816 L1126.26 678.816 L1125.7 678.816 L1125.14 678.816 L1124.59 678.816 L1124.03 678.816 L1123.47 678.816 L1122.91 678.816 L1122.35 678.816 L1121.79 678.816 L1121.23 678.816 L1120.67 678.816 L1120.11 678.816 L1119.55 678.816 L1118.99 678.816 L1118.43 678.816 L1117.87 678.816 L1117.31 678.816 L1116.76 678.816 L1116.2 678.816 L1115.64 678.816 L1115.08 678.816 L1114.52 678.816 L1113.96 678.816 L1113.4 678.816 L1112.84 678.816 L1112.28 678.816 L1111.72 678.816 L1111.16 678.816 L1110.6 678.816 L1110.04 678.816 L1109.49 678.816 L1108.93 678.816 L1108.37 678.816 L1107.81 678.816 L1107.25 678.816 L1106.69 678.816 L1106.13 678.816 L1105.57 678.816 L1105.01 678.816 L1104.45 678.816 L1103.89 678.816 L1103.33 678.816 L1102.77 678.816 L1102.22 678.816 L1101.66 678.816 L1101.1 678.816 L1100.54 678.816 L1099.98 678.816 L1099.42 678.816 L1098.86 678.816 L1098.3 678.816 L1097.74 678.816 L1097.18 678.816 L1096.62 678.816 L1096.06 678.816 L1095.5 678.816 L1094.94 678.816 L1094.39 678.816 L1093.83 678.816 L1093.27 678.816 L1092.71 678.816 L1092.15 678.816 L1091.59 678.816 L1091.03 678.816 L1090.47 678.816 L1089.91 678.816 L1089.35 678.816 L1088.79 678.816 L1088.23 678.816 L1087.67 678.816 L1087.12 678.816 L1086.56 678.816 L1086 678.816 L1085.44 678.816 L1084.88 678.816 L1084.32 678.816 L1083.76 678.816 L1083.2 678.816 L1082.64 678.816 L1082.08 678.816 L1081.52 678.816 L1080.96 678.816 L1080.4 678.816 L1079.85 678.816 L1079.29 678.816 L1078.73 678.816 L1078.17 678.816 L1077.61 678.816 L1077.05 678.816 L1076.49 678.816 L1075.93 678.816 L1075.37 678.816 L1074.81 678.816 L1074.25 678.816 L1073.69 678.816 L1073.13 678.816 L1072.57 678.816 L1072.02 678.816 L1071.46 678.816 L1070.9 678.816 L1070.34 678.816 L1069.78 678.816 L1069.22 678.816 L1068.66 678.816 L1068.1 678.816 L1067.54 678.816 L1066.98 678.816 L1066.42 678.816 L1065.86 678.816 L1065.3 678.816 L1064.75 678.816 L1064.19 678.816 L1063.63 678.816 L1063.07 678.816 L1062.51 678.816 L1061.95 678.816 L1061.39 678.816 L1060.83 678.816 L1060.27 678.816 L1059.71 678.816 L1059.15 678.816 L1058.59 678.816 L1058.03 678.816 L1057.48 678.816 L1056.92 678.816 L1056.36 678.816 L1055.8 678.816 L1055.24 678.816 L1054.68 678.816 L1054.12 678.816 L1053.56 678.816 L1053 678.816 L1052.44 678.816 L1051.88 678.816 L1051.32 678.816 L1050.76 678.816 L1050.2 678.816 L1049.65 678.816 L1049.09 678.816 L1048.53 678.816 L1047.97 678.816 L1047.41 678.816 L1046.85 678.816 L1046.29 678.816 L1045.73 678.816 L1045.17 678.816 L1044.61 678.816 L1044.05 678.816 L1043.49 678.816 L1042.93 678.816 L1042.38 678.816 L1041.82 678.816 L1041.26 678.816 L1040.7 678.816 L1040.14 678.816 L1039.58 678.816 L1039.02 678.816 L1038.46 678.816 L1037.9 678.816 L1037.34 678.816 L1036.78 678.816 L1036.22 678.816 L1035.66 678.816 L1035.1 678.816 L1034.55 678.816 L1033.99 678.816 L1033.43 678.816 L1032.87 678.816 L1032.31 678.816 L1031.75 678.816 L1031.19 678.816 L1030.63 678.816 L1030.07 678.816 L1029.51 678.816 L1028.95 678.816 L1028.39 678.816 L1027.83 678.816 L1027.28 678.816 L1026.72 678.816 L1026.16 678.816 L1025.6 678.816 L1025.04 678.816 L1024.48 678.816 L1023.92 678.816 L1023.36 678.816 L1022.8 678.816 L1022.24 678.816 L1021.68 678.816 L1021.12 678.816 L1020.56 678.816 L1020.01 678.816 L1019.45 678.816 L1018.89 678.816 L1018.33 678.816 L1017.77 678.816 L1017.21 678.816 L1016.65 678.816 L1016.09 678.816 L1015.53 678.816 L1014.97 678.816 L1014.41 678.816 L1013.85 678.816 L1013.29 678.816 L1012.73 678.816 L1012.18 678.816 L1011.62 678.816 L1011.06 678.816 L1010.5 678.816 L1009.94 678.816 L1009.38 678.816 L1008.82 678.816 L1008.26 678.816 L1007.7 678.816 L1007.14 678.816 L1006.58 678.816 L1006.02 678.816 L1005.46 678.816 L1004.91 678.816 L1004.35 678.816 L1003.79 678.816 L1003.23 678.816 L1002.67 678.816 L1002.11 678.816 L1001.55 678.816 L1000.99 678.816 L1000.43 678.816 L999.872 678.816 L999.313 678.816 L998.754 678.816 L998.194 678.816 L997.635 678.816 L997.076 678.816 L996.517 678.816 L995.957 678.816 L995.398 678.816 L994.839 678.816 L994.28 678.816 L993.72 678.816 L993.161 678.816 L992.602 678.816 L992.043 678.816 L991.483 678.816 L990.924 678.816 L990.365 678.816 L989.806 678.816 L989.246 678.816 L988.687 678.816 L988.128 678.816 L987.569 678.816 L987.009 678.816 L986.45 678.816 L985.891 678.816 L985.332 678.816 L984.772 678.816 L984.213 678.816 L983.654 678.816 L983.095 678.816 L982.535 678.816 L981.976 678.816 L981.417 678.816 L980.858 678.816 L980.298 678.816 L979.739 678.816 L979.18 678.816 L978.621 678.816 L978.061 678.816 L977.502 678.816 L976.943 678.816 L976.384 678.816 L975.824 678.816 L975.265 678.816 L974.706 678.816 L974.147 678.816 L973.587 678.816 L973.028 678.816 L972.469 678.816 L971.91 678.816 L971.35 678.816 L970.791 678.816 L970.232 678.816 L969.673 678.816 L969.113 678.816 L968.554 678.816 L967.995 678.816 L967.436 678.816 L966.876 678.816 L966.317 678.816 L965.758 678.816 L965.199 678.816 L964.639 678.816 L964.08 678.816 L963.521 678.816 L962.962 678.816 L962.402 678.816 L961.843 678.816 L961.284 678.816 L960.725 678.816 L960.165 678.816 L959.606 678.816 L959.047 678.816 L958.488 678.816 L957.928 678.816 L957.369 678.816 L956.81 678.816 L956.251 678.816 L955.691 678.816 L955.132 678.816 L954.573 678.816 L954.014 678.816 L953.454 678.816 L952.895 678.816 L952.336 678.816 L951.777 678.816 L951.217 678.816 L950.658 678.816 L950.099 678.816 L949.54 678.816 L948.98 678.816 L948.421 678.816 L947.862 678.816 L947.303 678.816 L946.743 678.816 L946.184 678.816 L945.625 678.816 L945.066 678.816 L944.506 678.816 L943.947 678.816 L943.388 678.816 L942.829 678.816 L942.269 678.816 L941.71 678.816 L941.151 678.816 L940.592 678.816 L940.032 678.816 L939.473 678.816 L938.914 678.816 L938.355 678.816 L937.795 678.816 L937.236 678.816 L936.677 678.816 L936.118 678.816 L935.558 678.816 L934.999 678.816 L934.44 678.816 L933.881 678.816 L933.321 678.816 L932.762 678.816 L932.203 678.816 L931.644 678.816 L931.084 678.816 L930.525 678.816 L929.966 678.816 L929.406 678.816 L928.847 678.816 L928.288 678.816 L927.729 678.816 L927.169 678.816 L926.61 678.816 L926.051 678.816 L925.492 678.816 L924.932 678.816 L924.373 678.816 L923.814 678.816 L923.255 678.816 L922.695 678.816 L922.136 678.816 L921.577 678.816 L921.018 678.816 L920.458 678.816 L919.899 678.816 L919.34 678.816 L918.781 678.816 L918.221 678.816 L917.662 678.816 L917.103 678.816 L916.544 678.816 L915.984 678.816 L915.425 678.816 L914.866 678.816 L914.307 678.816 L913.747 678.816 L913.188 678.816 L912.629 678.816 L912.07 678.816 L911.51 678.816 L910.951 678.816 L910.392 678.816 L909.833 678.816 L909.273 678.816 L908.714 678.816 L908.155 678.816 L907.596 678.816 L907.036 678.816 L906.477 678.816 L905.918 678.816 L905.359 678.816 L904.799 678.816 L904.24 678.816 L903.681 678.816 L903.122 678.816 L902.562 678.816 L902.003 678.816 L901.444 678.816 L900.885 678.816 L900.325 678.816 L899.766 678.816 L899.207 678.816 L898.648 678.816 L898.088 678.816 L897.529 678.816 L896.97 678.816 L896.411 678.816 L895.851 678.816 L895.292 678.816 L894.733 678.816 L894.174 678.816 L893.614 678.816 L893.055 678.816 L892.496 678.816 L891.937 678.816 L891.377 678.816 L890.818 678.816 L890.259 678.816 L889.7 678.816 L889.14 678.816 L888.581 678.816 L888.022 678.816 L887.463 678.816 L886.903 678.816 L886.344 678.816 L885.785 678.816 L885.226 678.816 L884.666 678.816 L884.107 678.816 L883.548 678.816 L882.989 678.816 L882.429 678.816 L881.87 678.816 L881.311 678.816 L880.752 678.816 L880.192 678.816 L879.633 678.816 L879.074 678.816 L878.515 678.816 L877.955 678.816 L877.396 678.816 L876.837 678.816 L876.278 678.816 L875.718 678.816 L875.159 678.816 L874.6 678.816 L874.041 678.816 L873.481 678.816 L872.922 678.816 L872.363 678.816 L871.804 678.816 L871.244 678.816 L870.685 678.816 L870.126 678.816 L869.567 678.816 L869.007 678.816 L868.448 678.816 L867.889 678.816 L867.33 678.816 L866.77 678.816 L866.211 678.816 L865.652 678.816 L865.093 678.816 L864.533 678.816 L863.974 678.816 L863.415 678.816 L862.856 678.816 L862.296 678.816 L861.737 678.816 L861.178 678.816 L860.619 678.816 L860.059 678.816 L859.5 678.816 L858.941 678.816 L858.382 678.816 L857.822 678.816 L857.263 678.816 L856.704 678.816 L856.145 678.816 L855.585 678.816 L855.026 678.816 L854.467 678.816 L853.908 678.816 L853.348 678.816 L852.789 678.816 L852.23 678.816 L851.671 678.816 L851.111 678.816 L850.552 678.816 L849.993 678.816 L849.434 678.816 L848.874 678.816 L848.315 678.816 L847.756 678.816 L847.197 678.816 L846.637 678.816 L846.078 678.816 L845.519 678.816 L844.96 678.816 L844.4 678.816 L843.841 678.816 L843.282 678.816 L842.723 678.816 L842.163 678.816 L841.604 678.816 L841.045 678.816 L840.486 678.816 L839.926 678.816 L839.367 678.816 L838.808 678.816 L838.249 678.816 L837.689 678.816 L837.13 678.816 L836.571 678.816 L836.012 678.816 L835.452 678.816 L834.893 678.816 L834.334 678.816 L833.775 678.816 L833.215 678.816 L832.656 678.816 L832.097 678.816 L831.538 678.816 L830.978 678.816 L830.419 678.816 L829.86 678.816 L829.301 678.816 L828.741 678.816 L828.182 678.816 L827.623 678.816 L827.064 678.816 L826.504 678.816 L825.945 678.816 L825.386 678.816 L824.827 678.816 L824.267 678.816 L823.708 678.816 L823.149 678.816 L822.59 678.816 L822.03 678.816 L821.471 678.816 L820.912 678.816 L820.353 678.816 L819.793 678.816 L819.234 678.816 L818.675 678.816 L818.116 678.816 L817.556 678.816 L816.997 678.816 L816.438 678.816 L815.879 678.816 L815.319 678.816 L814.76 678.816 L814.201 678.816 L813.642 678.816 L813.082 678.816 L812.523 678.816 L811.964 678.816 L811.405 678.816 L810.845 678.816 L810.286 678.816 L809.727 678.816 L809.168 678.816 L808.608 678.816 L808.049 678.816 L807.49 678.816 L806.931 678.816 L806.371 678.816 L805.812 678.816 L805.253 678.816 L804.693 678.816 L804.134 678.816 L803.575 678.816 L803.016 678.816 L802.456 678.816 L801.897 678.816 L801.338 678.816 L800.779 678.816 L800.219 678.816 L799.66 678.816 L799.101 678.816 L798.542 678.816 L797.982 678.816 L797.423 678.816 L796.864 678.816 L796.305 678.816 L795.745 678.816 L795.186 678.816 L794.627 678.816 L794.068 678.816 L793.508 678.816 L792.949 678.816 L792.39 678.816 L791.831 678.816 L791.271 678.816 L790.712 678.816 L790.153 678.816 L789.594 678.816 L789.034 678.816 L788.475 678.816 L787.916 678.816 L787.357 678.816 L786.797 678.816 L786.238 678.816 L785.679 678.816 L785.12 678.816 L784.56 678.816 L784.001 678.816 L783.442 678.816 L782.883 678.816 L782.323 678.816 L781.764 678.816 L781.205 678.816 L780.646 678.816 L780.086 678.816 L779.527 678.816 L778.968 678.816 L778.409 678.816 L777.849 678.816 L777.29 678.816 L776.731 678.816 L776.172 678.816 L775.612 678.816 L775.053 678.816 L774.494 678.816 L773.935 678.816 L773.375 678.816 L772.816 678.816 L772.257 678.816 L771.698 678.816 L771.138 678.816 L770.579 678.816 L770.02 678.816 L769.461 678.816 L768.901 678.816 L768.342 678.816 L767.783 678.816 L767.224 678.816 L766.664 678.816 L766.105 678.816 L765.546 678.816 L764.987 678.816 L764.427 678.816 L763.868 678.816 L763.309 678.816 L762.75 678.816 L762.19 678.816 L761.631 678.816 L761.072 678.816 L760.513 678.816 L759.953 678.816 L759.394 678.816 L758.835 678.816 L758.276 678.816 L757.716 678.816 L757.157 678.816 L756.598 678.816 L756.039 678.816 L755.479 678.816 L754.92 678.816 L754.361 678.816 L753.802 678.816 L753.242 678.816 L752.683 678.816 L752.124 678.816 L751.565 678.816 L751.005 678.816 L750.446 678.816 L749.887 678.816 L749.328 678.816 L748.768 678.816 L748.209 678.816 L747.65 678.816 L747.091 678.816 L746.531 678.816 L745.972 678.816 L745.413 678.816 L744.854 678.816 L744.294 678.816 L743.735 678.816 L743.176 678.816 L742.617 678.816 L742.057 678.816 L741.498 678.816 L740.939 678.816 L740.38 678.816 L739.82 678.816 L739.261 678.816 L738.702 678.816 L738.143 678.816 L737.583 678.816 L737.024 678.816 L736.465 678.816 L735.906 678.816 L735.346 678.816 L734.787 678.816 L734.228 678.816 L733.669 678.816 L733.109 678.816 L732.55 678.816 L731.991 678.816 L731.432 678.816 L730.872 678.816 L730.313 678.816 L729.754 678.816 L729.195 678.816 L728.635 678.816 L728.076 678.816 L727.517 678.816 L726.958 678.816 L726.398 678.816 L725.839 678.816 L725.28 678.816 L724.721 678.816 L724.161 678.816 L723.602 678.816 L723.043 678.816 L722.484 678.816 L721.924 678.816 L721.365 678.816 L720.806 678.816 L720.247 678.816  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.229 720.806,684.229 721.365,684.229 721.924,684.229 722.484,684.229 723.043,684.229 723.602,684.229 724.161,684.229 724.721,684.229 725.28,684.229 725.839,684.229 726.398,684.229 726.958,684.229 727.517,684.229 728.076,684.229 728.635,684.229 729.195,684.229 729.754,684.229 730.313,684.229 730.872,684.229 731.432,684.229 731.991,684.229 732.55,684.229 733.109,684.229 733.669,684.229 734.228,684.229 734.787,684.229 735.346,684.229 735.906,684.229 736.465,684.229 737.024,684.229 737.583,684.229 738.143,684.229 738.702,684.229 739.261,684.229 739.82,684.229 740.38,684.229 740.939,684.229 741.498,684.229 742.057,684.229 742.617,684.229 743.176,684.229 743.735,684.229 744.294,684.229 744.854,684.229 745.413,684.229 745.972,684.229 746.531,684.229 747.091,684.229 747.65,684.229 748.209,684.229 748.768,684.229 749.328,684.229 749.887,684.229 750.446,684.229 751.005,684.229 751.565,684.229 752.124,684.229 752.683,684.229 753.242,684.229 753.802,684.229 754.361,684.229 754.92,684.229 755.479,684.229 756.039,684.229 756.598,684.229 757.157,684.229 757.716,684.229 758.276,684.229 758.835,684.229 759.394,684.229 759.953,684.229 760.513,684.229 761.072,684.229 761.631,684.229 762.19,684.229 762.75,684.229 763.309,684.229 763.868,684.229 764.427,684.229 764.987,684.229 765.546,684.229 766.105,684.229 766.664,684.229 767.224,684.229 767.783,684.229 768.342,684.229 768.901,684.229 769.461,684.229 770.02,684.229 770.579,684.229 771.138,684.229 771.698,684.229 772.257,684.229 772.816,684.229 773.375,684.229 773.935,684.229 774.494,684.229 775.053,684.229 775.612,684.229 776.172,684.229 776.731,684.229 777.29,684.229 777.849,684.229 778.409,684.229 778.968,684.229 779.527,684.229 780.086,684.229 780.646,684.229 781.205,684.229 781.764,684.229 782.323,684.229 782.883,684.229 783.442,684.229 784.001,684.229 784.56,684.229 785.12,684.229 785.679,684.229 786.238,684.229 786.797,684.229 787.357,684.229 787.916,684.229 788.475,684.229 789.034,684.229 789.594,684.229 790.153,684.229 790.712,684.229 791.271,684.229 791.831,684.229 792.39,684.229 792.949,684.229 793.508,684.229 794.068,684.229 794.627,684.229 795.186,684.229 795.745,684.229 796.305,684.229 796.864,684.229 797.423,684.229 797.982,684.229 798.542,684.229 799.101,684.229 799.66,684.229 800.219,684.229 800.779,684.229 801.338,684.229 801.897,684.229 802.456,684.229 803.016,684.229 803.575,684.229 804.134,684.229 804.693,684.229 805.253,684.229 805.812,684.229 806.371,684.229 806.931,684.229 807.49,684.229 808.049,684.229 808.608,684.229 809.168,684.229 809.727,684.229 810.286,684.229 810.845,684.229 811.405,684.229 811.964,684.229 812.523,684.229 813.082,684.229 813.642,684.229 814.201,684.229 814.76,684.229 815.319,684.229 815.879,684.229 816.438,684.229 816.997,684.229 817.556,684.229 818.116,684.229 818.675,684.229 819.234,684.229 819.793,684.229 820.353,684.229 820.912,684.229 821.471,684.229 822.03,684.229 822.59,684.229 823.149,684.229 823.708,684.229 824.267,684.229 824.827,684.229 825.386,684.229 825.945,684.229 826.504,684.229 827.064,684.229 827.623,684.229 828.182,684.229 828.741,684.229 829.301,684.229 829.86,684.229 830.419,684.229 830.978,684.229 831.538,684.229 832.097,684.229 832.656,684.229 833.215,684.229 833.775,684.229 834.334,684.229 834.893,684.229 835.452,684.229 836.012,684.229 836.571,684.229 837.13,684.229 837.689,684.229 838.249,684.229 838.808,684.229 839.367,684.229 839.926,684.229 840.486,684.229 841.045,684.229 841.604,684.229 842.163,684.229 842.723,684.229 843.282,684.229 843.841,684.229 844.4,684.229 844.96,684.229 845.519,684.229 846.078,684.229 846.637,684.229 847.197,684.229 847.756,684.229 848.315,684.229 848.874,684.229 849.434,684.229 849.993,684.229 850.552,684.229 851.111,684.229 851.671,684.229 852.23,684.229 852.789,684.229 853.348,684.229 853.908,684.229 854.467,684.229 855.026,684.229 855.585,684.229 856.145,684.229 856.704,684.229 857.263,684.229 857.822,684.229 858.382,684.229 858.941,684.229 859.5,684.229 860.059,684.229 860.619,684.229 861.178,684.229 861.737,684.229 862.296,684.229 862.856,684.229 863.415,684.229 863.974,684.229 864.533,684.229 865.093,684.229 865.652,684.229 866.211,684.229 866.77,684.229 867.33,684.229 867.889,684.229 868.448,684.229 869.007,684.229 869.567,684.229 870.126,684.229 870.685,684.229 871.244,684.229 871.804,684.229 872.363,684.229 872.922,684.229 873.481,684.229 874.041,684.229 874.6,684.229 875.159,684.229 875.718,684.229 876.278,684.229 876.837,684.229 877.396,684.229 877.955,684.229 878.515,684.229 879.074,684.229 879.633,684.229 880.192,684.229 880.752,684.229 881.311,684.229 881.87,684.229 882.429,684.229 882.989,684.229 883.548,684.229 884.107,684.229 884.666,684.229 885.226,684.229 885.785,684.229 886.344,684.229 886.903,684.229 887.463,684.229 888.022,684.229 888.581,684.229 889.14,684.229 889.7,684.229 890.259,684.229 890.818,684.229 891.377,684.229 891.937,684.229 892.496,684.229 893.055,684.229 893.614,684.229 894.174,684.229 894.733,684.229 895.292,684.229 895.851,684.229 896.411,684.229 896.97,684.229 897.529,684.229 898.088,684.229 898.648,684.229 899.207,684.229 899.766,684.229 900.325,684.229 900.885,684.229 901.444,684.229 902.003,684.229 902.562,684.229 903.122,684.229 903.681,684.229 904.24,684.229 904.799,684.229 905.359,684.229 905.918,684.229 906.477,684.229 907.036,684.229 907.596,684.229 908.155,684.229 908.714,684.229 909.273,684.229 909.833,684.229 910.392,684.229 910.951,684.229 911.51,684.229 912.07,684.229 912.629,684.229 913.188,684.229 913.747,684.229 914.307,684.229 914.866,684.229 915.425,684.229 915.984,684.229 916.544,684.229 917.103,684.229 917.662,684.229 918.221,684.229 918.781,684.229 919.34,684.229 919.899,684.229 920.458,684.229 921.018,684.229 921.577,684.229 922.136,684.229 922.695,684.229 923.255,684.229 923.814,684.229 924.373,684.229 924.932,684.229 925.492,684.229 926.051,684.229 926.61,684.229 927.169,684.229 927.729,684.229 928.288,684.229 928.847,684.229 929.406,684.229 929.966,684.229 930.525,684.229 931.084,684.229 931.644,684.229 932.203,684.229 932.762,684.229 933.321,684.229 933.881,684.229 934.44,684.229 934.999,684.229 935.558,684.229 936.118,684.229 936.677,684.229 937.236,684.229 937.795,684.229 938.355,684.229 938.914,684.229 939.473,684.229 940.032,684.229 940.592,684.229 941.151,684.229 941.71,684.229 942.269,684.229 942.829,684.229 943.388,684.229 943.947,684.229 944.506,684.229 945.066,684.229 945.625,684.229 946.184,684.229 946.743,684.229 947.303,684.229 947.862,684.229 948.421,684.229 948.98,684.229 949.54,684.229 950.099,684.229 950.658,684.229 951.217,684.229 951.777,684.229 952.336,684.229 952.895,684.229 953.454,684.229 954.014,684.229 954.573,684.229 955.132,684.229 955.691,684.229 956.251,684.229 956.81,684.229 957.369,684.229 957.928,684.229 958.488,684.229 959.047,684.229 959.606,684.229 960.165,684.229 960.725,684.229 961.284,684.229 961.843,684.229 962.402,684.229 962.962,684.229 963.521,684.229 964.08,684.229 964.639,684.229 965.199,684.229 965.758,684.229 966.317,684.229 966.876,684.229 967.436,684.229 967.995,684.229 968.554,684.229 969.113,684.229 969.673,684.229 970.232,684.229 970.791,684.229 971.35,684.229 971.91,684.229 972.469,684.229 973.028,684.229 973.587,684.229 974.147,684.229 974.706,684.229 975.265,684.229 975.824,684.229 976.384,684.229 976.943,684.229 977.502,684.229 978.061,684.229 978.621,684.229 979.18,684.229 979.739,684.229 980.298,684.229 980.858,684.229 981.417,684.229 981.976,684.229 982.535,684.229 983.095,684.229 983.654,684.229 984.213,684.229 984.772,684.229 985.332,684.229 985.891,684.229 986.45,684.229 987.009,684.229 987.569,684.229 988.128,684.229 988.687,684.229 989.246,684.229 989.806,684.229 990.365,684.229 990.924,684.229 991.483,684.229 992.043,684.229 992.602,684.229 993.161,684.229 993.72,684.229 994.28,684.229 994.839,684.229 995.398,684.229 995.957,684.229 996.517,684.229 997.076,684.229 997.635,684.229 998.194,684.229 998.754,684.229 999.313,684.229 999.872,684.229 1000.43,684.229 1000.99,684.229 1001.55,684.229 1002.11,684.229 1002.67,684.229 1003.23,684.229 1003.79,684.229 1004.35,684.229 1004.91,684.229 1005.46,684.229 1006.02,684.229 1006.58,684.229 1007.14,684.229 1007.7,684.229 1008.26,684.229 1008.82,684.229 1009.38,684.229 1009.94,684.229 1010.5,684.229 1011.06,684.229 1011.62,684.229 1012.18,684.229 1012.73,684.229 1013.29,684.229 1013.85,684.229 1014.41,684.229 1014.97,684.229 1015.53,684.229 1016.09,684.229 1016.65,684.229 1017.21,684.229 1017.77,684.229 1018.33,684.229 1018.89,684.229 1019.45,684.229 1020.01,684.229 1020.56,684.229 1021.12,684.229 1021.68,684.229 1022.24,684.229 1022.8,684.229 1023.36,684.229 1023.92,684.229 1024.48,684.229 1025.04,684.229 1025.6,684.229 1026.16,684.229 1026.72,684.229 1027.28,684.229 1027.83,684.229 1028.39,684.229 1028.95,684.229 1029.51,684.229 1030.07,684.229 1030.63,684.229 1031.19,684.229 1031.75,684.229 1032.31,684.229 1032.87,684.229 1033.43,684.229 1033.99,684.229 1034.55,684.229 1035.1,684.229 1035.66,684.229 1036.22,684.229 1036.78,684.229 1037.34,684.229 1037.9,684.229 1038.46,684.229 1039.02,684.229 1039.58,684.229 1040.14,684.229 1040.7,684.229 1041.26,684.229 1041.82,684.229 1042.38,684.229 1042.93,684.229 1043.49,684.229 1044.05,684.229 1044.61,684.229 1045.17,684.229 1045.73,684.229 1046.29,684.229 1046.85,684.229 1047.41,684.229 1047.97,684.229 1048.53,684.229 1049.09,684.229 1049.65,684.229 1050.2,684.229 1050.76,684.229 1051.32,684.229 1051.88,684.229 1052.44,684.229 1053,684.229 1053.56,684.229 1054.12,684.229 1054.68,684.229 1055.24,684.229 1055.8,684.229 1056.36,684.229 1056.92,684.229 1057.48,684.229 1058.03,684.229 1058.59,684.229 1059.15,684.229 1059.71,684.229 1060.27,684.229 1060.83,684.229 1061.39,684.229 1061.95,684.229 1062.51,684.229 1063.07,684.229 1063.63,684.229 1064.19,684.229 1064.75,684.229 1065.3,684.229 1065.86,684.229 1066.42,684.229 1066.98,684.229 1067.54,684.229 1068.1,684.229 1068.66,684.229 1069.22,684.229 1069.78,684.229 1070.34,684.229 1070.9,684.229 1071.46,684.229 1072.02,684.229 1072.57,684.229 1073.13,684.229 1073.69,684.229 1074.25,684.229 1074.81,684.229 1075.37,684.229 1075.93,684.229 1076.49,684.229 1077.05,684.229 1077.61,684.229 1078.17,684.229 1078.73,684.229 1079.29,684.229 1079.85,684.229 1080.4,684.229 1080.96,684.229 1081.52,684.229 1082.08,684.229 1082.64,684.229 1083.2,684.229 1083.76,684.229 1084.32,684.229 1084.88,684.229 1085.44,684.229 1086,684.229 1086.56,684.229 1087.12,684.229 1087.67,684.229 1088.23,684.229 1088.79,684.229 1089.35,684.229 1089.91,684.229 1090.47,684.229 1091.03,684.229 1091.59,684.229 1092.15,684.229 1092.71,684.229 1093.27,684.229 1093.83,684.229 1094.39,684.229 1094.94,684.229 1095.5,684.229 1096.06,684.229 1096.62,684.229 1097.18,684.229 1097.74,684.229 1098.3,684.229 1098.86,684.229 1099.42,684.229 1099.98,684.229 1100.54,684.229 1101.1,684.229 1101.66,684.229 1102.22,684.229 1102.77,684.229 1103.33,684.229 1103.89,684.229 1104.45,684.229 1105.01,684.229 1105.57,684.229 1106.13,684.229 1106.69,684.229 1107.25,684.229 1107.81,684.229 1108.37,684.229 1108.93,684.229 1109.49,684.229 1110.04,684.229 1110.6,684.229 1111.16,684.229 1111.72,684.229 1112.28,684.229 1112.84,684.229 1113.4,684.229 1113.96,684.229 1114.52,684.229 1115.08,684.229 1115.64,684.229 1116.2,684.229 1116.76,684.229 1117.31,684.229 1117.87,684.229 1118.43,684.229 1118.99,684.229 1119.55,684.229 1120.11,684.229 1120.67,684.229 1121.23,684.229 1121.79,684.229 1122.35,684.229 1122.91,684.229 1123.47,684.229 1124.03,684.229 1124.59,684.229 1125.14,684.229 1125.7,684.229 1126.26,684.229 1126.82,684.229 1127.38,684.229 1127.94,684.229 1128.5,684.229 1129.06,684.229 1129.62,684.229 1130.18,684.229 1130.74,684.229 1131.3,684.229 1131.86,684.229 1132.41,684.229 1132.97,684.229 1133.53,684.229 1134.09,684.229 1134.65,684.229 1135.21,684.229 1135.77,684.229 1136.33,684.229 1136.89,684.229 1137.45,684.229 1138.01,684.229 1138.57,684.229 1139.13,684.229 1139.68,684.229 1140.24,684.229 1140.8,684.229 1141.36,684.229 1141.92,684.229 1142.48,684.229 1143.04,684.229 1143.6,684.229 1144.16,684.229 1144.72,684.229 1145.28,684.229 1145.84,684.229 1146.4,684.229 1146.96,684.229 1147.51,684.229 1148.07,684.229 1148.63,684.229 1149.19,684.229 1149.75,684.229 1150.31,684.229 1150.87,684.229 1151.43,684.229 1151.99,684.229 1152.55,684.229 1153.11,684.229 1153.67,684.229 1154.23,684.229 1154.78,684.229 1155.34,684.229 1155.9,684.229 1156.46,684.229 1157.02,684.229 1157.58,684.229 1158.14,684.229 1158.7,684.229 1159.26,684.229 1159.82,684.229 1160.38,684.229 1160.94,684.229 1161.5,684.229 1162.05,684.229 1162.61,684.229 1163.17,684.229 1163.73,684.229 1164.29,684.229 1164.85,684.229 1165.41,684.229 1165.97,684.229 1166.53,684.229 1167.09,684.229 1167.65,684.229 1168.21,684.229 1168.77,684.229 1169.33,684.229 1169.88,684.229 1170.44,684.229 1171,684.229 1171.56,684.229 1172.12,684.229 1172.68,684.229 1173.24,684.229 1173.8,684.229 1174.36,684.229 1174.92,684.229 1175.48,684.229 1176.04,684.229 1176.6,684.229 1177.15,684.229 1177.71,684.229 1178.27,684.229 1178.83,684.229 1179.39,684.229 1179.95,684.229 1180.51,684.229 1181.07,684.229 1181.63,684.229 1182.19,684.229 1182.75,684.229 1183.31,684.229 1183.87,684.229 1184.43,684.229 1184.98,684.229 1185.54,684.229 1186.1,684.229 1186.66,684.229 1187.22,684.229 1187.78,684.229 1188.34,684.229 1188.9,684.229 1189.46,684.229 1190.02,684.229 1190.58,684.229 1191.14,684.229 1191.7,684.229 1192.25,684.229 1192.81,684.229 1193.37,684.229 1193.93,684.229 1194.49,684.229 1195.05,684.229 1195.61,684.229 1196.17,684.229 1196.73,684.229 1197.29,684.229 1197.85,684.229 1198.41,684.229 1198.97,684.229 1199.52,684.229 1200.08,684.229 1200.64,684.229 1201.2,684.229 1201.76,684.229 1202.32,684.229 1202.88,684.229 1203.44,684.229 1204,684.229 1204.56,684.229 1205.12,684.229 1205.68,684.229 1206.24,684.229 1206.8,684.229 1207.35,684.229 1207.91,684.229 1208.47,684.229 1209.03,684.229 1209.59,684.229 1210.15,684.229 1210.71,684.229 1211.27,684.229 1211.83,684.229 1212.39,684.229 1212.95,684.229 1213.51,684.229 1214.07,684.229 1214.62,684.229 1215.18,684.229 1215.74,684.229 1216.3,684.229 1216.86,684.229 1217.42,684.229 1217.98,684.229 1218.54,684.229 1219.1,684.229 1219.66,684.229 1220.22,684.229 1220.78,684.229 1221.34,684.229 1221.89,684.229 1222.45,684.229 1223.01,684.229 1223.57,684.229 1224.13,684.229 1224.69,684.229 1225.25,684.229 1225.81,684.229 1226.37,684.229 1226.93,684.229 1227.49,684.229 1228.05,684.229 1228.61,684.229 1229.17,684.229 1229.72,684.229 1230.28,684.229 1230.84,684.229 1231.4,684.229 1231.96,684.229 1232.52,684.229 1233.08,684.229 1233.64,684.229 1234.2,684.229 1234.76,684.229 1235.32,684.229 1235.88,684.229 1236.44,684.229 1236.99,684.229 1237.55,684.229 1238.11,684.229 1238.67,684.229 1239.23,684.229 1239.79,684.229 1240.35,684.229 1240.91,684.229 1241.47,684.229 1242.03,684.229 1242.59,684.229 1243.15,684.229 1243.71,684.229 1244.26,684.229 1244.82,684.229 1245.38,684.229 1245.94,684.229 1246.5,684.229 1247.06,684.229 1247.62,684.229 1248.18,684.229 1248.74,684.229 1249.3,684.229 1249.86,684.229 1250.42,684.229 1250.98,684.229 1251.54,684.229 1252.09,684.229 1252.65,684.229 1253.21,684.229 1253.77,684.229 1254.33,684.229 1254.89,684.229 1255.45,684.229 1256.01,684.229 1256.57,684.229 1257.13,684.229 1257.69,684.229 1258.25,684.229 1258.81,684.229 1259.36,684.229 1259.92,684.229 1260.48,684.229 1261.04,684.229 1261.6,684.229 1262.16,684.229 1262.72,684.229 1263.28,684.229 1263.84,684.229 1264.4,684.229 1264.96,684.229 1265.52,684.229 1266.08,684.229 1266.63,684.229 1267.19,684.229 1267.75,684.229 1268.31,684.229 1268.87,684.229 1269.43,684.229 1269.99,684.229 1270.55,684.229 1271.11,684.229 1271.67,684.229 1272.23,684.229 1272.79,684.229 1273.35,684.229 1273.91,684.229 1274.46,684.229 1275.02,684.229 1275.58,684.229 1276.14,684.229 1276.7,684.229 1277.26,684.229 1277.82,684.229 1278.38,684.229 1278.94,684.229 1279.5,684.229 1280.06,684.229 1280.62,684.229 1281.18,684.229 1281.73,684.229 1282.29,684.229 1282.85,684.229 1283.41,684.229 1283.97,684.229 1284.53,684.229 1285.09,684.229 1285.65,684.229 1286.21,684.229 1286.77,684.229 1287.33,684.229 1287.89,684.229 1288.45,684.229 1289,684.229 1289.56,684.229 1290.12,684.229 1290.68,684.229 1291.24,684.229 1291.8,684.229 1292.36,684.229 1292.92,684.229 1293.48,684.229 1294.04,684.229 1294.6,684.229 1295.16,684.229 1295.72,684.229 1296.28,684.229 1296.83,684.229 1297.39,684.229 1297.95,684.229 1298.51,684.229 1299.07,684.229 1299.63,684.229 1300.19,684.229 1300.75,684.229 1301.31,684.229 1301.87,684.229 1302.43,684.229 1302.99,684.229 1303.55,684.229 1304.1,684.229 1304.66,684.229 1305.22,684.229 1305.78,684.229 1306.34,684.229 1306.9,684.229 1307.46,684.229 1308.02,684.229 1308.58,684.229 1309.14,684.229 1309.7,684.229 1310.26,684.229 1310.82,684.229 1311.38,684.229 1311.93,684.229 1312.49,684.229 1313.05,684.229 1313.61,684.229 1314.17,684.229 1314.73,684.229 1315.29,684.229 1315.85,684.229 1316.41,684.229 1316.97,684.229 1317.53,684.229 1318.09,684.229 1318.65,684.229 1319.2,684.229 1319.76,684.229 1320.32,684.229 1320.88,684.229 1321.44,684.229 1322,684.229 1322.56,684.229 1323.12,684.229 1323.68,684.229 1324.24,684.229 1324.8,684.229 1325.36,684.229 1325.92,684.229 1326.47,684.229 1327.03,684.229 1327.59,684.229 1328.15,684.229 1328.71,684.229 1329.27,684.229 1329.83,684.229 1330.39,684.229 1330.95,684.229 1331.51,684.229 1332.07,684.229 1332.63,684.229 1333.19,684.229 1333.75,684.229 1334.3,684.229 1334.86,684.229 1335.42,684.229 1335.98,684.229 1336.54,684.229 1337.1,684.229 1337.66,684.229 1338.22,684.229 1338.78,684.229 1339.34,684.229 1339.9,684.229 1340.46,684.229 1341.02,684.229 1341.57,684.229 1342.13,684.229 1342.69,684.229 1343.25,684.229 1343.81,684.229 1344.37,684.229 1344.93,684.229 1345.49,684.229 1346.05,684.229 1346.61,684.229 1347.17,684.229 1347.73,684.229 1348.29,684.229 1348.84,684.229 1349.4,684.229 1349.96,684.229 1350.52,684.229 1351.08,684.229 1351.64,684.229 1352.2,684.229 1352.76,684.229 1353.32,684.229 1353.88,684.229 1354.44,684.229 1355,684.229 1355.56,684.229 1356.12,684.229 1356.67,684.229 1357.23,684.229 1357.79,684.229 1358.35,684.229 1358.91,684.229 1359.47,684.229 1360.03,684.229 1360.59,684.229 1361.15,684.229 1361.71,684.229 1362.27,684.229 1362.83,684.229 1363.39,684.229 1363.94,684.229 1364.5,684.229 1365.06,684.229 1365.62,684.229 1366.18,684.229 1366.74,684.229 1367.3,684.229 1367.86,684.229 1368.42,684.229 1368.98,684.229 1369.54,684.229 1370.1,684.229 1370.66,684.229 1371.21,684.229 1371.77,684.229 1372.33,684.229 1372.89,684.229 1373.45,684.229 1374.01,684.229 1374.57,684.229 1375.13,684.229 1375.69,684.229 1376.25,684.229 1376.81,684.229 1377.37,684.229 1377.93,684.229 1378.49,684.229 1379.04,684.229 1379.6,684.229 1380.16,684.229 1380.72,684.229 1381.28,684.229 1381.84,684.229 1382.4,684.229 1382.96,684.229 1383.52,684.229 1384.08,684.229 1384.64,684.229 1385.2,684.229 1385.76,684.229 1386.31,684.229 1386.87,684.229 1387.43,684.229 1387.99,684.229 1388.55,684.229 1389.11,684.229 1389.67,684.229 1390.23,684.229 1390.79,684.229 1391.35,684.229 1391.91,684.229 1392.47,684.229 1393.03,684.229 1393.58,684.229 1394.14,684.229 1394.7,684.229 1395.26,684.229 1395.82,684.229 1396.38,684.229 1396.94,684.229 1397.5,684.229 1398.06,684.229 1398.62,684.229 1399.18,684.229 1399.74,684.229 1400.3,684.229 1400.86,684.229 1401.41,684.229 1401.97,684.229 1402.53,684.229 1403.09,684.229 1403.65,684.229 1404.21,684.229 1404.77,684.229 1405.33,684.229 1405.89,684.229 1406.45,684.229 1407.01,684.229 1407.57,684.229 1408.13,684.229 1408.68,684.229 1409.24,684.229 1409.8,684.229 1410.36,684.229 1410.92,684.229 1411.48,684.229 1412.04,684.229 1412.6,684.229 1413.16,684.229 1413.72,684.229 1414.28,684.229 1414.84,684.229 1415.4,684.229 1415.95,684.229 1416.51,684.229 1417.07,684.229 1417.63,684.229 1418.19,684.229 1418.75,684.229 1419.31,684.229 1419.87,684.229 1420.43,684.229 1420.99,684.229 1421.55,684.229 1422.11,684.229 1422.67,684.229 1423.23,684.229 1423.78,684.229 1424.34,684.229 1424.9,684.229 1425.46,684.229 1426.02,684.229 1426.58,684.229 1427.14,684.229 1427.7,684.229 1428.26,684.229 1428.82,684.229 1429.38,684.229 1429.94,684.229 1430.5,684.229 1431.05,684.229 1431.61,684.229 1432.17,684.229 1432.73,684.229 1433.29,684.229 1433.85,684.229 1434.41,684.229 1434.97,684.229 1435.53,684.229 1436.09,684.229 1436.65,684.229 1437.21,684.229 1437.77,684.229 1438.33,684.229 1438.88,684.229 1439.44,684.229 1440,684.229 1440.56,684.229 1441.12,684.229 1441.68,684.229 1442.24,684.229 1442.8,684.229 1443.36,684.229 1443.92,684.229 1444.48,684.229 1445.04,684.229 1445.6,684.229 1446.15,684.229 1446.71,684.229 1447.27,684.229 1447.83,684.229 1448.39,684.229 1448.95,684.229 1449.51,684.229 1450.07,684.229 1450.63,684.229 1451.19,684.229 1451.75,684.229 1452.31,684.229 1452.87,684.229 1453.42,684.229 1453.98,684.229 1454.54,684.229 1455.1,684.229 1455.66,684.229 1456.22,684.229 1456.78,684.229 1457.34,684.229 1457.9,684.229 1458.46,684.229 1459.02,684.229 1459.58,684.229 1460.14,684.229 1460.7,684.229 1461.25,684.229 1461.81,684.229 1462.37,684.229 1462.93,684.229 1463.49,684.229 1464.05,684.229 1464.61,684.229 1465.17,684.229 1465.73,684.229 1466.29,684.229 1466.85,684.229 1467.41,684.229 1467.97,684.229 1468.52,684.229 1469.08,684.229 1469.64,684.229 1470.2,684.229 1470.76,684.229 1471.32,684.229 1471.88,684.229 1472.44,684.229 1473,684.229 1473.56,684.229 1474.12,684.229 1474.68,684.229 1475.24,684.229 1475.79,684.229 1476.35,684.229 1476.91,684.229 1477.47,684.229 1478.03,684.229 1478.59,684.229 1479.15,684.229 1479.71,684.229 1480.27,684.229 1480.83,684.229 1481.39,684.229 1481.95,684.229 1482.51,684.229 1483.07,684.229 1483.62,684.229 1484.18,684.229 1484.74,684.229 1485.3,684.229 1485.86,684.229 1486.42,684.229 1486.98,684.229 1487.54,684.229 1488.1,684.229 1488.66,684.229 1489.22,684.229 1489.78,684.229 1490.34,684.229 1490.89,684.229 1491.45,684.229 1492.01,684.229 1492.57,684.229 1493.13,684.229 1493.69,684.229 1494.25,684.229 1494.81,684.229 1495.37,684.229 1495.93,684.229 1496.49,684.229 1497.05,684.229 1497.61,684.229 1498.16,684.229 1498.72,684.229 1499.28,684.229 1499.84,684.229 1500.4,684.229 1500.96,684.229 1501.52,684.229 1502.08,684.229 1502.64,684.229 1503.2,684.229 1503.76,684.229 1504.32,684.229 1504.88,684.229 1505.44,684.229 1505.99,684.229 1506.55,684.229 1507.11,684.229 1507.67,684.229 1508.23,684.229 1508.79,684.229 1509.35,684.229 1509.91,684.229 1510.47,684.229 1511.03,684.229 1511.59,684.229 1512.15,684.229 1512.71,684.229 1513.26,684.229 1513.82,684.229 1514.38,684.229 1514.94,684.229 1515.5,684.229 1516.06,684.229 1516.62,684.229 1517.18,684.229 1517.74,684.229 1518.3,684.229 1518.86,684.229 1519.42,684.229 1519.98,684.229 1520.53,684.229 1521.09,684.229 1521.65,684.229 1522.21,684.229 1522.77,684.229 1523.33,684.229 1523.89,684.229 1524.45,684.229 1525.01,684.229 1525.57,684.229 1526.13,684.229 1526.69,684.229 1527.25,684.229 1527.81,684.229 1528.36,684.229 1528.92,684.229 1529.48,684.229 1530.04,684.229 1530.6,684.229 1531.16,684.229 1531.72,684.229 1532.28,684.229 1532.84,684.229 1533.4,684.229 1533.96,684.229 1534.52,684.229 1535.08,684.229 1535.63,684.229 1536.19,684.229 1536.75,684.229 1537.31,684.229 1537.87,684.229 1538.43,684.229 1538.99,684.229 1539.55,684.229 1540.11,684.229 1540.67,684.229 1541.23,684.229 1541.79,684.229 1542.35,684.229 1542.9,684.229 1543.46,684.229 1544.02,684.229 1544.58,684.229 1545.14,684.229 1545.7,684.229 1546.26,684.229 1546.82,684.229 1547.38,684.229 1547.94,684.229 1548.5,684.229 1549.06,684.229 1549.62,684.229 1550.18,684.229 1550.73,684.229 1551.29,684.229 1551.85,684.229 1552.41,684.229 1552.97,684.229 1553.53,684.229 1554.09,684.229 1554.65,684.229 1555.21,684.229 1555.77,684.229 1556.33,684.229 1556.89,684.229 1557.45,684.229 1558,684.229 1558.56,684.229 1559.12,684.229 1559.68,684.229 1560.24,684.229 1560.8,684.229 1561.36,684.229 1561.92,684.229 1562.48,684.229 1563.04,684.229 1563.6,684.229 1564.16,684.229 1564.72,684.229 1565.28,684.229 1565.83,684.229 1566.39,684.229 1566.95,684.229 1567.51,684.229 1568.07,684.229 1568.63,684.229 1569.19,684.229 1569.75,684.229 1570.31,684.229 1570.87,684.229 1571.43,684.229 1571.99,684.229 1572.55,684.229 1573.1,684.229 1573.66,684.229 1574.22,684.229 1574.78,684.229 1575.34,684.229 1575.9,684.229 1576.46,684.229 1577.02,684.229 1577.58,684.229 1578.14,684.229 1578.7,684.229 1579.26,684.229 1579.82,684.229 1580.37,684.229 1580.93,684.229 1581.49,684.229 1582.05,684.229 1582.61,684.229 1583.17,684.229 1583.73,684.229 1584.29,684.229 1584.85,684.229 1585.41,684.229 1585.97,684.229 1586.53,684.229 1587.09,684.229 1587.65,684.229 1588.2,684.229 1588.76,684.229 1589.32,684.229 1589.88,684.229 1590.44,684.229 1591,684.229 1591.56,684.229 1592.12,684.229 1592.68,684.229 1593.24,684.229 1593.8,684.229 1594.36,684.229 1594.92,684.229 1595.47,684.229 1596.03,684.229 1596.59,684.229 1597.15,684.229 1597.71,684.229 1598.27,684.229 1598.83,684.229 1599.39,684.229 1599.95,684.229 1600.51,684.229 1601.07,684.229 1601.63,684.229 1602.19,684.229 1602.74,684.229 1603.3,684.229 1603.86,684.229 1604.42,684.229 1604.98,684.229 1605.54,684.229 1606.1,684.229 1606.66,684.229 1607.22,684.229 1607.78,684.229 1608.34,684.229 1608.9,684.229 1609.46,684.229 1610.02,684.229 1610.57,684.229 1611.13,684.229 1611.69,684.229 1612.25,684.229 1612.81,684.229 1613.37,684.229 1613.93,684.229 1614.49,684.229 1615.05,684.229 1615.61,684.229 1616.17,684.229 1616.73,684.229 1617.29,684.229 1617.84,684.229 1618.4,684.229 1618.96,684.229 1619.52,684.229 1620.08,684.229 1620.64,684.229 1621.2,684.229 1621.76,684.229 1622.32,684.229 1622.88,684.229 1623.44,684.229 1624,684.229 1624.56,684.229 1625.11,684.229 1625.67,684.229 1626.23,684.229 1626.79,684.229 1627.35,684.229 1627.91,684.229 1628.47,684.229 1629.03,684.229 1629.59,684.229 1630.15,684.229 1630.71,684.229 1631.27,684.229 1631.83,684.229 1632.39,684.229 1632.94,684.229 1633.5,684.229 1634.06,684.229 1634.62,684.229 1635.18,684.229 1635.74,684.229 1636.3,684.229 1636.86,684.229 1637.42,684.229 1637.98,684.229 1638.54,684.229 1639.1,684.229 1639.66,684.229 1640.21,684.229 1640.77,684.229 1641.33,684.229 1641.89,684.229 1642.45,684.229 1643.01,684.229 1643.57,684.229 1644.13,684.229 1644.69,684.229 1645.25,684.229 1645.81,684.229 1646.37,684.229 1646.93,684.229 1647.48,684.229 1648.04,684.229 1648.6,684.229 1649.16,684.229 1649.72,684.229 1650.28,684.229 1650.84,684.229 1651.4,684.229 1651.96,684.229 1652.52,684.229 1653.08,684.229 1653.64,684.229 1654.2,684.229 1654.76,684.229 1655.31,684.229 1655.87,684.229 1656.43,684.229 1656.99,684.229 1657.55,684.229 1658.11,684.229 1658.67,684.229 1659.23,684.229 1659.79,684.229 1660.35,684.229 1660.91,684.229 1661.47,684.229 1662.03,684.229 1662.58,684.229 1663.14,684.229 1663.7,684.229 1664.26,684.229 1664.82,684.229 1665.38,684.229 1665.94,684.229 1666.5,684.229 1667.06,684.229 1667.62,684.229 1668.18,684.229 1668.74,684.229 1669.3,684.229 1669.85,684.229 1670.41,684.229 1670.97,684.229 1671.53,684.229 1672.09,684.229 1672.65,684.229 1673.21,684.229 1673.77,684.229 1674.33,684.229 1674.89,684.229 1675.45,684.229 1676.01,684.229 1676.57,684.229 1677.13,684.229 1677.68,684.229 1678.24,684.229 1678.8,684.229 1679.36,684.229 1679.92,684.229 1680.48,684.229 1681.04,684.229 1681.6,684.229 1682.16,684.229 1682.72,684.229 1683.28,684.229 1683.84,684.229 1684.4,684.229 1684.95,684.229 1685.51,684.229 1686.07,684.229 1686.63,684.229 1687.19,684.229 1687.75,684.229 1688.31,684.229 1688.87,684.229 1689.43,684.229 1689.99,684.229 1690.55,684.229 1691.11,684.229 1691.67,684.229 1692.23,684.229 1692.78,684.229 1693.34,684.229 1693.9,684.229 1694.46,684.229 1695.02,684.229 1695.58,684.229 1696.14,684.229 1696.7,684.229 1697.26,684.229 1697.82,684.229 1698.38,684.229 1698.94,684.229 1699.5,684.229 1700.05,684.229 1700.61,684.229 1701.17,684.229 1701.73,684.229 1702.29,684.229 1702.85,684.229 1703.41,684.229 1703.97,684.229 1704.53,684.229 1705.09,684.229 1705.65,684.229 1706.21,684.229 1706.77,684.229 1707.32,684.229 1707.88,684.229 1708.44,684.229 1709,684.229 1709.56,684.229 1710.12,684.229 1710.68,684.229 1711.24,684.229 1711.8,684.229 1712.36,684.229 1712.92,684.229 1713.48,684.229 1714.04,684.229 1714.6,684.229 1715.15,684.229 1715.71,684.229 1716.27,684.229 1716.83,684.229 1717.39,684.229 1717.95,684.229 1718.51,684.229 1719.07,684.229 1719.63,684.229 1720.19,684.229 1720.75,684.229 1721.31,684.229 1721.87,684.229 1722.42,684.229 1722.98,684.229 1723.54,684.229 1724.1,684.229 1724.66,684.229 1725.22,684.229 1725.78,684.229 1726.34,684.229 1726.9,684.229 1727.46,684.229 1728.02,684.229 1728.58,684.229 1729.14,684.229 1729.69,684.229 1730.25,684.229 1730.81,684.229 1731.37,684.229 1731.93,684.229 1732.49,684.229 1733.05,684.229 1733.61,684.229 1734.17,684.229 1734.73,684.229 1735.29,684.229 1735.85,684.229 1736.41,684.229 1736.97,684.229 1737.52,684.229 1738.08,684.229 1738.64,684.229 1739.2,684.229 1739.76,684.229 1740.32,684.229 1740.88,684.229 1741.44,684.229 1742,684.229 1742.56,684.229 1743.12,684.229 1743.68,684.229 1744.24,684.229 1744.79,684.229 1745.35,684.229 1745.91,684.229 1746.47,684.229 1747.03,684.229 1747.59,684.229 1748.15,684.229 1748.71,684.229 1749.27,684.229 1749.83,684.229 1750.39,684.229 1750.95,684.229 1751.51,684.229 1752.06,684.229 1752.62,684.229 1753.18,684.229 1753.74,684.229 1754.3,684.229 1754.86,684.229 1755.42,684.229 1755.98,684.229 1756.54,684.229 1757.1,684.229 1757.66,684.229 1758.22,684.229 1758.78,684.229 1759.34,684.229 1759.89,684.229 1760.45,684.229 1761.01,684.229 1761.57,684.229 1762.13,684.229 1762.69,684.229 1763.25,684.229 1763.81,684.229 1764.37,684.229 1764.93,684.229 1765.49,684.229 1766.05,684.229 1766.61,684.229 1767.16,684.229 1767.72,684.229 1768.28,684.229 1768.84,684.229 1769.4,684.229 1769.96,684.229 1770.52,684.229 1771.08,684.229 1771.64,684.229 1772.2,684.229 1772.76,684.229 1773.32,684.229 1773.88,684.229 1774.43,684.229 1774.99,684.229 1775.55,684.229 1776.11,684.229 1776.67,684.229 1777.23,684.229 1777.79,684.229 1778.35,684.229 1778.91,684.229 1779.47,684.229 1780.03,684.229 1780.59,684.229 1781.15,684.229 1781.71,684.229 1782.26,684.229 1782.82,684.229 1783.38,684.229 1783.94,684.229 1784.5,684.229 1785.06,684.229 1785.62,684.229 1786.18,684.229 1786.74,684.229 1787.3,684.229 1787.86,684.229 1788.42,684.229 1788.98,684.229 1789.53,684.229 1790.09,684.229 1790.65,684.229 1791.21,684.229 1791.77,684.229 1792.33,684.229 1792.89,684.229 1793.45,684.229 1794.01,684.229 1794.57,684.229 1795.13,684.229 1795.69,684.229 1796.25,684.229 1796.8,684.229 1797.36,684.229 1797.92,684.229 1798.48,684.229 1799.04,684.229 1799.6,684.229 1800.16,684.229 1800.72,684.229 1801.28,684.229 1801.84,684.229 1802.4,684.229 1802.96,684.229 1803.52,684.229 1804.08,684.229 1804.63,684.229 1805.19,684.229 1805.75,684.229 1806.31,684.229 1806.87,684.229 1807.43,684.229 1807.99,684.229 1808.55,684.229 1809.11,684.229 1809.67,684.229 1810.23,684.229 1810.79,684.229 1811.35,684.229 1811.9,684.229 1812.46,684.229 1813.02,684.229 1813.58,684.229 1814.14,684.229 1814.7,684.229 1815.26,684.229 1815.82,684.229 1816.38,684.229 1816.94,684.229 1817.5,684.229 1818.06,684.229 1818.62,684.229 1819.18,684.229 1819.73,684.229 1820.29,684.229 1820.85,684.229 1821.41,684.229 1821.97,684.229 1822.53,684.229 1823.09,684.229 1823.65,684.229 1824.21,684.229 1824.77,684.229 1825.33,684.229 1825.89,684.229 1826.45,684.229 1827,684.229 1827.56,684.229 1828.12,684.229 1828.68,684.229 1829.24,684.229 1829.8,684.229 1830.36,684.229 1830.92,684.229 1831.48,684.229 1832.04,684.229 1832.6,684.229 1833.16,684.229 1833.72,684.229 1834.27,684.229 1834.83,684.229 1835.39,684.229 1835.95,684.229 1836.51,684.229 1837.07,684.229 1837.63,684.229 1838.19,684.229 \"/>\n<path clip-path=\"url(#clip923)\" d=\"M720.247 684.202 L720.806 684.202 L721.365 684.202 L721.924 684.202 L722.484 684.202 L723.043 684.202 L723.602 684.202 L724.161 684.202 L724.721 684.202 L725.28 684.202 L725.839 684.202 L726.398 684.202 L726.958 684.202 L727.517 684.202 L728.076 684.202 L728.635 684.202 L729.195 684.202 L729.754 684.202 L730.313 684.202 L730.872 684.202 L731.432 684.202 L731.991 684.202 L732.55 684.202 L733.109 684.202 L733.669 684.202 L734.228 684.202 L734.787 684.202 L735.346 684.202 L735.906 684.202 L736.465 684.202 L737.024 684.202 L737.583 684.202 L738.143 684.202 L738.702 684.202 L739.261 684.202 L739.82 684.202 L740.38 684.202 L740.939 684.202 L741.498 684.202 L742.057 684.202 L742.617 684.202 L743.176 684.202 L743.735 684.202 L744.294 684.202 L744.854 684.202 L745.413 684.202 L745.972 684.202 L746.531 684.202 L747.091 684.202 L747.65 684.202 L748.209 684.202 L748.768 684.202 L749.328 684.202 L749.887 684.202 L750.446 684.202 L751.005 684.202 L751.565 684.202 L752.124 684.202 L752.683 684.202 L753.242 684.202 L753.802 684.202 L754.361 684.202 L754.92 684.202 L755.479 684.202 L756.039 684.202 L756.598 684.202 L757.157 684.202 L757.716 684.202 L758.276 684.202 L758.835 684.202 L759.394 684.202 L759.953 684.202 L760.513 684.202 L761.072 684.202 L761.631 684.202 L762.19 684.202 L762.75 684.202 L763.309 684.202 L763.868 684.202 L764.427 684.202 L764.987 684.202 L765.546 684.202 L766.105 684.202 L766.664 684.202 L767.224 684.202 L767.783 684.202 L768.342 684.202 L768.901 684.202 L769.461 684.202 L770.02 684.202 L770.579 684.202 L771.138 684.202 L771.698 684.202 L772.257 684.202 L772.816 684.202 L773.375 684.202 L773.935 684.202 L774.494 684.202 L775.053 684.202 L775.612 684.202 L776.172 684.202 L776.731 684.202 L777.29 684.202 L777.849 684.202 L778.409 684.202 L778.968 684.202 L779.527 684.202 L780.086 684.202 L780.646 684.202 L781.205 684.202 L781.764 684.202 L782.323 684.202 L782.883 684.202 L783.442 684.202 L784.001 684.202 L784.56 684.202 L785.12 684.202 L785.679 684.202 L786.238 684.202 L786.797 684.202 L787.357 684.202 L787.916 684.202 L788.475 684.202 L789.034 684.202 L789.594 684.202 L790.153 684.202 L790.712 684.202 L791.271 684.202 L791.831 684.202 L792.39 684.202 L792.949 684.202 L793.508 684.202 L794.068 684.202 L794.627 684.202 L795.186 684.202 L795.745 684.202 L796.305 684.202 L796.864 684.202 L797.423 684.202 L797.982 684.202 L798.542 684.202 L799.101 684.202 L799.66 684.202 L800.219 684.202 L800.779 684.202 L801.338 684.202 L801.897 684.202 L802.456 684.202 L803.016 684.202 L803.575 684.202 L804.134 684.202 L804.693 684.202 L805.253 684.202 L805.812 684.202 L806.371 684.202 L806.931 684.202 L807.49 684.202 L808.049 684.202 L808.608 684.202 L809.168 684.202 L809.727 684.202 L810.286 684.202 L810.845 684.202 L811.405 684.202 L811.964 684.202 L812.523 684.202 L813.082 684.202 L813.642 684.202 L814.201 684.202 L814.76 684.202 L815.319 684.202 L815.879 684.202 L816.438 684.202 L816.997 684.202 L817.556 684.202 L818.116 684.202 L818.675 684.202 L819.234 684.202 L819.793 684.202 L820.353 684.202 L820.912 684.202 L821.471 684.202 L822.03 684.202 L822.59 684.202 L823.149 684.202 L823.708 684.202 L824.267 684.202 L824.827 684.202 L825.386 684.202 L825.945 684.202 L826.504 684.202 L827.064 684.202 L827.623 684.202 L828.182 684.202 L828.741 684.202 L829.301 684.202 L829.86 684.202 L830.419 684.202 L830.978 684.202 L831.538 684.202 L832.097 684.202 L832.656 684.202 L833.215 684.202 L833.775 684.202 L834.334 684.202 L834.893 684.202 L835.452 684.202 L836.012 684.202 L836.571 684.202 L837.13 684.202 L837.689 684.202 L838.249 684.202 L838.808 684.202 L839.367 684.202 L839.926 684.202 L840.486 684.202 L841.045 684.202 L841.604 684.202 L842.163 684.202 L842.723 684.202 L843.282 684.202 L843.841 684.202 L844.4 684.202 L844.96 684.202 L845.519 684.202 L846.078 684.202 L846.637 684.202 L847.197 684.202 L847.756 684.202 L848.315 684.202 L848.874 684.202 L849.434 684.202 L849.993 684.202 L850.552 684.202 L851.111 684.202 L851.671 684.202 L852.23 684.202 L852.789 684.202 L853.348 684.202 L853.908 684.202 L854.467 684.202 L855.026 684.202 L855.585 684.202 L856.145 684.202 L856.704 684.202 L857.263 684.202 L857.822 684.202 L858.382 684.202 L858.941 684.202 L859.5 684.202 L860.059 684.202 L860.619 684.202 L861.178 684.202 L861.737 684.202 L862.296 684.202 L862.856 684.202 L863.415 684.202 L863.974 684.202 L864.533 684.202 L865.093 684.202 L865.652 684.202 L866.211 684.202 L866.77 684.202 L867.33 684.202 L867.889 684.202 L868.448 684.202 L869.007 684.202 L869.567 684.202 L870.126 684.202 L870.685 684.202 L871.244 684.202 L871.804 684.202 L872.363 684.202 L872.922 684.202 L873.481 684.202 L874.041 684.202 L874.6 684.202 L875.159 684.202 L875.718 684.202 L876.278 684.202 L876.837 684.202 L877.396 684.202 L877.955 684.202 L878.515 684.202 L879.074 684.202 L879.633 684.202 L880.192 684.202 L880.752 684.202 L881.311 684.202 L881.87 684.202 L882.429 684.202 L882.989 684.202 L883.548 684.202 L884.107 684.202 L884.666 684.202 L885.226 684.202 L885.785 684.202 L886.344 684.202 L886.903 684.202 L887.463 684.202 L888.022 684.202 L888.581 684.202 L889.14 684.202 L889.7 684.202 L890.259 684.202 L890.818 684.202 L891.377 684.202 L891.937 684.202 L892.496 684.202 L893.055 684.202 L893.614 684.202 L894.174 684.202 L894.733 684.202 L895.292 684.202 L895.851 684.202 L896.411 684.202 L896.97 684.202 L897.529 684.202 L898.088 684.202 L898.648 684.202 L899.207 684.202 L899.766 684.202 L900.325 684.202 L900.885 684.202 L901.444 684.202 L902.003 684.202 L902.562 684.202 L903.122 684.202 L903.681 684.202 L904.24 684.202 L904.799 684.202 L905.359 684.202 L905.918 684.202 L906.477 684.202 L907.036 684.202 L907.596 684.202 L908.155 684.202 L908.714 684.202 L909.273 684.202 L909.833 684.202 L910.392 684.202 L910.951 684.202 L911.51 684.202 L912.07 684.202 L912.629 684.202 L913.188 684.202 L913.747 684.202 L914.307 684.202 L914.866 684.202 L915.425 684.202 L915.984 684.202 L916.544 684.202 L917.103 684.202 L917.662 684.202 L918.221 684.202 L918.781 684.202 L919.34 684.202 L919.899 684.202 L920.458 684.202 L921.018 684.202 L921.577 684.202 L922.136 684.202 L922.695 684.202 L923.255 684.202 L923.814 684.202 L924.373 684.202 L924.932 684.202 L925.492 684.202 L926.051 684.202 L926.61 684.202 L927.169 684.202 L927.729 684.202 L928.288 684.202 L928.847 684.202 L929.406 684.202 L929.966 684.202 L930.525 684.202 L931.084 684.202 L931.644 684.202 L932.203 684.202 L932.762 684.202 L933.321 684.202 L933.881 684.202 L934.44 684.202 L934.999 684.202 L935.558 684.202 L936.118 684.202 L936.677 684.202 L937.236 684.202 L937.795 684.202 L938.355 684.202 L938.914 684.202 L939.473 684.202 L940.032 684.202 L940.592 684.202 L941.151 684.202 L941.71 684.202 L942.269 684.202 L942.829 684.202 L943.388 684.202 L943.947 684.202 L944.506 684.202 L945.066 684.202 L945.625 684.202 L946.184 684.202 L946.743 684.202 L947.303 684.202 L947.862 684.202 L948.421 684.202 L948.98 684.202 L949.54 684.202 L950.099 684.202 L950.658 684.202 L951.217 684.202 L951.777 684.202 L952.336 684.202 L952.895 684.202 L953.454 684.202 L954.014 684.202 L954.573 684.202 L955.132 684.202 L955.691 684.202 L956.251 684.202 L956.81 684.202 L957.369 684.202 L957.928 684.202 L958.488 684.202 L959.047 684.202 L959.606 684.202 L960.165 684.202 L960.725 684.202 L961.284 684.202 L961.843 684.202 L962.402 684.202 L962.962 684.202 L963.521 684.202 L964.08 684.202 L964.639 684.202 L965.199 684.202 L965.758 684.202 L966.317 684.202 L966.876 684.202 L967.436 684.202 L967.995 684.202 L968.554 684.202 L969.113 684.202 L969.673 684.202 L970.232 684.202 L970.791 684.202 L971.35 684.202 L971.91 684.202 L972.469 684.202 L973.028 684.202 L973.587 684.202 L974.147 684.202 L974.706 684.202 L975.265 684.202 L975.824 684.202 L976.384 684.202 L976.943 684.202 L977.502 684.202 L978.061 684.202 L978.621 684.202 L979.18 684.202 L979.739 684.202 L980.298 684.202 L980.858 684.202 L981.417 684.202 L981.976 684.202 L982.535 684.202 L983.095 684.202 L983.654 684.202 L984.213 684.202 L984.772 684.202 L985.332 684.202 L985.891 684.202 L986.45 684.202 L987.009 684.202 L987.569 684.202 L988.128 684.202 L988.687 684.202 L989.246 684.202 L989.806 684.202 L990.365 684.202 L990.924 684.202 L991.483 684.202 L992.043 684.202 L992.602 684.202 L993.161 684.202 L993.72 684.202 L994.28 684.202 L994.839 684.202 L995.398 684.202 L995.957 684.202 L996.517 684.202 L997.076 684.202 L997.635 684.202 L998.194 684.202 L998.754 684.202 L999.313 684.202 L999.872 684.202 L1000.43 684.202 L1000.99 684.202 L1001.55 684.202 L1002.11 684.202 L1002.67 684.202 L1003.23 684.202 L1003.79 684.202 L1004.35 684.202 L1004.91 684.202 L1005.46 684.202 L1006.02 684.202 L1006.58 684.202 L1007.14 684.202 L1007.7 684.202 L1008.26 684.202 L1008.82 684.202 L1009.38 684.202 L1009.94 684.202 L1010.5 684.202 L1011.06 684.202 L1011.62 684.202 L1012.18 684.202 L1012.73 684.202 L1013.29 684.202 L1013.85 684.202 L1014.41 684.202 L1014.97 684.202 L1015.53 684.202 L1016.09 684.202 L1016.65 684.202 L1017.21 684.202 L1017.77 684.202 L1018.33 684.202 L1018.89 684.202 L1019.45 684.202 L1020.01 684.202 L1020.56 684.202 L1021.12 684.202 L1021.68 684.202 L1022.24 684.202 L1022.8 684.202 L1023.36 684.202 L1023.92 684.202 L1024.48 684.202 L1025.04 684.202 L1025.6 684.202 L1026.16 684.202 L1026.72 684.202 L1027.28 684.202 L1027.83 684.202 L1028.39 684.202 L1028.95 684.202 L1029.51 684.202 L1030.07 684.202 L1030.63 684.202 L1031.19 684.202 L1031.75 684.202 L1032.31 684.202 L1032.87 684.202 L1033.43 684.202 L1033.99 684.202 L1034.55 684.202 L1035.1 684.202 L1035.66 684.202 L1036.22 684.202 L1036.78 684.202 L1037.34 684.202 L1037.9 684.202 L1038.46 684.202 L1039.02 684.202 L1039.58 684.202 L1040.14 684.202 L1040.7 684.202 L1041.26 684.202 L1041.82 684.202 L1042.38 684.202 L1042.93 684.202 L1043.49 684.202 L1044.05 684.202 L1044.61 684.202 L1045.17 684.202 L1045.73 684.202 L1046.29 684.202 L1046.85 684.202 L1047.41 684.202 L1047.97 684.202 L1048.53 684.202 L1049.09 684.202 L1049.65 684.202 L1050.2 684.202 L1050.76 684.202 L1051.32 684.202 L1051.88 684.202 L1052.44 684.202 L1053 684.202 L1053.56 684.202 L1054.12 684.202 L1054.68 684.202 L1055.24 684.202 L1055.8 684.202 L1056.36 684.202 L1056.92 684.202 L1057.48 684.202 L1058.03 684.202 L1058.59 684.202 L1059.15 684.202 L1059.71 684.202 L1060.27 684.202 L1060.83 684.202 L1061.39 684.202 L1061.95 684.202 L1062.51 684.202 L1063.07 684.202 L1063.63 684.202 L1064.19 684.202 L1064.75 684.202 L1065.3 684.202 L1065.86 684.202 L1066.42 684.202 L1066.98 684.202 L1067.54 684.202 L1068.1 684.202 L1068.66 684.202 L1069.22 684.202 L1069.78 684.202 L1070.34 684.202 L1070.9 684.202 L1071.46 684.202 L1072.02 684.202 L1072.57 684.202 L1073.13 684.202 L1073.69 684.202 L1074.25 684.202 L1074.81 684.202 L1075.37 684.202 L1075.93 684.202 L1076.49 684.202 L1077.05 684.202 L1077.61 684.202 L1078.17 684.202 L1078.73 684.202 L1079.29 684.202 L1079.85 684.202 L1080.4 684.202 L1080.96 684.202 L1081.52 684.202 L1082.08 684.202 L1082.64 684.202 L1083.2 684.202 L1083.76 684.202 L1084.32 684.202 L1084.88 684.202 L1085.44 684.202 L1086 684.202 L1086.56 684.202 L1087.12 684.202 L1087.67 684.202 L1088.23 684.202 L1088.79 684.202 L1089.35 684.202 L1089.91 684.202 L1090.47 684.202 L1091.03 684.202 L1091.59 684.202 L1092.15 684.202 L1092.71 684.202 L1093.27 684.202 L1093.83 684.202 L1094.39 684.202 L1094.94 684.202 L1095.5 684.202 L1096.06 684.202 L1096.62 684.202 L1097.18 684.202 L1097.74 684.202 L1098.3 684.202 L1098.86 684.202 L1099.42 684.202 L1099.98 684.202 L1100.54 684.202 L1101.1 684.202 L1101.66 684.202 L1102.22 684.202 L1102.77 684.202 L1103.33 684.202 L1103.89 684.202 L1104.45 684.202 L1105.01 684.202 L1105.57 684.202 L1106.13 684.202 L1106.69 684.202 L1107.25 684.202 L1107.81 684.202 L1108.37 684.202 L1108.93 684.202 L1109.49 684.202 L1110.04 684.202 L1110.6 684.202 L1111.16 684.202 L1111.72 684.202 L1112.28 684.202 L1112.84 684.202 L1113.4 684.202 L1113.96 684.202 L1114.52 684.202 L1115.08 684.202 L1115.64 684.202 L1116.2 684.202 L1116.76 684.202 L1117.31 684.202 L1117.87 684.202 L1118.43 684.202 L1118.99 684.202 L1119.55 684.202 L1120.11 684.202 L1120.67 684.202 L1121.23 684.202 L1121.79 684.202 L1122.35 684.202 L1122.91 684.202 L1123.47 684.202 L1124.03 684.202 L1124.59 684.202 L1125.14 684.202 L1125.7 684.202 L1126.26 684.202 L1126.82 684.202 L1127.38 684.202 L1127.94 684.202 L1128.5 684.202 L1129.06 684.202 L1129.62 684.202 L1130.18 684.202 L1130.74 684.202 L1131.3 684.202 L1131.86 684.202 L1132.41 684.202 L1132.97 684.202 L1133.53 684.202 L1134.09 684.202 L1134.65 684.202 L1135.21 684.202 L1135.77 684.202 L1136.33 684.202 L1136.89 684.202 L1137.45 684.202 L1138.01 684.202 L1138.57 684.202 L1139.13 684.202 L1139.68 684.202 L1140.24 684.202 L1140.8 684.202 L1141.36 684.202 L1141.92 684.202 L1142.48 684.202 L1143.04 684.202 L1143.6 684.202 L1144.16 684.202 L1144.72 684.202 L1145.28 684.202 L1145.84 684.202 L1146.4 684.202 L1146.96 684.202 L1147.51 684.202 L1148.07 684.202 L1148.63 684.202 L1149.19 684.202 L1149.75 684.202 L1150.31 684.202 L1150.87 684.202 L1151.43 684.202 L1151.99 684.202 L1152.55 684.202 L1153.11 684.202 L1153.67 684.202 L1154.23 684.202 L1154.78 684.202 L1155.34 684.202 L1155.9 684.202 L1156.46 684.202 L1157.02 684.202 L1157.58 684.202 L1158.14 684.202 L1158.7 684.202 L1159.26 684.202 L1159.82 684.202 L1160.38 684.202 L1160.94 684.202 L1161.5 684.202 L1162.05 684.202 L1162.61 684.202 L1163.17 684.202 L1163.73 684.202 L1164.29 684.202 L1164.85 684.202 L1165.41 684.202 L1165.97 684.202 L1166.53 684.202 L1167.09 684.202 L1167.65 684.202 L1168.21 684.202 L1168.77 684.202 L1169.33 684.202 L1169.88 684.202 L1170.44 684.202 L1171 684.202 L1171.56 684.202 L1172.12 684.202 L1172.68 684.202 L1173.24 684.202 L1173.8 684.202 L1174.36 684.202 L1174.92 684.202 L1175.48 684.202 L1176.04 684.202 L1176.6 684.202 L1177.15 684.202 L1177.71 684.202 L1178.27 684.202 L1178.83 684.202 L1179.39 684.202 L1179.95 684.202 L1180.51 684.202 L1181.07 684.202 L1181.63 684.202 L1182.19 684.202 L1182.75 684.202 L1183.31 684.202 L1183.87 684.202 L1184.43 684.202 L1184.98 684.202 L1185.54 684.202 L1186.1 684.202 L1186.66 684.202 L1187.22 684.202 L1187.78 684.202 L1188.34 684.202 L1188.9 684.202 L1189.46 684.202 L1190.02 684.202 L1190.58 684.202 L1191.14 684.202 L1191.7 684.202 L1192.25 684.202 L1192.81 684.202 L1193.37 684.202 L1193.93 684.202 L1194.49 684.202 L1195.05 684.202 L1195.61 684.202 L1196.17 684.202 L1196.73 684.202 L1197.29 684.202 L1197.85 684.202 L1198.41 684.202 L1198.97 684.202 L1199.52 684.202 L1200.08 684.202 L1200.64 684.202 L1201.2 684.202 L1201.76 684.202 L1202.32 684.202 L1202.88 684.202 L1203.44 684.202 L1204 684.202 L1204.56 684.202 L1205.12 684.202 L1205.68 684.202 L1206.24 684.202 L1206.8 684.202 L1207.35 684.202 L1207.91 684.202 L1208.47 684.202 L1209.03 684.202 L1209.59 684.202 L1210.15 684.202 L1210.71 684.202 L1211.27 684.202 L1211.83 684.202 L1212.39 684.202 L1212.95 684.202 L1213.51 684.202 L1214.07 684.202 L1214.62 684.202 L1215.18 684.202 L1215.74 684.202 L1216.3 684.202 L1216.86 684.202 L1217.42 684.202 L1217.98 684.202 L1218.54 684.202 L1219.1 684.202 L1219.66 684.202 L1220.22 684.202 L1220.78 684.202 L1221.34 684.202 L1221.89 684.202 L1222.45 684.202 L1223.01 684.202 L1223.57 684.202 L1224.13 684.202 L1224.69 684.202 L1225.25 684.202 L1225.81 684.202 L1226.37 684.202 L1226.93 684.202 L1227.49 684.202 L1228.05 684.202 L1228.61 684.202 L1229.17 684.202 L1229.72 684.202 L1230.28 684.202 L1230.84 684.202 L1231.4 684.202 L1231.96 684.202 L1232.52 684.202 L1233.08 684.202 L1233.64 684.202 L1234.2 684.202 L1234.76 684.202 L1235.32 684.202 L1235.88 684.202 L1236.44 684.202 L1236.99 684.202 L1237.55 684.202 L1238.11 684.202 L1238.67 684.202 L1239.23 684.202 L1239.79 684.202 L1240.35 684.202 L1240.91 684.202 L1241.47 684.202 L1242.03 684.202 L1242.59 684.202 L1243.15 684.202 L1243.71 684.202 L1244.26 684.202 L1244.82 684.202 L1245.38 684.202 L1245.94 684.202 L1246.5 684.202 L1247.06 684.202 L1247.62 684.202 L1248.18 684.202 L1248.74 684.202 L1249.3 684.202 L1249.86 684.202 L1250.42 684.202 L1250.98 684.202 L1251.54 684.202 L1252.09 684.202 L1252.65 684.202 L1253.21 684.202 L1253.77 684.202 L1254.33 684.202 L1254.89 684.202 L1255.45 684.202 L1256.01 684.202 L1256.57 684.202 L1257.13 684.202 L1257.69 684.202 L1258.25 684.202 L1258.81 684.202 L1259.36 684.202 L1259.92 684.202 L1260.48 684.202 L1261.04 684.202 L1261.6 684.202 L1262.16 684.202 L1262.72 684.202 L1263.28 684.202 L1263.84 684.202 L1264.4 684.202 L1264.96 684.202 L1265.52 684.202 L1266.08 684.202 L1266.63 684.202 L1267.19 684.202 L1267.75 684.202 L1268.31 684.202 L1268.87 684.202 L1269.43 684.202 L1269.99 684.202 L1270.55 684.202 L1271.11 684.202 L1271.67 684.202 L1272.23 684.202 L1272.79 684.202 L1273.35 684.202 L1273.91 684.202 L1274.46 684.202 L1275.02 684.202 L1275.58 684.202 L1276.14 684.202 L1276.7 684.202 L1277.26 684.202 L1277.82 684.202 L1278.38 684.202 L1278.94 684.202 L1279.5 684.202 L1280.06 684.202 L1280.62 684.202 L1281.18 684.202 L1281.73 684.202 L1282.29 684.202 L1282.85 684.202 L1283.41 684.202 L1283.97 684.202 L1284.53 684.202 L1285.09 684.202 L1285.65 684.202 L1286.21 684.202 L1286.77 684.202 L1287.33 684.202 L1287.89 684.202 L1288.45 684.202 L1289 684.202 L1289.56 684.202 L1290.12 684.202 L1290.68 684.202 L1291.24 684.202 L1291.8 684.202 L1292.36 684.202 L1292.92 684.202 L1293.48 684.202 L1294.04 684.202 L1294.6 684.202 L1295.16 684.202 L1295.72 684.202 L1296.28 684.202 L1296.83 684.202 L1297.39 684.202 L1297.95 684.202 L1298.51 684.202 L1299.07 684.202 L1299.63 684.202 L1300.19 684.202 L1300.75 684.202 L1301.31 684.202 L1301.87 684.202 L1302.43 684.202 L1302.99 684.202 L1303.55 684.202 L1304.1 684.202 L1304.66 684.202 L1305.22 684.202 L1305.78 684.202 L1306.34 684.202 L1306.9 684.202 L1307.46 684.202 L1308.02 684.202 L1308.58 684.202 L1309.14 684.202 L1309.7 684.202 L1310.26 684.202 L1310.82 684.202 L1311.38 684.202 L1311.93 684.202 L1312.49 684.202 L1313.05 684.202 L1313.61 684.202 L1314.17 684.202 L1314.73 684.202 L1315.29 684.202 L1315.85 684.202 L1316.41 684.202 L1316.97 684.202 L1317.53 684.202 L1318.09 684.202 L1318.65 684.202 L1319.2 684.202 L1319.76 684.202 L1320.32 684.202 L1320.88 684.202 L1321.44 684.202 L1322 684.202 L1322.56 684.202 L1323.12 684.202 L1323.68 684.202 L1324.24 684.202 L1324.8 684.202 L1325.36 684.202 L1325.92 684.202 L1326.47 684.202 L1327.03 684.202 L1327.59 684.202 L1328.15 684.202 L1328.71 684.202 L1329.27 684.202 L1329.83 684.202 L1330.39 684.202 L1330.95 684.202 L1331.51 684.202 L1332.07 684.202 L1332.63 684.202 L1333.19 684.202 L1333.75 684.202 L1334.3 684.202 L1334.86 684.202 L1335.42 684.202 L1335.98 684.202 L1336.54 684.202 L1337.1 684.202 L1337.66 684.202 L1338.22 684.202 L1338.78 684.202 L1339.34 684.202 L1339.9 684.202 L1340.46 684.202 L1341.02 684.202 L1341.57 684.202 L1342.13 684.202 L1342.69 684.202 L1343.25 684.202 L1343.81 684.202 L1344.37 684.202 L1344.93 684.202 L1345.49 684.202 L1346.05 684.202 L1346.61 684.202 L1347.17 684.202 L1347.73 684.202 L1348.29 684.202 L1348.84 684.202 L1349.4 684.202 L1349.96 684.202 L1350.52 684.202 L1351.08 684.202 L1351.64 684.202 L1352.2 684.202 L1352.76 684.202 L1353.32 684.202 L1353.88 684.202 L1354.44 684.202 L1355 684.202 L1355.56 684.202 L1356.12 684.202 L1356.67 684.202 L1357.23 684.202 L1357.79 684.202 L1358.35 684.202 L1358.91 684.202 L1359.47 684.202 L1360.03 684.202 L1360.59 684.202 L1361.15 684.202 L1361.71 684.202 L1362.27 684.202 L1362.83 684.202 L1363.39 684.202 L1363.94 684.202 L1364.5 684.202 L1365.06 684.202 L1365.62 684.202 L1366.18 684.202 L1366.74 684.202 L1367.3 684.202 L1367.86 684.202 L1368.42 684.202 L1368.98 684.202 L1369.54 684.202 L1370.1 684.202 L1370.66 684.202 L1371.21 684.202 L1371.77 684.202 L1372.33 684.202 L1372.89 684.202 L1373.45 684.202 L1374.01 684.202 L1374.57 684.202 L1375.13 684.202 L1375.69 684.202 L1376.25 684.202 L1376.81 684.202 L1377.37 684.202 L1377.93 684.202 L1378.49 684.202 L1379.04 684.202 L1379.6 684.202 L1380.16 684.202 L1380.72 684.202 L1381.28 684.202 L1381.84 684.202 L1382.4 684.202 L1382.96 684.202 L1383.52 684.202 L1384.08 684.202 L1384.64 684.202 L1385.2 684.202 L1385.76 684.202 L1386.31 684.202 L1386.87 684.202 L1387.43 684.202 L1387.99 684.202 L1388.55 684.202 L1389.11 684.202 L1389.67 684.202 L1390.23 684.202 L1390.79 684.202 L1391.35 684.202 L1391.91 684.202 L1392.47 684.202 L1393.03 684.202 L1393.58 684.202 L1394.14 684.202 L1394.7 684.202 L1395.26 684.202 L1395.82 684.202 L1396.38 684.202 L1396.94 684.202 L1397.5 684.202 L1398.06 684.202 L1398.62 684.202 L1399.18 684.202 L1399.74 684.202 L1400.3 684.202 L1400.86 684.202 L1401.41 684.202 L1401.97 684.202 L1402.53 684.202 L1403.09 684.202 L1403.65 684.202 L1404.21 684.202 L1404.77 684.202 L1405.33 684.202 L1405.89 684.202 L1406.45 684.202 L1407.01 684.202 L1407.57 684.202 L1408.13 684.202 L1408.68 684.202 L1409.24 684.202 L1409.8 684.202 L1410.36 684.202 L1410.92 684.202 L1411.48 684.202 L1412.04 684.202 L1412.6 684.202 L1413.16 684.202 L1413.72 684.202 L1414.28 684.202 L1414.84 684.202 L1415.4 684.202 L1415.95 684.202 L1416.51 684.202 L1417.07 684.202 L1417.63 684.202 L1418.19 684.202 L1418.75 684.202 L1419.31 684.202 L1419.87 684.202 L1420.43 684.202 L1420.99 684.202 L1421.55 684.202 L1422.11 684.202 L1422.67 684.202 L1423.23 684.202 L1423.78 684.202 L1424.34 684.202 L1424.9 684.202 L1425.46 684.202 L1426.02 684.202 L1426.58 684.202 L1427.14 684.202 L1427.7 684.202 L1428.26 684.202 L1428.82 684.202 L1429.38 684.202 L1429.94 684.202 L1430.5 684.202 L1431.05 684.202 L1431.61 684.202 L1432.17 684.202 L1432.73 684.202 L1433.29 684.202 L1433.85 684.202 L1434.41 684.202 L1434.97 684.202 L1435.53 684.202 L1436.09 684.202 L1436.65 684.202 L1437.21 684.202 L1437.77 684.202 L1438.33 684.202 L1438.88 684.202 L1439.44 684.202 L1440 684.202 L1440.56 684.202 L1441.12 684.202 L1441.68 684.202 L1442.24 684.202 L1442.8 684.202 L1443.36 684.202 L1443.92 684.202 L1444.48 684.202 L1445.04 684.202 L1445.6 684.202 L1446.15 684.202 L1446.71 684.202 L1447.27 684.202 L1447.83 684.202 L1448.39 684.202 L1448.95 684.202 L1449.51 684.202 L1450.07 684.202 L1450.63 684.202 L1451.19 684.202 L1451.75 684.202 L1452.31 684.202 L1452.87 684.202 L1453.42 684.202 L1453.98 684.202 L1454.54 684.202 L1455.1 684.202 L1455.66 684.202 L1456.22 684.202 L1456.78 684.202 L1457.34 684.202 L1457.9 684.202 L1458.46 684.202 L1459.02 684.202 L1459.58 684.202 L1460.14 684.202 L1460.7 684.202 L1461.25 684.202 L1461.81 684.202 L1462.37 684.202 L1462.93 684.202 L1463.49 684.202 L1464.05 684.202 L1464.61 684.202 L1465.17 684.202 L1465.73 684.202 L1466.29 684.202 L1466.85 684.202 L1467.41 684.202 L1467.97 684.202 L1468.52 684.202 L1469.08 684.202 L1469.64 684.202 L1470.2 684.202 L1470.76 684.202 L1471.32 684.202 L1471.88 684.202 L1472.44 684.202 L1473 684.202 L1473.56 684.202 L1474.12 684.202 L1474.68 684.202 L1475.24 684.202 L1475.79 684.202 L1476.35 684.202 L1476.91 684.202 L1477.47 684.202 L1478.03 684.202 L1478.59 684.202 L1479.15 684.202 L1479.71 684.202 L1480.27 684.202 L1480.83 684.202 L1481.39 684.202 L1481.95 684.202 L1482.51 684.202 L1483.07 684.202 L1483.62 684.202 L1484.18 684.202 L1484.74 684.202 L1485.3 684.202 L1485.86 684.202 L1486.42 684.202 L1486.98 684.202 L1487.54 684.202 L1488.1 684.202 L1488.66 684.202 L1489.22 684.202 L1489.78 684.202 L1490.34 684.202 L1490.89 684.202 L1491.45 684.202 L1492.01 684.202 L1492.57 684.202 L1493.13 684.202 L1493.69 684.202 L1494.25 684.202 L1494.81 684.202 L1495.37 684.202 L1495.93 684.202 L1496.49 684.202 L1497.05 684.202 L1497.61 684.202 L1498.16 684.202 L1498.72 684.202 L1499.28 684.202 L1499.84 684.202 L1500.4 684.202 L1500.96 684.202 L1501.52 684.202 L1502.08 684.202 L1502.64 684.202 L1503.2 684.202 L1503.76 684.202 L1504.32 684.202 L1504.88 684.202 L1505.44 684.202 L1505.99 684.202 L1506.55 684.202 L1507.11 684.202 L1507.67 684.202 L1508.23 684.202 L1508.79 684.202 L1509.35 684.202 L1509.91 684.202 L1510.47 684.202 L1511.03 684.202 L1511.59 684.202 L1512.15 684.202 L1512.71 684.202 L1513.26 684.202 L1513.82 684.202 L1514.38 684.202 L1514.94 684.202 L1515.5 684.202 L1516.06 684.202 L1516.62 684.202 L1517.18 684.202 L1517.74 684.202 L1518.3 684.202 L1518.86 684.202 L1519.42 684.202 L1519.98 684.202 L1520.53 684.202 L1521.09 684.202 L1521.65 684.202 L1522.21 684.202 L1522.77 684.202 L1523.33 684.202 L1523.89 684.202 L1524.45 684.202 L1525.01 684.202 L1525.57 684.202 L1526.13 684.202 L1526.69 684.202 L1527.25 684.202 L1527.81 684.202 L1528.36 684.202 L1528.92 684.202 L1529.48 684.202 L1530.04 684.202 L1530.6 684.202 L1531.16 684.202 L1531.72 684.202 L1532.28 684.202 L1532.84 684.202 L1533.4 684.202 L1533.96 684.202 L1534.52 684.202 L1535.08 684.202 L1535.63 684.202 L1536.19 684.202 L1536.75 684.202 L1537.31 684.202 L1537.87 684.202 L1538.43 684.202 L1538.99 684.202 L1539.55 684.202 L1540.11 684.202 L1540.67 684.202 L1541.23 684.202 L1541.79 684.202 L1542.35 684.202 L1542.9 684.202 L1543.46 684.202 L1544.02 684.202 L1544.58 684.202 L1545.14 684.202 L1545.7 684.202 L1546.26 684.202 L1546.82 684.202 L1547.38 684.202 L1547.94 684.202 L1548.5 684.202 L1549.06 684.202 L1549.62 684.202 L1550.18 684.202 L1550.73 684.202 L1551.29 684.202 L1551.85 684.202 L1552.41 684.202 L1552.97 684.202 L1553.53 684.202 L1554.09 684.202 L1554.65 684.202 L1555.21 684.202 L1555.77 684.202 L1556.33 684.202 L1556.89 684.202 L1557.45 684.202 L1558 684.202 L1558.56 684.202 L1559.12 684.202 L1559.68 684.202 L1560.24 684.202 L1560.8 684.202 L1561.36 684.202 L1561.92 684.202 L1562.48 684.202 L1563.04 684.202 L1563.6 684.202 L1564.16 684.202 L1564.72 684.202 L1565.28 684.202 L1565.83 684.202 L1566.39 684.202 L1566.95 684.202 L1567.51 684.202 L1568.07 684.202 L1568.63 684.202 L1569.19 684.202 L1569.75 684.202 L1570.31 684.202 L1570.87 684.202 L1571.43 684.202 L1571.99 684.202 L1572.55 684.202 L1573.1 684.202 L1573.66 684.202 L1574.22 684.202 L1574.78 684.202 L1575.34 684.202 L1575.9 684.202 L1576.46 684.202 L1577.02 684.202 L1577.58 684.202 L1578.14 684.202 L1578.7 684.202 L1579.26 684.202 L1579.82 684.202 L1580.37 684.202 L1580.93 684.202 L1581.49 684.202 L1582.05 684.202 L1582.61 684.202 L1583.17 684.202 L1583.73 684.202 L1584.29 684.202 L1584.85 684.202 L1585.41 684.202 L1585.97 684.202 L1586.53 684.202 L1587.09 684.202 L1587.65 684.202 L1588.2 684.202 L1588.76 684.202 L1589.32 684.202 L1589.88 684.202 L1590.44 684.202 L1591 684.202 L1591.56 684.202 L1592.12 684.202 L1592.68 684.202 L1593.24 684.202 L1593.8 684.202 L1594.36 684.202 L1594.92 684.202 L1595.47 684.202 L1596.03 684.202 L1596.59 684.202 L1597.15 684.202 L1597.71 684.202 L1598.27 684.202 L1598.83 684.202 L1599.39 684.202 L1599.95 684.202 L1600.51 684.202 L1601.07 684.202 L1601.63 684.202 L1602.19 684.202 L1602.74 684.202 L1603.3 684.202 L1603.86 684.202 L1604.42 684.202 L1604.98 684.202 L1605.54 684.202 L1606.1 684.202 L1606.66 684.202 L1607.22 684.202 L1607.78 684.202 L1608.34 684.202 L1608.9 684.202 L1609.46 684.202 L1610.02 684.202 L1610.57 684.202 L1611.13 684.202 L1611.69 684.202 L1612.25 684.202 L1612.81 684.202 L1613.37 684.202 L1613.93 684.202 L1614.49 684.202 L1615.05 684.202 L1615.61 684.202 L1616.17 684.202 L1616.73 684.202 L1617.29 684.202 L1617.84 684.202 L1618.4 684.202 L1618.96 684.202 L1619.52 684.202 L1620.08 684.202 L1620.64 684.202 L1621.2 684.202 L1621.76 684.202 L1622.32 684.202 L1622.88 684.202 L1623.44 684.202 L1624 684.202 L1624.56 684.202 L1625.11 684.202 L1625.67 684.202 L1626.23 684.202 L1626.79 684.202 L1627.35 684.202 L1627.91 684.202 L1628.47 684.202 L1629.03 684.202 L1629.59 684.202 L1630.15 684.202 L1630.71 684.202 L1631.27 684.202 L1631.83 684.202 L1632.39 684.202 L1632.94 684.202 L1633.5 684.202 L1634.06 684.202 L1634.62 684.202 L1635.18 684.202 L1635.74 684.202 L1636.3 684.202 L1636.86 684.202 L1637.42 684.202 L1637.98 684.202 L1638.54 684.202 L1639.1 684.202 L1639.66 684.202 L1640.21 684.202 L1640.77 684.202 L1641.33 684.202 L1641.89 684.202 L1642.45 684.202 L1643.01 684.202 L1643.57 684.202 L1644.13 684.202 L1644.69 684.202 L1645.25 684.202 L1645.81 684.202 L1646.37 684.202 L1646.93 684.202 L1647.48 684.202 L1648.04 684.202 L1648.6 684.202 L1649.16 684.202 L1649.72 684.202 L1650.28 684.202 L1650.84 684.202 L1651.4 684.202 L1651.96 684.202 L1652.52 684.202 L1653.08 684.202 L1653.64 684.202 L1654.2 684.202 L1654.76 684.202 L1655.31 684.202 L1655.87 684.202 L1656.43 684.202 L1656.99 684.202 L1657.55 684.202 L1658.11 684.202 L1658.67 684.202 L1659.23 684.202 L1659.79 684.202 L1660.35 684.202 L1660.91 684.202 L1661.47 684.202 L1662.03 684.202 L1662.58 684.202 L1663.14 684.202 L1663.7 684.202 L1664.26 684.202 L1664.82 684.202 L1665.38 684.202 L1665.94 684.202 L1666.5 684.202 L1667.06 684.202 L1667.62 684.202 L1668.18 684.202 L1668.74 684.202 L1669.3 684.202 L1669.85 684.202 L1670.41 684.202 L1670.97 684.202 L1671.53 684.202 L1672.09 684.202 L1672.65 684.202 L1673.21 684.202 L1673.77 684.202 L1674.33 684.202 L1674.89 684.202 L1675.45 684.202 L1676.01 684.202 L1676.57 684.202 L1677.13 684.202 L1677.68 684.202 L1678.24 684.202 L1678.8 684.202 L1679.36 684.202 L1679.92 684.202 L1680.48 684.202 L1681.04 684.202 L1681.6 684.202 L1682.16 684.202 L1682.72 684.202 L1683.28 684.202 L1683.84 684.202 L1684.4 684.202 L1684.95 684.202 L1685.51 684.202 L1686.07 684.202 L1686.63 684.202 L1687.19 684.202 L1687.75 684.202 L1688.31 684.202 L1688.87 684.202 L1689.43 684.202 L1689.99 684.202 L1690.55 684.202 L1691.11 684.202 L1691.67 684.202 L1692.23 684.202 L1692.78 684.202 L1693.34 684.202 L1693.9 684.202 L1694.46 684.202 L1695.02 684.202 L1695.58 684.202 L1696.14 684.202 L1696.7 684.202 L1697.26 684.202 L1697.82 684.202 L1698.38 684.202 L1698.94 684.202 L1699.5 684.202 L1700.05 684.202 L1700.61 684.202 L1701.17 684.202 L1701.73 684.202 L1702.29 684.202 L1702.85 684.202 L1703.41 684.202 L1703.97 684.202 L1704.53 684.202 L1705.09 684.202 L1705.65 684.202 L1706.21 684.202 L1706.77 684.202 L1707.32 684.202 L1707.88 684.202 L1708.44 684.202 L1709 684.202 L1709.56 684.202 L1710.12 684.202 L1710.68 684.202 L1711.24 684.202 L1711.8 684.202 L1712.36 684.202 L1712.92 684.202 L1713.48 684.202 L1714.04 684.202 L1714.6 684.202 L1715.15 684.202 L1715.71 684.202 L1716.27 684.202 L1716.83 684.202 L1717.39 684.202 L1717.95 684.202 L1718.51 684.202 L1719.07 684.202 L1719.63 684.202 L1720.19 684.202 L1720.75 684.202 L1721.31 684.202 L1721.87 684.202 L1722.42 684.202 L1722.98 684.202 L1723.54 684.202 L1724.1 684.202 L1724.66 684.202 L1725.22 684.202 L1725.78 684.202 L1726.34 684.202 L1726.9 684.202 L1727.46 684.202 L1728.02 684.202 L1728.58 684.202 L1729.14 684.202 L1729.69 684.202 L1730.25 684.202 L1730.81 684.202 L1731.37 684.202 L1731.93 684.202 L1732.49 684.202 L1733.05 684.202 L1733.61 684.202 L1734.17 684.202 L1734.73 684.202 L1735.29 684.202 L1735.85 684.202 L1736.41 684.202 L1736.97 684.202 L1737.52 684.202 L1738.08 684.202 L1738.64 684.202 L1739.2 684.202 L1739.76 684.202 L1740.32 684.202 L1740.88 684.202 L1741.44 684.202 L1742 684.202 L1742.56 684.202 L1743.12 684.202 L1743.68 684.202 L1744.24 684.202 L1744.79 684.202 L1745.35 684.202 L1745.91 684.202 L1746.47 684.202 L1747.03 684.202 L1747.59 684.202 L1748.15 684.202 L1748.71 684.202 L1749.27 684.202 L1749.83 684.202 L1750.39 684.202 L1750.95 684.202 L1751.51 684.202 L1752.06 684.202 L1752.62 684.202 L1753.18 684.202 L1753.74 684.202 L1754.3 684.202 L1754.86 684.202 L1755.42 684.202 L1755.98 684.202 L1756.54 684.202 L1757.1 684.202 L1757.66 684.202 L1758.22 684.202 L1758.78 684.202 L1759.34 684.202 L1759.89 684.202 L1760.45 684.202 L1761.01 684.202 L1761.57 684.202 L1762.13 684.202 L1762.69 684.202 L1763.25 684.202 L1763.81 684.202 L1764.37 684.202 L1764.93 684.202 L1765.49 684.202 L1766.05 684.202 L1766.61 684.202 L1767.16 684.202 L1767.72 684.202 L1768.28 684.202 L1768.84 684.202 L1769.4 684.202 L1769.96 684.202 L1770.52 684.202 L1771.08 684.202 L1771.64 684.202 L1772.2 684.202 L1772.76 684.202 L1773.32 684.202 L1773.88 684.202 L1774.43 684.202 L1774.99 684.202 L1775.55 684.202 L1776.11 684.202 L1776.67 684.202 L1777.23 684.202 L1777.79 684.202 L1778.35 684.202 L1778.91 684.202 L1779.47 684.202 L1780.03 684.202 L1780.59 684.202 L1781.15 684.202 L1781.71 684.202 L1782.26 684.202 L1782.82 684.202 L1783.38 684.202 L1783.94 684.202 L1784.5 684.202 L1785.06 684.202 L1785.62 684.202 L1786.18 684.202 L1786.74 684.202 L1787.3 684.202 L1787.86 684.202 L1788.42 684.202 L1788.98 684.202 L1789.53 684.202 L1790.09 684.202 L1790.65 684.202 L1791.21 684.202 L1791.77 684.202 L1792.33 684.202 L1792.89 684.202 L1793.45 684.202 L1794.01 684.202 L1794.57 684.202 L1795.13 684.202 L1795.69 684.202 L1796.25 684.202 L1796.8 684.202 L1797.36 684.202 L1797.92 684.202 L1798.48 684.202 L1799.04 684.202 L1799.6 684.202 L1800.16 684.202 L1800.72 684.202 L1801.28 684.202 L1801.84 684.202 L1802.4 684.202 L1802.96 684.202 L1803.52 684.202 L1804.08 684.202 L1804.63 684.202 L1805.19 684.202 L1805.75 684.202 L1806.31 684.202 L1806.87 684.202 L1807.43 684.202 L1807.99 684.202 L1808.55 684.202 L1809.11 684.202 L1809.67 684.202 L1810.23 684.202 L1810.79 684.202 L1811.35 684.202 L1811.9 684.202 L1812.46 684.202 L1813.02 684.202 L1813.58 684.202 L1814.14 684.202 L1814.7 684.202 L1815.26 684.202 L1815.82 684.202 L1816.38 684.202 L1816.94 684.202 L1817.5 684.202 L1818.06 684.202 L1818.62 684.202 L1819.18 684.202 L1819.73 684.202 L1820.29 684.202 L1820.85 684.202 L1821.41 684.202 L1821.97 684.202 L1822.53 684.202 L1823.09 684.202 L1823.65 684.202 L1824.21 684.202 L1824.77 684.202 L1825.33 684.202 L1825.89 684.202 L1826.45 684.202 L1827 684.202 L1827.56 684.202 L1828.12 684.202 L1828.68 684.202 L1829.24 684.202 L1829.8 684.202 L1830.36 684.202 L1830.92 684.202 L1831.48 684.202 L1832.04 684.202 L1832.6 684.202 L1833.16 684.202 L1833.72 684.202 L1834.27 684.202 L1834.83 684.202 L1835.39 684.202 L1835.95 684.202 L1836.51 684.202 L1837.07 684.202 L1837.63 684.202 L1838.19 684.202 L1838.19 683.135 L1837.63 683.135 L1837.07 683.135 L1836.51 683.135 L1835.95 683.135 L1835.39 683.135 L1834.83 683.135 L1834.27 683.135 L1833.72 683.135 L1833.16 683.135 L1832.6 683.135 L1832.04 683.135 L1831.48 683.135 L1830.92 683.135 L1830.36 683.135 L1829.8 683.135 L1829.24 683.135 L1828.68 683.135 L1828.12 683.135 L1827.56 683.135 L1827 683.135 L1826.45 683.135 L1825.89 683.135 L1825.33 683.135 L1824.77 683.135 L1824.21 683.135 L1823.65 683.135 L1823.09 683.135 L1822.53 683.135 L1821.97 683.135 L1821.41 683.135 L1820.85 683.135 L1820.29 683.135 L1819.73 683.135 L1819.18 683.135 L1818.62 683.135 L1818.06 683.135 L1817.5 683.135 L1816.94 683.135 L1816.38 683.135 L1815.82 683.135 L1815.26 683.135 L1814.7 683.135 L1814.14 683.135 L1813.58 683.135 L1813.02 683.135 L1812.46 683.135 L1811.9 683.135 L1811.35 683.135 L1810.79 683.135 L1810.23 683.135 L1809.67 683.135 L1809.11 683.135 L1808.55 683.135 L1807.99 683.135 L1807.43 683.135 L1806.87 683.135 L1806.31 683.135 L1805.75 683.135 L1805.19 683.135 L1804.63 683.135 L1804.08 683.135 L1803.52 683.135 L1802.96 683.135 L1802.4 683.135 L1801.84 683.135 L1801.28 683.135 L1800.72 683.135 L1800.16 683.135 L1799.6 683.135 L1799.04 683.135 L1798.48 683.135 L1797.92 683.135 L1797.36 683.135 L1796.8 683.135 L1796.25 683.135 L1795.69 683.135 L1795.13 683.135 L1794.57 683.135 L1794.01 683.135 L1793.45 683.135 L1792.89 683.135 L1792.33 683.135 L1791.77 683.135 L1791.21 683.135 L1790.65 683.135 L1790.09 683.135 L1789.53 683.135 L1788.98 683.135 L1788.42 683.135 L1787.86 683.135 L1787.3 683.135 L1786.74 683.135 L1786.18 683.135 L1785.62 683.135 L1785.06 683.135 L1784.5 683.135 L1783.94 683.135 L1783.38 683.135 L1782.82 683.135 L1782.26 683.135 L1781.71 683.135 L1781.15 683.135 L1780.59 683.135 L1780.03 683.135 L1779.47 683.135 L1778.91 683.135 L1778.35 683.135 L1777.79 683.135 L1777.23 683.135 L1776.67 683.135 L1776.11 683.135 L1775.55 683.135 L1774.99 683.135 L1774.43 683.135 L1773.88 683.135 L1773.32 683.135 L1772.76 683.135 L1772.2 683.135 L1771.64 683.135 L1771.08 683.135 L1770.52 683.135 L1769.96 683.135 L1769.4 683.135 L1768.84 683.135 L1768.28 683.135 L1767.72 683.135 L1767.16 683.135 L1766.61 683.135 L1766.05 683.135 L1765.49 683.135 L1764.93 683.135 L1764.37 683.135 L1763.81 683.135 L1763.25 683.135 L1762.69 683.135 L1762.13 683.135 L1761.57 683.135 L1761.01 683.135 L1760.45 683.135 L1759.89 683.135 L1759.34 683.135 L1758.78 683.135 L1758.22 683.135 L1757.66 683.135 L1757.1 683.135 L1756.54 683.135 L1755.98 683.135 L1755.42 683.135 L1754.86 683.135 L1754.3 683.135 L1753.74 683.135 L1753.18 683.135 L1752.62 683.135 L1752.06 683.135 L1751.51 683.135 L1750.95 683.135 L1750.39 683.135 L1749.83 683.135 L1749.27 683.135 L1748.71 683.135 L1748.15 683.135 L1747.59 683.135 L1747.03 683.135 L1746.47 683.135 L1745.91 683.135 L1745.35 683.135 L1744.79 683.135 L1744.24 683.135 L1743.68 683.135 L1743.12 683.135 L1742.56 683.135 L1742 683.135 L1741.44 683.135 L1740.88 683.135 L1740.32 683.135 L1739.76 683.135 L1739.2 683.135 L1738.64 683.135 L1738.08 683.135 L1737.52 683.135 L1736.97 683.135 L1736.41 683.135 L1735.85 683.135 L1735.29 683.135 L1734.73 683.135 L1734.17 683.135 L1733.61 683.135 L1733.05 683.135 L1732.49 683.135 L1731.93 683.135 L1731.37 683.135 L1730.81 683.135 L1730.25 683.135 L1729.69 683.135 L1729.14 683.135 L1728.58 683.135 L1728.02 683.135 L1727.46 683.135 L1726.9 683.135 L1726.34 683.135 L1725.78 683.135 L1725.22 683.135 L1724.66 683.135 L1724.1 683.135 L1723.54 683.135 L1722.98 683.135 L1722.42 683.135 L1721.87 683.135 L1721.31 683.135 L1720.75 683.135 L1720.19 683.135 L1719.63 683.135 L1719.07 683.135 L1718.51 683.135 L1717.95 683.135 L1717.39 683.135 L1716.83 683.135 L1716.27 683.135 L1715.71 683.135 L1715.15 683.135 L1714.6 683.135 L1714.04 683.135 L1713.48 683.135 L1712.92 683.135 L1712.36 683.135 L1711.8 683.135 L1711.24 683.135 L1710.68 683.135 L1710.12 683.135 L1709.56 683.135 L1709 683.135 L1708.44 683.135 L1707.88 683.135 L1707.32 683.135 L1706.77 683.135 L1706.21 683.135 L1705.65 683.135 L1705.09 683.135 L1704.53 683.135 L1703.97 683.135 L1703.41 683.135 L1702.85 683.135 L1702.29 683.135 L1701.73 683.135 L1701.17 683.135 L1700.61 683.135 L1700.05 683.135 L1699.5 683.135 L1698.94 683.135 L1698.38 683.135 L1697.82 683.135 L1697.26 683.135 L1696.7 683.135 L1696.14 683.135 L1695.58 683.135 L1695.02 683.135 L1694.46 683.135 L1693.9 683.135 L1693.34 683.135 L1692.78 683.135 L1692.23 683.135 L1691.67 683.135 L1691.11 683.135 L1690.55 683.135 L1689.99 683.135 L1689.43 683.135 L1688.87 683.135 L1688.31 683.135 L1687.75 683.135 L1687.19 683.135 L1686.63 683.135 L1686.07 683.135 L1685.51 683.135 L1684.95 683.135 L1684.4 683.135 L1683.84 683.135 L1683.28 683.135 L1682.72 683.135 L1682.16 683.135 L1681.6 683.135 L1681.04 683.135 L1680.48 683.135 L1679.92 683.135 L1679.36 683.135 L1678.8 683.135 L1678.24 683.135 L1677.68 683.135 L1677.13 683.135 L1676.57 683.135 L1676.01 683.135 L1675.45 683.135 L1674.89 683.135 L1674.33 683.135 L1673.77 683.135 L1673.21 683.135 L1672.65 683.135 L1672.09 683.135 L1671.53 683.135 L1670.97 683.135 L1670.41 683.135 L1669.85 683.135 L1669.3 683.135 L1668.74 683.135 L1668.18 683.135 L1667.62 683.135 L1667.06 683.135 L1666.5 683.135 L1665.94 683.135 L1665.38 683.135 L1664.82 683.135 L1664.26 683.135 L1663.7 683.135 L1663.14 683.135 L1662.58 683.135 L1662.03 683.135 L1661.47 683.135 L1660.91 683.135 L1660.35 683.135 L1659.79 683.135 L1659.23 683.135 L1658.67 683.135 L1658.11 683.135 L1657.55 683.135 L1656.99 683.135 L1656.43 683.135 L1655.87 683.135 L1655.31 683.135 L1654.76 683.135 L1654.2 683.135 L1653.64 683.135 L1653.08 683.135 L1652.52 683.135 L1651.96 683.135 L1651.4 683.135 L1650.84 683.135 L1650.28 683.135 L1649.72 683.135 L1649.16 683.135 L1648.6 683.135 L1648.04 683.135 L1647.48 683.135 L1646.93 683.135 L1646.37 683.135 L1645.81 683.135 L1645.25 683.135 L1644.69 683.135 L1644.13 683.135 L1643.57 683.135 L1643.01 683.135 L1642.45 683.135 L1641.89 683.135 L1641.33 683.135 L1640.77 683.135 L1640.21 683.135 L1639.66 683.135 L1639.1 683.135 L1638.54 683.135 L1637.98 683.135 L1637.42 683.135 L1636.86 683.135 L1636.3 683.135 L1635.74 683.135 L1635.18 683.135 L1634.62 683.135 L1634.06 683.135 L1633.5 683.135 L1632.94 683.135 L1632.39 683.135 L1631.83 683.135 L1631.27 683.135 L1630.71 683.135 L1630.15 683.135 L1629.59 683.135 L1629.03 683.135 L1628.47 683.135 L1627.91 683.135 L1627.35 683.135 L1626.79 683.135 L1626.23 683.135 L1625.67 683.135 L1625.11 683.135 L1624.56 683.135 L1624 683.135 L1623.44 683.135 L1622.88 683.135 L1622.32 683.135 L1621.76 683.135 L1621.2 683.135 L1620.64 683.135 L1620.08 683.135 L1619.52 683.135 L1618.96 683.135 L1618.4 683.135 L1617.84 683.135 L1617.29 683.135 L1616.73 683.135 L1616.17 683.135 L1615.61 683.135 L1615.05 683.135 L1614.49 683.135 L1613.93 683.135 L1613.37 683.135 L1612.81 683.135 L1612.25 683.135 L1611.69 683.135 L1611.13 683.135 L1610.57 683.135 L1610.02 683.135 L1609.46 683.135 L1608.9 683.135 L1608.34 683.135 L1607.78 683.135 L1607.22 683.135 L1606.66 683.135 L1606.1 683.135 L1605.54 683.135 L1604.98 683.135 L1604.42 683.135 L1603.86 683.135 L1603.3 683.135 L1602.74 683.135 L1602.19 683.135 L1601.63 683.135 L1601.07 683.135 L1600.51 683.135 L1599.95 683.135 L1599.39 683.135 L1598.83 683.135 L1598.27 683.135 L1597.71 683.135 L1597.15 683.135 L1596.59 683.135 L1596.03 683.135 L1595.47 683.135 L1594.92 683.135 L1594.36 683.135 L1593.8 683.135 L1593.24 683.135 L1592.68 683.135 L1592.12 683.135 L1591.56 683.135 L1591 683.135 L1590.44 683.135 L1589.88 683.135 L1589.32 683.135 L1588.76 683.135 L1588.2 683.135 L1587.65 683.135 L1587.09 683.135 L1586.53 683.135 L1585.97 683.135 L1585.41 683.135 L1584.85 683.135 L1584.29 683.135 L1583.73 683.135 L1583.17 683.135 L1582.61 683.135 L1582.05 683.135 L1581.49 683.135 L1580.93 683.135 L1580.37 683.135 L1579.82 683.135 L1579.26 683.135 L1578.7 683.135 L1578.14 683.135 L1577.58 683.135 L1577.02 683.135 L1576.46 683.135 L1575.9 683.135 L1575.34 683.135 L1574.78 683.135 L1574.22 683.135 L1573.66 683.135 L1573.1 683.135 L1572.55 683.135 L1571.99 683.135 L1571.43 683.135 L1570.87 683.135 L1570.31 683.135 L1569.75 683.135 L1569.19 683.135 L1568.63 683.135 L1568.07 683.135 L1567.51 683.135 L1566.95 683.135 L1566.39 683.135 L1565.83 683.135 L1565.28 683.135 L1564.72 683.135 L1564.16 683.135 L1563.6 683.135 L1563.04 683.135 L1562.48 683.135 L1561.92 683.135 L1561.36 683.135 L1560.8 683.135 L1560.24 683.135 L1559.68 683.135 L1559.12 683.135 L1558.56 683.135 L1558 683.135 L1557.45 683.135 L1556.89 683.135 L1556.33 683.135 L1555.77 683.135 L1555.21 683.135 L1554.65 683.135 L1554.09 683.135 L1553.53 683.135 L1552.97 683.135 L1552.41 683.135 L1551.85 683.135 L1551.29 683.135 L1550.73 683.135 L1550.18 683.135 L1549.62 683.135 L1549.06 683.135 L1548.5 683.135 L1547.94 683.135 L1547.38 683.135 L1546.82 683.135 L1546.26 683.135 L1545.7 683.135 L1545.14 683.135 L1544.58 683.135 L1544.02 683.135 L1543.46 683.135 L1542.9 683.135 L1542.35 683.135 L1541.79 683.135 L1541.23 683.135 L1540.67 683.135 L1540.11 683.135 L1539.55 683.135 L1538.99 683.135 L1538.43 683.135 L1537.87 683.135 L1537.31 683.135 L1536.75 683.135 L1536.19 683.135 L1535.63 683.135 L1535.08 683.135 L1534.52 683.135 L1533.96 683.135 L1533.4 683.135 L1532.84 683.135 L1532.28 683.135 L1531.72 683.135 L1531.16 683.135 L1530.6 683.135 L1530.04 683.135 L1529.48 683.135 L1528.92 683.135 L1528.36 683.135 L1527.81 683.135 L1527.25 683.135 L1526.69 683.135 L1526.13 683.135 L1525.57 683.135 L1525.01 683.135 L1524.45 683.135 L1523.89 683.135 L1523.33 683.135 L1522.77 683.135 L1522.21 683.135 L1521.65 683.135 L1521.09 683.135 L1520.53 683.135 L1519.98 683.135 L1519.42 683.135 L1518.86 683.135 L1518.3 683.135 L1517.74 683.135 L1517.18 683.135 L1516.62 683.135 L1516.06 683.135 L1515.5 683.135 L1514.94 683.135 L1514.38 683.135 L1513.82 683.135 L1513.26 683.135 L1512.71 683.135 L1512.15 683.135 L1511.59 683.135 L1511.03 683.135 L1510.47 683.135 L1509.91 683.135 L1509.35 683.135 L1508.79 683.135 L1508.23 683.135 L1507.67 683.135 L1507.11 683.135 L1506.55 683.135 L1505.99 683.135 L1505.44 683.135 L1504.88 683.135 L1504.32 683.135 L1503.76 683.135 L1503.2 683.135 L1502.64 683.135 L1502.08 683.135 L1501.52 683.135 L1500.96 683.135 L1500.4 683.135 L1499.84 683.135 L1499.28 683.135 L1498.72 683.135 L1498.16 683.135 L1497.61 683.135 L1497.05 683.135 L1496.49 683.135 L1495.93 683.135 L1495.37 683.135 L1494.81 683.135 L1494.25 683.135 L1493.69 683.135 L1493.13 683.135 L1492.57 683.135 L1492.01 683.135 L1491.45 683.135 L1490.89 683.135 L1490.34 683.135 L1489.78 683.135 L1489.22 683.135 L1488.66 683.135 L1488.1 683.135 L1487.54 683.135 L1486.98 683.135 L1486.42 683.135 L1485.86 683.135 L1485.3 683.135 L1484.74 683.135 L1484.18 683.135 L1483.62 683.135 L1483.07 683.135 L1482.51 683.135 L1481.95 683.135 L1481.39 683.135 L1480.83 683.135 L1480.27 683.135 L1479.71 683.135 L1479.15 683.135 L1478.59 683.135 L1478.03 683.135 L1477.47 683.135 L1476.91 683.135 L1476.35 683.135 L1475.79 683.135 L1475.24 683.135 L1474.68 683.135 L1474.12 683.135 L1473.56 683.135 L1473 683.135 L1472.44 683.135 L1471.88 683.135 L1471.32 683.135 L1470.76 683.135 L1470.2 683.135 L1469.64 683.135 L1469.08 683.135 L1468.52 683.135 L1467.97 683.135 L1467.41 683.135 L1466.85 683.135 L1466.29 683.135 L1465.73 683.135 L1465.17 683.135 L1464.61 683.135 L1464.05 683.135 L1463.49 683.135 L1462.93 683.135 L1462.37 683.135 L1461.81 683.135 L1461.25 683.135 L1460.7 683.135 L1460.14 683.135 L1459.58 683.135 L1459.02 683.135 L1458.46 683.135 L1457.9 683.135 L1457.34 683.135 L1456.78 683.135 L1456.22 683.135 L1455.66 683.135 L1455.1 683.135 L1454.54 683.135 L1453.98 683.135 L1453.42 683.135 L1452.87 683.135 L1452.31 683.135 L1451.75 683.135 L1451.19 683.135 L1450.63 683.135 L1450.07 683.135 L1449.51 683.135 L1448.95 683.135 L1448.39 683.135 L1447.83 683.135 L1447.27 683.135 L1446.71 683.135 L1446.15 683.135 L1445.6 683.135 L1445.04 683.135 L1444.48 683.135 L1443.92 683.135 L1443.36 683.135 L1442.8 683.135 L1442.24 683.135 L1441.68 683.135 L1441.12 683.135 L1440.56 683.135 L1440 683.135 L1439.44 683.135 L1438.88 683.135 L1438.33 683.135 L1437.77 683.135 L1437.21 683.135 L1436.65 683.135 L1436.09 683.135 L1435.53 683.135 L1434.97 683.135 L1434.41 683.135 L1433.85 683.135 L1433.29 683.135 L1432.73 683.135 L1432.17 683.135 L1431.61 683.135 L1431.05 683.135 L1430.5 683.135 L1429.94 683.135 L1429.38 683.135 L1428.82 683.135 L1428.26 683.135 L1427.7 683.135 L1427.14 683.135 L1426.58 683.135 L1426.02 683.135 L1425.46 683.135 L1424.9 683.135 L1424.34 683.135 L1423.78 683.135 L1423.23 683.135 L1422.67 683.135 L1422.11 683.135 L1421.55 683.135 L1420.99 683.135 L1420.43 683.135 L1419.87 683.135 L1419.31 683.135 L1418.75 683.135 L1418.19 683.135 L1417.63 683.135 L1417.07 683.135 L1416.51 683.135 L1415.95 683.135 L1415.4 683.135 L1414.84 683.135 L1414.28 683.135 L1413.72 683.135 L1413.16 683.135 L1412.6 683.135 L1412.04 683.135 L1411.48 683.135 L1410.92 683.135 L1410.36 683.135 L1409.8 683.135 L1409.24 683.135 L1408.68 683.135 L1408.13 683.135 L1407.57 683.135 L1407.01 683.135 L1406.45 683.135 L1405.89 683.135 L1405.33 683.135 L1404.77 683.135 L1404.21 683.135 L1403.65 683.135 L1403.09 683.135 L1402.53 683.135 L1401.97 683.135 L1401.41 683.135 L1400.86 683.135 L1400.3 683.135 L1399.74 683.135 L1399.18 683.135 L1398.62 683.135 L1398.06 683.135 L1397.5 683.135 L1396.94 683.135 L1396.38 683.135 L1395.82 683.135 L1395.26 683.135 L1394.7 683.135 L1394.14 683.135 L1393.58 683.135 L1393.03 683.135 L1392.47 683.135 L1391.91 683.135 L1391.35 683.135 L1390.79 683.135 L1390.23 683.135 L1389.67 683.135 L1389.11 683.135 L1388.55 683.135 L1387.99 683.135 L1387.43 683.135 L1386.87 683.135 L1386.31 683.135 L1385.76 683.135 L1385.2 683.135 L1384.64 683.135 L1384.08 683.135 L1383.52 683.135 L1382.96 683.135 L1382.4 683.135 L1381.84 683.135 L1381.28 683.135 L1380.72 683.135 L1380.16 683.135 L1379.6 683.135 L1379.04 683.135 L1378.49 683.135 L1377.93 683.135 L1377.37 683.135 L1376.81 683.135 L1376.25 683.135 L1375.69 683.135 L1375.13 683.135 L1374.57 683.135 L1374.01 683.135 L1373.45 683.135 L1372.89 683.135 L1372.33 683.135 L1371.77 683.135 L1371.21 683.135 L1370.66 683.135 L1370.1 683.135 L1369.54 683.135 L1368.98 683.135 L1368.42 683.135 L1367.86 683.135 L1367.3 683.135 L1366.74 683.135 L1366.18 683.135 L1365.62 683.135 L1365.06 683.135 L1364.5 683.135 L1363.94 683.135 L1363.39 683.135 L1362.83 683.135 L1362.27 683.135 L1361.71 683.135 L1361.15 683.135 L1360.59 683.135 L1360.03 683.135 L1359.47 683.135 L1358.91 683.135 L1358.35 683.135 L1357.79 683.135 L1357.23 683.135 L1356.67 683.135 L1356.12 683.135 L1355.56 683.135 L1355 683.135 L1354.44 683.135 L1353.88 683.135 L1353.32 683.135 L1352.76 683.135 L1352.2 683.135 L1351.64 683.135 L1351.08 683.135 L1350.52 683.135 L1349.96 683.135 L1349.4 683.135 L1348.84 683.135 L1348.29 683.135 L1347.73 683.135 L1347.17 683.135 L1346.61 683.135 L1346.05 683.135 L1345.49 683.135 L1344.93 683.135 L1344.37 683.135 L1343.81 683.135 L1343.25 683.135 L1342.69 683.135 L1342.13 683.135 L1341.57 683.135 L1341.02 683.135 L1340.46 683.135 L1339.9 683.135 L1339.34 683.135 L1338.78 683.135 L1338.22 683.135 L1337.66 683.135 L1337.1 683.135 L1336.54 683.135 L1335.98 683.135 L1335.42 683.135 L1334.86 683.135 L1334.3 683.135 L1333.75 683.135 L1333.19 683.135 L1332.63 683.135 L1332.07 683.135 L1331.51 683.135 L1330.95 683.135 L1330.39 683.135 L1329.83 683.135 L1329.27 683.135 L1328.71 683.135 L1328.15 683.135 L1327.59 683.135 L1327.03 683.135 L1326.47 683.135 L1325.92 683.135 L1325.36 683.135 L1324.8 683.135 L1324.24 683.135 L1323.68 683.135 L1323.12 683.135 L1322.56 683.135 L1322 683.135 L1321.44 683.135 L1320.88 683.135 L1320.32 683.135 L1319.76 683.135 L1319.2 683.135 L1318.65 683.135 L1318.09 683.135 L1317.53 683.135 L1316.97 683.135 L1316.41 683.135 L1315.85 683.135 L1315.29 683.135 L1314.73 683.135 L1314.17 683.135 L1313.61 683.135 L1313.05 683.135 L1312.49 683.135 L1311.93 683.135 L1311.38 683.135 L1310.82 683.135 L1310.26 683.135 L1309.7 683.135 L1309.14 683.135 L1308.58 683.135 L1308.02 683.135 L1307.46 683.135 L1306.9 683.135 L1306.34 683.135 L1305.78 683.135 L1305.22 683.135 L1304.66 683.135 L1304.1 683.135 L1303.55 683.135 L1302.99 683.135 L1302.43 683.135 L1301.87 683.135 L1301.31 683.135 L1300.75 683.135 L1300.19 683.135 L1299.63 683.135 L1299.07 683.135 L1298.51 683.135 L1297.95 683.135 L1297.39 683.135 L1296.83 683.135 L1296.28 683.135 L1295.72 683.135 L1295.16 683.135 L1294.6 683.135 L1294.04 683.135 L1293.48 683.135 L1292.92 683.135 L1292.36 683.135 L1291.8 683.135 L1291.24 683.135 L1290.68 683.135 L1290.12 683.135 L1289.56 683.135 L1289 683.135 L1288.45 683.135 L1287.89 683.135 L1287.33 683.135 L1286.77 683.135 L1286.21 683.135 L1285.65 683.135 L1285.09 683.135 L1284.53 683.135 L1283.97 683.135 L1283.41 683.135 L1282.85 683.135 L1282.29 683.135 L1281.73 683.135 L1281.18 683.135 L1280.62 683.135 L1280.06 683.135 L1279.5 683.135 L1278.94 683.135 L1278.38 683.135 L1277.82 683.135 L1277.26 683.135 L1276.7 683.135 L1276.14 683.135 L1275.58 683.135 L1275.02 683.135 L1274.46 683.135 L1273.91 683.135 L1273.35 683.135 L1272.79 683.135 L1272.23 683.135 L1271.67 683.135 L1271.11 683.135 L1270.55 683.135 L1269.99 683.135 L1269.43 683.135 L1268.87 683.135 L1268.31 683.135 L1267.75 683.135 L1267.19 683.135 L1266.63 683.135 L1266.08 683.135 L1265.52 683.135 L1264.96 683.135 L1264.4 683.135 L1263.84 683.135 L1263.28 683.135 L1262.72 683.135 L1262.16 683.135 L1261.6 683.135 L1261.04 683.135 L1260.48 683.135 L1259.92 683.135 L1259.36 683.135 L1258.81 683.135 L1258.25 683.135 L1257.69 683.135 L1257.13 683.135 L1256.57 683.135 L1256.01 683.135 L1255.45 683.135 L1254.89 683.135 L1254.33 683.135 L1253.77 683.135 L1253.21 683.135 L1252.65 683.135 L1252.09 683.135 L1251.54 683.135 L1250.98 683.135 L1250.42 683.135 L1249.86 683.135 L1249.3 683.135 L1248.74 683.135 L1248.18 683.135 L1247.62 683.135 L1247.06 683.135 L1246.5 683.135 L1245.94 683.135 L1245.38 683.135 L1244.82 683.135 L1244.26 683.135 L1243.71 683.135 L1243.15 683.135 L1242.59 683.135 L1242.03 683.135 L1241.47 683.135 L1240.91 683.135 L1240.35 683.135 L1239.79 683.135 L1239.23 683.135 L1238.67 683.135 L1238.11 683.135 L1237.55 683.135 L1236.99 683.135 L1236.44 683.135 L1235.88 683.135 L1235.32 683.135 L1234.76 683.135 L1234.2 683.135 L1233.64 683.135 L1233.08 683.135 L1232.52 683.135 L1231.96 683.135 L1231.4 683.135 L1230.84 683.135 L1230.28 683.135 L1229.72 683.135 L1229.17 683.135 L1228.61 683.135 L1228.05 683.135 L1227.49 683.135 L1226.93 683.135 L1226.37 683.135 L1225.81 683.135 L1225.25 683.135 L1224.69 683.135 L1224.13 683.135 L1223.57 683.135 L1223.01 683.135 L1222.45 683.135 L1221.89 683.135 L1221.34 683.135 L1220.78 683.135 L1220.22 683.135 L1219.66 683.135 L1219.1 683.135 L1218.54 683.135 L1217.98 683.135 L1217.42 683.135 L1216.86 683.135 L1216.3 683.135 L1215.74 683.135 L1215.18 683.135 L1214.62 683.135 L1214.07 683.135 L1213.51 683.135 L1212.95 683.135 L1212.39 683.135 L1211.83 683.135 L1211.27 683.135 L1210.71 683.135 L1210.15 683.135 L1209.59 683.135 L1209.03 683.135 L1208.47 683.135 L1207.91 683.135 L1207.35 683.135 L1206.8 683.135 L1206.24 683.135 L1205.68 683.135 L1205.12 683.135 L1204.56 683.135 L1204 683.135 L1203.44 683.135 L1202.88 683.135 L1202.32 683.135 L1201.76 683.135 L1201.2 683.135 L1200.64 683.135 L1200.08 683.135 L1199.52 683.135 L1198.97 683.135 L1198.41 683.135 L1197.85 683.135 L1197.29 683.135 L1196.73 683.135 L1196.17 683.135 L1195.61 683.135 L1195.05 683.135 L1194.49 683.135 L1193.93 683.135 L1193.37 683.135 L1192.81 683.135 L1192.25 683.135 L1191.7 683.135 L1191.14 683.135 L1190.58 683.135 L1190.02 683.135 L1189.46 683.135 L1188.9 683.135 L1188.34 683.135 L1187.78 683.135 L1187.22 683.135 L1186.66 683.135 L1186.1 683.135 L1185.54 683.135 L1184.98 683.135 L1184.43 683.135 L1183.87 683.135 L1183.31 683.135 L1182.75 683.135 L1182.19 683.135 L1181.63 683.135 L1181.07 683.135 L1180.51 683.135 L1179.95 683.135 L1179.39 683.135 L1178.83 683.135 L1178.27 683.135 L1177.71 683.135 L1177.15 683.135 L1176.6 683.135 L1176.04 683.135 L1175.48 683.135 L1174.92 683.135 L1174.36 683.135 L1173.8 683.135 L1173.24 683.135 L1172.68 683.135 L1172.12 683.135 L1171.56 683.135 L1171 683.135 L1170.44 683.135 L1169.88 683.135 L1169.33 683.135 L1168.77 683.135 L1168.21 683.135 L1167.65 683.135 L1167.09 683.135 L1166.53 683.135 L1165.97 683.135 L1165.41 683.135 L1164.85 683.135 L1164.29 683.135 L1163.73 683.135 L1163.17 683.135 L1162.61 683.135 L1162.05 683.135 L1161.5 683.135 L1160.94 683.135 L1160.38 683.135 L1159.82 683.135 L1159.26 683.135 L1158.7 683.135 L1158.14 683.135 L1157.58 683.135 L1157.02 683.135 L1156.46 683.135 L1155.9 683.135 L1155.34 683.135 L1154.78 683.135 L1154.23 683.135 L1153.67 683.135 L1153.11 683.135 L1152.55 683.135 L1151.99 683.135 L1151.43 683.135 L1150.87 683.135 L1150.31 683.135 L1149.75 683.135 L1149.19 683.135 L1148.63 683.135 L1148.07 683.135 L1147.51 683.135 L1146.96 683.135 L1146.4 683.135 L1145.84 683.135 L1145.28 683.135 L1144.72 683.135 L1144.16 683.135 L1143.6 683.135 L1143.04 683.135 L1142.48 683.135 L1141.92 683.135 L1141.36 683.135 L1140.8 683.135 L1140.24 683.135 L1139.68 683.135 L1139.13 683.135 L1138.57 683.135 L1138.01 683.135 L1137.45 683.135 L1136.89 683.135 L1136.33 683.135 L1135.77 683.135 L1135.21 683.135 L1134.65 683.135 L1134.09 683.135 L1133.53 683.135 L1132.97 683.135 L1132.41 683.135 L1131.86 683.135 L1131.3 683.135 L1130.74 683.135 L1130.18 683.135 L1129.62 683.135 L1129.06 683.135 L1128.5 683.135 L1127.94 683.135 L1127.38 683.135 L1126.82 683.135 L1126.26 683.135 L1125.7 683.135 L1125.14 683.135 L1124.59 683.135 L1124.03 683.135 L1123.47 683.135 L1122.91 683.135 L1122.35 683.135 L1121.79 683.135 L1121.23 683.135 L1120.67 683.135 L1120.11 683.135 L1119.55 683.135 L1118.99 683.135 L1118.43 683.135 L1117.87 683.135 L1117.31 683.135 L1116.76 683.135 L1116.2 683.135 L1115.64 683.135 L1115.08 683.135 L1114.52 683.135 L1113.96 683.135 L1113.4 683.135 L1112.84 683.135 L1112.28 683.135 L1111.72 683.135 L1111.16 683.135 L1110.6 683.135 L1110.04 683.135 L1109.49 683.135 L1108.93 683.135 L1108.37 683.135 L1107.81 683.135 L1107.25 683.135 L1106.69 683.135 L1106.13 683.135 L1105.57 683.135 L1105.01 683.135 L1104.45 683.135 L1103.89 683.135 L1103.33 683.135 L1102.77 683.135 L1102.22 683.135 L1101.66 683.135 L1101.1 683.135 L1100.54 683.135 L1099.98 683.135 L1099.42 683.135 L1098.86 683.135 L1098.3 683.135 L1097.74 683.135 L1097.18 683.135 L1096.62 683.135 L1096.06 683.135 L1095.5 683.135 L1094.94 683.135 L1094.39 683.135 L1093.83 683.135 L1093.27 683.135 L1092.71 683.135 L1092.15 683.135 L1091.59 683.135 L1091.03 683.135 L1090.47 683.135 L1089.91 683.135 L1089.35 683.135 L1088.79 683.135 L1088.23 683.135 L1087.67 683.135 L1087.12 683.135 L1086.56 683.135 L1086 683.135 L1085.44 683.135 L1084.88 683.135 L1084.32 683.135 L1083.76 683.135 L1083.2 683.135 L1082.64 683.135 L1082.08 683.135 L1081.52 683.135 L1080.96 683.135 L1080.4 683.135 L1079.85 683.135 L1079.29 683.135 L1078.73 683.135 L1078.17 683.135 L1077.61 683.135 L1077.05 683.135 L1076.49 683.135 L1075.93 683.135 L1075.37 683.135 L1074.81 683.135 L1074.25 683.135 L1073.69 683.135 L1073.13 683.135 L1072.57 683.135 L1072.02 683.135 L1071.46 683.135 L1070.9 683.135 L1070.34 683.135 L1069.78 683.135 L1069.22 683.135 L1068.66 683.135 L1068.1 683.135 L1067.54 683.135 L1066.98 683.135 L1066.42 683.135 L1065.86 683.135 L1065.3 683.135 L1064.75 683.135 L1064.19 683.135 L1063.63 683.135 L1063.07 683.135 L1062.51 683.135 L1061.95 683.135 L1061.39 683.135 L1060.83 683.135 L1060.27 683.135 L1059.71 683.135 L1059.15 683.135 L1058.59 683.135 L1058.03 683.135 L1057.48 683.135 L1056.92 683.135 L1056.36 683.135 L1055.8 683.135 L1055.24 683.135 L1054.68 683.135 L1054.12 683.135 L1053.56 683.135 L1053 683.135 L1052.44 683.135 L1051.88 683.135 L1051.32 683.135 L1050.76 683.135 L1050.2 683.135 L1049.65 683.135 L1049.09 683.135 L1048.53 683.135 L1047.97 683.135 L1047.41 683.135 L1046.85 683.135 L1046.29 683.135 L1045.73 683.135 L1045.17 683.135 L1044.61 683.135 L1044.05 683.135 L1043.49 683.135 L1042.93 683.135 L1042.38 683.135 L1041.82 683.135 L1041.26 683.135 L1040.7 683.135 L1040.14 683.135 L1039.58 683.135 L1039.02 683.135 L1038.46 683.135 L1037.9 683.135 L1037.34 683.135 L1036.78 683.135 L1036.22 683.135 L1035.66 683.135 L1035.1 683.135 L1034.55 683.135 L1033.99 683.135 L1033.43 683.135 L1032.87 683.135 L1032.31 683.135 L1031.75 683.135 L1031.19 683.135 L1030.63 683.135 L1030.07 683.135 L1029.51 683.135 L1028.95 683.135 L1028.39 683.135 L1027.83 683.135 L1027.28 683.135 L1026.72 683.135 L1026.16 683.135 L1025.6 683.135 L1025.04 683.135 L1024.48 683.135 L1023.92 683.135 L1023.36 683.135 L1022.8 683.135 L1022.24 683.135 L1021.68 683.135 L1021.12 683.135 L1020.56 683.135 L1020.01 683.135 L1019.45 683.135 L1018.89 683.135 L1018.33 683.135 L1017.77 683.135 L1017.21 683.135 L1016.65 683.135 L1016.09 683.135 L1015.53 683.135 L1014.97 683.135 L1014.41 683.135 L1013.85 683.135 L1013.29 683.135 L1012.73 683.135 L1012.18 683.135 L1011.62 683.135 L1011.06 683.135 L1010.5 683.135 L1009.94 683.135 L1009.38 683.135 L1008.82 683.135 L1008.26 683.135 L1007.7 683.135 L1007.14 683.135 L1006.58 683.135 L1006.02 683.135 L1005.46 683.135 L1004.91 683.135 L1004.35 683.135 L1003.79 683.135 L1003.23 683.135 L1002.67 683.135 L1002.11 683.135 L1001.55 683.135 L1000.99 683.135 L1000.43 683.135 L999.872 683.135 L999.313 683.135 L998.754 683.135 L998.194 683.135 L997.635 683.135 L997.076 683.135 L996.517 683.135 L995.957 683.135 L995.398 683.135 L994.839 683.135 L994.28 683.135 L993.72 683.135 L993.161 683.135 L992.602 683.135 L992.043 683.135 L991.483 683.135 L990.924 683.135 L990.365 683.135 L989.806 683.135 L989.246 683.135 L988.687 683.135 L988.128 683.135 L987.569 683.135 L987.009 683.135 L986.45 683.135 L985.891 683.135 L985.332 683.135 L984.772 683.135 L984.213 683.135 L983.654 683.135 L983.095 683.135 L982.535 683.135 L981.976 683.135 L981.417 683.135 L980.858 683.135 L980.298 683.135 L979.739 683.135 L979.18 683.135 L978.621 683.135 L978.061 683.135 L977.502 683.135 L976.943 683.135 L976.384 683.135 L975.824 683.135 L975.265 683.135 L974.706 683.135 L974.147 683.135 L973.587 683.135 L973.028 683.135 L972.469 683.135 L971.91 683.135 L971.35 683.135 L970.791 683.135 L970.232 683.135 L969.673 683.135 L969.113 683.135 L968.554 683.135 L967.995 683.135 L967.436 683.135 L966.876 683.135 L966.317 683.135 L965.758 683.135 L965.199 683.135 L964.639 683.135 L964.08 683.135 L963.521 683.135 L962.962 683.135 L962.402 683.135 L961.843 683.135 L961.284 683.135 L960.725 683.135 L960.165 683.135 L959.606 683.135 L959.047 683.135 L958.488 683.135 L957.928 683.135 L957.369 683.135 L956.81 683.135 L956.251 683.135 L955.691 683.135 L955.132 683.135 L954.573 683.135 L954.014 683.135 L953.454 683.135 L952.895 683.135 L952.336 683.135 L951.777 683.135 L951.217 683.135 L950.658 683.135 L950.099 683.135 L949.54 683.135 L948.98 683.135 L948.421 683.135 L947.862 683.135 L947.303 683.135 L946.743 683.135 L946.184 683.135 L945.625 683.135 L945.066 683.135 L944.506 683.135 L943.947 683.135 L943.388 683.135 L942.829 683.135 L942.269 683.135 L941.71 683.135 L941.151 683.135 L940.592 683.135 L940.032 683.135 L939.473 683.135 L938.914 683.135 L938.355 683.135 L937.795 683.135 L937.236 683.135 L936.677 683.135 L936.118 683.135 L935.558 683.135 L934.999 683.135 L934.44 683.135 L933.881 683.135 L933.321 683.135 L932.762 683.135 L932.203 683.135 L931.644 683.135 L931.084 683.135 L930.525 683.135 L929.966 683.135 L929.406 683.135 L928.847 683.135 L928.288 683.135 L927.729 683.135 L927.169 683.135 L926.61 683.135 L926.051 683.135 L925.492 683.135 L924.932 683.135 L924.373 683.135 L923.814 683.135 L923.255 683.135 L922.695 683.135 L922.136 683.135 L921.577 683.135 L921.018 683.135 L920.458 683.135 L919.899 683.135 L919.34 683.135 L918.781 683.135 L918.221 683.135 L917.662 683.135 L917.103 683.135 L916.544 683.135 L915.984 683.135 L915.425 683.135 L914.866 683.135 L914.307 683.135 L913.747 683.135 L913.188 683.135 L912.629 683.135 L912.07 683.135 L911.51 683.135 L910.951 683.135 L910.392 683.135 L909.833 683.135 L909.273 683.135 L908.714 683.135 L908.155 683.135 L907.596 683.135 L907.036 683.135 L906.477 683.135 L905.918 683.135 L905.359 683.135 L904.799 683.135 L904.24 683.135 L903.681 683.135 L903.122 683.135 L902.562 683.135 L902.003 683.135 L901.444 683.135 L900.885 683.135 L900.325 683.135 L899.766 683.135 L899.207 683.135 L898.648 683.135 L898.088 683.135 L897.529 683.135 L896.97 683.135 L896.411 683.135 L895.851 683.135 L895.292 683.135 L894.733 683.135 L894.174 683.135 L893.614 683.135 L893.055 683.135 L892.496 683.135 L891.937 683.135 L891.377 683.135 L890.818 683.135 L890.259 683.135 L889.7 683.135 L889.14 683.135 L888.581 683.135 L888.022 683.135 L887.463 683.135 L886.903 683.135 L886.344 683.135 L885.785 683.135 L885.226 683.135 L884.666 683.135 L884.107 683.135 L883.548 683.135 L882.989 683.135 L882.429 683.135 L881.87 683.135 L881.311 683.135 L880.752 683.135 L880.192 683.135 L879.633 683.135 L879.074 683.135 L878.515 683.135 L877.955 683.135 L877.396 683.135 L876.837 683.135 L876.278 683.135 L875.718 683.135 L875.159 683.135 L874.6 683.135 L874.041 683.135 L873.481 683.135 L872.922 683.135 L872.363 683.135 L871.804 683.135 L871.244 683.135 L870.685 683.135 L870.126 683.135 L869.567 683.135 L869.007 683.135 L868.448 683.135 L867.889 683.135 L867.33 683.135 L866.77 683.135 L866.211 683.135 L865.652 683.135 L865.093 683.135 L864.533 683.135 L863.974 683.135 L863.415 683.135 L862.856 683.135 L862.296 683.135 L861.737 683.135 L861.178 683.135 L860.619 683.135 L860.059 683.135 L859.5 683.135 L858.941 683.135 L858.382 683.135 L857.822 683.135 L857.263 683.135 L856.704 683.135 L856.145 683.135 L855.585 683.135 L855.026 683.135 L854.467 683.135 L853.908 683.135 L853.348 683.135 L852.789 683.135 L852.23 683.135 L851.671 683.135 L851.111 683.135 L850.552 683.135 L849.993 683.135 L849.434 683.135 L848.874 683.135 L848.315 683.135 L847.756 683.135 L847.197 683.135 L846.637 683.135 L846.078 683.135 L845.519 683.135 L844.96 683.135 L844.4 683.135 L843.841 683.135 L843.282 683.135 L842.723 683.135 L842.163 683.135 L841.604 683.135 L841.045 683.135 L840.486 683.135 L839.926 683.135 L839.367 683.135 L838.808 683.135 L838.249 683.135 L837.689 683.135 L837.13 683.135 L836.571 683.135 L836.012 683.135 L835.452 683.135 L834.893 683.135 L834.334 683.135 L833.775 683.135 L833.215 683.135 L832.656 683.135 L832.097 683.135 L831.538 683.135 L830.978 683.135 L830.419 683.135 L829.86 683.135 L829.301 683.135 L828.741 683.135 L828.182 683.135 L827.623 683.135 L827.064 683.135 L826.504 683.135 L825.945 683.135 L825.386 683.135 L824.827 683.135 L824.267 683.135 L823.708 683.135 L823.149 683.135 L822.59 683.135 L822.03 683.135 L821.471 683.135 L820.912 683.135 L820.353 683.135 L819.793 683.135 L819.234 683.135 L818.675 683.135 L818.116 683.135 L817.556 683.135 L816.997 683.135 L816.438 683.135 L815.879 683.135 L815.319 683.135 L814.76 683.135 L814.201 683.135 L813.642 683.135 L813.082 683.135 L812.523 683.135 L811.964 683.135 L811.405 683.135 L810.845 683.135 L810.286 683.135 L809.727 683.135 L809.168 683.135 L808.608 683.135 L808.049 683.135 L807.49 683.135 L806.931 683.135 L806.371 683.135 L805.812 683.135 L805.253 683.135 L804.693 683.135 L804.134 683.135 L803.575 683.135 L803.016 683.135 L802.456 683.135 L801.897 683.135 L801.338 683.135 L800.779 683.135 L800.219 683.135 L799.66 683.135 L799.101 683.135 L798.542 683.135 L797.982 683.135 L797.423 683.135 L796.864 683.135 L796.305 683.135 L795.745 683.135 L795.186 683.135 L794.627 683.135 L794.068 683.135 L793.508 683.135 L792.949 683.135 L792.39 683.135 L791.831 683.135 L791.271 683.135 L790.712 683.135 L790.153 683.135 L789.594 683.135 L789.034 683.135 L788.475 683.135 L787.916 683.135 L787.357 683.135 L786.797 683.135 L786.238 683.135 L785.679 683.135 L785.12 683.135 L784.56 683.135 L784.001 683.135 L783.442 683.135 L782.883 683.135 L782.323 683.135 L781.764 683.135 L781.205 683.135 L780.646 683.135 L780.086 683.135 L779.527 683.135 L778.968 683.135 L778.409 683.135 L777.849 683.135 L777.29 683.135 L776.731 683.135 L776.172 683.135 L775.612 683.135 L775.053 683.135 L774.494 683.135 L773.935 683.135 L773.375 683.135 L772.816 683.135 L772.257 683.135 L771.698 683.135 L771.138 683.135 L770.579 683.135 L770.02 683.135 L769.461 683.135 L768.901 683.135 L768.342 683.135 L767.783 683.135 L767.224 683.135 L766.664 683.135 L766.105 683.135 L765.546 683.135 L764.987 683.135 L764.427 683.135 L763.868 683.135 L763.309 683.135 L762.75 683.135 L762.19 683.135 L761.631 683.135 L761.072 683.135 L760.513 683.135 L759.953 683.135 L759.394 683.135 L758.835 683.135 L758.276 683.135 L757.716 683.135 L757.157 683.135 L756.598 683.135 L756.039 683.135 L755.479 683.135 L754.92 683.135 L754.361 683.135 L753.802 683.135 L753.242 683.135 L752.683 683.135 L752.124 683.135 L751.565 683.135 L751.005 683.135 L750.446 683.135 L749.887 683.135 L749.328 683.135 L748.768 683.135 L748.209 683.135 L747.65 683.135 L747.091 683.135 L746.531 683.135 L745.972 683.135 L745.413 683.135 L744.854 683.135 L744.294 683.135 L743.735 683.135 L743.176 683.135 L742.617 683.135 L742.057 683.135 L741.498 683.135 L740.939 683.135 L740.38 683.135 L739.82 683.135 L739.261 683.135 L738.702 683.135 L738.143 683.135 L737.583 683.135 L737.024 683.135 L736.465 683.135 L735.906 683.135 L735.346 683.135 L734.787 683.135 L734.228 683.135 L733.669 683.135 L733.109 683.135 L732.55 683.135 L731.991 683.135 L731.432 683.135 L730.872 683.135 L730.313 683.135 L729.754 683.135 L729.195 683.135 L728.635 683.135 L728.076 683.135 L727.517 683.135 L726.958 683.135 L726.398 683.135 L725.839 683.135 L725.28 683.135 L724.721 683.135 L724.161 683.135 L723.602 683.135 L723.043 683.135 L722.484 683.135 L721.924 683.135 L721.365 683.135 L720.806 683.135 L720.247 683.135  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip923)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.692 720.806,683.692 721.365,683.692 721.924,683.692 722.484,683.692 723.043,683.692 723.602,683.692 724.161,683.692 724.721,683.692 725.28,683.692 725.839,683.692 726.398,683.692 726.958,683.692 727.517,683.692 728.076,683.692 728.635,683.692 729.195,683.692 729.754,683.692 730.313,683.692 730.872,683.692 731.432,683.692 731.991,683.692 732.55,683.692 733.109,683.692 733.669,683.692 734.228,683.692 734.787,683.692 735.346,683.692 735.906,683.692 736.465,683.692 737.024,683.692 737.583,683.692 738.143,683.692 738.702,683.692 739.261,683.692 739.82,683.692 740.38,683.692 740.939,683.692 741.498,683.692 742.057,683.692 742.617,683.692 743.176,683.692 743.735,683.692 744.294,683.692 744.854,683.692 745.413,683.692 745.972,683.692 746.531,683.692 747.091,683.692 747.65,683.692 748.209,683.692 748.768,683.692 749.328,683.692 749.887,683.692 750.446,683.692 751.005,683.692 751.565,683.692 752.124,683.692 752.683,683.692 753.242,683.692 753.802,683.692 754.361,683.692 754.92,683.692 755.479,683.692 756.039,683.692 756.598,683.692 757.157,683.692 757.716,683.692 758.276,683.692 758.835,683.692 759.394,683.692 759.953,683.692 760.513,683.692 761.072,683.692 761.631,683.692 762.19,683.692 762.75,683.692 763.309,683.692 763.868,683.692 764.427,683.692 764.987,683.692 765.546,683.692 766.105,683.692 766.664,683.692 767.224,683.692 767.783,683.692 768.342,683.692 768.901,683.692 769.461,683.692 770.02,683.692 770.579,683.692 771.138,683.692 771.698,683.692 772.257,683.692 772.816,683.692 773.375,683.692 773.935,683.692 774.494,683.692 775.053,683.692 775.612,683.692 776.172,683.692 776.731,683.692 777.29,683.692 777.849,683.692 778.409,683.692 778.968,683.692 779.527,683.692 780.086,683.692 780.646,683.692 781.205,683.692 781.764,683.692 782.323,683.692 782.883,683.692 783.442,683.692 784.001,683.692 784.56,683.692 785.12,683.692 785.679,683.692 786.238,683.692 786.797,683.692 787.357,683.692 787.916,683.692 788.475,683.692 789.034,683.692 789.594,683.692 790.153,683.692 790.712,683.692 791.271,683.692 791.831,683.692 792.39,683.692 792.949,683.692 793.508,683.692 794.068,683.692 794.627,683.692 795.186,683.692 795.745,683.692 796.305,683.692 796.864,683.692 797.423,683.692 797.982,683.692 798.542,683.692 799.101,683.692 799.66,683.692 800.219,683.692 800.779,683.692 801.338,683.692 801.897,683.692 802.456,683.692 803.016,683.692 803.575,683.692 804.134,683.692 804.693,683.692 805.253,683.692 805.812,683.692 806.371,683.692 806.931,683.692 807.49,683.692 808.049,683.692 808.608,683.692 809.168,683.692 809.727,683.692 810.286,683.692 810.845,683.692 811.405,683.692 811.964,683.692 812.523,683.692 813.082,683.692 813.642,683.692 814.201,683.692 814.76,683.692 815.319,683.692 815.879,683.692 816.438,683.692 816.997,683.692 817.556,683.692 818.116,683.692 818.675,683.692 819.234,683.692 819.793,683.692 820.353,683.692 820.912,683.692 821.471,683.692 822.03,683.692 822.59,683.692 823.149,683.692 823.708,683.692 824.267,683.692 824.827,683.692 825.386,683.692 825.945,683.692 826.504,683.692 827.064,683.692 827.623,683.692 828.182,683.692 828.741,683.692 829.301,683.692 829.86,683.692 830.419,683.692 830.978,683.692 831.538,683.692 832.097,683.692 832.656,683.692 833.215,683.692 833.775,683.692 834.334,683.692 834.893,683.692 835.452,683.692 836.012,683.692 836.571,683.692 837.13,683.692 837.689,683.692 838.249,683.692 838.808,683.692 839.367,683.692 839.926,683.692 840.486,683.692 841.045,683.692 841.604,683.692 842.163,683.692 842.723,683.692 843.282,683.692 843.841,683.692 844.4,683.692 844.96,683.692 845.519,683.692 846.078,683.692 846.637,683.692 847.197,683.692 847.756,683.692 848.315,683.692 848.874,683.692 849.434,683.692 849.993,683.692 850.552,683.692 851.111,683.692 851.671,683.692 852.23,683.692 852.789,683.692 853.348,683.692 853.908,683.692 854.467,683.692 855.026,683.692 855.585,683.692 856.145,683.692 856.704,683.692 857.263,683.692 857.822,683.692 858.382,683.692 858.941,683.692 859.5,683.692 860.059,683.692 860.619,683.692 861.178,683.692 861.737,683.692 862.296,683.692 862.856,683.692 863.415,683.692 863.974,683.692 864.533,683.692 865.093,683.692 865.652,683.692 866.211,683.692 866.77,683.692 867.33,683.692 867.889,683.692 868.448,683.692 869.007,683.692 869.567,683.692 870.126,683.692 870.685,683.692 871.244,683.692 871.804,683.692 872.363,683.692 872.922,683.692 873.481,683.692 874.041,683.692 874.6,683.692 875.159,683.692 875.718,683.692 876.278,683.692 876.837,683.692 877.396,683.692 877.955,683.692 878.515,683.692 879.074,683.692 879.633,683.692 880.192,683.692 880.752,683.692 881.311,683.692 881.87,683.692 882.429,683.692 882.989,683.692 883.548,683.692 884.107,683.692 884.666,683.692 885.226,683.692 885.785,683.692 886.344,683.692 886.903,683.692 887.463,683.692 888.022,683.692 888.581,683.692 889.14,683.692 889.7,683.692 890.259,683.692 890.818,683.692 891.377,683.692 891.937,683.692 892.496,683.692 893.055,683.692 893.614,683.692 894.174,683.692 894.733,683.692 895.292,683.692 895.851,683.692 896.411,683.692 896.97,683.692 897.529,683.692 898.088,683.692 898.648,683.692 899.207,683.692 899.766,683.692 900.325,683.692 900.885,683.692 901.444,683.692 902.003,683.692 902.562,683.692 903.122,683.692 903.681,683.692 904.24,683.692 904.799,683.692 905.359,683.692 905.918,683.692 906.477,683.692 907.036,683.692 907.596,683.692 908.155,683.692 908.714,683.692 909.273,683.692 909.833,683.692 910.392,683.692 910.951,683.692 911.51,683.692 912.07,683.692 912.629,683.692 913.188,683.692 913.747,683.692 914.307,683.692 914.866,683.692 915.425,683.692 915.984,683.692 916.544,683.692 917.103,683.692 917.662,683.692 918.221,683.692 918.781,683.692 919.34,683.692 919.899,683.692 920.458,683.692 921.018,683.692 921.577,683.692 922.136,683.692 922.695,683.692 923.255,683.692 923.814,683.692 924.373,683.692 924.932,683.692 925.492,683.692 926.051,683.692 926.61,683.692 927.169,683.692 927.729,683.692 928.288,683.692 928.847,683.692 929.406,683.692 929.966,683.692 930.525,683.692 931.084,683.692 931.644,683.692 932.203,683.692 932.762,683.692 933.321,683.692 933.881,683.692 934.44,683.692 934.999,683.692 935.558,683.692 936.118,683.692 936.677,683.692 937.236,683.692 937.795,683.692 938.355,683.692 938.914,683.692 939.473,683.692 940.032,683.692 940.592,683.692 941.151,683.692 941.71,683.692 942.269,683.692 942.829,683.692 943.388,683.692 943.947,683.692 944.506,683.692 945.066,683.692 945.625,683.692 946.184,683.692 946.743,683.692 947.303,683.692 947.862,683.692 948.421,683.692 948.98,683.692 949.54,683.692 950.099,683.692 950.658,683.692 951.217,683.692 951.777,683.692 952.336,683.692 952.895,683.692 953.454,683.692 954.014,683.692 954.573,683.692 955.132,683.692 955.691,683.692 956.251,683.692 956.81,683.692 957.369,683.692 957.928,683.692 958.488,683.692 959.047,683.692 959.606,683.692 960.165,683.692 960.725,683.692 961.284,683.692 961.843,683.692 962.402,683.692 962.962,683.692 963.521,683.692 964.08,683.692 964.639,683.692 965.199,683.692 965.758,683.692 966.317,683.692 966.876,683.692 967.436,683.692 967.995,683.692 968.554,683.692 969.113,683.692 969.673,683.692 970.232,683.692 970.791,683.692 971.35,683.692 971.91,683.692 972.469,683.692 973.028,683.692 973.587,683.692 974.147,683.692 974.706,683.692 975.265,683.692 975.824,683.692 976.384,683.692 976.943,683.692 977.502,683.692 978.061,683.692 978.621,683.692 979.18,683.692 979.739,683.692 980.298,683.692 980.858,683.692 981.417,683.692 981.976,683.692 982.535,683.692 983.095,683.692 983.654,683.692 984.213,683.692 984.772,683.692 985.332,683.692 985.891,683.692 986.45,683.692 987.009,683.692 987.569,683.692 988.128,683.692 988.687,683.692 989.246,683.692 989.806,683.692 990.365,683.692 990.924,683.692 991.483,683.692 992.043,683.692 992.602,683.692 993.161,683.692 993.72,683.692 994.28,683.692 994.839,683.692 995.398,683.692 995.957,683.692 996.517,683.692 997.076,683.692 997.635,683.692 998.194,683.692 998.754,683.692 999.313,683.692 999.872,683.692 1000.43,683.692 1000.99,683.692 1001.55,683.692 1002.11,683.692 1002.67,683.692 1003.23,683.692 1003.79,683.692 1004.35,683.692 1004.91,683.692 1005.46,683.692 1006.02,683.692 1006.58,683.692 1007.14,683.692 1007.7,683.692 1008.26,683.692 1008.82,683.692 1009.38,683.692 1009.94,683.692 1010.5,683.692 1011.06,683.692 1011.62,683.692 1012.18,683.692 1012.73,683.692 1013.29,683.692 1013.85,683.692 1014.41,683.692 1014.97,683.692 1015.53,683.692 1016.09,683.692 1016.65,683.692 1017.21,683.692 1017.77,683.692 1018.33,683.692 1018.89,683.692 1019.45,683.692 1020.01,683.692 1020.56,683.692 1021.12,683.692 1021.68,683.692 1022.24,683.692 1022.8,683.692 1023.36,683.692 1023.92,683.692 1024.48,683.692 1025.04,683.692 1025.6,683.692 1026.16,683.692 1026.72,683.692 1027.28,683.692 1027.83,683.692 1028.39,683.692 1028.95,683.692 1029.51,683.692 1030.07,683.692 1030.63,683.692 1031.19,683.692 1031.75,683.692 1032.31,683.692 1032.87,683.692 1033.43,683.692 1033.99,683.692 1034.55,683.692 1035.1,683.692 1035.66,683.692 1036.22,683.692 1036.78,683.692 1037.34,683.692 1037.9,683.692 1038.46,683.692 1039.02,683.692 1039.58,683.692 1040.14,683.692 1040.7,683.692 1041.26,683.692 1041.82,683.692 1042.38,683.692 1042.93,683.692 1043.49,683.692 1044.05,683.692 1044.61,683.692 1045.17,683.692 1045.73,683.692 1046.29,683.692 1046.85,683.692 1047.41,683.692 1047.97,683.692 1048.53,683.692 1049.09,683.692 1049.65,683.692 1050.2,683.692 1050.76,683.692 1051.32,683.692 1051.88,683.692 1052.44,683.692 1053,683.692 1053.56,683.692 1054.12,683.692 1054.68,683.692 1055.24,683.692 1055.8,683.692 1056.36,683.692 1056.92,683.692 1057.48,683.692 1058.03,683.692 1058.59,683.692 1059.15,683.692 1059.71,683.692 1060.27,683.692 1060.83,683.692 1061.39,683.692 1061.95,683.692 1062.51,683.692 1063.07,683.692 1063.63,683.692 1064.19,683.692 1064.75,683.692 1065.3,683.692 1065.86,683.692 1066.42,683.692 1066.98,683.692 1067.54,683.692 1068.1,683.692 1068.66,683.692 1069.22,683.692 1069.78,683.692 1070.34,683.692 1070.9,683.692 1071.46,683.692 1072.02,683.692 1072.57,683.692 1073.13,683.692 1073.69,683.692 1074.25,683.692 1074.81,683.692 1075.37,683.692 1075.93,683.692 1076.49,683.692 1077.05,683.692 1077.61,683.692 1078.17,683.692 1078.73,683.692 1079.29,683.692 1079.85,683.692 1080.4,683.692 1080.96,683.692 1081.52,683.692 1082.08,683.692 1082.64,683.692 1083.2,683.692 1083.76,683.692 1084.32,683.692 1084.88,683.692 1085.44,683.692 1086,683.692 1086.56,683.692 1087.12,683.692 1087.67,683.692 1088.23,683.692 1088.79,683.692 1089.35,683.692 1089.91,683.692 1090.47,683.692 1091.03,683.692 1091.59,683.692 1092.15,683.692 1092.71,683.692 1093.27,683.692 1093.83,683.692 1094.39,683.692 1094.94,683.692 1095.5,683.692 1096.06,683.692 1096.62,683.692 1097.18,683.692 1097.74,683.692 1098.3,683.692 1098.86,683.692 1099.42,683.692 1099.98,683.692 1100.54,683.692 1101.1,683.692 1101.66,683.692 1102.22,683.692 1102.77,683.692 1103.33,683.692 1103.89,683.692 1104.45,683.692 1105.01,683.692 1105.57,683.692 1106.13,683.692 1106.69,683.692 1107.25,683.692 1107.81,683.692 1108.37,683.692 1108.93,683.692 1109.49,683.692 1110.04,683.692 1110.6,683.692 1111.16,683.692 1111.72,683.692 1112.28,683.692 1112.84,683.692 1113.4,683.692 1113.96,683.692 1114.52,683.692 1115.08,683.692 1115.64,683.692 1116.2,683.692 1116.76,683.692 1117.31,683.692 1117.87,683.692 1118.43,683.692 1118.99,683.692 1119.55,683.692 1120.11,683.692 1120.67,683.692 1121.23,683.692 1121.79,683.692 1122.35,683.692 1122.91,683.692 1123.47,683.692 1124.03,683.692 1124.59,683.692 1125.14,683.692 1125.7,683.692 1126.26,683.692 1126.82,683.692 1127.38,683.692 1127.94,683.692 1128.5,683.692 1129.06,683.692 1129.62,683.692 1130.18,683.692 1130.74,683.692 1131.3,683.692 1131.86,683.692 1132.41,683.692 1132.97,683.692 1133.53,683.692 1134.09,683.692 1134.65,683.692 1135.21,683.692 1135.77,683.692 1136.33,683.692 1136.89,683.692 1137.45,683.692 1138.01,683.692 1138.57,683.692 1139.13,683.692 1139.68,683.692 1140.24,683.692 1140.8,683.692 1141.36,683.692 1141.92,683.692 1142.48,683.692 1143.04,683.692 1143.6,683.692 1144.16,683.692 1144.72,683.692 1145.28,683.692 1145.84,683.692 1146.4,683.692 1146.96,683.692 1147.51,683.692 1148.07,683.692 1148.63,683.692 1149.19,683.692 1149.75,683.692 1150.31,683.692 1150.87,683.692 1151.43,683.692 1151.99,683.692 1152.55,683.692 1153.11,683.692 1153.67,683.692 1154.23,683.692 1154.78,683.692 1155.34,683.692 1155.9,683.692 1156.46,683.692 1157.02,683.692 1157.58,683.692 1158.14,683.692 1158.7,683.692 1159.26,683.692 1159.82,683.692 1160.38,683.692 1160.94,683.692 1161.5,683.692 1162.05,683.692 1162.61,683.692 1163.17,683.692 1163.73,683.692 1164.29,683.692 1164.85,683.692 1165.41,683.692 1165.97,683.692 1166.53,683.692 1167.09,683.692 1167.65,683.692 1168.21,683.692 1168.77,683.692 1169.33,683.692 1169.88,683.692 1170.44,683.692 1171,683.692 1171.56,683.692 1172.12,683.692 1172.68,683.692 1173.24,683.692 1173.8,683.692 1174.36,683.692 1174.92,683.692 1175.48,683.692 1176.04,683.692 1176.6,683.692 1177.15,683.692 1177.71,683.692 1178.27,683.692 1178.83,683.692 1179.39,683.692 1179.95,683.692 1180.51,683.692 1181.07,683.692 1181.63,683.692 1182.19,683.692 1182.75,683.692 1183.31,683.692 1183.87,683.692 1184.43,683.692 1184.98,683.692 1185.54,683.692 1186.1,683.692 1186.66,683.692 1187.22,683.692 1187.78,683.692 1188.34,683.692 1188.9,683.692 1189.46,683.692 1190.02,683.692 1190.58,683.692 1191.14,683.692 1191.7,683.692 1192.25,683.692 1192.81,683.692 1193.37,683.692 1193.93,683.692 1194.49,683.692 1195.05,683.692 1195.61,683.692 1196.17,683.692 1196.73,683.692 1197.29,683.692 1197.85,683.692 1198.41,683.692 1198.97,683.692 1199.52,683.692 1200.08,683.692 1200.64,683.692 1201.2,683.692 1201.76,683.692 1202.32,683.692 1202.88,683.692 1203.44,683.692 1204,683.692 1204.56,683.692 1205.12,683.692 1205.68,683.692 1206.24,683.692 1206.8,683.692 1207.35,683.692 1207.91,683.692 1208.47,683.692 1209.03,683.692 1209.59,683.692 1210.15,683.692 1210.71,683.692 1211.27,683.692 1211.83,683.692 1212.39,683.692 1212.95,683.692 1213.51,683.692 1214.07,683.692 1214.62,683.692 1215.18,683.692 1215.74,683.692 1216.3,683.692 1216.86,683.692 1217.42,683.692 1217.98,683.692 1218.54,683.692 1219.1,683.692 1219.66,683.692 1220.22,683.692 1220.78,683.692 1221.34,683.692 1221.89,683.692 1222.45,683.692 1223.01,683.692 1223.57,683.692 1224.13,683.692 1224.69,683.692 1225.25,683.692 1225.81,683.692 1226.37,683.692 1226.93,683.692 1227.49,683.692 1228.05,683.692 1228.61,683.692 1229.17,683.692 1229.72,683.692 1230.28,683.692 1230.84,683.692 1231.4,683.692 1231.96,683.692 1232.52,683.692 1233.08,683.692 1233.64,683.692 1234.2,683.692 1234.76,683.692 1235.32,683.692 1235.88,683.692 1236.44,683.692 1236.99,683.692 1237.55,683.692 1238.11,683.692 1238.67,683.692 1239.23,683.692 1239.79,683.692 1240.35,683.692 1240.91,683.692 1241.47,683.692 1242.03,683.692 1242.59,683.692 1243.15,683.692 1243.71,683.692 1244.26,683.692 1244.82,683.692 1245.38,683.692 1245.94,683.692 1246.5,683.692 1247.06,683.692 1247.62,683.692 1248.18,683.692 1248.74,683.692 1249.3,683.692 1249.86,683.692 1250.42,683.692 1250.98,683.692 1251.54,683.692 1252.09,683.692 1252.65,683.692 1253.21,683.692 1253.77,683.692 1254.33,683.692 1254.89,683.692 1255.45,683.692 1256.01,683.692 1256.57,683.692 1257.13,683.692 1257.69,683.692 1258.25,683.692 1258.81,683.692 1259.36,683.692 1259.92,683.692 1260.48,683.692 1261.04,683.692 1261.6,683.692 1262.16,683.692 1262.72,683.692 1263.28,683.692 1263.84,683.692 1264.4,683.692 1264.96,683.692 1265.52,683.692 1266.08,683.692 1266.63,683.692 1267.19,683.692 1267.75,683.692 1268.31,683.692 1268.87,683.692 1269.43,683.692 1269.99,683.692 1270.55,683.692 1271.11,683.692 1271.67,683.692 1272.23,683.692 1272.79,683.692 1273.35,683.692 1273.91,683.692 1274.46,683.692 1275.02,683.692 1275.58,683.692 1276.14,683.692 1276.7,683.692 1277.26,683.692 1277.82,683.692 1278.38,683.692 1278.94,683.692 1279.5,683.692 1280.06,683.692 1280.62,683.692 1281.18,683.692 1281.73,683.692 1282.29,683.692 1282.85,683.692 1283.41,683.692 1283.97,683.692 1284.53,683.692 1285.09,683.692 1285.65,683.692 1286.21,683.692 1286.77,683.692 1287.33,683.692 1287.89,683.692 1288.45,683.692 1289,683.692 1289.56,683.692 1290.12,683.692 1290.68,683.692 1291.24,683.692 1291.8,683.692 1292.36,683.692 1292.92,683.692 1293.48,683.692 1294.04,683.692 1294.6,683.692 1295.16,683.692 1295.72,683.692 1296.28,683.692 1296.83,683.692 1297.39,683.692 1297.95,683.692 1298.51,683.692 1299.07,683.692 1299.63,683.692 1300.19,683.692 1300.75,683.692 1301.31,683.692 1301.87,683.692 1302.43,683.692 1302.99,683.692 1303.55,683.692 1304.1,683.692 1304.66,683.692 1305.22,683.692 1305.78,683.692 1306.34,683.692 1306.9,683.692 1307.46,683.692 1308.02,683.692 1308.58,683.692 1309.14,683.692 1309.7,683.692 1310.26,683.692 1310.82,683.692 1311.38,683.692 1311.93,683.692 1312.49,683.692 1313.05,683.692 1313.61,683.692 1314.17,683.692 1314.73,683.692 1315.29,683.692 1315.85,683.692 1316.41,683.692 1316.97,683.692 1317.53,683.692 1318.09,683.692 1318.65,683.692 1319.2,683.692 1319.76,683.692 1320.32,683.692 1320.88,683.692 1321.44,683.692 1322,683.692 1322.56,683.692 1323.12,683.692 1323.68,683.692 1324.24,683.692 1324.8,683.692 1325.36,683.692 1325.92,683.692 1326.47,683.692 1327.03,683.692 1327.59,683.692 1328.15,683.692 1328.71,683.692 1329.27,683.692 1329.83,683.692 1330.39,683.692 1330.95,683.692 1331.51,683.692 1332.07,683.692 1332.63,683.692 1333.19,683.692 1333.75,683.692 1334.3,683.692 1334.86,683.692 1335.42,683.692 1335.98,683.692 1336.54,683.692 1337.1,683.692 1337.66,683.692 1338.22,683.692 1338.78,683.692 1339.34,683.692 1339.9,683.692 1340.46,683.692 1341.02,683.692 1341.57,683.692 1342.13,683.692 1342.69,683.692 1343.25,683.692 1343.81,683.692 1344.37,683.692 1344.93,683.692 1345.49,683.692 1346.05,683.692 1346.61,683.692 1347.17,683.692 1347.73,683.692 1348.29,683.692 1348.84,683.692 1349.4,683.692 1349.96,683.692 1350.52,683.692 1351.08,683.692 1351.64,683.692 1352.2,683.692 1352.76,683.692 1353.32,683.692 1353.88,683.692 1354.44,683.692 1355,683.692 1355.56,683.692 1356.12,683.692 1356.67,683.692 1357.23,683.692 1357.79,683.692 1358.35,683.692 1358.91,683.692 1359.47,683.692 1360.03,683.692 1360.59,683.692 1361.15,683.692 1361.71,683.692 1362.27,683.692 1362.83,683.692 1363.39,683.692 1363.94,683.692 1364.5,683.692 1365.06,683.692 1365.62,683.692 1366.18,683.692 1366.74,683.692 1367.3,683.692 1367.86,683.692 1368.42,683.692 1368.98,683.692 1369.54,683.692 1370.1,683.692 1370.66,683.692 1371.21,683.692 1371.77,683.692 1372.33,683.692 1372.89,683.692 1373.45,683.692 1374.01,683.692 1374.57,683.692 1375.13,683.692 1375.69,683.692 1376.25,683.692 1376.81,683.692 1377.37,683.692 1377.93,683.692 1378.49,683.692 1379.04,683.692 1379.6,683.692 1380.16,683.692 1380.72,683.692 1381.28,683.692 1381.84,683.692 1382.4,683.692 1382.96,683.692 1383.52,683.692 1384.08,683.692 1384.64,683.692 1385.2,683.692 1385.76,683.692 1386.31,683.692 1386.87,683.692 1387.43,683.692 1387.99,683.692 1388.55,683.692 1389.11,683.692 1389.67,683.692 1390.23,683.692 1390.79,683.692 1391.35,683.692 1391.91,683.692 1392.47,683.692 1393.03,683.692 1393.58,683.692 1394.14,683.692 1394.7,683.692 1395.26,683.692 1395.82,683.692 1396.38,683.692 1396.94,683.692 1397.5,683.692 1398.06,683.692 1398.62,683.692 1399.18,683.692 1399.74,683.692 1400.3,683.692 1400.86,683.692 1401.41,683.692 1401.97,683.692 1402.53,683.692 1403.09,683.692 1403.65,683.692 1404.21,683.692 1404.77,683.692 1405.33,683.692 1405.89,683.692 1406.45,683.692 1407.01,683.692 1407.57,683.692 1408.13,683.692 1408.68,683.692 1409.24,683.692 1409.8,683.692 1410.36,683.692 1410.92,683.692 1411.48,683.692 1412.04,683.692 1412.6,683.692 1413.16,683.692 1413.72,683.692 1414.28,683.692 1414.84,683.692 1415.4,683.692 1415.95,683.692 1416.51,683.692 1417.07,683.692 1417.63,683.692 1418.19,683.692 1418.75,683.692 1419.31,683.692 1419.87,683.692 1420.43,683.692 1420.99,683.692 1421.55,683.692 1422.11,683.692 1422.67,683.692 1423.23,683.692 1423.78,683.692 1424.34,683.692 1424.9,683.692 1425.46,683.692 1426.02,683.692 1426.58,683.692 1427.14,683.692 1427.7,683.692 1428.26,683.692 1428.82,683.692 1429.38,683.692 1429.94,683.692 1430.5,683.692 1431.05,683.692 1431.61,683.692 1432.17,683.692 1432.73,683.692 1433.29,683.692 1433.85,683.692 1434.41,683.692 1434.97,683.692 1435.53,683.692 1436.09,683.692 1436.65,683.692 1437.21,683.692 1437.77,683.692 1438.33,683.692 1438.88,683.692 1439.44,683.692 1440,683.692 1440.56,683.692 1441.12,683.692 1441.68,683.692 1442.24,683.692 1442.8,683.692 1443.36,683.692 1443.92,683.692 1444.48,683.692 1445.04,683.692 1445.6,683.692 1446.15,683.692 1446.71,683.692 1447.27,683.692 1447.83,683.692 1448.39,683.692 1448.95,683.692 1449.51,683.692 1450.07,683.692 1450.63,683.692 1451.19,683.692 1451.75,683.692 1452.31,683.692 1452.87,683.692 1453.42,683.692 1453.98,683.692 1454.54,683.692 1455.1,683.692 1455.66,683.692 1456.22,683.692 1456.78,683.692 1457.34,683.692 1457.9,683.692 1458.46,683.692 1459.02,683.692 1459.58,683.692 1460.14,683.692 1460.7,683.692 1461.25,683.692 1461.81,683.692 1462.37,683.692 1462.93,683.692 1463.49,683.692 1464.05,683.692 1464.61,683.692 1465.17,683.692 1465.73,683.692 1466.29,683.692 1466.85,683.692 1467.41,683.692 1467.97,683.692 1468.52,683.692 1469.08,683.692 1469.64,683.692 1470.2,683.692 1470.76,683.692 1471.32,683.692 1471.88,683.692 1472.44,683.692 1473,683.692 1473.56,683.692 1474.12,683.692 1474.68,683.692 1475.24,683.692 1475.79,683.692 1476.35,683.692 1476.91,683.692 1477.47,683.692 1478.03,683.692 1478.59,683.692 1479.15,683.692 1479.71,683.692 1480.27,683.692 1480.83,683.692 1481.39,683.692 1481.95,683.692 1482.51,683.692 1483.07,683.692 1483.62,683.692 1484.18,683.692 1484.74,683.692 1485.3,683.692 1485.86,683.692 1486.42,683.692 1486.98,683.692 1487.54,683.692 1488.1,683.692 1488.66,683.692 1489.22,683.692 1489.78,683.692 1490.34,683.692 1490.89,683.692 1491.45,683.692 1492.01,683.692 1492.57,683.692 1493.13,683.692 1493.69,683.692 1494.25,683.692 1494.81,683.692 1495.37,683.692 1495.93,683.692 1496.49,683.692 1497.05,683.692 1497.61,683.692 1498.16,683.692 1498.72,683.692 1499.28,683.692 1499.84,683.692 1500.4,683.692 1500.96,683.692 1501.52,683.692 1502.08,683.692 1502.64,683.692 1503.2,683.692 1503.76,683.692 1504.32,683.692 1504.88,683.692 1505.44,683.692 1505.99,683.692 1506.55,683.692 1507.11,683.692 1507.67,683.692 1508.23,683.692 1508.79,683.692 1509.35,683.692 1509.91,683.692 1510.47,683.692 1511.03,683.692 1511.59,683.692 1512.15,683.692 1512.71,683.692 1513.26,683.692 1513.82,683.692 1514.38,683.692 1514.94,683.692 1515.5,683.692 1516.06,683.692 1516.62,683.692 1517.18,683.692 1517.74,683.692 1518.3,683.692 1518.86,683.692 1519.42,683.692 1519.98,683.692 1520.53,683.692 1521.09,683.692 1521.65,683.692 1522.21,683.692 1522.77,683.692 1523.33,683.692 1523.89,683.692 1524.45,683.692 1525.01,683.692 1525.57,683.692 1526.13,683.692 1526.69,683.692 1527.25,683.692 1527.81,683.692 1528.36,683.692 1528.92,683.692 1529.48,683.692 1530.04,683.692 1530.6,683.692 1531.16,683.692 1531.72,683.692 1532.28,683.692 1532.84,683.692 1533.4,683.692 1533.96,683.692 1534.52,683.692 1535.08,683.692 1535.63,683.692 1536.19,683.692 1536.75,683.692 1537.31,683.692 1537.87,683.692 1538.43,683.692 1538.99,683.692 1539.55,683.692 1540.11,683.692 1540.67,683.692 1541.23,683.692 1541.79,683.692 1542.35,683.692 1542.9,683.692 1543.46,683.692 1544.02,683.692 1544.58,683.692 1545.14,683.692 1545.7,683.692 1546.26,683.692 1546.82,683.692 1547.38,683.692 1547.94,683.692 1548.5,683.692 1549.06,683.692 1549.62,683.692 1550.18,683.692 1550.73,683.692 1551.29,683.692 1551.85,683.692 1552.41,683.692 1552.97,683.692 1553.53,683.692 1554.09,683.692 1554.65,683.692 1555.21,683.692 1555.77,683.692 1556.33,683.692 1556.89,683.692 1557.45,683.692 1558,683.692 1558.56,683.692 1559.12,683.692 1559.68,683.692 1560.24,683.692 1560.8,683.692 1561.36,683.692 1561.92,683.692 1562.48,683.692 1563.04,683.692 1563.6,683.692 1564.16,683.692 1564.72,683.692 1565.28,683.692 1565.83,683.692 1566.39,683.692 1566.95,683.692 1567.51,683.692 1568.07,683.692 1568.63,683.692 1569.19,683.692 1569.75,683.692 1570.31,683.692 1570.87,683.692 1571.43,683.692 1571.99,683.692 1572.55,683.692 1573.1,683.692 1573.66,683.692 1574.22,683.692 1574.78,683.692 1575.34,683.692 1575.9,683.692 1576.46,683.692 1577.02,683.692 1577.58,683.692 1578.14,683.692 1578.7,683.692 1579.26,683.692 1579.82,683.692 1580.37,683.692 1580.93,683.692 1581.49,683.692 1582.05,683.692 1582.61,683.692 1583.17,683.692 1583.73,683.692 1584.29,683.692 1584.85,683.692 1585.41,683.692 1585.97,683.692 1586.53,683.692 1587.09,683.692 1587.65,683.692 1588.2,683.692 1588.76,683.692 1589.32,683.692 1589.88,683.692 1590.44,683.692 1591,683.692 1591.56,683.692 1592.12,683.692 1592.68,683.692 1593.24,683.692 1593.8,683.692 1594.36,683.692 1594.92,683.692 1595.47,683.692 1596.03,683.692 1596.59,683.692 1597.15,683.692 1597.71,683.692 1598.27,683.692 1598.83,683.692 1599.39,683.692 1599.95,683.692 1600.51,683.692 1601.07,683.692 1601.63,683.692 1602.19,683.692 1602.74,683.692 1603.3,683.692 1603.86,683.692 1604.42,683.692 1604.98,683.692 1605.54,683.692 1606.1,683.692 1606.66,683.692 1607.22,683.692 1607.78,683.692 1608.34,683.692 1608.9,683.692 1609.46,683.692 1610.02,683.692 1610.57,683.692 1611.13,683.692 1611.69,683.692 1612.25,683.692 1612.81,683.692 1613.37,683.692 1613.93,683.692 1614.49,683.692 1615.05,683.692 1615.61,683.692 1616.17,683.692 1616.73,683.692 1617.29,683.692 1617.84,683.692 1618.4,683.692 1618.96,683.692 1619.52,683.692 1620.08,683.692 1620.64,683.692 1621.2,683.692 1621.76,683.692 1622.32,683.692 1622.88,683.692 1623.44,683.692 1624,683.692 1624.56,683.692 1625.11,683.692 1625.67,683.692 1626.23,683.692 1626.79,683.692 1627.35,683.692 1627.91,683.692 1628.47,683.692 1629.03,683.692 1629.59,683.692 1630.15,683.692 1630.71,683.692 1631.27,683.692 1631.83,683.692 1632.39,683.692 1632.94,683.692 1633.5,683.692 1634.06,683.692 1634.62,683.692 1635.18,683.692 1635.74,683.692 1636.3,683.692 1636.86,683.692 1637.42,683.692 1637.98,683.692 1638.54,683.692 1639.1,683.692 1639.66,683.692 1640.21,683.692 1640.77,683.692 1641.33,683.692 1641.89,683.692 1642.45,683.692 1643.01,683.692 1643.57,683.692 1644.13,683.692 1644.69,683.692 1645.25,683.692 1645.81,683.692 1646.37,683.692 1646.93,683.692 1647.48,683.692 1648.04,683.692 1648.6,683.692 1649.16,683.692 1649.72,683.692 1650.28,683.692 1650.84,683.692 1651.4,683.692 1651.96,683.692 1652.52,683.692 1653.08,683.692 1653.64,683.692 1654.2,683.692 1654.76,683.692 1655.31,683.692 1655.87,683.692 1656.43,683.692 1656.99,683.692 1657.55,683.692 1658.11,683.692 1658.67,683.692 1659.23,683.692 1659.79,683.692 1660.35,683.692 1660.91,683.692 1661.47,683.692 1662.03,683.692 1662.58,683.692 1663.14,683.692 1663.7,683.692 1664.26,683.692 1664.82,683.692 1665.38,683.692 1665.94,683.692 1666.5,683.692 1667.06,683.692 1667.62,683.692 1668.18,683.692 1668.74,683.692 1669.3,683.692 1669.85,683.692 1670.41,683.692 1670.97,683.692 1671.53,683.692 1672.09,683.692 1672.65,683.692 1673.21,683.692 1673.77,683.692 1674.33,683.692 1674.89,683.692 1675.45,683.692 1676.01,683.692 1676.57,683.692 1677.13,683.692 1677.68,683.692 1678.24,683.692 1678.8,683.692 1679.36,683.692 1679.92,683.692 1680.48,683.692 1681.04,683.692 1681.6,683.692 1682.16,683.692 1682.72,683.692 1683.28,683.692 1683.84,683.692 1684.4,683.692 1684.95,683.692 1685.51,683.692 1686.07,683.692 1686.63,683.692 1687.19,683.692 1687.75,683.692 1688.31,683.692 1688.87,683.692 1689.43,683.692 1689.99,683.692 1690.55,683.692 1691.11,683.692 1691.67,683.692 1692.23,683.692 1692.78,683.692 1693.34,683.692 1693.9,683.692 1694.46,683.692 1695.02,683.692 1695.58,683.692 1696.14,683.692 1696.7,683.692 1697.26,683.692 1697.82,683.692 1698.38,683.692 1698.94,683.692 1699.5,683.692 1700.05,683.692 1700.61,683.692 1701.17,683.692 1701.73,683.692 1702.29,683.692 1702.85,683.692 1703.41,683.692 1703.97,683.692 1704.53,683.692 1705.09,683.692 1705.65,683.692 1706.21,683.692 1706.77,683.692 1707.32,683.692 1707.88,683.692 1708.44,683.692 1709,683.692 1709.56,683.692 1710.12,683.692 1710.68,683.692 1711.24,683.692 1711.8,683.692 1712.36,683.692 1712.92,683.692 1713.48,683.692 1714.04,683.692 1714.6,683.692 1715.15,683.692 1715.71,683.692 1716.27,683.692 1716.83,683.692 1717.39,683.692 1717.95,683.692 1718.51,683.692 1719.07,683.692 1719.63,683.692 1720.19,683.692 1720.75,683.692 1721.31,683.692 1721.87,683.692 1722.42,683.692 1722.98,683.692 1723.54,683.692 1724.1,683.692 1724.66,683.692 1725.22,683.692 1725.78,683.692 1726.34,683.692 1726.9,683.692 1727.46,683.692 1728.02,683.692 1728.58,683.692 1729.14,683.692 1729.69,683.692 1730.25,683.692 1730.81,683.692 1731.37,683.692 1731.93,683.692 1732.49,683.692 1733.05,683.692 1733.61,683.692 1734.17,683.692 1734.73,683.692 1735.29,683.692 1735.85,683.692 1736.41,683.692 1736.97,683.692 1737.52,683.692 1738.08,683.692 1738.64,683.692 1739.2,683.692 1739.76,683.692 1740.32,683.692 1740.88,683.692 1741.44,683.692 1742,683.692 1742.56,683.692 1743.12,683.692 1743.68,683.692 1744.24,683.692 1744.79,683.692 1745.35,683.692 1745.91,683.692 1746.47,683.692 1747.03,683.692 1747.59,683.692 1748.15,683.692 1748.71,683.692 1749.27,683.692 1749.83,683.692 1750.39,683.692 1750.95,683.692 1751.51,683.692 1752.06,683.692 1752.62,683.692 1753.18,683.692 1753.74,683.692 1754.3,683.692 1754.86,683.692 1755.42,683.692 1755.98,683.692 1756.54,683.692 1757.1,683.692 1757.66,683.692 1758.22,683.692 1758.78,683.692 1759.34,683.692 1759.89,683.692 1760.45,683.692 1761.01,683.692 1761.57,683.692 1762.13,683.692 1762.69,683.692 1763.25,683.692 1763.81,683.692 1764.37,683.692 1764.93,683.692 1765.49,683.692 1766.05,683.692 1766.61,683.692 1767.16,683.692 1767.72,683.692 1768.28,683.692 1768.84,683.692 1769.4,683.692 1769.96,683.692 1770.52,683.692 1771.08,683.692 1771.64,683.692 1772.2,683.692 1772.76,683.692 1773.32,683.692 1773.88,683.692 1774.43,683.692 1774.99,683.692 1775.55,683.692 1776.11,683.692 1776.67,683.692 1777.23,683.692 1777.79,683.692 1778.35,683.692 1778.91,683.692 1779.47,683.692 1780.03,683.692 1780.59,683.692 1781.15,683.692 1781.71,683.692 1782.26,683.692 1782.82,683.692 1783.38,683.692 1783.94,683.692 1784.5,683.692 1785.06,683.692 1785.62,683.692 1786.18,683.692 1786.74,683.692 1787.3,683.692 1787.86,683.692 1788.42,683.692 1788.98,683.692 1789.53,683.692 1790.09,683.692 1790.65,683.692 1791.21,683.692 1791.77,683.692 1792.33,683.692 1792.89,683.692 1793.45,683.692 1794.01,683.692 1794.57,683.692 1795.13,683.692 1795.69,683.692 1796.25,683.692 1796.8,683.692 1797.36,683.692 1797.92,683.692 1798.48,683.692 1799.04,683.692 1799.6,683.692 1800.16,683.692 1800.72,683.692 1801.28,683.692 1801.84,683.692 1802.4,683.692 1802.96,683.692 1803.52,683.692 1804.08,683.692 1804.63,683.692 1805.19,683.692 1805.75,683.692 1806.31,683.692 1806.87,683.692 1807.43,683.692 1807.99,683.692 1808.55,683.692 1809.11,683.692 1809.67,683.692 1810.23,683.692 1810.79,683.692 1811.35,683.692 1811.9,683.692 1812.46,683.692 1813.02,683.692 1813.58,683.692 1814.14,683.692 1814.7,683.692 1815.26,683.692 1815.82,683.692 1816.38,683.692 1816.94,683.692 1817.5,683.692 1818.06,683.692 1818.62,683.692 1819.18,683.692 1819.73,683.692 1820.29,683.692 1820.85,683.692 1821.41,683.692 1821.97,683.692 1822.53,683.692 1823.09,683.692 1823.65,683.692 1824.21,683.692 1824.77,683.692 1825.33,683.692 1825.89,683.692 1826.45,683.692 1827,683.692 1827.56,683.692 1828.12,683.692 1828.68,683.692 1829.24,683.692 1829.8,683.692 1830.36,683.692 1830.92,683.692 1831.48,683.692 1832.04,683.692 1832.6,683.692 1833.16,683.692 1833.72,683.692 1834.27,683.692 1834.83,683.692 1835.39,683.692 1835.95,683.692 1836.51,683.692 1837.07,683.692 1837.63,683.692 1838.19,683.692 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.018326914624918 ± 0.027247913865215787\nProjected Energy: -4.015626963130492 ± (0.0025660889848770907, 0.0028042579829259395)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.691618</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4688e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.3635e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.187e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.183e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.635e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.616e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{HARDWALL}, Tuple{PITWISTED}, Tuple{SingleComponentFockAddress, Any, Val{PITWISTED}, Val{HARDWALL}}} where {PITWISTED, HARDWALL}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(pitwisted), Val(hard-wall))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic, pi-twisted and hard-wall.\nShow pi-twisted when pitwested=true and hard-wall=false and vice-versa for hard-wall else periodic\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(true),Val(false))\n(BoseFS{2,4}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(false),Val(true))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
