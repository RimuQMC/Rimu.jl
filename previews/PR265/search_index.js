var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip360\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip360)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip361\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip360)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip362\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.84 2211.02,1260.84 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.09 2211.02,1003.09 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.341 2211.02,745.341 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.592 2211.02,487.592 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.843 2211.02,229.843 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.84 423.181,1260.84 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.09 423.181,1003.09 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.341 423.181,745.341 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.592 423.181,487.592 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.843 423.181,229.843 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M356.339 1246.64 Q352.728 1246.64 350.899 1250.2 Q349.094 1253.74 349.094 1260.87 Q349.094 1267.98 350.899 1271.54 Q352.728 1275.09 356.339 1275.09 Q359.973 1275.09 361.779 1271.54 Q363.608 1267.98 363.608 1260.87 Q363.608 1253.74 361.779 1250.2 Q359.973 1246.64 356.339 1246.64 M356.339 1242.93 Q362.149 1242.93 365.205 1247.54 Q368.284 1252.12 368.284 1260.87 Q368.284 1269.6 365.205 1274.21 Q362.149 1278.79 356.339 1278.79 Q350.529 1278.79 347.45 1274.21 Q344.395 1269.6 344.395 1260.87 Q344.395 1252.12 347.45 1247.54 Q350.529 1242.93 356.339 1242.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M290.043 1016.43 L306.363 1016.43 L306.363 1020.37 L284.418 1020.37 L284.418 1016.43 Q287.08 1013.68 291.664 1009.05 Q296.27 1004.4 297.451 1003.05 Q299.696 1000.53 300.576 998.796 Q301.478 997.036 301.478 995.347 Q301.478 992.592 299.534 990.856 Q297.613 989.12 294.511 989.12 Q292.312 989.12 289.858 989.884 Q287.427 990.648 284.65 992.199 L284.65 987.476 Q287.474 986.342 289.927 985.763 Q292.381 985.185 294.418 985.185 Q299.789 985.185 302.983 987.87 Q306.177 990.555 306.177 995.046 Q306.177 997.175 305.367 999.097 Q304.58 1000.99 302.474 1003.59 Q301.895 1004.26 298.793 1007.48 Q295.691 1010.67 290.043 1016.43 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M316.224 985.81 L334.58 985.81 L334.58 989.745 L320.506 989.745 L320.506 998.217 Q321.524 997.87 322.543 997.708 Q323.562 997.523 324.58 997.523 Q330.367 997.523 333.747 1000.69 Q337.126 1003.87 337.126 1009.28 Q337.126 1014.86 333.654 1017.96 Q330.182 1021.04 323.862 1021.04 Q321.687 1021.04 319.418 1020.67 Q317.173 1020.3 314.765 1019.56 L314.765 1014.86 Q316.849 1015.99 319.071 1016.55 Q321.293 1017.11 323.77 1017.11 Q327.774 1017.11 330.112 1015 Q332.45 1012.89 332.45 1009.28 Q332.45 1005.67 330.112 1003.56 Q327.774 1001.46 323.77 1001.46 Q321.895 1001.46 320.02 1001.87 Q318.168 1002.29 316.224 1003.17 L316.224 985.81 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M356.339 988.888 Q352.728 988.888 350.899 992.453 Q349.094 995.995 349.094 1003.12 Q349.094 1010.23 350.899 1013.8 Q352.728 1017.34 356.339 1017.34 Q359.973 1017.34 361.779 1013.8 Q363.608 1010.23 363.608 1003.12 Q363.608 995.995 361.779 992.453 Q359.973 988.888 356.339 988.888 M356.339 985.185 Q362.149 985.185 365.205 989.791 Q368.284 994.374 368.284 1003.12 Q368.284 1011.85 365.205 1016.46 Q362.149 1021.04 356.339 1021.04 Q350.529 1021.04 347.45 1016.46 Q344.395 1011.85 344.395 1003.12 Q344.395 994.374 347.45 989.791 Q350.529 985.185 356.339 985.185 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M286.062 728.061 L304.418 728.061 L304.418 731.996 L290.344 731.996 L290.344 740.468 Q291.363 740.121 292.381 739.959 Q293.4 739.774 294.418 739.774 Q300.205 739.774 303.585 742.945 Q306.964 746.116 306.964 751.533 Q306.964 757.112 303.492 760.213 Q300.02 763.292 293.701 763.292 Q291.525 763.292 289.256 762.922 Q287.011 762.551 284.603 761.811 L284.603 757.112 Q286.687 758.246 288.909 758.801 Q291.131 759.357 293.608 759.357 Q297.613 759.357 299.951 757.25 Q302.288 755.144 302.288 751.533 Q302.288 747.922 299.951 745.815 Q297.613 743.709 293.608 743.709 Q291.733 743.709 289.858 744.126 Q288.006 744.542 286.062 745.422 L286.062 728.061 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M326.177 731.139 Q322.566 731.139 320.737 734.704 Q318.932 738.246 318.932 745.376 Q318.932 752.482 320.737 756.047 Q322.566 759.588 326.177 759.588 Q329.811 759.588 331.617 756.047 Q333.446 752.482 333.446 745.376 Q333.446 738.246 331.617 734.704 Q329.811 731.139 326.177 731.139 M326.177 727.436 Q331.987 727.436 335.043 732.042 Q338.122 736.626 338.122 745.376 Q338.122 754.102 335.043 758.709 Q331.987 763.292 326.177 763.292 Q320.367 763.292 317.288 758.709 Q314.233 754.102 314.233 745.376 Q314.233 736.626 317.288 732.042 Q320.367 727.436 326.177 727.436 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M356.339 731.139 Q352.728 731.139 350.899 734.704 Q349.094 738.246 349.094 745.376 Q349.094 752.482 350.899 756.047 Q352.728 759.588 356.339 759.588 Q359.973 759.588 361.779 756.047 Q363.608 752.482 363.608 745.376 Q363.608 738.246 361.779 734.704 Q359.973 731.139 356.339 731.139 M356.339 727.436 Q362.149 727.436 365.205 732.042 Q368.284 736.626 368.284 745.376 Q368.284 754.102 365.205 758.709 Q362.149 763.292 356.339 763.292 Q350.529 763.292 347.45 758.709 Q344.395 754.102 344.395 745.376 Q344.395 736.626 347.45 732.042 Q350.529 727.436 356.339 727.436 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M284.835 470.312 L307.057 470.312 L307.057 472.303 L294.511 504.872 L289.627 504.872 L301.432 474.247 L284.835 474.247 L284.835 470.312 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M316.224 470.312 L334.58 470.312 L334.58 474.247 L320.506 474.247 L320.506 482.719 Q321.524 482.372 322.543 482.21 Q323.562 482.025 324.58 482.025 Q330.367 482.025 333.747 485.196 Q337.126 488.367 337.126 493.784 Q337.126 499.363 333.654 502.465 Q330.182 505.543 323.862 505.543 Q321.687 505.543 319.418 505.173 Q317.173 504.803 314.765 504.062 L314.765 499.363 Q316.849 500.497 319.071 501.053 Q321.293 501.608 323.77 501.608 Q327.774 501.608 330.112 499.502 Q332.45 497.395 332.45 493.784 Q332.45 490.173 330.112 488.066 Q327.774 485.96 323.77 485.96 Q321.895 485.96 320.02 486.377 Q318.168 486.793 316.224 487.673 L316.224 470.312 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M356.339 473.391 Q352.728 473.391 350.899 476.955 Q349.094 480.497 349.094 487.627 Q349.094 494.733 350.899 498.298 Q352.728 501.84 356.339 501.84 Q359.973 501.84 361.779 498.298 Q363.608 494.733 363.608 487.627 Q363.608 480.497 361.779 476.955 Q359.973 473.391 356.339 473.391 M356.339 469.687 Q362.149 469.687 365.205 474.293 Q368.284 478.877 368.284 487.627 Q368.284 496.353 365.205 500.96 Q362.149 505.543 356.339 505.543 Q350.529 505.543 347.45 500.96 Q344.395 496.353 344.395 487.627 Q344.395 478.877 347.45 474.293 Q350.529 469.687 356.339 469.687 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M256.664 243.188 L264.303 243.188 L264.303 216.822 L255.992 218.489 L255.992 214.23 L264.256 212.563 L268.932 212.563 L268.932 243.188 L276.571 243.188 L276.571 247.123 L256.664 247.123 L256.664 243.188 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M296.015 215.642 Q292.404 215.642 290.576 219.207 Q288.77 222.748 288.77 229.878 Q288.77 236.984 290.576 240.549 Q292.404 244.091 296.015 244.091 Q299.65 244.091 301.455 240.549 Q303.284 236.984 303.284 229.878 Q303.284 222.748 301.455 219.207 Q299.65 215.642 296.015 215.642 M296.015 211.938 Q301.826 211.938 304.881 216.545 Q307.96 221.128 307.96 229.878 Q307.96 238.605 304.881 243.211 Q301.826 247.794 296.015 247.794 Q290.205 247.794 287.127 243.211 Q284.071 238.605 284.071 229.878 Q284.071 221.128 287.127 216.545 Q290.205 211.938 296.015 211.938 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M326.177 215.642 Q322.566 215.642 320.737 219.207 Q318.932 222.748 318.932 229.878 Q318.932 236.984 320.737 240.549 Q322.566 244.091 326.177 244.091 Q329.811 244.091 331.617 240.549 Q333.446 236.984 333.446 229.878 Q333.446 222.748 331.617 219.207 Q329.811 215.642 326.177 215.642 M326.177 211.938 Q331.987 211.938 335.043 216.545 Q338.122 221.128 338.122 229.878 Q338.122 238.605 335.043 243.211 Q331.987 247.794 326.177 247.794 Q320.367 247.794 317.288 243.211 Q314.233 238.605 314.233 229.878 Q314.233 221.128 317.288 216.545 Q320.367 211.938 326.177 211.938 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M356.339 215.642 Q352.728 215.642 350.899 219.207 Q349.094 222.748 349.094 229.878 Q349.094 236.984 350.899 240.549 Q352.728 244.091 356.339 244.091 Q359.973 244.091 361.779 240.549 Q363.608 236.984 363.608 229.878 Q363.608 222.748 361.779 219.207 Q359.973 215.642 356.339 215.642 M356.339 211.938 Q362.149 211.938 365.205 216.545 Q368.284 221.128 368.284 229.878 Q368.284 238.605 365.205 243.211 Q362.149 247.794 356.339 247.794 Q350.529 247.794 347.45 243.211 Q344.395 238.605 344.395 229.878 Q344.395 221.128 347.45 216.545 Q350.529 211.938 356.339 211.938 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip362)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.843 4017.76,229.843 \"/>\n<polyline clip-path=\"url(#clip362)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.58 459.964,1248.04 460.533,1245.37 461.101,1244.73 461.669,1244 462.238,1243.2 462.806,1241.29 463.375,1240.33 463.943,1239.27 464.511,1238.1 465.08,1236.83 465.648,1235.44 466.216,1231.89 466.785,1230.3 467.353,1228.61 467.921,1225.74 468.49,1223.76 469.058,1220.62 469.626,1218.33 470.195,1214.93 470.763,1212.36 471.331,1209.63 471.9,1205.7 472.468,1201.64 473.036,1197.33 473.605,1191.84 474.173,1188.13 474.741,1184.27 475.31,1180.28 475.878,1176.06 476.446,1171.67 477.015,1167.02 477.583,1160.08 478.152,1153.94 478.72,1147.54 479.288,1141.9 479.857,1136.11 480.425,1130.03 480.993,1122.67 481.562,1114.1 482.13,1107.37 482.698,1099.51 483.267,1091.3 483.835,1082.99 484.403,1075.63 484.972,1067.92 485.54,1060.11 486.108,1051.07 486.677,1042.84 487.245,1033.39 487.813,1024.94 488.382,1013.24 488.95,1002.51 489.518,991.674 490.087,979.815 490.655,968.958 491.224,958.005 491.792,947.113 492.36,938.172 492.929,925.039 493.497,914.995 494.065,903.792 494.634,890.663 495.202,879.501 495.77,864.605 496.339,853.778 496.907,843.088 497.475,834.383 498.044,824.721 498.612,813.103 499.18,804.687 499.749,793.88 500.317,784.265 500.885,772.804 501.454,762.487 502.022,752.043 502.59,742.927 503.159,732.673 503.727,724.462 504.295,716.373 504.864,708.222 505.432,695.008 506.001,687.071 506.569,679.133 507.137,671.267 507.706,662.399 508.274,651.471 508.842,642.877 509.411,635.243 509.979,625.652 510.547,614.026 511.116,608.943 511.684,599.64 512.252,591.712 512.821,585.687 513.389,577.778 513.957,566.855 514.526,559.204 515.094,552.838 515.662,546.64 516.231,540.396 516.799,534.093 517.367,525.824 517.936,520.995 518.504,517.141 519.072,509.057 519.641,503.197 520.209,497.323 520.778,491.54 521.346,483.569 521.914,474.906 522.483,466.787 523.051,460.896 523.619,458.311 524.188,448.217 524.756,441.71 525.324,436.501 525.893,431.252 526.461,426.207 527.029,421.12 527.598,416.129 528.166,409.349 528.734,405.784 529.303,402.484 529.871,397.997 530.439,393.43 531.008,387.32 531.576,385.271 532.144,380.245 532.713,376.474 533.281,371.754 533.85,366.078 534.418,363.686 534.986,361.206 535.555,357.848 536.123,353.507 536.691,349.2 537.26,343.215 537.828,338.314 538.396,333.663 538.965,330.314 539.533,327.354 540.101,324.18 540.67,323.234 541.238,322.126 541.806,322.143 542.375,321.765 542.943,319.354 543.511,315.059 544.08,313.173 544.648,312.219 545.216,311.201 545.785,310.318 546.353,308.183 546.921,304.012 547.49,303.369 548.058,301.603 548.627,300.725 549.195,299.017 549.763,298.186 550.332,297.331 550.9,294.429 551.468,291.6 552.037,291.179 552.605,289.581 553.173,288.042 553.742,285.623 554.31,286.366 554.878,283.637 555.447,282.223 556.015,280.661 556.583,279.352 557.152,278.073 557.72,277.807 558.288,278.274 558.857,278.976 559.425,278.645 559.993,278.171 560.562,277.744 561.13,275.273 561.698,277.031 562.267,276.628 562.835,275.082 563.404,273.409 563.972,272.934 564.54,272.592 565.109,271.885 565.677,269.245 566.245,266.794 566.814,267.777 567.382,269.579 567.95,268.329 568.519,267.889 569.087,268.482 569.655,266.875 570.224,266.419 570.792,266.013 571.36,263.327 571.929,263.06 572.497,262.684 573.065,262.416 573.634,258.899 574.202,257.443 574.77,256.61 575.339,253.601 575.907,254.996 576.476,255.994 577.044,255.95 577.612,254.832 578.181,259.993 578.749,259.59 579.317,259.951 579.886,261.443 580.454,259.781 581.022,258.289 581.591,258.837 582.159,257.465 582.727,254.971 583.296,254.877 583.864,254.325 584.432,254.924 585.001,254.289 585.569,253.901 586.137,253.482 586.706,250.97 587.274,249.674 587.842,251.267 588.411,248.038 588.979,249.098 589.547,249.037 590.116,248.671 590.684,249.704 591.253,250.558 591.821,253.546 592.389,253.083 592.958,250.536 593.526,249.123 594.094,248.758 594.663,245.446 595.231,245.533 595.799,246.56 596.368,244.316 596.936,243.069 597.504,242.186 598.073,241.192 598.641,240.252 599.209,239.366 599.778,237.583 600.346,237.928 600.914,238.201 601.483,239.506 602.051,240.669 602.619,243.283 603.188,242.105 603.756,238.139 604.325,239.46 604.893,238.899 605.461,238.219 606.03,238.542 606.598,239.86 607.166,241.032 607.735,241.226 608.303,243.165 608.871,243.082 609.44,244.013 610.008,242.982 610.576,240.893 611.145,239.942 611.713,237.957 612.281,236.269 612.85,235.519 613.418,236.816 613.986,236.946 614.555,238.159 615.123,237.41 615.691,235.438 616.26,235.772 616.828,237.027 617.396,238.341 617.965,237.348 618.533,237.507 619.102,236.841 619.67,238.05 620.238,240.359 620.807,242.468 621.375,243.231 621.943,242.959 622.512,243.976 623.08,243.659 623.648,244.009 624.217,238.679 624.785,238.733 625.353,238.625 625.922,238.489 626.49,237.778 627.058,237.772 627.627,237.913 628.195,236.195 628.763,233.488 629.332,236.099 629.9,236.415 630.468,235.324 631.037,234.69 631.605,234.007 632.173,232.555 632.742,232.052 633.31,231.562 633.879,230.177 634.447,229.782 635.015,231.561 635.584,233.209 636.152,232.779 636.72,232.304 637.289,233.763 637.857,233.071 638.425,233.363 638.994,233.702 639.562,235.068 640.13,235.327 640.699,235.57 641.267,234.673 641.835,236.134 642.404,236.331 642.972,237.461 643.54,237.727 644.109,238.69 644.677,238.424 645.245,238.156 645.814,238.035 646.382,238.003 646.951,237.795 647.519,236.769 648.087,239.251 648.656,237.268 649.224,237.173 649.792,236.916 650.361,238.92 650.929,236.952 651.497,235.933 652.066,238.059 652.634,237.939 653.202,236.911 653.771,235.928 654.339,236.036 654.907,234.88 655.476,235.001 656.044,232.232 656.612,231.506 657.181,233.677 657.749,233.635 658.317,233.901 658.886,236.327 659.454,236.462 660.022,232.255 660.591,231.542 661.159,232.93 661.728,231.049 662.296,233.381 662.864,237.706 663.433,237.955 664.001,235.921 664.569,235.979 665.138,238.124 665.706,240.019 666.274,238.61 666.843,239.599 667.411,239.507 667.979,241.234 668.548,239.818 669.116,234.275 669.684,234.321 670.253,236.318 670.821,235.345 671.389,234.201 671.958,236.281 672.526,235.109 673.094,237.477 673.663,237.379 674.231,239.504 674.799,238.282 675.368,237.023 675.936,238.892 676.505,238.542 677.073,238.133 677.641,237.571 678.21,235.242 678.778,236.247 679.346,236.072 679.915,233.792 680.483,233.847 681.051,233.919 681.62,235.065 682.188,234.958 682.756,234.918 683.325,233.641 683.893,232.392 684.461,233.31 685.03,234.305 685.598,237.268 686.166,236.916 686.735,237.73 687.303,239.535 687.871,238.086 688.44,236.587 689.008,235.324 689.577,236.139 690.145,235.91 690.713,232.504 691.282,232.464 691.85,233.788 692.418,234.75 692.987,234.196 693.555,233.972 694.123,233.884 694.692,233.948 695.26,235.92 695.828,235.571 696.397,231.929 696.965,234.113 697.533,234.043 698.102,232.864 698.67,232.893 699.238,233.108 699.807,233.154 700.375,232.084 700.943,230.051 701.512,228.293 702.08,227.534 702.648,227.948 703.217,228.342 703.785,229.462 704.354,228.555 704.922,228.938 705.49,227.09 706.059,226.439 706.627,226.69 707.195,228.183 707.764,228.607 708.332,229.96 708.9,230.109 709.469,231.104 710.037,230.315 710.605,228.586 711.174,228.08 711.742,228.367 712.31,229.662 712.879,228.922 713.447,230.005 714.015,229.203 714.584,231.545 715.152,231.647 715.72,230.77 716.289,229.868 716.857,229.128 717.425,228.58 717.994,228.249 718.562,229.652 719.131,228.88 719.699,229.162 720.267,230.281 720.836,227.415 721.404,227.794 721.972,229.067 722.541,228.399 723.109,225.589 723.677,226.208 724.246,229.797 724.814,231.034 725.382,231.399 725.951,231.525 726.519,231.804 727.087,232.083 727.656,229.944 728.224,230.307 728.792,227.586 729.361,227.953 729.929,228.381 730.497,229.77 731.066,233.14 731.634,231.966 732.203,233.768 732.771,235.929 733.339,237.975 733.908,237.571 734.476,236.283 735.044,233.001 735.613,232.05 736.181,232.271 736.749,232.313 737.318,231.3 737.886,230.595 738.454,229.641 739.023,230.994 739.591,231.339 740.159,229.507 740.728,228.873 741.296,228.237 741.864,230.705 742.433,230.888 743.001,230.005 743.569,230.202 744.138,230.448 744.706,228.583 745.274,227.961 745.843,228.267 746.411,227.378 746.98,228.819 747.548,229.127 748.116,229.394 748.685,228.555 749.253,230.844 749.821,231.113 750.39,232.238 750.958,231.386 751.526,232.535 752.095,231.456 752.663,232.622 753.231,232.714 753.8,231.785 754.368,232.012 754.936,233.307 755.505,230.074 756.073,229.276 756.641,229.377 757.21,231.438 757.778,232.618 758.346,232.729 758.915,231.606 759.483,231.807 760.052,231.011 760.62,231.196 761.188,231.421 761.757,232.358 762.325,232.276 762.893,234.29 763.462,236.295 764.03,234.95 764.598,235.801 765.167,236.611 765.735,237.371 766.303,234.989 766.872,235.14 767.44,231.71 768.008,232.895 768.577,230.986 769.145,230.11 769.713,230.247 770.282,232.172 770.85,233.209 771.418,234.117 771.987,230.82 772.555,233.073 773.123,232.971 773.692,233.929 774.26,235.02 774.829,232.714 775.397,232.744 775.965,232.678 776.534,231.743 777.102,231.701 777.67,229.839 778.239,229.857 778.807,228.998 779.375,229.071 779.944,229.209 780.512,228.459 781.08,227.543 781.649,231.844 782.217,231.816 782.785,233.807 783.354,232.552 783.922,234.392 784.49,233.206 785.059,233.996 785.627,231.86 786.195,231.494 786.764,231.284 787.332,231.377 787.9,231.4 788.469,230.498 789.037,230.699 789.606,227.671 790.174,227.922 790.742,228.052 791.311,229.346 791.879,228.472 792.447,228.826 793.016,228.927 793.584,228.168 794.152,230.573 794.721,230.705 795.289,231.879 795.857,231.785 796.426,231.647 796.994,232.76 797.562,230.655 798.131,231.875 798.699,228.681 799.267,227.75 799.836,226.001 800.404,224.49 800.972,223.813 801.541,226.403 802.109,226.507 802.678,227.772 803.246,228.116 803.814,226.209 804.383,228.644 804.951,229.983 805.519,230.22 806.088,229.637 806.656,229.759 807.224,229.29 807.793,229.566 808.361,230.856 808.929,230.221 809.498,232.511 810.066,231.646 810.634,232.827 811.203,232.732 811.771,231.733 812.339,231.703 812.908,231.648 813.476,232.888 814.044,233.862 814.613,232.966 815.181,233.998 815.749,231.781 816.318,231.712 816.886,230.716 817.455,230.827 818.023,228.921 818.591,229.253 819.16,230.484 819.728,229.407 820.296,227.806 820.865,227.917 821.433,229.102 822.001,228.29 822.57,227.442 823.138,226.703 823.706,227.983 824.275,228.256 824.843,231.549 825.411,230.599 825.98,227.501 826.548,227.854 827.116,227.149 827.685,227.633 828.253,228.003 828.821,228.511 829.39,229.896 829.958,230.15 830.526,228.31 831.095,228.493 831.663,227.95 832.232,228.538 832.8,229.75 833.368,231.79 833.937,232.785 834.505,233.726 835.073,233.46 835.642,231.254 836.21,231.302 836.778,232.52 837.347,234.542 837.915,232.368 838.483,233.505 839.052,232.418 839.62,233.605 840.188,233.773 840.757,234.839 841.325,237.833 841.893,237.477 842.462,238.032 843.03,235.41 843.598,237.142 844.167,237.519 844.735,238.217 845.304,238.053 845.872,235.468 846.44,236.044 847.009,234.928 847.577,234.561 848.145,234.422 848.714,235.334 849.282,234.181 849.85,231.96 850.419,232.017 850.987,233.05 851.555,231.834 852.124,233.864 852.692,231.656 853.26,233.526 853.829,233.578 854.397,232.354 854.965,234.232 855.534,231.944 856.102,233.861 856.67,236.613 857.239,237.283 857.807,235.826 858.375,237.555 858.944,236.003 859.512,237.747 860.081,236.107 860.649,234.82 861.217,231.425 861.786,232.204 862.354,232.131 862.922,230.91 863.491,230.725 864.059,230.852 864.627,230.928 865.196,229.916 865.764,231.99 866.332,233.621 866.901,233.303 867.469,230.966 868.037,228.86 868.606,228.043 869.174,229.112 869.742,227.278 870.311,227.564 870.879,228.704 871.447,228.766 872.016,229.898 872.584,230.749 873.152,230.552 873.721,230.424 874.289,232.251 874.858,230.874 875.426,229.745 875.994,230.877 876.563,229.754 877.131,230.768 877.699,229.835 878.268,229.785 878.836,227.543 879.404,228.828 879.973,228.977 880.541,229.174 881.109,229.128 881.678,228.085 882.246,231.37 882.814,232.274 883.383,232.093 883.951,230.891 884.519,230.697 885.088,229.566 885.656,228.5 886.224,226.468 886.793,225.566 887.361,227.776 887.93,226.934 888.498,227.925 889.066,230.095 889.635,232.101 890.203,231.973 890.771,232.86 891.34,233.435 891.908,233.132 892.476,233.884 893.045,230.551 893.613,231.725 894.181,231.514 894.75,231.428 895.318,233.601 895.886,234.25 896.455,235.848 897.023,235.06 897.591,236.534 898.16,234.983 898.728,234.399 899.296,233.972 899.865,233.778 900.433,233.746 901.001,234.567 901.57,237.128 902.138,235.286 902.707,234.718 903.275,234.284 903.843,232.034 904.412,230.619 904.98,229.52 905.548,228.332 906.117,230.332 906.685,230.302 907.253,230.182 907.822,230.883 908.39,230.671 908.958,230.632 909.527,229.513 910.095,229.393 910.663,229.117 911.232,226.946 911.8,226.217 912.368,224.421 912.937,225.869 913.505,226.962 914.073,226.11 914.642,225.275 915.21,225.457 915.779,224.739 916.347,225.979 916.915,226.128 917.484,225.388 918.052,226.611 918.62,226.693 919.189,225.761 919.757,227.049 920.325,228.21 920.894,228.354 921.462,229.455 922.03,230.408 922.599,230.205 923.167,232.307 923.735,232.153 924.304,232.204 924.872,232.058 925.44,228.728 926.009,225.663 926.577,225.034 927.145,225.633 927.714,227.923 928.282,226.926 928.85,228.247 929.419,223.21 929.987,222.649 930.556,223.287 931.124,224.9 931.692,222.297 932.261,223.803 932.829,224.505 933.397,227.278 933.966,227.514 934.534,227.705 935.102,226.965 935.671,227.979 936.239,227.153 936.807,227.365 937.376,227.892 937.944,227.93 938.512,227.236 939.081,230.749 939.649,232.701 940.217,230.548 940.786,229.403 941.354,229.61 941.922,229.658 942.491,229.534 943.059,230.738 943.627,230.675 944.196,229.536 944.764,229.59 945.333,231.863 945.901,231.737 946.469,231.887 947.038,231.857 947.606,232.86 948.174,232.647 948.743,233.409 949.311,231.467 949.879,230.177 950.448,231.385 951.016,231.375 951.584,230.544 952.153,230.336 952.721,230.129 953.289,229.095 953.858,228.308 954.426,228.582 954.994,229.847 955.563,230.933 956.131,231.199 956.699,228.949 957.268,227.061 957.836,228.469 958.405,227.587 958.973,226.838 959.541,226.049 960.11,227.386 960.678,226.663 961.246,227.983 961.815,230.378 962.383,230.477 962.951,232.446 963.52,231.371 964.088,232.297 964.656,232.284 965.225,232.075 965.793,232.334 966.361,232.263 966.93,231.304 967.498,230.297 968.066,230.242 968.635,228.295 969.203,228.613 969.771,228.716 970.34,231.006 970.908,234.102 971.476,232.79 972.045,230.547 972.613,229.545 973.182,229.718 973.75,229.851 974.318,230.068 974.887,229.84 975.455,232.027 976.023,231.784 976.592,233.886 977.16,232.486 977.728,232.306 978.297,233.237 978.865,232.819 979.433,233.887 980.002,232.671 980.57,232.358 981.138,231.204 981.707,231.324 982.275,231.195 982.843,230.234 983.412,230.322 983.98,229.274 984.548,228.194 985.117,228.359 985.685,228.642 986.253,228.728 986.822,226.738 987.39,226.848 987.959,226.122 988.527,226.484 989.095,226.642 989.664,228.855 990.232,230.222 990.8,230.18 991.369,228.339 991.937,227.624 992.505,227.977 993.074,228.999 993.642,227.114 994.21,223.203 994.779,222.682 995.347,223.16 995.915,222.853 996.484,221.402 997.052,224.198 997.62,223.584 998.189,228.338 998.757,229.7 999.325,230.849 999.894,230.839 1000.46,229.781 1001.03,229.703 1001.6,229.829 1002.17,230.067 1002.74,230.91 1003.3,230.819 1003.87,231.912 1004.44,229.793 1005.01,230.958 1005.58,230.839 1006.15,230.989 1006.71,232.141 1007.28,233.09 1007.85,234.058 1008.42,234.686 1008.99,233.279 1009.56,233.962 1010.12,233.814 1010.69,231.576 1011.26,230.612 1011.83,230.628 1012.4,229.576 1012.97,230.517 1013.53,230.627 1014.1,229.637 1014.67,231.874 1015.24,232.778 1015.81,231.621 1016.38,231.425 1016.94,233.406 1017.51,235.198 1018.08,234.858 1018.65,236.573 1019.22,237.434 1019.79,237.709 1020.35,237.028 1020.92,237.542 1021.49,235.864 1022.06,234.308 1022.63,233.047 1023.2,234.65 1023.76,235.123 1024.33,236.902 1024.9,238.433 1025.47,236.672 1026.04,238.114 1026.61,236.397 1027.17,235.897 1027.74,233.346 1028.31,234.214 1028.88,232.927 1029.45,232.652 1030.02,232.321 1030.58,232.113 1031.15,231.76 1031.72,232.441 1032.29,231.115 1032.86,228.852 1033.43,228.844 1033.99,226.76 1034.56,226.917 1035.13,229.244 1035.7,228.874 1036.27,227.893 1036.84,229.028 1037.4,229.028 1037.97,230.184 1038.54,230.194 1039.11,230.997 1039.68,230.746 1040.25,228.542 1040.81,225.418 1041.38,225.916 1041.95,226.174 1042.52,224.256 1043.09,224.396 1043.66,226.564 1044.22,227.663 1044.79,227.718 1045.36,227.691 1045.93,227.601 1046.5,228.859 1047.07,228.926 1047.63,228.921 1048.2,228.905 1048.77,227.804 1049.34,228.079 1049.91,228.998 1050.48,228.066 1051.05,231.4 1051.61,232.089 1052.18,230.722 1052.75,230.641 1053.32,231.581 1053.89,232.452 1054.46,231.415 1055.02,230.217 1055.59,231.076 1056.16,228.95 1056.73,230.095 1057.3,230.169 1057.87,227.936 1058.43,229.012 1059,229.895 1059.57,229.063 1060.14,231.251 1060.71,230.1 1061.28,229.08 1061.84,228.992 1062.41,227.019 1062.98,226.21 1063.55,224.334 1064.12,223.497 1064.69,223.692 1065.25,223.277 1065.82,221.707 1066.39,222.246 1066.96,225.913 1067.53,227.556 1068.1,228.899 1068.66,229.099 1069.23,229.192 1069.8,227.392 1070.37,230.763 1070.94,229.902 1071.51,228.98 1072.07,229.134 1072.64,230.268 1073.21,229.389 1073.78,230.593 1074.35,230.564 1074.92,229.319 1075.48,228.401 1076.05,232.865 1076.62,234.679 1077.19,235.334 1077.76,233.01 1078.33,232.949 1078.89,233.701 1079.46,231.413 1080.03,231.383 1080.6,233.362 1081.17,233.13 1081.74,232.699 1082.3,230.609 1082.87,231.538 1083.44,232.431 1084.01,231.295 1084.58,231.311 1085.15,231.935 1085.71,231.856 1086.28,233.654 1086.85,231.349 1087.42,232.22 1087.99,232.233 1088.56,230.042 1089.12,228.024 1089.69,228.092 1090.26,228.218 1090.83,230.208 1091.4,229.179 1091.97,228.131 1092.53,227.436 1093.1,230.557 1093.67,231.658 1094.24,231.471 1094.81,231.097 1095.38,233.133 1095.94,233.046 1096.51,232.896 1097.08,232.423 1097.65,232.257 1098.22,232.965 1098.79,233.812 1099.35,233.622 1099.92,232.266 1100.49,229.886 1101.06,229.992 1101.63,232.145 1102.2,233.004 1102.76,233.667 1103.33,232.323 1103.9,232.216 1104.47,232.954 1105.04,229.516 1105.61,229.685 1106.17,230.842 1106.74,229.684 1107.31,228.507 1107.88,228.537 1108.45,230.835 1109.02,228.805 1109.58,225.454 1110.15,227.787 1110.72,227.026 1111.29,228.419 1111.86,227.354 1112.43,227.494 1112.99,226.521 1113.56,225.587 1114.13,226.977 1114.7,227.255 1115.27,229.477 1115.84,225.388 1116.4,225.852 1116.97,226.932 1117.54,226.948 1118.11,228.26 1118.68,228.148 1119.25,228.208 1119.81,227.202 1120.38,227.462 1120.95,227.528 1121.52,227.832 1122.09,227.028 1122.66,228.007 1123.23,229.284 1123.79,229.281 1124.36,229.451 1124.93,228.342 1125.5,226.371 1126.07,226.562 1126.64,223.782 1127.2,222.142 1127.77,222.836 1128.34,223.232 1128.91,223.757 1129.48,225.351 1130.05,224.683 1130.61,225.165 1131.18,226.537 1131.75,227.802 1132.32,228.918 1132.89,228.911 1133.46,229.01 1134.02,228.327 1134.59,226.484 1135.16,226.701 1135.73,225.966 1136.3,226.354 1136.87,228.672 1137.43,229.721 1138,230.984 1138.57,230.893 1139.14,229.824 1139.71,228.607 1140.28,227.782 1140.84,229.192 1141.41,229.316 1141.98,229.35 1142.55,230.651 1143.12,229.584 1143.69,231.588 1144.25,229.509 1144.82,229.653 1145.39,230.82 1145.96,231.942 1146.53,230.897 1147.1,232.054 1147.66,234.27 1148.23,234.35 1148.8,235.144 1149.37,234.836 1149.94,231.594 1150.51,230.679 1151.07,228.754 1151.64,228.977 1152.21,230.19 1152.78,233.201 1153.35,235.368 1153.92,234.895 1154.48,234.625 1155.05,233.402 1155.62,234.216 1156.19,230.989 1156.76,232.029 1157.33,232.158 1157.89,232.019 1158.46,232.757 1159.03,232.52 1159.6,232.31 1160.17,233.122 1160.74,235.867 1161.3,234.343 1161.87,235.129 1162.44,234.682 1163.01,233.301 1163.58,233.24 1164.15,230.94 1164.71,230.633 1165.28,232.485 1165.85,231.156 1166.42,233.32 1166.99,228.737 1167.56,229.885 1168.12,230.944 1168.69,231.823 1169.26,234.714 1169.83,235.437 1170.4,234.158 1170.97,236.007 1171.53,236.569 1172.1,236.27 1172.67,234.658 1173.24,234.981 1173.81,234.337 1174.38,232.856 1174.94,232.268 1175.51,231.948 1176.08,232.647 1176.65,235.525 1177.22,234.986 1177.79,233.19 1178.35,231.59 1178.92,231.255 1179.49,232.021 1180.06,233.836 1180.63,232.45 1181.2,232.382 1181.76,233.064 1182.33,232.714 1182.9,233.35 1183.47,230.885 1184.04,231.726 1184.61,232.461 1185.17,231.897 1185.74,229.462 1186.31,230.283 1186.88,230.135 1187.45,231.227 1188.02,228.824 1188.58,230.738 1189.15,232.561 1189.72,232.363 1190.29,232.079 1190.86,229.895 1191.43,229.687 1192,228.506 1192.56,227.696 1193.13,228.856 1193.7,229.709 1194.27,227.385 1194.84,228.433 1195.41,226.173 1195.97,226.241 1196.54,226.343 1197.11,225.294 1197.68,226.329 1198.25,225.315 1198.82,225.289 1199.38,225.245 1199.95,224.243 1200.52,224.308 1201.09,223.595 1201.66,224.161 1202.23,225.614 1202.79,225.962 1203.36,227.144 1203.93,228.541 1204.5,225.416 1205.07,224.392 1205.64,223.756 1206.2,222.991 1206.77,222.434 1207.34,222.772 1207.91,227.494 1208.48,226.835 1209.05,230.172 1209.61,229.008 1210.18,228.033 1210.75,229.237 1211.32,229.404 1211.89,227.338 1212.46,226.427 1213.02,226.699 1213.59,226.894 1214.16,224.965 1214.73,225.51 1215.3,226.911 1215.87,228.397 1216.43,227.757 1217,225.883 1217.57,226.212 1218.14,227.662 1218.71,227.605 1219.28,228.996 1219.84,229.235 1220.41,229.31 1220.98,228.366 1221.55,227.613 1222.12,225.671 1222.69,224.958 1223.25,225.426 1223.82,224.885 1224.39,225.578 1224.96,225.958 1225.53,226.537 1226.1,226.083 1226.66,227.412 1227.23,229.641 1227.8,229.707 1228.37,228.876 1228.94,230.127 1229.51,230.074 1230.07,231.118 1230.64,231.176 1231.21,232.056 1231.78,233.091 1232.35,234.019 1232.92,232.721 1233.48,233.698 1234.05,235.604 1234.62,235.272 1235.19,234.854 1235.76,235.545 1236.33,234.347 1236.89,236.151 1237.46,235.732 1238.03,237.638 1238.6,236.075 1239.17,234.57 1239.74,235.319 1240.3,233.984 1240.87,233.578 1241.44,234.213 1242.01,232.698 1242.58,232.29 1243.15,231.245 1243.71,231.31 1244.28,231.325 1244.85,229.11 1245.42,228.367 1245.99,228.484 1246.56,228.968 1247.12,229.004 1247.69,232.256 1248.26,233.141 1248.83,233.933 1249.4,232.592 1249.97,232.261 1250.53,232.046 1251.1,231.897 1251.67,231.6 1252.24,231.565 1252.81,232.172 1253.38,230.928 1253.94,231.599 1254.51,231.556 1255.08,232.314 1255.65,234.079 1256.22,232.79 1256.79,232.595 1257.35,230.378 1257.92,230.063 1258.49,232.144 1259.06,231.783 1259.63,230.625 1260.2,230.464 1260.76,231.34 1261.33,230.363 1261.9,230.068 1262.47,228.844 1263.04,231.221 1263.61,233.227 1264.18,231.99 1264.74,228.884 1265.31,228.88 1265.88,226.864 1266.45,227.161 1267.02,226.323 1267.59,226.491 1268.15,225.466 1268.72,224.924 1269.29,225.199 1269.86,227.584 1270.43,225.486 1271,225.725 1271.56,229.076 1272.13,229.007 1272.7,229.084 1273.27,227.997 1273.84,227.332 1274.41,224.681 1274.97,226.939 1275.54,229.133 1276.11,231.304 1276.68,230.857 1277.25,229.649 1277.82,229.688 1278.38,229.718 1278.95,228.63 1279.52,230.879 1280.09,229.782 1280.66,229.825 1281.23,229.819 1281.79,229.864 1282.36,229.967 1282.93,231.119 1283.5,232.226 1284.07,230.873 1284.64,227.842 1285.2,227.85 1285.77,227.051 1286.34,229.409 1286.91,229.451 1287.48,230.722 1288.05,229.561 1288.61,229.495 1289.18,230.396 1289.75,228.303 1290.32,228.344 1290.89,230.478 1291.46,230.276 1292.02,230.099 1292.59,230.167 1293.16,229.97 1293.73,227.919 1294.3,226.985 1294.87,228.229 1295.43,230.389 1296,230.233 1296.57,229.252 1297.14,228.087 1297.71,229.159 1298.28,230.137 1298.84,232.23 1299.41,230.64 1299.98,228.535 1300.55,228.551 1301.12,227.666 1301.69,228.946 1302.25,228.863 1302.82,230.98 1303.39,229.846 1303.96,231.866 1304.53,229.728 1305.1,229.659 1305.66,228.541 1306.23,227.851 1306.8,228.82 1307.37,230.921 1307.94,231.142 1308.51,229.213 1309.07,229.142 1309.64,231.292 1310.21,230.089 1310.78,230.956 1311.35,231.945 1311.92,233.929 1312.48,233.82 1313.05,232.616 1313.62,231.348 1314.19,229.416 1314.76,230.75 1315.33,230.851 1315.89,231.771 1316.46,231.566 1317.03,232.444 1317.6,235.362 1318.17,234.993 1318.74,235.651 1319.3,234.267 1319.87,233.963 1320.44,235.489 1321.01,233.898 1321.58,234.502 1322.15,234.219 1322.71,233.773 1323.28,233.511 1323.85,233.341 1324.42,233.982 1324.99,233.355 1325.56,236.083 1326.12,235.528 1326.69,234.923 1327.26,234.317 1327.83,230.821 1328.4,232.636 1328.97,233.172 1329.53,232.849 1330.1,234.233 1330.67,233.741 1331.24,233.248 1331.81,229.708 1332.38,229.678 1332.94,231.689 1333.51,231.451 1334.08,231.104 1334.65,230.753 1335.22,230.485 1335.79,230.202 1336.36,228.953 1336.92,231.051 1337.49,231.764 1338.06,230.453 1338.63,230.229 1339.2,231.323 1339.77,231.068 1340.33,231.017 1340.9,230.67 1341.47,228.57 1342.04,228.396 1342.61,227.327 1343.18,228.128 1343.74,228.068 1344.31,227.965 1344.88,230.151 1345.45,228.032 1346.02,229.033 1346.59,228.047 1347.15,227.129 1347.72,228.112 1348.29,226.98 1348.86,226.823 1349.43,227.01 1350,227.18 1350.56,228.21 1351.13,228.395 1351.7,228.231 1352.27,228.165 1352.84,228.091 1353.41,229.179 1353.97,227.167 1354.54,226.971 1355.11,225.839 1355.68,225.106 1356.25,225.179 1356.82,224.328 1357.38,223.48 1357.95,225.035 1358.52,225.269 1359.09,225.484 1359.66,225.888 1360.23,227.114 1360.79,227.251 1361.36,226.467 1361.93,227.688 1362.5,229.892 1363.07,228.576 1363.64,226.373 1364.2,227.613 1364.77,227.776 1365.34,228.721 1365.91,226.679 1366.48,224.566 1367.05,223.778 1367.61,224.301 1368.18,223.419 1368.75,222.72 1369.32,220.122 1369.89,221.928 1370.46,222.762 1371.02,223.164 1371.59,224.951 1372.16,225.175 1372.73,224.574 1373.3,225.734 1373.87,222.99 1374.43,223.53 1375,224.91 1375.57,224.03 1376.14,225.571 1376.71,227.155 1377.28,227.654 1377.84,227.843 1378.41,227.07 1378.98,228.33 1379.55,229.751 1380.12,227.599 1380.69,228.132 1381.25,228.285 1381.82,228.457 1382.39,229.527 1382.96,229.734 1383.53,229.803 1384.1,228.077 1384.66,227.505 1385.23,225.716 1385.8,227.356 1386.37,228.601 1386.94,229.806 1387.51,229.779 1388.07,229.034 1388.64,229.159 1389.21,230.461 1389.78,228.627 1390.35,229.958 1390.92,231.036 1391.48,232.132 1392.05,232.17 1392.62,233.239 1393.19,232.041 1393.76,232.026 1394.33,233.093 1394.89,232.138 1395.46,234.08 1396.03,233.888 1396.6,231.664 1397.17,234.971 1397.74,233.756 1398.3,233.602 1398.87,231.371 1399.44,231.427 1400.01,230.409 1400.58,230.286 1401.15,228.352 1401.71,228.581 1402.28,230.851 1402.85,229.465 1403.42,229.71 1403.99,230.855 1404.56,230.045 1405.13,231.153 1405.69,231.243 1406.26,232.169 1406.83,231.894 1407.4,232.758 1407.97,229.358 1408.54,229.737 1409.1,229.729 1409.67,229.706 1410.24,228.865 1410.81,228.942 1411.38,230.032 1411.95,230.161 1412.51,230.164 1413.08,230.221 1413.65,230.399 1414.22,229.331 1414.79,230.319 1415.36,230.259 1415.92,230.264 1416.49,231.442 1417.06,229.391 1417.63,228.564 1418.2,228.656 1418.77,225.758 1419.33,226.02 1419.9,228.434 1420.47,229.541 1421.04,227.711 1421.61,229.949 1422.18,230.111 1422.74,231.076 1423.31,232.258 1423.88,230.206 1424.45,228.195 1425.02,229.432 1425.59,228.62 1426.15,228.808 1426.72,230.917 1427.29,232.022 1427.86,232.989 1428.43,231.866 1429,233.813 1429.56,234.471 1430.13,234.276 1430.7,232.882 1431.27,231.626 1431.84,232.719 1432.41,231.764 1432.97,230.549 1433.54,229.677 1434.11,227.626 1434.68,228.886 1435.25,230.239 1435.82,228.323 1436.38,225.238 1436.95,225.709 1437.52,225.976 1438.09,226.085 1438.66,227.554 1439.23,228.971 1439.79,228.176 1440.36,229.665 1440.93,228.856 1441.5,227.972 1442.07,227.215 1442.64,227.345 1443.2,227.519 1443.77,227.715 1444.34,230.179 1444.91,231.29 1445.48,232.305 1446.05,231.153 1446.61,230.882 1447.18,229.898 1447.75,231.102 1448.32,229.268 1448.89,229.501 1449.46,229.648 1450.02,228.418 1450.59,227.686 1451.16,227.817 1451.73,229.108 1452.3,230.002 1452.87,230.984 1453.43,231.151 1454,229.139 1454.57,230.336 1455.14,230.168 1455.71,229.123 1456.28,229.277 1456.84,228.319 1457.41,232.512 1457.98,229.344 1458.55,229.397 1459.12,229.542 1459.69,229.594 1460.25,231.839 1460.82,231.552 1461.39,230.439 1461.96,228.449 1462.53,229.56 1463.1,230.673 1463.66,231.664 1464.23,232.89 1464.8,230.62 1465.37,230.551 1465.94,229.75 1466.51,230.65 1467.07,229.648 1467.64,230.532 1468.21,231.577 1468.78,230.391 1469.35,229.386 1469.92,227.369 1470.48,227.64 1471.05,226.872 1471.62,226.962 1472.19,230.097 1472.76,232.301 1473.33,233.094 1473.89,230.765 1474.46,230.961 1475.03,228.78 1475.6,228.898 1476.17,229.05 1476.74,230.206 1477.31,230.23 1477.87,229.986 1478.44,228.923 1479.01,229.012 1479.58,226.799 1480.15,226.872 1480.72,228.248 1481.28,229.494 1481.85,229.503 1482.42,230.514 1482.99,229.512 1483.56,230.827 1484.13,228.749 1484.69,226.891 1485.26,226.017 1485.83,226.244 1486.4,227.527 1486.97,225.807 1487.54,225.199 1488.1,226.63 1488.67,225.81 1489.24,226.104 1489.81,228.539 1490.38,230.842 1490.95,230.727 1491.51,227.733 1492.08,227.846 1492.65,228.089 1493.22,231.413 1493.79,231.478 1494.36,230.412 1494.92,229.267 1495.49,229.192 1496.06,227.461 1496.63,228.821 1497.2,229.855 1497.77,229.975 1498.33,229.101 1498.9,229.248 1499.47,229.387 1500.04,230.62 1500.61,230.657 1501.18,231.429 1501.74,231.457 1502.31,232.547 1502.88,232.755 1503.45,231.718 1504.02,231.769 1504.59,230.681 1505.15,231.748 1505.72,230.624 1506.29,233.57 1506.86,236.398 1507.43,235.083 1508,232.943 1508.56,232.663 1509.13,232.374 1509.7,233.559 1510.27,232.434 1510.84,231.502 1511.41,230.569 1511.97,230.812 1512.54,232.897 1513.11,232.632 1513.68,230.346 1514.25,231.348 1514.82,230.221 1515.38,230.197 1515.95,230.255 1516.52,231.149 1517.09,232.375 1517.66,231.514 1518.23,231.389 1518.79,231.386 1519.36,230.223 1519.93,230.956 1520.5,230.952 1521.07,232.079 1521.64,232.998 1522.2,233.908 1522.77,234.578 1523.34,235.274 1523.91,233.824 1524.48,233.397 1525.05,232.178 1525.61,231.782 1526.18,232.771 1526.75,234.705 1527.32,234.24 1527.89,234.638 1528.46,234.083 1529.02,233.884 1529.59,234.578 1530.16,231.921 1530.73,232.811 1531.3,230.374 1531.87,232.743 1532.43,233.54 1533,233.308 1533.57,229.896 1534.14,229.681 1534.71,228.606 1535.28,227.631 1535.84,227.881 1536.41,229.981 1536.98,229.832 1537.55,231.722 1538.12,231.552 1538.69,233.387 1539.25,233.939 1539.82,231.512 1540.39,231.54 1540.96,230.27 1541.53,230.136 1542.1,230.12 1542.66,228.15 1543.23,225.907 1543.8,225.816 1544.37,223.889 1544.94,224.121 1545.51,223.54 1546.08,223.89 1546.64,223.324 1547.21,222.531 1547.78,224.012 1548.35,223.384 1548.92,223.896 1549.49,223.363 1550.05,223.837 1550.62,225.149 1551.19,224.582 1551.76,223.948 1552.33,225.546 1552.9,224.861 1553.46,226.282 1554.03,229.812 1554.6,231.903 1555.17,232.905 1555.74,232.765 1556.31,231.74 1556.87,230.49 1557.44,229.478 1558.01,230.452 1558.58,230.436 1559.15,227.279 1559.72,228.806 1560.28,226.898 1560.85,226.236 1561.42,225.565 1561.99,227.948 1562.56,224.944 1563.13,228.501 1563.69,229.649 1564.26,230.722 1564.83,230.894 1565.4,230.981 1565.97,229.851 1566.54,230.934 1567.1,231.989 1567.67,233.897 1568.24,232.598 1568.81,233.466 1569.38,234.353 1569.95,233.974 1570.51,232.864 1571.08,233.823 1571.65,233.809 1572.22,233.292 1572.79,235.091 1573.36,235.837 1573.92,236.457 1574.49,238.188 1575.06,236.66 1575.63,235.34 1576.2,236.155 1576.77,235.797 1577.33,233.377 1577.9,233.139 1578.47,234.01 1579.04,233.898 1579.61,233.73 1580.18,232.463 1580.74,235.344 1581.31,231.967 1581.88,231.738 1582.45,232.46 1583.02,232.318 1583.59,229.936 1584.15,229.609 1584.72,230.543 1585.29,232.516 1585.86,231.227 1586.43,232.939 1587,232.623 1587.56,231.221 1588.13,231.13 1588.7,233.013 1589.27,233.428 1589.84,234.075 1590.41,233.67 1590.97,232.209 1591.54,231.036 1592.11,230.813 1592.68,227.623 1593.25,226.691 1593.82,226.582 1594.38,227.832 1594.95,229.987 1595.52,228.822 1596.09,228.645 1596.66,227.559 1597.23,229.648 1597.79,231.599 1598.36,230.481 1598.93,228.22 1599.5,228.042 1600.07,227.158 1600.64,226.38 1601.2,225.463 1601.77,222.745 1602.34,223.059 1602.91,223.502 1603.48,224.229 1604.05,225.518 1604.61,225.926 1605.18,228.29 1605.75,226.435 1606.32,228.844 1606.89,227.635 1607.46,227.884 1608.02,232.158 1608.59,230.963 1609.16,229.761 1609.73,226.68 1610.3,223.956 1610.87,225.387 1611.43,224.675 1612,224.008 1612.57,222.282 1613.14,222.84 1613.71,224.32 1614.28,224.015 1614.84,225.173 1615.41,227.605 1615.98,227.665 1616.55,227.945 1617.12,226.174 1617.69,224.545 1618.26,223.966 1618.82,224.573 1619.39,225.889 1619.96,226.39 1620.53,227.776 1621.1,229.206 1621.67,230.291 1622.23,230.33 1622.8,228.498 1623.37,228.614 1623.94,230.054 1624.51,230.079 1625.08,230.09 1625.64,227.956 1626.21,228.079 1626.78,227.219 1627.35,226.213 1627.92,225.707 1628.49,225.788 1629.05,226.351 1629.62,226.949 1630.19,227.098 1630.76,228.296 1631.33,230.842 1631.9,231.737 1632.46,232.864 1633.03,231.742 1633.6,233.793 1634.17,233.629 1634.74,232.455 1635.31,230.092 1635.87,228.032 1636.44,228.391 1637.01,229.711 1637.58,231.053 1638.15,233.03 1638.72,231.726 1639.28,233.756 1639.85,233.642 1640.42,232.466 1640.99,232.366 1641.56,233.548 1642.13,235.375 1642.69,234.86 1643.26,233.247 1643.83,235.424 1644.4,235.061 1644.97,232.627 1645.54,232.576 1646.1,234.335 1646.67,235.074 1647.24,235.764 1647.81,235.387 1648.38,236.051 1648.95,234.303 1649.51,234.909 1650.08,233.553 1650.65,234.452 1651.22,230.116 1651.79,229.073 1652.36,228.144 1652.92,228.436 1653.49,227.611 1654.06,229.917 1654.63,232.022 1655.2,232.035 1655.77,232.79 1656.33,232.539 1656.9,231.085 1657.47,231.957 1658.04,231.893 1658.61,231.58 1659.18,232.324 1659.74,232.298 1660.31,233.985 1660.88,233.841 1661.45,232.656 1662.02,231.234 1662.59,230.144 1663.15,229.071 1663.72,229.059 1664.29,228.955 1664.86,231.093 1665.43,233.109 1666,233.905 1666.56,233.588 1667.13,232.394 1667.7,231.103 1668.27,228.079 1668.84,230.166 1669.41,229.917 1669.97,227.845 1670.54,228.027 1671.11,227.153 1671.68,227.165 1672.25,227.291 1672.82,227.294 1673.38,228.332 1673.95,228.217 1674.52,227.23 1675.09,228.43 1675.66,229.47 1676.23,228.449 1676.79,230.765 1677.36,231.497 1677.93,232.137 1678.5,232.799 1679.07,232.644 1679.64,231.282 1680.2,228.065 1680.77,229.16 1681.34,229.24 1681.91,228.295 1682.48,227.485 1683.05,227.644 1683.61,227.848 1684.18,229.779 1684.75,232.87 1685.32,231.406 1685.89,230.333 1686.46,230.323 1687.02,231.467 1687.59,231.381 1688.16,232.567 1688.73,233.217 1689.3,232.974 1689.87,231.665 1690.44,230.318 1691,229.122 1691.57,226.939 1692.14,227.113 1692.71,230.267 1693.28,232 1693.85,234.806 1694.41,235.16 1694.98,233.771 1695.55,233.449 1696.12,232.235 1696.69,233.164 1697.26,233.806 1697.82,232.396 1698.39,234.236 1698.96,234.093 1699.53,233.776 1700.1,234.457 1700.67,230.988 1701.23,231.041 1701.8,228.685 1702.37,228.585 1702.94,227.572 1703.51,228.628 1704.08,228.615 1704.64,228.356 1705.21,227.308 1705.78,225.339 1706.35,222.519 1706.92,224.063 1707.49,224.561 1708.05,225.694 1708.62,228.952 1709.19,227.929 1709.76,227.99 1710.33,228.023 1710.9,228.094 1711.46,232.295 1712.03,230.046 1712.6,230.934 1713.17,229.754 1713.74,228.557 1714.31,225.596 1714.87,226.676 1715.44,226.975 1716.01,226.078 1716.58,226.44 1717.15,225.585 1717.72,221.953 1718.28,226.653 1718.85,226.94 1719.42,223.845 1719.99,226.465 1720.56,229.897 1721.13,230.926 1721.69,231.956 1722.26,234.095 1722.83,231.88 1723.4,231.607 1723.97,230.5 1724.54,230.659 1725.1,231.697 1725.67,232.478 1726.24,235.344 1726.81,233.742 1727.38,233.694 1727.95,232.493 1728.51,232.341 1729.08,229.036 1729.65,227.84 1730.22,226.962 1730.79,229.27 1731.36,229.159 1731.92,231.208 1732.49,233.052 1733.06,233.903 1733.63,234.614 1734.2,235.307 1734.77,234.909 1735.33,233.405 1735.9,233.362 1736.47,231.879 1737.04,233.628 1737.61,233.079 1738.18,235.073 1738.74,234.733 1739.31,236.161 1739.88,234.537 1740.45,234.038 1741.02,232.715 1741.59,230.295 1742.15,229.096 1742.72,228.774 1743.29,226.708 1743.86,227.838 1744.43,228.743 1745,227.963 1745.56,227.858 1746.13,226.7 1746.7,227.908 1747.27,230.009 1747.84,228.784 1748.41,230.655 1748.97,230.298 1749.54,231.365 1750.11,231.102 1750.68,228.92 1751.25,228.009 1751.82,228.006 1752.38,224.891 1752.95,227.064 1753.52,226.219 1754.09,224.24 1754.66,223.367 1755.23,222.847 1755.79,223.134 1756.36,221.674 1756.93,221.227 1757.5,222.798 1758.07,223.432 1758.64,222.891 1759.21,222.372 1759.77,222.137 1760.34,225.588 1760.91,225.944 1761.48,228.407 1762.05,228.765 1762.62,228.873 1763.18,228.019 1763.75,230.162 1764.32,231.152 1764.89,231.003 1765.46,231.081 1766.03,227.995 1766.59,228.23 1767.16,228.446 1767.73,230.557 1768.3,229.327 1768.87,228.283 1769.44,227.461 1770,228.769 1770.57,228.823 1771.14,227.863 1771.71,228.92 1772.28,229.12 1772.85,225.824 1773.41,225.027 1773.98,222.561 1774.55,223.115 1775.12,225.776 1775.69,227.282 1776.26,229.724 1776.82,228.704 1777.39,228.87 1777.96,231.255 1778.53,231.196 1779.1,229.984 1779.67,229.934 1780.23,231.053 1780.8,229.776 1781.37,231.082 1781.94,231.213 1782.51,231.194 1783.08,230.101 1783.64,231.428 1784.21,230.178 1784.78,232.351 1785.35,233.311 1785.92,233.206 1786.49,232.958 1787.05,231.757 1787.62,232.706 1788.19,232.417 1788.76,232.091 1789.33,234.044 1789.9,233.666 1790.46,235.491 1791.03,234.049 1791.6,234.557 1792.17,235.029 1792.74,234.511 1793.31,234.118 1793.87,232.979 1794.44,231.677 1795.01,230.283 1795.58,228.953 1796.15,229.055 1796.72,228.193 1797.28,227.005 1797.85,224.947 1798.42,225.134 1798.99,224.547 1799.56,224.814 1800.13,225.301 1800.69,227.78 1801.26,226.048 1801.83,228.426 1802.4,228.319 1802.97,229.507 1803.54,231.817 1804.1,230.533 1804.67,230.622 1805.24,230.369 1805.81,230.372 1806.38,231.17 1806.95,232.241 1807.51,230.076 1808.08,229.299 1808.65,231.356 1809.22,229.061 1809.79,230.416 1810.36,231.463 1810.92,233.365 1811.49,232.107 1812.06,231.8 1812.63,233.321 1813.2,232.971 1813.77,230.674 1814.33,231.409 1814.9,232.355 1815.47,233.125 1816.04,231.834 1816.61,230.635 1817.18,231.561 1817.74,232.508 1818.31,232.418 1818.88,232.074 1819.45,232.762 1820.02,231.488 1820.59,230.574 1821.15,231.493 1821.72,231.306 1822.29,233.14 1822.86,232.784 1823.43,232.724 1824,233.525 1824.56,232.16 1825.13,232.025 1825.7,230.85 1826.27,230.718 1826.84,230.619 1827.41,231.66 1827.97,232.6 1828.54,231.24 1829.11,231.169 1829.68,231.023 1830.25,231.756 1830.82,230.604 1831.39,230.575 1831.95,231.651 1832.52,229.343 1833.09,231.44 1833.66,230.138 1834.23,230.221 1834.8,231.282 1835.36,229.147 1835.93,228.194 1836.5,228.302 1837.07,228.145 1837.64,228.166 1838.21,230.088 1838.77,229.826 1839.34,229.721 1839.91,229.615 1840.48,230.517 1841.05,231.384 1841.62,229.149 1842.18,230.247 1842.75,230.302 1843.32,229.104 1843.89,229.945 1844.46,228.921 1845.03,229.854 1845.59,230.822 1846.16,230.706 1846.73,228.605 1847.3,229.508 1847.87,226.413 1848.44,227.576 1849,227.478 1849.57,227.525 1850.14,226.519 1850.71,226.728 1851.28,226.862 1851.85,229.217 1852.41,228.442 1852.98,226.441 1853.55,224.627 1854.12,225.922 1854.69,227.201 1855.26,226.25 1855.82,227.66 1856.39,227.658 1856.96,225.903 1857.53,225.033 1858.1,225.291 1858.67,225.589 1859.23,224.849 1859.8,223.118 1860.37,223.648 1860.94,227.202 1861.51,224.337 1862.08,225.921 1862.64,225.245 1863.21,225.575 1863.78,227.916 1864.35,229.156 1864.92,227.32 1865.49,227.51 1866.05,227.54 1866.62,228.88 1867.19,229.076 1867.76,228.036 1868.33,227.197 1868.9,229.278 1869.46,231.381 1870.03,230.195 1870.6,229.311 1871.17,230.45 1871.74,230.406 1872.31,231.66 1872.87,233.528 1873.44,234.387 1874.01,232.162 1874.58,234.127 1875.15,233.913 1875.72,234.661 1876.28,234.406 1876.85,235.028 1877.42,234.759 1877.99,232.511 1878.56,232.316 1879.13,233.014 1879.69,232.789 1880.26,234.624 1880.83,234.351 1881.4,233.894 1881.97,232.473 1882.54,231.31 1883.1,231.015 1883.67,231.728 1884.24,229.732 1884.81,231.951 1885.38,231.588 1885.95,230.146 1886.51,230.944 1887.08,232.039 1887.65,230.802 1888.22,229.707 1888.79,230.605 1889.36,229.571 1889.92,229.592 1890.49,230.618 1891.06,233.781 1891.63,235.56 1892.2,237.237 1892.77,233.552 1893.33,233.353 1893.9,233.071 1894.47,232.979 1895.04,232.673 1895.61,232.471 1896.18,232.251 1896.74,233.127 1897.31,230.815 1897.88,230.574 1898.45,229.457 1899.02,231.582 1899.59,231.333 1900.16,229.913 1900.72,230.98 1901.29,231.779 1901.86,230.499 1902.43,231.532 1903,232.326 1903.57,231.86 1904.13,229.47 1904.7,227.492 1905.27,227.665 1905.84,227.634 1906.41,226.609 1906.98,228.871 1907.54,225.948 1908.11,226.29 1908.68,227.397 1909.25,226.335 1909.82,226.519 1910.39,225.335 1910.95,224.554 1911.52,223.77 1912.09,223.86 1912.66,223.989 1913.23,223.361 1913.8,222.855 1914.36,224.151 1914.93,224.524 1915.5,223.852 1916.07,223.184 1916.64,225.54 1917.21,224.889 1917.77,225.503 1918.34,225.709 1918.91,225.045 1919.48,225.2 1920.05,226.295 1920.62,228.892 1921.18,227.848 1921.75,230.086 1922.32,231.153 1922.89,232.23 1923.46,232.252 1924.03,228.843 1924.59,226.946 1925.16,229.352 1925.73,228.457 1926.3,230.581 1926.87,231.725 1927.44,231.767 1928,230.741 1928.57,229.63 1929.14,231.722 1929.71,232.612 1930.28,228.278 1930.85,228.366 1931.41,229.341 1931.98,228.373 1932.55,227.525 1933.12,230.077 1933.69,227.152 1934.26,227.357 1934.82,226.531 1935.39,224.79 1935.96,226.339 1936.53,225.522 1937.1,227.781 1937.67,228.841 1938.23,228.188 1938.8,228.3 1939.37,226.564 1939.94,228.922 1940.51,230.14 1941.08,230.061 1941.64,231.903 1942.21,231.999 1942.78,231.839 1943.35,233.743 1943.92,233.613 1944.49,231.64 1945.05,231.679 1945.62,231.849 1946.19,234.019 1946.76,231.847 1947.33,232.816 1947.9,230.554 1948.46,229.468 1949.03,228.33 1949.6,227.391 1950.17,229.937 1950.74,231.08 1951.31,230.205 1951.87,229.3 1952.44,229.122 1953.01,228.052 1953.58,229.182 1954.15,230.197 1954.72,230.301 1955.28,231.521 1955.85,231.523 1956.42,229.284 1956.99,229.385 1957.56,229.507 1958.13,228.304 1958.69,228.384 1959.26,227.478 1959.83,227.601 1960.4,228.054 1960.97,228.242 1961.54,229.474 1962.1,229.429 1962.67,229.486 1963.24,230.59 1963.81,230.729 1964.38,230.818 1964.95,229.942 1965.51,227.843 1966.08,229.168 1966.65,229.085 1967.22,230.14 1967.79,229.96 1968.36,228.976 1968.92,230.149 1969.49,231.029 1970.06,230.856 1970.63,230.694 1971.2,227.473 1971.77,227.476 1972.34,228.507 1972.9,227.591 1973.47,226.958 1974.04,228.028 1974.61,229.076 1975.18,233.127 1975.75,233.841 1976.31,235.014 1976.88,233.723 1977.45,233.532 1978.02,234.427 1978.59,233.223 1979.16,232.083 1979.72,230.752 1980.29,232.954 1980.86,232.719 1981.43,231.776 1982,230.784 1982.57,229.668 1983.13,229.637 1983.7,229.642 1984.27,229.623 1984.84,230.523 1985.41,230.471 1985.98,231.454 1986.54,231.538 1987.11,231.633 1987.68,231.501 1988.25,228.66 1988.82,228.022 1989.39,229.388 1989.95,229.597 1990.52,231.766 1991.09,232.537 1991.66,233.188 1992.23,230.987 1992.8,230.95 1993.36,230.833 1993.93,229.678 1994.5,227.54 1995.07,229.842 1995.64,230.725 1996.21,231.658 1996.77,230.637 1997.34,231.558 1997.91,231.549 1998.48,231.427 1999.05,230.034 1999.62,230.078 2000.18,231.086 2000.75,228.774 2001.32,227.866 2001.89,227.972 2002.46,230.112 2003.03,229.939 2003.59,232.811 2004.16,232.668 2004.73,233.257 2005.3,233.981 2005.87,232.68 2006.44,231.499 2007,229.4 2007.57,231.578 2008.14,231.689 2008.71,230.416 2009.28,230.399 2009.85,230.56 2010.41,230.763 2010.98,231.767 2011.55,228.526 2012.12,229.633 2012.69,230.597 2013.26,228.786 2013.82,229.022 2014.39,230.108 2014.96,230.237 2015.53,227.084 2016.1,228.45 2016.67,228.744 2017.23,227.738 2017.8,229.777 2018.37,229.993 2018.94,227.83 2019.51,229.885 2020.08,230.023 2020.64,230.911 2021.21,229.86 2021.78,231.947 2022.35,230.869 2022.92,230.915 2023.49,229.804 2024.05,226.801 2024.62,228.967 2025.19,230.191 2025.76,230.23 2026.33,229.031 2026.9,227.997 2027.46,228.076 2028.03,230.279 2028.6,231.262 2029.17,233.068 2029.74,233.949 2030.31,233.618 2030.87,234.345 2031.44,232.973 2032.01,231.664 2032.58,230.63 2033.15,231.622 2033.72,232.466 2034.28,235.383 2034.85,234.867 2035.42,237.611 2035.99,238.925 2036.56,238.22 2037.13,237.67 2037.69,236.993 2038.26,237.365 2038.83,235.442 2039.4,236.797 2039.97,237.187 2040.54,235.502 2041.11,234.989 2041.67,233.235 2042.24,231.809 2042.81,230.459 2043.38,231.272 2043.95,230.96 2044.52,228.72 2045.08,226.534 2045.65,225.503 2046.22,225.616 2046.79,225.693 2047.36,225.961 2047.93,226.067 2048.49,225.24 2049.06,223.224 2049.63,221.323 2050.2,221.882 2050.77,220.385 2051.34,219.895 2051.9,220.785 2052.47,221.214 2053.04,221.813 2053.61,223.204 2054.18,223.485 2054.75,223.645 2055.31,224.031 2055.88,224.442 2056.45,225.855 2057.02,226.005 2057.59,226.347 2058.16,228.374 2058.72,229.437 2059.29,230.314 2059.86,232.295 2060.43,232.12 2061,231.226 2061.57,231.17 2062.13,231.977 2062.7,231.898 2063.27,231.833 2063.84,233.852 2064.41,234.623 2064.98,236.307 2065.54,235.7 2066.11,234.146 2066.68,236.92 2067.25,236.262 2067.82,235.705 2068.39,235.151 2068.95,235.717 2069.52,234.491 2070.09,234.1 2070.66,232.856 2071.23,234.917 2071.8,233.286 2072.36,233.959 2072.93,234.784 2073.5,235.337 2074.07,234.787 2074.64,232.17 2075.21,232.954 2075.77,230.485 2076.34,231.43 2076.91,231.338 2077.48,229.074 2078.05,228.008 2078.62,229.019 2079.18,229.031 2079.75,226.949 2080.32,227.221 2080.89,226.318 2081.46,228.41 2082.03,227.347 2082.59,227.522 2083.16,228.427 2083.73,225.445 2084.3,223.497 2084.87,224.983 2085.44,222.229 2086,224.737 2086.57,222.84 2087.14,223.365 2087.71,223.858 2088.28,225.182 2088.85,225.569 2089.41,226.742 2089.98,228.077 2090.55,228.465 2091.12,230.541 2091.69,232.617 2092.26,232.366 2092.82,233.329 2093.39,235.097 2093.96,234.569 2094.53,233.066 2095.1,231.783 2095.67,232.6 2096.23,231.431 2096.8,230.289 2097.37,227.461 2097.94,229.603 2098.51,227.627 2099.08,228.778 2099.64,229.606 2100.21,227.548 2100.78,228.862 2101.35,228.799 2101.92,229.96 2102.49,229.817 2103.05,230.002 2103.62,229.953 2104.19,227.812 2104.76,227.868 2105.33,227.961 2105.9,227.099 2106.46,226.901 2107.03,227.177 2107.6,227.294 2108.17,226.553 2108.74,227.924 2109.31,227.945 2109.87,229.214 2110.44,228.268 2111.01,229.499 2111.58,228.443 2112.15,225.312 2112.72,227.574 2113.29,226.565 2113.85,226.698 2114.42,226.958 2114.99,226.871 2115.56,226.131 2116.13,226.64 2116.7,225.807 2117.26,223.847 2117.83,223.319 2118.4,223.85 2118.97,225.15 2119.54,225.583 2120.11,224.893 2120.67,224.349 2121.24,223.88 2121.81,225.529 2122.38,226.003 2122.95,228.586 2123.52,228.622 2124.08,227.696 2124.65,228.885 2125.22,232.252 2125.79,233.385 2126.36,234.009 2126.93,231.679 2127.49,231.768 2128.06,231.466 2128.63,231.478 2129.2,229.356 2129.77,230.492 2130.34,231.816 2130.9,232.828 2131.47,233.576 2132.04,232.2 2132.61,233.108 2133.18,233.796 2133.75,232.324 2134.31,235.154 2134.88,234.845 2135.45,236.418 2136.02,236.699 2136.59,236.266 2137.16,233.57 2137.72,232.355 2138.29,233.152 2138.86,234.34 2139.43,236.161 2140,235.998 2140.57,239.776 2141.13,236.02 2141.7,236.657 2142.27,234.148 2142.84,234.69 2143.41,233.197 2143.98,228.983 2144.54,229.188 2145.11,226.137 2145.68,224.103 2146.25,226.594 2146.82,228.795 2147.39,230.896 2147.95,230.696 2148.52,228.526 2149.09,227.495 2149.66,226.685 2150.23,225.916 2150.8,228.197 2151.36,227.373 2151.93,229.496 2152.5,227.409 2153.07,226.463 2153.64,226.516 2154.21,226.86 2154.77,225.808 2155.34,228.332 2155.91,227.29 2156.48,227.521 2157.05,227.781 2157.62,228.006 2158.18,228.336 2158.75,227.275 2159.32,226.348 2159.89,225.61 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip360)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip360)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip360)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip360)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.019 ± 0.023\n  with uncertainty of ± 0.0020448825023557764\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01609 ± (0.00335518, 0.00345609) (MC)\n  95% confidence interval: [-4.02274, -4.00932]) (MC)\n  linear error propagation: -4.01613 ± 0.00346451\n  |δ_y| = |0.00222338| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016089892196749, val_l = 0.006652723736129573, val_u = 0.0067669696883490005)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip390\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip390)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip391\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip390)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip392\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1148.14 2211.02,1148.14 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,983.215 2211.02,983.215 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,818.293 2211.02,818.293 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,653.371 2211.02,653.371 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,488.449 2211.02,488.449 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,323.527 2211.02,323.527 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1148.14 365.751,1148.14 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,983.215 365.751,983.215 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,818.293 365.751,818.293 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,653.371 365.751,653.371 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,488.449 365.751,488.449 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,323.527 365.751,323.527 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M298.909 1133.94 Q295.298 1133.94 293.469 1137.5 Q291.664 1141.04 291.664 1148.17 Q291.664 1155.28 293.469 1158.84 Q295.298 1162.38 298.909 1162.38 Q302.543 1162.38 304.349 1158.84 Q306.177 1155.28 306.177 1148.17 Q306.177 1141.04 304.349 1137.5 Q302.543 1133.94 298.909 1133.94 M298.909 1130.23 Q304.719 1130.23 307.775 1134.84 Q310.853 1139.42 310.853 1148.17 Q310.853 1156.9 307.775 1161.5 Q304.719 1166.09 298.909 1166.09 Q293.099 1166.09 290.02 1161.5 Q286.964 1156.9 286.964 1148.17 Q286.964 1139.42 290.02 1134.84 Q293.099 1130.23 298.909 1130.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M259.557 996.559 L267.196 996.559 L267.196 970.194 L258.886 971.861 L258.886 967.601 L267.15 965.935 L271.826 965.935 L271.826 996.559 L279.465 996.559 L279.465 1000.49 L259.557 1000.49 L259.557 996.559 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M298.909 969.013 Q295.298 969.013 293.469 972.578 Q291.664 976.12 291.664 983.249 Q291.664 990.356 293.469 993.921 Q295.298 997.462 298.909 997.462 Q302.543 997.462 304.349 993.921 Q306.177 990.356 306.177 983.249 Q306.177 976.12 304.349 972.578 Q302.543 969.013 298.909 969.013 M298.909 965.31 Q304.719 965.31 307.775 969.916 Q310.853 974.499 310.853 983.249 Q310.853 991.976 307.775 996.583 Q304.719 1001.17 298.909 1001.17 Q293.099 1001.17 290.02 996.583 Q286.964 991.976 286.964 983.249 Q286.964 974.499 290.02 969.916 Q293.099 965.31 298.909 965.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M262.775 831.638 L279.094 831.638 L279.094 835.573 L257.15 835.573 L257.15 831.638 Q259.812 828.883 264.395 824.253 Q269.002 819.601 270.182 818.258 Q272.428 815.735 273.307 813.999 Q274.21 812.24 274.21 810.55 Q274.21 807.795 272.266 806.059 Q270.344 804.323 267.242 804.323 Q265.043 804.323 262.59 805.087 Q260.159 805.851 257.381 807.402 L257.381 802.679 Q260.205 801.545 262.659 800.966 Q265.113 800.388 267.15 800.388 Q272.52 800.388 275.715 803.073 Q278.909 805.758 278.909 810.249 Q278.909 812.378 278.099 814.3 Q277.312 816.198 275.205 818.79 Q274.627 819.462 271.525 822.679 Q268.423 825.874 262.775 831.638 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M298.909 804.091 Q295.298 804.091 293.469 807.656 Q291.664 811.198 291.664 818.327 Q291.664 825.434 293.469 828.999 Q295.298 832.54 298.909 832.54 Q302.543 832.54 304.349 828.999 Q306.177 825.434 306.177 818.327 Q306.177 811.198 304.349 807.656 Q302.543 804.091 298.909 804.091 M298.909 800.388 Q304.719 800.388 307.775 804.994 Q310.853 809.577 310.853 818.327 Q310.853 827.054 307.775 831.661 Q304.719 836.244 298.909 836.244 Q293.099 836.244 290.02 831.661 Q286.964 827.054 286.964 818.327 Q286.964 809.577 290.02 804.994 Q293.099 800.388 298.909 800.388 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M272.914 652.017 Q276.27 652.734 278.145 655.003 Q280.043 657.271 280.043 660.605 Q280.043 665.72 276.525 668.521 Q273.006 671.322 266.525 671.322 Q264.349 671.322 262.034 670.882 Q259.742 670.466 257.289 669.609 L257.289 665.095 Q259.233 666.229 261.548 666.808 Q263.863 667.387 266.386 667.387 Q270.784 667.387 273.076 665.651 Q275.39 663.915 275.39 660.605 Q275.39 657.549 273.238 655.836 Q271.108 654.1 267.289 654.1 L263.261 654.1 L263.261 650.257 L267.474 650.257 Q270.923 650.257 272.752 648.892 Q274.58 647.503 274.58 644.91 Q274.58 642.248 272.682 640.836 Q270.807 639.401 267.289 639.401 Q265.367 639.401 263.168 639.818 Q260.969 640.234 258.33 641.114 L258.33 636.947 Q260.992 636.207 263.307 635.836 Q265.645 635.466 267.705 635.466 Q273.029 635.466 276.131 637.896 Q279.233 640.304 279.233 644.424 Q279.233 647.294 277.59 649.285 Q275.946 651.253 272.914 652.017 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M298.909 639.169 Q295.298 639.169 293.469 642.734 Q291.664 646.276 291.664 653.405 Q291.664 660.512 293.469 664.077 Q295.298 667.618 298.909 667.618 Q302.543 667.618 304.349 664.077 Q306.177 660.512 306.177 653.405 Q306.177 646.276 304.349 642.734 Q302.543 639.169 298.909 639.169 M298.909 635.466 Q304.719 635.466 307.775 640.072 Q310.853 644.656 310.853 653.405 Q310.853 662.132 307.775 666.739 Q304.719 671.322 298.909 671.322 Q293.099 671.322 290.02 666.739 Q286.964 662.132 286.964 653.405 Q286.964 644.656 290.02 640.072 Q293.099 635.466 298.909 635.466 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M271.594 475.243 L259.789 493.692 L271.594 493.692 L271.594 475.243 M270.367 471.169 L276.247 471.169 L276.247 493.692 L281.177 493.692 L281.177 497.581 L276.247 497.581 L276.247 505.729 L271.594 505.729 L271.594 497.581 L255.992 497.581 L255.992 493.067 L270.367 471.169 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M298.909 474.248 Q295.298 474.248 293.469 477.812 Q291.664 481.354 291.664 488.484 Q291.664 495.59 293.469 499.155 Q295.298 502.696 298.909 502.696 Q302.543 502.696 304.349 499.155 Q306.177 495.59 306.177 488.484 Q306.177 481.354 304.349 477.812 Q302.543 474.248 298.909 474.248 M298.909 470.544 Q304.719 470.544 307.775 475.15 Q310.853 479.734 310.853 488.484 Q310.853 497.21 307.775 501.817 Q304.719 506.4 298.909 506.4 Q293.099 506.4 290.02 501.817 Q286.964 497.21 286.964 488.484 Q286.964 479.734 290.02 475.15 Q293.099 470.544 298.909 470.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M258.793 306.247 L277.15 306.247 L277.15 310.182 L263.076 310.182 L263.076 318.654 Q264.094 318.307 265.113 318.145 Q266.131 317.96 267.15 317.96 Q272.937 317.96 276.316 321.131 Q279.696 324.302 279.696 329.719 Q279.696 335.298 276.224 338.4 Q272.752 341.478 266.432 341.478 Q264.256 341.478 261.988 341.108 Q259.742 340.737 257.335 339.997 L257.335 335.298 Q259.418 336.432 261.641 336.987 Q263.863 337.543 266.34 337.543 Q270.344 337.543 272.682 335.437 Q275.02 333.33 275.02 329.719 Q275.02 326.108 272.682 324.001 Q270.344 321.895 266.34 321.895 Q264.465 321.895 262.59 322.312 Q260.738 322.728 258.793 323.608 L258.793 306.247 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M298.909 309.326 Q295.298 309.326 293.469 312.89 Q291.664 316.432 291.664 323.562 Q291.664 330.668 293.469 334.233 Q295.298 337.775 298.909 337.775 Q302.543 337.775 304.349 334.233 Q306.177 330.668 306.177 323.562 Q306.177 316.432 304.349 312.89 Q302.543 309.326 298.909 309.326 M298.909 305.622 Q304.719 305.622 307.775 310.228 Q310.853 314.812 310.853 323.562 Q310.853 332.288 307.775 336.895 Q304.719 341.478 298.909 341.478 Q293.099 341.478 290.02 336.895 Q286.964 332.288 286.964 323.562 Q286.964 314.812 290.02 310.228 Q293.099 305.622 298.909 305.622 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip392)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1026.62 400.199,914.978 400.786,812.545 401.372,718.7 401.958,632.87 402.545,554.528 403.131,483.182 403.718,418.377 404.304,359.688 404.891,499.208 405.477,442.474 406.063,392.451 406.65,346.262 407.236,377.773 407.823,337.609 408.409,301.805 408.995,271.055 409.582,243.083 410.168,219.895 410.755,298.19 411.341,275.903 411.927,255.558 412.514,278.891 413.1,263.49 413.687,285.064 414.273,273.97 414.86,293.582 415.446,284.644 416.032,277.797 416.619,298.173 417.205,316.447 417.792,335.634 418.378,373.518 418.964,372.673 419.551,372.397 420.137,372.047 420.724,373.55 421.31,375.658 421.896,379.337 422.483,412.19 423.069,430.479 423.656,448.886 424.242,455.987 424.829,463.022 425.415,471.327 426.001,490.458 426.588,518.449 427.174,527.295 427.761,544.247 428.347,562.152 428.933,578.911 429.52,587.137 430.106,596.656 430.693,605.89 431.279,621.977 431.865,631.754 432.452,647.847 433.038,657.082 433.625,683.269 434.211,702.724 434.798,721.516 435.384,744.103 435.97,760.818 436.557,777.094 437.143,792.321 437.73,798.742 438.316,821.778 438.902,831.84 439.489,845.919 440.075,866.534 440.662,879.486 441.248,904.807 441.835,915.854 442.421,926.217 443.007,930.132 443.594,936.99 444.18,949.668 444.767,952.72 445.353,962.714 445.939,969.243 446.526,980.86 447.112,989.279 447.699,998.007 448.285,1003.27 448.871,1011.49 449.458,1014.6 450.044,1017.5 450.631,1020.65 451.217,1035.99 451.804,1038.91 452.39,1041.93 452.976,1044.91 453.563,1050.25 454.149,1060.25 454.736,1065.22 455.322,1068.24 455.908,1075.53 456.495,1087.16 457.081,1085.39 457.668,1092.36 458.254,1096.68 458.84,1097.34 459.427,1101.84 460.013,1112.33 460.6,1116.64 461.186,1118.64 461.773,1120.45 462.359,1122.48 462.945,1124.74 463.532,1130.74 464.118,1130.62 464.705,1128.86 465.291,1134.79 465.877,1136.9 466.464,1139.17 467.05,1141.4 467.637,1147.54 468.223,1155.01 468.809,1161.68 469.396,1164.73 469.982,1162.38 470.569,1172.59 471.155,1177.04 471.742,1179.5 472.328,1182.14 472.914,1184.56 473.501,1187.17 474.087,1189.73 474.674,1195.23 475.26,1195.8 475.846,1196.05 476.433,1198.23 477.019,1200.63 477.606,1205.52 478.192,1204.3 478.778,1207.69 479.365,1209.28 479.951,1212.4 480.538,1217.05 481.124,1216.91 481.711,1216.95 482.297,1218.37 482.883,1221.33 483.47,1224.33 484.056,1229.89 484.643,1233.98 485.229,1237.82 485.815,1239.87 486.402,1241.44 486.988,1243.38 487.575,1242.21 488.161,1241.29 488.748,1238.79 489.334,1236.86 489.92,1237.85 490.507,1241.58 491.093,1241.98 491.68,1241.11 492.266,1240.36 492.852,1239.44 493.439,1240.31 494.025,1244.11 494.612,1243.04 495.198,1243.57 495.784,1242.9 496.371,1243.41 496.957,1242.74 497.544,1242.12 498.13,1244.38 498.717,1246.61 499.303,1245.56 499.889,1246.16 500.476,1246.72 501.062,1248.53 501.649,1246.03 502.235,1248.31 502.821,1248.84 503.408,1249.61 503.994,1250.07 504.581,1250.53 505.167,1249.63 505.753,1247.73 506.34,1245.5 506.926,1244.67 507.513,1244.03 508.099,1243.35 508.686,1245.47 509.272,1241.88 509.858,1241.2 510.445,1242.09 511.031,1243.18 511.618,1242.69 512.204,1242.03 512.79,1241.88 513.377,1244.36 513.963,1246.66 514.55,1244.36 515.136,1240.93 515.722,1241.59 516.309,1241.18 516.895,1239.39 517.482,1240.56 518.068,1240.21 518.655,1239.8 519.241,1242.49 519.827,1241.98 520.414,1241.62 521,1241.13 521.587,1245.01 522.173,1246.21 522.759,1246.61 523.346,1249.95 523.932,1247.47 524.519,1245.48 525.105,1244.86 525.691,1245.68 526.278,1238.11 526.864,1237.87 527.451,1236.61 528.037,1233.82 528.624,1235.24 529.21,1236.46 529.796,1234.99 530.383,1236.08 530.969,1238.7 531.556,1238.18 532.142,1238.27 532.728,1236.83 533.315,1237.03 533.901,1236.92 534.488,1236.85 535.074,1239.59 535.661,1240.77 536.247,1238.14 536.833,1241.88 537.42,1240 538.006,1239.59 538.593,1239.58 539.179,1237.72 539.765,1236.06 540.352,1231.54 540.938,1231.55 541.525,1234.34 542.111,1235.69 542.697,1235.68 543.284,1239.58 543.87,1239.07 544.457,1237.3 545.043,1239.84 545.63,1241.12 546.216,1241.95 546.802,1242.94 547.389,1243.89 547.975,1244.79 548.562,1246.89 549.148,1246.24 549.734,1245.67 550.321,1243.74 550.907,1241.96 551.494,1238.23 552.08,1239.44 552.666,1244.35 553.253,1242.4 553.839,1242.89 554.426,1243.55 555.012,1242.91 555.599,1240.95 556.185,1239.15 556.771,1238.6 557.358,1235.75 557.944,1235.52 558.531,1233.94 559.117,1234.94 559.703,1237.36 560.29,1238.33 560.876,1240.69 561.463,1242.7 562.049,1243.52 562.635,1241.67 563.222,1241.32 563.808,1239.54 564.395,1240.31 564.981,1242.71 565.568,1242.13 566.154,1240.33 566.74,1238.41 567.327,1239.5 567.913,1239.1 568.5,1239.78 569.086,1238.01 569.672,1234.76 570.259,1231.7 570.845,1230.37 571.432,1230.38 572.018,1228.7 572.605,1228.75 573.191,1227.93 573.777,1234.6 574.364,1234.31 574.95,1234.22 575.537,1234.17 576.123,1234.89 576.709,1234.69 577.296,1234.3 577.882,1236.35 578.469,1239.74 579.055,1236.22 579.641,1235.65 580.228,1236.91 580.814,1237.6 581.401,1238.37 581.987,1240.17 582.574,1240.76 583.16,1241.34 583.746,1243.11 584.333,1243.61 584.919,1241.29 585.506,1239.09 586.092,1239.57 586.678,1240.11 587.265,1238.14 587.851,1238.95 588.438,1238.48 589.024,1237.95 589.61,1236.06 590.197,1235.58 590.783,1235.12 591.37,1236.15 591.956,1234.11 592.543,1233.69 593.129,1232.04 593.715,1231.49 594.302,1230.02 594.888,1230.15 595.475,1230.28 596.061,1230.22 596.647,1230.06 597.234,1230.12 597.82,1231.27 598.407,1227.82 598.993,1230.19 599.579,1230.12 600.166,1230.27 600.752,1227.45 601.339,1229.81 601.925,1230.97 602.512,1228.02 603.098,1227.96 603.684,1229.11 604.271,1230.22 604.857,1229.92 605.444,1231.28 606.03,1230.99 606.616,1234.48 607.203,1235.37 607.789,1232.49 608.376,1232.44 608.962,1232 609.548,1228.71 610.135,1228.37 610.721,1233.71 611.308,1234.58 611.894,1232.72 612.481,1235.11 613.067,1232.02 613.653,1226.26 614.24,1225.73 614.826,1228.19 615.413,1227.96 615.999,1224.98 616.585,1222.27 617.172,1223.87 617.758,1222.34 618.345,1222.21 618.931,1219.69 619.518,1221.26 620.104,1228.29 620.69,1228.12 621.277,1225.38 621.863,1226.49 622.45,1227.85 623.036,1225.01 623.622,1226.38 624.209,1223.14 624.795,1223.07 625.382,1220.08 625.968,1221.44 626.554,1222.88 627.141,1220.24 627.727,1220.46 628.314,1220.78 628.9,1221.31 629.487,1224.17 630.073,1222.71 630.659,1222.77 631.246,1225.6 631.832,1225.43 632.419,1225.23 633.005,1223.63 633.591,1223.63 634.178,1223.55 634.764,1225.1 635.351,1226.64 635.937,1225.37 636.523,1223.98 637.11,1219.97 637.696,1220.24 638.283,1218.99 638.869,1216.41 639.456,1218.07 640.042,1219.83 640.628,1221.32 641.215,1220.11 641.801,1220.24 642.388,1224.55 642.974,1224.54 643.56,1222.74 644.147,1221.38 644.733,1221.97 645.32,1222.16 645.906,1222.17 646.492,1221.98 647.079,1219.29 647.665,1219.59 648.252,1224.21 648.838,1221.3 649.425,1221.28 650.011,1222.72 650.597,1222.6 651.184,1222.24 651.77,1222.1 652.357,1223.42 652.943,1226.02 653.529,1228.3 654.116,1229.33 654.702,1228.85 655.289,1228.39 655.875,1226.97 656.462,1228.16 657.048,1227.69 657.634,1230.12 658.221,1231.04 658.807,1230.8 659.394,1228.94 659.98,1228.43 660.566,1226.69 661.153,1226.5 661.739,1225.19 662.326,1226.19 662.912,1228.43 663.498,1229.12 664.085,1228.79 664.671,1227.14 665.258,1228.11 665.844,1226.72 666.431,1227.77 667.017,1224.72 667.603,1224.55 668.19,1225.65 668.776,1226.8 669.363,1227.77 669.949,1228.5 670.535,1228.96 671.122,1227.17 671.708,1228.18 672.295,1227.84 672.881,1226.4 673.467,1230.13 674.054,1229.69 674.64,1228.09 675.227,1228.98 675.813,1232.67 676.4,1231.98 676.986,1227.39 677.572,1225.78 678.159,1225.27 678.745,1225.07 679.332,1224.66 679.918,1224.24 680.504,1226.98 681.091,1226.5 681.677,1230.04 682.264,1229.62 682.85,1229.11 683.436,1227.34 684.023,1222.93 684.609,1224.38 685.196,1221.97 685.782,1219.04 686.369,1216.19 686.955,1216.51 687.541,1218.01 688.128,1222.15 688.714,1223.31 689.301,1222.96 689.887,1222.85 690.473,1224.11 691.06,1224.99 691.646,1226.22 692.233,1224.46 692.819,1223.98 693.405,1226.33 693.992,1227.17 694.578,1228.02 695.165,1224.84 695.751,1224.58 696.338,1225.71 696.924,1225.45 697.51,1225.11 698.097,1227.53 698.683,1228.38 699.27,1228.03 699.856,1229.22 700.442,1227.41 701.029,1227.03 701.615,1226.7 702.202,1227.81 702.788,1224.85 703.375,1224.48 703.961,1222.97 704.547,1224.03 705.134,1222.49 705.72,1223.83 706.307,1222.26 706.893,1222.07 707.479,1223.21 708.066,1222.86 708.652,1221.11 709.239,1225.25 709.825,1226.29 710.411,1226.17 710.998,1223.49 711.584,1221.91 712.171,1221.69 712.757,1223.08 713.344,1222.78 713.93,1223.77 714.516,1223.5 715.103,1223.17 715.689,1221.9 716.276,1221.94 716.862,1219.24 717.448,1216.5 718.035,1218.1 718.621,1216.85 719.208,1215.63 719.794,1214.46 720.38,1217.4 720.967,1217.07 721.553,1221.42 722.14,1219.83 722.726,1222.24 723.313,1223.36 723.899,1223.17 724.485,1220.65 725.072,1219.23 725.658,1217.95 726.245,1222.16 726.831,1219.19 727.417,1219.24 728.004,1217.9 728.59,1216.37 729.177,1219.26 729.763,1219.14 730.349,1219.16 730.936,1220.31 731.522,1220.31 732.109,1222.7 732.695,1222.67 733.282,1223.79 733.868,1223.72 734.454,1223.56 735.041,1224.55 735.627,1225.78 736.214,1220.23 736.8,1220.21 737.386,1217.56 737.973,1219.1 738.559,1216.62 739.146,1218.06 739.732,1216.94 740.318,1219.63 740.905,1220.05 741.491,1220.29 742.078,1220.13 742.664,1220.06 743.251,1221.2 743.837,1220.92 744.423,1224.84 745.01,1224.57 745.596,1224.45 746.183,1222.81 746.769,1223.96 747.355,1223.54 747.942,1223.43 748.528,1224.45 749.115,1221.35 749.701,1221.16 750.288,1219.6 750.874,1219.67 751.46,1219.8 752.047,1218.3 752.633,1220.98 753.22,1219.36 753.806,1223.48 754.392,1224.72 754.979,1227.06 755.565,1229.12 756.152,1230.13 756.738,1226.92 757.324,1226.87 757.911,1225.31 758.497,1224.92 759.084,1227.44 759.67,1224.37 760.257,1222.65 760.843,1222.34 761.429,1223.09 762.016,1222.93 762.602,1223.55 763.189,1223.2 763.775,1221.52 764.361,1222.33 764.948,1219.33 765.534,1220.39 766.121,1218.8 766.707,1218.84 767.293,1220.08 767.88,1220.07 768.466,1220.09 769.053,1218.42 769.639,1217.07 770.226,1218.14 770.812,1216.71 771.398,1219.5 771.985,1219.55 772.571,1220.8 773.158,1220.63 773.744,1223.09 774.33,1222.68 774.917,1221.09 775.503,1222.48 776.09,1224.58 776.676,1224.49 777.262,1222.99 777.849,1224.07 778.435,1225.22 779.022,1226.24 779.608,1224.65 780.195,1224.34 780.781,1220.09 781.367,1221.28 781.954,1225.3 782.54,1224.91 783.127,1225.87 783.713,1225.31 784.299,1224.89 784.886,1224.27 785.472,1222.5 786.059,1222.17 786.645,1224.56 787.232,1224.36 787.818,1225.1 788.404,1224.39 788.991,1222.84 789.577,1220.17 790.164,1218.82 790.75,1217.52 791.336,1217.76 791.923,1220.56 792.509,1220.46 793.096,1218.83 793.682,1216.11 794.268,1218.84 794.855,1217.28 795.441,1218.61 796.028,1216.99 796.614,1216.68 797.201,1215.18 797.787,1211.12 798.373,1211.38 798.96,1210.45 799.546,1213.69 800.133,1211.27 800.719,1210.59 801.305,1209.47 801.892,1209.47 802.478,1212.66 803.065,1211.76 803.651,1213.06 804.237,1213.42 804.824,1213.48 805.41,1212.16 805.997,1213.53 806.583,1216.33 807.17,1216.2 807.756,1214.8 808.342,1216.3 808.929,1213.6 809.515,1216.38 810.102,1213.89 810.688,1213.73 811.274,1215.23 811.861,1212.71 812.447,1215.59 813.034,1213.03 813.62,1209.32 814.206,1208.26 814.793,1209.98 815.379,1207.56 815.966,1209.4 816.552,1206.95 817.139,1208.9 817.725,1210.43 818.311,1214.75 818.898,1213.69 819.484,1213.72 820.071,1215.26 820.657,1215.48 821.243,1215.29 821.83,1215.16 822.416,1216.46 823.003,1213.74 823.589,1211.55 824.175,1211.87 824.762,1214.84 825.348,1217.56 825.935,1218.65 826.521,1217.31 827.108,1219.71 827.694,1219.41 828.28,1217.98 828.867,1217.93 829.453,1216.48 830.04,1215.37 830.626,1215.6 831.212,1215.75 831.799,1213.35 832.385,1215.08 832.972,1216.53 833.558,1215.06 834.145,1216.5 834.731,1215.18 835.317,1216.37 835.904,1216.44 836.49,1219.36 837.077,1217.74 837.663,1217.58 838.249,1217.34 838.836,1217.42 839.422,1218.8 840.009,1214.55 840.595,1213.33 841.181,1213.51 841.768,1215.02 842.354,1215.25 842.941,1216.7 843.527,1218.1 844.114,1220.78 844.7,1222.04 845.286,1219.27 845.873,1220.42 846.459,1219.21 847.046,1216.43 847.632,1213.8 848.218,1213.91 848.805,1212.69 849.391,1211.86 849.978,1212.17 850.564,1211.1 851.15,1215.35 851.737,1213.8 852.323,1214.03 852.91,1214.1 853.496,1211.21 854.083,1210.27 854.669,1208.06 855.255,1208.94 855.842,1206.87 856.428,1208.73 857.015,1209.37 857.601,1209.81 858.187,1209.96 858.774,1209.9 859.36,1208.72 859.947,1205.24 860.533,1207.47 861.119,1208.08 861.706,1208.52 862.292,1211.35 862.879,1213.15 863.465,1214.56 864.052,1216.12 864.638,1213.55 865.224,1213.58 865.811,1213.72 866.397,1212.8 866.984,1213.05 867.57,1213.08 868.156,1214.52 868.743,1214.68 869.329,1215.05 869.916,1217.9 870.502,1218.92 871.089,1221.35 871.675,1219.61 872.261,1218.29 872.848,1219.47 873.434,1220.65 874.021,1220.53 874.607,1221.57 875.193,1220.09 875.78,1220 876.366,1221.06 876.953,1219.58 877.539,1219.56 878.125,1220.85 878.712,1219.28 879.298,1217.84 879.885,1217.69 880.471,1216.29 881.058,1215.06 881.644,1215.31 882.23,1212.55 882.817,1212.69 883.403,1212.56 883.99,1212.69 884.576,1216.99 885.162,1221.01 885.749,1221.93 886.335,1221.27 886.922,1218.4 887.508,1219.75 888.094,1218.1 888.681,1224.69 889.267,1225.59 889.854,1224.95 890.44,1223.02 891.027,1226.52 891.613,1224.76 892.199,1224 892.786,1220.54 893.372,1220.29 893.959,1220.1 894.545,1221.12 895.131,1219.88 895.718,1221 896.304,1220.79 896.891,1220.17 897.477,1220.17 898.063,1221.12 898.65,1216.61 899.236,1214.03 899.823,1216.77 900.409,1218.25 900.996,1217.99 901.582,1217.93 902.168,1218.1 902.755,1216.54 903.341,1216.6 903.928,1218.06 904.514,1218 905.1,1215.04 905.687,1215.15 906.273,1214.9 906.86,1214.89 907.446,1213.53 908.032,1213.73 908.619,1212.66 909.205,1215.11 909.792,1216.75 910.378,1215.17 910.965,1215.14 911.551,1216.19 912.137,1216.44 912.724,1216.7 913.31,1218.04 913.897,1219.09 914.483,1218.77 915.069,1217.15 915.656,1215.73 916.242,1215.36 916.829,1218.26 917.415,1220.74 918.002,1218.98 918.588,1220.16 919.174,1221.2 919.761,1222.3 920.347,1220.66 920.934,1221.66 921.52,1220.02 922.106,1216.95 922.693,1216.8 923.279,1214.21 923.866,1215.55 924.452,1214.3 925.038,1214.26 925.625,1214.47 926.211,1214.07 926.798,1214.1 927.384,1215.29 927.971,1216.57 928.557,1216.63 929.143,1219.16 929.73,1218.79 930.316,1218.68 930.903,1215.72 931.489,1211.64 932.075,1213.25 932.662,1216.11 933.248,1217.4 933.835,1217.18 934.421,1217.01 935.007,1216.72 935.594,1217.02 936.18,1214.16 936.767,1214.42 937.353,1211.62 937.94,1213.35 938.526,1213.52 939.112,1212.23 939.699,1212.7 940.285,1211.22 940.872,1212.71 941.458,1213.05 942.044,1214.49 942.631,1214.3 943.217,1214.43 943.804,1215.65 944.39,1215.53 944.976,1216.88 945.563,1218.3 946.149,1218.13 946.736,1217.8 947.322,1217.72 947.909,1220.34 948.495,1220.28 949.081,1221.3 949.668,1220.92 950.254,1220.8 950.841,1218 951.427,1216.24 952.013,1216.29 952.6,1218.68 953.186,1219.65 953.773,1219.25 954.359,1217.96 954.945,1220.44 955.532,1225.59 956.118,1226.44 956.705,1226 957.291,1226.57 957.878,1228.63 958.464,1225.22 959.05,1226.16 959.637,1220.14 960.223,1218.4 960.81,1216.9 961.396,1216.89 961.982,1218.24 962.569,1218.35 963.155,1218.19 963.742,1217.88 964.328,1216.77 964.915,1216.86 965.501,1215.41 966.087,1218.12 966.674,1216.6 967.26,1216.73 967.847,1216.51 968.433,1214.97 969.019,1213.67 969.606,1212.32 970.192,1211.39 970.779,1213.11 971.365,1212.13 971.951,1212.21 972.538,1215.04 973.124,1216.26 973.711,1216.22 974.297,1217.57 974.884,1216.35 975.47,1216.19 976.056,1217.46 976.643,1214.54 977.229,1213.31 977.816,1214.75 978.402,1214.96 978.988,1212.32 979.575,1209.88 980.161,1210.19 980.748,1207.81 981.334,1206.51 981.92,1205.95 982.507,1206.65 983.093,1205.78 983.68,1207.79 984.266,1209.68 984.853,1211.22 985.439,1209.03 986.025,1208.29 986.612,1205.82 987.198,1203.62 987.785,1205.72 988.371,1203.65 988.957,1205.69 989.544,1206.18 990.13,1209.37 990.717,1208.14 991.303,1209.72 991.889,1210 992.476,1210.36 993.062,1210.57 993.649,1210.97 994.235,1210.03 994.822,1211.7 995.408,1214.62 995.994,1214.66 996.581,1217.4 997.167,1217.27 997.754,1214.31 998.34,1214.81 998.926,1216.11 999.513,1214.68 1000.1,1214.71 1000.69,1213.22 1001.27,1213.2 1001.86,1212.14 1002.44,1212.44 1003.03,1215.29 1003.62,1219.39 1004.2,1218.85 1004.79,1218.62 1005.38,1221.21 1005.96,1221.17 1006.55,1218.49 1007.14,1217.14 1007.72,1217.13 1008.31,1217.21 1008.9,1217.39 1009.48,1215.8 1010.07,1215.74 1010.65,1215.77 1011.24,1215.82 1011.83,1217.28 1012.41,1216.97 1013,1215.82 1013.59,1217.05 1014.17,1212.75 1014.76,1211.81 1015.35,1213.54 1015.93,1213.62 1016.52,1212.37 1017.11,1211.19 1017.69,1212.48 1018.28,1214 1018.86,1212.87 1019.45,1215.61 1020.04,1214.14 1020.62,1214.04 1021.21,1216.94 1021.8,1215.59 1022.38,1214.46 1022.97,1215.54 1023.56,1212.71 1024.14,1214.17 1024.73,1215.5 1025.32,1215.63 1025.9,1218.23 1026.49,1219.35 1027.07,1221.88 1027.66,1223.11 1028.25,1223.02 1028.83,1223.71 1029.42,1225.91 1030.01,1225.42 1030.59,1220.86 1031.18,1218.82 1031.77,1217.13 1032.35,1216.89 1032.94,1216.79 1033.52,1219.15 1034.11,1214.82 1034.7,1215.92 1035.28,1217.12 1035.87,1216.94 1036.46,1215.48 1037.04,1216.62 1037.63,1215.06 1038.22,1215.07 1038.8,1216.68 1039.39,1217.89 1039.98,1212.1 1040.56,1209.64 1041.15,1208.66 1041.73,1211.56 1042.32,1211.56 1042.91,1210.5 1043.49,1213.39 1044.08,1213.39 1044.67,1210.76 1045.25,1210.98 1045.84,1211.46 1046.43,1214.12 1047.01,1212.88 1047.6,1211.67 1048.19,1213.09 1048.77,1213.03 1049.36,1212.18 1049.94,1212.23 1050.53,1209.82 1051.12,1212.74 1051.7,1211.57 1052.29,1211.49 1052.88,1214.29 1053.46,1216.92 1054.05,1216.87 1054.64,1216.76 1055.22,1214.2 1055.81,1215.53 1056.39,1216.92 1056.98,1217.87 1057.57,1213.86 1058.15,1212.4 1058.74,1212.6 1059.33,1213.05 1059.91,1210.35 1060.5,1210.38 1061.09,1210.49 1061.67,1211.04 1062.26,1211.19 1062.85,1210.2 1063.43,1209.01 1064.02,1209.16 1064.6,1210.83 1065.19,1213.88 1065.78,1213.74 1066.36,1210.93 1066.95,1209.74 1067.54,1208.79 1068.12,1210.45 1068.71,1210.53 1069.3,1209.5 1069.88,1213.92 1070.47,1213.71 1071.06,1212.2 1071.64,1213.69 1072.23,1215.22 1072.81,1215.22 1073.4,1212.25 1073.99,1214.88 1074.57,1219.27 1075.16,1216.34 1075.75,1217.39 1076.33,1215.64 1076.92,1217.07 1077.51,1216.95 1078.09,1218.28 1078.68,1219.58 1079.26,1217.88 1079.85,1217.59 1080.44,1214.76 1081.02,1220.09 1081.61,1219.6 1082.2,1218.3 1082.78,1218.35 1083.37,1216.72 1083.96,1216.91 1084.54,1216.87 1085.13,1218.22 1085.72,1217.95 1086.3,1217.93 1086.89,1217.59 1087.47,1218.69 1088.06,1217.49 1088.65,1215.87 1089.23,1215.89 1089.82,1215.68 1090.41,1217.14 1090.99,1219.74 1091.58,1219.58 1092.17,1223.28 1092.75,1225.56 1093.34,1224.85 1093.93,1224.52 1094.51,1224.01 1095.1,1222.09 1095.68,1223.08 1096.27,1222.58 1096.86,1220.92 1097.44,1219.35 1098.03,1217.95 1098.62,1217.98 1099.2,1217.88 1099.79,1218.79 1100.38,1221.23 1100.96,1221.03 1101.55,1222.07 1102.14,1221.66 1102.72,1218.73 1103.31,1217.4 1103.89,1215.75 1104.48,1215.84 1105.07,1217.21 1105.65,1218.8 1106.24,1219.9 1106.83,1218.12 1107.41,1217.97 1108,1217.94 1108.59,1216.26 1109.17,1217.63 1109.76,1215.02 1110.34,1217.69 1110.93,1217.51 1111.52,1215.99 1112.1,1214.5 1112.69,1215.81 1113.28,1214.27 1113.86,1211.31 1114.45,1211.09 1115.04,1209.94 1115.62,1210.2 1116.21,1214.32 1116.8,1215.47 1117.38,1217.96 1117.97,1217.7 1118.55,1216.14 1119.14,1212.19 1119.73,1209.27 1120.31,1209.75 1120.9,1209.97 1121.49,1211.45 1122.07,1210.29 1122.66,1214.4 1123.25,1213.01 1123.83,1212.79 1124.42,1212.91 1125.01,1211.89 1125.59,1212.13 1126.18,1212.33 1126.76,1211.21 1127.35,1207.52 1127.94,1209.37 1128.52,1208.22 1129.11,1208.67 1129.7,1210.36 1130.28,1210.35 1130.87,1213.27 1131.46,1213.64 1132.04,1211.2 1132.63,1212.87 1133.21,1210.01 1133.8,1215.91 1134.39,1214.44 1134.97,1213.06 1135.56,1211.88 1136.15,1208.04 1136.73,1206.97 1137.32,1208.5 1137.91,1205.96 1138.49,1205.07 1139.08,1205.29 1139.67,1207.24 1140.25,1206.69 1140.84,1207.4 1141.42,1209.23 1142.01,1209.92 1142.6,1210.28 1143.18,1209.31 1143.77,1205.47 1144.36,1206.03 1144.94,1208.25 1145.53,1210.26 1146.12,1210.65 1146.7,1209.61 1147.29,1207.18 1147.88,1208.89 1148.46,1208.92 1149.05,1207.96 1149.63,1208.33 1150.22,1207.43 1150.81,1210.56 1151.39,1209.43 1151.98,1208.43 1152.57,1209.1 1153.15,1212.23 1153.74,1211.16 1154.33,1211.34 1154.91,1209.91 1155.5,1213.01 1156.09,1210.54 1156.67,1208.13 1157.26,1208.32 1157.84,1208.63 1158.43,1211.43 1159.02,1211.7 1159.6,1213.24 1160.19,1214.33 1160.78,1212.87 1161.36,1211.79 1161.95,1214.82 1162.54,1213.52 1163.12,1216.5 1163.71,1216.5 1164.29,1216.46 1164.88,1217.91 1165.47,1216.68 1166.05,1218.09 1166.64,1218.24 1167.23,1218.42 1167.81,1219.83 1168.4,1219.89 1168.99,1220.96 1169.57,1220.38 1170.16,1218.64 1170.75,1218.3 1171.33,1216.86 1171.92,1215.11 1172.5,1219.21 1173.09,1220.65 1173.68,1221.62 1174.26,1222.76 1174.85,1223.66 1175.44,1223.41 1176.02,1217.46 1176.61,1218.38 1177.2,1214.1 1177.78,1215.61 1178.37,1216.9 1178.96,1215.38 1179.54,1215.18 1180.13,1217.88 1180.71,1219.13 1181.3,1218.87 1181.89,1218.69 1182.47,1221.28 1183.06,1220.69 1183.65,1218.98 1184.23,1217.12 1184.82,1217.99 1185.41,1220.48 1185.99,1220.16 1186.58,1218.36 1187.16,1218.49 1187.75,1216.74 1188.34,1216.45 1188.92,1216.36 1189.51,1217.61 1190.1,1218.63 1190.68,1221.21 1191.27,1222.25 1191.86,1221.76 1192.44,1222.58 1193.03,1221.8 1193.62,1221.42 1194.2,1220.76 1194.79,1221.44 1195.37,1219.81 1195.96,1216.96 1196.55,1216.88 1197.13,1217.97 1197.72,1216.36 1198.31,1216.42 1198.89,1215.05 1199.48,1214.95 1200.07,1213.76 1200.65,1212.35 1201.24,1211.05 1201.83,1212.64 1202.41,1211.29 1203,1208.69 1203.58,1208.98 1204.17,1209.39 1204.76,1208.35 1205.34,1209.78 1205.93,1207.3 1206.52,1207.68 1207.1,1205.03 1207.69,1206.88 1208.28,1208.7 1208.86,1207.59 1209.45,1209.2 1210.03,1209.63 1210.62,1208.7 1211.21,1210.57 1211.79,1211.04 1212.38,1212.34 1212.97,1212.22 1213.55,1212.16 1214.14,1215.01 1214.73,1216 1215.31,1215.89 1215.9,1215.29 1216.49,1215.27 1217.07,1211.04 1217.66,1209.82 1218.24,1208.7 1218.83,1210.35 1219.42,1210.71 1220,1210.93 1220.59,1211.07 1221.18,1211.41 1221.76,1211.41 1222.35,1210.57 1222.94,1212.14 1223.52,1211.23 1224.11,1211.24 1224.7,1210.21 1225.28,1207.83 1225.87,1209.41 1226.45,1209.59 1227.04,1212.42 1227.63,1212.82 1228.21,1210.09 1228.8,1210.51 1229.39,1211.97 1229.97,1212.16 1230.56,1211 1231.15,1212.24 1231.73,1212.61 1232.32,1214.2 1232.91,1211.12 1233.49,1208.46 1234.08,1209.99 1234.66,1214 1235.25,1214.03 1235.84,1216.68 1236.42,1216.37 1237.01,1217.53 1237.6,1217.4 1238.18,1218.82 1238.77,1219.63 1239.36,1219.4 1239.94,1216.42 1240.53,1219.2 1241.11,1219 1241.7,1214.75 1242.29,1214.85 1242.87,1214.78 1243.46,1216.21 1244.05,1217.13 1244.63,1220.64 1245.22,1217.83 1245.81,1215.05 1246.39,1212.23 1246.98,1212.78 1247.57,1214.33 1248.15,1214.28 1248.74,1214.25 1249.32,1215.67 1249.91,1212.77 1250.5,1214.17 1251.08,1214.12 1251.67,1214.13 1252.26,1214.07 1252.84,1213.93 1253.43,1212.43 1254.02,1210.95 1254.6,1212.65 1255.19,1216.58 1255.78,1216.62 1256.36,1217.71 1256.95,1214.71 1257.53,1214.67 1258.12,1213.02 1258.71,1214.51 1259.29,1214.61 1259.88,1213.44 1260.47,1216.16 1261.05,1216.14 1261.64,1213.4 1262.23,1213.64 1262.81,1213.86 1263.4,1213.77 1263.98,1214.02 1264.57,1216.69 1265.16,1217.95 1265.74,1216.41 1266.33,1213.63 1266.92,1213.82 1267.5,1215.09 1268.09,1216.62 1268.68,1215.27 1269.26,1214.01 1269.85,1211.27 1270.44,1213.29 1271.02,1216.01 1271.61,1216.03 1272.19,1217.21 1272.78,1215.6 1273.37,1215.73 1273.95,1212.99 1274.54,1214.45 1275.13,1211.8 1275.71,1214.55 1276.3,1214.64 1276.89,1216.1 1277.47,1217.03 1278.06,1215.82 1278.65,1213.11 1279.23,1212.79 1279.82,1215.28 1280.4,1215.38 1280.99,1212.59 1281.58,1214.13 1282.16,1212.99 1282.75,1211.67 1283.34,1209.02 1283.92,1209.06 1284.51,1210.53 1285.1,1212.12 1285.68,1214.6 1286.27,1212.87 1286.86,1212.72 1287.44,1211.49 1288.03,1211.71 1288.61,1210.51 1289.2,1206.62 1289.79,1206.97 1290.37,1205.97 1290.96,1207.64 1291.55,1207.92 1292.13,1205.82 1292.72,1207.76 1293.31,1206.86 1293.89,1207.11 1294.48,1207.59 1295.06,1207.83 1295.65,1207.96 1296.24,1207.03 1296.82,1207.74 1297.41,1204.07 1298,1204.64 1298.58,1205.29 1299.17,1205.95 1299.76,1210.42 1300.34,1208.02 1300.93,1207.24 1301.52,1207.58 1302.1,1205.69 1302.69,1206.22 1303.27,1206.77 1303.86,1211.31 1304.45,1211.35 1305.03,1208.73 1305.62,1208.99 1306.21,1209.41 1306.79,1209.83 1307.38,1210.16 1307.97,1210.51 1308.55,1212.13 1309.14,1209.42 1309.73,1208.45 1310.31,1210.12 1310.9,1210.39 1311.48,1208.96 1312.07,1209.25 1312.66,1209.29 1313.24,1209.71 1313.83,1212.43 1314.42,1212.69 1315,1214.12 1315.59,1213.14 1316.18,1213.26 1316.76,1213.44 1317.35,1210.64 1317.93,1213.39 1318.52,1212.14 1319.11,1213.44 1319.69,1214.68 1320.28,1213.47 1320.87,1214.99 1321.45,1215.27 1322.04,1215.1 1322.63,1214.95 1323.21,1213.68 1323.8,1213.48 1324.39,1213.73 1324.97,1213.86 1325.56,1214 1326.14,1212.62 1326.73,1215.26 1327.32,1215.59 1327.9,1217.13 1328.49,1218.19 1329.08,1218.21 1329.66,1219.44 1330.25,1220.68 1330.84,1218.82 1331.42,1218.64 1332.01,1218.48 1332.6,1218.06 1333.18,1216.57 1333.77,1216.46 1334.35,1217.55 1334.94,1216.05 1335.53,1213.23 1336.11,1214.94 1336.7,1217.84 1337.29,1216.32 1337.87,1216.16 1338.46,1214.98 1339.05,1217.67 1339.63,1220.5 1340.22,1221.66 1340.8,1221.13 1341.39,1222.42 1341.98,1223.49 1342.56,1227.04 1343.15,1224.95 1343.74,1224.07 1344.32,1223.73 1344.91,1221.58 1345.5,1221.41 1346.08,1222.31 1346.67,1220.94 1347.26,1224.61 1347.84,1224.08 1348.43,1222.45 1349.01,1223.72 1349.6,1221.87 1350.19,1219.91 1350.77,1219.33 1351.36,1219.14 1351.95,1220.2 1352.53,1218.63 1353.12,1216.82 1353.71,1219.62 1354.29,1218.99 1354.88,1218.83 1355.47,1218.65 1356.05,1217.29 1356.64,1217.02 1357.22,1216.94 1357.81,1219.19 1358.4,1219.98 1358.98,1222.37 1359.57,1220.34 1360.16,1218.78 1360.74,1217.24 1361.33,1217.28 1361.92,1218.25 1362.5,1218.11 1363.09,1216.43 1363.68,1218.8 1364.26,1217.1 1364.85,1215.69 1365.43,1214.22 1366.02,1214.12 1366.61,1212.66 1367.19,1214.14 1367.78,1214.1 1368.37,1212.65 1368.95,1213.81 1369.54,1211.21 1370.13,1211.36 1370.71,1214.16 1371.3,1209.79 1371.88,1211.25 1372.47,1211.35 1373.06,1214.17 1373.64,1214.06 1374.23,1215.35 1374.82,1215.49 1375.4,1218.01 1375.99,1217.75 1376.58,1214.82 1377.16,1216.6 1377.75,1216.29 1378.34,1214.8 1378.92,1215.83 1379.51,1214.38 1380.09,1214.23 1380.68,1212.98 1381.27,1213.28 1381.85,1212.1 1382.44,1216.46 1383.03,1215.98 1383.61,1216 1384.2,1216.03 1384.79,1217.13 1385.37,1217.05 1385.96,1215.65 1386.55,1215.48 1387.13,1215.47 1387.72,1215.39 1388.3,1215.15 1388.89,1216.52 1389.48,1215.25 1390.06,1215.32 1390.65,1215.3 1391.24,1213.75 1391.82,1216.39 1392.41,1217.48 1393,1217.39 1393.58,1221.19 1394.17,1220.96 1394.75,1217.91 1395.34,1216.5 1395.93,1218.9 1396.51,1216.03 1397.1,1215.82 1397.69,1214.55 1398.27,1212.97 1398.86,1215.59 1399.45,1218.21 1400.03,1216.64 1400.62,1217.71 1401.21,1217.49 1401.79,1214.77 1402.38,1213.29 1402.96,1211.97 1403.55,1213.36 1404.14,1210.76 1404.72,1209.8 1405.31,1209.93 1405.9,1211.65 1406.48,1213.21 1407.07,1211.74 1407.66,1212.91 1408.24,1214.45 1408.83,1215.57 1409.42,1218.25 1410,1216.66 1410.59,1214.92 1411.17,1217.41 1411.76,1221.47 1412.35,1220.97 1412.93,1220.73 1413.52,1220.69 1414.11,1218.87 1414.69,1217.08 1415.28,1218.14 1415.87,1216.24 1416.45,1217.3 1417.04,1218.48 1417.63,1219.51 1418.21,1219.41 1418.8,1219.25 1419.38,1219.05 1419.97,1215.89 1420.56,1214.43 1421.14,1213.07 1421.73,1214.51 1422.32,1214.83 1422.9,1216.09 1423.49,1214.52 1424.08,1216.88 1424.66,1216.59 1425.25,1216.41 1425.83,1218.02 1426.42,1219.01 1427.01,1218.89 1427.59,1217.26 1428.18,1216.11 1428.77,1214.83 1429.35,1214.58 1429.94,1217.17 1430.53,1215.63 1431.11,1215.83 1431.7,1217.19 1432.29,1217.01 1432.87,1218.27 1433.46,1212.83 1434.04,1216.9 1434.63,1216.85 1435.22,1216.67 1435.8,1216.61 1436.39,1213.68 1436.98,1214.01 1437.56,1215.42 1438.15,1218 1438.74,1216.59 1439.32,1215.14 1439.91,1213.83 1440.5,1212.17 1441.08,1215.06 1441.67,1215.14 1442.25,1216.16 1442.84,1214.99 1443.43,1216.28 1444.01,1215.13 1444.6,1213.75 1445.19,1215.25 1445.77,1216.55 1446.36,1219.19 1446.95,1218.9 1447.53,1219.96 1448.12,1219.91 1448.7,1215.9 1449.29,1213.01 1449.88,1211.91 1450.46,1214.88 1451.05,1214.6 1451.64,1217.41 1452.22,1217.29 1452.81,1217.11 1453.4,1215.62 1453.98,1215.58 1454.57,1215.89 1455.16,1217.28 1455.74,1217.18 1456.33,1220.09 1456.91,1220.07 1457.5,1218.35 1458.09,1216.77 1458.67,1216.77 1459.26,1215.46 1459.85,1216.75 1460.43,1215.04 1461.02,1217.73 1461.61,1220.18 1462.19,1221.39 1462.78,1221.19 1463.37,1219.61 1463.95,1221.91 1464.54,1222.8 1465.12,1221.06 1465.71,1222.21 1466.3,1221.93 1466.88,1218.85 1467.47,1215.88 1468.06,1216.01 1468.64,1219.89 1469.23,1219.8 1469.82,1219.53 1470.4,1215.24 1470.99,1215.11 1471.57,1216.46 1472.16,1217.94 1472.75,1218.06 1473.33,1220.33 1473.92,1218.62 1474.51,1217.3 1475.09,1217.14 1475.68,1218.28 1476.27,1218.1 1476.85,1217.94 1477.44,1216.34 1478.03,1216.27 1478.61,1215.24 1479.2,1215.16 1479.78,1213.7 1480.37,1213.36 1480.96,1214.64 1481.54,1214.52 1482.13,1215.89 1482.72,1214.48 1483.3,1215.9 1483.89,1212.02 1484.48,1208.22 1485.06,1209.78 1485.65,1212.45 1486.24,1212.73 1486.82,1213.04 1487.41,1211.42 1487.99,1212.8 1488.58,1213.95 1489.17,1215.13 1489.75,1214.8 1490.34,1212.04 1490.93,1212.31 1491.51,1215.23 1492.1,1213.91 1492.69,1215.34 1493.27,1215.36 1493.86,1215.28 1494.45,1214.1 1495.03,1212.46 1495.62,1213.52 1496.2,1213.64 1496.79,1213.61 1497.38,1215.09 1497.96,1214.12 1498.55,1214.1 1499.14,1212.6 1499.72,1211.34 1500.31,1210.06 1500.9,1209.08 1501.48,1208.05 1502.07,1209.81 1502.65,1210.27 1503.24,1211.77 1503.83,1212.23 1504.41,1210.89 1505,1208.28 1505.59,1208.76 1506.17,1208.13 1506.76,1208.73 1507.35,1208.88 1507.93,1207.87 1508.52,1211.23 1509.11,1210.01 1509.69,1213.12 1510.28,1210.01 1510.86,1208.89 1511.45,1209.1 1512.04,1213.47 1512.62,1213.75 1513.21,1215.16 1513.8,1216.46 1514.38,1216.19 1514.97,1213.5 1515.56,1213.69 1516.14,1211.23 1516.73,1211.4 1517.32,1208.96 1517.9,1208.14 1518.49,1211.21 1519.07,1211.13 1519.66,1212.75 1520.25,1212.91 1520.83,1212.93 1521.42,1215.49 1522.01,1218.45 1522.59,1218.67 1523.18,1221.28 1523.77,1221.13 1524.35,1222.03 1524.94,1221.74 1525.52,1222.62 1526.11,1223.82 1526.7,1222.08 1527.28,1223.04 1527.87,1222.55 1528.46,1223.39 1529.04,1222.94 1529.63,1221.39 1530.22,1222.25 1530.8,1223.2 1531.39,1221.28 1531.98,1222.28 1532.56,1220.56 1533.15,1216.05 1533.73,1213.32 1534.32,1211.95 1534.91,1212.06 1535.49,1213.32 1536.08,1214.91 1536.67,1216.21 1537.25,1214.95 1537.84,1214.96 1538.43,1219.06 1539.01,1217.13 1539.6,1219.65 1540.19,1220.58 1540.77,1221.55 1541.36,1218.56 1541.94,1222.51 1542.53,1218.01 1543.12,1216.55 1543.7,1215.15 1544.29,1214.9 1544.88,1214.76 1545.46,1216.21 1546.05,1214.79 1546.64,1213.39 1547.22,1210.83 1547.81,1212.43 1548.4,1211.22 1548.98,1209.97 1549.57,1210.35 1550.15,1211.7 1550.74,1210.36 1551.33,1210.28 1551.91,1210.86 1552.5,1208.41 1553.09,1207.3 1553.67,1206.33 1554.26,1203.88 1554.85,1205.68 1555.43,1207.23 1556.02,1206.02 1556.6,1206.33 1557.19,1209.35 1557.78,1209.57 1558.36,1208.35 1558.95,1208.39 1559.54,1208.5 1560.12,1210.06 1560.71,1206.22 1561.3,1210.5 1561.88,1210.75 1562.47,1209.76 1563.06,1209.87 1563.64,1212.93 1564.23,1213.35 1564.81,1212.14 1565.4,1209.54 1565.99,1211.16 1566.57,1208.88 1567.16,1209.21 1567.75,1210.98 1568.33,1211.06 1568.92,1208.56 1569.51,1207.94 1570.09,1207 1570.68,1207.42 1571.27,1209.24 1571.85,1210.71 1572.44,1210.97 1573.02,1215.11 1573.61,1216.38 1574.2,1216.6 1574.78,1215.06 1575.37,1212.3 1575.96,1213.81 1576.54,1214.07 1577.13,1215.52 1577.72,1212.85 1578.3,1210.31 1578.89,1211.72 1579.47,1214.66 1580.06,1214.93 1580.65,1216.13 1581.23,1217.21 1581.82,1218.49 1582.41,1222.13 1582.99,1221.9 1583.58,1221.5 1584.17,1220.72 1584.75,1219.19 1585.34,1218.77 1585.93,1215.79 1586.51,1218.25 1587.1,1215.2 1587.68,1216.8 1588.27,1216.53 1588.86,1211 1589.44,1212.5 1590.03,1214.04 1590.62,1218.06 1591.2,1221.68 1591.79,1219.97 1592.38,1221.01 1592.96,1222.01 1593.55,1224.4 1594.14,1223.87 1594.72,1222.13 1595.31,1222.66 1595.89,1221.31 1596.48,1218.26 1597.07,1218.24 1597.65,1217.93 1598.24,1220.29 1598.83,1222.5 1599.41,1223.39 1600,1222.75 1600.59,1221.17 1601.17,1220.62 1601.76,1218.91 1602.34,1217.09 1602.93,1215.69 1603.52,1215.63 1604.1,1218.01 1604.69,1217.89 1605.28,1216.05 1605.86,1216.01 1606.45,1215.99 1607.04,1218.76 1607.62,1218.65 1608.21,1219.82 1608.8,1221.19 1609.38,1221.94 1609.97,1221.95 1610.55,1221.32 1611.14,1220.63 1611.73,1220.51 1612.31,1219.02 1612.9,1215.73 1613.49,1214.54 1614.07,1213.02 1614.66,1214.41 1615.25,1211.67 1615.83,1211.79 1616.42,1213.23 1617.01,1216.25 1617.59,1218.93 1618.18,1218.51 1618.76,1216.82 1619.35,1215.07 1619.94,1212.46 1620.52,1214.08 1621.11,1211.38 1621.7,1211.43 1622.28,1212.87 1622.87,1212.93 1623.46,1211.32 1624.04,1208.83 1624.63,1209.36 1625.22,1211.35 1625.8,1208.41 1626.39,1208.74 1626.97,1211.79 1627.56,1211.79 1628.15,1209.42 1628.73,1208.33 1629.32,1207.29 1629.91,1207.63 1630.49,1206.62 1631.08,1208.75 1631.67,1207.85 1632.25,1209.49 1632.84,1208.22 1633.42,1213.78 1634.01,1215.13 1634.6,1216.36 1635.18,1216.02 1635.77,1217.13 1636.36,1214.18 1636.94,1211.43 1637.53,1211.36 1638.12,1210.31 1638.7,1210.57 1639.29,1212.4 1639.88,1211.23 1640.46,1211.26 1641.05,1211.61 1641.63,1210.6 1642.22,1210.57 1642.81,1208.29 1643.39,1208.38 1643.98,1209.83 1644.57,1211.61 1645.15,1213 1645.74,1214.4 1646.33,1214.43 1646.91,1214.59 1647.5,1211.82 1648.09,1209.15 1648.67,1208.02 1649.26,1208.33 1649.84,1209.8 1650.43,1211.42 1651.02,1215.34 1651.6,1212.66 1652.19,1212.98 1652.78,1215.68 1653.36,1215.49 1653.95,1216.68 1654.54,1216.73 1655.12,1216.63 1655.71,1216.7 1656.29,1215.41 1656.88,1215.6 1657.47,1216.92 1658.05,1215.43 1658.64,1214.11 1659.23,1215.45 1659.81,1212.46 1660.4,1211.48 1660.99,1210.6 1661.57,1209.68 1662.16,1209.8 1662.75,1211.51 1663.33,1215.68 1663.92,1214.29 1664.5,1214.21 1665.09,1215.45 1665.68,1216.55 1666.26,1216.4 1666.85,1216.19 1667.44,1213.73 1668.02,1209.69 1668.61,1211.52 1669.2,1212.89 1669.78,1212.89 1670.37,1211.38 1670.96,1211.45 1671.54,1209.86 1672.13,1208.94 1672.71,1209.17 1673.3,1210.8 1673.89,1212.52 1674.47,1214.07 1675.06,1216.93 1675.65,1216.78 1676.23,1212.73 1676.82,1210.46 1677.41,1206.73 1677.99,1206.14 1678.58,1207.82 1679.17,1208.14 1679.75,1209.64 1680.34,1208.36 1680.92,1207.44 1681.51,1209.18 1682.1,1206.7 1682.68,1206.78 1683.27,1207.09 1683.86,1206.09 1684.44,1210.51 1685.03,1210.42 1685.62,1213.46 1686.2,1213.62 1686.79,1214.97 1687.37,1213.65 1687.96,1213.7 1688.55,1214.07 1689.13,1215.48 1689.72,1218.1 1690.31,1221.88 1690.89,1220.06 1691.48,1219.56 1692.07,1218.22 1692.65,1214.09 1693.24,1215.44 1693.83,1215.41 1694.41,1215.42 1695,1215.37 1695.58,1209.93 1696.17,1212.81 1696.76,1211.64 1697.34,1213.16 1697.93,1214.72 1698.52,1218.61 1699.1,1217.31 1699.69,1217 1700.28,1218.24 1700.86,1217.87 1701.45,1219.07 1702.04,1223.89 1702.62,1217.99 1703.21,1217.7 1703.79,1221.79 1704.38,1218.54 1704.97,1214.16 1705.55,1212.81 1706.14,1211.44 1706.73,1208.58 1707.31,1211.37 1707.9,1211.68 1708.49,1213.08 1709.07,1212.85 1709.66,1211.48 1710.24,1210.41 1710.83,1206.58 1711.42,1208.54 1712,1208.51 1712.59,1209.98 1713.18,1210.11 1713.76,1214.36 1714.35,1215.94 1714.94,1217.14 1715.52,1214.21 1716.11,1214.36 1716.7,1211.71 1717.28,1209.26 1717.87,1208.06 1718.45,1207.03 1719.04,1205.99 1719.63,1206.38 1720.21,1208.22 1720.8,1208.18 1721.39,1210.03 1721.97,1207.69 1722.56,1208.31 1723.15,1205.62 1723.73,1205.93 1724.32,1203.93 1724.91,1205.9 1725.49,1206.43 1726.08,1208.06 1726.66,1211.15 1727.25,1212.7 1727.84,1213.14 1728.42,1215.86 1729.01,1214.47 1729.6,1213.34 1730.18,1214.38 1730.77,1214.57 1731.36,1216.13 1731.94,1214.64 1732.53,1211.94 1733.11,1213.54 1733.7,1211.12 1734.29,1211.57 1734.87,1210.16 1735.46,1210.47 1736.05,1213.28 1736.63,1214.5 1737.22,1214.55 1737.81,1218.65 1738.39,1215.95 1738.98,1217.12 1739.57,1219.78 1740.15,1221.06 1740.74,1221.9 1741.32,1221.7 1741.91,1223.77 1742.5,1224.55 1743.08,1222.74 1743.67,1222.1 1744.26,1222.96 1744.84,1223.81 1745.43,1224.31 1746.02,1220.02 1746.6,1219.67 1747.19,1216.56 1747.78,1216.13 1748.36,1216.02 1748.95,1217.16 1749.53,1214.41 1750.12,1213.11 1750.71,1213.27 1751.29,1213.14 1751.88,1217.13 1752.47,1216.87 1753.05,1216.63 1753.64,1213.91 1754.23,1215.5 1754.81,1216.88 1755.4,1217.99 1755.99,1216.34 1756.57,1216.3 1757.16,1217.58 1757.74,1216.25 1758.33,1216.01 1758.92,1220.32 1759.5,1221.46 1760.09,1224.79 1760.68,1224.25 1761.26,1220.97 1761.85,1219.11 1762.44,1216 1763.02,1217.33 1763.61,1217.14 1764.19,1214.05 1764.78,1214.09 1765.37,1215.64 1765.95,1215.7 1766.54,1214.24 1767.13,1215.88 1767.71,1214.17 1768.3,1213.97 1768.89,1213.96 1769.47,1215.35 1770.06,1213.61 1770.65,1215.21 1771.23,1212.36 1771.82,1211.04 1772.4,1211.09 1772.99,1211.32 1773.58,1212.82 1774.16,1211.52 1774.75,1211.83 1775.34,1212.19 1775.92,1209.58 1776.51,1209.96 1777.1,1207.47 1777.68,1209.22 1778.27,1208.44 1778.86,1207.7 1779.44,1208.25 1780.03,1208.65 1780.61,1210.03 1781.2,1211.65 1781.79,1213.43 1782.37,1215.15 1782.96,1215.04 1783.55,1216.18 1784.13,1217.77 1784.72,1220.52 1785.31,1220.41 1785.89,1221.29 1786.48,1221.08 1787.06,1220.57 1787.65,1217.46 1788.24,1219.77 1788.82,1216.77 1789.41,1216.95 1790,1215.44 1790.58,1212.43 1791.17,1214.05 1791.76,1213.92 1792.34,1214.23 1792.93,1214.21 1793.52,1213.16 1794.1,1211.72 1794.69,1214.49 1795.27,1215.5 1795.86,1212.83 1796.45,1215.78 1797.03,1214.04 1797.62,1212.65 1798.21,1210.12 1798.79,1211.68 1799.38,1212.02 1799.97,1209.98 1800.55,1210.35 1801.14,1213.28 1801.73,1212.29 1802.31,1211.02 1802.9,1209.94 1803.48,1211.55 1804.07,1213.07 1804.66,1211.83 1805.24,1210.55 1805.83,1210.6 1806.42,1210.99 1807,1210.03 1807.59,1211.62 1808.18,1212.77 1808.76,1211.55 1809.35,1211.75 1809.94,1209.32 1810.52,1209.7 1811.11,1209.7 1811.69,1208.58 1812.28,1210.27 1812.87,1210.39 1813.45,1211.87 1814.04,1212.02 1814.63,1212.12 1815.21,1210.74 1815.8,1209.47 1816.39,1211.18 1816.97,1211.23 1817.56,1211.39 1818.14,1210.4 1818.73,1211.86 1819.32,1211.88 1819.9,1210.45 1820.49,1213.42 1821.08,1210.69 1821.66,1212.35 1822.25,1212.24 1822.84,1210.84 1823.42,1213.59 1824.01,1214.85 1824.6,1214.75 1825.18,1215 1825.77,1215.01 1826.35,1212.55 1826.94,1212.89 1827.53,1213.02 1828.11,1213.16 1828.7,1211.99 1829.29,1210.84 1829.87,1213.72 1830.46,1212.31 1831.05,1212.22 1831.63,1213.78 1832.22,1212.7 1832.81,1214.03 1833.39,1212.84 1833.98,1211.57 1834.56,1211.7 1835.15,1214.42 1835.74,1213.27 1836.32,1217.31 1836.91,1215.89 1837.5,1216.07 1838.08,1216.07 1838.67,1217.44 1839.26,1217.25 1839.84,1217.16 1840.43,1214.17 1841.01,1215.19 1841.6,1217.84 1842.19,1220.28 1842.77,1218.73 1843.36,1217.17 1843.95,1218.47 1844.53,1216.73 1845.12,1216.79 1845.71,1219.13 1846.29,1220.36 1846.88,1220.15 1847.47,1219.87 1848.05,1220.94 1848.64,1223.32 1849.22,1222.8 1849.81,1218.34 1850.4,1222.13 1850.98,1220.22 1851.57,1221.2 1852.16,1220.88 1852.74,1217.95 1853.33,1216.38 1853.92,1218.79 1854.5,1218.61 1855.09,1218.63 1855.68,1216.94 1856.26,1216.71 1856.85,1218.09 1857.43,1219.22 1858.02,1216.58 1858.61,1213.85 1859.19,1215.36 1859.78,1216.5 1860.37,1215.03 1860.95,1215.07 1861.54,1213.42 1862.13,1210.93 1862.71,1209.71 1863.3,1212.5 1863.88,1209.87 1864.47,1210.04 1865.06,1208.96 1865.64,1209.17 1866.23,1208.23 1866.82,1208.45 1867.4,1211.27 1867.99,1211.46 1868.58,1210.48 1869.16,1210.7 1869.75,1208.22 1870.34,1208.45 1870.92,1208.94 1871.51,1210.69 1872.09,1212.15 1872.68,1212.49 1873.27,1211.53 1873.85,1214.09 1874.44,1211.2 1875.03,1211.62 1875.61,1213.46 1876.2,1212.41 1876.79,1210.94 1877.37,1212.51 1877.96,1213.91 1878.55,1212.74 1879.13,1214.07 1879.72,1214.05 1880.3,1212.72 1880.89,1208.56 1881.48,1206.13 1882.06,1203.78 1882.65,1208.42 1883.24,1208.59 1883.82,1208.87 1884.41,1208.91 1885,1209.23 1885.58,1209.42 1886.17,1209.64 1886.76,1208.43 1887.34,1211.37 1887.93,1211.66 1888.51,1213.1 1889.1,1210.33 1889.69,1210.62 1890.27,1212.43 1890.86,1211.04 1891.45,1209.96 1892.03,1211.59 1892.62,1210.22 1893.21,1209.14 1893.79,1209.68 1894.38,1212.75 1894.96,1215.34 1895.55,1215.18 1896.14,1215.27 1896.72,1216.66 1897.31,1213.8 1897.9,1217.63 1898.48,1217.29 1899.07,1215.94 1899.66,1217.38 1900.24,1217.23 1900.83,1218.86 1901.42,1219.99 1902,1221.14 1902.59,1221.18 1903.17,1221.16 1903.76,1222.13 1904.35,1222.95 1904.93,1221.44 1905.52,1221.11 1906.11,1222.11 1906.69,1223.13 1907.28,1220.24 1907.87,1221.2 1908.45,1220.53 1909.04,1220.37 1909.63,1221.34 1910.21,1221.26 1910.8,1219.96 1911.38,1216.66 1911.97,1218.05 1912.56,1215.18 1913.14,1213.78 1913.73,1212.34 1914.32,1212.25 1914.9,1216.64 1915.49,1219.14 1916.08,1216.08 1916.66,1217.26 1917.25,1214.52 1917.83,1213.01 1918.42,1212.9 1919.01,1214.19 1919.59,1215.62 1920.18,1212.9 1920.77,1211.68 1921.35,1217.27 1921.94,1217.2 1922.53,1215.96 1923.11,1217.24 1923.7,1218.38 1924.29,1215.11 1924.87,1218.92 1925.46,1218.72 1926.04,1219.86 1926.63,1222.21 1927.22,1220.32 1927.8,1221.48 1928.39,1218.65 1928.98,1217.32 1929.56,1218.2 1930.15,1218.09 1930.74,1220.39 1931.32,1217.4 1931.91,1215.84 1932.5,1215.93 1933.08,1213.52 1933.67,1213.34 1934.25,1213.5 1934.84,1210.95 1935.43,1211.02 1936.01,1213.51 1936.6,1213.41 1937.19,1213.14 1937.77,1210.25 1938.36,1212.99 1938.95,1211.67 1939.53,1214.55 1940.12,1215.95 1940.71,1217.44 1941.29,1218.71 1941.88,1215.45 1942.46,1213.95 1943.05,1215.06 1943.64,1216.24 1944.22,1216.48 1944.81,1217.9 1945.4,1216.47 1945.98,1215.16 1946.57,1215.02 1947.16,1213.41 1947.74,1213.36 1948.33,1216.24 1948.91,1216.13 1949.5,1215.98 1950.09,1217.56 1950.67,1217.49 1951.26,1218.71 1951.85,1218.61 1952.43,1218.08 1953.02,1217.88 1953.61,1216.31 1954.19,1216.38 1954.78,1216.32 1955.37,1214.89 1955.95,1214.68 1956.54,1214.55 1957.12,1215.66 1957.71,1218.4 1958.3,1216.72 1958.88,1216.85 1959.47,1215.49 1960.06,1215.72 1960.64,1217 1961.23,1215.49 1961.82,1214.33 1962.4,1214.53 1962.99,1214.71 1963.58,1218.89 1964.16,1218.95 1964.75,1217.67 1965.33,1218.9 1965.92,1219.78 1966.51,1218.46 1967.09,1217.14 1967.68,1211.86 1968.27,1210.84 1968.85,1209.2 1969.44,1210.76 1970.03,1210.91 1970.61,1209.65 1971.2,1211.11 1971.78,1212.51 1972.37,1214.19 1972.96,1211.29 1973.54,1211.52 1974.13,1212.68 1974.72,1213.93 1975.3,1215.36 1975.89,1215.41 1976.48,1215.4 1977.06,1215.43 1977.65,1214.26 1978.24,1214.31 1978.82,1213.02 1979.41,1212.86 1979.99,1212.7 1980.58,1212.82 1981.17,1216.49 1981.75,1217.35 1982.34,1215.62 1982.93,1215.36 1983.51,1212.53 1984.1,1211.47 1984.69,1210.55 1985.27,1213.34 1985.86,1213.36 1986.45,1213.49 1987.03,1214.97 1987.62,1217.76 1988.2,1214.82 1988.79,1213.67 1989.38,1212.42 1989.96,1213.71 1990.55,1212.49 1991.14,1212.45 1991.72,1212.57 1992.31,1214.35 1992.9,1214.29 1993.48,1212.97 1994.07,1215.95 1994.65,1217.16 1995.24,1217.07 1995.83,1214.33 1996.41,1214.55 1997,1210.79 1997.59,1210.9 1998.17,1210.06 1998.76,1209.02 1999.35,1210.62 1999.93,1212.09 2000.52,1214.79 2001.11,1211.96 2001.69,1211.77 2002.28,1213.39 2002.86,1213.4 2003.45,1213.17 2004.04,1212.89 2004.62,1211.55 2005.21,1215.73 2005.8,1214.32 2006.38,1213.07 2006.97,1215.41 2007.56,1215.13 2008.14,1213.74 2008.73,1213.56 2009.32,1217.66 2009.9,1215.95 2010.49,1215.61 2011.07,1216.95 2011.66,1214.34 2012.25,1214.06 2012.83,1216.88 2013.42,1214.25 2014.01,1214.07 2014.59,1212.9 2015.18,1214.25 2015.77,1211.52 2016.35,1212.88 2016.94,1212.79 2017.53,1214.21 2018.11,1218.13 2018.7,1215.38 2019.28,1213.81 2019.87,1213.75 2020.46,1215.3 2021.04,1216.67 2021.63,1216.62 2022.22,1213.79 2022.8,1212.49 2023.39,1210.09 2023.98,1208.86 2024.56,1209.19 2025.15,1208.14 2025.73,1209.82 2026.32,1211.45 2026.91,1212.76 2027.49,1211.44 2028.08,1210.29 2028.67,1206.4 2029.25,1206.93 2029.84,1203.2 2030.43,1201.27 2031.01,1201.97 2031.6,1202.48 2032.19,1203.16 2032.77,1202.49 2033.36,1204.82 2033.94,1202.9 2034.53,1202.21 2035.12,1204.23 2035.7,1204.76 2036.29,1206.93 2036.88,1208.71 2037.46,1210.42 2038.05,1209.35 2038.64,1209.72 2039.22,1212.61 2039.81,1215.49 2040.4,1216.91 2040.98,1216.88 2041.57,1216.89 2042.15,1216.64 2042.74,1216.6 2043.33,1217.78 2043.91,1220.51 2044.5,1223.14 2045.09,1222.64 2045.67,1224.78 2046.26,1225.65 2046.85,1224.75 2047.43,1224.43 2048.02,1223.87 2048.6,1222.28 2049.19,1222.08 2049.78,1222.03 2050.36,1221.69 2050.95,1221.31 2051.54,1219.61 2052.12,1219.51 2052.71,1219.17 2053.3,1216.62 2053.88,1215.27 2054.47,1214.14 2055.06,1211.53 2055.64,1211.7 2056.23,1212.81 2056.81,1212.85 2057.4,1211.76 2057.99,1211.81 2058.57,1211.84 2059.16,1209.15 2059.75,1208.03 2060.33,1205.7 2060.92,1206.33 2061.51,1208.22 2062.09,1204.47 2062.68,1205.15 2063.27,1205.72 2063.85,1206.29 2064.44,1205.41 2065.02,1206.87 2065.61,1207.27 2066.2,1208.79 2066.78,1206.01 2067.37,1208.02 2067.96,1207.05 2068.54,1205.86 2069.13,1205.01 2069.72,1205.59 2070.3,1208.89 2070.89,1207.8 2071.48,1210.95 2072.06,1209.7 2072.65,1209.78 2073.23,1212.7 2073.82,1214.11 2074.41,1212.84 2074.99,1212.84 2075.58,1215.57 2076.17,1215.3 2076.75,1216.54 2077.34,1213.9 2077.93,1215.32 2078.51,1215.16 2079.1,1214.04 2079.68,1217.96 2080.27,1220.6 2080.86,1218.83 2081.44,1222.53 2082.03,1219.47 2082.62,1222.06 2083.2,1221.56 2083.79,1221.09 2084.38,1219.52 2084.96,1219.14 2085.55,1217.72 2086.14,1216.06 2086.72,1215.6 2087.31,1212.93 2087.89,1210.19 2088.48,1210.45 2089.07,1209.13 2089.65,1206.72 2090.24,1207.28 2090.83,1209.12 2091.41,1210.72 2092,1209.6 2092.59,1211.06 2093.17,1212.51 2093.76,1216.19 2094.35,1213.46 2094.93,1216.04 2095.52,1214.6 2096.1,1213.54 2096.69,1216.23 2097.28,1214.58 2097.86,1214.69 2098.45,1213.2 2099.04,1213.38 2099.62,1213.14 2100.21,1213.2 2100.8,1215.99 2101.38,1215.97 2101.97,1215.9 2102.55,1217.07 2103.14,1217.4 2103.73,1217.11 2104.31,1217.03 2104.9,1218.06 2105.49,1216.36 2106.07,1216.38 2106.66,1214.77 2107.25,1216.02 2107.83,1214.46 2108.42,1215.84 2109.01,1219.96 2109.59,1217.13 2110.18,1218.5 2110.76,1218.41 2111.35,1218.15 2111.94,1218.34 2112.52,1219.38 2113.11,1218.81 2113.7,1219.98 2114.28,1222.62 2114.87,1223.46 2115.46,1222.94 2116.04,1221.41 2116.63,1220.96 2117.22,1221.97 2117.8,1222.8 2118.39,1223.55 2118.97,1221.56 2119.56,1221.05 2120.15,1217.79 2120.73,1217.77 2121.32,1219.01 2121.91,1217.52 2122.49,1213.14 2123.08,1211.6 2123.67,1210.69 2124.25,1213.63 2124.84,1213.47 2125.42,1213.82 2126.01,1213.76 2126.6,1216.49 2127.18,1215.02 2127.77,1213.27 2128.36,1211.9 2128.94,1210.84 2129.53,1212.55 2130.12,1211.3 2130.7,1210.31 2131.29,1212.14 2131.88,1208.37 2132.46,1208.63 2133.05,1206.44 2133.63,1205.9 2134.22,1206.3 2134.81,1209.67 2135.39,1211.16 2135.98,1210.06 2136.57,1208.41 2137.15,1205.91 2137.74,1205.96 2138.33,1200.83 2138.91,1205.52 2139.5,1204.52 2140.09,1207.64 2140.67,1206.82 2141.26,1208.65 2141.84,1214.07 2142.43,1213.83 2143.02,1217.82 2143.6,1220.56 2144.19,1217.47 2144.78,1214.68 2145.36,1211.97 2145.95,1212.2 2146.54,1215.01 2147.12,1216.39 2147.71,1217.5 2148.3,1218.58 2148.88,1215.71 2149.47,1216.83 2150.05,1214.13 2150.64,1216.86 2151.23,1218.15 2151.81,1218.17 2152.4,1217.8 2152.99,1219.25 2153.57,1216.07 2154.16,1217.46 2154.75,1217.23 2155.33,1216.95 2155.92,1216.71 2156.5,1216.32 2157.09,1217.74 2157.68,1219.02 2158.26,1220.07 \"/>\n<path clip-path=\"url(#clip392)\" d=\"M986.025 1214.79 L986.612 1214.79 L987.198 1214.79 L987.785 1214.79 L988.371 1214.79 L988.957 1214.79 L989.544 1214.79 L990.13 1214.79 L990.717 1214.79 L991.303 1214.79 L991.889 1214.79 L992.476 1214.79 L993.062 1214.79 L993.649 1214.79 L994.235 1214.79 L994.822 1214.79 L995.408 1214.79 L995.994 1214.79 L996.581 1214.79 L997.167 1214.79 L997.754 1214.79 L998.34 1214.79 L998.926 1214.79 L999.513 1214.79 L1000.1 1214.79 L1000.69 1214.79 L1001.27 1214.79 L1001.86 1214.79 L1002.44 1214.79 L1003.03 1214.79 L1003.62 1214.79 L1004.2 1214.79 L1004.79 1214.79 L1005.38 1214.79 L1005.96 1214.79 L1006.55 1214.79 L1007.14 1214.79 L1007.72 1214.79 L1008.31 1214.79 L1008.9 1214.79 L1009.48 1214.79 L1010.07 1214.79 L1010.65 1214.79 L1011.24 1214.79 L1011.83 1214.79 L1012.41 1214.79 L1013 1214.79 L1013.59 1214.79 L1014.17 1214.79 L1014.76 1214.79 L1015.35 1214.79 L1015.93 1214.79 L1016.52 1214.79 L1017.11 1214.79 L1017.69 1214.79 L1018.28 1214.79 L1018.86 1214.79 L1019.45 1214.79 L1020.04 1214.79 L1020.62 1214.79 L1021.21 1214.79 L1021.8 1214.79 L1022.38 1214.79 L1022.97 1214.79 L1023.56 1214.79 L1024.14 1214.79 L1024.73 1214.79 L1025.32 1214.79 L1025.9 1214.79 L1026.49 1214.79 L1027.07 1214.79 L1027.66 1214.79 L1028.25 1214.79 L1028.83 1214.79 L1029.42 1214.79 L1030.01 1214.79 L1030.59 1214.79 L1031.18 1214.79 L1031.77 1214.79 L1032.35 1214.79 L1032.94 1214.79 L1033.52 1214.79 L1034.11 1214.79 L1034.7 1214.79 L1035.28 1214.79 L1035.87 1214.79 L1036.46 1214.79 L1037.04 1214.79 L1037.63 1214.79 L1038.22 1214.79 L1038.8 1214.79 L1039.39 1214.79 L1039.98 1214.79 L1040.56 1214.79 L1041.15 1214.79 L1041.73 1214.79 L1042.32 1214.79 L1042.91 1214.79 L1043.49 1214.79 L1044.08 1214.79 L1044.67 1214.79 L1045.25 1214.79 L1045.84 1214.79 L1046.43 1214.79 L1047.01 1214.79 L1047.6 1214.79 L1048.19 1214.79 L1048.77 1214.79 L1049.36 1214.79 L1049.94 1214.79 L1050.53 1214.79 L1051.12 1214.79 L1051.7 1214.79 L1052.29 1214.79 L1052.88 1214.79 L1053.46 1214.79 L1054.05 1214.79 L1054.64 1214.79 L1055.22 1214.79 L1055.81 1214.79 L1056.39 1214.79 L1056.98 1214.79 L1057.57 1214.79 L1058.15 1214.79 L1058.74 1214.79 L1059.33 1214.79 L1059.91 1214.79 L1060.5 1214.79 L1061.09 1214.79 L1061.67 1214.79 L1062.26 1214.79 L1062.85 1214.79 L1063.43 1214.79 L1064.02 1214.79 L1064.6 1214.79 L1065.19 1214.79 L1065.78 1214.79 L1066.36 1214.79 L1066.95 1214.79 L1067.54 1214.79 L1068.12 1214.79 L1068.71 1214.79 L1069.3 1214.79 L1069.88 1214.79 L1070.47 1214.79 L1071.06 1214.79 L1071.64 1214.79 L1072.23 1214.79 L1072.81 1214.79 L1073.4 1214.79 L1073.99 1214.79 L1074.57 1214.79 L1075.16 1214.79 L1075.75 1214.79 L1076.33 1214.79 L1076.92 1214.79 L1077.51 1214.79 L1078.09 1214.79 L1078.68 1214.79 L1079.26 1214.79 L1079.85 1214.79 L1080.44 1214.79 L1081.02 1214.79 L1081.61 1214.79 L1082.2 1214.79 L1082.78 1214.79 L1083.37 1214.79 L1083.96 1214.79 L1084.54 1214.79 L1085.13 1214.79 L1085.72 1214.79 L1086.3 1214.79 L1086.89 1214.79 L1087.47 1214.79 L1088.06 1214.79 L1088.65 1214.79 L1089.23 1214.79 L1089.82 1214.79 L1090.41 1214.79 L1090.99 1214.79 L1091.58 1214.79 L1092.17 1214.79 L1092.75 1214.79 L1093.34 1214.79 L1093.93 1214.79 L1094.51 1214.79 L1095.1 1214.79 L1095.68 1214.79 L1096.27 1214.79 L1096.86 1214.79 L1097.44 1214.79 L1098.03 1214.79 L1098.62 1214.79 L1099.2 1214.79 L1099.79 1214.79 L1100.38 1214.79 L1100.96 1214.79 L1101.55 1214.79 L1102.14 1214.79 L1102.72 1214.79 L1103.31 1214.79 L1103.89 1214.79 L1104.48 1214.79 L1105.07 1214.79 L1105.65 1214.79 L1106.24 1214.79 L1106.83 1214.79 L1107.41 1214.79 L1108 1214.79 L1108.59 1214.79 L1109.17 1214.79 L1109.76 1214.79 L1110.34 1214.79 L1110.93 1214.79 L1111.52 1214.79 L1112.1 1214.79 L1112.69 1214.79 L1113.28 1214.79 L1113.86 1214.79 L1114.45 1214.79 L1115.04 1214.79 L1115.62 1214.79 L1116.21 1214.79 L1116.8 1214.79 L1117.38 1214.79 L1117.97 1214.79 L1118.55 1214.79 L1119.14 1214.79 L1119.73 1214.79 L1120.31 1214.79 L1120.9 1214.79 L1121.49 1214.79 L1122.07 1214.79 L1122.66 1214.79 L1123.25 1214.79 L1123.83 1214.79 L1124.42 1214.79 L1125.01 1214.79 L1125.59 1214.79 L1126.18 1214.79 L1126.76 1214.79 L1127.35 1214.79 L1127.94 1214.79 L1128.52 1214.79 L1129.11 1214.79 L1129.7 1214.79 L1130.28 1214.79 L1130.87 1214.79 L1131.46 1214.79 L1132.04 1214.79 L1132.63 1214.79 L1133.21 1214.79 L1133.8 1214.79 L1134.39 1214.79 L1134.97 1214.79 L1135.56 1214.79 L1136.15 1214.79 L1136.73 1214.79 L1137.32 1214.79 L1137.91 1214.79 L1138.49 1214.79 L1139.08 1214.79 L1139.67 1214.79 L1140.25 1214.79 L1140.84 1214.79 L1141.42 1214.79 L1142.01 1214.79 L1142.6 1214.79 L1143.18 1214.79 L1143.77 1214.79 L1144.36 1214.79 L1144.94 1214.79 L1145.53 1214.79 L1146.12 1214.79 L1146.7 1214.79 L1147.29 1214.79 L1147.88 1214.79 L1148.46 1214.79 L1149.05 1214.79 L1149.63 1214.79 L1150.22 1214.79 L1150.81 1214.79 L1151.39 1214.79 L1151.98 1214.79 L1152.57 1214.79 L1153.15 1214.79 L1153.74 1214.79 L1154.33 1214.79 L1154.91 1214.79 L1155.5 1214.79 L1156.09 1214.79 L1156.67 1214.79 L1157.26 1214.79 L1157.84 1214.79 L1158.43 1214.79 L1159.02 1214.79 L1159.6 1214.79 L1160.19 1214.79 L1160.78 1214.79 L1161.36 1214.79 L1161.95 1214.79 L1162.54 1214.79 L1163.12 1214.79 L1163.71 1214.79 L1164.29 1214.79 L1164.88 1214.79 L1165.47 1214.79 L1166.05 1214.79 L1166.64 1214.79 L1167.23 1214.79 L1167.81 1214.79 L1168.4 1214.79 L1168.99 1214.79 L1169.57 1214.79 L1170.16 1214.79 L1170.75 1214.79 L1171.33 1214.79 L1171.92 1214.79 L1172.5 1214.79 L1173.09 1214.79 L1173.68 1214.79 L1174.26 1214.79 L1174.85 1214.79 L1175.44 1214.79 L1176.02 1214.79 L1176.61 1214.79 L1177.2 1214.79 L1177.78 1214.79 L1178.37 1214.79 L1178.96 1214.79 L1179.54 1214.79 L1180.13 1214.79 L1180.71 1214.79 L1181.3 1214.79 L1181.89 1214.79 L1182.47 1214.79 L1183.06 1214.79 L1183.65 1214.79 L1184.23 1214.79 L1184.82 1214.79 L1185.41 1214.79 L1185.99 1214.79 L1186.58 1214.79 L1187.16 1214.79 L1187.75 1214.79 L1188.34 1214.79 L1188.92 1214.79 L1189.51 1214.79 L1190.1 1214.79 L1190.68 1214.79 L1191.27 1214.79 L1191.86 1214.79 L1192.44 1214.79 L1193.03 1214.79 L1193.62 1214.79 L1194.2 1214.79 L1194.79 1214.79 L1195.37 1214.79 L1195.96 1214.79 L1196.55 1214.79 L1197.13 1214.79 L1197.72 1214.79 L1198.31 1214.79 L1198.89 1214.79 L1199.48 1214.79 L1200.07 1214.79 L1200.65 1214.79 L1201.24 1214.79 L1201.83 1214.79 L1202.41 1214.79 L1203 1214.79 L1203.58 1214.79 L1204.17 1214.79 L1204.76 1214.79 L1205.34 1214.79 L1205.93 1214.79 L1206.52 1214.79 L1207.1 1214.79 L1207.69 1214.79 L1208.28 1214.79 L1208.86 1214.79 L1209.45 1214.79 L1210.03 1214.79 L1210.62 1214.79 L1211.21 1214.79 L1211.79 1214.79 L1212.38 1214.79 L1212.97 1214.79 L1213.55 1214.79 L1214.14 1214.79 L1214.73 1214.79 L1215.31 1214.79 L1215.9 1214.79 L1216.49 1214.79 L1217.07 1214.79 L1217.66 1214.79 L1218.24 1214.79 L1218.83 1214.79 L1219.42 1214.79 L1220 1214.79 L1220.59 1214.79 L1221.18 1214.79 L1221.76 1214.79 L1222.35 1214.79 L1222.94 1214.79 L1223.52 1214.79 L1224.11 1214.79 L1224.7 1214.79 L1225.28 1214.79 L1225.87 1214.79 L1226.45 1214.79 L1227.04 1214.79 L1227.63 1214.79 L1228.21 1214.79 L1228.8 1214.79 L1229.39 1214.79 L1229.97 1214.79 L1230.56 1214.79 L1231.15 1214.79 L1231.73 1214.79 L1232.32 1214.79 L1232.91 1214.79 L1233.49 1214.79 L1234.08 1214.79 L1234.66 1214.79 L1235.25 1214.79 L1235.84 1214.79 L1236.42 1214.79 L1237.01 1214.79 L1237.6 1214.79 L1238.18 1214.79 L1238.77 1214.79 L1239.36 1214.79 L1239.94 1214.79 L1240.53 1214.79 L1241.11 1214.79 L1241.7 1214.79 L1242.29 1214.79 L1242.87 1214.79 L1243.46 1214.79 L1244.05 1214.79 L1244.63 1214.79 L1245.22 1214.79 L1245.81 1214.79 L1246.39 1214.79 L1246.98 1214.79 L1247.57 1214.79 L1248.15 1214.79 L1248.74 1214.79 L1249.32 1214.79 L1249.91 1214.79 L1250.5 1214.79 L1251.08 1214.79 L1251.67 1214.79 L1252.26 1214.79 L1252.84 1214.79 L1253.43 1214.79 L1254.02 1214.79 L1254.6 1214.79 L1255.19 1214.79 L1255.78 1214.79 L1256.36 1214.79 L1256.95 1214.79 L1257.53 1214.79 L1258.12 1214.79 L1258.71 1214.79 L1259.29 1214.79 L1259.88 1214.79 L1260.47 1214.79 L1261.05 1214.79 L1261.64 1214.79 L1262.23 1214.79 L1262.81 1214.79 L1263.4 1214.79 L1263.98 1214.79 L1264.57 1214.79 L1265.16 1214.79 L1265.74 1214.79 L1266.33 1214.79 L1266.92 1214.79 L1267.5 1214.79 L1268.09 1214.79 L1268.68 1214.79 L1269.26 1214.79 L1269.85 1214.79 L1270.44 1214.79 L1271.02 1214.79 L1271.61 1214.79 L1272.19 1214.79 L1272.78 1214.79 L1273.37 1214.79 L1273.95 1214.79 L1274.54 1214.79 L1275.13 1214.79 L1275.71 1214.79 L1276.3 1214.79 L1276.89 1214.79 L1277.47 1214.79 L1278.06 1214.79 L1278.65 1214.79 L1279.23 1214.79 L1279.82 1214.79 L1280.4 1214.79 L1280.99 1214.79 L1281.58 1214.79 L1282.16 1214.79 L1282.75 1214.79 L1283.34 1214.79 L1283.92 1214.79 L1284.51 1214.79 L1285.1 1214.79 L1285.68 1214.79 L1286.27 1214.79 L1286.86 1214.79 L1287.44 1214.79 L1288.03 1214.79 L1288.61 1214.79 L1289.2 1214.79 L1289.79 1214.79 L1290.37 1214.79 L1290.96 1214.79 L1291.55 1214.79 L1292.13 1214.79 L1292.72 1214.79 L1293.31 1214.79 L1293.89 1214.79 L1294.48 1214.79 L1295.06 1214.79 L1295.65 1214.79 L1296.24 1214.79 L1296.82 1214.79 L1297.41 1214.79 L1298 1214.79 L1298.58 1214.79 L1299.17 1214.79 L1299.76 1214.79 L1300.34 1214.79 L1300.93 1214.79 L1301.52 1214.79 L1302.1 1214.79 L1302.69 1214.79 L1303.27 1214.79 L1303.86 1214.79 L1304.45 1214.79 L1305.03 1214.79 L1305.62 1214.79 L1306.21 1214.79 L1306.79 1214.79 L1307.38 1214.79 L1307.97 1214.79 L1308.55 1214.79 L1309.14 1214.79 L1309.73 1214.79 L1310.31 1214.79 L1310.9 1214.79 L1311.48 1214.79 L1312.07 1214.79 L1312.66 1214.79 L1313.24 1214.79 L1313.83 1214.79 L1314.42 1214.79 L1315 1214.79 L1315.59 1214.79 L1316.18 1214.79 L1316.76 1214.79 L1317.35 1214.79 L1317.93 1214.79 L1318.52 1214.79 L1319.11 1214.79 L1319.69 1214.79 L1320.28 1214.79 L1320.87 1214.79 L1321.45 1214.79 L1322.04 1214.79 L1322.63 1214.79 L1323.21 1214.79 L1323.8 1214.79 L1324.39 1214.79 L1324.97 1214.79 L1325.56 1214.79 L1326.14 1214.79 L1326.73 1214.79 L1327.32 1214.79 L1327.9 1214.79 L1328.49 1214.79 L1329.08 1214.79 L1329.66 1214.79 L1330.25 1214.79 L1330.84 1214.79 L1331.42 1214.79 L1332.01 1214.79 L1332.6 1214.79 L1333.18 1214.79 L1333.77 1214.79 L1334.35 1214.79 L1334.94 1214.79 L1335.53 1214.79 L1336.11 1214.79 L1336.7 1214.79 L1337.29 1214.79 L1337.87 1214.79 L1338.46 1214.79 L1339.05 1214.79 L1339.63 1214.79 L1340.22 1214.79 L1340.8 1214.79 L1341.39 1214.79 L1341.98 1214.79 L1342.56 1214.79 L1343.15 1214.79 L1343.74 1214.79 L1344.32 1214.79 L1344.91 1214.79 L1345.5 1214.79 L1346.08 1214.79 L1346.67 1214.79 L1347.26 1214.79 L1347.84 1214.79 L1348.43 1214.79 L1349.01 1214.79 L1349.6 1214.79 L1350.19 1214.79 L1350.77 1214.79 L1351.36 1214.79 L1351.95 1214.79 L1352.53 1214.79 L1353.12 1214.79 L1353.71 1214.79 L1354.29 1214.79 L1354.88 1214.79 L1355.47 1214.79 L1356.05 1214.79 L1356.64 1214.79 L1357.22 1214.79 L1357.81 1214.79 L1358.4 1214.79 L1358.98 1214.79 L1359.57 1214.79 L1360.16 1214.79 L1360.74 1214.79 L1361.33 1214.79 L1361.92 1214.79 L1362.5 1214.79 L1363.09 1214.79 L1363.68 1214.79 L1364.26 1214.79 L1364.85 1214.79 L1365.43 1214.79 L1366.02 1214.79 L1366.61 1214.79 L1367.19 1214.79 L1367.78 1214.79 L1368.37 1214.79 L1368.95 1214.79 L1369.54 1214.79 L1370.13 1214.79 L1370.71 1214.79 L1371.3 1214.79 L1371.88 1214.79 L1372.47 1214.79 L1373.06 1214.79 L1373.64 1214.79 L1374.23 1214.79 L1374.82 1214.79 L1375.4 1214.79 L1375.99 1214.79 L1376.58 1214.79 L1377.16 1214.79 L1377.75 1214.79 L1378.34 1214.79 L1378.92 1214.79 L1379.51 1214.79 L1380.09 1214.79 L1380.68 1214.79 L1381.27 1214.79 L1381.85 1214.79 L1382.44 1214.79 L1383.03 1214.79 L1383.61 1214.79 L1384.2 1214.79 L1384.79 1214.79 L1385.37 1214.79 L1385.96 1214.79 L1386.55 1214.79 L1387.13 1214.79 L1387.72 1214.79 L1388.3 1214.79 L1388.89 1214.79 L1389.48 1214.79 L1390.06 1214.79 L1390.65 1214.79 L1391.24 1214.79 L1391.82 1214.79 L1392.41 1214.79 L1393 1214.79 L1393.58 1214.79 L1394.17 1214.79 L1394.75 1214.79 L1395.34 1214.79 L1395.93 1214.79 L1396.51 1214.79 L1397.1 1214.79 L1397.69 1214.79 L1398.27 1214.79 L1398.86 1214.79 L1399.45 1214.79 L1400.03 1214.79 L1400.62 1214.79 L1401.21 1214.79 L1401.79 1214.79 L1402.38 1214.79 L1402.96 1214.79 L1403.55 1214.79 L1404.14 1214.79 L1404.72 1214.79 L1405.31 1214.79 L1405.9 1214.79 L1406.48 1214.79 L1407.07 1214.79 L1407.66 1214.79 L1408.24 1214.79 L1408.83 1214.79 L1409.42 1214.79 L1410 1214.79 L1410.59 1214.79 L1411.17 1214.79 L1411.76 1214.79 L1412.35 1214.79 L1412.93 1214.79 L1413.52 1214.79 L1414.11 1214.79 L1414.69 1214.79 L1415.28 1214.79 L1415.87 1214.79 L1416.45 1214.79 L1417.04 1214.79 L1417.63 1214.79 L1418.21 1214.79 L1418.8 1214.79 L1419.38 1214.79 L1419.97 1214.79 L1420.56 1214.79 L1421.14 1214.79 L1421.73 1214.79 L1422.32 1214.79 L1422.9 1214.79 L1423.49 1214.79 L1424.08 1214.79 L1424.66 1214.79 L1425.25 1214.79 L1425.83 1214.79 L1426.42 1214.79 L1427.01 1214.79 L1427.59 1214.79 L1428.18 1214.79 L1428.77 1214.79 L1429.35 1214.79 L1429.94 1214.79 L1430.53 1214.79 L1431.11 1214.79 L1431.7 1214.79 L1432.29 1214.79 L1432.87 1214.79 L1433.46 1214.79 L1434.04 1214.79 L1434.63 1214.79 L1435.22 1214.79 L1435.8 1214.79 L1436.39 1214.79 L1436.98 1214.79 L1437.56 1214.79 L1438.15 1214.79 L1438.74 1214.79 L1439.32 1214.79 L1439.91 1214.79 L1440.5 1214.79 L1441.08 1214.79 L1441.67 1214.79 L1442.25 1214.79 L1442.84 1214.79 L1443.43 1214.79 L1444.01 1214.79 L1444.6 1214.79 L1445.19 1214.79 L1445.77 1214.79 L1446.36 1214.79 L1446.95 1214.79 L1447.53 1214.79 L1448.12 1214.79 L1448.7 1214.79 L1449.29 1214.79 L1449.88 1214.79 L1450.46 1214.79 L1451.05 1214.79 L1451.64 1214.79 L1452.22 1214.79 L1452.81 1214.79 L1453.4 1214.79 L1453.98 1214.79 L1454.57 1214.79 L1455.16 1214.79 L1455.74 1214.79 L1456.33 1214.79 L1456.91 1214.79 L1457.5 1214.79 L1458.09 1214.79 L1458.67 1214.79 L1459.26 1214.79 L1459.85 1214.79 L1460.43 1214.79 L1461.02 1214.79 L1461.61 1214.79 L1462.19 1214.79 L1462.78 1214.79 L1463.37 1214.79 L1463.95 1214.79 L1464.54 1214.79 L1465.12 1214.79 L1465.71 1214.79 L1466.3 1214.79 L1466.88 1214.79 L1467.47 1214.79 L1468.06 1214.79 L1468.64 1214.79 L1469.23 1214.79 L1469.82 1214.79 L1470.4 1214.79 L1470.99 1214.79 L1471.57 1214.79 L1472.16 1214.79 L1472.75 1214.79 L1473.33 1214.79 L1473.92 1214.79 L1474.51 1214.79 L1475.09 1214.79 L1475.68 1214.79 L1476.27 1214.79 L1476.85 1214.79 L1477.44 1214.79 L1478.03 1214.79 L1478.61 1214.79 L1479.2 1214.79 L1479.78 1214.79 L1480.37 1214.79 L1480.96 1214.79 L1481.54 1214.79 L1482.13 1214.79 L1482.72 1214.79 L1483.3 1214.79 L1483.89 1214.79 L1484.48 1214.79 L1485.06 1214.79 L1485.65 1214.79 L1486.24 1214.79 L1486.82 1214.79 L1487.41 1214.79 L1487.99 1214.79 L1488.58 1214.79 L1489.17 1214.79 L1489.75 1214.79 L1490.34 1214.79 L1490.93 1214.79 L1491.51 1214.79 L1492.1 1214.79 L1492.69 1214.79 L1493.27 1214.79 L1493.86 1214.79 L1494.45 1214.79 L1495.03 1214.79 L1495.62 1214.79 L1496.2 1214.79 L1496.79 1214.79 L1497.38 1214.79 L1497.96 1214.79 L1498.55 1214.79 L1499.14 1214.79 L1499.72 1214.79 L1500.31 1214.79 L1500.9 1214.79 L1501.48 1214.79 L1502.07 1214.79 L1502.65 1214.79 L1503.24 1214.79 L1503.83 1214.79 L1504.41 1214.79 L1505 1214.79 L1505.59 1214.79 L1506.17 1214.79 L1506.76 1214.79 L1507.35 1214.79 L1507.93 1214.79 L1508.52 1214.79 L1509.11 1214.79 L1509.69 1214.79 L1510.28 1214.79 L1510.86 1214.79 L1511.45 1214.79 L1512.04 1214.79 L1512.62 1214.79 L1513.21 1214.79 L1513.8 1214.79 L1514.38 1214.79 L1514.97 1214.79 L1515.56 1214.79 L1516.14 1214.79 L1516.73 1214.79 L1517.32 1214.79 L1517.9 1214.79 L1518.49 1214.79 L1519.07 1214.79 L1519.66 1214.79 L1520.25 1214.79 L1520.83 1214.79 L1521.42 1214.79 L1522.01 1214.79 L1522.59 1214.79 L1523.18 1214.79 L1523.77 1214.79 L1524.35 1214.79 L1524.94 1214.79 L1525.52 1214.79 L1526.11 1214.79 L1526.7 1214.79 L1527.28 1214.79 L1527.87 1214.79 L1528.46 1214.79 L1529.04 1214.79 L1529.63 1214.79 L1530.22 1214.79 L1530.8 1214.79 L1531.39 1214.79 L1531.98 1214.79 L1532.56 1214.79 L1533.15 1214.79 L1533.73 1214.79 L1534.32 1214.79 L1534.91 1214.79 L1535.49 1214.79 L1536.08 1214.79 L1536.67 1214.79 L1537.25 1214.79 L1537.84 1214.79 L1538.43 1214.79 L1539.01 1214.79 L1539.6 1214.79 L1540.19 1214.79 L1540.77 1214.79 L1541.36 1214.79 L1541.94 1214.79 L1542.53 1214.79 L1543.12 1214.79 L1543.7 1214.79 L1544.29 1214.79 L1544.88 1214.79 L1545.46 1214.79 L1546.05 1214.79 L1546.64 1214.79 L1547.22 1214.79 L1547.81 1214.79 L1548.4 1214.79 L1548.98 1214.79 L1549.57 1214.79 L1550.15 1214.79 L1550.74 1214.79 L1551.33 1214.79 L1551.91 1214.79 L1552.5 1214.79 L1553.09 1214.79 L1553.67 1214.79 L1554.26 1214.79 L1554.85 1214.79 L1555.43 1214.79 L1556.02 1214.79 L1556.6 1214.79 L1557.19 1214.79 L1557.78 1214.79 L1558.36 1214.79 L1558.95 1214.79 L1559.54 1214.79 L1560.12 1214.79 L1560.71 1214.79 L1561.3 1214.79 L1561.88 1214.79 L1562.47 1214.79 L1563.06 1214.79 L1563.64 1214.79 L1564.23 1214.79 L1564.81 1214.79 L1565.4 1214.79 L1565.99 1214.79 L1566.57 1214.79 L1567.16 1214.79 L1567.75 1214.79 L1568.33 1214.79 L1568.92 1214.79 L1569.51 1214.79 L1570.09 1214.79 L1570.68 1214.79 L1571.27 1214.79 L1571.85 1214.79 L1572.44 1214.79 L1573.02 1214.79 L1573.61 1214.79 L1574.2 1214.79 L1574.78 1214.79 L1575.37 1214.79 L1575.96 1214.79 L1576.54 1214.79 L1577.13 1214.79 L1577.72 1214.79 L1578.3 1214.79 L1578.89 1214.79 L1579.47 1214.79 L1580.06 1214.79 L1580.65 1214.79 L1581.23 1214.79 L1581.82 1214.79 L1582.41 1214.79 L1582.99 1214.79 L1583.58 1214.79 L1584.17 1214.79 L1584.75 1214.79 L1585.34 1214.79 L1585.93 1214.79 L1586.51 1214.79 L1587.1 1214.79 L1587.68 1214.79 L1588.27 1214.79 L1588.86 1214.79 L1589.44 1214.79 L1590.03 1214.79 L1590.62 1214.79 L1591.2 1214.79 L1591.79 1214.79 L1592.38 1214.79 L1592.96 1214.79 L1593.55 1214.79 L1594.14 1214.79 L1594.72 1214.79 L1595.31 1214.79 L1595.89 1214.79 L1596.48 1214.79 L1597.07 1214.79 L1597.65 1214.79 L1598.24 1214.79 L1598.83 1214.79 L1599.41 1214.79 L1600 1214.79 L1600.59 1214.79 L1601.17 1214.79 L1601.76 1214.79 L1602.34 1214.79 L1602.93 1214.79 L1603.52 1214.79 L1604.1 1214.79 L1604.69 1214.79 L1605.28 1214.79 L1605.86 1214.79 L1606.45 1214.79 L1607.04 1214.79 L1607.62 1214.79 L1608.21 1214.79 L1608.8 1214.79 L1609.38 1214.79 L1609.97 1214.79 L1610.55 1214.79 L1611.14 1214.79 L1611.73 1214.79 L1612.31 1214.79 L1612.9 1214.79 L1613.49 1214.79 L1614.07 1214.79 L1614.66 1214.79 L1615.25 1214.79 L1615.83 1214.79 L1616.42 1214.79 L1617.01 1214.79 L1617.59 1214.79 L1618.18 1214.79 L1618.76 1214.79 L1619.35 1214.79 L1619.94 1214.79 L1620.52 1214.79 L1621.11 1214.79 L1621.7 1214.79 L1622.28 1214.79 L1622.87 1214.79 L1623.46 1214.79 L1624.04 1214.79 L1624.63 1214.79 L1625.22 1214.79 L1625.8 1214.79 L1626.39 1214.79 L1626.97 1214.79 L1627.56 1214.79 L1628.15 1214.79 L1628.73 1214.79 L1629.32 1214.79 L1629.91 1214.79 L1630.49 1214.79 L1631.08 1214.79 L1631.67 1214.79 L1632.25 1214.79 L1632.84 1214.79 L1633.42 1214.79 L1634.01 1214.79 L1634.6 1214.79 L1635.18 1214.79 L1635.77 1214.79 L1636.36 1214.79 L1636.94 1214.79 L1637.53 1214.79 L1638.12 1214.79 L1638.7 1214.79 L1639.29 1214.79 L1639.88 1214.79 L1640.46 1214.79 L1641.05 1214.79 L1641.63 1214.79 L1642.22 1214.79 L1642.81 1214.79 L1643.39 1214.79 L1643.98 1214.79 L1644.57 1214.79 L1645.15 1214.79 L1645.74 1214.79 L1646.33 1214.79 L1646.91 1214.79 L1647.5 1214.79 L1648.09 1214.79 L1648.67 1214.79 L1649.26 1214.79 L1649.84 1214.79 L1650.43 1214.79 L1651.02 1214.79 L1651.6 1214.79 L1652.19 1214.79 L1652.78 1214.79 L1653.36 1214.79 L1653.95 1214.79 L1654.54 1214.79 L1655.12 1214.79 L1655.71 1214.79 L1656.29 1214.79 L1656.88 1214.79 L1657.47 1214.79 L1658.05 1214.79 L1658.64 1214.79 L1659.23 1214.79 L1659.81 1214.79 L1660.4 1214.79 L1660.99 1214.79 L1661.57 1214.79 L1662.16 1214.79 L1662.75 1214.79 L1663.33 1214.79 L1663.92 1214.79 L1664.5 1214.79 L1665.09 1214.79 L1665.68 1214.79 L1666.26 1214.79 L1666.85 1214.79 L1667.44 1214.79 L1668.02 1214.79 L1668.61 1214.79 L1669.2 1214.79 L1669.78 1214.79 L1670.37 1214.79 L1670.96 1214.79 L1671.54 1214.79 L1672.13 1214.79 L1672.71 1214.79 L1673.3 1214.79 L1673.89 1214.79 L1674.47 1214.79 L1675.06 1214.79 L1675.65 1214.79 L1676.23 1214.79 L1676.82 1214.79 L1677.41 1214.79 L1677.99 1214.79 L1678.58 1214.79 L1679.17 1214.79 L1679.75 1214.79 L1680.34 1214.79 L1680.92 1214.79 L1681.51 1214.79 L1682.1 1214.79 L1682.68 1214.79 L1683.27 1214.79 L1683.86 1214.79 L1684.44 1214.79 L1685.03 1214.79 L1685.62 1214.79 L1686.2 1214.79 L1686.79 1214.79 L1687.37 1214.79 L1687.96 1214.79 L1688.55 1214.79 L1689.13 1214.79 L1689.72 1214.79 L1690.31 1214.79 L1690.89 1214.79 L1691.48 1214.79 L1692.07 1214.79 L1692.65 1214.79 L1693.24 1214.79 L1693.83 1214.79 L1694.41 1214.79 L1695 1214.79 L1695.58 1214.79 L1696.17 1214.79 L1696.76 1214.79 L1697.34 1214.79 L1697.93 1214.79 L1698.52 1214.79 L1699.1 1214.79 L1699.69 1214.79 L1700.28 1214.79 L1700.86 1214.79 L1701.45 1214.79 L1702.04 1214.79 L1702.62 1214.79 L1703.21 1214.79 L1703.79 1214.79 L1704.38 1214.79 L1704.97 1214.79 L1705.55 1214.79 L1706.14 1214.79 L1706.73 1214.79 L1707.31 1214.79 L1707.9 1214.79 L1708.49 1214.79 L1709.07 1214.79 L1709.66 1214.79 L1710.24 1214.79 L1710.83 1214.79 L1711.42 1214.79 L1712 1214.79 L1712.59 1214.79 L1713.18 1214.79 L1713.76 1214.79 L1714.35 1214.79 L1714.94 1214.79 L1715.52 1214.79 L1716.11 1214.79 L1716.7 1214.79 L1717.28 1214.79 L1717.87 1214.79 L1718.45 1214.79 L1719.04 1214.79 L1719.63 1214.79 L1720.21 1214.79 L1720.8 1214.79 L1721.39 1214.79 L1721.97 1214.79 L1722.56 1214.79 L1723.15 1214.79 L1723.73 1214.79 L1724.32 1214.79 L1724.91 1214.79 L1725.49 1214.79 L1726.08 1214.79 L1726.66 1214.79 L1727.25 1214.79 L1727.84 1214.79 L1728.42 1214.79 L1729.01 1214.79 L1729.6 1214.79 L1730.18 1214.79 L1730.77 1214.79 L1731.36 1214.79 L1731.94 1214.79 L1732.53 1214.79 L1733.11 1214.79 L1733.7 1214.79 L1734.29 1214.79 L1734.87 1214.79 L1735.46 1214.79 L1736.05 1214.79 L1736.63 1214.79 L1737.22 1214.79 L1737.81 1214.79 L1738.39 1214.79 L1738.98 1214.79 L1739.57 1214.79 L1740.15 1214.79 L1740.74 1214.79 L1741.32 1214.79 L1741.91 1214.79 L1742.5 1214.79 L1743.08 1214.79 L1743.67 1214.79 L1744.26 1214.79 L1744.84 1214.79 L1745.43 1214.79 L1746.02 1214.79 L1746.6 1214.79 L1747.19 1214.79 L1747.78 1214.79 L1748.36 1214.79 L1748.95 1214.79 L1749.53 1214.79 L1750.12 1214.79 L1750.71 1214.79 L1751.29 1214.79 L1751.88 1214.79 L1752.47 1214.79 L1753.05 1214.79 L1753.64 1214.79 L1754.23 1214.79 L1754.81 1214.79 L1755.4 1214.79 L1755.99 1214.79 L1756.57 1214.79 L1757.16 1214.79 L1757.74 1214.79 L1758.33 1214.79 L1758.92 1214.79 L1759.5 1214.79 L1760.09 1214.79 L1760.68 1214.79 L1761.26 1214.79 L1761.85 1214.79 L1762.44 1214.79 L1763.02 1214.79 L1763.61 1214.79 L1764.19 1214.79 L1764.78 1214.79 L1765.37 1214.79 L1765.95 1214.79 L1766.54 1214.79 L1767.13 1214.79 L1767.71 1214.79 L1768.3 1214.79 L1768.89 1214.79 L1769.47 1214.79 L1770.06 1214.79 L1770.65 1214.79 L1771.23 1214.79 L1771.82 1214.79 L1772.4 1214.79 L1772.99 1214.79 L1773.58 1214.79 L1774.16 1214.79 L1774.75 1214.79 L1775.34 1214.79 L1775.92 1214.79 L1776.51 1214.79 L1777.1 1214.79 L1777.68 1214.79 L1778.27 1214.79 L1778.86 1214.79 L1779.44 1214.79 L1780.03 1214.79 L1780.61 1214.79 L1781.2 1214.79 L1781.79 1214.79 L1782.37 1214.79 L1782.96 1214.79 L1783.55 1214.79 L1784.13 1214.79 L1784.72 1214.79 L1785.31 1214.79 L1785.89 1214.79 L1786.48 1214.79 L1787.06 1214.79 L1787.65 1214.79 L1788.24 1214.79 L1788.82 1214.79 L1789.41 1214.79 L1790 1214.79 L1790.58 1214.79 L1791.17 1214.79 L1791.76 1214.79 L1792.34 1214.79 L1792.93 1214.79 L1793.52 1214.79 L1794.1 1214.79 L1794.69 1214.79 L1795.27 1214.79 L1795.86 1214.79 L1796.45 1214.79 L1797.03 1214.79 L1797.62 1214.79 L1798.21 1214.79 L1798.79 1214.79 L1799.38 1214.79 L1799.97 1214.79 L1800.55 1214.79 L1801.14 1214.79 L1801.73 1214.79 L1802.31 1214.79 L1802.9 1214.79 L1803.48 1214.79 L1804.07 1214.79 L1804.66 1214.79 L1805.24 1214.79 L1805.83 1214.79 L1806.42 1214.79 L1807 1214.79 L1807.59 1214.79 L1808.18 1214.79 L1808.76 1214.79 L1809.35 1214.79 L1809.94 1214.79 L1810.52 1214.79 L1811.11 1214.79 L1811.69 1214.79 L1812.28 1214.79 L1812.87 1214.79 L1813.45 1214.79 L1814.04 1214.79 L1814.63 1214.79 L1815.21 1214.79 L1815.8 1214.79 L1816.39 1214.79 L1816.97 1214.79 L1817.56 1214.79 L1818.14 1214.79 L1818.73 1214.79 L1819.32 1214.79 L1819.9 1214.79 L1820.49 1214.79 L1821.08 1214.79 L1821.66 1214.79 L1822.25 1214.79 L1822.84 1214.79 L1823.42 1214.79 L1824.01 1214.79 L1824.6 1214.79 L1825.18 1214.79 L1825.77 1214.79 L1826.35 1214.79 L1826.94 1214.79 L1827.53 1214.79 L1828.11 1214.79 L1828.7 1214.79 L1829.29 1214.79 L1829.87 1214.79 L1830.46 1214.79 L1831.05 1214.79 L1831.63 1214.79 L1832.22 1214.79 L1832.81 1214.79 L1833.39 1214.79 L1833.98 1214.79 L1834.56 1214.79 L1835.15 1214.79 L1835.74 1214.79 L1836.32 1214.79 L1836.91 1214.79 L1837.5 1214.79 L1838.08 1214.79 L1838.67 1214.79 L1839.26 1214.79 L1839.84 1214.79 L1840.43 1214.79 L1841.01 1214.79 L1841.6 1214.79 L1842.19 1214.79 L1842.77 1214.79 L1843.36 1214.79 L1843.95 1214.79 L1844.53 1214.79 L1845.12 1214.79 L1845.71 1214.79 L1846.29 1214.79 L1846.88 1214.79 L1847.47 1214.79 L1848.05 1214.79 L1848.64 1214.79 L1849.22 1214.79 L1849.81 1214.79 L1850.4 1214.79 L1850.98 1214.79 L1851.57 1214.79 L1852.16 1214.79 L1852.74 1214.79 L1853.33 1214.79 L1853.92 1214.79 L1854.5 1214.79 L1855.09 1214.79 L1855.68 1214.79 L1856.26 1214.79 L1856.85 1214.79 L1857.43 1214.79 L1858.02 1214.79 L1858.61 1214.79 L1859.19 1214.79 L1859.78 1214.79 L1860.37 1214.79 L1860.95 1214.79 L1861.54 1214.79 L1862.13 1214.79 L1862.71 1214.79 L1863.3 1214.79 L1863.88 1214.79 L1864.47 1214.79 L1865.06 1214.79 L1865.64 1214.79 L1866.23 1214.79 L1866.82 1214.79 L1867.4 1214.79 L1867.99 1214.79 L1868.58 1214.79 L1869.16 1214.79 L1869.75 1214.79 L1870.34 1214.79 L1870.92 1214.79 L1871.51 1214.79 L1872.09 1214.79 L1872.68 1214.79 L1873.27 1214.79 L1873.85 1214.79 L1874.44 1214.79 L1875.03 1214.79 L1875.61 1214.79 L1876.2 1214.79 L1876.79 1214.79 L1877.37 1214.79 L1877.96 1214.79 L1878.55 1214.79 L1879.13 1214.79 L1879.72 1214.79 L1880.3 1214.79 L1880.89 1214.79 L1881.48 1214.79 L1882.06 1214.79 L1882.65 1214.79 L1883.24 1214.79 L1883.82 1214.79 L1884.41 1214.79 L1885 1214.79 L1885.58 1214.79 L1886.17 1214.79 L1886.76 1214.79 L1887.34 1214.79 L1887.93 1214.79 L1888.51 1214.79 L1889.1 1214.79 L1889.69 1214.79 L1890.27 1214.79 L1890.86 1214.79 L1891.45 1214.79 L1892.03 1214.79 L1892.62 1214.79 L1893.21 1214.79 L1893.79 1214.79 L1894.38 1214.79 L1894.96 1214.79 L1895.55 1214.79 L1896.14 1214.79 L1896.72 1214.79 L1897.31 1214.79 L1897.9 1214.79 L1898.48 1214.79 L1899.07 1214.79 L1899.66 1214.79 L1900.24 1214.79 L1900.83 1214.79 L1901.42 1214.79 L1902 1214.79 L1902.59 1214.79 L1903.17 1214.79 L1903.76 1214.79 L1904.35 1214.79 L1904.93 1214.79 L1905.52 1214.79 L1906.11 1214.79 L1906.69 1214.79 L1907.28 1214.79 L1907.87 1214.79 L1908.45 1214.79 L1909.04 1214.79 L1909.63 1214.79 L1910.21 1214.79 L1910.8 1214.79 L1911.38 1214.79 L1911.97 1214.79 L1912.56 1214.79 L1913.14 1214.79 L1913.73 1214.79 L1914.32 1214.79 L1914.9 1214.79 L1915.49 1214.79 L1916.08 1214.79 L1916.66 1214.79 L1917.25 1214.79 L1917.83 1214.79 L1918.42 1214.79 L1919.01 1214.79 L1919.59 1214.79 L1920.18 1214.79 L1920.77 1214.79 L1921.35 1214.79 L1921.94 1214.79 L1922.53 1214.79 L1923.11 1214.79 L1923.7 1214.79 L1924.29 1214.79 L1924.87 1214.79 L1925.46 1214.79 L1926.04 1214.79 L1926.63 1214.79 L1927.22 1214.79 L1927.8 1214.79 L1928.39 1214.79 L1928.98 1214.79 L1929.56 1214.79 L1930.15 1214.79 L1930.74 1214.79 L1931.32 1214.79 L1931.91 1214.79 L1932.5 1214.79 L1933.08 1214.79 L1933.67 1214.79 L1934.25 1214.79 L1934.84 1214.79 L1935.43 1214.79 L1936.01 1214.79 L1936.6 1214.79 L1937.19 1214.79 L1937.77 1214.79 L1938.36 1214.79 L1938.95 1214.79 L1939.53 1214.79 L1940.12 1214.79 L1940.71 1214.79 L1941.29 1214.79 L1941.88 1214.79 L1942.46 1214.79 L1943.05 1214.79 L1943.64 1214.79 L1944.22 1214.79 L1944.81 1214.79 L1945.4 1214.79 L1945.98 1214.79 L1946.57 1214.79 L1947.16 1214.79 L1947.74 1214.79 L1948.33 1214.79 L1948.91 1214.79 L1949.5 1214.79 L1950.09 1214.79 L1950.67 1214.79 L1951.26 1214.79 L1951.85 1214.79 L1952.43 1214.79 L1953.02 1214.79 L1953.61 1214.79 L1954.19 1214.79 L1954.78 1214.79 L1955.37 1214.79 L1955.95 1214.79 L1956.54 1214.79 L1957.12 1214.79 L1957.71 1214.79 L1958.3 1214.79 L1958.88 1214.79 L1959.47 1214.79 L1960.06 1214.79 L1960.64 1214.79 L1961.23 1214.79 L1961.82 1214.79 L1962.4 1214.79 L1962.99 1214.79 L1963.58 1214.79 L1964.16 1214.79 L1964.75 1214.79 L1965.33 1214.79 L1965.92 1214.79 L1966.51 1214.79 L1967.09 1214.79 L1967.68 1214.79 L1968.27 1214.79 L1968.85 1214.79 L1969.44 1214.79 L1970.03 1214.79 L1970.61 1214.79 L1971.2 1214.79 L1971.78 1214.79 L1972.37 1214.79 L1972.96 1214.79 L1973.54 1214.79 L1974.13 1214.79 L1974.72 1214.79 L1975.3 1214.79 L1975.89 1214.79 L1976.48 1214.79 L1977.06 1214.79 L1977.65 1214.79 L1978.24 1214.79 L1978.82 1214.79 L1979.41 1214.79 L1979.99 1214.79 L1980.58 1214.79 L1981.17 1214.79 L1981.75 1214.79 L1982.34 1214.79 L1982.93 1214.79 L1983.51 1214.79 L1984.1 1214.79 L1984.69 1214.79 L1985.27 1214.79 L1985.86 1214.79 L1986.45 1214.79 L1987.03 1214.79 L1987.62 1214.79 L1988.2 1214.79 L1988.79 1214.79 L1989.38 1214.79 L1989.96 1214.79 L1990.55 1214.79 L1991.14 1214.79 L1991.72 1214.79 L1992.31 1214.79 L1992.9 1214.79 L1993.48 1214.79 L1994.07 1214.79 L1994.65 1214.79 L1995.24 1214.79 L1995.83 1214.79 L1996.41 1214.79 L1997 1214.79 L1997.59 1214.79 L1998.17 1214.79 L1998.76 1214.79 L1999.35 1214.79 L1999.93 1214.79 L2000.52 1214.79 L2001.11 1214.79 L2001.69 1214.79 L2002.28 1214.79 L2002.86 1214.79 L2003.45 1214.79 L2004.04 1214.79 L2004.62 1214.79 L2005.21 1214.79 L2005.8 1214.79 L2006.38 1214.79 L2006.97 1214.79 L2007.56 1214.79 L2008.14 1214.79 L2008.73 1214.79 L2009.32 1214.79 L2009.9 1214.79 L2010.49 1214.79 L2011.07 1214.79 L2011.66 1214.79 L2012.25 1214.79 L2012.83 1214.79 L2013.42 1214.79 L2014.01 1214.79 L2014.59 1214.79 L2015.18 1214.79 L2015.77 1214.79 L2016.35 1214.79 L2016.94 1214.79 L2017.53 1214.79 L2018.11 1214.79 L2018.7 1214.79 L2019.28 1214.79 L2019.87 1214.79 L2020.46 1214.79 L2021.04 1214.79 L2021.63 1214.79 L2022.22 1214.79 L2022.8 1214.79 L2023.39 1214.79 L2023.98 1214.79 L2024.56 1214.79 L2025.15 1214.79 L2025.73 1214.79 L2026.32 1214.79 L2026.91 1214.79 L2027.49 1214.79 L2028.08 1214.79 L2028.67 1214.79 L2029.25 1214.79 L2029.84 1214.79 L2030.43 1214.79 L2031.01 1214.79 L2031.6 1214.79 L2032.19 1214.79 L2032.77 1214.79 L2033.36 1214.79 L2033.94 1214.79 L2034.53 1214.79 L2035.12 1214.79 L2035.7 1214.79 L2036.29 1214.79 L2036.88 1214.79 L2037.46 1214.79 L2038.05 1214.79 L2038.64 1214.79 L2039.22 1214.79 L2039.81 1214.79 L2040.4 1214.79 L2040.98 1214.79 L2041.57 1214.79 L2042.15 1214.79 L2042.74 1214.79 L2043.33 1214.79 L2043.91 1214.79 L2044.5 1214.79 L2045.09 1214.79 L2045.67 1214.79 L2046.26 1214.79 L2046.85 1214.79 L2047.43 1214.79 L2048.02 1214.79 L2048.6 1214.79 L2049.19 1214.79 L2049.78 1214.79 L2050.36 1214.79 L2050.95 1214.79 L2051.54 1214.79 L2052.12 1214.79 L2052.71 1214.79 L2053.3 1214.79 L2053.88 1214.79 L2054.47 1214.79 L2055.06 1214.79 L2055.64 1214.79 L2056.23 1214.79 L2056.81 1214.79 L2057.4 1214.79 L2057.99 1214.79 L2058.57 1214.79 L2059.16 1214.79 L2059.75 1214.79 L2060.33 1214.79 L2060.92 1214.79 L2061.51 1214.79 L2062.09 1214.79 L2062.68 1214.79 L2063.27 1214.79 L2063.85 1214.79 L2064.44 1214.79 L2065.02 1214.79 L2065.61 1214.79 L2066.2 1214.79 L2066.78 1214.79 L2067.37 1214.79 L2067.96 1214.79 L2068.54 1214.79 L2069.13 1214.79 L2069.72 1214.79 L2070.3 1214.79 L2070.89 1214.79 L2071.48 1214.79 L2072.06 1214.79 L2072.65 1214.79 L2073.23 1214.79 L2073.82 1214.79 L2074.41 1214.79 L2074.99 1214.79 L2075.58 1214.79 L2076.17 1214.79 L2076.75 1214.79 L2077.34 1214.79 L2077.93 1214.79 L2078.51 1214.79 L2079.1 1214.79 L2079.68 1214.79 L2080.27 1214.79 L2080.86 1214.79 L2081.44 1214.79 L2082.03 1214.79 L2082.62 1214.79 L2083.2 1214.79 L2083.79 1214.79 L2084.38 1214.79 L2084.96 1214.79 L2085.55 1214.79 L2086.14 1214.79 L2086.72 1214.79 L2087.31 1214.79 L2087.89 1214.79 L2088.48 1214.79 L2089.07 1214.79 L2089.65 1214.79 L2090.24 1214.79 L2090.83 1214.79 L2091.41 1214.79 L2092 1214.79 L2092.59 1214.79 L2093.17 1214.79 L2093.76 1214.79 L2094.35 1214.79 L2094.93 1214.79 L2095.52 1214.79 L2096.1 1214.79 L2096.69 1214.79 L2097.28 1214.79 L2097.86 1214.79 L2098.45 1214.79 L2099.04 1214.79 L2099.62 1214.79 L2100.21 1214.79 L2100.8 1214.79 L2101.38 1214.79 L2101.97 1214.79 L2102.55 1214.79 L2103.14 1214.79 L2103.73 1214.79 L2104.31 1214.79 L2104.9 1214.79 L2105.49 1214.79 L2106.07 1214.79 L2106.66 1214.79 L2107.25 1214.79 L2107.83 1214.79 L2108.42 1214.79 L2109.01 1214.79 L2109.59 1214.79 L2110.18 1214.79 L2110.76 1214.79 L2111.35 1214.79 L2111.94 1214.79 L2112.52 1214.79 L2113.11 1214.79 L2113.7 1214.79 L2114.28 1214.79 L2114.87 1214.79 L2115.46 1214.79 L2116.04 1214.79 L2116.63 1214.79 L2117.22 1214.79 L2117.8 1214.79 L2118.39 1214.79 L2118.97 1214.79 L2119.56 1214.79 L2120.15 1214.79 L2120.73 1214.79 L2121.32 1214.79 L2121.91 1214.79 L2122.49 1214.79 L2123.08 1214.79 L2123.67 1214.79 L2124.25 1214.79 L2124.84 1214.79 L2125.42 1214.79 L2126.01 1214.79 L2126.6 1214.79 L2127.18 1214.79 L2127.77 1214.79 L2128.36 1214.79 L2128.94 1214.79 L2129.53 1214.79 L2130.12 1214.79 L2130.7 1214.79 L2131.29 1214.79 L2131.88 1214.79 L2132.46 1214.79 L2133.05 1214.79 L2133.63 1214.79 L2134.22 1214.79 L2134.81 1214.79 L2135.39 1214.79 L2135.98 1214.79 L2136.57 1214.79 L2137.15 1214.79 L2137.74 1214.79 L2138.33 1214.79 L2138.91 1214.79 L2139.5 1214.79 L2140.09 1214.79 L2140.67 1214.79 L2141.26 1214.79 L2141.84 1214.79 L2142.43 1214.79 L2143.02 1214.79 L2143.6 1214.79 L2144.19 1214.79 L2144.78 1214.79 L2145.36 1214.79 L2145.95 1214.79 L2146.54 1214.79 L2147.12 1214.79 L2147.71 1214.79 L2148.3 1214.79 L2148.88 1214.79 L2149.47 1214.79 L2150.05 1214.79 L2150.64 1214.79 L2151.23 1214.79 L2151.81 1214.79 L2152.4 1214.79 L2152.99 1214.79 L2153.57 1214.79 L2154.16 1214.79 L2154.75 1214.79 L2155.33 1214.79 L2155.92 1214.79 L2156.5 1214.79 L2157.09 1214.79 L2157.68 1214.79 L2158.26 1214.79 L2158.26 1214.05 L2157.68 1214.05 L2157.09 1214.05 L2156.5 1214.05 L2155.92 1214.05 L2155.33 1214.05 L2154.75 1214.05 L2154.16 1214.05 L2153.57 1214.05 L2152.99 1214.05 L2152.4 1214.05 L2151.81 1214.05 L2151.23 1214.05 L2150.64 1214.05 L2150.05 1214.05 L2149.47 1214.05 L2148.88 1214.05 L2148.3 1214.05 L2147.71 1214.05 L2147.12 1214.05 L2146.54 1214.05 L2145.95 1214.05 L2145.36 1214.05 L2144.78 1214.05 L2144.19 1214.05 L2143.6 1214.05 L2143.02 1214.05 L2142.43 1214.05 L2141.84 1214.05 L2141.26 1214.05 L2140.67 1214.05 L2140.09 1214.05 L2139.5 1214.05 L2138.91 1214.05 L2138.33 1214.05 L2137.74 1214.05 L2137.15 1214.05 L2136.57 1214.05 L2135.98 1214.05 L2135.39 1214.05 L2134.81 1214.05 L2134.22 1214.05 L2133.63 1214.05 L2133.05 1214.05 L2132.46 1214.05 L2131.88 1214.05 L2131.29 1214.05 L2130.7 1214.05 L2130.12 1214.05 L2129.53 1214.05 L2128.94 1214.05 L2128.36 1214.05 L2127.77 1214.05 L2127.18 1214.05 L2126.6 1214.05 L2126.01 1214.05 L2125.42 1214.05 L2124.84 1214.05 L2124.25 1214.05 L2123.67 1214.05 L2123.08 1214.05 L2122.49 1214.05 L2121.91 1214.05 L2121.32 1214.05 L2120.73 1214.05 L2120.15 1214.05 L2119.56 1214.05 L2118.97 1214.05 L2118.39 1214.05 L2117.8 1214.05 L2117.22 1214.05 L2116.63 1214.05 L2116.04 1214.05 L2115.46 1214.05 L2114.87 1214.05 L2114.28 1214.05 L2113.7 1214.05 L2113.11 1214.05 L2112.52 1214.05 L2111.94 1214.05 L2111.35 1214.05 L2110.76 1214.05 L2110.18 1214.05 L2109.59 1214.05 L2109.01 1214.05 L2108.42 1214.05 L2107.83 1214.05 L2107.25 1214.05 L2106.66 1214.05 L2106.07 1214.05 L2105.49 1214.05 L2104.9 1214.05 L2104.31 1214.05 L2103.73 1214.05 L2103.14 1214.05 L2102.55 1214.05 L2101.97 1214.05 L2101.38 1214.05 L2100.8 1214.05 L2100.21 1214.05 L2099.62 1214.05 L2099.04 1214.05 L2098.45 1214.05 L2097.86 1214.05 L2097.28 1214.05 L2096.69 1214.05 L2096.1 1214.05 L2095.52 1214.05 L2094.93 1214.05 L2094.35 1214.05 L2093.76 1214.05 L2093.17 1214.05 L2092.59 1214.05 L2092 1214.05 L2091.41 1214.05 L2090.83 1214.05 L2090.24 1214.05 L2089.65 1214.05 L2089.07 1214.05 L2088.48 1214.05 L2087.89 1214.05 L2087.31 1214.05 L2086.72 1214.05 L2086.14 1214.05 L2085.55 1214.05 L2084.96 1214.05 L2084.38 1214.05 L2083.79 1214.05 L2083.2 1214.05 L2082.62 1214.05 L2082.03 1214.05 L2081.44 1214.05 L2080.86 1214.05 L2080.27 1214.05 L2079.68 1214.05 L2079.1 1214.05 L2078.51 1214.05 L2077.93 1214.05 L2077.34 1214.05 L2076.75 1214.05 L2076.17 1214.05 L2075.58 1214.05 L2074.99 1214.05 L2074.41 1214.05 L2073.82 1214.05 L2073.23 1214.05 L2072.65 1214.05 L2072.06 1214.05 L2071.48 1214.05 L2070.89 1214.05 L2070.3 1214.05 L2069.72 1214.05 L2069.13 1214.05 L2068.54 1214.05 L2067.96 1214.05 L2067.37 1214.05 L2066.78 1214.05 L2066.2 1214.05 L2065.61 1214.05 L2065.02 1214.05 L2064.44 1214.05 L2063.85 1214.05 L2063.27 1214.05 L2062.68 1214.05 L2062.09 1214.05 L2061.51 1214.05 L2060.92 1214.05 L2060.33 1214.05 L2059.75 1214.05 L2059.16 1214.05 L2058.57 1214.05 L2057.99 1214.05 L2057.4 1214.05 L2056.81 1214.05 L2056.23 1214.05 L2055.64 1214.05 L2055.06 1214.05 L2054.47 1214.05 L2053.88 1214.05 L2053.3 1214.05 L2052.71 1214.05 L2052.12 1214.05 L2051.54 1214.05 L2050.95 1214.05 L2050.36 1214.05 L2049.78 1214.05 L2049.19 1214.05 L2048.6 1214.05 L2048.02 1214.05 L2047.43 1214.05 L2046.85 1214.05 L2046.26 1214.05 L2045.67 1214.05 L2045.09 1214.05 L2044.5 1214.05 L2043.91 1214.05 L2043.33 1214.05 L2042.74 1214.05 L2042.15 1214.05 L2041.57 1214.05 L2040.98 1214.05 L2040.4 1214.05 L2039.81 1214.05 L2039.22 1214.05 L2038.64 1214.05 L2038.05 1214.05 L2037.46 1214.05 L2036.88 1214.05 L2036.29 1214.05 L2035.7 1214.05 L2035.12 1214.05 L2034.53 1214.05 L2033.94 1214.05 L2033.36 1214.05 L2032.77 1214.05 L2032.19 1214.05 L2031.6 1214.05 L2031.01 1214.05 L2030.43 1214.05 L2029.84 1214.05 L2029.25 1214.05 L2028.67 1214.05 L2028.08 1214.05 L2027.49 1214.05 L2026.91 1214.05 L2026.32 1214.05 L2025.73 1214.05 L2025.15 1214.05 L2024.56 1214.05 L2023.98 1214.05 L2023.39 1214.05 L2022.8 1214.05 L2022.22 1214.05 L2021.63 1214.05 L2021.04 1214.05 L2020.46 1214.05 L2019.87 1214.05 L2019.28 1214.05 L2018.7 1214.05 L2018.11 1214.05 L2017.53 1214.05 L2016.94 1214.05 L2016.35 1214.05 L2015.77 1214.05 L2015.18 1214.05 L2014.59 1214.05 L2014.01 1214.05 L2013.42 1214.05 L2012.83 1214.05 L2012.25 1214.05 L2011.66 1214.05 L2011.07 1214.05 L2010.49 1214.05 L2009.9 1214.05 L2009.32 1214.05 L2008.73 1214.05 L2008.14 1214.05 L2007.56 1214.05 L2006.97 1214.05 L2006.38 1214.05 L2005.8 1214.05 L2005.21 1214.05 L2004.62 1214.05 L2004.04 1214.05 L2003.45 1214.05 L2002.86 1214.05 L2002.28 1214.05 L2001.69 1214.05 L2001.11 1214.05 L2000.52 1214.05 L1999.93 1214.05 L1999.35 1214.05 L1998.76 1214.05 L1998.17 1214.05 L1997.59 1214.05 L1997 1214.05 L1996.41 1214.05 L1995.83 1214.05 L1995.24 1214.05 L1994.65 1214.05 L1994.07 1214.05 L1993.48 1214.05 L1992.9 1214.05 L1992.31 1214.05 L1991.72 1214.05 L1991.14 1214.05 L1990.55 1214.05 L1989.96 1214.05 L1989.38 1214.05 L1988.79 1214.05 L1988.2 1214.05 L1987.62 1214.05 L1987.03 1214.05 L1986.45 1214.05 L1985.86 1214.05 L1985.27 1214.05 L1984.69 1214.05 L1984.1 1214.05 L1983.51 1214.05 L1982.93 1214.05 L1982.34 1214.05 L1981.75 1214.05 L1981.17 1214.05 L1980.58 1214.05 L1979.99 1214.05 L1979.41 1214.05 L1978.82 1214.05 L1978.24 1214.05 L1977.65 1214.05 L1977.06 1214.05 L1976.48 1214.05 L1975.89 1214.05 L1975.3 1214.05 L1974.72 1214.05 L1974.13 1214.05 L1973.54 1214.05 L1972.96 1214.05 L1972.37 1214.05 L1971.78 1214.05 L1971.2 1214.05 L1970.61 1214.05 L1970.03 1214.05 L1969.44 1214.05 L1968.85 1214.05 L1968.27 1214.05 L1967.68 1214.05 L1967.09 1214.05 L1966.51 1214.05 L1965.92 1214.05 L1965.33 1214.05 L1964.75 1214.05 L1964.16 1214.05 L1963.58 1214.05 L1962.99 1214.05 L1962.4 1214.05 L1961.82 1214.05 L1961.23 1214.05 L1960.64 1214.05 L1960.06 1214.05 L1959.47 1214.05 L1958.88 1214.05 L1958.3 1214.05 L1957.71 1214.05 L1957.12 1214.05 L1956.54 1214.05 L1955.95 1214.05 L1955.37 1214.05 L1954.78 1214.05 L1954.19 1214.05 L1953.61 1214.05 L1953.02 1214.05 L1952.43 1214.05 L1951.85 1214.05 L1951.26 1214.05 L1950.67 1214.05 L1950.09 1214.05 L1949.5 1214.05 L1948.91 1214.05 L1948.33 1214.05 L1947.74 1214.05 L1947.16 1214.05 L1946.57 1214.05 L1945.98 1214.05 L1945.4 1214.05 L1944.81 1214.05 L1944.22 1214.05 L1943.64 1214.05 L1943.05 1214.05 L1942.46 1214.05 L1941.88 1214.05 L1941.29 1214.05 L1940.71 1214.05 L1940.12 1214.05 L1939.53 1214.05 L1938.95 1214.05 L1938.36 1214.05 L1937.77 1214.05 L1937.19 1214.05 L1936.6 1214.05 L1936.01 1214.05 L1935.43 1214.05 L1934.84 1214.05 L1934.25 1214.05 L1933.67 1214.05 L1933.08 1214.05 L1932.5 1214.05 L1931.91 1214.05 L1931.32 1214.05 L1930.74 1214.05 L1930.15 1214.05 L1929.56 1214.05 L1928.98 1214.05 L1928.39 1214.05 L1927.8 1214.05 L1927.22 1214.05 L1926.63 1214.05 L1926.04 1214.05 L1925.46 1214.05 L1924.87 1214.05 L1924.29 1214.05 L1923.7 1214.05 L1923.11 1214.05 L1922.53 1214.05 L1921.94 1214.05 L1921.35 1214.05 L1920.77 1214.05 L1920.18 1214.05 L1919.59 1214.05 L1919.01 1214.05 L1918.42 1214.05 L1917.83 1214.05 L1917.25 1214.05 L1916.66 1214.05 L1916.08 1214.05 L1915.49 1214.05 L1914.9 1214.05 L1914.32 1214.05 L1913.73 1214.05 L1913.14 1214.05 L1912.56 1214.05 L1911.97 1214.05 L1911.38 1214.05 L1910.8 1214.05 L1910.21 1214.05 L1909.63 1214.05 L1909.04 1214.05 L1908.45 1214.05 L1907.87 1214.05 L1907.28 1214.05 L1906.69 1214.05 L1906.11 1214.05 L1905.52 1214.05 L1904.93 1214.05 L1904.35 1214.05 L1903.76 1214.05 L1903.17 1214.05 L1902.59 1214.05 L1902 1214.05 L1901.42 1214.05 L1900.83 1214.05 L1900.24 1214.05 L1899.66 1214.05 L1899.07 1214.05 L1898.48 1214.05 L1897.9 1214.05 L1897.31 1214.05 L1896.72 1214.05 L1896.14 1214.05 L1895.55 1214.05 L1894.96 1214.05 L1894.38 1214.05 L1893.79 1214.05 L1893.21 1214.05 L1892.62 1214.05 L1892.03 1214.05 L1891.45 1214.05 L1890.86 1214.05 L1890.27 1214.05 L1889.69 1214.05 L1889.1 1214.05 L1888.51 1214.05 L1887.93 1214.05 L1887.34 1214.05 L1886.76 1214.05 L1886.17 1214.05 L1885.58 1214.05 L1885 1214.05 L1884.41 1214.05 L1883.82 1214.05 L1883.24 1214.05 L1882.65 1214.05 L1882.06 1214.05 L1881.48 1214.05 L1880.89 1214.05 L1880.3 1214.05 L1879.72 1214.05 L1879.13 1214.05 L1878.55 1214.05 L1877.96 1214.05 L1877.37 1214.05 L1876.79 1214.05 L1876.2 1214.05 L1875.61 1214.05 L1875.03 1214.05 L1874.44 1214.05 L1873.85 1214.05 L1873.27 1214.05 L1872.68 1214.05 L1872.09 1214.05 L1871.51 1214.05 L1870.92 1214.05 L1870.34 1214.05 L1869.75 1214.05 L1869.16 1214.05 L1868.58 1214.05 L1867.99 1214.05 L1867.4 1214.05 L1866.82 1214.05 L1866.23 1214.05 L1865.64 1214.05 L1865.06 1214.05 L1864.47 1214.05 L1863.88 1214.05 L1863.3 1214.05 L1862.71 1214.05 L1862.13 1214.05 L1861.54 1214.05 L1860.95 1214.05 L1860.37 1214.05 L1859.78 1214.05 L1859.19 1214.05 L1858.61 1214.05 L1858.02 1214.05 L1857.43 1214.05 L1856.85 1214.05 L1856.26 1214.05 L1855.68 1214.05 L1855.09 1214.05 L1854.5 1214.05 L1853.92 1214.05 L1853.33 1214.05 L1852.74 1214.05 L1852.16 1214.05 L1851.57 1214.05 L1850.98 1214.05 L1850.4 1214.05 L1849.81 1214.05 L1849.22 1214.05 L1848.64 1214.05 L1848.05 1214.05 L1847.47 1214.05 L1846.88 1214.05 L1846.29 1214.05 L1845.71 1214.05 L1845.12 1214.05 L1844.53 1214.05 L1843.95 1214.05 L1843.36 1214.05 L1842.77 1214.05 L1842.19 1214.05 L1841.6 1214.05 L1841.01 1214.05 L1840.43 1214.05 L1839.84 1214.05 L1839.26 1214.05 L1838.67 1214.05 L1838.08 1214.05 L1837.5 1214.05 L1836.91 1214.05 L1836.32 1214.05 L1835.74 1214.05 L1835.15 1214.05 L1834.56 1214.05 L1833.98 1214.05 L1833.39 1214.05 L1832.81 1214.05 L1832.22 1214.05 L1831.63 1214.05 L1831.05 1214.05 L1830.46 1214.05 L1829.87 1214.05 L1829.29 1214.05 L1828.7 1214.05 L1828.11 1214.05 L1827.53 1214.05 L1826.94 1214.05 L1826.35 1214.05 L1825.77 1214.05 L1825.18 1214.05 L1824.6 1214.05 L1824.01 1214.05 L1823.42 1214.05 L1822.84 1214.05 L1822.25 1214.05 L1821.66 1214.05 L1821.08 1214.05 L1820.49 1214.05 L1819.9 1214.05 L1819.32 1214.05 L1818.73 1214.05 L1818.14 1214.05 L1817.56 1214.05 L1816.97 1214.05 L1816.39 1214.05 L1815.8 1214.05 L1815.21 1214.05 L1814.63 1214.05 L1814.04 1214.05 L1813.45 1214.05 L1812.87 1214.05 L1812.28 1214.05 L1811.69 1214.05 L1811.11 1214.05 L1810.52 1214.05 L1809.94 1214.05 L1809.35 1214.05 L1808.76 1214.05 L1808.18 1214.05 L1807.59 1214.05 L1807 1214.05 L1806.42 1214.05 L1805.83 1214.05 L1805.24 1214.05 L1804.66 1214.05 L1804.07 1214.05 L1803.48 1214.05 L1802.9 1214.05 L1802.31 1214.05 L1801.73 1214.05 L1801.14 1214.05 L1800.55 1214.05 L1799.97 1214.05 L1799.38 1214.05 L1798.79 1214.05 L1798.21 1214.05 L1797.62 1214.05 L1797.03 1214.05 L1796.45 1214.05 L1795.86 1214.05 L1795.27 1214.05 L1794.69 1214.05 L1794.1 1214.05 L1793.52 1214.05 L1792.93 1214.05 L1792.34 1214.05 L1791.76 1214.05 L1791.17 1214.05 L1790.58 1214.05 L1790 1214.05 L1789.41 1214.05 L1788.82 1214.05 L1788.24 1214.05 L1787.65 1214.05 L1787.06 1214.05 L1786.48 1214.05 L1785.89 1214.05 L1785.31 1214.05 L1784.72 1214.05 L1784.13 1214.05 L1783.55 1214.05 L1782.96 1214.05 L1782.37 1214.05 L1781.79 1214.05 L1781.2 1214.05 L1780.61 1214.05 L1780.03 1214.05 L1779.44 1214.05 L1778.86 1214.05 L1778.27 1214.05 L1777.68 1214.05 L1777.1 1214.05 L1776.51 1214.05 L1775.92 1214.05 L1775.34 1214.05 L1774.75 1214.05 L1774.16 1214.05 L1773.58 1214.05 L1772.99 1214.05 L1772.4 1214.05 L1771.82 1214.05 L1771.23 1214.05 L1770.65 1214.05 L1770.06 1214.05 L1769.47 1214.05 L1768.89 1214.05 L1768.3 1214.05 L1767.71 1214.05 L1767.13 1214.05 L1766.54 1214.05 L1765.95 1214.05 L1765.37 1214.05 L1764.78 1214.05 L1764.19 1214.05 L1763.61 1214.05 L1763.02 1214.05 L1762.44 1214.05 L1761.85 1214.05 L1761.26 1214.05 L1760.68 1214.05 L1760.09 1214.05 L1759.5 1214.05 L1758.92 1214.05 L1758.33 1214.05 L1757.74 1214.05 L1757.16 1214.05 L1756.57 1214.05 L1755.99 1214.05 L1755.4 1214.05 L1754.81 1214.05 L1754.23 1214.05 L1753.64 1214.05 L1753.05 1214.05 L1752.47 1214.05 L1751.88 1214.05 L1751.29 1214.05 L1750.71 1214.05 L1750.12 1214.05 L1749.53 1214.05 L1748.95 1214.05 L1748.36 1214.05 L1747.78 1214.05 L1747.19 1214.05 L1746.6 1214.05 L1746.02 1214.05 L1745.43 1214.05 L1744.84 1214.05 L1744.26 1214.05 L1743.67 1214.05 L1743.08 1214.05 L1742.5 1214.05 L1741.91 1214.05 L1741.32 1214.05 L1740.74 1214.05 L1740.15 1214.05 L1739.57 1214.05 L1738.98 1214.05 L1738.39 1214.05 L1737.81 1214.05 L1737.22 1214.05 L1736.63 1214.05 L1736.05 1214.05 L1735.46 1214.05 L1734.87 1214.05 L1734.29 1214.05 L1733.7 1214.05 L1733.11 1214.05 L1732.53 1214.05 L1731.94 1214.05 L1731.36 1214.05 L1730.77 1214.05 L1730.18 1214.05 L1729.6 1214.05 L1729.01 1214.05 L1728.42 1214.05 L1727.84 1214.05 L1727.25 1214.05 L1726.66 1214.05 L1726.08 1214.05 L1725.49 1214.05 L1724.91 1214.05 L1724.32 1214.05 L1723.73 1214.05 L1723.15 1214.05 L1722.56 1214.05 L1721.97 1214.05 L1721.39 1214.05 L1720.8 1214.05 L1720.21 1214.05 L1719.63 1214.05 L1719.04 1214.05 L1718.45 1214.05 L1717.87 1214.05 L1717.28 1214.05 L1716.7 1214.05 L1716.11 1214.05 L1715.52 1214.05 L1714.94 1214.05 L1714.35 1214.05 L1713.76 1214.05 L1713.18 1214.05 L1712.59 1214.05 L1712 1214.05 L1711.42 1214.05 L1710.83 1214.05 L1710.24 1214.05 L1709.66 1214.05 L1709.07 1214.05 L1708.49 1214.05 L1707.9 1214.05 L1707.31 1214.05 L1706.73 1214.05 L1706.14 1214.05 L1705.55 1214.05 L1704.97 1214.05 L1704.38 1214.05 L1703.79 1214.05 L1703.21 1214.05 L1702.62 1214.05 L1702.04 1214.05 L1701.45 1214.05 L1700.86 1214.05 L1700.28 1214.05 L1699.69 1214.05 L1699.1 1214.05 L1698.52 1214.05 L1697.93 1214.05 L1697.34 1214.05 L1696.76 1214.05 L1696.17 1214.05 L1695.58 1214.05 L1695 1214.05 L1694.41 1214.05 L1693.83 1214.05 L1693.24 1214.05 L1692.65 1214.05 L1692.07 1214.05 L1691.48 1214.05 L1690.89 1214.05 L1690.31 1214.05 L1689.72 1214.05 L1689.13 1214.05 L1688.55 1214.05 L1687.96 1214.05 L1687.37 1214.05 L1686.79 1214.05 L1686.2 1214.05 L1685.62 1214.05 L1685.03 1214.05 L1684.44 1214.05 L1683.86 1214.05 L1683.27 1214.05 L1682.68 1214.05 L1682.1 1214.05 L1681.51 1214.05 L1680.92 1214.05 L1680.34 1214.05 L1679.75 1214.05 L1679.17 1214.05 L1678.58 1214.05 L1677.99 1214.05 L1677.41 1214.05 L1676.82 1214.05 L1676.23 1214.05 L1675.65 1214.05 L1675.06 1214.05 L1674.47 1214.05 L1673.89 1214.05 L1673.3 1214.05 L1672.71 1214.05 L1672.13 1214.05 L1671.54 1214.05 L1670.96 1214.05 L1670.37 1214.05 L1669.78 1214.05 L1669.2 1214.05 L1668.61 1214.05 L1668.02 1214.05 L1667.44 1214.05 L1666.85 1214.05 L1666.26 1214.05 L1665.68 1214.05 L1665.09 1214.05 L1664.5 1214.05 L1663.92 1214.05 L1663.33 1214.05 L1662.75 1214.05 L1662.16 1214.05 L1661.57 1214.05 L1660.99 1214.05 L1660.4 1214.05 L1659.81 1214.05 L1659.23 1214.05 L1658.64 1214.05 L1658.05 1214.05 L1657.47 1214.05 L1656.88 1214.05 L1656.29 1214.05 L1655.71 1214.05 L1655.12 1214.05 L1654.54 1214.05 L1653.95 1214.05 L1653.36 1214.05 L1652.78 1214.05 L1652.19 1214.05 L1651.6 1214.05 L1651.02 1214.05 L1650.43 1214.05 L1649.84 1214.05 L1649.26 1214.05 L1648.67 1214.05 L1648.09 1214.05 L1647.5 1214.05 L1646.91 1214.05 L1646.33 1214.05 L1645.74 1214.05 L1645.15 1214.05 L1644.57 1214.05 L1643.98 1214.05 L1643.39 1214.05 L1642.81 1214.05 L1642.22 1214.05 L1641.63 1214.05 L1641.05 1214.05 L1640.46 1214.05 L1639.88 1214.05 L1639.29 1214.05 L1638.7 1214.05 L1638.12 1214.05 L1637.53 1214.05 L1636.94 1214.05 L1636.36 1214.05 L1635.77 1214.05 L1635.18 1214.05 L1634.6 1214.05 L1634.01 1214.05 L1633.42 1214.05 L1632.84 1214.05 L1632.25 1214.05 L1631.67 1214.05 L1631.08 1214.05 L1630.49 1214.05 L1629.91 1214.05 L1629.32 1214.05 L1628.73 1214.05 L1628.15 1214.05 L1627.56 1214.05 L1626.97 1214.05 L1626.39 1214.05 L1625.8 1214.05 L1625.22 1214.05 L1624.63 1214.05 L1624.04 1214.05 L1623.46 1214.05 L1622.87 1214.05 L1622.28 1214.05 L1621.7 1214.05 L1621.11 1214.05 L1620.52 1214.05 L1619.94 1214.05 L1619.35 1214.05 L1618.76 1214.05 L1618.18 1214.05 L1617.59 1214.05 L1617.01 1214.05 L1616.42 1214.05 L1615.83 1214.05 L1615.25 1214.05 L1614.66 1214.05 L1614.07 1214.05 L1613.49 1214.05 L1612.9 1214.05 L1612.31 1214.05 L1611.73 1214.05 L1611.14 1214.05 L1610.55 1214.05 L1609.97 1214.05 L1609.38 1214.05 L1608.8 1214.05 L1608.21 1214.05 L1607.62 1214.05 L1607.04 1214.05 L1606.45 1214.05 L1605.86 1214.05 L1605.28 1214.05 L1604.69 1214.05 L1604.1 1214.05 L1603.52 1214.05 L1602.93 1214.05 L1602.34 1214.05 L1601.76 1214.05 L1601.17 1214.05 L1600.59 1214.05 L1600 1214.05 L1599.41 1214.05 L1598.83 1214.05 L1598.24 1214.05 L1597.65 1214.05 L1597.07 1214.05 L1596.48 1214.05 L1595.89 1214.05 L1595.31 1214.05 L1594.72 1214.05 L1594.14 1214.05 L1593.55 1214.05 L1592.96 1214.05 L1592.38 1214.05 L1591.79 1214.05 L1591.2 1214.05 L1590.62 1214.05 L1590.03 1214.05 L1589.44 1214.05 L1588.86 1214.05 L1588.27 1214.05 L1587.68 1214.05 L1587.1 1214.05 L1586.51 1214.05 L1585.93 1214.05 L1585.34 1214.05 L1584.75 1214.05 L1584.17 1214.05 L1583.58 1214.05 L1582.99 1214.05 L1582.41 1214.05 L1581.82 1214.05 L1581.23 1214.05 L1580.65 1214.05 L1580.06 1214.05 L1579.47 1214.05 L1578.89 1214.05 L1578.3 1214.05 L1577.72 1214.05 L1577.13 1214.05 L1576.54 1214.05 L1575.96 1214.05 L1575.37 1214.05 L1574.78 1214.05 L1574.2 1214.05 L1573.61 1214.05 L1573.02 1214.05 L1572.44 1214.05 L1571.85 1214.05 L1571.27 1214.05 L1570.68 1214.05 L1570.09 1214.05 L1569.51 1214.05 L1568.92 1214.05 L1568.33 1214.05 L1567.75 1214.05 L1567.16 1214.05 L1566.57 1214.05 L1565.99 1214.05 L1565.4 1214.05 L1564.81 1214.05 L1564.23 1214.05 L1563.64 1214.05 L1563.06 1214.05 L1562.47 1214.05 L1561.88 1214.05 L1561.3 1214.05 L1560.71 1214.05 L1560.12 1214.05 L1559.54 1214.05 L1558.95 1214.05 L1558.36 1214.05 L1557.78 1214.05 L1557.19 1214.05 L1556.6 1214.05 L1556.02 1214.05 L1555.43 1214.05 L1554.85 1214.05 L1554.26 1214.05 L1553.67 1214.05 L1553.09 1214.05 L1552.5 1214.05 L1551.91 1214.05 L1551.33 1214.05 L1550.74 1214.05 L1550.15 1214.05 L1549.57 1214.05 L1548.98 1214.05 L1548.4 1214.05 L1547.81 1214.05 L1547.22 1214.05 L1546.64 1214.05 L1546.05 1214.05 L1545.46 1214.05 L1544.88 1214.05 L1544.29 1214.05 L1543.7 1214.05 L1543.12 1214.05 L1542.53 1214.05 L1541.94 1214.05 L1541.36 1214.05 L1540.77 1214.05 L1540.19 1214.05 L1539.6 1214.05 L1539.01 1214.05 L1538.43 1214.05 L1537.84 1214.05 L1537.25 1214.05 L1536.67 1214.05 L1536.08 1214.05 L1535.49 1214.05 L1534.91 1214.05 L1534.32 1214.05 L1533.73 1214.05 L1533.15 1214.05 L1532.56 1214.05 L1531.98 1214.05 L1531.39 1214.05 L1530.8 1214.05 L1530.22 1214.05 L1529.63 1214.05 L1529.04 1214.05 L1528.46 1214.05 L1527.87 1214.05 L1527.28 1214.05 L1526.7 1214.05 L1526.11 1214.05 L1525.52 1214.05 L1524.94 1214.05 L1524.35 1214.05 L1523.77 1214.05 L1523.18 1214.05 L1522.59 1214.05 L1522.01 1214.05 L1521.42 1214.05 L1520.83 1214.05 L1520.25 1214.05 L1519.66 1214.05 L1519.07 1214.05 L1518.49 1214.05 L1517.9 1214.05 L1517.32 1214.05 L1516.73 1214.05 L1516.14 1214.05 L1515.56 1214.05 L1514.97 1214.05 L1514.38 1214.05 L1513.8 1214.05 L1513.21 1214.05 L1512.62 1214.05 L1512.04 1214.05 L1511.45 1214.05 L1510.86 1214.05 L1510.28 1214.05 L1509.69 1214.05 L1509.11 1214.05 L1508.52 1214.05 L1507.93 1214.05 L1507.35 1214.05 L1506.76 1214.05 L1506.17 1214.05 L1505.59 1214.05 L1505 1214.05 L1504.41 1214.05 L1503.83 1214.05 L1503.24 1214.05 L1502.65 1214.05 L1502.07 1214.05 L1501.48 1214.05 L1500.9 1214.05 L1500.31 1214.05 L1499.72 1214.05 L1499.14 1214.05 L1498.55 1214.05 L1497.96 1214.05 L1497.38 1214.05 L1496.79 1214.05 L1496.2 1214.05 L1495.62 1214.05 L1495.03 1214.05 L1494.45 1214.05 L1493.86 1214.05 L1493.27 1214.05 L1492.69 1214.05 L1492.1 1214.05 L1491.51 1214.05 L1490.93 1214.05 L1490.34 1214.05 L1489.75 1214.05 L1489.17 1214.05 L1488.58 1214.05 L1487.99 1214.05 L1487.41 1214.05 L1486.82 1214.05 L1486.24 1214.05 L1485.65 1214.05 L1485.06 1214.05 L1484.48 1214.05 L1483.89 1214.05 L1483.3 1214.05 L1482.72 1214.05 L1482.13 1214.05 L1481.54 1214.05 L1480.96 1214.05 L1480.37 1214.05 L1479.78 1214.05 L1479.2 1214.05 L1478.61 1214.05 L1478.03 1214.05 L1477.44 1214.05 L1476.85 1214.05 L1476.27 1214.05 L1475.68 1214.05 L1475.09 1214.05 L1474.51 1214.05 L1473.92 1214.05 L1473.33 1214.05 L1472.75 1214.05 L1472.16 1214.05 L1471.57 1214.05 L1470.99 1214.05 L1470.4 1214.05 L1469.82 1214.05 L1469.23 1214.05 L1468.64 1214.05 L1468.06 1214.05 L1467.47 1214.05 L1466.88 1214.05 L1466.3 1214.05 L1465.71 1214.05 L1465.12 1214.05 L1464.54 1214.05 L1463.95 1214.05 L1463.37 1214.05 L1462.78 1214.05 L1462.19 1214.05 L1461.61 1214.05 L1461.02 1214.05 L1460.43 1214.05 L1459.85 1214.05 L1459.26 1214.05 L1458.67 1214.05 L1458.09 1214.05 L1457.5 1214.05 L1456.91 1214.05 L1456.33 1214.05 L1455.74 1214.05 L1455.16 1214.05 L1454.57 1214.05 L1453.98 1214.05 L1453.4 1214.05 L1452.81 1214.05 L1452.22 1214.05 L1451.64 1214.05 L1451.05 1214.05 L1450.46 1214.05 L1449.88 1214.05 L1449.29 1214.05 L1448.7 1214.05 L1448.12 1214.05 L1447.53 1214.05 L1446.95 1214.05 L1446.36 1214.05 L1445.77 1214.05 L1445.19 1214.05 L1444.6 1214.05 L1444.01 1214.05 L1443.43 1214.05 L1442.84 1214.05 L1442.25 1214.05 L1441.67 1214.05 L1441.08 1214.05 L1440.5 1214.05 L1439.91 1214.05 L1439.32 1214.05 L1438.74 1214.05 L1438.15 1214.05 L1437.56 1214.05 L1436.98 1214.05 L1436.39 1214.05 L1435.8 1214.05 L1435.22 1214.05 L1434.63 1214.05 L1434.04 1214.05 L1433.46 1214.05 L1432.87 1214.05 L1432.29 1214.05 L1431.7 1214.05 L1431.11 1214.05 L1430.53 1214.05 L1429.94 1214.05 L1429.35 1214.05 L1428.77 1214.05 L1428.18 1214.05 L1427.59 1214.05 L1427.01 1214.05 L1426.42 1214.05 L1425.83 1214.05 L1425.25 1214.05 L1424.66 1214.05 L1424.08 1214.05 L1423.49 1214.05 L1422.9 1214.05 L1422.32 1214.05 L1421.73 1214.05 L1421.14 1214.05 L1420.56 1214.05 L1419.97 1214.05 L1419.38 1214.05 L1418.8 1214.05 L1418.21 1214.05 L1417.63 1214.05 L1417.04 1214.05 L1416.45 1214.05 L1415.87 1214.05 L1415.28 1214.05 L1414.69 1214.05 L1414.11 1214.05 L1413.52 1214.05 L1412.93 1214.05 L1412.35 1214.05 L1411.76 1214.05 L1411.17 1214.05 L1410.59 1214.05 L1410 1214.05 L1409.42 1214.05 L1408.83 1214.05 L1408.24 1214.05 L1407.66 1214.05 L1407.07 1214.05 L1406.48 1214.05 L1405.9 1214.05 L1405.31 1214.05 L1404.72 1214.05 L1404.14 1214.05 L1403.55 1214.05 L1402.96 1214.05 L1402.38 1214.05 L1401.79 1214.05 L1401.21 1214.05 L1400.62 1214.05 L1400.03 1214.05 L1399.45 1214.05 L1398.86 1214.05 L1398.27 1214.05 L1397.69 1214.05 L1397.1 1214.05 L1396.51 1214.05 L1395.93 1214.05 L1395.34 1214.05 L1394.75 1214.05 L1394.17 1214.05 L1393.58 1214.05 L1393 1214.05 L1392.41 1214.05 L1391.82 1214.05 L1391.24 1214.05 L1390.65 1214.05 L1390.06 1214.05 L1389.48 1214.05 L1388.89 1214.05 L1388.3 1214.05 L1387.72 1214.05 L1387.13 1214.05 L1386.55 1214.05 L1385.96 1214.05 L1385.37 1214.05 L1384.79 1214.05 L1384.2 1214.05 L1383.61 1214.05 L1383.03 1214.05 L1382.44 1214.05 L1381.85 1214.05 L1381.27 1214.05 L1380.68 1214.05 L1380.09 1214.05 L1379.51 1214.05 L1378.92 1214.05 L1378.34 1214.05 L1377.75 1214.05 L1377.16 1214.05 L1376.58 1214.05 L1375.99 1214.05 L1375.4 1214.05 L1374.82 1214.05 L1374.23 1214.05 L1373.64 1214.05 L1373.06 1214.05 L1372.47 1214.05 L1371.88 1214.05 L1371.3 1214.05 L1370.71 1214.05 L1370.13 1214.05 L1369.54 1214.05 L1368.95 1214.05 L1368.37 1214.05 L1367.78 1214.05 L1367.19 1214.05 L1366.61 1214.05 L1366.02 1214.05 L1365.43 1214.05 L1364.85 1214.05 L1364.26 1214.05 L1363.68 1214.05 L1363.09 1214.05 L1362.5 1214.05 L1361.92 1214.05 L1361.33 1214.05 L1360.74 1214.05 L1360.16 1214.05 L1359.57 1214.05 L1358.98 1214.05 L1358.4 1214.05 L1357.81 1214.05 L1357.22 1214.05 L1356.64 1214.05 L1356.05 1214.05 L1355.47 1214.05 L1354.88 1214.05 L1354.29 1214.05 L1353.71 1214.05 L1353.12 1214.05 L1352.53 1214.05 L1351.95 1214.05 L1351.36 1214.05 L1350.77 1214.05 L1350.19 1214.05 L1349.6 1214.05 L1349.01 1214.05 L1348.43 1214.05 L1347.84 1214.05 L1347.26 1214.05 L1346.67 1214.05 L1346.08 1214.05 L1345.5 1214.05 L1344.91 1214.05 L1344.32 1214.05 L1343.74 1214.05 L1343.15 1214.05 L1342.56 1214.05 L1341.98 1214.05 L1341.39 1214.05 L1340.8 1214.05 L1340.22 1214.05 L1339.63 1214.05 L1339.05 1214.05 L1338.46 1214.05 L1337.87 1214.05 L1337.29 1214.05 L1336.7 1214.05 L1336.11 1214.05 L1335.53 1214.05 L1334.94 1214.05 L1334.35 1214.05 L1333.77 1214.05 L1333.18 1214.05 L1332.6 1214.05 L1332.01 1214.05 L1331.42 1214.05 L1330.84 1214.05 L1330.25 1214.05 L1329.66 1214.05 L1329.08 1214.05 L1328.49 1214.05 L1327.9 1214.05 L1327.32 1214.05 L1326.73 1214.05 L1326.14 1214.05 L1325.56 1214.05 L1324.97 1214.05 L1324.39 1214.05 L1323.8 1214.05 L1323.21 1214.05 L1322.63 1214.05 L1322.04 1214.05 L1321.45 1214.05 L1320.87 1214.05 L1320.28 1214.05 L1319.69 1214.05 L1319.11 1214.05 L1318.52 1214.05 L1317.93 1214.05 L1317.35 1214.05 L1316.76 1214.05 L1316.18 1214.05 L1315.59 1214.05 L1315 1214.05 L1314.42 1214.05 L1313.83 1214.05 L1313.24 1214.05 L1312.66 1214.05 L1312.07 1214.05 L1311.48 1214.05 L1310.9 1214.05 L1310.31 1214.05 L1309.73 1214.05 L1309.14 1214.05 L1308.55 1214.05 L1307.97 1214.05 L1307.38 1214.05 L1306.79 1214.05 L1306.21 1214.05 L1305.62 1214.05 L1305.03 1214.05 L1304.45 1214.05 L1303.86 1214.05 L1303.27 1214.05 L1302.69 1214.05 L1302.1 1214.05 L1301.52 1214.05 L1300.93 1214.05 L1300.34 1214.05 L1299.76 1214.05 L1299.17 1214.05 L1298.58 1214.05 L1298 1214.05 L1297.41 1214.05 L1296.82 1214.05 L1296.24 1214.05 L1295.65 1214.05 L1295.06 1214.05 L1294.48 1214.05 L1293.89 1214.05 L1293.31 1214.05 L1292.72 1214.05 L1292.13 1214.05 L1291.55 1214.05 L1290.96 1214.05 L1290.37 1214.05 L1289.79 1214.05 L1289.2 1214.05 L1288.61 1214.05 L1288.03 1214.05 L1287.44 1214.05 L1286.86 1214.05 L1286.27 1214.05 L1285.68 1214.05 L1285.1 1214.05 L1284.51 1214.05 L1283.92 1214.05 L1283.34 1214.05 L1282.75 1214.05 L1282.16 1214.05 L1281.58 1214.05 L1280.99 1214.05 L1280.4 1214.05 L1279.82 1214.05 L1279.23 1214.05 L1278.65 1214.05 L1278.06 1214.05 L1277.47 1214.05 L1276.89 1214.05 L1276.3 1214.05 L1275.71 1214.05 L1275.13 1214.05 L1274.54 1214.05 L1273.95 1214.05 L1273.37 1214.05 L1272.78 1214.05 L1272.19 1214.05 L1271.61 1214.05 L1271.02 1214.05 L1270.44 1214.05 L1269.85 1214.05 L1269.26 1214.05 L1268.68 1214.05 L1268.09 1214.05 L1267.5 1214.05 L1266.92 1214.05 L1266.33 1214.05 L1265.74 1214.05 L1265.16 1214.05 L1264.57 1214.05 L1263.98 1214.05 L1263.4 1214.05 L1262.81 1214.05 L1262.23 1214.05 L1261.64 1214.05 L1261.05 1214.05 L1260.47 1214.05 L1259.88 1214.05 L1259.29 1214.05 L1258.71 1214.05 L1258.12 1214.05 L1257.53 1214.05 L1256.95 1214.05 L1256.36 1214.05 L1255.78 1214.05 L1255.19 1214.05 L1254.6 1214.05 L1254.02 1214.05 L1253.43 1214.05 L1252.84 1214.05 L1252.26 1214.05 L1251.67 1214.05 L1251.08 1214.05 L1250.5 1214.05 L1249.91 1214.05 L1249.32 1214.05 L1248.74 1214.05 L1248.15 1214.05 L1247.57 1214.05 L1246.98 1214.05 L1246.39 1214.05 L1245.81 1214.05 L1245.22 1214.05 L1244.63 1214.05 L1244.05 1214.05 L1243.46 1214.05 L1242.87 1214.05 L1242.29 1214.05 L1241.7 1214.05 L1241.11 1214.05 L1240.53 1214.05 L1239.94 1214.05 L1239.36 1214.05 L1238.77 1214.05 L1238.18 1214.05 L1237.6 1214.05 L1237.01 1214.05 L1236.42 1214.05 L1235.84 1214.05 L1235.25 1214.05 L1234.66 1214.05 L1234.08 1214.05 L1233.49 1214.05 L1232.91 1214.05 L1232.32 1214.05 L1231.73 1214.05 L1231.15 1214.05 L1230.56 1214.05 L1229.97 1214.05 L1229.39 1214.05 L1228.8 1214.05 L1228.21 1214.05 L1227.63 1214.05 L1227.04 1214.05 L1226.45 1214.05 L1225.87 1214.05 L1225.28 1214.05 L1224.7 1214.05 L1224.11 1214.05 L1223.52 1214.05 L1222.94 1214.05 L1222.35 1214.05 L1221.76 1214.05 L1221.18 1214.05 L1220.59 1214.05 L1220 1214.05 L1219.42 1214.05 L1218.83 1214.05 L1218.24 1214.05 L1217.66 1214.05 L1217.07 1214.05 L1216.49 1214.05 L1215.9 1214.05 L1215.31 1214.05 L1214.73 1214.05 L1214.14 1214.05 L1213.55 1214.05 L1212.97 1214.05 L1212.38 1214.05 L1211.79 1214.05 L1211.21 1214.05 L1210.62 1214.05 L1210.03 1214.05 L1209.45 1214.05 L1208.86 1214.05 L1208.28 1214.05 L1207.69 1214.05 L1207.1 1214.05 L1206.52 1214.05 L1205.93 1214.05 L1205.34 1214.05 L1204.76 1214.05 L1204.17 1214.05 L1203.58 1214.05 L1203 1214.05 L1202.41 1214.05 L1201.83 1214.05 L1201.24 1214.05 L1200.65 1214.05 L1200.07 1214.05 L1199.48 1214.05 L1198.89 1214.05 L1198.31 1214.05 L1197.72 1214.05 L1197.13 1214.05 L1196.55 1214.05 L1195.96 1214.05 L1195.37 1214.05 L1194.79 1214.05 L1194.2 1214.05 L1193.62 1214.05 L1193.03 1214.05 L1192.44 1214.05 L1191.86 1214.05 L1191.27 1214.05 L1190.68 1214.05 L1190.1 1214.05 L1189.51 1214.05 L1188.92 1214.05 L1188.34 1214.05 L1187.75 1214.05 L1187.16 1214.05 L1186.58 1214.05 L1185.99 1214.05 L1185.41 1214.05 L1184.82 1214.05 L1184.23 1214.05 L1183.65 1214.05 L1183.06 1214.05 L1182.47 1214.05 L1181.89 1214.05 L1181.3 1214.05 L1180.71 1214.05 L1180.13 1214.05 L1179.54 1214.05 L1178.96 1214.05 L1178.37 1214.05 L1177.78 1214.05 L1177.2 1214.05 L1176.61 1214.05 L1176.02 1214.05 L1175.44 1214.05 L1174.85 1214.05 L1174.26 1214.05 L1173.68 1214.05 L1173.09 1214.05 L1172.5 1214.05 L1171.92 1214.05 L1171.33 1214.05 L1170.75 1214.05 L1170.16 1214.05 L1169.57 1214.05 L1168.99 1214.05 L1168.4 1214.05 L1167.81 1214.05 L1167.23 1214.05 L1166.64 1214.05 L1166.05 1214.05 L1165.47 1214.05 L1164.88 1214.05 L1164.29 1214.05 L1163.71 1214.05 L1163.12 1214.05 L1162.54 1214.05 L1161.95 1214.05 L1161.36 1214.05 L1160.78 1214.05 L1160.19 1214.05 L1159.6 1214.05 L1159.02 1214.05 L1158.43 1214.05 L1157.84 1214.05 L1157.26 1214.05 L1156.67 1214.05 L1156.09 1214.05 L1155.5 1214.05 L1154.91 1214.05 L1154.33 1214.05 L1153.74 1214.05 L1153.15 1214.05 L1152.57 1214.05 L1151.98 1214.05 L1151.39 1214.05 L1150.81 1214.05 L1150.22 1214.05 L1149.63 1214.05 L1149.05 1214.05 L1148.46 1214.05 L1147.88 1214.05 L1147.29 1214.05 L1146.7 1214.05 L1146.12 1214.05 L1145.53 1214.05 L1144.94 1214.05 L1144.36 1214.05 L1143.77 1214.05 L1143.18 1214.05 L1142.6 1214.05 L1142.01 1214.05 L1141.42 1214.05 L1140.84 1214.05 L1140.25 1214.05 L1139.67 1214.05 L1139.08 1214.05 L1138.49 1214.05 L1137.91 1214.05 L1137.32 1214.05 L1136.73 1214.05 L1136.15 1214.05 L1135.56 1214.05 L1134.97 1214.05 L1134.39 1214.05 L1133.8 1214.05 L1133.21 1214.05 L1132.63 1214.05 L1132.04 1214.05 L1131.46 1214.05 L1130.87 1214.05 L1130.28 1214.05 L1129.7 1214.05 L1129.11 1214.05 L1128.52 1214.05 L1127.94 1214.05 L1127.35 1214.05 L1126.76 1214.05 L1126.18 1214.05 L1125.59 1214.05 L1125.01 1214.05 L1124.42 1214.05 L1123.83 1214.05 L1123.25 1214.05 L1122.66 1214.05 L1122.07 1214.05 L1121.49 1214.05 L1120.9 1214.05 L1120.31 1214.05 L1119.73 1214.05 L1119.14 1214.05 L1118.55 1214.05 L1117.97 1214.05 L1117.38 1214.05 L1116.8 1214.05 L1116.21 1214.05 L1115.62 1214.05 L1115.04 1214.05 L1114.45 1214.05 L1113.86 1214.05 L1113.28 1214.05 L1112.69 1214.05 L1112.1 1214.05 L1111.52 1214.05 L1110.93 1214.05 L1110.34 1214.05 L1109.76 1214.05 L1109.17 1214.05 L1108.59 1214.05 L1108 1214.05 L1107.41 1214.05 L1106.83 1214.05 L1106.24 1214.05 L1105.65 1214.05 L1105.07 1214.05 L1104.48 1214.05 L1103.89 1214.05 L1103.31 1214.05 L1102.72 1214.05 L1102.14 1214.05 L1101.55 1214.05 L1100.96 1214.05 L1100.38 1214.05 L1099.79 1214.05 L1099.2 1214.05 L1098.62 1214.05 L1098.03 1214.05 L1097.44 1214.05 L1096.86 1214.05 L1096.27 1214.05 L1095.68 1214.05 L1095.1 1214.05 L1094.51 1214.05 L1093.93 1214.05 L1093.34 1214.05 L1092.75 1214.05 L1092.17 1214.05 L1091.58 1214.05 L1090.99 1214.05 L1090.41 1214.05 L1089.82 1214.05 L1089.23 1214.05 L1088.65 1214.05 L1088.06 1214.05 L1087.47 1214.05 L1086.89 1214.05 L1086.3 1214.05 L1085.72 1214.05 L1085.13 1214.05 L1084.54 1214.05 L1083.96 1214.05 L1083.37 1214.05 L1082.78 1214.05 L1082.2 1214.05 L1081.61 1214.05 L1081.02 1214.05 L1080.44 1214.05 L1079.85 1214.05 L1079.26 1214.05 L1078.68 1214.05 L1078.09 1214.05 L1077.51 1214.05 L1076.92 1214.05 L1076.33 1214.05 L1075.75 1214.05 L1075.16 1214.05 L1074.57 1214.05 L1073.99 1214.05 L1073.4 1214.05 L1072.81 1214.05 L1072.23 1214.05 L1071.64 1214.05 L1071.06 1214.05 L1070.47 1214.05 L1069.88 1214.05 L1069.3 1214.05 L1068.71 1214.05 L1068.12 1214.05 L1067.54 1214.05 L1066.95 1214.05 L1066.36 1214.05 L1065.78 1214.05 L1065.19 1214.05 L1064.6 1214.05 L1064.02 1214.05 L1063.43 1214.05 L1062.85 1214.05 L1062.26 1214.05 L1061.67 1214.05 L1061.09 1214.05 L1060.5 1214.05 L1059.91 1214.05 L1059.33 1214.05 L1058.74 1214.05 L1058.15 1214.05 L1057.57 1214.05 L1056.98 1214.05 L1056.39 1214.05 L1055.81 1214.05 L1055.22 1214.05 L1054.64 1214.05 L1054.05 1214.05 L1053.46 1214.05 L1052.88 1214.05 L1052.29 1214.05 L1051.7 1214.05 L1051.12 1214.05 L1050.53 1214.05 L1049.94 1214.05 L1049.36 1214.05 L1048.77 1214.05 L1048.19 1214.05 L1047.6 1214.05 L1047.01 1214.05 L1046.43 1214.05 L1045.84 1214.05 L1045.25 1214.05 L1044.67 1214.05 L1044.08 1214.05 L1043.49 1214.05 L1042.91 1214.05 L1042.32 1214.05 L1041.73 1214.05 L1041.15 1214.05 L1040.56 1214.05 L1039.98 1214.05 L1039.39 1214.05 L1038.8 1214.05 L1038.22 1214.05 L1037.63 1214.05 L1037.04 1214.05 L1036.46 1214.05 L1035.87 1214.05 L1035.28 1214.05 L1034.7 1214.05 L1034.11 1214.05 L1033.52 1214.05 L1032.94 1214.05 L1032.35 1214.05 L1031.77 1214.05 L1031.18 1214.05 L1030.59 1214.05 L1030.01 1214.05 L1029.42 1214.05 L1028.83 1214.05 L1028.25 1214.05 L1027.66 1214.05 L1027.07 1214.05 L1026.49 1214.05 L1025.9 1214.05 L1025.32 1214.05 L1024.73 1214.05 L1024.14 1214.05 L1023.56 1214.05 L1022.97 1214.05 L1022.38 1214.05 L1021.8 1214.05 L1021.21 1214.05 L1020.62 1214.05 L1020.04 1214.05 L1019.45 1214.05 L1018.86 1214.05 L1018.28 1214.05 L1017.69 1214.05 L1017.11 1214.05 L1016.52 1214.05 L1015.93 1214.05 L1015.35 1214.05 L1014.76 1214.05 L1014.17 1214.05 L1013.59 1214.05 L1013 1214.05 L1012.41 1214.05 L1011.83 1214.05 L1011.24 1214.05 L1010.65 1214.05 L1010.07 1214.05 L1009.48 1214.05 L1008.9 1214.05 L1008.31 1214.05 L1007.72 1214.05 L1007.14 1214.05 L1006.55 1214.05 L1005.96 1214.05 L1005.38 1214.05 L1004.79 1214.05 L1004.2 1214.05 L1003.62 1214.05 L1003.03 1214.05 L1002.44 1214.05 L1001.86 1214.05 L1001.27 1214.05 L1000.69 1214.05 L1000.1 1214.05 L999.513 1214.05 L998.926 1214.05 L998.34 1214.05 L997.754 1214.05 L997.167 1214.05 L996.581 1214.05 L995.994 1214.05 L995.408 1214.05 L994.822 1214.05 L994.235 1214.05 L993.649 1214.05 L993.062 1214.05 L992.476 1214.05 L991.889 1214.05 L991.303 1214.05 L990.717 1214.05 L990.13 1214.05 L989.544 1214.05 L988.957 1214.05 L988.371 1214.05 L987.785 1214.05 L987.198 1214.05 L986.612 1214.05 L986.025 1214.05  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1214.42 986.612,1214.42 987.198,1214.42 987.785,1214.42 988.371,1214.42 988.957,1214.42 989.544,1214.42 990.13,1214.42 990.717,1214.42 991.303,1214.42 991.889,1214.42 992.476,1214.42 993.062,1214.42 993.649,1214.42 994.235,1214.42 994.822,1214.42 995.408,1214.42 995.994,1214.42 996.581,1214.42 997.167,1214.42 997.754,1214.42 998.34,1214.42 998.926,1214.42 999.513,1214.42 1000.1,1214.42 1000.69,1214.42 1001.27,1214.42 1001.86,1214.42 1002.44,1214.42 1003.03,1214.42 1003.62,1214.42 1004.2,1214.42 1004.79,1214.42 1005.38,1214.42 1005.96,1214.42 1006.55,1214.42 1007.14,1214.42 1007.72,1214.42 1008.31,1214.42 1008.9,1214.42 1009.48,1214.42 1010.07,1214.42 1010.65,1214.42 1011.24,1214.42 1011.83,1214.42 1012.41,1214.42 1013,1214.42 1013.59,1214.42 1014.17,1214.42 1014.76,1214.42 1015.35,1214.42 1015.93,1214.42 1016.52,1214.42 1017.11,1214.42 1017.69,1214.42 1018.28,1214.42 1018.86,1214.42 1019.45,1214.42 1020.04,1214.42 1020.62,1214.42 1021.21,1214.42 1021.8,1214.42 1022.38,1214.42 1022.97,1214.42 1023.56,1214.42 1024.14,1214.42 1024.73,1214.42 1025.32,1214.42 1025.9,1214.42 1026.49,1214.42 1027.07,1214.42 1027.66,1214.42 1028.25,1214.42 1028.83,1214.42 1029.42,1214.42 1030.01,1214.42 1030.59,1214.42 1031.18,1214.42 1031.77,1214.42 1032.35,1214.42 1032.94,1214.42 1033.52,1214.42 1034.11,1214.42 1034.7,1214.42 1035.28,1214.42 1035.87,1214.42 1036.46,1214.42 1037.04,1214.42 1037.63,1214.42 1038.22,1214.42 1038.8,1214.42 1039.39,1214.42 1039.98,1214.42 1040.56,1214.42 1041.15,1214.42 1041.73,1214.42 1042.32,1214.42 1042.91,1214.42 1043.49,1214.42 1044.08,1214.42 1044.67,1214.42 1045.25,1214.42 1045.84,1214.42 1046.43,1214.42 1047.01,1214.42 1047.6,1214.42 1048.19,1214.42 1048.77,1214.42 1049.36,1214.42 1049.94,1214.42 1050.53,1214.42 1051.12,1214.42 1051.7,1214.42 1052.29,1214.42 1052.88,1214.42 1053.46,1214.42 1054.05,1214.42 1054.64,1214.42 1055.22,1214.42 1055.81,1214.42 1056.39,1214.42 1056.98,1214.42 1057.57,1214.42 1058.15,1214.42 1058.74,1214.42 1059.33,1214.42 1059.91,1214.42 1060.5,1214.42 1061.09,1214.42 1061.67,1214.42 1062.26,1214.42 1062.85,1214.42 1063.43,1214.42 1064.02,1214.42 1064.6,1214.42 1065.19,1214.42 1065.78,1214.42 1066.36,1214.42 1066.95,1214.42 1067.54,1214.42 1068.12,1214.42 1068.71,1214.42 1069.3,1214.42 1069.88,1214.42 1070.47,1214.42 1071.06,1214.42 1071.64,1214.42 1072.23,1214.42 1072.81,1214.42 1073.4,1214.42 1073.99,1214.42 1074.57,1214.42 1075.16,1214.42 1075.75,1214.42 1076.33,1214.42 1076.92,1214.42 1077.51,1214.42 1078.09,1214.42 1078.68,1214.42 1079.26,1214.42 1079.85,1214.42 1080.44,1214.42 1081.02,1214.42 1081.61,1214.42 1082.2,1214.42 1082.78,1214.42 1083.37,1214.42 1083.96,1214.42 1084.54,1214.42 1085.13,1214.42 1085.72,1214.42 1086.3,1214.42 1086.89,1214.42 1087.47,1214.42 1088.06,1214.42 1088.65,1214.42 1089.23,1214.42 1089.82,1214.42 1090.41,1214.42 1090.99,1214.42 1091.58,1214.42 1092.17,1214.42 1092.75,1214.42 1093.34,1214.42 1093.93,1214.42 1094.51,1214.42 1095.1,1214.42 1095.68,1214.42 1096.27,1214.42 1096.86,1214.42 1097.44,1214.42 1098.03,1214.42 1098.62,1214.42 1099.2,1214.42 1099.79,1214.42 1100.38,1214.42 1100.96,1214.42 1101.55,1214.42 1102.14,1214.42 1102.72,1214.42 1103.31,1214.42 1103.89,1214.42 1104.48,1214.42 1105.07,1214.42 1105.65,1214.42 1106.24,1214.42 1106.83,1214.42 1107.41,1214.42 1108,1214.42 1108.59,1214.42 1109.17,1214.42 1109.76,1214.42 1110.34,1214.42 1110.93,1214.42 1111.52,1214.42 1112.1,1214.42 1112.69,1214.42 1113.28,1214.42 1113.86,1214.42 1114.45,1214.42 1115.04,1214.42 1115.62,1214.42 1116.21,1214.42 1116.8,1214.42 1117.38,1214.42 1117.97,1214.42 1118.55,1214.42 1119.14,1214.42 1119.73,1214.42 1120.31,1214.42 1120.9,1214.42 1121.49,1214.42 1122.07,1214.42 1122.66,1214.42 1123.25,1214.42 1123.83,1214.42 1124.42,1214.42 1125.01,1214.42 1125.59,1214.42 1126.18,1214.42 1126.76,1214.42 1127.35,1214.42 1127.94,1214.42 1128.52,1214.42 1129.11,1214.42 1129.7,1214.42 1130.28,1214.42 1130.87,1214.42 1131.46,1214.42 1132.04,1214.42 1132.63,1214.42 1133.21,1214.42 1133.8,1214.42 1134.39,1214.42 1134.97,1214.42 1135.56,1214.42 1136.15,1214.42 1136.73,1214.42 1137.32,1214.42 1137.91,1214.42 1138.49,1214.42 1139.08,1214.42 1139.67,1214.42 1140.25,1214.42 1140.84,1214.42 1141.42,1214.42 1142.01,1214.42 1142.6,1214.42 1143.18,1214.42 1143.77,1214.42 1144.36,1214.42 1144.94,1214.42 1145.53,1214.42 1146.12,1214.42 1146.7,1214.42 1147.29,1214.42 1147.88,1214.42 1148.46,1214.42 1149.05,1214.42 1149.63,1214.42 1150.22,1214.42 1150.81,1214.42 1151.39,1214.42 1151.98,1214.42 1152.57,1214.42 1153.15,1214.42 1153.74,1214.42 1154.33,1214.42 1154.91,1214.42 1155.5,1214.42 1156.09,1214.42 1156.67,1214.42 1157.26,1214.42 1157.84,1214.42 1158.43,1214.42 1159.02,1214.42 1159.6,1214.42 1160.19,1214.42 1160.78,1214.42 1161.36,1214.42 1161.95,1214.42 1162.54,1214.42 1163.12,1214.42 1163.71,1214.42 1164.29,1214.42 1164.88,1214.42 1165.47,1214.42 1166.05,1214.42 1166.64,1214.42 1167.23,1214.42 1167.81,1214.42 1168.4,1214.42 1168.99,1214.42 1169.57,1214.42 1170.16,1214.42 1170.75,1214.42 1171.33,1214.42 1171.92,1214.42 1172.5,1214.42 1173.09,1214.42 1173.68,1214.42 1174.26,1214.42 1174.85,1214.42 1175.44,1214.42 1176.02,1214.42 1176.61,1214.42 1177.2,1214.42 1177.78,1214.42 1178.37,1214.42 1178.96,1214.42 1179.54,1214.42 1180.13,1214.42 1180.71,1214.42 1181.3,1214.42 1181.89,1214.42 1182.47,1214.42 1183.06,1214.42 1183.65,1214.42 1184.23,1214.42 1184.82,1214.42 1185.41,1214.42 1185.99,1214.42 1186.58,1214.42 1187.16,1214.42 1187.75,1214.42 1188.34,1214.42 1188.92,1214.42 1189.51,1214.42 1190.1,1214.42 1190.68,1214.42 1191.27,1214.42 1191.86,1214.42 1192.44,1214.42 1193.03,1214.42 1193.62,1214.42 1194.2,1214.42 1194.79,1214.42 1195.37,1214.42 1195.96,1214.42 1196.55,1214.42 1197.13,1214.42 1197.72,1214.42 1198.31,1214.42 1198.89,1214.42 1199.48,1214.42 1200.07,1214.42 1200.65,1214.42 1201.24,1214.42 1201.83,1214.42 1202.41,1214.42 1203,1214.42 1203.58,1214.42 1204.17,1214.42 1204.76,1214.42 1205.34,1214.42 1205.93,1214.42 1206.52,1214.42 1207.1,1214.42 1207.69,1214.42 1208.28,1214.42 1208.86,1214.42 1209.45,1214.42 1210.03,1214.42 1210.62,1214.42 1211.21,1214.42 1211.79,1214.42 1212.38,1214.42 1212.97,1214.42 1213.55,1214.42 1214.14,1214.42 1214.73,1214.42 1215.31,1214.42 1215.9,1214.42 1216.49,1214.42 1217.07,1214.42 1217.66,1214.42 1218.24,1214.42 1218.83,1214.42 1219.42,1214.42 1220,1214.42 1220.59,1214.42 1221.18,1214.42 1221.76,1214.42 1222.35,1214.42 1222.94,1214.42 1223.52,1214.42 1224.11,1214.42 1224.7,1214.42 1225.28,1214.42 1225.87,1214.42 1226.45,1214.42 1227.04,1214.42 1227.63,1214.42 1228.21,1214.42 1228.8,1214.42 1229.39,1214.42 1229.97,1214.42 1230.56,1214.42 1231.15,1214.42 1231.73,1214.42 1232.32,1214.42 1232.91,1214.42 1233.49,1214.42 1234.08,1214.42 1234.66,1214.42 1235.25,1214.42 1235.84,1214.42 1236.42,1214.42 1237.01,1214.42 1237.6,1214.42 1238.18,1214.42 1238.77,1214.42 1239.36,1214.42 1239.94,1214.42 1240.53,1214.42 1241.11,1214.42 1241.7,1214.42 1242.29,1214.42 1242.87,1214.42 1243.46,1214.42 1244.05,1214.42 1244.63,1214.42 1245.22,1214.42 1245.81,1214.42 1246.39,1214.42 1246.98,1214.42 1247.57,1214.42 1248.15,1214.42 1248.74,1214.42 1249.32,1214.42 1249.91,1214.42 1250.5,1214.42 1251.08,1214.42 1251.67,1214.42 1252.26,1214.42 1252.84,1214.42 1253.43,1214.42 1254.02,1214.42 1254.6,1214.42 1255.19,1214.42 1255.78,1214.42 1256.36,1214.42 1256.95,1214.42 1257.53,1214.42 1258.12,1214.42 1258.71,1214.42 1259.29,1214.42 1259.88,1214.42 1260.47,1214.42 1261.05,1214.42 1261.64,1214.42 1262.23,1214.42 1262.81,1214.42 1263.4,1214.42 1263.98,1214.42 1264.57,1214.42 1265.16,1214.42 1265.74,1214.42 1266.33,1214.42 1266.92,1214.42 1267.5,1214.42 1268.09,1214.42 1268.68,1214.42 1269.26,1214.42 1269.85,1214.42 1270.44,1214.42 1271.02,1214.42 1271.61,1214.42 1272.19,1214.42 1272.78,1214.42 1273.37,1214.42 1273.95,1214.42 1274.54,1214.42 1275.13,1214.42 1275.71,1214.42 1276.3,1214.42 1276.89,1214.42 1277.47,1214.42 1278.06,1214.42 1278.65,1214.42 1279.23,1214.42 1279.82,1214.42 1280.4,1214.42 1280.99,1214.42 1281.58,1214.42 1282.16,1214.42 1282.75,1214.42 1283.34,1214.42 1283.92,1214.42 1284.51,1214.42 1285.1,1214.42 1285.68,1214.42 1286.27,1214.42 1286.86,1214.42 1287.44,1214.42 1288.03,1214.42 1288.61,1214.42 1289.2,1214.42 1289.79,1214.42 1290.37,1214.42 1290.96,1214.42 1291.55,1214.42 1292.13,1214.42 1292.72,1214.42 1293.31,1214.42 1293.89,1214.42 1294.48,1214.42 1295.06,1214.42 1295.65,1214.42 1296.24,1214.42 1296.82,1214.42 1297.41,1214.42 1298,1214.42 1298.58,1214.42 1299.17,1214.42 1299.76,1214.42 1300.34,1214.42 1300.93,1214.42 1301.52,1214.42 1302.1,1214.42 1302.69,1214.42 1303.27,1214.42 1303.86,1214.42 1304.45,1214.42 1305.03,1214.42 1305.62,1214.42 1306.21,1214.42 1306.79,1214.42 1307.38,1214.42 1307.97,1214.42 1308.55,1214.42 1309.14,1214.42 1309.73,1214.42 1310.31,1214.42 1310.9,1214.42 1311.48,1214.42 1312.07,1214.42 1312.66,1214.42 1313.24,1214.42 1313.83,1214.42 1314.42,1214.42 1315,1214.42 1315.59,1214.42 1316.18,1214.42 1316.76,1214.42 1317.35,1214.42 1317.93,1214.42 1318.52,1214.42 1319.11,1214.42 1319.69,1214.42 1320.28,1214.42 1320.87,1214.42 1321.45,1214.42 1322.04,1214.42 1322.63,1214.42 1323.21,1214.42 1323.8,1214.42 1324.39,1214.42 1324.97,1214.42 1325.56,1214.42 1326.14,1214.42 1326.73,1214.42 1327.32,1214.42 1327.9,1214.42 1328.49,1214.42 1329.08,1214.42 1329.66,1214.42 1330.25,1214.42 1330.84,1214.42 1331.42,1214.42 1332.01,1214.42 1332.6,1214.42 1333.18,1214.42 1333.77,1214.42 1334.35,1214.42 1334.94,1214.42 1335.53,1214.42 1336.11,1214.42 1336.7,1214.42 1337.29,1214.42 1337.87,1214.42 1338.46,1214.42 1339.05,1214.42 1339.63,1214.42 1340.22,1214.42 1340.8,1214.42 1341.39,1214.42 1341.98,1214.42 1342.56,1214.42 1343.15,1214.42 1343.74,1214.42 1344.32,1214.42 1344.91,1214.42 1345.5,1214.42 1346.08,1214.42 1346.67,1214.42 1347.26,1214.42 1347.84,1214.42 1348.43,1214.42 1349.01,1214.42 1349.6,1214.42 1350.19,1214.42 1350.77,1214.42 1351.36,1214.42 1351.95,1214.42 1352.53,1214.42 1353.12,1214.42 1353.71,1214.42 1354.29,1214.42 1354.88,1214.42 1355.47,1214.42 1356.05,1214.42 1356.64,1214.42 1357.22,1214.42 1357.81,1214.42 1358.4,1214.42 1358.98,1214.42 1359.57,1214.42 1360.16,1214.42 1360.74,1214.42 1361.33,1214.42 1361.92,1214.42 1362.5,1214.42 1363.09,1214.42 1363.68,1214.42 1364.26,1214.42 1364.85,1214.42 1365.43,1214.42 1366.02,1214.42 1366.61,1214.42 1367.19,1214.42 1367.78,1214.42 1368.37,1214.42 1368.95,1214.42 1369.54,1214.42 1370.13,1214.42 1370.71,1214.42 1371.3,1214.42 1371.88,1214.42 1372.47,1214.42 1373.06,1214.42 1373.64,1214.42 1374.23,1214.42 1374.82,1214.42 1375.4,1214.42 1375.99,1214.42 1376.58,1214.42 1377.16,1214.42 1377.75,1214.42 1378.34,1214.42 1378.92,1214.42 1379.51,1214.42 1380.09,1214.42 1380.68,1214.42 1381.27,1214.42 1381.85,1214.42 1382.44,1214.42 1383.03,1214.42 1383.61,1214.42 1384.2,1214.42 1384.79,1214.42 1385.37,1214.42 1385.96,1214.42 1386.55,1214.42 1387.13,1214.42 1387.72,1214.42 1388.3,1214.42 1388.89,1214.42 1389.48,1214.42 1390.06,1214.42 1390.65,1214.42 1391.24,1214.42 1391.82,1214.42 1392.41,1214.42 1393,1214.42 1393.58,1214.42 1394.17,1214.42 1394.75,1214.42 1395.34,1214.42 1395.93,1214.42 1396.51,1214.42 1397.1,1214.42 1397.69,1214.42 1398.27,1214.42 1398.86,1214.42 1399.45,1214.42 1400.03,1214.42 1400.62,1214.42 1401.21,1214.42 1401.79,1214.42 1402.38,1214.42 1402.96,1214.42 1403.55,1214.42 1404.14,1214.42 1404.72,1214.42 1405.31,1214.42 1405.9,1214.42 1406.48,1214.42 1407.07,1214.42 1407.66,1214.42 1408.24,1214.42 1408.83,1214.42 1409.42,1214.42 1410,1214.42 1410.59,1214.42 1411.17,1214.42 1411.76,1214.42 1412.35,1214.42 1412.93,1214.42 1413.52,1214.42 1414.11,1214.42 1414.69,1214.42 1415.28,1214.42 1415.87,1214.42 1416.45,1214.42 1417.04,1214.42 1417.63,1214.42 1418.21,1214.42 1418.8,1214.42 1419.38,1214.42 1419.97,1214.42 1420.56,1214.42 1421.14,1214.42 1421.73,1214.42 1422.32,1214.42 1422.9,1214.42 1423.49,1214.42 1424.08,1214.42 1424.66,1214.42 1425.25,1214.42 1425.83,1214.42 1426.42,1214.42 1427.01,1214.42 1427.59,1214.42 1428.18,1214.42 1428.77,1214.42 1429.35,1214.42 1429.94,1214.42 1430.53,1214.42 1431.11,1214.42 1431.7,1214.42 1432.29,1214.42 1432.87,1214.42 1433.46,1214.42 1434.04,1214.42 1434.63,1214.42 1435.22,1214.42 1435.8,1214.42 1436.39,1214.42 1436.98,1214.42 1437.56,1214.42 1438.15,1214.42 1438.74,1214.42 1439.32,1214.42 1439.91,1214.42 1440.5,1214.42 1441.08,1214.42 1441.67,1214.42 1442.25,1214.42 1442.84,1214.42 1443.43,1214.42 1444.01,1214.42 1444.6,1214.42 1445.19,1214.42 1445.77,1214.42 1446.36,1214.42 1446.95,1214.42 1447.53,1214.42 1448.12,1214.42 1448.7,1214.42 1449.29,1214.42 1449.88,1214.42 1450.46,1214.42 1451.05,1214.42 1451.64,1214.42 1452.22,1214.42 1452.81,1214.42 1453.4,1214.42 1453.98,1214.42 1454.57,1214.42 1455.16,1214.42 1455.74,1214.42 1456.33,1214.42 1456.91,1214.42 1457.5,1214.42 1458.09,1214.42 1458.67,1214.42 1459.26,1214.42 1459.85,1214.42 1460.43,1214.42 1461.02,1214.42 1461.61,1214.42 1462.19,1214.42 1462.78,1214.42 1463.37,1214.42 1463.95,1214.42 1464.54,1214.42 1465.12,1214.42 1465.71,1214.42 1466.3,1214.42 1466.88,1214.42 1467.47,1214.42 1468.06,1214.42 1468.64,1214.42 1469.23,1214.42 1469.82,1214.42 1470.4,1214.42 1470.99,1214.42 1471.57,1214.42 1472.16,1214.42 1472.75,1214.42 1473.33,1214.42 1473.92,1214.42 1474.51,1214.42 1475.09,1214.42 1475.68,1214.42 1476.27,1214.42 1476.85,1214.42 1477.44,1214.42 1478.03,1214.42 1478.61,1214.42 1479.2,1214.42 1479.78,1214.42 1480.37,1214.42 1480.96,1214.42 1481.54,1214.42 1482.13,1214.42 1482.72,1214.42 1483.3,1214.42 1483.89,1214.42 1484.48,1214.42 1485.06,1214.42 1485.65,1214.42 1486.24,1214.42 1486.82,1214.42 1487.41,1214.42 1487.99,1214.42 1488.58,1214.42 1489.17,1214.42 1489.75,1214.42 1490.34,1214.42 1490.93,1214.42 1491.51,1214.42 1492.1,1214.42 1492.69,1214.42 1493.27,1214.42 1493.86,1214.42 1494.45,1214.42 1495.03,1214.42 1495.62,1214.42 1496.2,1214.42 1496.79,1214.42 1497.38,1214.42 1497.96,1214.42 1498.55,1214.42 1499.14,1214.42 1499.72,1214.42 1500.31,1214.42 1500.9,1214.42 1501.48,1214.42 1502.07,1214.42 1502.65,1214.42 1503.24,1214.42 1503.83,1214.42 1504.41,1214.42 1505,1214.42 1505.59,1214.42 1506.17,1214.42 1506.76,1214.42 1507.35,1214.42 1507.93,1214.42 1508.52,1214.42 1509.11,1214.42 1509.69,1214.42 1510.28,1214.42 1510.86,1214.42 1511.45,1214.42 1512.04,1214.42 1512.62,1214.42 1513.21,1214.42 1513.8,1214.42 1514.38,1214.42 1514.97,1214.42 1515.56,1214.42 1516.14,1214.42 1516.73,1214.42 1517.32,1214.42 1517.9,1214.42 1518.49,1214.42 1519.07,1214.42 1519.66,1214.42 1520.25,1214.42 1520.83,1214.42 1521.42,1214.42 1522.01,1214.42 1522.59,1214.42 1523.18,1214.42 1523.77,1214.42 1524.35,1214.42 1524.94,1214.42 1525.52,1214.42 1526.11,1214.42 1526.7,1214.42 1527.28,1214.42 1527.87,1214.42 1528.46,1214.42 1529.04,1214.42 1529.63,1214.42 1530.22,1214.42 1530.8,1214.42 1531.39,1214.42 1531.98,1214.42 1532.56,1214.42 1533.15,1214.42 1533.73,1214.42 1534.32,1214.42 1534.91,1214.42 1535.49,1214.42 1536.08,1214.42 1536.67,1214.42 1537.25,1214.42 1537.84,1214.42 1538.43,1214.42 1539.01,1214.42 1539.6,1214.42 1540.19,1214.42 1540.77,1214.42 1541.36,1214.42 1541.94,1214.42 1542.53,1214.42 1543.12,1214.42 1543.7,1214.42 1544.29,1214.42 1544.88,1214.42 1545.46,1214.42 1546.05,1214.42 1546.64,1214.42 1547.22,1214.42 1547.81,1214.42 1548.4,1214.42 1548.98,1214.42 1549.57,1214.42 1550.15,1214.42 1550.74,1214.42 1551.33,1214.42 1551.91,1214.42 1552.5,1214.42 1553.09,1214.42 1553.67,1214.42 1554.26,1214.42 1554.85,1214.42 1555.43,1214.42 1556.02,1214.42 1556.6,1214.42 1557.19,1214.42 1557.78,1214.42 1558.36,1214.42 1558.95,1214.42 1559.54,1214.42 1560.12,1214.42 1560.71,1214.42 1561.3,1214.42 1561.88,1214.42 1562.47,1214.42 1563.06,1214.42 1563.64,1214.42 1564.23,1214.42 1564.81,1214.42 1565.4,1214.42 1565.99,1214.42 1566.57,1214.42 1567.16,1214.42 1567.75,1214.42 1568.33,1214.42 1568.92,1214.42 1569.51,1214.42 1570.09,1214.42 1570.68,1214.42 1571.27,1214.42 1571.85,1214.42 1572.44,1214.42 1573.02,1214.42 1573.61,1214.42 1574.2,1214.42 1574.78,1214.42 1575.37,1214.42 1575.96,1214.42 1576.54,1214.42 1577.13,1214.42 1577.72,1214.42 1578.3,1214.42 1578.89,1214.42 1579.47,1214.42 1580.06,1214.42 1580.65,1214.42 1581.23,1214.42 1581.82,1214.42 1582.41,1214.42 1582.99,1214.42 1583.58,1214.42 1584.17,1214.42 1584.75,1214.42 1585.34,1214.42 1585.93,1214.42 1586.51,1214.42 1587.1,1214.42 1587.68,1214.42 1588.27,1214.42 1588.86,1214.42 1589.44,1214.42 1590.03,1214.42 1590.62,1214.42 1591.2,1214.42 1591.79,1214.42 1592.38,1214.42 1592.96,1214.42 1593.55,1214.42 1594.14,1214.42 1594.72,1214.42 1595.31,1214.42 1595.89,1214.42 1596.48,1214.42 1597.07,1214.42 1597.65,1214.42 1598.24,1214.42 1598.83,1214.42 1599.41,1214.42 1600,1214.42 1600.59,1214.42 1601.17,1214.42 1601.76,1214.42 1602.34,1214.42 1602.93,1214.42 1603.52,1214.42 1604.1,1214.42 1604.69,1214.42 1605.28,1214.42 1605.86,1214.42 1606.45,1214.42 1607.04,1214.42 1607.62,1214.42 1608.21,1214.42 1608.8,1214.42 1609.38,1214.42 1609.97,1214.42 1610.55,1214.42 1611.14,1214.42 1611.73,1214.42 1612.31,1214.42 1612.9,1214.42 1613.49,1214.42 1614.07,1214.42 1614.66,1214.42 1615.25,1214.42 1615.83,1214.42 1616.42,1214.42 1617.01,1214.42 1617.59,1214.42 1618.18,1214.42 1618.76,1214.42 1619.35,1214.42 1619.94,1214.42 1620.52,1214.42 1621.11,1214.42 1621.7,1214.42 1622.28,1214.42 1622.87,1214.42 1623.46,1214.42 1624.04,1214.42 1624.63,1214.42 1625.22,1214.42 1625.8,1214.42 1626.39,1214.42 1626.97,1214.42 1627.56,1214.42 1628.15,1214.42 1628.73,1214.42 1629.32,1214.42 1629.91,1214.42 1630.49,1214.42 1631.08,1214.42 1631.67,1214.42 1632.25,1214.42 1632.84,1214.42 1633.42,1214.42 1634.01,1214.42 1634.6,1214.42 1635.18,1214.42 1635.77,1214.42 1636.36,1214.42 1636.94,1214.42 1637.53,1214.42 1638.12,1214.42 1638.7,1214.42 1639.29,1214.42 1639.88,1214.42 1640.46,1214.42 1641.05,1214.42 1641.63,1214.42 1642.22,1214.42 1642.81,1214.42 1643.39,1214.42 1643.98,1214.42 1644.57,1214.42 1645.15,1214.42 1645.74,1214.42 1646.33,1214.42 1646.91,1214.42 1647.5,1214.42 1648.09,1214.42 1648.67,1214.42 1649.26,1214.42 1649.84,1214.42 1650.43,1214.42 1651.02,1214.42 1651.6,1214.42 1652.19,1214.42 1652.78,1214.42 1653.36,1214.42 1653.95,1214.42 1654.54,1214.42 1655.12,1214.42 1655.71,1214.42 1656.29,1214.42 1656.88,1214.42 1657.47,1214.42 1658.05,1214.42 1658.64,1214.42 1659.23,1214.42 1659.81,1214.42 1660.4,1214.42 1660.99,1214.42 1661.57,1214.42 1662.16,1214.42 1662.75,1214.42 1663.33,1214.42 1663.92,1214.42 1664.5,1214.42 1665.09,1214.42 1665.68,1214.42 1666.26,1214.42 1666.85,1214.42 1667.44,1214.42 1668.02,1214.42 1668.61,1214.42 1669.2,1214.42 1669.78,1214.42 1670.37,1214.42 1670.96,1214.42 1671.54,1214.42 1672.13,1214.42 1672.71,1214.42 1673.3,1214.42 1673.89,1214.42 1674.47,1214.42 1675.06,1214.42 1675.65,1214.42 1676.23,1214.42 1676.82,1214.42 1677.41,1214.42 1677.99,1214.42 1678.58,1214.42 1679.17,1214.42 1679.75,1214.42 1680.34,1214.42 1680.92,1214.42 1681.51,1214.42 1682.1,1214.42 1682.68,1214.42 1683.27,1214.42 1683.86,1214.42 1684.44,1214.42 1685.03,1214.42 1685.62,1214.42 1686.2,1214.42 1686.79,1214.42 1687.37,1214.42 1687.96,1214.42 1688.55,1214.42 1689.13,1214.42 1689.72,1214.42 1690.31,1214.42 1690.89,1214.42 1691.48,1214.42 1692.07,1214.42 1692.65,1214.42 1693.24,1214.42 1693.83,1214.42 1694.41,1214.42 1695,1214.42 1695.58,1214.42 1696.17,1214.42 1696.76,1214.42 1697.34,1214.42 1697.93,1214.42 1698.52,1214.42 1699.1,1214.42 1699.69,1214.42 1700.28,1214.42 1700.86,1214.42 1701.45,1214.42 1702.04,1214.42 1702.62,1214.42 1703.21,1214.42 1703.79,1214.42 1704.38,1214.42 1704.97,1214.42 1705.55,1214.42 1706.14,1214.42 1706.73,1214.42 1707.31,1214.42 1707.9,1214.42 1708.49,1214.42 1709.07,1214.42 1709.66,1214.42 1710.24,1214.42 1710.83,1214.42 1711.42,1214.42 1712,1214.42 1712.59,1214.42 1713.18,1214.42 1713.76,1214.42 1714.35,1214.42 1714.94,1214.42 1715.52,1214.42 1716.11,1214.42 1716.7,1214.42 1717.28,1214.42 1717.87,1214.42 1718.45,1214.42 1719.04,1214.42 1719.63,1214.42 1720.21,1214.42 1720.8,1214.42 1721.39,1214.42 1721.97,1214.42 1722.56,1214.42 1723.15,1214.42 1723.73,1214.42 1724.32,1214.42 1724.91,1214.42 1725.49,1214.42 1726.08,1214.42 1726.66,1214.42 1727.25,1214.42 1727.84,1214.42 1728.42,1214.42 1729.01,1214.42 1729.6,1214.42 1730.18,1214.42 1730.77,1214.42 1731.36,1214.42 1731.94,1214.42 1732.53,1214.42 1733.11,1214.42 1733.7,1214.42 1734.29,1214.42 1734.87,1214.42 1735.46,1214.42 1736.05,1214.42 1736.63,1214.42 1737.22,1214.42 1737.81,1214.42 1738.39,1214.42 1738.98,1214.42 1739.57,1214.42 1740.15,1214.42 1740.74,1214.42 1741.32,1214.42 1741.91,1214.42 1742.5,1214.42 1743.08,1214.42 1743.67,1214.42 1744.26,1214.42 1744.84,1214.42 1745.43,1214.42 1746.02,1214.42 1746.6,1214.42 1747.19,1214.42 1747.78,1214.42 1748.36,1214.42 1748.95,1214.42 1749.53,1214.42 1750.12,1214.42 1750.71,1214.42 1751.29,1214.42 1751.88,1214.42 1752.47,1214.42 1753.05,1214.42 1753.64,1214.42 1754.23,1214.42 1754.81,1214.42 1755.4,1214.42 1755.99,1214.42 1756.57,1214.42 1757.16,1214.42 1757.74,1214.42 1758.33,1214.42 1758.92,1214.42 1759.5,1214.42 1760.09,1214.42 1760.68,1214.42 1761.26,1214.42 1761.85,1214.42 1762.44,1214.42 1763.02,1214.42 1763.61,1214.42 1764.19,1214.42 1764.78,1214.42 1765.37,1214.42 1765.95,1214.42 1766.54,1214.42 1767.13,1214.42 1767.71,1214.42 1768.3,1214.42 1768.89,1214.42 1769.47,1214.42 1770.06,1214.42 1770.65,1214.42 1771.23,1214.42 1771.82,1214.42 1772.4,1214.42 1772.99,1214.42 1773.58,1214.42 1774.16,1214.42 1774.75,1214.42 1775.34,1214.42 1775.92,1214.42 1776.51,1214.42 1777.1,1214.42 1777.68,1214.42 1778.27,1214.42 1778.86,1214.42 1779.44,1214.42 1780.03,1214.42 1780.61,1214.42 1781.2,1214.42 1781.79,1214.42 1782.37,1214.42 1782.96,1214.42 1783.55,1214.42 1784.13,1214.42 1784.72,1214.42 1785.31,1214.42 1785.89,1214.42 1786.48,1214.42 1787.06,1214.42 1787.65,1214.42 1788.24,1214.42 1788.82,1214.42 1789.41,1214.42 1790,1214.42 1790.58,1214.42 1791.17,1214.42 1791.76,1214.42 1792.34,1214.42 1792.93,1214.42 1793.52,1214.42 1794.1,1214.42 1794.69,1214.42 1795.27,1214.42 1795.86,1214.42 1796.45,1214.42 1797.03,1214.42 1797.62,1214.42 1798.21,1214.42 1798.79,1214.42 1799.38,1214.42 1799.97,1214.42 1800.55,1214.42 1801.14,1214.42 1801.73,1214.42 1802.31,1214.42 1802.9,1214.42 1803.48,1214.42 1804.07,1214.42 1804.66,1214.42 1805.24,1214.42 1805.83,1214.42 1806.42,1214.42 1807,1214.42 1807.59,1214.42 1808.18,1214.42 1808.76,1214.42 1809.35,1214.42 1809.94,1214.42 1810.52,1214.42 1811.11,1214.42 1811.69,1214.42 1812.28,1214.42 1812.87,1214.42 1813.45,1214.42 1814.04,1214.42 1814.63,1214.42 1815.21,1214.42 1815.8,1214.42 1816.39,1214.42 1816.97,1214.42 1817.56,1214.42 1818.14,1214.42 1818.73,1214.42 1819.32,1214.42 1819.9,1214.42 1820.49,1214.42 1821.08,1214.42 1821.66,1214.42 1822.25,1214.42 1822.84,1214.42 1823.42,1214.42 1824.01,1214.42 1824.6,1214.42 1825.18,1214.42 1825.77,1214.42 1826.35,1214.42 1826.94,1214.42 1827.53,1214.42 1828.11,1214.42 1828.7,1214.42 1829.29,1214.42 1829.87,1214.42 1830.46,1214.42 1831.05,1214.42 1831.63,1214.42 1832.22,1214.42 1832.81,1214.42 1833.39,1214.42 1833.98,1214.42 1834.56,1214.42 1835.15,1214.42 1835.74,1214.42 1836.32,1214.42 1836.91,1214.42 1837.5,1214.42 1838.08,1214.42 1838.67,1214.42 1839.26,1214.42 1839.84,1214.42 1840.43,1214.42 1841.01,1214.42 1841.6,1214.42 1842.19,1214.42 1842.77,1214.42 1843.36,1214.42 1843.95,1214.42 1844.53,1214.42 1845.12,1214.42 1845.71,1214.42 1846.29,1214.42 1846.88,1214.42 1847.47,1214.42 1848.05,1214.42 1848.64,1214.42 1849.22,1214.42 1849.81,1214.42 1850.4,1214.42 1850.98,1214.42 1851.57,1214.42 1852.16,1214.42 1852.74,1214.42 1853.33,1214.42 1853.92,1214.42 1854.5,1214.42 1855.09,1214.42 1855.68,1214.42 1856.26,1214.42 1856.85,1214.42 1857.43,1214.42 1858.02,1214.42 1858.61,1214.42 1859.19,1214.42 1859.78,1214.42 1860.37,1214.42 1860.95,1214.42 1861.54,1214.42 1862.13,1214.42 1862.71,1214.42 1863.3,1214.42 1863.88,1214.42 1864.47,1214.42 1865.06,1214.42 1865.64,1214.42 1866.23,1214.42 1866.82,1214.42 1867.4,1214.42 1867.99,1214.42 1868.58,1214.42 1869.16,1214.42 1869.75,1214.42 1870.34,1214.42 1870.92,1214.42 1871.51,1214.42 1872.09,1214.42 1872.68,1214.42 1873.27,1214.42 1873.85,1214.42 1874.44,1214.42 1875.03,1214.42 1875.61,1214.42 1876.2,1214.42 1876.79,1214.42 1877.37,1214.42 1877.96,1214.42 1878.55,1214.42 1879.13,1214.42 1879.72,1214.42 1880.3,1214.42 1880.89,1214.42 1881.48,1214.42 1882.06,1214.42 1882.65,1214.42 1883.24,1214.42 1883.82,1214.42 1884.41,1214.42 1885,1214.42 1885.58,1214.42 1886.17,1214.42 1886.76,1214.42 1887.34,1214.42 1887.93,1214.42 1888.51,1214.42 1889.1,1214.42 1889.69,1214.42 1890.27,1214.42 1890.86,1214.42 1891.45,1214.42 1892.03,1214.42 1892.62,1214.42 1893.21,1214.42 1893.79,1214.42 1894.38,1214.42 1894.96,1214.42 1895.55,1214.42 1896.14,1214.42 1896.72,1214.42 1897.31,1214.42 1897.9,1214.42 1898.48,1214.42 1899.07,1214.42 1899.66,1214.42 1900.24,1214.42 1900.83,1214.42 1901.42,1214.42 1902,1214.42 1902.59,1214.42 1903.17,1214.42 1903.76,1214.42 1904.35,1214.42 1904.93,1214.42 1905.52,1214.42 1906.11,1214.42 1906.69,1214.42 1907.28,1214.42 1907.87,1214.42 1908.45,1214.42 1909.04,1214.42 1909.63,1214.42 1910.21,1214.42 1910.8,1214.42 1911.38,1214.42 1911.97,1214.42 1912.56,1214.42 1913.14,1214.42 1913.73,1214.42 1914.32,1214.42 1914.9,1214.42 1915.49,1214.42 1916.08,1214.42 1916.66,1214.42 1917.25,1214.42 1917.83,1214.42 1918.42,1214.42 1919.01,1214.42 1919.59,1214.42 1920.18,1214.42 1920.77,1214.42 1921.35,1214.42 1921.94,1214.42 1922.53,1214.42 1923.11,1214.42 1923.7,1214.42 1924.29,1214.42 1924.87,1214.42 1925.46,1214.42 1926.04,1214.42 1926.63,1214.42 1927.22,1214.42 1927.8,1214.42 1928.39,1214.42 1928.98,1214.42 1929.56,1214.42 1930.15,1214.42 1930.74,1214.42 1931.32,1214.42 1931.91,1214.42 1932.5,1214.42 1933.08,1214.42 1933.67,1214.42 1934.25,1214.42 1934.84,1214.42 1935.43,1214.42 1936.01,1214.42 1936.6,1214.42 1937.19,1214.42 1937.77,1214.42 1938.36,1214.42 1938.95,1214.42 1939.53,1214.42 1940.12,1214.42 1940.71,1214.42 1941.29,1214.42 1941.88,1214.42 1942.46,1214.42 1943.05,1214.42 1943.64,1214.42 1944.22,1214.42 1944.81,1214.42 1945.4,1214.42 1945.98,1214.42 1946.57,1214.42 1947.16,1214.42 1947.74,1214.42 1948.33,1214.42 1948.91,1214.42 1949.5,1214.42 1950.09,1214.42 1950.67,1214.42 1951.26,1214.42 1951.85,1214.42 1952.43,1214.42 1953.02,1214.42 1953.61,1214.42 1954.19,1214.42 1954.78,1214.42 1955.37,1214.42 1955.95,1214.42 1956.54,1214.42 1957.12,1214.42 1957.71,1214.42 1958.3,1214.42 1958.88,1214.42 1959.47,1214.42 1960.06,1214.42 1960.64,1214.42 1961.23,1214.42 1961.82,1214.42 1962.4,1214.42 1962.99,1214.42 1963.58,1214.42 1964.16,1214.42 1964.75,1214.42 1965.33,1214.42 1965.92,1214.42 1966.51,1214.42 1967.09,1214.42 1967.68,1214.42 1968.27,1214.42 1968.85,1214.42 1969.44,1214.42 1970.03,1214.42 1970.61,1214.42 1971.2,1214.42 1971.78,1214.42 1972.37,1214.42 1972.96,1214.42 1973.54,1214.42 1974.13,1214.42 1974.72,1214.42 1975.3,1214.42 1975.89,1214.42 1976.48,1214.42 1977.06,1214.42 1977.65,1214.42 1978.24,1214.42 1978.82,1214.42 1979.41,1214.42 1979.99,1214.42 1980.58,1214.42 1981.17,1214.42 1981.75,1214.42 1982.34,1214.42 1982.93,1214.42 1983.51,1214.42 1984.1,1214.42 1984.69,1214.42 1985.27,1214.42 1985.86,1214.42 1986.45,1214.42 1987.03,1214.42 1987.62,1214.42 1988.2,1214.42 1988.79,1214.42 1989.38,1214.42 1989.96,1214.42 1990.55,1214.42 1991.14,1214.42 1991.72,1214.42 1992.31,1214.42 1992.9,1214.42 1993.48,1214.42 1994.07,1214.42 1994.65,1214.42 1995.24,1214.42 1995.83,1214.42 1996.41,1214.42 1997,1214.42 1997.59,1214.42 1998.17,1214.42 1998.76,1214.42 1999.35,1214.42 1999.93,1214.42 2000.52,1214.42 2001.11,1214.42 2001.69,1214.42 2002.28,1214.42 2002.86,1214.42 2003.45,1214.42 2004.04,1214.42 2004.62,1214.42 2005.21,1214.42 2005.8,1214.42 2006.38,1214.42 2006.97,1214.42 2007.56,1214.42 2008.14,1214.42 2008.73,1214.42 2009.32,1214.42 2009.9,1214.42 2010.49,1214.42 2011.07,1214.42 2011.66,1214.42 2012.25,1214.42 2012.83,1214.42 2013.42,1214.42 2014.01,1214.42 2014.59,1214.42 2015.18,1214.42 2015.77,1214.42 2016.35,1214.42 2016.94,1214.42 2017.53,1214.42 2018.11,1214.42 2018.7,1214.42 2019.28,1214.42 2019.87,1214.42 2020.46,1214.42 2021.04,1214.42 2021.63,1214.42 2022.22,1214.42 2022.8,1214.42 2023.39,1214.42 2023.98,1214.42 2024.56,1214.42 2025.15,1214.42 2025.73,1214.42 2026.32,1214.42 2026.91,1214.42 2027.49,1214.42 2028.08,1214.42 2028.67,1214.42 2029.25,1214.42 2029.84,1214.42 2030.43,1214.42 2031.01,1214.42 2031.6,1214.42 2032.19,1214.42 2032.77,1214.42 2033.36,1214.42 2033.94,1214.42 2034.53,1214.42 2035.12,1214.42 2035.7,1214.42 2036.29,1214.42 2036.88,1214.42 2037.46,1214.42 2038.05,1214.42 2038.64,1214.42 2039.22,1214.42 2039.81,1214.42 2040.4,1214.42 2040.98,1214.42 2041.57,1214.42 2042.15,1214.42 2042.74,1214.42 2043.33,1214.42 2043.91,1214.42 2044.5,1214.42 2045.09,1214.42 2045.67,1214.42 2046.26,1214.42 2046.85,1214.42 2047.43,1214.42 2048.02,1214.42 2048.6,1214.42 2049.19,1214.42 2049.78,1214.42 2050.36,1214.42 2050.95,1214.42 2051.54,1214.42 2052.12,1214.42 2052.71,1214.42 2053.3,1214.42 2053.88,1214.42 2054.47,1214.42 2055.06,1214.42 2055.64,1214.42 2056.23,1214.42 2056.81,1214.42 2057.4,1214.42 2057.99,1214.42 2058.57,1214.42 2059.16,1214.42 2059.75,1214.42 2060.33,1214.42 2060.92,1214.42 2061.51,1214.42 2062.09,1214.42 2062.68,1214.42 2063.27,1214.42 2063.85,1214.42 2064.44,1214.42 2065.02,1214.42 2065.61,1214.42 2066.2,1214.42 2066.78,1214.42 2067.37,1214.42 2067.96,1214.42 2068.54,1214.42 2069.13,1214.42 2069.72,1214.42 2070.3,1214.42 2070.89,1214.42 2071.48,1214.42 2072.06,1214.42 2072.65,1214.42 2073.23,1214.42 2073.82,1214.42 2074.41,1214.42 2074.99,1214.42 2075.58,1214.42 2076.17,1214.42 2076.75,1214.42 2077.34,1214.42 2077.93,1214.42 2078.51,1214.42 2079.1,1214.42 2079.68,1214.42 2080.27,1214.42 2080.86,1214.42 2081.44,1214.42 2082.03,1214.42 2082.62,1214.42 2083.2,1214.42 2083.79,1214.42 2084.38,1214.42 2084.96,1214.42 2085.55,1214.42 2086.14,1214.42 2086.72,1214.42 2087.31,1214.42 2087.89,1214.42 2088.48,1214.42 2089.07,1214.42 2089.65,1214.42 2090.24,1214.42 2090.83,1214.42 2091.41,1214.42 2092,1214.42 2092.59,1214.42 2093.17,1214.42 2093.76,1214.42 2094.35,1214.42 2094.93,1214.42 2095.52,1214.42 2096.1,1214.42 2096.69,1214.42 2097.28,1214.42 2097.86,1214.42 2098.45,1214.42 2099.04,1214.42 2099.62,1214.42 2100.21,1214.42 2100.8,1214.42 2101.38,1214.42 2101.97,1214.42 2102.55,1214.42 2103.14,1214.42 2103.73,1214.42 2104.31,1214.42 2104.9,1214.42 2105.49,1214.42 2106.07,1214.42 2106.66,1214.42 2107.25,1214.42 2107.83,1214.42 2108.42,1214.42 2109.01,1214.42 2109.59,1214.42 2110.18,1214.42 2110.76,1214.42 2111.35,1214.42 2111.94,1214.42 2112.52,1214.42 2113.11,1214.42 2113.7,1214.42 2114.28,1214.42 2114.87,1214.42 2115.46,1214.42 2116.04,1214.42 2116.63,1214.42 2117.22,1214.42 2117.8,1214.42 2118.39,1214.42 2118.97,1214.42 2119.56,1214.42 2120.15,1214.42 2120.73,1214.42 2121.32,1214.42 2121.91,1214.42 2122.49,1214.42 2123.08,1214.42 2123.67,1214.42 2124.25,1214.42 2124.84,1214.42 2125.42,1214.42 2126.01,1214.42 2126.6,1214.42 2127.18,1214.42 2127.77,1214.42 2128.36,1214.42 2128.94,1214.42 2129.53,1214.42 2130.12,1214.42 2130.7,1214.42 2131.29,1214.42 2131.88,1214.42 2132.46,1214.42 2133.05,1214.42 2133.63,1214.42 2134.22,1214.42 2134.81,1214.42 2135.39,1214.42 2135.98,1214.42 2136.57,1214.42 2137.15,1214.42 2137.74,1214.42 2138.33,1214.42 2138.91,1214.42 2139.5,1214.42 2140.09,1214.42 2140.67,1214.42 2141.26,1214.42 2141.84,1214.42 2142.43,1214.42 2143.02,1214.42 2143.6,1214.42 2144.19,1214.42 2144.78,1214.42 2145.36,1214.42 2145.95,1214.42 2146.54,1214.42 2147.12,1214.42 2147.71,1214.42 2148.3,1214.42 2148.88,1214.42 2149.47,1214.42 2150.05,1214.42 2150.64,1214.42 2151.23,1214.42 2151.81,1214.42 2152.4,1214.42 2152.99,1214.42 2153.57,1214.42 2154.16,1214.42 2154.75,1214.42 2155.33,1214.42 2155.92,1214.42 2156.5,1214.42 2157.09,1214.42 2157.68,1214.42 2158.26,1214.42 \"/>\n<path clip-path=\"url(#clip392)\" d=\"M986.025 1214.48 L986.612 1214.48 L987.198 1214.48 L987.785 1214.48 L988.371 1214.48 L988.957 1214.48 L989.544 1214.48 L990.13 1214.48 L990.717 1214.48 L991.303 1214.48 L991.889 1214.48 L992.476 1214.48 L993.062 1214.48 L993.649 1214.48 L994.235 1214.48 L994.822 1214.48 L995.408 1214.48 L995.994 1214.48 L996.581 1214.48 L997.167 1214.48 L997.754 1214.48 L998.34 1214.48 L998.926 1214.48 L999.513 1214.48 L1000.1 1214.48 L1000.69 1214.48 L1001.27 1214.48 L1001.86 1214.48 L1002.44 1214.48 L1003.03 1214.48 L1003.62 1214.48 L1004.2 1214.48 L1004.79 1214.48 L1005.38 1214.48 L1005.96 1214.48 L1006.55 1214.48 L1007.14 1214.48 L1007.72 1214.48 L1008.31 1214.48 L1008.9 1214.48 L1009.48 1214.48 L1010.07 1214.48 L1010.65 1214.48 L1011.24 1214.48 L1011.83 1214.48 L1012.41 1214.48 L1013 1214.48 L1013.59 1214.48 L1014.17 1214.48 L1014.76 1214.48 L1015.35 1214.48 L1015.93 1214.48 L1016.52 1214.48 L1017.11 1214.48 L1017.69 1214.48 L1018.28 1214.48 L1018.86 1214.48 L1019.45 1214.48 L1020.04 1214.48 L1020.62 1214.48 L1021.21 1214.48 L1021.8 1214.48 L1022.38 1214.48 L1022.97 1214.48 L1023.56 1214.48 L1024.14 1214.48 L1024.73 1214.48 L1025.32 1214.48 L1025.9 1214.48 L1026.49 1214.48 L1027.07 1214.48 L1027.66 1214.48 L1028.25 1214.48 L1028.83 1214.48 L1029.42 1214.48 L1030.01 1214.48 L1030.59 1214.48 L1031.18 1214.48 L1031.77 1214.48 L1032.35 1214.48 L1032.94 1214.48 L1033.52 1214.48 L1034.11 1214.48 L1034.7 1214.48 L1035.28 1214.48 L1035.87 1214.48 L1036.46 1214.48 L1037.04 1214.48 L1037.63 1214.48 L1038.22 1214.48 L1038.8 1214.48 L1039.39 1214.48 L1039.98 1214.48 L1040.56 1214.48 L1041.15 1214.48 L1041.73 1214.48 L1042.32 1214.48 L1042.91 1214.48 L1043.49 1214.48 L1044.08 1214.48 L1044.67 1214.48 L1045.25 1214.48 L1045.84 1214.48 L1046.43 1214.48 L1047.01 1214.48 L1047.6 1214.48 L1048.19 1214.48 L1048.77 1214.48 L1049.36 1214.48 L1049.94 1214.48 L1050.53 1214.48 L1051.12 1214.48 L1051.7 1214.48 L1052.29 1214.48 L1052.88 1214.48 L1053.46 1214.48 L1054.05 1214.48 L1054.64 1214.48 L1055.22 1214.48 L1055.81 1214.48 L1056.39 1214.48 L1056.98 1214.48 L1057.57 1214.48 L1058.15 1214.48 L1058.74 1214.48 L1059.33 1214.48 L1059.91 1214.48 L1060.5 1214.48 L1061.09 1214.48 L1061.67 1214.48 L1062.26 1214.48 L1062.85 1214.48 L1063.43 1214.48 L1064.02 1214.48 L1064.6 1214.48 L1065.19 1214.48 L1065.78 1214.48 L1066.36 1214.48 L1066.95 1214.48 L1067.54 1214.48 L1068.12 1214.48 L1068.71 1214.48 L1069.3 1214.48 L1069.88 1214.48 L1070.47 1214.48 L1071.06 1214.48 L1071.64 1214.48 L1072.23 1214.48 L1072.81 1214.48 L1073.4 1214.48 L1073.99 1214.48 L1074.57 1214.48 L1075.16 1214.48 L1075.75 1214.48 L1076.33 1214.48 L1076.92 1214.48 L1077.51 1214.48 L1078.09 1214.48 L1078.68 1214.48 L1079.26 1214.48 L1079.85 1214.48 L1080.44 1214.48 L1081.02 1214.48 L1081.61 1214.48 L1082.2 1214.48 L1082.78 1214.48 L1083.37 1214.48 L1083.96 1214.48 L1084.54 1214.48 L1085.13 1214.48 L1085.72 1214.48 L1086.3 1214.48 L1086.89 1214.48 L1087.47 1214.48 L1088.06 1214.48 L1088.65 1214.48 L1089.23 1214.48 L1089.82 1214.48 L1090.41 1214.48 L1090.99 1214.48 L1091.58 1214.48 L1092.17 1214.48 L1092.75 1214.48 L1093.34 1214.48 L1093.93 1214.48 L1094.51 1214.48 L1095.1 1214.48 L1095.68 1214.48 L1096.27 1214.48 L1096.86 1214.48 L1097.44 1214.48 L1098.03 1214.48 L1098.62 1214.48 L1099.2 1214.48 L1099.79 1214.48 L1100.38 1214.48 L1100.96 1214.48 L1101.55 1214.48 L1102.14 1214.48 L1102.72 1214.48 L1103.31 1214.48 L1103.89 1214.48 L1104.48 1214.48 L1105.07 1214.48 L1105.65 1214.48 L1106.24 1214.48 L1106.83 1214.48 L1107.41 1214.48 L1108 1214.48 L1108.59 1214.48 L1109.17 1214.48 L1109.76 1214.48 L1110.34 1214.48 L1110.93 1214.48 L1111.52 1214.48 L1112.1 1214.48 L1112.69 1214.48 L1113.28 1214.48 L1113.86 1214.48 L1114.45 1214.48 L1115.04 1214.48 L1115.62 1214.48 L1116.21 1214.48 L1116.8 1214.48 L1117.38 1214.48 L1117.97 1214.48 L1118.55 1214.48 L1119.14 1214.48 L1119.73 1214.48 L1120.31 1214.48 L1120.9 1214.48 L1121.49 1214.48 L1122.07 1214.48 L1122.66 1214.48 L1123.25 1214.48 L1123.83 1214.48 L1124.42 1214.48 L1125.01 1214.48 L1125.59 1214.48 L1126.18 1214.48 L1126.76 1214.48 L1127.35 1214.48 L1127.94 1214.48 L1128.52 1214.48 L1129.11 1214.48 L1129.7 1214.48 L1130.28 1214.48 L1130.87 1214.48 L1131.46 1214.48 L1132.04 1214.48 L1132.63 1214.48 L1133.21 1214.48 L1133.8 1214.48 L1134.39 1214.48 L1134.97 1214.48 L1135.56 1214.48 L1136.15 1214.48 L1136.73 1214.48 L1137.32 1214.48 L1137.91 1214.48 L1138.49 1214.48 L1139.08 1214.48 L1139.67 1214.48 L1140.25 1214.48 L1140.84 1214.48 L1141.42 1214.48 L1142.01 1214.48 L1142.6 1214.48 L1143.18 1214.48 L1143.77 1214.48 L1144.36 1214.48 L1144.94 1214.48 L1145.53 1214.48 L1146.12 1214.48 L1146.7 1214.48 L1147.29 1214.48 L1147.88 1214.48 L1148.46 1214.48 L1149.05 1214.48 L1149.63 1214.48 L1150.22 1214.48 L1150.81 1214.48 L1151.39 1214.48 L1151.98 1214.48 L1152.57 1214.48 L1153.15 1214.48 L1153.74 1214.48 L1154.33 1214.48 L1154.91 1214.48 L1155.5 1214.48 L1156.09 1214.48 L1156.67 1214.48 L1157.26 1214.48 L1157.84 1214.48 L1158.43 1214.48 L1159.02 1214.48 L1159.6 1214.48 L1160.19 1214.48 L1160.78 1214.48 L1161.36 1214.48 L1161.95 1214.48 L1162.54 1214.48 L1163.12 1214.48 L1163.71 1214.48 L1164.29 1214.48 L1164.88 1214.48 L1165.47 1214.48 L1166.05 1214.48 L1166.64 1214.48 L1167.23 1214.48 L1167.81 1214.48 L1168.4 1214.48 L1168.99 1214.48 L1169.57 1214.48 L1170.16 1214.48 L1170.75 1214.48 L1171.33 1214.48 L1171.92 1214.48 L1172.5 1214.48 L1173.09 1214.48 L1173.68 1214.48 L1174.26 1214.48 L1174.85 1214.48 L1175.44 1214.48 L1176.02 1214.48 L1176.61 1214.48 L1177.2 1214.48 L1177.78 1214.48 L1178.37 1214.48 L1178.96 1214.48 L1179.54 1214.48 L1180.13 1214.48 L1180.71 1214.48 L1181.3 1214.48 L1181.89 1214.48 L1182.47 1214.48 L1183.06 1214.48 L1183.65 1214.48 L1184.23 1214.48 L1184.82 1214.48 L1185.41 1214.48 L1185.99 1214.48 L1186.58 1214.48 L1187.16 1214.48 L1187.75 1214.48 L1188.34 1214.48 L1188.92 1214.48 L1189.51 1214.48 L1190.1 1214.48 L1190.68 1214.48 L1191.27 1214.48 L1191.86 1214.48 L1192.44 1214.48 L1193.03 1214.48 L1193.62 1214.48 L1194.2 1214.48 L1194.79 1214.48 L1195.37 1214.48 L1195.96 1214.48 L1196.55 1214.48 L1197.13 1214.48 L1197.72 1214.48 L1198.31 1214.48 L1198.89 1214.48 L1199.48 1214.48 L1200.07 1214.48 L1200.65 1214.48 L1201.24 1214.48 L1201.83 1214.48 L1202.41 1214.48 L1203 1214.48 L1203.58 1214.48 L1204.17 1214.48 L1204.76 1214.48 L1205.34 1214.48 L1205.93 1214.48 L1206.52 1214.48 L1207.1 1214.48 L1207.69 1214.48 L1208.28 1214.48 L1208.86 1214.48 L1209.45 1214.48 L1210.03 1214.48 L1210.62 1214.48 L1211.21 1214.48 L1211.79 1214.48 L1212.38 1214.48 L1212.97 1214.48 L1213.55 1214.48 L1214.14 1214.48 L1214.73 1214.48 L1215.31 1214.48 L1215.9 1214.48 L1216.49 1214.48 L1217.07 1214.48 L1217.66 1214.48 L1218.24 1214.48 L1218.83 1214.48 L1219.42 1214.48 L1220 1214.48 L1220.59 1214.48 L1221.18 1214.48 L1221.76 1214.48 L1222.35 1214.48 L1222.94 1214.48 L1223.52 1214.48 L1224.11 1214.48 L1224.7 1214.48 L1225.28 1214.48 L1225.87 1214.48 L1226.45 1214.48 L1227.04 1214.48 L1227.63 1214.48 L1228.21 1214.48 L1228.8 1214.48 L1229.39 1214.48 L1229.97 1214.48 L1230.56 1214.48 L1231.15 1214.48 L1231.73 1214.48 L1232.32 1214.48 L1232.91 1214.48 L1233.49 1214.48 L1234.08 1214.48 L1234.66 1214.48 L1235.25 1214.48 L1235.84 1214.48 L1236.42 1214.48 L1237.01 1214.48 L1237.6 1214.48 L1238.18 1214.48 L1238.77 1214.48 L1239.36 1214.48 L1239.94 1214.48 L1240.53 1214.48 L1241.11 1214.48 L1241.7 1214.48 L1242.29 1214.48 L1242.87 1214.48 L1243.46 1214.48 L1244.05 1214.48 L1244.63 1214.48 L1245.22 1214.48 L1245.81 1214.48 L1246.39 1214.48 L1246.98 1214.48 L1247.57 1214.48 L1248.15 1214.48 L1248.74 1214.48 L1249.32 1214.48 L1249.91 1214.48 L1250.5 1214.48 L1251.08 1214.48 L1251.67 1214.48 L1252.26 1214.48 L1252.84 1214.48 L1253.43 1214.48 L1254.02 1214.48 L1254.6 1214.48 L1255.19 1214.48 L1255.78 1214.48 L1256.36 1214.48 L1256.95 1214.48 L1257.53 1214.48 L1258.12 1214.48 L1258.71 1214.48 L1259.29 1214.48 L1259.88 1214.48 L1260.47 1214.48 L1261.05 1214.48 L1261.64 1214.48 L1262.23 1214.48 L1262.81 1214.48 L1263.4 1214.48 L1263.98 1214.48 L1264.57 1214.48 L1265.16 1214.48 L1265.74 1214.48 L1266.33 1214.48 L1266.92 1214.48 L1267.5 1214.48 L1268.09 1214.48 L1268.68 1214.48 L1269.26 1214.48 L1269.85 1214.48 L1270.44 1214.48 L1271.02 1214.48 L1271.61 1214.48 L1272.19 1214.48 L1272.78 1214.48 L1273.37 1214.48 L1273.95 1214.48 L1274.54 1214.48 L1275.13 1214.48 L1275.71 1214.48 L1276.3 1214.48 L1276.89 1214.48 L1277.47 1214.48 L1278.06 1214.48 L1278.65 1214.48 L1279.23 1214.48 L1279.82 1214.48 L1280.4 1214.48 L1280.99 1214.48 L1281.58 1214.48 L1282.16 1214.48 L1282.75 1214.48 L1283.34 1214.48 L1283.92 1214.48 L1284.51 1214.48 L1285.1 1214.48 L1285.68 1214.48 L1286.27 1214.48 L1286.86 1214.48 L1287.44 1214.48 L1288.03 1214.48 L1288.61 1214.48 L1289.2 1214.48 L1289.79 1214.48 L1290.37 1214.48 L1290.96 1214.48 L1291.55 1214.48 L1292.13 1214.48 L1292.72 1214.48 L1293.31 1214.48 L1293.89 1214.48 L1294.48 1214.48 L1295.06 1214.48 L1295.65 1214.48 L1296.24 1214.48 L1296.82 1214.48 L1297.41 1214.48 L1298 1214.48 L1298.58 1214.48 L1299.17 1214.48 L1299.76 1214.48 L1300.34 1214.48 L1300.93 1214.48 L1301.52 1214.48 L1302.1 1214.48 L1302.69 1214.48 L1303.27 1214.48 L1303.86 1214.48 L1304.45 1214.48 L1305.03 1214.48 L1305.62 1214.48 L1306.21 1214.48 L1306.79 1214.48 L1307.38 1214.48 L1307.97 1214.48 L1308.55 1214.48 L1309.14 1214.48 L1309.73 1214.48 L1310.31 1214.48 L1310.9 1214.48 L1311.48 1214.48 L1312.07 1214.48 L1312.66 1214.48 L1313.24 1214.48 L1313.83 1214.48 L1314.42 1214.48 L1315 1214.48 L1315.59 1214.48 L1316.18 1214.48 L1316.76 1214.48 L1317.35 1214.48 L1317.93 1214.48 L1318.52 1214.48 L1319.11 1214.48 L1319.69 1214.48 L1320.28 1214.48 L1320.87 1214.48 L1321.45 1214.48 L1322.04 1214.48 L1322.63 1214.48 L1323.21 1214.48 L1323.8 1214.48 L1324.39 1214.48 L1324.97 1214.48 L1325.56 1214.48 L1326.14 1214.48 L1326.73 1214.48 L1327.32 1214.48 L1327.9 1214.48 L1328.49 1214.48 L1329.08 1214.48 L1329.66 1214.48 L1330.25 1214.48 L1330.84 1214.48 L1331.42 1214.48 L1332.01 1214.48 L1332.6 1214.48 L1333.18 1214.48 L1333.77 1214.48 L1334.35 1214.48 L1334.94 1214.48 L1335.53 1214.48 L1336.11 1214.48 L1336.7 1214.48 L1337.29 1214.48 L1337.87 1214.48 L1338.46 1214.48 L1339.05 1214.48 L1339.63 1214.48 L1340.22 1214.48 L1340.8 1214.48 L1341.39 1214.48 L1341.98 1214.48 L1342.56 1214.48 L1343.15 1214.48 L1343.74 1214.48 L1344.32 1214.48 L1344.91 1214.48 L1345.5 1214.48 L1346.08 1214.48 L1346.67 1214.48 L1347.26 1214.48 L1347.84 1214.48 L1348.43 1214.48 L1349.01 1214.48 L1349.6 1214.48 L1350.19 1214.48 L1350.77 1214.48 L1351.36 1214.48 L1351.95 1214.48 L1352.53 1214.48 L1353.12 1214.48 L1353.71 1214.48 L1354.29 1214.48 L1354.88 1214.48 L1355.47 1214.48 L1356.05 1214.48 L1356.64 1214.48 L1357.22 1214.48 L1357.81 1214.48 L1358.4 1214.48 L1358.98 1214.48 L1359.57 1214.48 L1360.16 1214.48 L1360.74 1214.48 L1361.33 1214.48 L1361.92 1214.48 L1362.5 1214.48 L1363.09 1214.48 L1363.68 1214.48 L1364.26 1214.48 L1364.85 1214.48 L1365.43 1214.48 L1366.02 1214.48 L1366.61 1214.48 L1367.19 1214.48 L1367.78 1214.48 L1368.37 1214.48 L1368.95 1214.48 L1369.54 1214.48 L1370.13 1214.48 L1370.71 1214.48 L1371.3 1214.48 L1371.88 1214.48 L1372.47 1214.48 L1373.06 1214.48 L1373.64 1214.48 L1374.23 1214.48 L1374.82 1214.48 L1375.4 1214.48 L1375.99 1214.48 L1376.58 1214.48 L1377.16 1214.48 L1377.75 1214.48 L1378.34 1214.48 L1378.92 1214.48 L1379.51 1214.48 L1380.09 1214.48 L1380.68 1214.48 L1381.27 1214.48 L1381.85 1214.48 L1382.44 1214.48 L1383.03 1214.48 L1383.61 1214.48 L1384.2 1214.48 L1384.79 1214.48 L1385.37 1214.48 L1385.96 1214.48 L1386.55 1214.48 L1387.13 1214.48 L1387.72 1214.48 L1388.3 1214.48 L1388.89 1214.48 L1389.48 1214.48 L1390.06 1214.48 L1390.65 1214.48 L1391.24 1214.48 L1391.82 1214.48 L1392.41 1214.48 L1393 1214.48 L1393.58 1214.48 L1394.17 1214.48 L1394.75 1214.48 L1395.34 1214.48 L1395.93 1214.48 L1396.51 1214.48 L1397.1 1214.48 L1397.69 1214.48 L1398.27 1214.48 L1398.86 1214.48 L1399.45 1214.48 L1400.03 1214.48 L1400.62 1214.48 L1401.21 1214.48 L1401.79 1214.48 L1402.38 1214.48 L1402.96 1214.48 L1403.55 1214.48 L1404.14 1214.48 L1404.72 1214.48 L1405.31 1214.48 L1405.9 1214.48 L1406.48 1214.48 L1407.07 1214.48 L1407.66 1214.48 L1408.24 1214.48 L1408.83 1214.48 L1409.42 1214.48 L1410 1214.48 L1410.59 1214.48 L1411.17 1214.48 L1411.76 1214.48 L1412.35 1214.48 L1412.93 1214.48 L1413.52 1214.48 L1414.11 1214.48 L1414.69 1214.48 L1415.28 1214.48 L1415.87 1214.48 L1416.45 1214.48 L1417.04 1214.48 L1417.63 1214.48 L1418.21 1214.48 L1418.8 1214.48 L1419.38 1214.48 L1419.97 1214.48 L1420.56 1214.48 L1421.14 1214.48 L1421.73 1214.48 L1422.32 1214.48 L1422.9 1214.48 L1423.49 1214.48 L1424.08 1214.48 L1424.66 1214.48 L1425.25 1214.48 L1425.83 1214.48 L1426.42 1214.48 L1427.01 1214.48 L1427.59 1214.48 L1428.18 1214.48 L1428.77 1214.48 L1429.35 1214.48 L1429.94 1214.48 L1430.53 1214.48 L1431.11 1214.48 L1431.7 1214.48 L1432.29 1214.48 L1432.87 1214.48 L1433.46 1214.48 L1434.04 1214.48 L1434.63 1214.48 L1435.22 1214.48 L1435.8 1214.48 L1436.39 1214.48 L1436.98 1214.48 L1437.56 1214.48 L1438.15 1214.48 L1438.74 1214.48 L1439.32 1214.48 L1439.91 1214.48 L1440.5 1214.48 L1441.08 1214.48 L1441.67 1214.48 L1442.25 1214.48 L1442.84 1214.48 L1443.43 1214.48 L1444.01 1214.48 L1444.6 1214.48 L1445.19 1214.48 L1445.77 1214.48 L1446.36 1214.48 L1446.95 1214.48 L1447.53 1214.48 L1448.12 1214.48 L1448.7 1214.48 L1449.29 1214.48 L1449.88 1214.48 L1450.46 1214.48 L1451.05 1214.48 L1451.64 1214.48 L1452.22 1214.48 L1452.81 1214.48 L1453.4 1214.48 L1453.98 1214.48 L1454.57 1214.48 L1455.16 1214.48 L1455.74 1214.48 L1456.33 1214.48 L1456.91 1214.48 L1457.5 1214.48 L1458.09 1214.48 L1458.67 1214.48 L1459.26 1214.48 L1459.85 1214.48 L1460.43 1214.48 L1461.02 1214.48 L1461.61 1214.48 L1462.19 1214.48 L1462.78 1214.48 L1463.37 1214.48 L1463.95 1214.48 L1464.54 1214.48 L1465.12 1214.48 L1465.71 1214.48 L1466.3 1214.48 L1466.88 1214.48 L1467.47 1214.48 L1468.06 1214.48 L1468.64 1214.48 L1469.23 1214.48 L1469.82 1214.48 L1470.4 1214.48 L1470.99 1214.48 L1471.57 1214.48 L1472.16 1214.48 L1472.75 1214.48 L1473.33 1214.48 L1473.92 1214.48 L1474.51 1214.48 L1475.09 1214.48 L1475.68 1214.48 L1476.27 1214.48 L1476.85 1214.48 L1477.44 1214.48 L1478.03 1214.48 L1478.61 1214.48 L1479.2 1214.48 L1479.78 1214.48 L1480.37 1214.48 L1480.96 1214.48 L1481.54 1214.48 L1482.13 1214.48 L1482.72 1214.48 L1483.3 1214.48 L1483.89 1214.48 L1484.48 1214.48 L1485.06 1214.48 L1485.65 1214.48 L1486.24 1214.48 L1486.82 1214.48 L1487.41 1214.48 L1487.99 1214.48 L1488.58 1214.48 L1489.17 1214.48 L1489.75 1214.48 L1490.34 1214.48 L1490.93 1214.48 L1491.51 1214.48 L1492.1 1214.48 L1492.69 1214.48 L1493.27 1214.48 L1493.86 1214.48 L1494.45 1214.48 L1495.03 1214.48 L1495.62 1214.48 L1496.2 1214.48 L1496.79 1214.48 L1497.38 1214.48 L1497.96 1214.48 L1498.55 1214.48 L1499.14 1214.48 L1499.72 1214.48 L1500.31 1214.48 L1500.9 1214.48 L1501.48 1214.48 L1502.07 1214.48 L1502.65 1214.48 L1503.24 1214.48 L1503.83 1214.48 L1504.41 1214.48 L1505 1214.48 L1505.59 1214.48 L1506.17 1214.48 L1506.76 1214.48 L1507.35 1214.48 L1507.93 1214.48 L1508.52 1214.48 L1509.11 1214.48 L1509.69 1214.48 L1510.28 1214.48 L1510.86 1214.48 L1511.45 1214.48 L1512.04 1214.48 L1512.62 1214.48 L1513.21 1214.48 L1513.8 1214.48 L1514.38 1214.48 L1514.97 1214.48 L1515.56 1214.48 L1516.14 1214.48 L1516.73 1214.48 L1517.32 1214.48 L1517.9 1214.48 L1518.49 1214.48 L1519.07 1214.48 L1519.66 1214.48 L1520.25 1214.48 L1520.83 1214.48 L1521.42 1214.48 L1522.01 1214.48 L1522.59 1214.48 L1523.18 1214.48 L1523.77 1214.48 L1524.35 1214.48 L1524.94 1214.48 L1525.52 1214.48 L1526.11 1214.48 L1526.7 1214.48 L1527.28 1214.48 L1527.87 1214.48 L1528.46 1214.48 L1529.04 1214.48 L1529.63 1214.48 L1530.22 1214.48 L1530.8 1214.48 L1531.39 1214.48 L1531.98 1214.48 L1532.56 1214.48 L1533.15 1214.48 L1533.73 1214.48 L1534.32 1214.48 L1534.91 1214.48 L1535.49 1214.48 L1536.08 1214.48 L1536.67 1214.48 L1537.25 1214.48 L1537.84 1214.48 L1538.43 1214.48 L1539.01 1214.48 L1539.6 1214.48 L1540.19 1214.48 L1540.77 1214.48 L1541.36 1214.48 L1541.94 1214.48 L1542.53 1214.48 L1543.12 1214.48 L1543.7 1214.48 L1544.29 1214.48 L1544.88 1214.48 L1545.46 1214.48 L1546.05 1214.48 L1546.64 1214.48 L1547.22 1214.48 L1547.81 1214.48 L1548.4 1214.48 L1548.98 1214.48 L1549.57 1214.48 L1550.15 1214.48 L1550.74 1214.48 L1551.33 1214.48 L1551.91 1214.48 L1552.5 1214.48 L1553.09 1214.48 L1553.67 1214.48 L1554.26 1214.48 L1554.85 1214.48 L1555.43 1214.48 L1556.02 1214.48 L1556.6 1214.48 L1557.19 1214.48 L1557.78 1214.48 L1558.36 1214.48 L1558.95 1214.48 L1559.54 1214.48 L1560.12 1214.48 L1560.71 1214.48 L1561.3 1214.48 L1561.88 1214.48 L1562.47 1214.48 L1563.06 1214.48 L1563.64 1214.48 L1564.23 1214.48 L1564.81 1214.48 L1565.4 1214.48 L1565.99 1214.48 L1566.57 1214.48 L1567.16 1214.48 L1567.75 1214.48 L1568.33 1214.48 L1568.92 1214.48 L1569.51 1214.48 L1570.09 1214.48 L1570.68 1214.48 L1571.27 1214.48 L1571.85 1214.48 L1572.44 1214.48 L1573.02 1214.48 L1573.61 1214.48 L1574.2 1214.48 L1574.78 1214.48 L1575.37 1214.48 L1575.96 1214.48 L1576.54 1214.48 L1577.13 1214.48 L1577.72 1214.48 L1578.3 1214.48 L1578.89 1214.48 L1579.47 1214.48 L1580.06 1214.48 L1580.65 1214.48 L1581.23 1214.48 L1581.82 1214.48 L1582.41 1214.48 L1582.99 1214.48 L1583.58 1214.48 L1584.17 1214.48 L1584.75 1214.48 L1585.34 1214.48 L1585.93 1214.48 L1586.51 1214.48 L1587.1 1214.48 L1587.68 1214.48 L1588.27 1214.48 L1588.86 1214.48 L1589.44 1214.48 L1590.03 1214.48 L1590.62 1214.48 L1591.2 1214.48 L1591.79 1214.48 L1592.38 1214.48 L1592.96 1214.48 L1593.55 1214.48 L1594.14 1214.48 L1594.72 1214.48 L1595.31 1214.48 L1595.89 1214.48 L1596.48 1214.48 L1597.07 1214.48 L1597.65 1214.48 L1598.24 1214.48 L1598.83 1214.48 L1599.41 1214.48 L1600 1214.48 L1600.59 1214.48 L1601.17 1214.48 L1601.76 1214.48 L1602.34 1214.48 L1602.93 1214.48 L1603.52 1214.48 L1604.1 1214.48 L1604.69 1214.48 L1605.28 1214.48 L1605.86 1214.48 L1606.45 1214.48 L1607.04 1214.48 L1607.62 1214.48 L1608.21 1214.48 L1608.8 1214.48 L1609.38 1214.48 L1609.97 1214.48 L1610.55 1214.48 L1611.14 1214.48 L1611.73 1214.48 L1612.31 1214.48 L1612.9 1214.48 L1613.49 1214.48 L1614.07 1214.48 L1614.66 1214.48 L1615.25 1214.48 L1615.83 1214.48 L1616.42 1214.48 L1617.01 1214.48 L1617.59 1214.48 L1618.18 1214.48 L1618.76 1214.48 L1619.35 1214.48 L1619.94 1214.48 L1620.52 1214.48 L1621.11 1214.48 L1621.7 1214.48 L1622.28 1214.48 L1622.87 1214.48 L1623.46 1214.48 L1624.04 1214.48 L1624.63 1214.48 L1625.22 1214.48 L1625.8 1214.48 L1626.39 1214.48 L1626.97 1214.48 L1627.56 1214.48 L1628.15 1214.48 L1628.73 1214.48 L1629.32 1214.48 L1629.91 1214.48 L1630.49 1214.48 L1631.08 1214.48 L1631.67 1214.48 L1632.25 1214.48 L1632.84 1214.48 L1633.42 1214.48 L1634.01 1214.48 L1634.6 1214.48 L1635.18 1214.48 L1635.77 1214.48 L1636.36 1214.48 L1636.94 1214.48 L1637.53 1214.48 L1638.12 1214.48 L1638.7 1214.48 L1639.29 1214.48 L1639.88 1214.48 L1640.46 1214.48 L1641.05 1214.48 L1641.63 1214.48 L1642.22 1214.48 L1642.81 1214.48 L1643.39 1214.48 L1643.98 1214.48 L1644.57 1214.48 L1645.15 1214.48 L1645.74 1214.48 L1646.33 1214.48 L1646.91 1214.48 L1647.5 1214.48 L1648.09 1214.48 L1648.67 1214.48 L1649.26 1214.48 L1649.84 1214.48 L1650.43 1214.48 L1651.02 1214.48 L1651.6 1214.48 L1652.19 1214.48 L1652.78 1214.48 L1653.36 1214.48 L1653.95 1214.48 L1654.54 1214.48 L1655.12 1214.48 L1655.71 1214.48 L1656.29 1214.48 L1656.88 1214.48 L1657.47 1214.48 L1658.05 1214.48 L1658.64 1214.48 L1659.23 1214.48 L1659.81 1214.48 L1660.4 1214.48 L1660.99 1214.48 L1661.57 1214.48 L1662.16 1214.48 L1662.75 1214.48 L1663.33 1214.48 L1663.92 1214.48 L1664.5 1214.48 L1665.09 1214.48 L1665.68 1214.48 L1666.26 1214.48 L1666.85 1214.48 L1667.44 1214.48 L1668.02 1214.48 L1668.61 1214.48 L1669.2 1214.48 L1669.78 1214.48 L1670.37 1214.48 L1670.96 1214.48 L1671.54 1214.48 L1672.13 1214.48 L1672.71 1214.48 L1673.3 1214.48 L1673.89 1214.48 L1674.47 1214.48 L1675.06 1214.48 L1675.65 1214.48 L1676.23 1214.48 L1676.82 1214.48 L1677.41 1214.48 L1677.99 1214.48 L1678.58 1214.48 L1679.17 1214.48 L1679.75 1214.48 L1680.34 1214.48 L1680.92 1214.48 L1681.51 1214.48 L1682.1 1214.48 L1682.68 1214.48 L1683.27 1214.48 L1683.86 1214.48 L1684.44 1214.48 L1685.03 1214.48 L1685.62 1214.48 L1686.2 1214.48 L1686.79 1214.48 L1687.37 1214.48 L1687.96 1214.48 L1688.55 1214.48 L1689.13 1214.48 L1689.72 1214.48 L1690.31 1214.48 L1690.89 1214.48 L1691.48 1214.48 L1692.07 1214.48 L1692.65 1214.48 L1693.24 1214.48 L1693.83 1214.48 L1694.41 1214.48 L1695 1214.48 L1695.58 1214.48 L1696.17 1214.48 L1696.76 1214.48 L1697.34 1214.48 L1697.93 1214.48 L1698.52 1214.48 L1699.1 1214.48 L1699.69 1214.48 L1700.28 1214.48 L1700.86 1214.48 L1701.45 1214.48 L1702.04 1214.48 L1702.62 1214.48 L1703.21 1214.48 L1703.79 1214.48 L1704.38 1214.48 L1704.97 1214.48 L1705.55 1214.48 L1706.14 1214.48 L1706.73 1214.48 L1707.31 1214.48 L1707.9 1214.48 L1708.49 1214.48 L1709.07 1214.48 L1709.66 1214.48 L1710.24 1214.48 L1710.83 1214.48 L1711.42 1214.48 L1712 1214.48 L1712.59 1214.48 L1713.18 1214.48 L1713.76 1214.48 L1714.35 1214.48 L1714.94 1214.48 L1715.52 1214.48 L1716.11 1214.48 L1716.7 1214.48 L1717.28 1214.48 L1717.87 1214.48 L1718.45 1214.48 L1719.04 1214.48 L1719.63 1214.48 L1720.21 1214.48 L1720.8 1214.48 L1721.39 1214.48 L1721.97 1214.48 L1722.56 1214.48 L1723.15 1214.48 L1723.73 1214.48 L1724.32 1214.48 L1724.91 1214.48 L1725.49 1214.48 L1726.08 1214.48 L1726.66 1214.48 L1727.25 1214.48 L1727.84 1214.48 L1728.42 1214.48 L1729.01 1214.48 L1729.6 1214.48 L1730.18 1214.48 L1730.77 1214.48 L1731.36 1214.48 L1731.94 1214.48 L1732.53 1214.48 L1733.11 1214.48 L1733.7 1214.48 L1734.29 1214.48 L1734.87 1214.48 L1735.46 1214.48 L1736.05 1214.48 L1736.63 1214.48 L1737.22 1214.48 L1737.81 1214.48 L1738.39 1214.48 L1738.98 1214.48 L1739.57 1214.48 L1740.15 1214.48 L1740.74 1214.48 L1741.32 1214.48 L1741.91 1214.48 L1742.5 1214.48 L1743.08 1214.48 L1743.67 1214.48 L1744.26 1214.48 L1744.84 1214.48 L1745.43 1214.48 L1746.02 1214.48 L1746.6 1214.48 L1747.19 1214.48 L1747.78 1214.48 L1748.36 1214.48 L1748.95 1214.48 L1749.53 1214.48 L1750.12 1214.48 L1750.71 1214.48 L1751.29 1214.48 L1751.88 1214.48 L1752.47 1214.48 L1753.05 1214.48 L1753.64 1214.48 L1754.23 1214.48 L1754.81 1214.48 L1755.4 1214.48 L1755.99 1214.48 L1756.57 1214.48 L1757.16 1214.48 L1757.74 1214.48 L1758.33 1214.48 L1758.92 1214.48 L1759.5 1214.48 L1760.09 1214.48 L1760.68 1214.48 L1761.26 1214.48 L1761.85 1214.48 L1762.44 1214.48 L1763.02 1214.48 L1763.61 1214.48 L1764.19 1214.48 L1764.78 1214.48 L1765.37 1214.48 L1765.95 1214.48 L1766.54 1214.48 L1767.13 1214.48 L1767.71 1214.48 L1768.3 1214.48 L1768.89 1214.48 L1769.47 1214.48 L1770.06 1214.48 L1770.65 1214.48 L1771.23 1214.48 L1771.82 1214.48 L1772.4 1214.48 L1772.99 1214.48 L1773.58 1214.48 L1774.16 1214.48 L1774.75 1214.48 L1775.34 1214.48 L1775.92 1214.48 L1776.51 1214.48 L1777.1 1214.48 L1777.68 1214.48 L1778.27 1214.48 L1778.86 1214.48 L1779.44 1214.48 L1780.03 1214.48 L1780.61 1214.48 L1781.2 1214.48 L1781.79 1214.48 L1782.37 1214.48 L1782.96 1214.48 L1783.55 1214.48 L1784.13 1214.48 L1784.72 1214.48 L1785.31 1214.48 L1785.89 1214.48 L1786.48 1214.48 L1787.06 1214.48 L1787.65 1214.48 L1788.24 1214.48 L1788.82 1214.48 L1789.41 1214.48 L1790 1214.48 L1790.58 1214.48 L1791.17 1214.48 L1791.76 1214.48 L1792.34 1214.48 L1792.93 1214.48 L1793.52 1214.48 L1794.1 1214.48 L1794.69 1214.48 L1795.27 1214.48 L1795.86 1214.48 L1796.45 1214.48 L1797.03 1214.48 L1797.62 1214.48 L1798.21 1214.48 L1798.79 1214.48 L1799.38 1214.48 L1799.97 1214.48 L1800.55 1214.48 L1801.14 1214.48 L1801.73 1214.48 L1802.31 1214.48 L1802.9 1214.48 L1803.48 1214.48 L1804.07 1214.48 L1804.66 1214.48 L1805.24 1214.48 L1805.83 1214.48 L1806.42 1214.48 L1807 1214.48 L1807.59 1214.48 L1808.18 1214.48 L1808.76 1214.48 L1809.35 1214.48 L1809.94 1214.48 L1810.52 1214.48 L1811.11 1214.48 L1811.69 1214.48 L1812.28 1214.48 L1812.87 1214.48 L1813.45 1214.48 L1814.04 1214.48 L1814.63 1214.48 L1815.21 1214.48 L1815.8 1214.48 L1816.39 1214.48 L1816.97 1214.48 L1817.56 1214.48 L1818.14 1214.48 L1818.73 1214.48 L1819.32 1214.48 L1819.9 1214.48 L1820.49 1214.48 L1821.08 1214.48 L1821.66 1214.48 L1822.25 1214.48 L1822.84 1214.48 L1823.42 1214.48 L1824.01 1214.48 L1824.6 1214.48 L1825.18 1214.48 L1825.77 1214.48 L1826.35 1214.48 L1826.94 1214.48 L1827.53 1214.48 L1828.11 1214.48 L1828.7 1214.48 L1829.29 1214.48 L1829.87 1214.48 L1830.46 1214.48 L1831.05 1214.48 L1831.63 1214.48 L1832.22 1214.48 L1832.81 1214.48 L1833.39 1214.48 L1833.98 1214.48 L1834.56 1214.48 L1835.15 1214.48 L1835.74 1214.48 L1836.32 1214.48 L1836.91 1214.48 L1837.5 1214.48 L1838.08 1214.48 L1838.67 1214.48 L1839.26 1214.48 L1839.84 1214.48 L1840.43 1214.48 L1841.01 1214.48 L1841.6 1214.48 L1842.19 1214.48 L1842.77 1214.48 L1843.36 1214.48 L1843.95 1214.48 L1844.53 1214.48 L1845.12 1214.48 L1845.71 1214.48 L1846.29 1214.48 L1846.88 1214.48 L1847.47 1214.48 L1848.05 1214.48 L1848.64 1214.48 L1849.22 1214.48 L1849.81 1214.48 L1850.4 1214.48 L1850.98 1214.48 L1851.57 1214.48 L1852.16 1214.48 L1852.74 1214.48 L1853.33 1214.48 L1853.92 1214.48 L1854.5 1214.48 L1855.09 1214.48 L1855.68 1214.48 L1856.26 1214.48 L1856.85 1214.48 L1857.43 1214.48 L1858.02 1214.48 L1858.61 1214.48 L1859.19 1214.48 L1859.78 1214.48 L1860.37 1214.48 L1860.95 1214.48 L1861.54 1214.48 L1862.13 1214.48 L1862.71 1214.48 L1863.3 1214.48 L1863.88 1214.48 L1864.47 1214.48 L1865.06 1214.48 L1865.64 1214.48 L1866.23 1214.48 L1866.82 1214.48 L1867.4 1214.48 L1867.99 1214.48 L1868.58 1214.48 L1869.16 1214.48 L1869.75 1214.48 L1870.34 1214.48 L1870.92 1214.48 L1871.51 1214.48 L1872.09 1214.48 L1872.68 1214.48 L1873.27 1214.48 L1873.85 1214.48 L1874.44 1214.48 L1875.03 1214.48 L1875.61 1214.48 L1876.2 1214.48 L1876.79 1214.48 L1877.37 1214.48 L1877.96 1214.48 L1878.55 1214.48 L1879.13 1214.48 L1879.72 1214.48 L1880.3 1214.48 L1880.89 1214.48 L1881.48 1214.48 L1882.06 1214.48 L1882.65 1214.48 L1883.24 1214.48 L1883.82 1214.48 L1884.41 1214.48 L1885 1214.48 L1885.58 1214.48 L1886.17 1214.48 L1886.76 1214.48 L1887.34 1214.48 L1887.93 1214.48 L1888.51 1214.48 L1889.1 1214.48 L1889.69 1214.48 L1890.27 1214.48 L1890.86 1214.48 L1891.45 1214.48 L1892.03 1214.48 L1892.62 1214.48 L1893.21 1214.48 L1893.79 1214.48 L1894.38 1214.48 L1894.96 1214.48 L1895.55 1214.48 L1896.14 1214.48 L1896.72 1214.48 L1897.31 1214.48 L1897.9 1214.48 L1898.48 1214.48 L1899.07 1214.48 L1899.66 1214.48 L1900.24 1214.48 L1900.83 1214.48 L1901.42 1214.48 L1902 1214.48 L1902.59 1214.48 L1903.17 1214.48 L1903.76 1214.48 L1904.35 1214.48 L1904.93 1214.48 L1905.52 1214.48 L1906.11 1214.48 L1906.69 1214.48 L1907.28 1214.48 L1907.87 1214.48 L1908.45 1214.48 L1909.04 1214.48 L1909.63 1214.48 L1910.21 1214.48 L1910.8 1214.48 L1911.38 1214.48 L1911.97 1214.48 L1912.56 1214.48 L1913.14 1214.48 L1913.73 1214.48 L1914.32 1214.48 L1914.9 1214.48 L1915.49 1214.48 L1916.08 1214.48 L1916.66 1214.48 L1917.25 1214.48 L1917.83 1214.48 L1918.42 1214.48 L1919.01 1214.48 L1919.59 1214.48 L1920.18 1214.48 L1920.77 1214.48 L1921.35 1214.48 L1921.94 1214.48 L1922.53 1214.48 L1923.11 1214.48 L1923.7 1214.48 L1924.29 1214.48 L1924.87 1214.48 L1925.46 1214.48 L1926.04 1214.48 L1926.63 1214.48 L1927.22 1214.48 L1927.8 1214.48 L1928.39 1214.48 L1928.98 1214.48 L1929.56 1214.48 L1930.15 1214.48 L1930.74 1214.48 L1931.32 1214.48 L1931.91 1214.48 L1932.5 1214.48 L1933.08 1214.48 L1933.67 1214.48 L1934.25 1214.48 L1934.84 1214.48 L1935.43 1214.48 L1936.01 1214.48 L1936.6 1214.48 L1937.19 1214.48 L1937.77 1214.48 L1938.36 1214.48 L1938.95 1214.48 L1939.53 1214.48 L1940.12 1214.48 L1940.71 1214.48 L1941.29 1214.48 L1941.88 1214.48 L1942.46 1214.48 L1943.05 1214.48 L1943.64 1214.48 L1944.22 1214.48 L1944.81 1214.48 L1945.4 1214.48 L1945.98 1214.48 L1946.57 1214.48 L1947.16 1214.48 L1947.74 1214.48 L1948.33 1214.48 L1948.91 1214.48 L1949.5 1214.48 L1950.09 1214.48 L1950.67 1214.48 L1951.26 1214.48 L1951.85 1214.48 L1952.43 1214.48 L1953.02 1214.48 L1953.61 1214.48 L1954.19 1214.48 L1954.78 1214.48 L1955.37 1214.48 L1955.95 1214.48 L1956.54 1214.48 L1957.12 1214.48 L1957.71 1214.48 L1958.3 1214.48 L1958.88 1214.48 L1959.47 1214.48 L1960.06 1214.48 L1960.64 1214.48 L1961.23 1214.48 L1961.82 1214.48 L1962.4 1214.48 L1962.99 1214.48 L1963.58 1214.48 L1964.16 1214.48 L1964.75 1214.48 L1965.33 1214.48 L1965.92 1214.48 L1966.51 1214.48 L1967.09 1214.48 L1967.68 1214.48 L1968.27 1214.48 L1968.85 1214.48 L1969.44 1214.48 L1970.03 1214.48 L1970.61 1214.48 L1971.2 1214.48 L1971.78 1214.48 L1972.37 1214.48 L1972.96 1214.48 L1973.54 1214.48 L1974.13 1214.48 L1974.72 1214.48 L1975.3 1214.48 L1975.89 1214.48 L1976.48 1214.48 L1977.06 1214.48 L1977.65 1214.48 L1978.24 1214.48 L1978.82 1214.48 L1979.41 1214.48 L1979.99 1214.48 L1980.58 1214.48 L1981.17 1214.48 L1981.75 1214.48 L1982.34 1214.48 L1982.93 1214.48 L1983.51 1214.48 L1984.1 1214.48 L1984.69 1214.48 L1985.27 1214.48 L1985.86 1214.48 L1986.45 1214.48 L1987.03 1214.48 L1987.62 1214.48 L1988.2 1214.48 L1988.79 1214.48 L1989.38 1214.48 L1989.96 1214.48 L1990.55 1214.48 L1991.14 1214.48 L1991.72 1214.48 L1992.31 1214.48 L1992.9 1214.48 L1993.48 1214.48 L1994.07 1214.48 L1994.65 1214.48 L1995.24 1214.48 L1995.83 1214.48 L1996.41 1214.48 L1997 1214.48 L1997.59 1214.48 L1998.17 1214.48 L1998.76 1214.48 L1999.35 1214.48 L1999.93 1214.48 L2000.52 1214.48 L2001.11 1214.48 L2001.69 1214.48 L2002.28 1214.48 L2002.86 1214.48 L2003.45 1214.48 L2004.04 1214.48 L2004.62 1214.48 L2005.21 1214.48 L2005.8 1214.48 L2006.38 1214.48 L2006.97 1214.48 L2007.56 1214.48 L2008.14 1214.48 L2008.73 1214.48 L2009.32 1214.48 L2009.9 1214.48 L2010.49 1214.48 L2011.07 1214.48 L2011.66 1214.48 L2012.25 1214.48 L2012.83 1214.48 L2013.42 1214.48 L2014.01 1214.48 L2014.59 1214.48 L2015.18 1214.48 L2015.77 1214.48 L2016.35 1214.48 L2016.94 1214.48 L2017.53 1214.48 L2018.11 1214.48 L2018.7 1214.48 L2019.28 1214.48 L2019.87 1214.48 L2020.46 1214.48 L2021.04 1214.48 L2021.63 1214.48 L2022.22 1214.48 L2022.8 1214.48 L2023.39 1214.48 L2023.98 1214.48 L2024.56 1214.48 L2025.15 1214.48 L2025.73 1214.48 L2026.32 1214.48 L2026.91 1214.48 L2027.49 1214.48 L2028.08 1214.48 L2028.67 1214.48 L2029.25 1214.48 L2029.84 1214.48 L2030.43 1214.48 L2031.01 1214.48 L2031.6 1214.48 L2032.19 1214.48 L2032.77 1214.48 L2033.36 1214.48 L2033.94 1214.48 L2034.53 1214.48 L2035.12 1214.48 L2035.7 1214.48 L2036.29 1214.48 L2036.88 1214.48 L2037.46 1214.48 L2038.05 1214.48 L2038.64 1214.48 L2039.22 1214.48 L2039.81 1214.48 L2040.4 1214.48 L2040.98 1214.48 L2041.57 1214.48 L2042.15 1214.48 L2042.74 1214.48 L2043.33 1214.48 L2043.91 1214.48 L2044.5 1214.48 L2045.09 1214.48 L2045.67 1214.48 L2046.26 1214.48 L2046.85 1214.48 L2047.43 1214.48 L2048.02 1214.48 L2048.6 1214.48 L2049.19 1214.48 L2049.78 1214.48 L2050.36 1214.48 L2050.95 1214.48 L2051.54 1214.48 L2052.12 1214.48 L2052.71 1214.48 L2053.3 1214.48 L2053.88 1214.48 L2054.47 1214.48 L2055.06 1214.48 L2055.64 1214.48 L2056.23 1214.48 L2056.81 1214.48 L2057.4 1214.48 L2057.99 1214.48 L2058.57 1214.48 L2059.16 1214.48 L2059.75 1214.48 L2060.33 1214.48 L2060.92 1214.48 L2061.51 1214.48 L2062.09 1214.48 L2062.68 1214.48 L2063.27 1214.48 L2063.85 1214.48 L2064.44 1214.48 L2065.02 1214.48 L2065.61 1214.48 L2066.2 1214.48 L2066.78 1214.48 L2067.37 1214.48 L2067.96 1214.48 L2068.54 1214.48 L2069.13 1214.48 L2069.72 1214.48 L2070.3 1214.48 L2070.89 1214.48 L2071.48 1214.48 L2072.06 1214.48 L2072.65 1214.48 L2073.23 1214.48 L2073.82 1214.48 L2074.41 1214.48 L2074.99 1214.48 L2075.58 1214.48 L2076.17 1214.48 L2076.75 1214.48 L2077.34 1214.48 L2077.93 1214.48 L2078.51 1214.48 L2079.1 1214.48 L2079.68 1214.48 L2080.27 1214.48 L2080.86 1214.48 L2081.44 1214.48 L2082.03 1214.48 L2082.62 1214.48 L2083.2 1214.48 L2083.79 1214.48 L2084.38 1214.48 L2084.96 1214.48 L2085.55 1214.48 L2086.14 1214.48 L2086.72 1214.48 L2087.31 1214.48 L2087.89 1214.48 L2088.48 1214.48 L2089.07 1214.48 L2089.65 1214.48 L2090.24 1214.48 L2090.83 1214.48 L2091.41 1214.48 L2092 1214.48 L2092.59 1214.48 L2093.17 1214.48 L2093.76 1214.48 L2094.35 1214.48 L2094.93 1214.48 L2095.52 1214.48 L2096.1 1214.48 L2096.69 1214.48 L2097.28 1214.48 L2097.86 1214.48 L2098.45 1214.48 L2099.04 1214.48 L2099.62 1214.48 L2100.21 1214.48 L2100.8 1214.48 L2101.38 1214.48 L2101.97 1214.48 L2102.55 1214.48 L2103.14 1214.48 L2103.73 1214.48 L2104.31 1214.48 L2104.9 1214.48 L2105.49 1214.48 L2106.07 1214.48 L2106.66 1214.48 L2107.25 1214.48 L2107.83 1214.48 L2108.42 1214.48 L2109.01 1214.48 L2109.59 1214.48 L2110.18 1214.48 L2110.76 1214.48 L2111.35 1214.48 L2111.94 1214.48 L2112.52 1214.48 L2113.11 1214.48 L2113.7 1214.48 L2114.28 1214.48 L2114.87 1214.48 L2115.46 1214.48 L2116.04 1214.48 L2116.63 1214.48 L2117.22 1214.48 L2117.8 1214.48 L2118.39 1214.48 L2118.97 1214.48 L2119.56 1214.48 L2120.15 1214.48 L2120.73 1214.48 L2121.32 1214.48 L2121.91 1214.48 L2122.49 1214.48 L2123.08 1214.48 L2123.67 1214.48 L2124.25 1214.48 L2124.84 1214.48 L2125.42 1214.48 L2126.01 1214.48 L2126.6 1214.48 L2127.18 1214.48 L2127.77 1214.48 L2128.36 1214.48 L2128.94 1214.48 L2129.53 1214.48 L2130.12 1214.48 L2130.7 1214.48 L2131.29 1214.48 L2131.88 1214.48 L2132.46 1214.48 L2133.05 1214.48 L2133.63 1214.48 L2134.22 1214.48 L2134.81 1214.48 L2135.39 1214.48 L2135.98 1214.48 L2136.57 1214.48 L2137.15 1214.48 L2137.74 1214.48 L2138.33 1214.48 L2138.91 1214.48 L2139.5 1214.48 L2140.09 1214.48 L2140.67 1214.48 L2141.26 1214.48 L2141.84 1214.48 L2142.43 1214.48 L2143.02 1214.48 L2143.6 1214.48 L2144.19 1214.48 L2144.78 1214.48 L2145.36 1214.48 L2145.95 1214.48 L2146.54 1214.48 L2147.12 1214.48 L2147.71 1214.48 L2148.3 1214.48 L2148.88 1214.48 L2149.47 1214.48 L2150.05 1214.48 L2150.64 1214.48 L2151.23 1214.48 L2151.81 1214.48 L2152.4 1214.48 L2152.99 1214.48 L2153.57 1214.48 L2154.16 1214.48 L2154.75 1214.48 L2155.33 1214.48 L2155.92 1214.48 L2156.5 1214.48 L2157.09 1214.48 L2157.68 1214.48 L2158.26 1214.48 L2158.26 1214.26 L2157.68 1214.26 L2157.09 1214.26 L2156.5 1214.26 L2155.92 1214.26 L2155.33 1214.26 L2154.75 1214.26 L2154.16 1214.26 L2153.57 1214.26 L2152.99 1214.26 L2152.4 1214.26 L2151.81 1214.26 L2151.23 1214.26 L2150.64 1214.26 L2150.05 1214.26 L2149.47 1214.26 L2148.88 1214.26 L2148.3 1214.26 L2147.71 1214.26 L2147.12 1214.26 L2146.54 1214.26 L2145.95 1214.26 L2145.36 1214.26 L2144.78 1214.26 L2144.19 1214.26 L2143.6 1214.26 L2143.02 1214.26 L2142.43 1214.26 L2141.84 1214.26 L2141.26 1214.26 L2140.67 1214.26 L2140.09 1214.26 L2139.5 1214.26 L2138.91 1214.26 L2138.33 1214.26 L2137.74 1214.26 L2137.15 1214.26 L2136.57 1214.26 L2135.98 1214.26 L2135.39 1214.26 L2134.81 1214.26 L2134.22 1214.26 L2133.63 1214.26 L2133.05 1214.26 L2132.46 1214.26 L2131.88 1214.26 L2131.29 1214.26 L2130.7 1214.26 L2130.12 1214.26 L2129.53 1214.26 L2128.94 1214.26 L2128.36 1214.26 L2127.77 1214.26 L2127.18 1214.26 L2126.6 1214.26 L2126.01 1214.26 L2125.42 1214.26 L2124.84 1214.26 L2124.25 1214.26 L2123.67 1214.26 L2123.08 1214.26 L2122.49 1214.26 L2121.91 1214.26 L2121.32 1214.26 L2120.73 1214.26 L2120.15 1214.26 L2119.56 1214.26 L2118.97 1214.26 L2118.39 1214.26 L2117.8 1214.26 L2117.22 1214.26 L2116.63 1214.26 L2116.04 1214.26 L2115.46 1214.26 L2114.87 1214.26 L2114.28 1214.26 L2113.7 1214.26 L2113.11 1214.26 L2112.52 1214.26 L2111.94 1214.26 L2111.35 1214.26 L2110.76 1214.26 L2110.18 1214.26 L2109.59 1214.26 L2109.01 1214.26 L2108.42 1214.26 L2107.83 1214.26 L2107.25 1214.26 L2106.66 1214.26 L2106.07 1214.26 L2105.49 1214.26 L2104.9 1214.26 L2104.31 1214.26 L2103.73 1214.26 L2103.14 1214.26 L2102.55 1214.26 L2101.97 1214.26 L2101.38 1214.26 L2100.8 1214.26 L2100.21 1214.26 L2099.62 1214.26 L2099.04 1214.26 L2098.45 1214.26 L2097.86 1214.26 L2097.28 1214.26 L2096.69 1214.26 L2096.1 1214.26 L2095.52 1214.26 L2094.93 1214.26 L2094.35 1214.26 L2093.76 1214.26 L2093.17 1214.26 L2092.59 1214.26 L2092 1214.26 L2091.41 1214.26 L2090.83 1214.26 L2090.24 1214.26 L2089.65 1214.26 L2089.07 1214.26 L2088.48 1214.26 L2087.89 1214.26 L2087.31 1214.26 L2086.72 1214.26 L2086.14 1214.26 L2085.55 1214.26 L2084.96 1214.26 L2084.38 1214.26 L2083.79 1214.26 L2083.2 1214.26 L2082.62 1214.26 L2082.03 1214.26 L2081.44 1214.26 L2080.86 1214.26 L2080.27 1214.26 L2079.68 1214.26 L2079.1 1214.26 L2078.51 1214.26 L2077.93 1214.26 L2077.34 1214.26 L2076.75 1214.26 L2076.17 1214.26 L2075.58 1214.26 L2074.99 1214.26 L2074.41 1214.26 L2073.82 1214.26 L2073.23 1214.26 L2072.65 1214.26 L2072.06 1214.26 L2071.48 1214.26 L2070.89 1214.26 L2070.3 1214.26 L2069.72 1214.26 L2069.13 1214.26 L2068.54 1214.26 L2067.96 1214.26 L2067.37 1214.26 L2066.78 1214.26 L2066.2 1214.26 L2065.61 1214.26 L2065.02 1214.26 L2064.44 1214.26 L2063.85 1214.26 L2063.27 1214.26 L2062.68 1214.26 L2062.09 1214.26 L2061.51 1214.26 L2060.92 1214.26 L2060.33 1214.26 L2059.75 1214.26 L2059.16 1214.26 L2058.57 1214.26 L2057.99 1214.26 L2057.4 1214.26 L2056.81 1214.26 L2056.23 1214.26 L2055.64 1214.26 L2055.06 1214.26 L2054.47 1214.26 L2053.88 1214.26 L2053.3 1214.26 L2052.71 1214.26 L2052.12 1214.26 L2051.54 1214.26 L2050.95 1214.26 L2050.36 1214.26 L2049.78 1214.26 L2049.19 1214.26 L2048.6 1214.26 L2048.02 1214.26 L2047.43 1214.26 L2046.85 1214.26 L2046.26 1214.26 L2045.67 1214.26 L2045.09 1214.26 L2044.5 1214.26 L2043.91 1214.26 L2043.33 1214.26 L2042.74 1214.26 L2042.15 1214.26 L2041.57 1214.26 L2040.98 1214.26 L2040.4 1214.26 L2039.81 1214.26 L2039.22 1214.26 L2038.64 1214.26 L2038.05 1214.26 L2037.46 1214.26 L2036.88 1214.26 L2036.29 1214.26 L2035.7 1214.26 L2035.12 1214.26 L2034.53 1214.26 L2033.94 1214.26 L2033.36 1214.26 L2032.77 1214.26 L2032.19 1214.26 L2031.6 1214.26 L2031.01 1214.26 L2030.43 1214.26 L2029.84 1214.26 L2029.25 1214.26 L2028.67 1214.26 L2028.08 1214.26 L2027.49 1214.26 L2026.91 1214.26 L2026.32 1214.26 L2025.73 1214.26 L2025.15 1214.26 L2024.56 1214.26 L2023.98 1214.26 L2023.39 1214.26 L2022.8 1214.26 L2022.22 1214.26 L2021.63 1214.26 L2021.04 1214.26 L2020.46 1214.26 L2019.87 1214.26 L2019.28 1214.26 L2018.7 1214.26 L2018.11 1214.26 L2017.53 1214.26 L2016.94 1214.26 L2016.35 1214.26 L2015.77 1214.26 L2015.18 1214.26 L2014.59 1214.26 L2014.01 1214.26 L2013.42 1214.26 L2012.83 1214.26 L2012.25 1214.26 L2011.66 1214.26 L2011.07 1214.26 L2010.49 1214.26 L2009.9 1214.26 L2009.32 1214.26 L2008.73 1214.26 L2008.14 1214.26 L2007.56 1214.26 L2006.97 1214.26 L2006.38 1214.26 L2005.8 1214.26 L2005.21 1214.26 L2004.62 1214.26 L2004.04 1214.26 L2003.45 1214.26 L2002.86 1214.26 L2002.28 1214.26 L2001.69 1214.26 L2001.11 1214.26 L2000.52 1214.26 L1999.93 1214.26 L1999.35 1214.26 L1998.76 1214.26 L1998.17 1214.26 L1997.59 1214.26 L1997 1214.26 L1996.41 1214.26 L1995.83 1214.26 L1995.24 1214.26 L1994.65 1214.26 L1994.07 1214.26 L1993.48 1214.26 L1992.9 1214.26 L1992.31 1214.26 L1991.72 1214.26 L1991.14 1214.26 L1990.55 1214.26 L1989.96 1214.26 L1989.38 1214.26 L1988.79 1214.26 L1988.2 1214.26 L1987.62 1214.26 L1987.03 1214.26 L1986.45 1214.26 L1985.86 1214.26 L1985.27 1214.26 L1984.69 1214.26 L1984.1 1214.26 L1983.51 1214.26 L1982.93 1214.26 L1982.34 1214.26 L1981.75 1214.26 L1981.17 1214.26 L1980.58 1214.26 L1979.99 1214.26 L1979.41 1214.26 L1978.82 1214.26 L1978.24 1214.26 L1977.65 1214.26 L1977.06 1214.26 L1976.48 1214.26 L1975.89 1214.26 L1975.3 1214.26 L1974.72 1214.26 L1974.13 1214.26 L1973.54 1214.26 L1972.96 1214.26 L1972.37 1214.26 L1971.78 1214.26 L1971.2 1214.26 L1970.61 1214.26 L1970.03 1214.26 L1969.44 1214.26 L1968.85 1214.26 L1968.27 1214.26 L1967.68 1214.26 L1967.09 1214.26 L1966.51 1214.26 L1965.92 1214.26 L1965.33 1214.26 L1964.75 1214.26 L1964.16 1214.26 L1963.58 1214.26 L1962.99 1214.26 L1962.4 1214.26 L1961.82 1214.26 L1961.23 1214.26 L1960.64 1214.26 L1960.06 1214.26 L1959.47 1214.26 L1958.88 1214.26 L1958.3 1214.26 L1957.71 1214.26 L1957.12 1214.26 L1956.54 1214.26 L1955.95 1214.26 L1955.37 1214.26 L1954.78 1214.26 L1954.19 1214.26 L1953.61 1214.26 L1953.02 1214.26 L1952.43 1214.26 L1951.85 1214.26 L1951.26 1214.26 L1950.67 1214.26 L1950.09 1214.26 L1949.5 1214.26 L1948.91 1214.26 L1948.33 1214.26 L1947.74 1214.26 L1947.16 1214.26 L1946.57 1214.26 L1945.98 1214.26 L1945.4 1214.26 L1944.81 1214.26 L1944.22 1214.26 L1943.64 1214.26 L1943.05 1214.26 L1942.46 1214.26 L1941.88 1214.26 L1941.29 1214.26 L1940.71 1214.26 L1940.12 1214.26 L1939.53 1214.26 L1938.95 1214.26 L1938.36 1214.26 L1937.77 1214.26 L1937.19 1214.26 L1936.6 1214.26 L1936.01 1214.26 L1935.43 1214.26 L1934.84 1214.26 L1934.25 1214.26 L1933.67 1214.26 L1933.08 1214.26 L1932.5 1214.26 L1931.91 1214.26 L1931.32 1214.26 L1930.74 1214.26 L1930.15 1214.26 L1929.56 1214.26 L1928.98 1214.26 L1928.39 1214.26 L1927.8 1214.26 L1927.22 1214.26 L1926.63 1214.26 L1926.04 1214.26 L1925.46 1214.26 L1924.87 1214.26 L1924.29 1214.26 L1923.7 1214.26 L1923.11 1214.26 L1922.53 1214.26 L1921.94 1214.26 L1921.35 1214.26 L1920.77 1214.26 L1920.18 1214.26 L1919.59 1214.26 L1919.01 1214.26 L1918.42 1214.26 L1917.83 1214.26 L1917.25 1214.26 L1916.66 1214.26 L1916.08 1214.26 L1915.49 1214.26 L1914.9 1214.26 L1914.32 1214.26 L1913.73 1214.26 L1913.14 1214.26 L1912.56 1214.26 L1911.97 1214.26 L1911.38 1214.26 L1910.8 1214.26 L1910.21 1214.26 L1909.63 1214.26 L1909.04 1214.26 L1908.45 1214.26 L1907.87 1214.26 L1907.28 1214.26 L1906.69 1214.26 L1906.11 1214.26 L1905.52 1214.26 L1904.93 1214.26 L1904.35 1214.26 L1903.76 1214.26 L1903.17 1214.26 L1902.59 1214.26 L1902 1214.26 L1901.42 1214.26 L1900.83 1214.26 L1900.24 1214.26 L1899.66 1214.26 L1899.07 1214.26 L1898.48 1214.26 L1897.9 1214.26 L1897.31 1214.26 L1896.72 1214.26 L1896.14 1214.26 L1895.55 1214.26 L1894.96 1214.26 L1894.38 1214.26 L1893.79 1214.26 L1893.21 1214.26 L1892.62 1214.26 L1892.03 1214.26 L1891.45 1214.26 L1890.86 1214.26 L1890.27 1214.26 L1889.69 1214.26 L1889.1 1214.26 L1888.51 1214.26 L1887.93 1214.26 L1887.34 1214.26 L1886.76 1214.26 L1886.17 1214.26 L1885.58 1214.26 L1885 1214.26 L1884.41 1214.26 L1883.82 1214.26 L1883.24 1214.26 L1882.65 1214.26 L1882.06 1214.26 L1881.48 1214.26 L1880.89 1214.26 L1880.3 1214.26 L1879.72 1214.26 L1879.13 1214.26 L1878.55 1214.26 L1877.96 1214.26 L1877.37 1214.26 L1876.79 1214.26 L1876.2 1214.26 L1875.61 1214.26 L1875.03 1214.26 L1874.44 1214.26 L1873.85 1214.26 L1873.27 1214.26 L1872.68 1214.26 L1872.09 1214.26 L1871.51 1214.26 L1870.92 1214.26 L1870.34 1214.26 L1869.75 1214.26 L1869.16 1214.26 L1868.58 1214.26 L1867.99 1214.26 L1867.4 1214.26 L1866.82 1214.26 L1866.23 1214.26 L1865.64 1214.26 L1865.06 1214.26 L1864.47 1214.26 L1863.88 1214.26 L1863.3 1214.26 L1862.71 1214.26 L1862.13 1214.26 L1861.54 1214.26 L1860.95 1214.26 L1860.37 1214.26 L1859.78 1214.26 L1859.19 1214.26 L1858.61 1214.26 L1858.02 1214.26 L1857.43 1214.26 L1856.85 1214.26 L1856.26 1214.26 L1855.68 1214.26 L1855.09 1214.26 L1854.5 1214.26 L1853.92 1214.26 L1853.33 1214.26 L1852.74 1214.26 L1852.16 1214.26 L1851.57 1214.26 L1850.98 1214.26 L1850.4 1214.26 L1849.81 1214.26 L1849.22 1214.26 L1848.64 1214.26 L1848.05 1214.26 L1847.47 1214.26 L1846.88 1214.26 L1846.29 1214.26 L1845.71 1214.26 L1845.12 1214.26 L1844.53 1214.26 L1843.95 1214.26 L1843.36 1214.26 L1842.77 1214.26 L1842.19 1214.26 L1841.6 1214.26 L1841.01 1214.26 L1840.43 1214.26 L1839.84 1214.26 L1839.26 1214.26 L1838.67 1214.26 L1838.08 1214.26 L1837.5 1214.26 L1836.91 1214.26 L1836.32 1214.26 L1835.74 1214.26 L1835.15 1214.26 L1834.56 1214.26 L1833.98 1214.26 L1833.39 1214.26 L1832.81 1214.26 L1832.22 1214.26 L1831.63 1214.26 L1831.05 1214.26 L1830.46 1214.26 L1829.87 1214.26 L1829.29 1214.26 L1828.7 1214.26 L1828.11 1214.26 L1827.53 1214.26 L1826.94 1214.26 L1826.35 1214.26 L1825.77 1214.26 L1825.18 1214.26 L1824.6 1214.26 L1824.01 1214.26 L1823.42 1214.26 L1822.84 1214.26 L1822.25 1214.26 L1821.66 1214.26 L1821.08 1214.26 L1820.49 1214.26 L1819.9 1214.26 L1819.32 1214.26 L1818.73 1214.26 L1818.14 1214.26 L1817.56 1214.26 L1816.97 1214.26 L1816.39 1214.26 L1815.8 1214.26 L1815.21 1214.26 L1814.63 1214.26 L1814.04 1214.26 L1813.45 1214.26 L1812.87 1214.26 L1812.28 1214.26 L1811.69 1214.26 L1811.11 1214.26 L1810.52 1214.26 L1809.94 1214.26 L1809.35 1214.26 L1808.76 1214.26 L1808.18 1214.26 L1807.59 1214.26 L1807 1214.26 L1806.42 1214.26 L1805.83 1214.26 L1805.24 1214.26 L1804.66 1214.26 L1804.07 1214.26 L1803.48 1214.26 L1802.9 1214.26 L1802.31 1214.26 L1801.73 1214.26 L1801.14 1214.26 L1800.55 1214.26 L1799.97 1214.26 L1799.38 1214.26 L1798.79 1214.26 L1798.21 1214.26 L1797.62 1214.26 L1797.03 1214.26 L1796.45 1214.26 L1795.86 1214.26 L1795.27 1214.26 L1794.69 1214.26 L1794.1 1214.26 L1793.52 1214.26 L1792.93 1214.26 L1792.34 1214.26 L1791.76 1214.26 L1791.17 1214.26 L1790.58 1214.26 L1790 1214.26 L1789.41 1214.26 L1788.82 1214.26 L1788.24 1214.26 L1787.65 1214.26 L1787.06 1214.26 L1786.48 1214.26 L1785.89 1214.26 L1785.31 1214.26 L1784.72 1214.26 L1784.13 1214.26 L1783.55 1214.26 L1782.96 1214.26 L1782.37 1214.26 L1781.79 1214.26 L1781.2 1214.26 L1780.61 1214.26 L1780.03 1214.26 L1779.44 1214.26 L1778.86 1214.26 L1778.27 1214.26 L1777.68 1214.26 L1777.1 1214.26 L1776.51 1214.26 L1775.92 1214.26 L1775.34 1214.26 L1774.75 1214.26 L1774.16 1214.26 L1773.58 1214.26 L1772.99 1214.26 L1772.4 1214.26 L1771.82 1214.26 L1771.23 1214.26 L1770.65 1214.26 L1770.06 1214.26 L1769.47 1214.26 L1768.89 1214.26 L1768.3 1214.26 L1767.71 1214.26 L1767.13 1214.26 L1766.54 1214.26 L1765.95 1214.26 L1765.37 1214.26 L1764.78 1214.26 L1764.19 1214.26 L1763.61 1214.26 L1763.02 1214.26 L1762.44 1214.26 L1761.85 1214.26 L1761.26 1214.26 L1760.68 1214.26 L1760.09 1214.26 L1759.5 1214.26 L1758.92 1214.26 L1758.33 1214.26 L1757.74 1214.26 L1757.16 1214.26 L1756.57 1214.26 L1755.99 1214.26 L1755.4 1214.26 L1754.81 1214.26 L1754.23 1214.26 L1753.64 1214.26 L1753.05 1214.26 L1752.47 1214.26 L1751.88 1214.26 L1751.29 1214.26 L1750.71 1214.26 L1750.12 1214.26 L1749.53 1214.26 L1748.95 1214.26 L1748.36 1214.26 L1747.78 1214.26 L1747.19 1214.26 L1746.6 1214.26 L1746.02 1214.26 L1745.43 1214.26 L1744.84 1214.26 L1744.26 1214.26 L1743.67 1214.26 L1743.08 1214.26 L1742.5 1214.26 L1741.91 1214.26 L1741.32 1214.26 L1740.74 1214.26 L1740.15 1214.26 L1739.57 1214.26 L1738.98 1214.26 L1738.39 1214.26 L1737.81 1214.26 L1737.22 1214.26 L1736.63 1214.26 L1736.05 1214.26 L1735.46 1214.26 L1734.87 1214.26 L1734.29 1214.26 L1733.7 1214.26 L1733.11 1214.26 L1732.53 1214.26 L1731.94 1214.26 L1731.36 1214.26 L1730.77 1214.26 L1730.18 1214.26 L1729.6 1214.26 L1729.01 1214.26 L1728.42 1214.26 L1727.84 1214.26 L1727.25 1214.26 L1726.66 1214.26 L1726.08 1214.26 L1725.49 1214.26 L1724.91 1214.26 L1724.32 1214.26 L1723.73 1214.26 L1723.15 1214.26 L1722.56 1214.26 L1721.97 1214.26 L1721.39 1214.26 L1720.8 1214.26 L1720.21 1214.26 L1719.63 1214.26 L1719.04 1214.26 L1718.45 1214.26 L1717.87 1214.26 L1717.28 1214.26 L1716.7 1214.26 L1716.11 1214.26 L1715.52 1214.26 L1714.94 1214.26 L1714.35 1214.26 L1713.76 1214.26 L1713.18 1214.26 L1712.59 1214.26 L1712 1214.26 L1711.42 1214.26 L1710.83 1214.26 L1710.24 1214.26 L1709.66 1214.26 L1709.07 1214.26 L1708.49 1214.26 L1707.9 1214.26 L1707.31 1214.26 L1706.73 1214.26 L1706.14 1214.26 L1705.55 1214.26 L1704.97 1214.26 L1704.38 1214.26 L1703.79 1214.26 L1703.21 1214.26 L1702.62 1214.26 L1702.04 1214.26 L1701.45 1214.26 L1700.86 1214.26 L1700.28 1214.26 L1699.69 1214.26 L1699.1 1214.26 L1698.52 1214.26 L1697.93 1214.26 L1697.34 1214.26 L1696.76 1214.26 L1696.17 1214.26 L1695.58 1214.26 L1695 1214.26 L1694.41 1214.26 L1693.83 1214.26 L1693.24 1214.26 L1692.65 1214.26 L1692.07 1214.26 L1691.48 1214.26 L1690.89 1214.26 L1690.31 1214.26 L1689.72 1214.26 L1689.13 1214.26 L1688.55 1214.26 L1687.96 1214.26 L1687.37 1214.26 L1686.79 1214.26 L1686.2 1214.26 L1685.62 1214.26 L1685.03 1214.26 L1684.44 1214.26 L1683.86 1214.26 L1683.27 1214.26 L1682.68 1214.26 L1682.1 1214.26 L1681.51 1214.26 L1680.92 1214.26 L1680.34 1214.26 L1679.75 1214.26 L1679.17 1214.26 L1678.58 1214.26 L1677.99 1214.26 L1677.41 1214.26 L1676.82 1214.26 L1676.23 1214.26 L1675.65 1214.26 L1675.06 1214.26 L1674.47 1214.26 L1673.89 1214.26 L1673.3 1214.26 L1672.71 1214.26 L1672.13 1214.26 L1671.54 1214.26 L1670.96 1214.26 L1670.37 1214.26 L1669.78 1214.26 L1669.2 1214.26 L1668.61 1214.26 L1668.02 1214.26 L1667.44 1214.26 L1666.85 1214.26 L1666.26 1214.26 L1665.68 1214.26 L1665.09 1214.26 L1664.5 1214.26 L1663.92 1214.26 L1663.33 1214.26 L1662.75 1214.26 L1662.16 1214.26 L1661.57 1214.26 L1660.99 1214.26 L1660.4 1214.26 L1659.81 1214.26 L1659.23 1214.26 L1658.64 1214.26 L1658.05 1214.26 L1657.47 1214.26 L1656.88 1214.26 L1656.29 1214.26 L1655.71 1214.26 L1655.12 1214.26 L1654.54 1214.26 L1653.95 1214.26 L1653.36 1214.26 L1652.78 1214.26 L1652.19 1214.26 L1651.6 1214.26 L1651.02 1214.26 L1650.43 1214.26 L1649.84 1214.26 L1649.26 1214.26 L1648.67 1214.26 L1648.09 1214.26 L1647.5 1214.26 L1646.91 1214.26 L1646.33 1214.26 L1645.74 1214.26 L1645.15 1214.26 L1644.57 1214.26 L1643.98 1214.26 L1643.39 1214.26 L1642.81 1214.26 L1642.22 1214.26 L1641.63 1214.26 L1641.05 1214.26 L1640.46 1214.26 L1639.88 1214.26 L1639.29 1214.26 L1638.7 1214.26 L1638.12 1214.26 L1637.53 1214.26 L1636.94 1214.26 L1636.36 1214.26 L1635.77 1214.26 L1635.18 1214.26 L1634.6 1214.26 L1634.01 1214.26 L1633.42 1214.26 L1632.84 1214.26 L1632.25 1214.26 L1631.67 1214.26 L1631.08 1214.26 L1630.49 1214.26 L1629.91 1214.26 L1629.32 1214.26 L1628.73 1214.26 L1628.15 1214.26 L1627.56 1214.26 L1626.97 1214.26 L1626.39 1214.26 L1625.8 1214.26 L1625.22 1214.26 L1624.63 1214.26 L1624.04 1214.26 L1623.46 1214.26 L1622.87 1214.26 L1622.28 1214.26 L1621.7 1214.26 L1621.11 1214.26 L1620.52 1214.26 L1619.94 1214.26 L1619.35 1214.26 L1618.76 1214.26 L1618.18 1214.26 L1617.59 1214.26 L1617.01 1214.26 L1616.42 1214.26 L1615.83 1214.26 L1615.25 1214.26 L1614.66 1214.26 L1614.07 1214.26 L1613.49 1214.26 L1612.9 1214.26 L1612.31 1214.26 L1611.73 1214.26 L1611.14 1214.26 L1610.55 1214.26 L1609.97 1214.26 L1609.38 1214.26 L1608.8 1214.26 L1608.21 1214.26 L1607.62 1214.26 L1607.04 1214.26 L1606.45 1214.26 L1605.86 1214.26 L1605.28 1214.26 L1604.69 1214.26 L1604.1 1214.26 L1603.52 1214.26 L1602.93 1214.26 L1602.34 1214.26 L1601.76 1214.26 L1601.17 1214.26 L1600.59 1214.26 L1600 1214.26 L1599.41 1214.26 L1598.83 1214.26 L1598.24 1214.26 L1597.65 1214.26 L1597.07 1214.26 L1596.48 1214.26 L1595.89 1214.26 L1595.31 1214.26 L1594.72 1214.26 L1594.14 1214.26 L1593.55 1214.26 L1592.96 1214.26 L1592.38 1214.26 L1591.79 1214.26 L1591.2 1214.26 L1590.62 1214.26 L1590.03 1214.26 L1589.44 1214.26 L1588.86 1214.26 L1588.27 1214.26 L1587.68 1214.26 L1587.1 1214.26 L1586.51 1214.26 L1585.93 1214.26 L1585.34 1214.26 L1584.75 1214.26 L1584.17 1214.26 L1583.58 1214.26 L1582.99 1214.26 L1582.41 1214.26 L1581.82 1214.26 L1581.23 1214.26 L1580.65 1214.26 L1580.06 1214.26 L1579.47 1214.26 L1578.89 1214.26 L1578.3 1214.26 L1577.72 1214.26 L1577.13 1214.26 L1576.54 1214.26 L1575.96 1214.26 L1575.37 1214.26 L1574.78 1214.26 L1574.2 1214.26 L1573.61 1214.26 L1573.02 1214.26 L1572.44 1214.26 L1571.85 1214.26 L1571.27 1214.26 L1570.68 1214.26 L1570.09 1214.26 L1569.51 1214.26 L1568.92 1214.26 L1568.33 1214.26 L1567.75 1214.26 L1567.16 1214.26 L1566.57 1214.26 L1565.99 1214.26 L1565.4 1214.26 L1564.81 1214.26 L1564.23 1214.26 L1563.64 1214.26 L1563.06 1214.26 L1562.47 1214.26 L1561.88 1214.26 L1561.3 1214.26 L1560.71 1214.26 L1560.12 1214.26 L1559.54 1214.26 L1558.95 1214.26 L1558.36 1214.26 L1557.78 1214.26 L1557.19 1214.26 L1556.6 1214.26 L1556.02 1214.26 L1555.43 1214.26 L1554.85 1214.26 L1554.26 1214.26 L1553.67 1214.26 L1553.09 1214.26 L1552.5 1214.26 L1551.91 1214.26 L1551.33 1214.26 L1550.74 1214.26 L1550.15 1214.26 L1549.57 1214.26 L1548.98 1214.26 L1548.4 1214.26 L1547.81 1214.26 L1547.22 1214.26 L1546.64 1214.26 L1546.05 1214.26 L1545.46 1214.26 L1544.88 1214.26 L1544.29 1214.26 L1543.7 1214.26 L1543.12 1214.26 L1542.53 1214.26 L1541.94 1214.26 L1541.36 1214.26 L1540.77 1214.26 L1540.19 1214.26 L1539.6 1214.26 L1539.01 1214.26 L1538.43 1214.26 L1537.84 1214.26 L1537.25 1214.26 L1536.67 1214.26 L1536.08 1214.26 L1535.49 1214.26 L1534.91 1214.26 L1534.32 1214.26 L1533.73 1214.26 L1533.15 1214.26 L1532.56 1214.26 L1531.98 1214.26 L1531.39 1214.26 L1530.8 1214.26 L1530.22 1214.26 L1529.63 1214.26 L1529.04 1214.26 L1528.46 1214.26 L1527.87 1214.26 L1527.28 1214.26 L1526.7 1214.26 L1526.11 1214.26 L1525.52 1214.26 L1524.94 1214.26 L1524.35 1214.26 L1523.77 1214.26 L1523.18 1214.26 L1522.59 1214.26 L1522.01 1214.26 L1521.42 1214.26 L1520.83 1214.26 L1520.25 1214.26 L1519.66 1214.26 L1519.07 1214.26 L1518.49 1214.26 L1517.9 1214.26 L1517.32 1214.26 L1516.73 1214.26 L1516.14 1214.26 L1515.56 1214.26 L1514.97 1214.26 L1514.38 1214.26 L1513.8 1214.26 L1513.21 1214.26 L1512.62 1214.26 L1512.04 1214.26 L1511.45 1214.26 L1510.86 1214.26 L1510.28 1214.26 L1509.69 1214.26 L1509.11 1214.26 L1508.52 1214.26 L1507.93 1214.26 L1507.35 1214.26 L1506.76 1214.26 L1506.17 1214.26 L1505.59 1214.26 L1505 1214.26 L1504.41 1214.26 L1503.83 1214.26 L1503.24 1214.26 L1502.65 1214.26 L1502.07 1214.26 L1501.48 1214.26 L1500.9 1214.26 L1500.31 1214.26 L1499.72 1214.26 L1499.14 1214.26 L1498.55 1214.26 L1497.96 1214.26 L1497.38 1214.26 L1496.79 1214.26 L1496.2 1214.26 L1495.62 1214.26 L1495.03 1214.26 L1494.45 1214.26 L1493.86 1214.26 L1493.27 1214.26 L1492.69 1214.26 L1492.1 1214.26 L1491.51 1214.26 L1490.93 1214.26 L1490.34 1214.26 L1489.75 1214.26 L1489.17 1214.26 L1488.58 1214.26 L1487.99 1214.26 L1487.41 1214.26 L1486.82 1214.26 L1486.24 1214.26 L1485.65 1214.26 L1485.06 1214.26 L1484.48 1214.26 L1483.89 1214.26 L1483.3 1214.26 L1482.72 1214.26 L1482.13 1214.26 L1481.54 1214.26 L1480.96 1214.26 L1480.37 1214.26 L1479.78 1214.26 L1479.2 1214.26 L1478.61 1214.26 L1478.03 1214.26 L1477.44 1214.26 L1476.85 1214.26 L1476.27 1214.26 L1475.68 1214.26 L1475.09 1214.26 L1474.51 1214.26 L1473.92 1214.26 L1473.33 1214.26 L1472.75 1214.26 L1472.16 1214.26 L1471.57 1214.26 L1470.99 1214.26 L1470.4 1214.26 L1469.82 1214.26 L1469.23 1214.26 L1468.64 1214.26 L1468.06 1214.26 L1467.47 1214.26 L1466.88 1214.26 L1466.3 1214.26 L1465.71 1214.26 L1465.12 1214.26 L1464.54 1214.26 L1463.95 1214.26 L1463.37 1214.26 L1462.78 1214.26 L1462.19 1214.26 L1461.61 1214.26 L1461.02 1214.26 L1460.43 1214.26 L1459.85 1214.26 L1459.26 1214.26 L1458.67 1214.26 L1458.09 1214.26 L1457.5 1214.26 L1456.91 1214.26 L1456.33 1214.26 L1455.74 1214.26 L1455.16 1214.26 L1454.57 1214.26 L1453.98 1214.26 L1453.4 1214.26 L1452.81 1214.26 L1452.22 1214.26 L1451.64 1214.26 L1451.05 1214.26 L1450.46 1214.26 L1449.88 1214.26 L1449.29 1214.26 L1448.7 1214.26 L1448.12 1214.26 L1447.53 1214.26 L1446.95 1214.26 L1446.36 1214.26 L1445.77 1214.26 L1445.19 1214.26 L1444.6 1214.26 L1444.01 1214.26 L1443.43 1214.26 L1442.84 1214.26 L1442.25 1214.26 L1441.67 1214.26 L1441.08 1214.26 L1440.5 1214.26 L1439.91 1214.26 L1439.32 1214.26 L1438.74 1214.26 L1438.15 1214.26 L1437.56 1214.26 L1436.98 1214.26 L1436.39 1214.26 L1435.8 1214.26 L1435.22 1214.26 L1434.63 1214.26 L1434.04 1214.26 L1433.46 1214.26 L1432.87 1214.26 L1432.29 1214.26 L1431.7 1214.26 L1431.11 1214.26 L1430.53 1214.26 L1429.94 1214.26 L1429.35 1214.26 L1428.77 1214.26 L1428.18 1214.26 L1427.59 1214.26 L1427.01 1214.26 L1426.42 1214.26 L1425.83 1214.26 L1425.25 1214.26 L1424.66 1214.26 L1424.08 1214.26 L1423.49 1214.26 L1422.9 1214.26 L1422.32 1214.26 L1421.73 1214.26 L1421.14 1214.26 L1420.56 1214.26 L1419.97 1214.26 L1419.38 1214.26 L1418.8 1214.26 L1418.21 1214.26 L1417.63 1214.26 L1417.04 1214.26 L1416.45 1214.26 L1415.87 1214.26 L1415.28 1214.26 L1414.69 1214.26 L1414.11 1214.26 L1413.52 1214.26 L1412.93 1214.26 L1412.35 1214.26 L1411.76 1214.26 L1411.17 1214.26 L1410.59 1214.26 L1410 1214.26 L1409.42 1214.26 L1408.83 1214.26 L1408.24 1214.26 L1407.66 1214.26 L1407.07 1214.26 L1406.48 1214.26 L1405.9 1214.26 L1405.31 1214.26 L1404.72 1214.26 L1404.14 1214.26 L1403.55 1214.26 L1402.96 1214.26 L1402.38 1214.26 L1401.79 1214.26 L1401.21 1214.26 L1400.62 1214.26 L1400.03 1214.26 L1399.45 1214.26 L1398.86 1214.26 L1398.27 1214.26 L1397.69 1214.26 L1397.1 1214.26 L1396.51 1214.26 L1395.93 1214.26 L1395.34 1214.26 L1394.75 1214.26 L1394.17 1214.26 L1393.58 1214.26 L1393 1214.26 L1392.41 1214.26 L1391.82 1214.26 L1391.24 1214.26 L1390.65 1214.26 L1390.06 1214.26 L1389.48 1214.26 L1388.89 1214.26 L1388.3 1214.26 L1387.72 1214.26 L1387.13 1214.26 L1386.55 1214.26 L1385.96 1214.26 L1385.37 1214.26 L1384.79 1214.26 L1384.2 1214.26 L1383.61 1214.26 L1383.03 1214.26 L1382.44 1214.26 L1381.85 1214.26 L1381.27 1214.26 L1380.68 1214.26 L1380.09 1214.26 L1379.51 1214.26 L1378.92 1214.26 L1378.34 1214.26 L1377.75 1214.26 L1377.16 1214.26 L1376.58 1214.26 L1375.99 1214.26 L1375.4 1214.26 L1374.82 1214.26 L1374.23 1214.26 L1373.64 1214.26 L1373.06 1214.26 L1372.47 1214.26 L1371.88 1214.26 L1371.3 1214.26 L1370.71 1214.26 L1370.13 1214.26 L1369.54 1214.26 L1368.95 1214.26 L1368.37 1214.26 L1367.78 1214.26 L1367.19 1214.26 L1366.61 1214.26 L1366.02 1214.26 L1365.43 1214.26 L1364.85 1214.26 L1364.26 1214.26 L1363.68 1214.26 L1363.09 1214.26 L1362.5 1214.26 L1361.92 1214.26 L1361.33 1214.26 L1360.74 1214.26 L1360.16 1214.26 L1359.57 1214.26 L1358.98 1214.26 L1358.4 1214.26 L1357.81 1214.26 L1357.22 1214.26 L1356.64 1214.26 L1356.05 1214.26 L1355.47 1214.26 L1354.88 1214.26 L1354.29 1214.26 L1353.71 1214.26 L1353.12 1214.26 L1352.53 1214.26 L1351.95 1214.26 L1351.36 1214.26 L1350.77 1214.26 L1350.19 1214.26 L1349.6 1214.26 L1349.01 1214.26 L1348.43 1214.26 L1347.84 1214.26 L1347.26 1214.26 L1346.67 1214.26 L1346.08 1214.26 L1345.5 1214.26 L1344.91 1214.26 L1344.32 1214.26 L1343.74 1214.26 L1343.15 1214.26 L1342.56 1214.26 L1341.98 1214.26 L1341.39 1214.26 L1340.8 1214.26 L1340.22 1214.26 L1339.63 1214.26 L1339.05 1214.26 L1338.46 1214.26 L1337.87 1214.26 L1337.29 1214.26 L1336.7 1214.26 L1336.11 1214.26 L1335.53 1214.26 L1334.94 1214.26 L1334.35 1214.26 L1333.77 1214.26 L1333.18 1214.26 L1332.6 1214.26 L1332.01 1214.26 L1331.42 1214.26 L1330.84 1214.26 L1330.25 1214.26 L1329.66 1214.26 L1329.08 1214.26 L1328.49 1214.26 L1327.9 1214.26 L1327.32 1214.26 L1326.73 1214.26 L1326.14 1214.26 L1325.56 1214.26 L1324.97 1214.26 L1324.39 1214.26 L1323.8 1214.26 L1323.21 1214.26 L1322.63 1214.26 L1322.04 1214.26 L1321.45 1214.26 L1320.87 1214.26 L1320.28 1214.26 L1319.69 1214.26 L1319.11 1214.26 L1318.52 1214.26 L1317.93 1214.26 L1317.35 1214.26 L1316.76 1214.26 L1316.18 1214.26 L1315.59 1214.26 L1315 1214.26 L1314.42 1214.26 L1313.83 1214.26 L1313.24 1214.26 L1312.66 1214.26 L1312.07 1214.26 L1311.48 1214.26 L1310.9 1214.26 L1310.31 1214.26 L1309.73 1214.26 L1309.14 1214.26 L1308.55 1214.26 L1307.97 1214.26 L1307.38 1214.26 L1306.79 1214.26 L1306.21 1214.26 L1305.62 1214.26 L1305.03 1214.26 L1304.45 1214.26 L1303.86 1214.26 L1303.27 1214.26 L1302.69 1214.26 L1302.1 1214.26 L1301.52 1214.26 L1300.93 1214.26 L1300.34 1214.26 L1299.76 1214.26 L1299.17 1214.26 L1298.58 1214.26 L1298 1214.26 L1297.41 1214.26 L1296.82 1214.26 L1296.24 1214.26 L1295.65 1214.26 L1295.06 1214.26 L1294.48 1214.26 L1293.89 1214.26 L1293.31 1214.26 L1292.72 1214.26 L1292.13 1214.26 L1291.55 1214.26 L1290.96 1214.26 L1290.37 1214.26 L1289.79 1214.26 L1289.2 1214.26 L1288.61 1214.26 L1288.03 1214.26 L1287.44 1214.26 L1286.86 1214.26 L1286.27 1214.26 L1285.68 1214.26 L1285.1 1214.26 L1284.51 1214.26 L1283.92 1214.26 L1283.34 1214.26 L1282.75 1214.26 L1282.16 1214.26 L1281.58 1214.26 L1280.99 1214.26 L1280.4 1214.26 L1279.82 1214.26 L1279.23 1214.26 L1278.65 1214.26 L1278.06 1214.26 L1277.47 1214.26 L1276.89 1214.26 L1276.3 1214.26 L1275.71 1214.26 L1275.13 1214.26 L1274.54 1214.26 L1273.95 1214.26 L1273.37 1214.26 L1272.78 1214.26 L1272.19 1214.26 L1271.61 1214.26 L1271.02 1214.26 L1270.44 1214.26 L1269.85 1214.26 L1269.26 1214.26 L1268.68 1214.26 L1268.09 1214.26 L1267.5 1214.26 L1266.92 1214.26 L1266.33 1214.26 L1265.74 1214.26 L1265.16 1214.26 L1264.57 1214.26 L1263.98 1214.26 L1263.4 1214.26 L1262.81 1214.26 L1262.23 1214.26 L1261.64 1214.26 L1261.05 1214.26 L1260.47 1214.26 L1259.88 1214.26 L1259.29 1214.26 L1258.71 1214.26 L1258.12 1214.26 L1257.53 1214.26 L1256.95 1214.26 L1256.36 1214.26 L1255.78 1214.26 L1255.19 1214.26 L1254.6 1214.26 L1254.02 1214.26 L1253.43 1214.26 L1252.84 1214.26 L1252.26 1214.26 L1251.67 1214.26 L1251.08 1214.26 L1250.5 1214.26 L1249.91 1214.26 L1249.32 1214.26 L1248.74 1214.26 L1248.15 1214.26 L1247.57 1214.26 L1246.98 1214.26 L1246.39 1214.26 L1245.81 1214.26 L1245.22 1214.26 L1244.63 1214.26 L1244.05 1214.26 L1243.46 1214.26 L1242.87 1214.26 L1242.29 1214.26 L1241.7 1214.26 L1241.11 1214.26 L1240.53 1214.26 L1239.94 1214.26 L1239.36 1214.26 L1238.77 1214.26 L1238.18 1214.26 L1237.6 1214.26 L1237.01 1214.26 L1236.42 1214.26 L1235.84 1214.26 L1235.25 1214.26 L1234.66 1214.26 L1234.08 1214.26 L1233.49 1214.26 L1232.91 1214.26 L1232.32 1214.26 L1231.73 1214.26 L1231.15 1214.26 L1230.56 1214.26 L1229.97 1214.26 L1229.39 1214.26 L1228.8 1214.26 L1228.21 1214.26 L1227.63 1214.26 L1227.04 1214.26 L1226.45 1214.26 L1225.87 1214.26 L1225.28 1214.26 L1224.7 1214.26 L1224.11 1214.26 L1223.52 1214.26 L1222.94 1214.26 L1222.35 1214.26 L1221.76 1214.26 L1221.18 1214.26 L1220.59 1214.26 L1220 1214.26 L1219.42 1214.26 L1218.83 1214.26 L1218.24 1214.26 L1217.66 1214.26 L1217.07 1214.26 L1216.49 1214.26 L1215.9 1214.26 L1215.31 1214.26 L1214.73 1214.26 L1214.14 1214.26 L1213.55 1214.26 L1212.97 1214.26 L1212.38 1214.26 L1211.79 1214.26 L1211.21 1214.26 L1210.62 1214.26 L1210.03 1214.26 L1209.45 1214.26 L1208.86 1214.26 L1208.28 1214.26 L1207.69 1214.26 L1207.1 1214.26 L1206.52 1214.26 L1205.93 1214.26 L1205.34 1214.26 L1204.76 1214.26 L1204.17 1214.26 L1203.58 1214.26 L1203 1214.26 L1202.41 1214.26 L1201.83 1214.26 L1201.24 1214.26 L1200.65 1214.26 L1200.07 1214.26 L1199.48 1214.26 L1198.89 1214.26 L1198.31 1214.26 L1197.72 1214.26 L1197.13 1214.26 L1196.55 1214.26 L1195.96 1214.26 L1195.37 1214.26 L1194.79 1214.26 L1194.2 1214.26 L1193.62 1214.26 L1193.03 1214.26 L1192.44 1214.26 L1191.86 1214.26 L1191.27 1214.26 L1190.68 1214.26 L1190.1 1214.26 L1189.51 1214.26 L1188.92 1214.26 L1188.34 1214.26 L1187.75 1214.26 L1187.16 1214.26 L1186.58 1214.26 L1185.99 1214.26 L1185.41 1214.26 L1184.82 1214.26 L1184.23 1214.26 L1183.65 1214.26 L1183.06 1214.26 L1182.47 1214.26 L1181.89 1214.26 L1181.3 1214.26 L1180.71 1214.26 L1180.13 1214.26 L1179.54 1214.26 L1178.96 1214.26 L1178.37 1214.26 L1177.78 1214.26 L1177.2 1214.26 L1176.61 1214.26 L1176.02 1214.26 L1175.44 1214.26 L1174.85 1214.26 L1174.26 1214.26 L1173.68 1214.26 L1173.09 1214.26 L1172.5 1214.26 L1171.92 1214.26 L1171.33 1214.26 L1170.75 1214.26 L1170.16 1214.26 L1169.57 1214.26 L1168.99 1214.26 L1168.4 1214.26 L1167.81 1214.26 L1167.23 1214.26 L1166.64 1214.26 L1166.05 1214.26 L1165.47 1214.26 L1164.88 1214.26 L1164.29 1214.26 L1163.71 1214.26 L1163.12 1214.26 L1162.54 1214.26 L1161.95 1214.26 L1161.36 1214.26 L1160.78 1214.26 L1160.19 1214.26 L1159.6 1214.26 L1159.02 1214.26 L1158.43 1214.26 L1157.84 1214.26 L1157.26 1214.26 L1156.67 1214.26 L1156.09 1214.26 L1155.5 1214.26 L1154.91 1214.26 L1154.33 1214.26 L1153.74 1214.26 L1153.15 1214.26 L1152.57 1214.26 L1151.98 1214.26 L1151.39 1214.26 L1150.81 1214.26 L1150.22 1214.26 L1149.63 1214.26 L1149.05 1214.26 L1148.46 1214.26 L1147.88 1214.26 L1147.29 1214.26 L1146.7 1214.26 L1146.12 1214.26 L1145.53 1214.26 L1144.94 1214.26 L1144.36 1214.26 L1143.77 1214.26 L1143.18 1214.26 L1142.6 1214.26 L1142.01 1214.26 L1141.42 1214.26 L1140.84 1214.26 L1140.25 1214.26 L1139.67 1214.26 L1139.08 1214.26 L1138.49 1214.26 L1137.91 1214.26 L1137.32 1214.26 L1136.73 1214.26 L1136.15 1214.26 L1135.56 1214.26 L1134.97 1214.26 L1134.39 1214.26 L1133.8 1214.26 L1133.21 1214.26 L1132.63 1214.26 L1132.04 1214.26 L1131.46 1214.26 L1130.87 1214.26 L1130.28 1214.26 L1129.7 1214.26 L1129.11 1214.26 L1128.52 1214.26 L1127.94 1214.26 L1127.35 1214.26 L1126.76 1214.26 L1126.18 1214.26 L1125.59 1214.26 L1125.01 1214.26 L1124.42 1214.26 L1123.83 1214.26 L1123.25 1214.26 L1122.66 1214.26 L1122.07 1214.26 L1121.49 1214.26 L1120.9 1214.26 L1120.31 1214.26 L1119.73 1214.26 L1119.14 1214.26 L1118.55 1214.26 L1117.97 1214.26 L1117.38 1214.26 L1116.8 1214.26 L1116.21 1214.26 L1115.62 1214.26 L1115.04 1214.26 L1114.45 1214.26 L1113.86 1214.26 L1113.28 1214.26 L1112.69 1214.26 L1112.1 1214.26 L1111.52 1214.26 L1110.93 1214.26 L1110.34 1214.26 L1109.76 1214.26 L1109.17 1214.26 L1108.59 1214.26 L1108 1214.26 L1107.41 1214.26 L1106.83 1214.26 L1106.24 1214.26 L1105.65 1214.26 L1105.07 1214.26 L1104.48 1214.26 L1103.89 1214.26 L1103.31 1214.26 L1102.72 1214.26 L1102.14 1214.26 L1101.55 1214.26 L1100.96 1214.26 L1100.38 1214.26 L1099.79 1214.26 L1099.2 1214.26 L1098.62 1214.26 L1098.03 1214.26 L1097.44 1214.26 L1096.86 1214.26 L1096.27 1214.26 L1095.68 1214.26 L1095.1 1214.26 L1094.51 1214.26 L1093.93 1214.26 L1093.34 1214.26 L1092.75 1214.26 L1092.17 1214.26 L1091.58 1214.26 L1090.99 1214.26 L1090.41 1214.26 L1089.82 1214.26 L1089.23 1214.26 L1088.65 1214.26 L1088.06 1214.26 L1087.47 1214.26 L1086.89 1214.26 L1086.3 1214.26 L1085.72 1214.26 L1085.13 1214.26 L1084.54 1214.26 L1083.96 1214.26 L1083.37 1214.26 L1082.78 1214.26 L1082.2 1214.26 L1081.61 1214.26 L1081.02 1214.26 L1080.44 1214.26 L1079.85 1214.26 L1079.26 1214.26 L1078.68 1214.26 L1078.09 1214.26 L1077.51 1214.26 L1076.92 1214.26 L1076.33 1214.26 L1075.75 1214.26 L1075.16 1214.26 L1074.57 1214.26 L1073.99 1214.26 L1073.4 1214.26 L1072.81 1214.26 L1072.23 1214.26 L1071.64 1214.26 L1071.06 1214.26 L1070.47 1214.26 L1069.88 1214.26 L1069.3 1214.26 L1068.71 1214.26 L1068.12 1214.26 L1067.54 1214.26 L1066.95 1214.26 L1066.36 1214.26 L1065.78 1214.26 L1065.19 1214.26 L1064.6 1214.26 L1064.02 1214.26 L1063.43 1214.26 L1062.85 1214.26 L1062.26 1214.26 L1061.67 1214.26 L1061.09 1214.26 L1060.5 1214.26 L1059.91 1214.26 L1059.33 1214.26 L1058.74 1214.26 L1058.15 1214.26 L1057.57 1214.26 L1056.98 1214.26 L1056.39 1214.26 L1055.81 1214.26 L1055.22 1214.26 L1054.64 1214.26 L1054.05 1214.26 L1053.46 1214.26 L1052.88 1214.26 L1052.29 1214.26 L1051.7 1214.26 L1051.12 1214.26 L1050.53 1214.26 L1049.94 1214.26 L1049.36 1214.26 L1048.77 1214.26 L1048.19 1214.26 L1047.6 1214.26 L1047.01 1214.26 L1046.43 1214.26 L1045.84 1214.26 L1045.25 1214.26 L1044.67 1214.26 L1044.08 1214.26 L1043.49 1214.26 L1042.91 1214.26 L1042.32 1214.26 L1041.73 1214.26 L1041.15 1214.26 L1040.56 1214.26 L1039.98 1214.26 L1039.39 1214.26 L1038.8 1214.26 L1038.22 1214.26 L1037.63 1214.26 L1037.04 1214.26 L1036.46 1214.26 L1035.87 1214.26 L1035.28 1214.26 L1034.7 1214.26 L1034.11 1214.26 L1033.52 1214.26 L1032.94 1214.26 L1032.35 1214.26 L1031.77 1214.26 L1031.18 1214.26 L1030.59 1214.26 L1030.01 1214.26 L1029.42 1214.26 L1028.83 1214.26 L1028.25 1214.26 L1027.66 1214.26 L1027.07 1214.26 L1026.49 1214.26 L1025.9 1214.26 L1025.32 1214.26 L1024.73 1214.26 L1024.14 1214.26 L1023.56 1214.26 L1022.97 1214.26 L1022.38 1214.26 L1021.8 1214.26 L1021.21 1214.26 L1020.62 1214.26 L1020.04 1214.26 L1019.45 1214.26 L1018.86 1214.26 L1018.28 1214.26 L1017.69 1214.26 L1017.11 1214.26 L1016.52 1214.26 L1015.93 1214.26 L1015.35 1214.26 L1014.76 1214.26 L1014.17 1214.26 L1013.59 1214.26 L1013 1214.26 L1012.41 1214.26 L1011.83 1214.26 L1011.24 1214.26 L1010.65 1214.26 L1010.07 1214.26 L1009.48 1214.26 L1008.9 1214.26 L1008.31 1214.26 L1007.72 1214.26 L1007.14 1214.26 L1006.55 1214.26 L1005.96 1214.26 L1005.38 1214.26 L1004.79 1214.26 L1004.2 1214.26 L1003.62 1214.26 L1003.03 1214.26 L1002.44 1214.26 L1001.86 1214.26 L1001.27 1214.26 L1000.69 1214.26 L1000.1 1214.26 L999.513 1214.26 L998.926 1214.26 L998.34 1214.26 L997.754 1214.26 L997.167 1214.26 L996.581 1214.26 L995.994 1214.26 L995.408 1214.26 L994.822 1214.26 L994.235 1214.26 L993.649 1214.26 L993.062 1214.26 L992.476 1214.26 L991.889 1214.26 L991.303 1214.26 L990.717 1214.26 L990.13 1214.26 L989.544 1214.26 L988.957 1214.26 L988.371 1214.26 L987.785 1214.26 L987.198 1214.26 L986.612 1214.26 L986.025 1214.26  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1214.37 986.612,1214.37 987.198,1214.37 987.785,1214.37 988.371,1214.37 988.957,1214.37 989.544,1214.37 990.13,1214.37 990.717,1214.37 991.303,1214.37 991.889,1214.37 992.476,1214.37 993.062,1214.37 993.649,1214.37 994.235,1214.37 994.822,1214.37 995.408,1214.37 995.994,1214.37 996.581,1214.37 997.167,1214.37 997.754,1214.37 998.34,1214.37 998.926,1214.37 999.513,1214.37 1000.1,1214.37 1000.69,1214.37 1001.27,1214.37 1001.86,1214.37 1002.44,1214.37 1003.03,1214.37 1003.62,1214.37 1004.2,1214.37 1004.79,1214.37 1005.38,1214.37 1005.96,1214.37 1006.55,1214.37 1007.14,1214.37 1007.72,1214.37 1008.31,1214.37 1008.9,1214.37 1009.48,1214.37 1010.07,1214.37 1010.65,1214.37 1011.24,1214.37 1011.83,1214.37 1012.41,1214.37 1013,1214.37 1013.59,1214.37 1014.17,1214.37 1014.76,1214.37 1015.35,1214.37 1015.93,1214.37 1016.52,1214.37 1017.11,1214.37 1017.69,1214.37 1018.28,1214.37 1018.86,1214.37 1019.45,1214.37 1020.04,1214.37 1020.62,1214.37 1021.21,1214.37 1021.8,1214.37 1022.38,1214.37 1022.97,1214.37 1023.56,1214.37 1024.14,1214.37 1024.73,1214.37 1025.32,1214.37 1025.9,1214.37 1026.49,1214.37 1027.07,1214.37 1027.66,1214.37 1028.25,1214.37 1028.83,1214.37 1029.42,1214.37 1030.01,1214.37 1030.59,1214.37 1031.18,1214.37 1031.77,1214.37 1032.35,1214.37 1032.94,1214.37 1033.52,1214.37 1034.11,1214.37 1034.7,1214.37 1035.28,1214.37 1035.87,1214.37 1036.46,1214.37 1037.04,1214.37 1037.63,1214.37 1038.22,1214.37 1038.8,1214.37 1039.39,1214.37 1039.98,1214.37 1040.56,1214.37 1041.15,1214.37 1041.73,1214.37 1042.32,1214.37 1042.91,1214.37 1043.49,1214.37 1044.08,1214.37 1044.67,1214.37 1045.25,1214.37 1045.84,1214.37 1046.43,1214.37 1047.01,1214.37 1047.6,1214.37 1048.19,1214.37 1048.77,1214.37 1049.36,1214.37 1049.94,1214.37 1050.53,1214.37 1051.12,1214.37 1051.7,1214.37 1052.29,1214.37 1052.88,1214.37 1053.46,1214.37 1054.05,1214.37 1054.64,1214.37 1055.22,1214.37 1055.81,1214.37 1056.39,1214.37 1056.98,1214.37 1057.57,1214.37 1058.15,1214.37 1058.74,1214.37 1059.33,1214.37 1059.91,1214.37 1060.5,1214.37 1061.09,1214.37 1061.67,1214.37 1062.26,1214.37 1062.85,1214.37 1063.43,1214.37 1064.02,1214.37 1064.6,1214.37 1065.19,1214.37 1065.78,1214.37 1066.36,1214.37 1066.95,1214.37 1067.54,1214.37 1068.12,1214.37 1068.71,1214.37 1069.3,1214.37 1069.88,1214.37 1070.47,1214.37 1071.06,1214.37 1071.64,1214.37 1072.23,1214.37 1072.81,1214.37 1073.4,1214.37 1073.99,1214.37 1074.57,1214.37 1075.16,1214.37 1075.75,1214.37 1076.33,1214.37 1076.92,1214.37 1077.51,1214.37 1078.09,1214.37 1078.68,1214.37 1079.26,1214.37 1079.85,1214.37 1080.44,1214.37 1081.02,1214.37 1081.61,1214.37 1082.2,1214.37 1082.78,1214.37 1083.37,1214.37 1083.96,1214.37 1084.54,1214.37 1085.13,1214.37 1085.72,1214.37 1086.3,1214.37 1086.89,1214.37 1087.47,1214.37 1088.06,1214.37 1088.65,1214.37 1089.23,1214.37 1089.82,1214.37 1090.41,1214.37 1090.99,1214.37 1091.58,1214.37 1092.17,1214.37 1092.75,1214.37 1093.34,1214.37 1093.93,1214.37 1094.51,1214.37 1095.1,1214.37 1095.68,1214.37 1096.27,1214.37 1096.86,1214.37 1097.44,1214.37 1098.03,1214.37 1098.62,1214.37 1099.2,1214.37 1099.79,1214.37 1100.38,1214.37 1100.96,1214.37 1101.55,1214.37 1102.14,1214.37 1102.72,1214.37 1103.31,1214.37 1103.89,1214.37 1104.48,1214.37 1105.07,1214.37 1105.65,1214.37 1106.24,1214.37 1106.83,1214.37 1107.41,1214.37 1108,1214.37 1108.59,1214.37 1109.17,1214.37 1109.76,1214.37 1110.34,1214.37 1110.93,1214.37 1111.52,1214.37 1112.1,1214.37 1112.69,1214.37 1113.28,1214.37 1113.86,1214.37 1114.45,1214.37 1115.04,1214.37 1115.62,1214.37 1116.21,1214.37 1116.8,1214.37 1117.38,1214.37 1117.97,1214.37 1118.55,1214.37 1119.14,1214.37 1119.73,1214.37 1120.31,1214.37 1120.9,1214.37 1121.49,1214.37 1122.07,1214.37 1122.66,1214.37 1123.25,1214.37 1123.83,1214.37 1124.42,1214.37 1125.01,1214.37 1125.59,1214.37 1126.18,1214.37 1126.76,1214.37 1127.35,1214.37 1127.94,1214.37 1128.52,1214.37 1129.11,1214.37 1129.7,1214.37 1130.28,1214.37 1130.87,1214.37 1131.46,1214.37 1132.04,1214.37 1132.63,1214.37 1133.21,1214.37 1133.8,1214.37 1134.39,1214.37 1134.97,1214.37 1135.56,1214.37 1136.15,1214.37 1136.73,1214.37 1137.32,1214.37 1137.91,1214.37 1138.49,1214.37 1139.08,1214.37 1139.67,1214.37 1140.25,1214.37 1140.84,1214.37 1141.42,1214.37 1142.01,1214.37 1142.6,1214.37 1143.18,1214.37 1143.77,1214.37 1144.36,1214.37 1144.94,1214.37 1145.53,1214.37 1146.12,1214.37 1146.7,1214.37 1147.29,1214.37 1147.88,1214.37 1148.46,1214.37 1149.05,1214.37 1149.63,1214.37 1150.22,1214.37 1150.81,1214.37 1151.39,1214.37 1151.98,1214.37 1152.57,1214.37 1153.15,1214.37 1153.74,1214.37 1154.33,1214.37 1154.91,1214.37 1155.5,1214.37 1156.09,1214.37 1156.67,1214.37 1157.26,1214.37 1157.84,1214.37 1158.43,1214.37 1159.02,1214.37 1159.6,1214.37 1160.19,1214.37 1160.78,1214.37 1161.36,1214.37 1161.95,1214.37 1162.54,1214.37 1163.12,1214.37 1163.71,1214.37 1164.29,1214.37 1164.88,1214.37 1165.47,1214.37 1166.05,1214.37 1166.64,1214.37 1167.23,1214.37 1167.81,1214.37 1168.4,1214.37 1168.99,1214.37 1169.57,1214.37 1170.16,1214.37 1170.75,1214.37 1171.33,1214.37 1171.92,1214.37 1172.5,1214.37 1173.09,1214.37 1173.68,1214.37 1174.26,1214.37 1174.85,1214.37 1175.44,1214.37 1176.02,1214.37 1176.61,1214.37 1177.2,1214.37 1177.78,1214.37 1178.37,1214.37 1178.96,1214.37 1179.54,1214.37 1180.13,1214.37 1180.71,1214.37 1181.3,1214.37 1181.89,1214.37 1182.47,1214.37 1183.06,1214.37 1183.65,1214.37 1184.23,1214.37 1184.82,1214.37 1185.41,1214.37 1185.99,1214.37 1186.58,1214.37 1187.16,1214.37 1187.75,1214.37 1188.34,1214.37 1188.92,1214.37 1189.51,1214.37 1190.1,1214.37 1190.68,1214.37 1191.27,1214.37 1191.86,1214.37 1192.44,1214.37 1193.03,1214.37 1193.62,1214.37 1194.2,1214.37 1194.79,1214.37 1195.37,1214.37 1195.96,1214.37 1196.55,1214.37 1197.13,1214.37 1197.72,1214.37 1198.31,1214.37 1198.89,1214.37 1199.48,1214.37 1200.07,1214.37 1200.65,1214.37 1201.24,1214.37 1201.83,1214.37 1202.41,1214.37 1203,1214.37 1203.58,1214.37 1204.17,1214.37 1204.76,1214.37 1205.34,1214.37 1205.93,1214.37 1206.52,1214.37 1207.1,1214.37 1207.69,1214.37 1208.28,1214.37 1208.86,1214.37 1209.45,1214.37 1210.03,1214.37 1210.62,1214.37 1211.21,1214.37 1211.79,1214.37 1212.38,1214.37 1212.97,1214.37 1213.55,1214.37 1214.14,1214.37 1214.73,1214.37 1215.31,1214.37 1215.9,1214.37 1216.49,1214.37 1217.07,1214.37 1217.66,1214.37 1218.24,1214.37 1218.83,1214.37 1219.42,1214.37 1220,1214.37 1220.59,1214.37 1221.18,1214.37 1221.76,1214.37 1222.35,1214.37 1222.94,1214.37 1223.52,1214.37 1224.11,1214.37 1224.7,1214.37 1225.28,1214.37 1225.87,1214.37 1226.45,1214.37 1227.04,1214.37 1227.63,1214.37 1228.21,1214.37 1228.8,1214.37 1229.39,1214.37 1229.97,1214.37 1230.56,1214.37 1231.15,1214.37 1231.73,1214.37 1232.32,1214.37 1232.91,1214.37 1233.49,1214.37 1234.08,1214.37 1234.66,1214.37 1235.25,1214.37 1235.84,1214.37 1236.42,1214.37 1237.01,1214.37 1237.6,1214.37 1238.18,1214.37 1238.77,1214.37 1239.36,1214.37 1239.94,1214.37 1240.53,1214.37 1241.11,1214.37 1241.7,1214.37 1242.29,1214.37 1242.87,1214.37 1243.46,1214.37 1244.05,1214.37 1244.63,1214.37 1245.22,1214.37 1245.81,1214.37 1246.39,1214.37 1246.98,1214.37 1247.57,1214.37 1248.15,1214.37 1248.74,1214.37 1249.32,1214.37 1249.91,1214.37 1250.5,1214.37 1251.08,1214.37 1251.67,1214.37 1252.26,1214.37 1252.84,1214.37 1253.43,1214.37 1254.02,1214.37 1254.6,1214.37 1255.19,1214.37 1255.78,1214.37 1256.36,1214.37 1256.95,1214.37 1257.53,1214.37 1258.12,1214.37 1258.71,1214.37 1259.29,1214.37 1259.88,1214.37 1260.47,1214.37 1261.05,1214.37 1261.64,1214.37 1262.23,1214.37 1262.81,1214.37 1263.4,1214.37 1263.98,1214.37 1264.57,1214.37 1265.16,1214.37 1265.74,1214.37 1266.33,1214.37 1266.92,1214.37 1267.5,1214.37 1268.09,1214.37 1268.68,1214.37 1269.26,1214.37 1269.85,1214.37 1270.44,1214.37 1271.02,1214.37 1271.61,1214.37 1272.19,1214.37 1272.78,1214.37 1273.37,1214.37 1273.95,1214.37 1274.54,1214.37 1275.13,1214.37 1275.71,1214.37 1276.3,1214.37 1276.89,1214.37 1277.47,1214.37 1278.06,1214.37 1278.65,1214.37 1279.23,1214.37 1279.82,1214.37 1280.4,1214.37 1280.99,1214.37 1281.58,1214.37 1282.16,1214.37 1282.75,1214.37 1283.34,1214.37 1283.92,1214.37 1284.51,1214.37 1285.1,1214.37 1285.68,1214.37 1286.27,1214.37 1286.86,1214.37 1287.44,1214.37 1288.03,1214.37 1288.61,1214.37 1289.2,1214.37 1289.79,1214.37 1290.37,1214.37 1290.96,1214.37 1291.55,1214.37 1292.13,1214.37 1292.72,1214.37 1293.31,1214.37 1293.89,1214.37 1294.48,1214.37 1295.06,1214.37 1295.65,1214.37 1296.24,1214.37 1296.82,1214.37 1297.41,1214.37 1298,1214.37 1298.58,1214.37 1299.17,1214.37 1299.76,1214.37 1300.34,1214.37 1300.93,1214.37 1301.52,1214.37 1302.1,1214.37 1302.69,1214.37 1303.27,1214.37 1303.86,1214.37 1304.45,1214.37 1305.03,1214.37 1305.62,1214.37 1306.21,1214.37 1306.79,1214.37 1307.38,1214.37 1307.97,1214.37 1308.55,1214.37 1309.14,1214.37 1309.73,1214.37 1310.31,1214.37 1310.9,1214.37 1311.48,1214.37 1312.07,1214.37 1312.66,1214.37 1313.24,1214.37 1313.83,1214.37 1314.42,1214.37 1315,1214.37 1315.59,1214.37 1316.18,1214.37 1316.76,1214.37 1317.35,1214.37 1317.93,1214.37 1318.52,1214.37 1319.11,1214.37 1319.69,1214.37 1320.28,1214.37 1320.87,1214.37 1321.45,1214.37 1322.04,1214.37 1322.63,1214.37 1323.21,1214.37 1323.8,1214.37 1324.39,1214.37 1324.97,1214.37 1325.56,1214.37 1326.14,1214.37 1326.73,1214.37 1327.32,1214.37 1327.9,1214.37 1328.49,1214.37 1329.08,1214.37 1329.66,1214.37 1330.25,1214.37 1330.84,1214.37 1331.42,1214.37 1332.01,1214.37 1332.6,1214.37 1333.18,1214.37 1333.77,1214.37 1334.35,1214.37 1334.94,1214.37 1335.53,1214.37 1336.11,1214.37 1336.7,1214.37 1337.29,1214.37 1337.87,1214.37 1338.46,1214.37 1339.05,1214.37 1339.63,1214.37 1340.22,1214.37 1340.8,1214.37 1341.39,1214.37 1341.98,1214.37 1342.56,1214.37 1343.15,1214.37 1343.74,1214.37 1344.32,1214.37 1344.91,1214.37 1345.5,1214.37 1346.08,1214.37 1346.67,1214.37 1347.26,1214.37 1347.84,1214.37 1348.43,1214.37 1349.01,1214.37 1349.6,1214.37 1350.19,1214.37 1350.77,1214.37 1351.36,1214.37 1351.95,1214.37 1352.53,1214.37 1353.12,1214.37 1353.71,1214.37 1354.29,1214.37 1354.88,1214.37 1355.47,1214.37 1356.05,1214.37 1356.64,1214.37 1357.22,1214.37 1357.81,1214.37 1358.4,1214.37 1358.98,1214.37 1359.57,1214.37 1360.16,1214.37 1360.74,1214.37 1361.33,1214.37 1361.92,1214.37 1362.5,1214.37 1363.09,1214.37 1363.68,1214.37 1364.26,1214.37 1364.85,1214.37 1365.43,1214.37 1366.02,1214.37 1366.61,1214.37 1367.19,1214.37 1367.78,1214.37 1368.37,1214.37 1368.95,1214.37 1369.54,1214.37 1370.13,1214.37 1370.71,1214.37 1371.3,1214.37 1371.88,1214.37 1372.47,1214.37 1373.06,1214.37 1373.64,1214.37 1374.23,1214.37 1374.82,1214.37 1375.4,1214.37 1375.99,1214.37 1376.58,1214.37 1377.16,1214.37 1377.75,1214.37 1378.34,1214.37 1378.92,1214.37 1379.51,1214.37 1380.09,1214.37 1380.68,1214.37 1381.27,1214.37 1381.85,1214.37 1382.44,1214.37 1383.03,1214.37 1383.61,1214.37 1384.2,1214.37 1384.79,1214.37 1385.37,1214.37 1385.96,1214.37 1386.55,1214.37 1387.13,1214.37 1387.72,1214.37 1388.3,1214.37 1388.89,1214.37 1389.48,1214.37 1390.06,1214.37 1390.65,1214.37 1391.24,1214.37 1391.82,1214.37 1392.41,1214.37 1393,1214.37 1393.58,1214.37 1394.17,1214.37 1394.75,1214.37 1395.34,1214.37 1395.93,1214.37 1396.51,1214.37 1397.1,1214.37 1397.69,1214.37 1398.27,1214.37 1398.86,1214.37 1399.45,1214.37 1400.03,1214.37 1400.62,1214.37 1401.21,1214.37 1401.79,1214.37 1402.38,1214.37 1402.96,1214.37 1403.55,1214.37 1404.14,1214.37 1404.72,1214.37 1405.31,1214.37 1405.9,1214.37 1406.48,1214.37 1407.07,1214.37 1407.66,1214.37 1408.24,1214.37 1408.83,1214.37 1409.42,1214.37 1410,1214.37 1410.59,1214.37 1411.17,1214.37 1411.76,1214.37 1412.35,1214.37 1412.93,1214.37 1413.52,1214.37 1414.11,1214.37 1414.69,1214.37 1415.28,1214.37 1415.87,1214.37 1416.45,1214.37 1417.04,1214.37 1417.63,1214.37 1418.21,1214.37 1418.8,1214.37 1419.38,1214.37 1419.97,1214.37 1420.56,1214.37 1421.14,1214.37 1421.73,1214.37 1422.32,1214.37 1422.9,1214.37 1423.49,1214.37 1424.08,1214.37 1424.66,1214.37 1425.25,1214.37 1425.83,1214.37 1426.42,1214.37 1427.01,1214.37 1427.59,1214.37 1428.18,1214.37 1428.77,1214.37 1429.35,1214.37 1429.94,1214.37 1430.53,1214.37 1431.11,1214.37 1431.7,1214.37 1432.29,1214.37 1432.87,1214.37 1433.46,1214.37 1434.04,1214.37 1434.63,1214.37 1435.22,1214.37 1435.8,1214.37 1436.39,1214.37 1436.98,1214.37 1437.56,1214.37 1438.15,1214.37 1438.74,1214.37 1439.32,1214.37 1439.91,1214.37 1440.5,1214.37 1441.08,1214.37 1441.67,1214.37 1442.25,1214.37 1442.84,1214.37 1443.43,1214.37 1444.01,1214.37 1444.6,1214.37 1445.19,1214.37 1445.77,1214.37 1446.36,1214.37 1446.95,1214.37 1447.53,1214.37 1448.12,1214.37 1448.7,1214.37 1449.29,1214.37 1449.88,1214.37 1450.46,1214.37 1451.05,1214.37 1451.64,1214.37 1452.22,1214.37 1452.81,1214.37 1453.4,1214.37 1453.98,1214.37 1454.57,1214.37 1455.16,1214.37 1455.74,1214.37 1456.33,1214.37 1456.91,1214.37 1457.5,1214.37 1458.09,1214.37 1458.67,1214.37 1459.26,1214.37 1459.85,1214.37 1460.43,1214.37 1461.02,1214.37 1461.61,1214.37 1462.19,1214.37 1462.78,1214.37 1463.37,1214.37 1463.95,1214.37 1464.54,1214.37 1465.12,1214.37 1465.71,1214.37 1466.3,1214.37 1466.88,1214.37 1467.47,1214.37 1468.06,1214.37 1468.64,1214.37 1469.23,1214.37 1469.82,1214.37 1470.4,1214.37 1470.99,1214.37 1471.57,1214.37 1472.16,1214.37 1472.75,1214.37 1473.33,1214.37 1473.92,1214.37 1474.51,1214.37 1475.09,1214.37 1475.68,1214.37 1476.27,1214.37 1476.85,1214.37 1477.44,1214.37 1478.03,1214.37 1478.61,1214.37 1479.2,1214.37 1479.78,1214.37 1480.37,1214.37 1480.96,1214.37 1481.54,1214.37 1482.13,1214.37 1482.72,1214.37 1483.3,1214.37 1483.89,1214.37 1484.48,1214.37 1485.06,1214.37 1485.65,1214.37 1486.24,1214.37 1486.82,1214.37 1487.41,1214.37 1487.99,1214.37 1488.58,1214.37 1489.17,1214.37 1489.75,1214.37 1490.34,1214.37 1490.93,1214.37 1491.51,1214.37 1492.1,1214.37 1492.69,1214.37 1493.27,1214.37 1493.86,1214.37 1494.45,1214.37 1495.03,1214.37 1495.62,1214.37 1496.2,1214.37 1496.79,1214.37 1497.38,1214.37 1497.96,1214.37 1498.55,1214.37 1499.14,1214.37 1499.72,1214.37 1500.31,1214.37 1500.9,1214.37 1501.48,1214.37 1502.07,1214.37 1502.65,1214.37 1503.24,1214.37 1503.83,1214.37 1504.41,1214.37 1505,1214.37 1505.59,1214.37 1506.17,1214.37 1506.76,1214.37 1507.35,1214.37 1507.93,1214.37 1508.52,1214.37 1509.11,1214.37 1509.69,1214.37 1510.28,1214.37 1510.86,1214.37 1511.45,1214.37 1512.04,1214.37 1512.62,1214.37 1513.21,1214.37 1513.8,1214.37 1514.38,1214.37 1514.97,1214.37 1515.56,1214.37 1516.14,1214.37 1516.73,1214.37 1517.32,1214.37 1517.9,1214.37 1518.49,1214.37 1519.07,1214.37 1519.66,1214.37 1520.25,1214.37 1520.83,1214.37 1521.42,1214.37 1522.01,1214.37 1522.59,1214.37 1523.18,1214.37 1523.77,1214.37 1524.35,1214.37 1524.94,1214.37 1525.52,1214.37 1526.11,1214.37 1526.7,1214.37 1527.28,1214.37 1527.87,1214.37 1528.46,1214.37 1529.04,1214.37 1529.63,1214.37 1530.22,1214.37 1530.8,1214.37 1531.39,1214.37 1531.98,1214.37 1532.56,1214.37 1533.15,1214.37 1533.73,1214.37 1534.32,1214.37 1534.91,1214.37 1535.49,1214.37 1536.08,1214.37 1536.67,1214.37 1537.25,1214.37 1537.84,1214.37 1538.43,1214.37 1539.01,1214.37 1539.6,1214.37 1540.19,1214.37 1540.77,1214.37 1541.36,1214.37 1541.94,1214.37 1542.53,1214.37 1543.12,1214.37 1543.7,1214.37 1544.29,1214.37 1544.88,1214.37 1545.46,1214.37 1546.05,1214.37 1546.64,1214.37 1547.22,1214.37 1547.81,1214.37 1548.4,1214.37 1548.98,1214.37 1549.57,1214.37 1550.15,1214.37 1550.74,1214.37 1551.33,1214.37 1551.91,1214.37 1552.5,1214.37 1553.09,1214.37 1553.67,1214.37 1554.26,1214.37 1554.85,1214.37 1555.43,1214.37 1556.02,1214.37 1556.6,1214.37 1557.19,1214.37 1557.78,1214.37 1558.36,1214.37 1558.95,1214.37 1559.54,1214.37 1560.12,1214.37 1560.71,1214.37 1561.3,1214.37 1561.88,1214.37 1562.47,1214.37 1563.06,1214.37 1563.64,1214.37 1564.23,1214.37 1564.81,1214.37 1565.4,1214.37 1565.99,1214.37 1566.57,1214.37 1567.16,1214.37 1567.75,1214.37 1568.33,1214.37 1568.92,1214.37 1569.51,1214.37 1570.09,1214.37 1570.68,1214.37 1571.27,1214.37 1571.85,1214.37 1572.44,1214.37 1573.02,1214.37 1573.61,1214.37 1574.2,1214.37 1574.78,1214.37 1575.37,1214.37 1575.96,1214.37 1576.54,1214.37 1577.13,1214.37 1577.72,1214.37 1578.3,1214.37 1578.89,1214.37 1579.47,1214.37 1580.06,1214.37 1580.65,1214.37 1581.23,1214.37 1581.82,1214.37 1582.41,1214.37 1582.99,1214.37 1583.58,1214.37 1584.17,1214.37 1584.75,1214.37 1585.34,1214.37 1585.93,1214.37 1586.51,1214.37 1587.1,1214.37 1587.68,1214.37 1588.27,1214.37 1588.86,1214.37 1589.44,1214.37 1590.03,1214.37 1590.62,1214.37 1591.2,1214.37 1591.79,1214.37 1592.38,1214.37 1592.96,1214.37 1593.55,1214.37 1594.14,1214.37 1594.72,1214.37 1595.31,1214.37 1595.89,1214.37 1596.48,1214.37 1597.07,1214.37 1597.65,1214.37 1598.24,1214.37 1598.83,1214.37 1599.41,1214.37 1600,1214.37 1600.59,1214.37 1601.17,1214.37 1601.76,1214.37 1602.34,1214.37 1602.93,1214.37 1603.52,1214.37 1604.1,1214.37 1604.69,1214.37 1605.28,1214.37 1605.86,1214.37 1606.45,1214.37 1607.04,1214.37 1607.62,1214.37 1608.21,1214.37 1608.8,1214.37 1609.38,1214.37 1609.97,1214.37 1610.55,1214.37 1611.14,1214.37 1611.73,1214.37 1612.31,1214.37 1612.9,1214.37 1613.49,1214.37 1614.07,1214.37 1614.66,1214.37 1615.25,1214.37 1615.83,1214.37 1616.42,1214.37 1617.01,1214.37 1617.59,1214.37 1618.18,1214.37 1618.76,1214.37 1619.35,1214.37 1619.94,1214.37 1620.52,1214.37 1621.11,1214.37 1621.7,1214.37 1622.28,1214.37 1622.87,1214.37 1623.46,1214.37 1624.04,1214.37 1624.63,1214.37 1625.22,1214.37 1625.8,1214.37 1626.39,1214.37 1626.97,1214.37 1627.56,1214.37 1628.15,1214.37 1628.73,1214.37 1629.32,1214.37 1629.91,1214.37 1630.49,1214.37 1631.08,1214.37 1631.67,1214.37 1632.25,1214.37 1632.84,1214.37 1633.42,1214.37 1634.01,1214.37 1634.6,1214.37 1635.18,1214.37 1635.77,1214.37 1636.36,1214.37 1636.94,1214.37 1637.53,1214.37 1638.12,1214.37 1638.7,1214.37 1639.29,1214.37 1639.88,1214.37 1640.46,1214.37 1641.05,1214.37 1641.63,1214.37 1642.22,1214.37 1642.81,1214.37 1643.39,1214.37 1643.98,1214.37 1644.57,1214.37 1645.15,1214.37 1645.74,1214.37 1646.33,1214.37 1646.91,1214.37 1647.5,1214.37 1648.09,1214.37 1648.67,1214.37 1649.26,1214.37 1649.84,1214.37 1650.43,1214.37 1651.02,1214.37 1651.6,1214.37 1652.19,1214.37 1652.78,1214.37 1653.36,1214.37 1653.95,1214.37 1654.54,1214.37 1655.12,1214.37 1655.71,1214.37 1656.29,1214.37 1656.88,1214.37 1657.47,1214.37 1658.05,1214.37 1658.64,1214.37 1659.23,1214.37 1659.81,1214.37 1660.4,1214.37 1660.99,1214.37 1661.57,1214.37 1662.16,1214.37 1662.75,1214.37 1663.33,1214.37 1663.92,1214.37 1664.5,1214.37 1665.09,1214.37 1665.68,1214.37 1666.26,1214.37 1666.85,1214.37 1667.44,1214.37 1668.02,1214.37 1668.61,1214.37 1669.2,1214.37 1669.78,1214.37 1670.37,1214.37 1670.96,1214.37 1671.54,1214.37 1672.13,1214.37 1672.71,1214.37 1673.3,1214.37 1673.89,1214.37 1674.47,1214.37 1675.06,1214.37 1675.65,1214.37 1676.23,1214.37 1676.82,1214.37 1677.41,1214.37 1677.99,1214.37 1678.58,1214.37 1679.17,1214.37 1679.75,1214.37 1680.34,1214.37 1680.92,1214.37 1681.51,1214.37 1682.1,1214.37 1682.68,1214.37 1683.27,1214.37 1683.86,1214.37 1684.44,1214.37 1685.03,1214.37 1685.62,1214.37 1686.2,1214.37 1686.79,1214.37 1687.37,1214.37 1687.96,1214.37 1688.55,1214.37 1689.13,1214.37 1689.72,1214.37 1690.31,1214.37 1690.89,1214.37 1691.48,1214.37 1692.07,1214.37 1692.65,1214.37 1693.24,1214.37 1693.83,1214.37 1694.41,1214.37 1695,1214.37 1695.58,1214.37 1696.17,1214.37 1696.76,1214.37 1697.34,1214.37 1697.93,1214.37 1698.52,1214.37 1699.1,1214.37 1699.69,1214.37 1700.28,1214.37 1700.86,1214.37 1701.45,1214.37 1702.04,1214.37 1702.62,1214.37 1703.21,1214.37 1703.79,1214.37 1704.38,1214.37 1704.97,1214.37 1705.55,1214.37 1706.14,1214.37 1706.73,1214.37 1707.31,1214.37 1707.9,1214.37 1708.49,1214.37 1709.07,1214.37 1709.66,1214.37 1710.24,1214.37 1710.83,1214.37 1711.42,1214.37 1712,1214.37 1712.59,1214.37 1713.18,1214.37 1713.76,1214.37 1714.35,1214.37 1714.94,1214.37 1715.52,1214.37 1716.11,1214.37 1716.7,1214.37 1717.28,1214.37 1717.87,1214.37 1718.45,1214.37 1719.04,1214.37 1719.63,1214.37 1720.21,1214.37 1720.8,1214.37 1721.39,1214.37 1721.97,1214.37 1722.56,1214.37 1723.15,1214.37 1723.73,1214.37 1724.32,1214.37 1724.91,1214.37 1725.49,1214.37 1726.08,1214.37 1726.66,1214.37 1727.25,1214.37 1727.84,1214.37 1728.42,1214.37 1729.01,1214.37 1729.6,1214.37 1730.18,1214.37 1730.77,1214.37 1731.36,1214.37 1731.94,1214.37 1732.53,1214.37 1733.11,1214.37 1733.7,1214.37 1734.29,1214.37 1734.87,1214.37 1735.46,1214.37 1736.05,1214.37 1736.63,1214.37 1737.22,1214.37 1737.81,1214.37 1738.39,1214.37 1738.98,1214.37 1739.57,1214.37 1740.15,1214.37 1740.74,1214.37 1741.32,1214.37 1741.91,1214.37 1742.5,1214.37 1743.08,1214.37 1743.67,1214.37 1744.26,1214.37 1744.84,1214.37 1745.43,1214.37 1746.02,1214.37 1746.6,1214.37 1747.19,1214.37 1747.78,1214.37 1748.36,1214.37 1748.95,1214.37 1749.53,1214.37 1750.12,1214.37 1750.71,1214.37 1751.29,1214.37 1751.88,1214.37 1752.47,1214.37 1753.05,1214.37 1753.64,1214.37 1754.23,1214.37 1754.81,1214.37 1755.4,1214.37 1755.99,1214.37 1756.57,1214.37 1757.16,1214.37 1757.74,1214.37 1758.33,1214.37 1758.92,1214.37 1759.5,1214.37 1760.09,1214.37 1760.68,1214.37 1761.26,1214.37 1761.85,1214.37 1762.44,1214.37 1763.02,1214.37 1763.61,1214.37 1764.19,1214.37 1764.78,1214.37 1765.37,1214.37 1765.95,1214.37 1766.54,1214.37 1767.13,1214.37 1767.71,1214.37 1768.3,1214.37 1768.89,1214.37 1769.47,1214.37 1770.06,1214.37 1770.65,1214.37 1771.23,1214.37 1771.82,1214.37 1772.4,1214.37 1772.99,1214.37 1773.58,1214.37 1774.16,1214.37 1774.75,1214.37 1775.34,1214.37 1775.92,1214.37 1776.51,1214.37 1777.1,1214.37 1777.68,1214.37 1778.27,1214.37 1778.86,1214.37 1779.44,1214.37 1780.03,1214.37 1780.61,1214.37 1781.2,1214.37 1781.79,1214.37 1782.37,1214.37 1782.96,1214.37 1783.55,1214.37 1784.13,1214.37 1784.72,1214.37 1785.31,1214.37 1785.89,1214.37 1786.48,1214.37 1787.06,1214.37 1787.65,1214.37 1788.24,1214.37 1788.82,1214.37 1789.41,1214.37 1790,1214.37 1790.58,1214.37 1791.17,1214.37 1791.76,1214.37 1792.34,1214.37 1792.93,1214.37 1793.52,1214.37 1794.1,1214.37 1794.69,1214.37 1795.27,1214.37 1795.86,1214.37 1796.45,1214.37 1797.03,1214.37 1797.62,1214.37 1798.21,1214.37 1798.79,1214.37 1799.38,1214.37 1799.97,1214.37 1800.55,1214.37 1801.14,1214.37 1801.73,1214.37 1802.31,1214.37 1802.9,1214.37 1803.48,1214.37 1804.07,1214.37 1804.66,1214.37 1805.24,1214.37 1805.83,1214.37 1806.42,1214.37 1807,1214.37 1807.59,1214.37 1808.18,1214.37 1808.76,1214.37 1809.35,1214.37 1809.94,1214.37 1810.52,1214.37 1811.11,1214.37 1811.69,1214.37 1812.28,1214.37 1812.87,1214.37 1813.45,1214.37 1814.04,1214.37 1814.63,1214.37 1815.21,1214.37 1815.8,1214.37 1816.39,1214.37 1816.97,1214.37 1817.56,1214.37 1818.14,1214.37 1818.73,1214.37 1819.32,1214.37 1819.9,1214.37 1820.49,1214.37 1821.08,1214.37 1821.66,1214.37 1822.25,1214.37 1822.84,1214.37 1823.42,1214.37 1824.01,1214.37 1824.6,1214.37 1825.18,1214.37 1825.77,1214.37 1826.35,1214.37 1826.94,1214.37 1827.53,1214.37 1828.11,1214.37 1828.7,1214.37 1829.29,1214.37 1829.87,1214.37 1830.46,1214.37 1831.05,1214.37 1831.63,1214.37 1832.22,1214.37 1832.81,1214.37 1833.39,1214.37 1833.98,1214.37 1834.56,1214.37 1835.15,1214.37 1835.74,1214.37 1836.32,1214.37 1836.91,1214.37 1837.5,1214.37 1838.08,1214.37 1838.67,1214.37 1839.26,1214.37 1839.84,1214.37 1840.43,1214.37 1841.01,1214.37 1841.6,1214.37 1842.19,1214.37 1842.77,1214.37 1843.36,1214.37 1843.95,1214.37 1844.53,1214.37 1845.12,1214.37 1845.71,1214.37 1846.29,1214.37 1846.88,1214.37 1847.47,1214.37 1848.05,1214.37 1848.64,1214.37 1849.22,1214.37 1849.81,1214.37 1850.4,1214.37 1850.98,1214.37 1851.57,1214.37 1852.16,1214.37 1852.74,1214.37 1853.33,1214.37 1853.92,1214.37 1854.5,1214.37 1855.09,1214.37 1855.68,1214.37 1856.26,1214.37 1856.85,1214.37 1857.43,1214.37 1858.02,1214.37 1858.61,1214.37 1859.19,1214.37 1859.78,1214.37 1860.37,1214.37 1860.95,1214.37 1861.54,1214.37 1862.13,1214.37 1862.71,1214.37 1863.3,1214.37 1863.88,1214.37 1864.47,1214.37 1865.06,1214.37 1865.64,1214.37 1866.23,1214.37 1866.82,1214.37 1867.4,1214.37 1867.99,1214.37 1868.58,1214.37 1869.16,1214.37 1869.75,1214.37 1870.34,1214.37 1870.92,1214.37 1871.51,1214.37 1872.09,1214.37 1872.68,1214.37 1873.27,1214.37 1873.85,1214.37 1874.44,1214.37 1875.03,1214.37 1875.61,1214.37 1876.2,1214.37 1876.79,1214.37 1877.37,1214.37 1877.96,1214.37 1878.55,1214.37 1879.13,1214.37 1879.72,1214.37 1880.3,1214.37 1880.89,1214.37 1881.48,1214.37 1882.06,1214.37 1882.65,1214.37 1883.24,1214.37 1883.82,1214.37 1884.41,1214.37 1885,1214.37 1885.58,1214.37 1886.17,1214.37 1886.76,1214.37 1887.34,1214.37 1887.93,1214.37 1888.51,1214.37 1889.1,1214.37 1889.69,1214.37 1890.27,1214.37 1890.86,1214.37 1891.45,1214.37 1892.03,1214.37 1892.62,1214.37 1893.21,1214.37 1893.79,1214.37 1894.38,1214.37 1894.96,1214.37 1895.55,1214.37 1896.14,1214.37 1896.72,1214.37 1897.31,1214.37 1897.9,1214.37 1898.48,1214.37 1899.07,1214.37 1899.66,1214.37 1900.24,1214.37 1900.83,1214.37 1901.42,1214.37 1902,1214.37 1902.59,1214.37 1903.17,1214.37 1903.76,1214.37 1904.35,1214.37 1904.93,1214.37 1905.52,1214.37 1906.11,1214.37 1906.69,1214.37 1907.28,1214.37 1907.87,1214.37 1908.45,1214.37 1909.04,1214.37 1909.63,1214.37 1910.21,1214.37 1910.8,1214.37 1911.38,1214.37 1911.97,1214.37 1912.56,1214.37 1913.14,1214.37 1913.73,1214.37 1914.32,1214.37 1914.9,1214.37 1915.49,1214.37 1916.08,1214.37 1916.66,1214.37 1917.25,1214.37 1917.83,1214.37 1918.42,1214.37 1919.01,1214.37 1919.59,1214.37 1920.18,1214.37 1920.77,1214.37 1921.35,1214.37 1921.94,1214.37 1922.53,1214.37 1923.11,1214.37 1923.7,1214.37 1924.29,1214.37 1924.87,1214.37 1925.46,1214.37 1926.04,1214.37 1926.63,1214.37 1927.22,1214.37 1927.8,1214.37 1928.39,1214.37 1928.98,1214.37 1929.56,1214.37 1930.15,1214.37 1930.74,1214.37 1931.32,1214.37 1931.91,1214.37 1932.5,1214.37 1933.08,1214.37 1933.67,1214.37 1934.25,1214.37 1934.84,1214.37 1935.43,1214.37 1936.01,1214.37 1936.6,1214.37 1937.19,1214.37 1937.77,1214.37 1938.36,1214.37 1938.95,1214.37 1939.53,1214.37 1940.12,1214.37 1940.71,1214.37 1941.29,1214.37 1941.88,1214.37 1942.46,1214.37 1943.05,1214.37 1943.64,1214.37 1944.22,1214.37 1944.81,1214.37 1945.4,1214.37 1945.98,1214.37 1946.57,1214.37 1947.16,1214.37 1947.74,1214.37 1948.33,1214.37 1948.91,1214.37 1949.5,1214.37 1950.09,1214.37 1950.67,1214.37 1951.26,1214.37 1951.85,1214.37 1952.43,1214.37 1953.02,1214.37 1953.61,1214.37 1954.19,1214.37 1954.78,1214.37 1955.37,1214.37 1955.95,1214.37 1956.54,1214.37 1957.12,1214.37 1957.71,1214.37 1958.3,1214.37 1958.88,1214.37 1959.47,1214.37 1960.06,1214.37 1960.64,1214.37 1961.23,1214.37 1961.82,1214.37 1962.4,1214.37 1962.99,1214.37 1963.58,1214.37 1964.16,1214.37 1964.75,1214.37 1965.33,1214.37 1965.92,1214.37 1966.51,1214.37 1967.09,1214.37 1967.68,1214.37 1968.27,1214.37 1968.85,1214.37 1969.44,1214.37 1970.03,1214.37 1970.61,1214.37 1971.2,1214.37 1971.78,1214.37 1972.37,1214.37 1972.96,1214.37 1973.54,1214.37 1974.13,1214.37 1974.72,1214.37 1975.3,1214.37 1975.89,1214.37 1976.48,1214.37 1977.06,1214.37 1977.65,1214.37 1978.24,1214.37 1978.82,1214.37 1979.41,1214.37 1979.99,1214.37 1980.58,1214.37 1981.17,1214.37 1981.75,1214.37 1982.34,1214.37 1982.93,1214.37 1983.51,1214.37 1984.1,1214.37 1984.69,1214.37 1985.27,1214.37 1985.86,1214.37 1986.45,1214.37 1987.03,1214.37 1987.62,1214.37 1988.2,1214.37 1988.79,1214.37 1989.38,1214.37 1989.96,1214.37 1990.55,1214.37 1991.14,1214.37 1991.72,1214.37 1992.31,1214.37 1992.9,1214.37 1993.48,1214.37 1994.07,1214.37 1994.65,1214.37 1995.24,1214.37 1995.83,1214.37 1996.41,1214.37 1997,1214.37 1997.59,1214.37 1998.17,1214.37 1998.76,1214.37 1999.35,1214.37 1999.93,1214.37 2000.52,1214.37 2001.11,1214.37 2001.69,1214.37 2002.28,1214.37 2002.86,1214.37 2003.45,1214.37 2004.04,1214.37 2004.62,1214.37 2005.21,1214.37 2005.8,1214.37 2006.38,1214.37 2006.97,1214.37 2007.56,1214.37 2008.14,1214.37 2008.73,1214.37 2009.32,1214.37 2009.9,1214.37 2010.49,1214.37 2011.07,1214.37 2011.66,1214.37 2012.25,1214.37 2012.83,1214.37 2013.42,1214.37 2014.01,1214.37 2014.59,1214.37 2015.18,1214.37 2015.77,1214.37 2016.35,1214.37 2016.94,1214.37 2017.53,1214.37 2018.11,1214.37 2018.7,1214.37 2019.28,1214.37 2019.87,1214.37 2020.46,1214.37 2021.04,1214.37 2021.63,1214.37 2022.22,1214.37 2022.8,1214.37 2023.39,1214.37 2023.98,1214.37 2024.56,1214.37 2025.15,1214.37 2025.73,1214.37 2026.32,1214.37 2026.91,1214.37 2027.49,1214.37 2028.08,1214.37 2028.67,1214.37 2029.25,1214.37 2029.84,1214.37 2030.43,1214.37 2031.01,1214.37 2031.6,1214.37 2032.19,1214.37 2032.77,1214.37 2033.36,1214.37 2033.94,1214.37 2034.53,1214.37 2035.12,1214.37 2035.7,1214.37 2036.29,1214.37 2036.88,1214.37 2037.46,1214.37 2038.05,1214.37 2038.64,1214.37 2039.22,1214.37 2039.81,1214.37 2040.4,1214.37 2040.98,1214.37 2041.57,1214.37 2042.15,1214.37 2042.74,1214.37 2043.33,1214.37 2043.91,1214.37 2044.5,1214.37 2045.09,1214.37 2045.67,1214.37 2046.26,1214.37 2046.85,1214.37 2047.43,1214.37 2048.02,1214.37 2048.6,1214.37 2049.19,1214.37 2049.78,1214.37 2050.36,1214.37 2050.95,1214.37 2051.54,1214.37 2052.12,1214.37 2052.71,1214.37 2053.3,1214.37 2053.88,1214.37 2054.47,1214.37 2055.06,1214.37 2055.64,1214.37 2056.23,1214.37 2056.81,1214.37 2057.4,1214.37 2057.99,1214.37 2058.57,1214.37 2059.16,1214.37 2059.75,1214.37 2060.33,1214.37 2060.92,1214.37 2061.51,1214.37 2062.09,1214.37 2062.68,1214.37 2063.27,1214.37 2063.85,1214.37 2064.44,1214.37 2065.02,1214.37 2065.61,1214.37 2066.2,1214.37 2066.78,1214.37 2067.37,1214.37 2067.96,1214.37 2068.54,1214.37 2069.13,1214.37 2069.72,1214.37 2070.3,1214.37 2070.89,1214.37 2071.48,1214.37 2072.06,1214.37 2072.65,1214.37 2073.23,1214.37 2073.82,1214.37 2074.41,1214.37 2074.99,1214.37 2075.58,1214.37 2076.17,1214.37 2076.75,1214.37 2077.34,1214.37 2077.93,1214.37 2078.51,1214.37 2079.1,1214.37 2079.68,1214.37 2080.27,1214.37 2080.86,1214.37 2081.44,1214.37 2082.03,1214.37 2082.62,1214.37 2083.2,1214.37 2083.79,1214.37 2084.38,1214.37 2084.96,1214.37 2085.55,1214.37 2086.14,1214.37 2086.72,1214.37 2087.31,1214.37 2087.89,1214.37 2088.48,1214.37 2089.07,1214.37 2089.65,1214.37 2090.24,1214.37 2090.83,1214.37 2091.41,1214.37 2092,1214.37 2092.59,1214.37 2093.17,1214.37 2093.76,1214.37 2094.35,1214.37 2094.93,1214.37 2095.52,1214.37 2096.1,1214.37 2096.69,1214.37 2097.28,1214.37 2097.86,1214.37 2098.45,1214.37 2099.04,1214.37 2099.62,1214.37 2100.21,1214.37 2100.8,1214.37 2101.38,1214.37 2101.97,1214.37 2102.55,1214.37 2103.14,1214.37 2103.73,1214.37 2104.31,1214.37 2104.9,1214.37 2105.49,1214.37 2106.07,1214.37 2106.66,1214.37 2107.25,1214.37 2107.83,1214.37 2108.42,1214.37 2109.01,1214.37 2109.59,1214.37 2110.18,1214.37 2110.76,1214.37 2111.35,1214.37 2111.94,1214.37 2112.52,1214.37 2113.11,1214.37 2113.7,1214.37 2114.28,1214.37 2114.87,1214.37 2115.46,1214.37 2116.04,1214.37 2116.63,1214.37 2117.22,1214.37 2117.8,1214.37 2118.39,1214.37 2118.97,1214.37 2119.56,1214.37 2120.15,1214.37 2120.73,1214.37 2121.32,1214.37 2121.91,1214.37 2122.49,1214.37 2123.08,1214.37 2123.67,1214.37 2124.25,1214.37 2124.84,1214.37 2125.42,1214.37 2126.01,1214.37 2126.6,1214.37 2127.18,1214.37 2127.77,1214.37 2128.36,1214.37 2128.94,1214.37 2129.53,1214.37 2130.12,1214.37 2130.7,1214.37 2131.29,1214.37 2131.88,1214.37 2132.46,1214.37 2133.05,1214.37 2133.63,1214.37 2134.22,1214.37 2134.81,1214.37 2135.39,1214.37 2135.98,1214.37 2136.57,1214.37 2137.15,1214.37 2137.74,1214.37 2138.33,1214.37 2138.91,1214.37 2139.5,1214.37 2140.09,1214.37 2140.67,1214.37 2141.26,1214.37 2141.84,1214.37 2142.43,1214.37 2143.02,1214.37 2143.6,1214.37 2144.19,1214.37 2144.78,1214.37 2145.36,1214.37 2145.95,1214.37 2146.54,1214.37 2147.12,1214.37 2147.71,1214.37 2148.3,1214.37 2148.88,1214.37 2149.47,1214.37 2150.05,1214.37 2150.64,1214.37 2151.23,1214.37 2151.81,1214.37 2152.4,1214.37 2152.99,1214.37 2153.57,1214.37 2154.16,1214.37 2154.75,1214.37 2155.33,1214.37 2155.92,1214.37 2156.5,1214.37 2157.09,1214.37 2157.68,1214.37 2158.26,1214.37 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.89,1195.96 1398.9,899.083 \"/>\n<polyline clip-path=\"url(#clip392)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1232.25 985.439,1195.96 2158.26,1195.96 2158.26,1232.25 985.439,1232.25 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip390)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip390)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip393\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip390)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip390)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip390)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip393)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-7929.6 166.588,-8612.9 167.147,-9215.37 167.706,-9771.67 168.266,-9392.15 168.825,-9875.89 169.384,-10307.1 169.943,-10677.5 170.503,-11014.4 171.062,-11293.6 171.621,-10350.6 172.18,-10619.1 172.74,-10864.1 173.299,-10583.1 173.858,-10768.6 174.417,-10508.7 174.977,-10642.4 175.536,-10406.1 176.095,-10513.8 176.655,-10596.3 177.214,-10350.9 177.773,-10130.8 178.332,-9899.68 178.892,-9443.4 179.451,-9453.58 180.01,-9456.91 180.569,-9461.12 181.129,-9443.01 181.688,-9417.63 182.247,-9373.32 182.806,-8977.63 183.366,-8757.37 183.925,-8535.67 184.484,-8450.15 185.043,-8365.42 185.603,-8265.39 186.162,-8034.98 186.721,-7697.86 187.28,-7591.32 187.84,-7387.15 188.399,-7171.5 188.958,-6969.66 189.517,-6870.58 190.077,-6755.94 190.636,-6644.72 191.195,-6450.97 191.754,-6333.22 192.314,-6139.4 192.873,-6028.17 193.432,-5712.78 193.991,-5478.46 194.551,-5252.13 195.11,-4980.1 195.669,-4778.79 196.228,-4582.76 196.788,-4399.36 197.347,-4322.02 197.906,-4044.58 198.465,-3923.39 199.025,-3753.83 199.584,-3505.54 200.143,-3349.56 200.702,-3044.59 201.262,-2911.53 201.821,-2786.73 202.38,-2739.57 202.939,-2656.97 203.499,-2504.28 204.058,-2467.52 204.617,-2347.16 205.176,-2268.52 205.736,-2128.6 206.295,-2027.21 206.854,-1922.09 207.413,-1858.69 207.973,-1759.75 208.532,-1722.26 209.091,-1687.33 209.65,-1649.4 210.21,-1464.59 210.769,-1429.49 211.328,-1393.04 211.887,-1357.21 212.447,-1292.87 213.006,-1172.43 213.565,-1112.54 214.124,-1076.24 214.684,-988.398 215.243,-848.357 215.802,-869.647 216.361,-785.662 216.921,-733.643 217.48,-725.758 218.039,-671.516 218.598,-545.215 219.158,-493.302 219.717,-469.23 220.276,-447.398 220.835,-422.99 221.395,-395.713 221.954,-323.474 222.513,-324.873 223.072,-346.115 223.632,-274.706 224.191,-249.217 224.75,-221.949 225.309,-195.108 225.869,-121.078 226.428,-31.2034 226.987,49.1226 227.546,85.9217 228.106,57.5748 228.665,180.551 229.224,234.174 229.783,263.827 230.343,295.604 230.902,324.793 231.461,356.14 232.02,386.973 232.58,453.21 233.139,460.14 233.698,463.092 234.257,489.372 234.817,518.344 235.376,577.198 235.935,562.495 236.494,603.351 237.054,622.497 237.613,660.006 238.172,716.103 238.731,714.32 239.291,714.874 239.85,731.946 240.409,767.546 240.968,803.694 241.528,870.666 242.087,919.966 242.646,966.153 243.205,990.859 243.765,1009.75 244.324,1033.2 244.883,1019.05 245.442,1008.03 246.002,977.924 246.561,954.65 247.12,966.523 247.679,1011.45 248.239,1016.31 248.798,1005.83 249.357,996.75 249.916,985.692 250.476,996.231 251.035,1041.92 251.594,1029.09 252.153,1035.45 252.713,1027.34 253.272,1033.51 253.831,1025.43 254.39,1018.03 254.95,1045.26 255.509,1072.08 256.068,1059.49 256.627,1066.68 257.187,1073.38 257.746,1095.17 258.305,1065.13 258.864,1092.54 259.424,1098.94 259.983,1108.22 260.542,1113.79 261.101,1119.27 261.661,1108.42 262.22,1085.58 262.779,1058.69 263.338,1048.65 263.898,1041.05 264.457,1032.84 265.016,1058.4 265.575,1015.16 266.135,1006.9 266.694,1017.58 267.253,1030.8 267.812,1024.88 268.372,1016.92 268.931,1015.06 269.49,1045.03 270.049,1072.66 270.609,1045.02 271.168,1003.68 271.727,1011.61 272.286,1006.7 272.846,985.063 273.405,999.153 273.964,994.972 274.523,990.098 275.083,1022.46 275.642,1016.3 276.201,1012 276.76,1006.06 277.32,1052.86 277.879,1067.3 278.438,1072.13 278.997,1112.27 279.557,1082.38 280.116,1058.44 280.675,1050.99 281.234,1060.87 281.794,969.703 282.353,966.803 282.912,951.641 283.471,918.053 284.031,935.086 284.59,949.855 285.149,932.114 285.708,945.226 286.268,976.832 286.827,970.501 287.386,971.577 287.945,954.299 288.505,956.695 289.064,955.316 289.623,954.549 290.182,987.542 290.742,1001.75 291.301,970.034 291.86,1015.12 292.419,992.485 292.979,987.473 293.538,987.356 294.097,964.952 294.656,945.067 295.216,890.613 295.775,890.667 296.334,924.329 296.893,940.542 297.453,940.388 298.012,987.459 298.571,981.233 299.13,959.945 299.69,990.583 300.249,1005.96 300.808,1015.9 301.368,1027.89 301.927,1039.3 302.486,1050.14 303.045,1075.46 303.605,1067.6 304.164,1060.77 304.723,1037.48 305.282,1016.03 305.842,971.087 306.401,985.678 306.96,1044.85 307.519,1021.34 308.079,1027.25 308.638,1035.24 309.197,1027.52 309.756,1003.92 310.316,982.199 310.875,975.647 311.434,941.272 311.993,938.452 312.553,919.516 313.112,931.532 313.671,960.699 314.23,972.377 314.79,1000.73 315.349,1024.95 315.908,1034.82 316.467,1012.55 317.027,1008.33 317.586,986.925 318.145,996.213 318.704,1025.08 319.264,1018.06 319.823,996.378 320.382,973.337 320.941,986.448 321.501,981.61 322.06,989.784 322.619,968.469 323.178,929.298 323.738,892.497 324.297,876.437 324.856,876.624 325.415,856.348 325.975,857.007 326.534,847.136 327.093,927.483 327.652,923.896 328.212,922.858 328.771,922.284 329.33,930.88 329.889,928.525 330.449,923.841 331.008,948.544 331.567,989.34 332.126,946.966 332.686,940.038 333.245,955.248 333.804,963.57 334.363,972.86 334.923,994.479 335.482,1001.57 336.041,1008.61 336.6,1029.87 337.16,1035.98 337.719,1008.01 338.278,981.498 338.837,987.247 339.397,993.821 339.956,970.053 340.515,979.765 341.074,974.159 341.634,967.727 342.193,944.961 342.752,939.252 343.311,933.726 343.871,946.119 344.43,921.541 344.989,916.481 345.548,896.587 346.108,890.016 346.667,872.309 347.226,873.784 347.785,875.387 348.345,874.724 348.904,872.707 349.463,873.469 350.022,887.264 350.582,845.781 351.141,874.295 351.7,873.503 352.259,875.315 352.819,841.367 353.378,869.739 353.937,883.664 354.496,848.124 355.056,847.478 355.615,861.265 356.174,874.62 356.733,871.042 357.293,887.403 357.852,883.933 358.411,926.019 358.97,936.726 359.53,901.985 360.089,901.462 360.648,896.102 361.207,856.505 361.767,852.375 362.326,916.757 362.885,927.244 363.444,904.839 364.004,933.531 364.563,896.404 365.122,826.944 365.681,820.56 366.241,850.247 366.8,847.459 367.359,811.599 367.918,778.976 368.478,798.188 369.037,779.783 369.596,778.218 370.155,747.793 370.715,766.755 371.274,851.416 371.833,849.322 372.392,816.375 372.952,829.759 373.511,846.131 374.07,811.909 374.629,828.451 375.189,789.362 375.748,788.551 376.307,752.538 376.866,768.923 377.426,786.26 377.985,754.423 378.544,757.162 379.103,760.956 379.663,767.302 380.222,801.756 380.781,784.2 381.34,784.979 381.9,819.087 382.459,816.994 383.018,814.622 383.577,795.257 384.137,795.34 384.696,794.393 385.255,812.979 385.814,831.515 386.374,816.243 386.933,799.467 387.492,751.244 388.051,754.524 388.611,739.447 389.17,708.386 389.729,728.355 390.288,749.54 390.848,767.439 391.407,752.861 391.966,754.532 392.525,806.421 393.085,806.231 393.644,784.548 394.203,768.147 394.762,775.368 395.322,777.566 395.881,777.683 396.44,775.413 396.999,743.002 397.559,746.628 398.118,802.339 398.677,767.258 399.236,767.036 399.796,784.342 400.355,782.947 400.914,778.616 401.473,776.894 402.033,792.731 402.592,824.041 403.151,851.593 403.71,863.984 404.27,858.201 404.829,852.596 405.388,835.474 405.947,849.835 406.507,844.216 407.066,873.491 407.625,884.55 408.184,881.664 408.744,859.221 409.303,853.07 409.862,832.197 410.421,829.811 410.981,814.084 411.54,826.102 412.099,853.126 412.658,861.465 413.218,857.492 413.777,837.606 414.336,849.296 414.895,832.564 415.455,845.107 416.014,808.465 416.573,806.335 417.132,819.583 417.692,833.487 418.251,845.113 418.81,853.94 419.369,859.522 419.929,837.981 420.488,850.159 421.047,846.039 421.606,828.659 422.166,873.534 422.725,868.335 423.284,848.972 423.843,859.707 424.403,904.213 424.962,895.821 425.521,840.617 426.08,821.182 426.64,815.062 427.199,812.601 427.758,807.679 428.318,802.688 428.877,835.664 429.436,829.914 429.995,872.511 430.555,867.454 431.114,861.317 431.673,839.95 432.232,786.913 432.792,804.389 433.351,775.335 433.91,739.97 434.469,705.713 435.029,709.588 435.588,727.591 436.147,777.428 436.706,791.443 437.266,787.285 437.825,785.872 438.384,801.067 438.943,811.718 439.503,826.491 440.062,805.267 440.621,799.484 441.18,827.84 441.74,837.903 442.299,848.184 442.858,809.893 443.417,806.749 443.977,820.321 444.536,817.173 445.095,813.182 445.654,842.316 446.214,852.459 446.773,848.238 447.332,862.671 447.891,840.818 448.451,836.301 449.01,832.319 449.569,845.638 450.128,810.055 450.688,805.508 451.247,787.398 451.806,800.088 452.365,781.513 452.925,797.673 453.484,778.809 454.043,776.508 454.602,790.254 455.162,786.082 455.721,764.993 456.28,814.842 456.839,827.32 457.399,825.897 457.958,793.624 458.517,774.542 459.076,771.941 459.636,788.737 460.195,785.037 460.754,796.962 461.313,793.682 461.873,789.725 462.432,774.474 462.991,775.004 463.55,742.476 464.11,709.417 464.669,728.681 465.228,713.649 465.787,698.994 466.347,684.883 466.906,720.222 467.465,716.258 468.024,768.727 468.584,749.477 469.143,778.598 469.702,792.027 470.261,789.79 470.821,759.368 471.38,742.307 471.939,726.938 472.498,777.574 473.058,741.785 473.617,742.395 474.176,726.32 474.735,707.83 475.295,742.623 475.854,741.271 476.413,741.414 476.972,755.263 477.532,755.337 478.091,784.063 478.65,783.783 479.209,797.281 479.769,796.388 480.328,794.464 480.887,806.434 481.446,821.235 482.006,754.341 482.565,754.168 483.124,722.159 483.683,740.739 484.243,710.863 484.802,728.178 485.361,714.673 485.92,747.073 486.48,752.218 487.039,755.02 487.598,753.108 488.157,752.274 488.717,765.994 489.276,762.626 489.835,809.926 490.394,806.661 490.954,805.21 491.513,785.447 492.072,799.325 492.631,794.188 493.191,792.911 493.75,805.122 494.309,767.837 494.868,765.536 495.428,746.79 495.987,747.649 496.546,749.22 497.105,731.126 497.665,763.38 498.224,743.917 498.783,793.528 499.342,808.49 499.902,836.563 500.461,861.382 501.02,873.619 501.579,834.948 502.139,834.367 502.698,815.562 503.257,810.799 503.816,841.231 504.376,804.161 504.935,783.495 505.494,779.721 506.053,788.77 506.613,786.923 507.172,794.32 507.731,790.151 508.29,769.94 508.85,779.617 509.409,743.458 509.968,756.253 510.527,737.09 511.087,737.664 511.646,752.511 512.205,752.406 512.764,752.705 513.324,732.597 513.883,716.304 514.442,729.184 515.001,711.943 515.561,745.617 516.12,746.116 516.679,761.219 517.238,759.191 517.798,788.851 518.357,783.921 518.916,764.756 519.475,781.489 520.035,806.765 520.594,805.656 521.153,787.633 521.712,800.611 522.272,814.396 522.831,826.726 523.39,807.612 523.949,803.909 524.509,752.618 525.068,767.042 525.627,815.475 526.186,810.674 526.746,822.341 527.305,815.576 527.864,810.458 528.423,803.038 528.983,781.687 529.542,777.685 530.101,806.498 530.66,804.094 531.22,813.043 531.779,804.398 532.338,785.748 532.897,753.673 533.457,737.398 534.016,721.655 534.575,724.647 535.134,758.3 535.694,757.108 536.253,737.471 536.812,704.746 537.371,737.585 537.931,718.872 538.49,734.888 539.049,715.367 539.608,711.567 540.168,693.519 540.727,644.599 541.286,647.776 541.845,636.614 542.405,675.585 542.964,646.454 543.523,638.239 544.082,624.795 544.642,624.804 545.201,663.175 545.76,652.326 546.319,668.053 546.879,672.277 547.438,673.024 547.997,657.192 548.556,673.718 549.116,707.402 549.675,705.845 550.234,688.899 550.793,707.071 551.353,674.455 551.912,708.018 552.471,677.975 553.031,676.016 553.59,694.177 554.149,663.775 554.708,698.506 555.268,667.631 555.827,622.896 556.386,610.197 556.945,630.949 557.505,601.741 558.064,623.915 558.623,594.397 559.182,617.919 559.742,636.32 560.301,688.33 560.86,675.576 561.419,675.997 561.979,694.519 562.538,697.089 563.097,694.823 563.656,693.312 564.216,708.9 564.775,676.232 565.334,649.857 565.893,653.716 566.453,689.472 567.012,722.23 567.571,735.365 568.13,719.135 568.69,748.135 569.249,744.451 569.808,727.257 570.367,726.637 570.927,709.182 571.486,695.767 572.045,698.596 572.604,700.385 573.164,671.445 573.723,692.383 574.282,709.827 574.841,692.05 575.401,709.394 575.96,693.482 576.519,707.871 577.078,708.647 577.638,743.881 578.197,724.409 578.756,722.387 579.315,719.553 579.875,720.493 580.434,737.084 580.993,685.992 581.552,671.276 582.112,673.38 582.671,691.622 583.23,694.341 583.789,711.869 584.349,728.694 584.908,760.979 585.467,776.145 586.026,742.836 586.586,756.667 587.145,742.03 587.704,708.534 588.263,676.882 588.823,678.194 589.382,663.556 589.941,653.565 590.5,657.224 591.06,644.355 591.619,695.618 592.178,676.921 592.737,679.668 593.297,680.509 593.856,645.769 594.415,634.358 594.974,607.748 595.534,618.352 596.093,593.425 596.652,615.888 597.211,623.522 597.771,628.858 598.33,630.647 598.889,629.929 599.448,615.763 600.008,573.804 600.567,600.694 601.126,607.977 601.685,613.336 602.245,647.445 602.804,669.042 603.363,686.083 603.922,704.845 604.482,673.894 605.041,674.207 605.6,675.96 606.159,664.821 606.719,667.83 607.278,668.196 607.837,685.541 608.396,687.541 608.956,692.009 609.515,726.308 610.074,738.621 610.633,767.855 611.193,746.856 611.752,730.958 612.311,745.191 612.87,759.41 613.43,757.967 613.989,770.55 614.548,752.711 615.107,751.562 615.667,764.307 616.226,746.515 616.785,746.224 617.344,761.798 617.904,742.873 618.463,725.522 619.022,723.766 619.581,706.927 620.141,692.06 620.7,695.082 621.259,661.872 621.818,663.539 622.378,662.032 622.937,663.598 623.496,715.292 624.055,763.698 624.615,774.826 625.174,766.935 625.733,732.33 626.292,748.56 626.852,728.737 627.411,808.109 627.97,818.907 628.529,811.152 629.089,787.942 629.648,830.14 630.207,808.932 630.766,799.814 631.326,758.029 631.885,755.113 632.444,752.836 633.003,765.096 633.563,750.086 634.122,763.61 634.681,761.124 635.24,753.615 635.8,753.627 636.359,765.097 636.918,710.711 637.477,679.689 638.037,712.724 638.596,730.5 639.155,727.39 639.714,726.695 640.274,728.716 640.833,709.874 641.392,710.587 641.951,728.245 642.511,727.481 643.07,691.796 643.629,693.153 644.188,690.218 644.748,690.056 645.307,673.63 645.866,676.049 646.425,663.175 646.985,692.684 647.544,712.476 648.103,693.361 648.662,693.049 649.222,705.656 649.781,708.707 650.34,711.805 650.899,727.975 651.459,740.565 652.018,736.744 652.577,717.252 653.136,700.171 653.696,695.648 654.255,730.608 654.814,760.502 655.373,739.27 655.933,753.536 656.492,765.984 657.051,779.266 657.61,759.48 658.17,771.568 658.729,751.843 659.288,714.792 659.847,713.079 660.407,681.871 660.966,698.006 661.525,682.95 662.084,682.395 662.644,684.935 663.203,680.17 663.762,680.522 664.321,694.87 664.881,710.276 665.44,710.992 665.999,741.462 666.558,736.953 667.118,735.712 667.677,700.059 668.236,650.893 668.795,670.281 669.355,704.69 669.914,720.231 670.473,717.598 671.032,715.549 671.592,712.134 672.151,715.647 672.71,681.24 673.269,684.395 673.829,650.653 674.388,671.483 674.947,673.508 675.506,658.06 676.066,663.61 676.625,645.838 677.184,663.78 677.743,667.832 678.303,685.239 678.862,682.921 679.421,684.493 679.981,699.2 680.54,697.695 681.099,714.031 681.658,731.161 682.218,729.08 682.777,725.087 683.336,724.117 683.895,755.674 684.455,754.906 685.014,767.205 685.573,762.675 686.132,761.243 686.692,727.502 687.251,706.322 687.81,706.864 688.369,735.684 688.929,747.379 689.488,742.518 690.047,727.051 690.606,756.891 691.166,818.935 691.725,829.115 692.284,823.853 692.843,830.704 693.403,855.487 693.962,814.412 694.521,825.758 695.08,753.217 695.64,732.279 696.199,714.265 696.758,714.109 697.317,730.434 697.877,731.69 698.436,729.749 698.995,726.012 699.554,712.673 700.114,713.777 700.673,696.266 701.232,728.978 701.791,710.667 702.351,712.2 702.91,709.529 703.469,691.038 704.028,675.374 704.588,659.094 705.147,647.88 705.706,668.583 706.265,656.749 706.825,657.818 707.384,691.876 707.943,706.512 708.502,706.015 709.062,722.315 709.621,707.605 710.18,705.674 710.739,720.991 711.299,685.854 711.858,670.98 712.417,688.31 712.976,690.841 713.536,659.136 714.095,629.751 714.654,633.465 715.213,604.799 715.773,589.091 716.332,582.373 716.891,590.737 717.45,580.371 718.01,604.535 718.569,627.262 719.128,645.781 719.687,619.493 720.247,610.538 720.806,580.777 721.365,554.333 721.924,579.577 722.484,554.625 723.043,579.243 723.602,585.134 724.161,623.552 724.721,608.765 725.28,627.726 725.839,631.112 726.398,635.464 726.958,637.976 727.517,642.841 728.076,631.511 728.635,651.605 729.195,686.784 729.754,687.212 730.313,720.223 730.872,718.714 731.432,683.084 731.991,689.087 732.55,704.782 733.109,687.564 733.669,687.812 734.228,669.896 734.787,669.646 735.346,656.892 735.906,660.495 736.465,694.861 737.024,744.227 737.583,737.791 738.143,734.964 738.702,766.114 739.261,765.643 739.82,733.376 740.38,717.156 740.939,716.964 741.498,718.04 742.057,720.119 742.617,701.05 743.176,700.316 743.735,700.672 744.294,701.201 744.854,718.78 745.413,715.083 745.972,701.211 746.531,716.094 747.091,664.236 747.65,652.902 748.209,673.728 748.768,674.736 749.328,659.694 749.887,645.439 750.446,660.962 751.005,679.338 751.565,665.705 752.124,698.761 752.683,681.031 753.242,679.793 753.802,714.767 754.361,698.469 754.92,684.85 755.479,697.906 756.039,663.733 756.598,681.417 757.157,697.367 757.716,698.974 758.276,730.207 758.835,743.753 759.394,774.232 759.953,789.005 760.513,787.907 761.072,796.285 761.631,822.815 762.19,816.898 762.75,761.901 763.309,737.365 763.868,716.984 764.427,714.142 764.987,712.913 765.546,741.368 766.105,689.162 766.664,702.414 767.224,716.897 767.783,714.73 768.342,697.122 768.901,710.816 769.461,692.03 770.02,692.251 770.579,711.603 771.138,726.182 771.698,656.397 772.257,626.837 772.816,614.983 773.375,649.991 773.935,649.972 774.494,637.154 775.053,672.015 775.612,672.012 776.172,640.338 776.731,642.912 777.29,648.694 777.849,680.73 778.409,665.876 778.968,651.289 779.527,668.376 780.086,667.682 780.646,657.399 781.205,658.005 781.764,629.033 782.323,664.179 782.883,650.004 783.442,649.066 784.001,682.816 784.56,714.445 785.12,713.944 785.679,712.504 786.238,681.734 786.797,697.798 787.357,714.465 787.916,725.903 788.475,677.611 789.034,660.054 789.594,662.451 790.153,667.84 790.712,635.373 791.271,635.718 791.831,637.095 792.39,643.613 792.949,645.426 793.508,633.522 794.068,619.206 794.627,620.978 795.186,641.195 795.745,677.906 796.305,676.224 796.864,642.295 797.423,628.044 797.982,616.609 798.542,636.62 799.101,637.536 799.66,625.168 800.219,678.342 800.779,675.776 801.338,657.634 801.897,675.538 802.456,694.07 803.016,694.016 803.575,658.295 804.134,689.897 804.693,742.767 805.253,707.556 805.812,720.125 806.371,699.13 806.931,716.287 807.49,714.852 808.049,730.831 808.608,746.488 809.168,726.021 809.727,722.543 810.286,688.459 810.845,752.708 811.405,746.814 811.964,731.106 812.523,731.758 813.082,712.074 813.642,714.318 814.201,713.901 814.76,730.184 815.319,726.918 815.879,726.609 816.438,722.558 816.997,735.784 817.556,721.303 818.116,701.811 818.675,702.03 819.234,699.533 819.793,717.079 820.353,748.451 820.912,746.521 821.471,791.04 822.03,818.507 822.59,810.049 823.149,806.02 823.708,799.847 824.267,776.785 824.827,788.62 825.386,782.663 825.945,762.618 826.504,743.801 827.064,726.908 827.623,727.305 828.182,726.031 828.741,737.02 829.301,766.381 829.86,764.018 830.419,776.503 830.978,771.618 831.538,736.336 832.097,720.213 832.656,700.384 833.215,701.469 833.775,717.96 834.334,737.074 834.893,750.41 835.452,728.903 836.012,727.168 836.571,726.79 837.13,706.483 837.689,723.01 838.249,691.56 838.808,723.733 839.367,721.569 839.926,703.277 840.486,685.308 841.045,701.117 841.604,682.569 842.163,646.949 842.723,644.315 843.282,630.378 843.841,633.608 844.4,683.199 844.96,697.056 845.519,727.058 846.078,723.892 846.637,705.096 847.197,657.572 847.756,622.312 848.315,628.081 848.874,630.783 849.434,648.616 849.993,634.67 850.552,684.185 851.111,667.456 851.671,664.75 852.23,666.23 852.789,653.924 853.348,656.753 853.908,659.243 854.467,645.687 855.026,601.312 855.585,623.535 856.145,609.729 856.704,615.164 857.263,635.463 857.822,635.357 858.382,670.544 858.941,675.039 859.5,645.625 860.059,665.752 860.619,631.246 861.178,702.297 861.737,684.601 862.296,667.938 862.856,653.752 863.415,607.548 863.974,594.61 864.533,613.088 865.093,582.544 865.652,571.743 866.211,574.402 866.77,597.89 867.33,591.304 867.889,599.884 868.448,621.858 869.007,630.2 869.567,634.488 870.126,622.836 870.685,576.526 871.244,583.288 871.804,610.06 872.363,634.234 872.922,638.969 873.481,626.482 874.041,597.179 874.6,617.808 875.159,618.084 875.718,606.548 876.278,611.072 876.837,600.144 877.396,637.902 877.955,624.339 878.515,612.18 879.074,620.261 879.633,657.947 880.192,645.157 880.752,647.338 881.311,630.067 881.87,667.422 882.429,637.655 882.989,608.66 883.548,610.953 884.107,614.653 884.666,648.333 885.226,651.591 885.785,670.183 886.344,683.31 886.903,665.758 887.463,652.66 888.022,689.195 888.581,673.501 889.14,709.38 889.7,709.441 890.259,708.954 890.818,726.457 891.377,711.65 891.937,728.611 892.496,730.414 893.055,732.495 893.614,749.584 894.174,750.298 894.733,763.141 895.292,756.216 895.851,735.235 896.411,731.087 896.97,713.755 897.529,692.659 898.088,742.051 898.648,759.44 899.207,771.056 899.766,784.884 900.325,795.689 900.885,792.69 901.444,720.965 902.003,732.016 902.562,680.542 903.122,698.745 903.681,714.302 904.24,695.954 904.799,693.524 905.359,726.082 905.918,741.134 906.477,737.924 907.036,735.836 907.596,766.966 908.155,759.922 908.714,739.321 909.273,716.901 909.833,727.403 910.392,757.418 910.951,753.476 911.51,731.867 912.07,733.43 912.629,712.279 913.188,708.783 913.747,707.799 914.307,722.789 914.866,735.061 915.425,766.179 915.984,778.629 916.544,772.801 917.103,782.629 917.662,773.312 918.221,768.673 918.781,760.789 919.34,768.932 919.899,749.244 920.458,715 921.018,714.031 921.577,727.12 922.136,707.77 922.695,708.504 923.255,692.016 923.814,690.715 924.373,676.435 924.932,659.443 925.492,643.803 926.051,662.983 926.61,646.683 927.169,615.385 927.729,618.849 928.288,623.785 928.847,611.314 929.406,628.478 929.966,598.574 930.525,603.252 931.084,571.267 931.644,593.604 932.203,615.45 932.762,602.166 933.321,621.552 933.881,626.685 934.44,615.509 934.999,638.065 935.558,643.615 936.118,659.317 936.677,657.86 937.236,657.174 937.795,691.54 938.355,703.442 938.914,702.054 939.473,694.873 940.032,694.587 940.592,643.682 941.151,628.98 941.71,615.466 942.269,635.358 942.829,639.723 943.388,642.358 943.947,644.031 944.506,648.071 945.066,648.08 945.625,637.996 946.184,656.868 946.743,645.962 947.303,646.104 947.862,633.627 948.421,605.036 948.98,624.063 949.54,626.229 950.099,660.284 950.658,665.065 951.217,632.244 951.777,637.231 952.336,654.849 952.895,657.153 953.454,643.163 954.014,658.077 954.573,662.564 955.132,681.732 955.691,644.665 956.251,612.631 956.81,631.073 957.369,679.268 957.928,679.634 958.488,711.566 959.047,707.823 959.606,721.79 960.165,720.234 960.725,737.316 961.284,747.154 961.843,744.354 962.402,708.413 962.962,741.987 963.521,739.592 964.08,688.303 964.639,689.616 965.199,688.669 965.758,705.96 966.317,716.972 966.876,759.268 967.436,725.493 967.995,691.958 968.554,658.033 969.113,664.617 969.673,683.303 970.232,682.746 970.791,682.321 971.35,699.449 971.91,664.473 972.469,681.413 973.028,680.754 973.587,680.847 974.147,680.15 974.706,678.53 975.265,660.368 975.824,642.537 976.384,663.116 976.943,710.412 977.502,710.914 978.061,724.061 978.621,687.91 979.18,687.384 979.739,667.506 980.298,685.491 980.858,686.626 981.417,672.557 981.976,705.288 982.535,705.115 983.095,672.038 983.654,675.029 984.213,677.664 984.772,676.521 985.332,679.526 985.891,711.7 986.45,726.945 987.009,708.308 987.569,674.867 988.128,677.141 988.687,692.441 989.246,710.931 989.806,694.638 990.365,679.476 990.924,646.439 991.483,670.733 992.043,703.571 992.602,703.727 993.161,718.004 993.72,698.588 994.28,700.175 994.839,667.181 995.398,684.679 995.957,652.881 996.517,685.908 997.076,687.025 997.635,704.643 998.194,715.869 998.754,701.274 999.313,668.555 999.872,664.751 1000.43,694.682 1000.99,695.996 1001.55,662.394 1002.11,680.88 1002.67,667.158 1003.23,651.244 1003.79,619.31 1004.35,619.768 1004.91,637.536 1005.46,656.658 1006.02,686.58 1006.58,665.728 1007.14,663.872 1007.7,649.069 1008.26,651.7 1008.82,637.338 1009.38,590.482 1009.94,594.61 1010.5,582.613 1011.06,602.69 1011.62,606.114 1012.18,580.745 1012.73,604.132 1013.29,593.337 1013.85,596.378 1014.41,602.065 1014.97,604.983 1015.53,606.533 1016.09,595.327 1016.65,603.95 1017.21,559.767 1017.77,566.62 1018.33,574.428 1018.89,582.421 1019.45,636.144 1020.01,607.262 1020.56,597.956 1021.12,602.015 1021.68,579.253 1022.24,585.663 1022.8,592.228 1023.36,646.926 1023.92,647.444 1024.48,615.84 1025.04,619.018 1025.6,623.998 1026.16,629.127 1026.72,633.068 1027.28,637.315 1027.83,656.84 1028.39,624.127 1028.95,612.517 1029.51,632.563 1030.07,635.897 1030.63,618.567 1031.19,622.119 1031.75,622.558 1032.31,627.654 1032.87,660.402 1033.43,663.532 1033.99,680.746 1034.55,668.946 1035.1,670.42 1035.66,672.587 1036.22,638.818 1036.78,672.025 1037.34,656.858 1037.9,672.59 1038.46,687.551 1039.02,672.965 1039.58,691.248 1040.14,694.591 1040.7,692.594 1041.26,690.799 1041.82,675.45 1042.38,673.063 1042.93,676.073 1043.49,677.608 1044.05,679.29 1044.61,662.738 1045.17,694.52 1045.73,698.423 1046.29,717.046 1046.85,729.75 1047.41,730.059 1047.97,744.818 1048.53,759.764 1049.09,737.409 1049.65,735.225 1050.2,733.256 1050.76,728.276 1051.32,710.29 1051.88,708.975 1052.44,722.067 1053,703.955 1053.56,670.008 1054.12,690.666 1054.68,725.613 1055.24,707.249 1055.8,705.372 1056.36,691.168 1056.92,723.557 1057.48,757.617 1058.03,771.562 1058.59,765.241 1059.15,780.736 1059.71,793.617 1060.27,836.329 1060.83,811.157 1061.39,800.566 1061.95,796.461 1062.51,770.582 1063.07,768.583 1063.63,779.418 1064.19,762.894 1064.75,807.064 1065.3,800.725 1065.86,781.095 1066.42,796.382 1066.98,774.056 1067.54,750.545 1068.1,743.547 1068.66,741.251 1069.22,753.998 1069.78,735.078 1070.34,713.226 1070.9,747.056 1071.46,739.384 1072.02,737.497 1072.57,735.284 1073.13,718.909 1073.69,715.743 1074.25,714.704 1074.81,741.822 1075.37,751.34 1075.93,780.087 1076.49,755.657 1077.05,736.898 1077.61,718.346 1078.17,718.774 1078.73,730.5 1079.29,728.798 1079.85,708.537 1080.4,737.17 1080.96,716.63 1081.52,699.629 1082.08,682.012 1082.64,680.707 1083.2,663.136 1083.76,680.971 1084.32,680.521 1084.88,663.039 1085.44,677.083 1086,645.752 1086.56,647.469 1087.12,681.288 1087.67,628.562 1088.23,646.152 1088.79,647.376 1089.35,681.392 1089.91,680.024 1090.47,695.557 1091.03,697.319 1091.59,727.569 1092.15,724.442 1092.71,689.153 1093.27,710.635 1093.83,706.892 1094.39,688.925 1094.94,701.356 1095.5,683.867 1096.06,682.044 1096.62,667.023 1097.18,670.64 1097.74,656.387 1098.3,709.005 1098.86,703.199 1099.42,703.356 1099.98,703.764 1100.54,717.009 1101.1,716.107 1101.66,699.252 1102.22,697.159 1102.77,697.028 1103.33,696.025 1103.89,693.113 1104.45,709.73 1105.01,694.361 1105.57,695.158 1106.13,694.942 1106.69,676.27 1107.25,708.046 1107.81,721.183 1108.37,720.128 1108.93,765.927 1109.49,763.094 1110.04,726.411 1110.6,709.45 1111.16,738.278 1111.72,703.789 1112.28,701.209 1112.84,685.945 1113.4,666.953 1113.96,698.508 1114.52,729.997 1115.08,711.077 1115.64,723.952 1116.2,721.376 1116.76,688.549 1117.31,670.812 1117.87,654.901 1118.43,671.622 1118.99,640.306 1119.55,628.693 1120.11,630.331 1120.67,650.965 1121.23,669.825 1121.79,652.049 1122.35,666.203 1122.91,684.741 1123.47,698.234 1124.03,730.484 1124.59,711.393 1125.14,690.429 1125.7,720.411 1126.26,769.239 1126.82,763.275 1127.38,760.366 1127.94,759.853 1128.5,737.984 1129.06,716.444 1129.62,729.191 1130.18,706.319 1130.74,719.087 1131.3,733.263 1131.86,745.714 1132.41,744.489 1132.97,742.524 1133.53,740.166 1134.09,702.126 1134.65,684.541 1135.21,668.102 1135.77,685.483 1136.33,689.347 1136.89,704.504 1137.45,685.55 1138.01,714.008 1138.57,710.512 1139.13,708.316 1139.68,727.698 1140.24,739.622 1140.8,738.229 1141.36,718.588 1141.92,704.759 1142.48,689.273 1143.04,686.281 1143.6,717.52 1144.16,698.923 1144.72,701.418 1145.28,717.739 1145.84,715.537 1146.4,730.755 1146.96,665.274 1147.51,714.301 1148.07,713.625 1148.63,711.494 1149.19,710.768 1149.75,675.509 1150.31,679.416 1150.87,696.414 1151.43,727.506 1151.99,710.479 1152.55,693.063 1153.11,677.213 1153.67,657.322 1154.23,692.144 1154.78,692.99 1155.34,705.366 1155.9,691.237 1156.46,706.743 1157.02,692.897 1157.58,676.252 1158.14,694.38 1158.7,710.006 1159.26,741.812 1159.82,738.317 1160.38,751.045 1160.94,750.552 1161.5,702.207 1162.05,667.443 1162.61,654.182 1163.17,689.858 1163.73,686.495 1164.29,720.438 1164.85,718.917 1165.41,716.814 1165.97,698.885 1166.53,698.395 1167.09,702.114 1167.65,718.782 1168.21,717.671 1168.77,752.655 1169.33,752.435 1169.88,731.769 1170.44,712.7 1171,712.66 1171.56,696.861 1172.12,712.41 1172.68,691.835 1173.24,724.207 1173.8,753.696 1174.36,768.296 1174.92,765.922 1175.48,746.918 1176.04,774.587 1176.6,785.342 1177.15,764.361 1177.71,778.197 1178.27,774.835 1178.83,737.786 1179.39,701.996 1179.95,703.495 1180.51,750.266 1181.07,749.137 1181.63,745.948 1182.19,694.231 1182.75,692.724 1183.31,708.993 1183.87,726.816 1184.43,728.18 1184.98,755.549 1185.54,734.933 1186.1,719.012 1186.66,717.122 1187.22,730.807 1187.78,728.731 1188.34,726.735 1188.9,707.477 1189.46,706.661 1190.02,694.261 1190.58,693.322 1191.14,675.659 1191.7,671.552 1192.25,686.98 1192.81,685.604 1193.37,702.139 1193.93,685.081 1194.49,702.197 1195.05,655.529 1195.61,609.694 1196.17,628.459 1196.73,660.628 1197.29,664.082 1197.85,667.768 1198.41,648.3 1198.97,664.89 1199.52,678.775 1200.08,692.949 1200.64,688.908 1201.2,655.768 1201.76,658.998 1202.32,694.127 1202.88,678.212 1203.44,695.47 1204,695.736 1204.56,694.721 1205.12,680.522 1205.68,660.806 1206.24,673.588 1206.8,675.042 1207.35,674.611 1207.91,692.435 1208.47,680.793 1209.03,680.518 1209.59,662.43 1210.15,647.247 1210.71,631.911 1211.27,620.08 1211.83,607.622 1212.39,628.849 1212.95,634.355 1213.51,652.483 1214.07,657.991 1214.62,641.816 1215.18,610.39 1215.74,616.233 1216.3,608.585 1216.86,615.872 1217.42,617.702 1217.98,605.499 1218.54,645.933 1219.1,631.267 1219.66,668.731 1220.22,631.268 1220.78,617.802 1221.34,620.322 1221.89,672.973 1222.45,676.351 1223.01,693.279 1223.57,708.964 1224.13,705.726 1224.69,673.345 1225.25,675.637 1225.81,645.905 1226.37,648.004 1226.93,618.563 1227.49,608.749 1228.05,645.747 1228.61,644.791 1229.17,664.252 1229.72,666.231 1230.28,666.394 1230.84,697.255 1231.4,732.942 1231.96,735.573 1232.52,766.962 1233.08,765.165 1233.64,776.011 1234.2,772.482 1234.76,783.152 1235.32,797.542 1235.88,776.647 1236.44,788.251 1236.99,782.238 1237.55,792.393 1238.11,786.974 1238.67,768.303 1239.23,778.626 1239.79,790.154 1240.35,766.969 1240.91,779.014 1241.47,758.295 1242.03,703.992 1242.59,671.093 1243.15,654.672 1243.71,655.928 1244.26,671.178 1244.82,690.264 1245.38,705.988 1245.94,690.786 1246.5,690.849 1247.06,740.247 1247.62,717.074 1248.18,747.33 1248.74,758.605 1249.3,770.236 1249.86,734.191 1250.42,781.848 1250.98,727.6 1251.54,709.984 1252.09,693.173 1252.65,690.188 1253.21,688.493 1253.77,705.926 1254.33,688.89 1254.89,671.931 1255.45,641.186 1256.01,660.421 1256.57,645.893 1257.13,630.771 1257.69,635.363 1258.25,651.591 1258.81,635.527 1259.36,634.524 1259.92,641.457 1260.48,611.982 1261.04,598.569 1261.6,586.919 1262.16,557.458 1262.72,579.076 1263.28,597.837 1263.84,583.256 1264.4,586.972 1264.96,623.352 1265.52,626.01 1266.08,611.258 1266.63,611.729 1267.19,613.132 1267.75,631.912 1268.31,585.631 1268.87,637.217 1269.43,640.171 1269.99,628.213 1270.55,629.633 1271.11,666.374 1271.67,671.484 1272.23,656.874 1272.79,625.589 1273.35,645.065 1273.91,617.656 1274.46,621.687 1275.02,642.909 1275.58,643.931 1276.14,613.859 1276.7,606.334 1277.26,595.026 1277.82,600.108 1278.38,621.955 1278.94,639.702 1279.5,642.843 1280.06,692.667 1280.62,707.955 1281.18,710.633 1281.73,692.04 1282.29,658.82 1282.85,677.079 1283.41,680.178 1283.97,697.584 1284.53,665.488 1285.09,634.854 1285.65,651.911 1286.21,687.245 1286.77,690.538 1287.33,704.956 1287.89,717.972 1288.45,733.403 1289,777.236 1289.56,774.512 1290.12,769.676 1290.68,760.264 1291.24,741.828 1291.8,736.77 1292.36,700.906 1292.92,730.479 1293.48,693.742 1294.04,713.024 1294.6,709.794 1295.16,643.2 1295.72,661.298 1296.28,679.86 1296.83,728.253 1297.39,771.85 1297.95,751.278 1298.51,763.794 1299.07,775.818 1299.63,804.56 1300.19,798.178 1300.75,777.209 1301.31,783.673 1301.87,767.343 1302.43,730.682 1302.99,730.427 1303.55,726.706 1304.1,755.047 1304.66,781.688 1305.22,792.362 1305.78,784.674 1306.34,765.697 1306.9,759.068 1307.46,738.403 1308.02,716.59 1308.58,699.733 1309.14,698.985 1309.7,727.617 1310.26,726.203 1310.82,703.967 1311.38,703.502 1311.93,703.26 1312.49,736.704 1313.05,735.351 1313.61,749.395 1314.17,765.964 1314.73,775.005 1315.29,775.014 1315.85,767.443 1316.41,759.14 1316.97,757.703 1317.53,739.744 1318.09,700.206 1318.65,685.816 1319.2,667.459 1319.76,684.21 1320.32,651.301 1320.88,652.666 1321.44,670.013 1322,706.4 1322.56,738.678 1323.12,733.61 1323.68,713.325 1324.24,692.254 1324.8,660.728 1325.36,680.304 1325.92,647.718 1326.47,648.311 1327.03,665.679 1327.59,666.44 1328.15,647.024 1328.71,617.024 1329.27,623.45 1329.83,647.367 1330.39,611.94 1330.95,615.954 1331.51,652.753 1332.07,652.705 1332.63,624.102 1333.19,611.055 1333.75,598.524 1334.3,602.651 1334.86,590.444 1335.42,616.139 1335.98,605.192 1336.54,625.038 1337.1,609.698 1337.66,676.61 1338.22,692.918 1338.78,707.74 1339.34,703.678 1339.9,717.064 1340.46,681.539 1341.02,648.38 1341.57,647.503 1342.13,634.931 1342.69,637.982 1343.25,660.048 1343.81,645.93 1344.37,646.281 1344.93,650.584 1345.49,638.325 1346.05,637.967 1346.61,610.607 1347.17,611.597 1347.73,629.063 1348.29,650.586 1348.84,667.31 1349.4,684.082 1349.96,684.504 1350.52,686.383 1351.08,653.039 1351.64,620.892 1352.2,607.319 1352.76,611.081 1353.32,628.746 1353.88,648.29 1354.44,695.431 1355,663.187 1355.56,667.009 1356.12,699.527 1356.67,697.283 1357.23,711.555 1357.79,712.191 1358.35,711.044 1358.91,711.787 1359.47,696.283 1360.03,698.546 1360.59,714.535 1361.15,696.508 1361.71,680.612 1362.27,696.771 1362.83,660.795 1363.39,648.993 1363.94,638.398 1364.5,627.248 1365.06,628.79 1365.62,649.374 1366.18,699.502 1366.74,682.851 1367.3,681.811 1367.86,696.831 1368.42,710.013 1368.98,708.244 1369.54,705.723 1370.1,676.012 1370.66,627.373 1371.21,649.497 1371.77,665.906 1372.33,665.919 1372.89,647.759 1373.45,648.62 1374.01,629.455 1374.57,618.362 1375.13,621.164 1375.69,640.82 1376.25,661.454 1376.81,680.117 1377.37,714.585 1377.93,712.753 1378.49,664.07 1379.04,636.654 1379.6,591.73 1380.16,584.606 1380.72,604.901 1381.28,608.762 1381.84,626.781 1382.4,611.408 1382.96,600.258 1383.52,621.263 1384.08,591.455 1384.64,592.358 1385.2,596.04 1385.76,584.081 1386.31,637.345 1386.87,636.149 1387.43,672.83 1387.99,674.753 1388.55,691.03 1389.11,675.163 1389.67,675.736 1390.23,680.183 1390.79,697.09 1391.35,728.711 1391.91,774.185 1392.47,752.312 1393.03,746.302 1393.58,730.2 1394.14,680.385 1394.7,696.71 1395.26,696.346 1395.82,696.401 1396.38,695.842 1396.94,630.315 1397.5,664.957 1398.06,650.939 1398.62,669.156 1399.18,687.982 1399.74,734.816 1400.3,719.202 1400.86,715.486 1401.41,730.43 1401.97,725.906 1402.53,740.357 1403.09,798.431 1403.65,727.351 1404.21,723.842 1404.77,773.183 1405.33,734.016 1405.89,681.191 1406.45,664.983 1407.01,648.435 1407.57,614.053 1408.13,647.67 1408.68,651.343 1409.24,668.214 1409.8,665.508 1410.36,648.932 1410.92,636.04 1411.48,590.002 1412.04,613.599 1412.6,613.156 1413.16,630.905 1413.72,632.483 1414.28,683.704 1414.84,702.739 1415.4,717.121 1415.95,681.789 1416.51,683.715 1417.07,651.695 1417.63,622.217 1418.19,607.803 1418.75,595.326 1419.31,582.906 1419.87,587.504 1420.43,609.673 1420.99,609.252 1421.55,631.553 1422.11,603.342 1422.67,610.833 1423.23,578.36 1423.78,582.113 1424.34,558.038 1424.9,581.756 1425.46,588.176 1426.02,607.755 1426.58,644.978 1427.14,663.688 1427.7,668.967 1428.26,701.706 1428.82,684.953 1429.38,671.366 1429.94,683.947 1430.5,686.179 1431.05,704.941 1431.61,686.978 1432.17,654.563 1432.73,673.767 1433.29,644.677 1433.85,650.045 1434.41,633.114 1434.97,636.792 1435.53,670.699 1436.09,685.3 1436.65,685.912 1437.21,735.285 1437.77,702.765 1438.33,716.866 1438.88,748.959 1439.44,764.323 1440,774.439 1440.56,772.102 1441.12,796.96 1441.68,806.428 1442.24,784.568 1442.8,776.833 1443.36,787.24 1443.92,797.479 1444.48,803.456 1445.04,751.881 1445.6,747.613 1446.15,710.18 1446.71,705.013 1447.27,703.651 1447.83,717.357 1448.39,684.242 1448.95,668.566 1449.51,670.511 1450.07,668.932 1450.63,717.044 1451.19,713.926 1451.75,711.029 1452.31,678.291 1452.87,697.414 1453.42,713.968 1453.98,727.348 1454.54,707.553 1455.1,707.028 1455.66,722.414 1456.22,706.433 1456.78,703.566 1457.34,755.49 1457.9,769.21 1458.46,809.235 1459.02,802.817 1459.58,763.274 1460.14,740.912 1460.7,703.367 1461.25,719.429 1461.81,717.17 1462.37,679.974 1462.93,680.456 1463.49,699.115 1464.05,699.852 1464.61,682.232 1465.17,701.94 1465.73,681.408 1466.29,678.978 1466.85,678.854 1467.41,695.631 1467.97,674.671 1468.52,693.841 1469.08,659.539 1469.64,643.621 1470.2,644.214 1470.76,647.089 1471.32,665.048 1471.88,649.5 1472.44,653.185 1473,657.526 1473.56,626.03 1474.12,630.694 1474.68,600.695 1475.24,621.719 1475.79,612.405 1476.35,603.487 1476.91,610.073 1477.47,614.835 1478.03,631.491 1478.59,651.037 1479.15,672.404 1479.71,693.179 1480.27,691.847 1480.83,705.633 1481.39,724.772 1481.95,757.885 1482.51,756.464 1483.07,767.097 1483.62,764.543 1484.18,758.474 1484.74,721.01 1485.3,748.799 1485.86,712.679 1486.42,714.797 1486.98,696.611 1487.54,660.371 1488.1,679.971 1488.66,678.364 1489.22,682.093 1489.78,681.894 1490.34,669.16 1490.89,651.886 1491.45,685.226 1492.01,697.373 1492.57,665.189 1493.13,700.805 1493.69,679.748 1494.25,663.091 1494.81,632.627 1495.37,651.361 1495.93,655.509 1496.49,630.921 1497.05,635.366 1497.61,670.595 1498.16,658.768 1498.72,643.376 1499.28,630.457 1499.84,649.798 1500.4,668.061 1500.96,653.243 1501.52,637.79 1502.08,638.387 1502.64,643.015 1503.2,631.48 1503.76,650.65 1504.32,664.537 1504.88,649.842 1505.44,652.271 1505.99,622.923 1506.55,627.529 1507.11,627.553 1507.67,614.04 1508.23,634.427 1508.79,635.842 1509.35,653.661 1509.91,655.424 1510.47,656.718 1511.03,640.087 1511.59,624.726 1512.15,645.3 1512.71,645.978 1513.26,647.862 1513.82,635.961 1514.38,653.514 1514.94,653.731 1515.5,636.563 1516.06,672.31 1516.62,639.489 1517.18,659.476 1517.74,658.08 1518.3,641.268 1518.86,674.401 1519.42,689.593 1519.98,688.404 1520.53,691.336 1521.09,691.527 1521.65,661.849 1522.21,665.901 1522.77,667.557 1523.33,669.25 1523.89,655.149 1524.45,641.295 1525.01,675.96 1525.57,658.921 1526.13,657.93 1526.69,676.623 1527.25,663.63 1527.81,679.696 1528.36,665.32 1528.92,650.08 1529.48,651.605 1530.04,684.373 1530.6,670.557 1531.16,719.236 1531.72,702.062 1532.28,704.294 1532.84,704.278 1533.4,720.772 1533.96,718.509 1534.52,717.38 1535.08,681.342 1535.63,693.699 1536.19,725.521 1536.75,754.967 1537.31,736.296 1537.87,717.463 1538.43,733.176 1538.99,712.182 1539.55,712.881 1540.11,741.061 1540.67,755.899 1541.23,753.342 1541.79,750.071 1542.35,762.96 1542.9,791.552 1543.46,785.337 1544.02,731.621 1544.58,777.293 1545.14,754.191 1545.7,765.988 1546.26,762.232 1546.82,726.855 1547.38,707.976 1547.94,737.015 1548.5,734.805 1549.06,735.046 1549.62,714.738 1550.18,711.943 1550.73,728.52 1551.29,742.229 1551.85,710.383 1552.41,677.482 1552.97,695.663 1553.53,709.45 1554.09,691.718 1554.65,692.223 1555.21,672.314 1555.77,642.304 1556.33,627.604 1556.89,661.3 1557.45,629.582 1558,631.645 1558.56,618.582 1559.12,621.109 1559.68,609.877 1560.24,612.533 1560.8,646.484 1561.36,648.726 1561.92,636.958 1562.48,639.54 1563.04,609.668 1563.6,612.508 1564.16,618.328 1564.72,639.478 1565.28,656.994 1565.83,661.186 1566.39,649.592 1566.95,680.419 1567.51,645.539 1568.07,650.609 1568.63,672.764 1569.19,660.111 1569.75,642.524 1570.31,661.335 1570.87,678.251 1571.43,664.176 1571.99,680.195 1572.55,679.959 1573.1,663.888 1573.66,613.822 1574.22,584.502 1574.78,556.196 1575.34,612.157 1575.9,614.157 1576.46,617.526 1577.02,617.979 1577.58,621.828 1578.14,624.137 1578.7,626.791 1579.26,612.234 1579.82,647.652 1580.37,651.137 1580.93,668.481 1581.49,635.167 1582.05,638.553 1582.61,660.433 1583.17,643.635 1583.73,630.692 1584.29,650.245 1584.85,633.797 1585.41,620.756 1585.97,627.344 1586.53,664.312 1587.09,695.487 1587.65,693.498 1588.2,694.651 1588.76,711.401 1589.32,676.912 1589.88,723.059 1590.44,718.891 1591,702.632 1591.56,720.038 1592.12,718.238 1592.68,737.8 1593.24,751.405 1593.8,765.296 1594.36,765.76 1594.92,765.572 1595.47,777.194 1596.03,787.086 1596.59,768.981 1597.15,764.899 1597.71,777.033 1598.27,789.32 1598.83,754.523 1599.39,766.031 1599.95,757.942 1600.51,756.057 1601.07,767.719 1601.63,766.77 1602.19,751.06 1602.74,711.41 1603.3,728.084 1603.86,693.554 1604.42,676.694 1604.98,659.326 1605.54,658.239 1606.1,711.121 1606.66,741.194 1607.22,704.329 1607.78,718.535 1608.34,685.582 1608.9,667.345 1609.46,666.107 1610.02,681.664 1610.57,698.865 1611.13,666.013 1611.69,651.41 1612.25,718.723 1612.81,717.825 1613.37,702.975 1613.93,718.322 1614.49,732.085 1615.05,692.721 1615.61,738.586 1616.17,736.189 1616.73,749.912 1617.29,778.193 1617.84,755.493 1618.4,769.369 1618.96,735.296 1619.52,719.28 1620.08,729.851 1620.64,728.602 1621.2,756.309 1621.76,720.311 1622.32,701.459 1622.88,702.608 1623.44,673.55 1624,671.399 1624.56,673.263 1625.11,642.624 1625.67,643.463 1626.23,673.414 1626.79,672.236 1627.35,669.002 1627.91,634.153 1628.47,667.119 1629.03,651.223 1629.59,685.928 1630.15,702.799 1630.71,720.776 1631.27,735.988 1631.83,696.763 1632.39,678.746 1632.94,692.134 1633.5,706.239 1634.06,709.213 1634.62,726.237 1635.18,709.044 1635.74,693.296 1636.3,691.548 1636.86,672.207 1637.42,671.652 1637.98,706.353 1638.54,704.947 1639.1,703.164 1639.66,722.163 1640.21,721.379 1640.77,736.052 1641.33,734.851 1641.89,728.435 1642.45,726.028 1643.01,707.174 1643.57,708 1644.13,707.234 1644.69,689.98 1645.25,687.557 1645.81,685.895 1646.37,699.366 1646.93,732.3 1647.48,712.12 1648.04,713.623 1648.6,697.283 1649.16,700.019 1649.72,715.447 1650.28,697.279 1650.84,683.337 1651.4,685.699 1651.96,687.928 1652.52,738.269 1653.08,738.95 1653.64,723.505 1654.2,738.282 1654.76,748.914 1655.31,733.015 1655.87,717.119 1656.43,653.595 1656.99,641.307 1657.55,621.559 1658.11,640.335 1658.67,642.159 1659.23,626.897 1659.79,644.47 1660.35,661.411 1660.91,681.667 1661.47,646.712 1662.03,649.457 1662.58,663.415 1663.14,678.447 1663.7,695.71 1664.26,696.245 1664.82,696.235 1665.38,696.592 1665.94,682.511 1666.5,683.108 1667.06,667.456 1667.62,665.633 1668.18,663.619 1668.74,665.133 1669.3,709.307 1669.85,719.687 1670.41,698.788 1670.97,695.653 1671.53,661.589 1672.09,648.853 1672.65,637.757 1673.21,671.395 1673.77,671.625 1674.33,673.129 1674.89,690.986 1675.45,724.62 1676.01,689.172 1676.57,675.292 1677.13,660.33 1677.68,675.838 1678.24,661.093 1678.8,660.708 1679.36,662.101 1679.92,683.536 1680.48,682.777 1681.04,666.857 1681.6,702.819 1682.16,717.4 1682.72,716.35 1683.28,683.311 1683.84,685.944 1684.4,640.698 1684.95,642.031 1685.51,631.88 1686.07,619.391 1686.63,638.65 1687.19,656.368 1687.75,688.888 1688.31,654.763 1688.87,652.465 1689.43,671.943 1689.99,672.037 1690.55,669.333 1691.11,665.911 1691.67,649.828 1692.23,700.195 1692.78,683.215 1693.34,668.12 1693.9,696.349 1694.46,692.971 1695.02,676.153 1695.58,674.047 1696.14,723.427 1696.7,702.854 1697.26,698.659 1697.82,714.793 1698.38,683.418 1698.94,680.044 1699.5,713.977 1700.05,682.319 1700.61,680.137 1701.17,666.108 1701.73,682.313 1702.29,649.465 1702.85,665.79 1703.41,664.744 1703.97,681.891 1704.53,729.047 1705.09,695.991 1705.65,677.029 1706.21,676.299 1706.77,695.03 1707.32,711.511 1707.88,710.838 1708.44,676.769 1709,661.18 1709.56,632.273 1710.12,617.391 1710.68,621.339 1711.24,608.702 1711.8,628.966 1712.36,648.614 1712.92,664.33 1713.48,648.471 1714.04,634.628 1714.6,587.788 1715.15,594.222 1715.71,549.255 1716.27,526.035 1716.83,534.396 1717.39,540.515 1717.95,548.812 1718.51,540.717 1719.07,568.811 1719.63,545.65 1720.19,537.326 1720.75,561.707 1721.31,568.071 1721.87,594.174 1722.42,615.603 1722.98,636.237 1723.54,623.265 1724.1,627.736 1724.66,662.595 1725.22,697.24 1725.78,714.41 1726.34,713.973 1726.9,714.069 1727.46,711.144 1728.02,710.687 1728.58,724.796 1729.14,757.732 1729.69,789.428 1730.25,783.321 1730.81,809.106 1731.37,819.637 1731.93,808.824 1732.49,804.924 1733.05,798.231 1733.61,778.984 1734.17,776.629 1734.73,776.092 1735.29,771.96 1735.85,767.32 1736.41,746.872 1736.97,745.74 1737.52,741.575 1738.08,710.852 1738.64,694.614 1739.2,680.949 1739.76,649.607 1740.32,651.619 1740.88,664.987 1741.44,665.451 1742,652.336 1742.56,652.919 1743.12,653.308 1743.68,620.862 1744.24,607.445 1744.79,579.351 1745.35,586.946 1745.91,609.697 1746.47,564.519 1747.03,572.73 1747.59,579.555 1748.15,586.506 1748.71,575.92 1749.27,593.477 1749.83,598.215 1750.39,616.53 1750.95,583.07 1751.51,607.246 1752.06,595.561 1752.62,581.272 1753.18,570.996 1753.74,577.996 1754.3,617.751 1754.86,604.678 1755.42,642.606 1755.98,627.531 1756.54,628.486 1757.1,663.63 1757.66,680.613 1758.22,665.303 1758.78,665.371 1759.34,698.281 1759.89,694.918 1760.45,709.876 1761.01,678.149 1761.57,695.267 1762.13,693.292 1762.69,679.802 1763.25,726.992 1763.81,758.816 1764.37,737.523 1764.93,782.064 1765.49,745.208 1766.05,776.429 1766.61,770.384 1767.16,764.659 1767.72,745.79 1768.28,741.171 1768.84,724.11 1769.4,704.122 1769.96,698.589 1770.52,666.376 1771.08,633.47 1771.64,636.577 1772.2,620.617 1772.76,591.616 1773.32,598.334 1773.88,620.594 1774.43,639.83 1774.99,626.352 1775.55,643.923 1776.11,661.408 1776.67,705.678 1777.23,672.784 1777.79,703.884 1778.35,686.502 1778.91,673.826 1779.47,706.21 1780.03,686.294 1780.59,687.573 1781.15,669.653 1781.71,671.863 1782.26,668.962 1782.82,669.696 1783.38,703.29 1783.94,703.026 1784.5,702.179 1785.06,716.283 1785.62,720.234 1786.18,716.811 1786.74,715.791 1787.3,728.2 1787.86,707.704 1788.42,707.975 1788.98,688.633 1789.53,703.68 1790.09,684.828 1790.65,701.525 1791.21,751.042 1791.77,716.981 1792.33,733.501 1792.89,732.436 1793.45,729.323 1794.01,731.577 1794.57,744.088 1795.13,737.248 1795.69,751.288 1796.25,783.196 1796.8,793.289 1797.36,786.992 1797.92,768.509 1798.48,763.174 1799.04,775.279 1799.6,785.316 1800.16,794.326 1800.72,770.372 1801.28,764.274 1801.84,724.948 1802.4,724.771 1802.96,739.675 1803.52,721.679 1804.08,668.999 1804.63,650.394 1805.19,639.462 1805.75,674.902 1806.31,672.94 1806.87,677.096 1807.43,676.409 1807.99,709.28 1808.55,691.569 1809.11,670.539 1809.67,653.977 1810.23,641.262 1810.79,661.801 1811.35,646.756 1811.9,634.89 1812.46,656.883 1813.02,611.47 1813.58,614.701 1814.14,588.296 1814.7,581.809 1815.26,586.541 1815.82,627.154 1816.38,645.158 1816.94,631.82 1817.5,612.041 1818.06,581.877 1818.62,582.512 1819.18,520.736 1819.73,577.183 1820.29,565.189 1820.85,602.744 1821.41,592.856 1821.97,614.913 1822.53,680.212 1823.09,677.25 1823.65,725.317 1824.21,758.289 1824.77,721.06 1825.33,687.537 1825.89,654.822 1826.45,657.647 1827,691.493 1827.56,708.074 1828.12,721.509 1828.68,734.527 1829.24,699.97 1829.8,713.406 1830.36,680.828 1830.92,713.714 1831.48,729.283 1832.04,729.492 1832.6,725.132 1833.16,742.533 1833.72,704.2 1834.27,721.017 1834.83,718.178 1835.39,714.818 1835.95,711.911 1836.51,707.299 1837.07,724.421 1837.63,739.734 1838.19,752.37 \"/>\n<path clip-path=\"url(#clip393)\" d=\"M720.247 688.868 L720.806 688.868 L721.365 688.868 L721.924 688.868 L722.484 688.868 L723.043 688.868 L723.602 688.868 L724.161 688.868 L724.721 688.868 L725.28 688.868 L725.839 688.868 L726.398 688.868 L726.958 688.868 L727.517 688.868 L728.076 688.868 L728.635 688.868 L729.195 688.868 L729.754 688.868 L730.313 688.868 L730.872 688.868 L731.432 688.868 L731.991 688.868 L732.55 688.868 L733.109 688.868 L733.669 688.868 L734.228 688.868 L734.787 688.868 L735.346 688.868 L735.906 688.868 L736.465 688.868 L737.024 688.868 L737.583 688.868 L738.143 688.868 L738.702 688.868 L739.261 688.868 L739.82 688.868 L740.38 688.868 L740.939 688.868 L741.498 688.868 L742.057 688.868 L742.617 688.868 L743.176 688.868 L743.735 688.868 L744.294 688.868 L744.854 688.868 L745.413 688.868 L745.972 688.868 L746.531 688.868 L747.091 688.868 L747.65 688.868 L748.209 688.868 L748.768 688.868 L749.328 688.868 L749.887 688.868 L750.446 688.868 L751.005 688.868 L751.565 688.868 L752.124 688.868 L752.683 688.868 L753.242 688.868 L753.802 688.868 L754.361 688.868 L754.92 688.868 L755.479 688.868 L756.039 688.868 L756.598 688.868 L757.157 688.868 L757.716 688.868 L758.276 688.868 L758.835 688.868 L759.394 688.868 L759.953 688.868 L760.513 688.868 L761.072 688.868 L761.631 688.868 L762.19 688.868 L762.75 688.868 L763.309 688.868 L763.868 688.868 L764.427 688.868 L764.987 688.868 L765.546 688.868 L766.105 688.868 L766.664 688.868 L767.224 688.868 L767.783 688.868 L768.342 688.868 L768.901 688.868 L769.461 688.868 L770.02 688.868 L770.579 688.868 L771.138 688.868 L771.698 688.868 L772.257 688.868 L772.816 688.868 L773.375 688.868 L773.935 688.868 L774.494 688.868 L775.053 688.868 L775.612 688.868 L776.172 688.868 L776.731 688.868 L777.29 688.868 L777.849 688.868 L778.409 688.868 L778.968 688.868 L779.527 688.868 L780.086 688.868 L780.646 688.868 L781.205 688.868 L781.764 688.868 L782.323 688.868 L782.883 688.868 L783.442 688.868 L784.001 688.868 L784.56 688.868 L785.12 688.868 L785.679 688.868 L786.238 688.868 L786.797 688.868 L787.357 688.868 L787.916 688.868 L788.475 688.868 L789.034 688.868 L789.594 688.868 L790.153 688.868 L790.712 688.868 L791.271 688.868 L791.831 688.868 L792.39 688.868 L792.949 688.868 L793.508 688.868 L794.068 688.868 L794.627 688.868 L795.186 688.868 L795.745 688.868 L796.305 688.868 L796.864 688.868 L797.423 688.868 L797.982 688.868 L798.542 688.868 L799.101 688.868 L799.66 688.868 L800.219 688.868 L800.779 688.868 L801.338 688.868 L801.897 688.868 L802.456 688.868 L803.016 688.868 L803.575 688.868 L804.134 688.868 L804.693 688.868 L805.253 688.868 L805.812 688.868 L806.371 688.868 L806.931 688.868 L807.49 688.868 L808.049 688.868 L808.608 688.868 L809.168 688.868 L809.727 688.868 L810.286 688.868 L810.845 688.868 L811.405 688.868 L811.964 688.868 L812.523 688.868 L813.082 688.868 L813.642 688.868 L814.201 688.868 L814.76 688.868 L815.319 688.868 L815.879 688.868 L816.438 688.868 L816.997 688.868 L817.556 688.868 L818.116 688.868 L818.675 688.868 L819.234 688.868 L819.793 688.868 L820.353 688.868 L820.912 688.868 L821.471 688.868 L822.03 688.868 L822.59 688.868 L823.149 688.868 L823.708 688.868 L824.267 688.868 L824.827 688.868 L825.386 688.868 L825.945 688.868 L826.504 688.868 L827.064 688.868 L827.623 688.868 L828.182 688.868 L828.741 688.868 L829.301 688.868 L829.86 688.868 L830.419 688.868 L830.978 688.868 L831.538 688.868 L832.097 688.868 L832.656 688.868 L833.215 688.868 L833.775 688.868 L834.334 688.868 L834.893 688.868 L835.452 688.868 L836.012 688.868 L836.571 688.868 L837.13 688.868 L837.689 688.868 L838.249 688.868 L838.808 688.868 L839.367 688.868 L839.926 688.868 L840.486 688.868 L841.045 688.868 L841.604 688.868 L842.163 688.868 L842.723 688.868 L843.282 688.868 L843.841 688.868 L844.4 688.868 L844.96 688.868 L845.519 688.868 L846.078 688.868 L846.637 688.868 L847.197 688.868 L847.756 688.868 L848.315 688.868 L848.874 688.868 L849.434 688.868 L849.993 688.868 L850.552 688.868 L851.111 688.868 L851.671 688.868 L852.23 688.868 L852.789 688.868 L853.348 688.868 L853.908 688.868 L854.467 688.868 L855.026 688.868 L855.585 688.868 L856.145 688.868 L856.704 688.868 L857.263 688.868 L857.822 688.868 L858.382 688.868 L858.941 688.868 L859.5 688.868 L860.059 688.868 L860.619 688.868 L861.178 688.868 L861.737 688.868 L862.296 688.868 L862.856 688.868 L863.415 688.868 L863.974 688.868 L864.533 688.868 L865.093 688.868 L865.652 688.868 L866.211 688.868 L866.77 688.868 L867.33 688.868 L867.889 688.868 L868.448 688.868 L869.007 688.868 L869.567 688.868 L870.126 688.868 L870.685 688.868 L871.244 688.868 L871.804 688.868 L872.363 688.868 L872.922 688.868 L873.481 688.868 L874.041 688.868 L874.6 688.868 L875.159 688.868 L875.718 688.868 L876.278 688.868 L876.837 688.868 L877.396 688.868 L877.955 688.868 L878.515 688.868 L879.074 688.868 L879.633 688.868 L880.192 688.868 L880.752 688.868 L881.311 688.868 L881.87 688.868 L882.429 688.868 L882.989 688.868 L883.548 688.868 L884.107 688.868 L884.666 688.868 L885.226 688.868 L885.785 688.868 L886.344 688.868 L886.903 688.868 L887.463 688.868 L888.022 688.868 L888.581 688.868 L889.14 688.868 L889.7 688.868 L890.259 688.868 L890.818 688.868 L891.377 688.868 L891.937 688.868 L892.496 688.868 L893.055 688.868 L893.614 688.868 L894.174 688.868 L894.733 688.868 L895.292 688.868 L895.851 688.868 L896.411 688.868 L896.97 688.868 L897.529 688.868 L898.088 688.868 L898.648 688.868 L899.207 688.868 L899.766 688.868 L900.325 688.868 L900.885 688.868 L901.444 688.868 L902.003 688.868 L902.562 688.868 L903.122 688.868 L903.681 688.868 L904.24 688.868 L904.799 688.868 L905.359 688.868 L905.918 688.868 L906.477 688.868 L907.036 688.868 L907.596 688.868 L908.155 688.868 L908.714 688.868 L909.273 688.868 L909.833 688.868 L910.392 688.868 L910.951 688.868 L911.51 688.868 L912.07 688.868 L912.629 688.868 L913.188 688.868 L913.747 688.868 L914.307 688.868 L914.866 688.868 L915.425 688.868 L915.984 688.868 L916.544 688.868 L917.103 688.868 L917.662 688.868 L918.221 688.868 L918.781 688.868 L919.34 688.868 L919.899 688.868 L920.458 688.868 L921.018 688.868 L921.577 688.868 L922.136 688.868 L922.695 688.868 L923.255 688.868 L923.814 688.868 L924.373 688.868 L924.932 688.868 L925.492 688.868 L926.051 688.868 L926.61 688.868 L927.169 688.868 L927.729 688.868 L928.288 688.868 L928.847 688.868 L929.406 688.868 L929.966 688.868 L930.525 688.868 L931.084 688.868 L931.644 688.868 L932.203 688.868 L932.762 688.868 L933.321 688.868 L933.881 688.868 L934.44 688.868 L934.999 688.868 L935.558 688.868 L936.118 688.868 L936.677 688.868 L937.236 688.868 L937.795 688.868 L938.355 688.868 L938.914 688.868 L939.473 688.868 L940.032 688.868 L940.592 688.868 L941.151 688.868 L941.71 688.868 L942.269 688.868 L942.829 688.868 L943.388 688.868 L943.947 688.868 L944.506 688.868 L945.066 688.868 L945.625 688.868 L946.184 688.868 L946.743 688.868 L947.303 688.868 L947.862 688.868 L948.421 688.868 L948.98 688.868 L949.54 688.868 L950.099 688.868 L950.658 688.868 L951.217 688.868 L951.777 688.868 L952.336 688.868 L952.895 688.868 L953.454 688.868 L954.014 688.868 L954.573 688.868 L955.132 688.868 L955.691 688.868 L956.251 688.868 L956.81 688.868 L957.369 688.868 L957.928 688.868 L958.488 688.868 L959.047 688.868 L959.606 688.868 L960.165 688.868 L960.725 688.868 L961.284 688.868 L961.843 688.868 L962.402 688.868 L962.962 688.868 L963.521 688.868 L964.08 688.868 L964.639 688.868 L965.199 688.868 L965.758 688.868 L966.317 688.868 L966.876 688.868 L967.436 688.868 L967.995 688.868 L968.554 688.868 L969.113 688.868 L969.673 688.868 L970.232 688.868 L970.791 688.868 L971.35 688.868 L971.91 688.868 L972.469 688.868 L973.028 688.868 L973.587 688.868 L974.147 688.868 L974.706 688.868 L975.265 688.868 L975.824 688.868 L976.384 688.868 L976.943 688.868 L977.502 688.868 L978.061 688.868 L978.621 688.868 L979.18 688.868 L979.739 688.868 L980.298 688.868 L980.858 688.868 L981.417 688.868 L981.976 688.868 L982.535 688.868 L983.095 688.868 L983.654 688.868 L984.213 688.868 L984.772 688.868 L985.332 688.868 L985.891 688.868 L986.45 688.868 L987.009 688.868 L987.569 688.868 L988.128 688.868 L988.687 688.868 L989.246 688.868 L989.806 688.868 L990.365 688.868 L990.924 688.868 L991.483 688.868 L992.043 688.868 L992.602 688.868 L993.161 688.868 L993.72 688.868 L994.28 688.868 L994.839 688.868 L995.398 688.868 L995.957 688.868 L996.517 688.868 L997.076 688.868 L997.635 688.868 L998.194 688.868 L998.754 688.868 L999.313 688.868 L999.872 688.868 L1000.43 688.868 L1000.99 688.868 L1001.55 688.868 L1002.11 688.868 L1002.67 688.868 L1003.23 688.868 L1003.79 688.868 L1004.35 688.868 L1004.91 688.868 L1005.46 688.868 L1006.02 688.868 L1006.58 688.868 L1007.14 688.868 L1007.7 688.868 L1008.26 688.868 L1008.82 688.868 L1009.38 688.868 L1009.94 688.868 L1010.5 688.868 L1011.06 688.868 L1011.62 688.868 L1012.18 688.868 L1012.73 688.868 L1013.29 688.868 L1013.85 688.868 L1014.41 688.868 L1014.97 688.868 L1015.53 688.868 L1016.09 688.868 L1016.65 688.868 L1017.21 688.868 L1017.77 688.868 L1018.33 688.868 L1018.89 688.868 L1019.45 688.868 L1020.01 688.868 L1020.56 688.868 L1021.12 688.868 L1021.68 688.868 L1022.24 688.868 L1022.8 688.868 L1023.36 688.868 L1023.92 688.868 L1024.48 688.868 L1025.04 688.868 L1025.6 688.868 L1026.16 688.868 L1026.72 688.868 L1027.28 688.868 L1027.83 688.868 L1028.39 688.868 L1028.95 688.868 L1029.51 688.868 L1030.07 688.868 L1030.63 688.868 L1031.19 688.868 L1031.75 688.868 L1032.31 688.868 L1032.87 688.868 L1033.43 688.868 L1033.99 688.868 L1034.55 688.868 L1035.1 688.868 L1035.66 688.868 L1036.22 688.868 L1036.78 688.868 L1037.34 688.868 L1037.9 688.868 L1038.46 688.868 L1039.02 688.868 L1039.58 688.868 L1040.14 688.868 L1040.7 688.868 L1041.26 688.868 L1041.82 688.868 L1042.38 688.868 L1042.93 688.868 L1043.49 688.868 L1044.05 688.868 L1044.61 688.868 L1045.17 688.868 L1045.73 688.868 L1046.29 688.868 L1046.85 688.868 L1047.41 688.868 L1047.97 688.868 L1048.53 688.868 L1049.09 688.868 L1049.65 688.868 L1050.2 688.868 L1050.76 688.868 L1051.32 688.868 L1051.88 688.868 L1052.44 688.868 L1053 688.868 L1053.56 688.868 L1054.12 688.868 L1054.68 688.868 L1055.24 688.868 L1055.8 688.868 L1056.36 688.868 L1056.92 688.868 L1057.48 688.868 L1058.03 688.868 L1058.59 688.868 L1059.15 688.868 L1059.71 688.868 L1060.27 688.868 L1060.83 688.868 L1061.39 688.868 L1061.95 688.868 L1062.51 688.868 L1063.07 688.868 L1063.63 688.868 L1064.19 688.868 L1064.75 688.868 L1065.3 688.868 L1065.86 688.868 L1066.42 688.868 L1066.98 688.868 L1067.54 688.868 L1068.1 688.868 L1068.66 688.868 L1069.22 688.868 L1069.78 688.868 L1070.34 688.868 L1070.9 688.868 L1071.46 688.868 L1072.02 688.868 L1072.57 688.868 L1073.13 688.868 L1073.69 688.868 L1074.25 688.868 L1074.81 688.868 L1075.37 688.868 L1075.93 688.868 L1076.49 688.868 L1077.05 688.868 L1077.61 688.868 L1078.17 688.868 L1078.73 688.868 L1079.29 688.868 L1079.85 688.868 L1080.4 688.868 L1080.96 688.868 L1081.52 688.868 L1082.08 688.868 L1082.64 688.868 L1083.2 688.868 L1083.76 688.868 L1084.32 688.868 L1084.88 688.868 L1085.44 688.868 L1086 688.868 L1086.56 688.868 L1087.12 688.868 L1087.67 688.868 L1088.23 688.868 L1088.79 688.868 L1089.35 688.868 L1089.91 688.868 L1090.47 688.868 L1091.03 688.868 L1091.59 688.868 L1092.15 688.868 L1092.71 688.868 L1093.27 688.868 L1093.83 688.868 L1094.39 688.868 L1094.94 688.868 L1095.5 688.868 L1096.06 688.868 L1096.62 688.868 L1097.18 688.868 L1097.74 688.868 L1098.3 688.868 L1098.86 688.868 L1099.42 688.868 L1099.98 688.868 L1100.54 688.868 L1101.1 688.868 L1101.66 688.868 L1102.22 688.868 L1102.77 688.868 L1103.33 688.868 L1103.89 688.868 L1104.45 688.868 L1105.01 688.868 L1105.57 688.868 L1106.13 688.868 L1106.69 688.868 L1107.25 688.868 L1107.81 688.868 L1108.37 688.868 L1108.93 688.868 L1109.49 688.868 L1110.04 688.868 L1110.6 688.868 L1111.16 688.868 L1111.72 688.868 L1112.28 688.868 L1112.84 688.868 L1113.4 688.868 L1113.96 688.868 L1114.52 688.868 L1115.08 688.868 L1115.64 688.868 L1116.2 688.868 L1116.76 688.868 L1117.31 688.868 L1117.87 688.868 L1118.43 688.868 L1118.99 688.868 L1119.55 688.868 L1120.11 688.868 L1120.67 688.868 L1121.23 688.868 L1121.79 688.868 L1122.35 688.868 L1122.91 688.868 L1123.47 688.868 L1124.03 688.868 L1124.59 688.868 L1125.14 688.868 L1125.7 688.868 L1126.26 688.868 L1126.82 688.868 L1127.38 688.868 L1127.94 688.868 L1128.5 688.868 L1129.06 688.868 L1129.62 688.868 L1130.18 688.868 L1130.74 688.868 L1131.3 688.868 L1131.86 688.868 L1132.41 688.868 L1132.97 688.868 L1133.53 688.868 L1134.09 688.868 L1134.65 688.868 L1135.21 688.868 L1135.77 688.868 L1136.33 688.868 L1136.89 688.868 L1137.45 688.868 L1138.01 688.868 L1138.57 688.868 L1139.13 688.868 L1139.68 688.868 L1140.24 688.868 L1140.8 688.868 L1141.36 688.868 L1141.92 688.868 L1142.48 688.868 L1143.04 688.868 L1143.6 688.868 L1144.16 688.868 L1144.72 688.868 L1145.28 688.868 L1145.84 688.868 L1146.4 688.868 L1146.96 688.868 L1147.51 688.868 L1148.07 688.868 L1148.63 688.868 L1149.19 688.868 L1149.75 688.868 L1150.31 688.868 L1150.87 688.868 L1151.43 688.868 L1151.99 688.868 L1152.55 688.868 L1153.11 688.868 L1153.67 688.868 L1154.23 688.868 L1154.78 688.868 L1155.34 688.868 L1155.9 688.868 L1156.46 688.868 L1157.02 688.868 L1157.58 688.868 L1158.14 688.868 L1158.7 688.868 L1159.26 688.868 L1159.82 688.868 L1160.38 688.868 L1160.94 688.868 L1161.5 688.868 L1162.05 688.868 L1162.61 688.868 L1163.17 688.868 L1163.73 688.868 L1164.29 688.868 L1164.85 688.868 L1165.41 688.868 L1165.97 688.868 L1166.53 688.868 L1167.09 688.868 L1167.65 688.868 L1168.21 688.868 L1168.77 688.868 L1169.33 688.868 L1169.88 688.868 L1170.44 688.868 L1171 688.868 L1171.56 688.868 L1172.12 688.868 L1172.68 688.868 L1173.24 688.868 L1173.8 688.868 L1174.36 688.868 L1174.92 688.868 L1175.48 688.868 L1176.04 688.868 L1176.6 688.868 L1177.15 688.868 L1177.71 688.868 L1178.27 688.868 L1178.83 688.868 L1179.39 688.868 L1179.95 688.868 L1180.51 688.868 L1181.07 688.868 L1181.63 688.868 L1182.19 688.868 L1182.75 688.868 L1183.31 688.868 L1183.87 688.868 L1184.43 688.868 L1184.98 688.868 L1185.54 688.868 L1186.1 688.868 L1186.66 688.868 L1187.22 688.868 L1187.78 688.868 L1188.34 688.868 L1188.9 688.868 L1189.46 688.868 L1190.02 688.868 L1190.58 688.868 L1191.14 688.868 L1191.7 688.868 L1192.25 688.868 L1192.81 688.868 L1193.37 688.868 L1193.93 688.868 L1194.49 688.868 L1195.05 688.868 L1195.61 688.868 L1196.17 688.868 L1196.73 688.868 L1197.29 688.868 L1197.85 688.868 L1198.41 688.868 L1198.97 688.868 L1199.52 688.868 L1200.08 688.868 L1200.64 688.868 L1201.2 688.868 L1201.76 688.868 L1202.32 688.868 L1202.88 688.868 L1203.44 688.868 L1204 688.868 L1204.56 688.868 L1205.12 688.868 L1205.68 688.868 L1206.24 688.868 L1206.8 688.868 L1207.35 688.868 L1207.91 688.868 L1208.47 688.868 L1209.03 688.868 L1209.59 688.868 L1210.15 688.868 L1210.71 688.868 L1211.27 688.868 L1211.83 688.868 L1212.39 688.868 L1212.95 688.868 L1213.51 688.868 L1214.07 688.868 L1214.62 688.868 L1215.18 688.868 L1215.74 688.868 L1216.3 688.868 L1216.86 688.868 L1217.42 688.868 L1217.98 688.868 L1218.54 688.868 L1219.1 688.868 L1219.66 688.868 L1220.22 688.868 L1220.78 688.868 L1221.34 688.868 L1221.89 688.868 L1222.45 688.868 L1223.01 688.868 L1223.57 688.868 L1224.13 688.868 L1224.69 688.868 L1225.25 688.868 L1225.81 688.868 L1226.37 688.868 L1226.93 688.868 L1227.49 688.868 L1228.05 688.868 L1228.61 688.868 L1229.17 688.868 L1229.72 688.868 L1230.28 688.868 L1230.84 688.868 L1231.4 688.868 L1231.96 688.868 L1232.52 688.868 L1233.08 688.868 L1233.64 688.868 L1234.2 688.868 L1234.76 688.868 L1235.32 688.868 L1235.88 688.868 L1236.44 688.868 L1236.99 688.868 L1237.55 688.868 L1238.11 688.868 L1238.67 688.868 L1239.23 688.868 L1239.79 688.868 L1240.35 688.868 L1240.91 688.868 L1241.47 688.868 L1242.03 688.868 L1242.59 688.868 L1243.15 688.868 L1243.71 688.868 L1244.26 688.868 L1244.82 688.868 L1245.38 688.868 L1245.94 688.868 L1246.5 688.868 L1247.06 688.868 L1247.62 688.868 L1248.18 688.868 L1248.74 688.868 L1249.3 688.868 L1249.86 688.868 L1250.42 688.868 L1250.98 688.868 L1251.54 688.868 L1252.09 688.868 L1252.65 688.868 L1253.21 688.868 L1253.77 688.868 L1254.33 688.868 L1254.89 688.868 L1255.45 688.868 L1256.01 688.868 L1256.57 688.868 L1257.13 688.868 L1257.69 688.868 L1258.25 688.868 L1258.81 688.868 L1259.36 688.868 L1259.92 688.868 L1260.48 688.868 L1261.04 688.868 L1261.6 688.868 L1262.16 688.868 L1262.72 688.868 L1263.28 688.868 L1263.84 688.868 L1264.4 688.868 L1264.96 688.868 L1265.52 688.868 L1266.08 688.868 L1266.63 688.868 L1267.19 688.868 L1267.75 688.868 L1268.31 688.868 L1268.87 688.868 L1269.43 688.868 L1269.99 688.868 L1270.55 688.868 L1271.11 688.868 L1271.67 688.868 L1272.23 688.868 L1272.79 688.868 L1273.35 688.868 L1273.91 688.868 L1274.46 688.868 L1275.02 688.868 L1275.58 688.868 L1276.14 688.868 L1276.7 688.868 L1277.26 688.868 L1277.82 688.868 L1278.38 688.868 L1278.94 688.868 L1279.5 688.868 L1280.06 688.868 L1280.62 688.868 L1281.18 688.868 L1281.73 688.868 L1282.29 688.868 L1282.85 688.868 L1283.41 688.868 L1283.97 688.868 L1284.53 688.868 L1285.09 688.868 L1285.65 688.868 L1286.21 688.868 L1286.77 688.868 L1287.33 688.868 L1287.89 688.868 L1288.45 688.868 L1289 688.868 L1289.56 688.868 L1290.12 688.868 L1290.68 688.868 L1291.24 688.868 L1291.8 688.868 L1292.36 688.868 L1292.92 688.868 L1293.48 688.868 L1294.04 688.868 L1294.6 688.868 L1295.16 688.868 L1295.72 688.868 L1296.28 688.868 L1296.83 688.868 L1297.39 688.868 L1297.95 688.868 L1298.51 688.868 L1299.07 688.868 L1299.63 688.868 L1300.19 688.868 L1300.75 688.868 L1301.31 688.868 L1301.87 688.868 L1302.43 688.868 L1302.99 688.868 L1303.55 688.868 L1304.1 688.868 L1304.66 688.868 L1305.22 688.868 L1305.78 688.868 L1306.34 688.868 L1306.9 688.868 L1307.46 688.868 L1308.02 688.868 L1308.58 688.868 L1309.14 688.868 L1309.7 688.868 L1310.26 688.868 L1310.82 688.868 L1311.38 688.868 L1311.93 688.868 L1312.49 688.868 L1313.05 688.868 L1313.61 688.868 L1314.17 688.868 L1314.73 688.868 L1315.29 688.868 L1315.85 688.868 L1316.41 688.868 L1316.97 688.868 L1317.53 688.868 L1318.09 688.868 L1318.65 688.868 L1319.2 688.868 L1319.76 688.868 L1320.32 688.868 L1320.88 688.868 L1321.44 688.868 L1322 688.868 L1322.56 688.868 L1323.12 688.868 L1323.68 688.868 L1324.24 688.868 L1324.8 688.868 L1325.36 688.868 L1325.92 688.868 L1326.47 688.868 L1327.03 688.868 L1327.59 688.868 L1328.15 688.868 L1328.71 688.868 L1329.27 688.868 L1329.83 688.868 L1330.39 688.868 L1330.95 688.868 L1331.51 688.868 L1332.07 688.868 L1332.63 688.868 L1333.19 688.868 L1333.75 688.868 L1334.3 688.868 L1334.86 688.868 L1335.42 688.868 L1335.98 688.868 L1336.54 688.868 L1337.1 688.868 L1337.66 688.868 L1338.22 688.868 L1338.78 688.868 L1339.34 688.868 L1339.9 688.868 L1340.46 688.868 L1341.02 688.868 L1341.57 688.868 L1342.13 688.868 L1342.69 688.868 L1343.25 688.868 L1343.81 688.868 L1344.37 688.868 L1344.93 688.868 L1345.49 688.868 L1346.05 688.868 L1346.61 688.868 L1347.17 688.868 L1347.73 688.868 L1348.29 688.868 L1348.84 688.868 L1349.4 688.868 L1349.96 688.868 L1350.52 688.868 L1351.08 688.868 L1351.64 688.868 L1352.2 688.868 L1352.76 688.868 L1353.32 688.868 L1353.88 688.868 L1354.44 688.868 L1355 688.868 L1355.56 688.868 L1356.12 688.868 L1356.67 688.868 L1357.23 688.868 L1357.79 688.868 L1358.35 688.868 L1358.91 688.868 L1359.47 688.868 L1360.03 688.868 L1360.59 688.868 L1361.15 688.868 L1361.71 688.868 L1362.27 688.868 L1362.83 688.868 L1363.39 688.868 L1363.94 688.868 L1364.5 688.868 L1365.06 688.868 L1365.62 688.868 L1366.18 688.868 L1366.74 688.868 L1367.3 688.868 L1367.86 688.868 L1368.42 688.868 L1368.98 688.868 L1369.54 688.868 L1370.1 688.868 L1370.66 688.868 L1371.21 688.868 L1371.77 688.868 L1372.33 688.868 L1372.89 688.868 L1373.45 688.868 L1374.01 688.868 L1374.57 688.868 L1375.13 688.868 L1375.69 688.868 L1376.25 688.868 L1376.81 688.868 L1377.37 688.868 L1377.93 688.868 L1378.49 688.868 L1379.04 688.868 L1379.6 688.868 L1380.16 688.868 L1380.72 688.868 L1381.28 688.868 L1381.84 688.868 L1382.4 688.868 L1382.96 688.868 L1383.52 688.868 L1384.08 688.868 L1384.64 688.868 L1385.2 688.868 L1385.76 688.868 L1386.31 688.868 L1386.87 688.868 L1387.43 688.868 L1387.99 688.868 L1388.55 688.868 L1389.11 688.868 L1389.67 688.868 L1390.23 688.868 L1390.79 688.868 L1391.35 688.868 L1391.91 688.868 L1392.47 688.868 L1393.03 688.868 L1393.58 688.868 L1394.14 688.868 L1394.7 688.868 L1395.26 688.868 L1395.82 688.868 L1396.38 688.868 L1396.94 688.868 L1397.5 688.868 L1398.06 688.868 L1398.62 688.868 L1399.18 688.868 L1399.74 688.868 L1400.3 688.868 L1400.86 688.868 L1401.41 688.868 L1401.97 688.868 L1402.53 688.868 L1403.09 688.868 L1403.65 688.868 L1404.21 688.868 L1404.77 688.868 L1405.33 688.868 L1405.89 688.868 L1406.45 688.868 L1407.01 688.868 L1407.57 688.868 L1408.13 688.868 L1408.68 688.868 L1409.24 688.868 L1409.8 688.868 L1410.36 688.868 L1410.92 688.868 L1411.48 688.868 L1412.04 688.868 L1412.6 688.868 L1413.16 688.868 L1413.72 688.868 L1414.28 688.868 L1414.84 688.868 L1415.4 688.868 L1415.95 688.868 L1416.51 688.868 L1417.07 688.868 L1417.63 688.868 L1418.19 688.868 L1418.75 688.868 L1419.31 688.868 L1419.87 688.868 L1420.43 688.868 L1420.99 688.868 L1421.55 688.868 L1422.11 688.868 L1422.67 688.868 L1423.23 688.868 L1423.78 688.868 L1424.34 688.868 L1424.9 688.868 L1425.46 688.868 L1426.02 688.868 L1426.58 688.868 L1427.14 688.868 L1427.7 688.868 L1428.26 688.868 L1428.82 688.868 L1429.38 688.868 L1429.94 688.868 L1430.5 688.868 L1431.05 688.868 L1431.61 688.868 L1432.17 688.868 L1432.73 688.868 L1433.29 688.868 L1433.85 688.868 L1434.41 688.868 L1434.97 688.868 L1435.53 688.868 L1436.09 688.868 L1436.65 688.868 L1437.21 688.868 L1437.77 688.868 L1438.33 688.868 L1438.88 688.868 L1439.44 688.868 L1440 688.868 L1440.56 688.868 L1441.12 688.868 L1441.68 688.868 L1442.24 688.868 L1442.8 688.868 L1443.36 688.868 L1443.92 688.868 L1444.48 688.868 L1445.04 688.868 L1445.6 688.868 L1446.15 688.868 L1446.71 688.868 L1447.27 688.868 L1447.83 688.868 L1448.39 688.868 L1448.95 688.868 L1449.51 688.868 L1450.07 688.868 L1450.63 688.868 L1451.19 688.868 L1451.75 688.868 L1452.31 688.868 L1452.87 688.868 L1453.42 688.868 L1453.98 688.868 L1454.54 688.868 L1455.1 688.868 L1455.66 688.868 L1456.22 688.868 L1456.78 688.868 L1457.34 688.868 L1457.9 688.868 L1458.46 688.868 L1459.02 688.868 L1459.58 688.868 L1460.14 688.868 L1460.7 688.868 L1461.25 688.868 L1461.81 688.868 L1462.37 688.868 L1462.93 688.868 L1463.49 688.868 L1464.05 688.868 L1464.61 688.868 L1465.17 688.868 L1465.73 688.868 L1466.29 688.868 L1466.85 688.868 L1467.41 688.868 L1467.97 688.868 L1468.52 688.868 L1469.08 688.868 L1469.64 688.868 L1470.2 688.868 L1470.76 688.868 L1471.32 688.868 L1471.88 688.868 L1472.44 688.868 L1473 688.868 L1473.56 688.868 L1474.12 688.868 L1474.68 688.868 L1475.24 688.868 L1475.79 688.868 L1476.35 688.868 L1476.91 688.868 L1477.47 688.868 L1478.03 688.868 L1478.59 688.868 L1479.15 688.868 L1479.71 688.868 L1480.27 688.868 L1480.83 688.868 L1481.39 688.868 L1481.95 688.868 L1482.51 688.868 L1483.07 688.868 L1483.62 688.868 L1484.18 688.868 L1484.74 688.868 L1485.3 688.868 L1485.86 688.868 L1486.42 688.868 L1486.98 688.868 L1487.54 688.868 L1488.1 688.868 L1488.66 688.868 L1489.22 688.868 L1489.78 688.868 L1490.34 688.868 L1490.89 688.868 L1491.45 688.868 L1492.01 688.868 L1492.57 688.868 L1493.13 688.868 L1493.69 688.868 L1494.25 688.868 L1494.81 688.868 L1495.37 688.868 L1495.93 688.868 L1496.49 688.868 L1497.05 688.868 L1497.61 688.868 L1498.16 688.868 L1498.72 688.868 L1499.28 688.868 L1499.84 688.868 L1500.4 688.868 L1500.96 688.868 L1501.52 688.868 L1502.08 688.868 L1502.64 688.868 L1503.2 688.868 L1503.76 688.868 L1504.32 688.868 L1504.88 688.868 L1505.44 688.868 L1505.99 688.868 L1506.55 688.868 L1507.11 688.868 L1507.67 688.868 L1508.23 688.868 L1508.79 688.868 L1509.35 688.868 L1509.91 688.868 L1510.47 688.868 L1511.03 688.868 L1511.59 688.868 L1512.15 688.868 L1512.71 688.868 L1513.26 688.868 L1513.82 688.868 L1514.38 688.868 L1514.94 688.868 L1515.5 688.868 L1516.06 688.868 L1516.62 688.868 L1517.18 688.868 L1517.74 688.868 L1518.3 688.868 L1518.86 688.868 L1519.42 688.868 L1519.98 688.868 L1520.53 688.868 L1521.09 688.868 L1521.65 688.868 L1522.21 688.868 L1522.77 688.868 L1523.33 688.868 L1523.89 688.868 L1524.45 688.868 L1525.01 688.868 L1525.57 688.868 L1526.13 688.868 L1526.69 688.868 L1527.25 688.868 L1527.81 688.868 L1528.36 688.868 L1528.92 688.868 L1529.48 688.868 L1530.04 688.868 L1530.6 688.868 L1531.16 688.868 L1531.72 688.868 L1532.28 688.868 L1532.84 688.868 L1533.4 688.868 L1533.96 688.868 L1534.52 688.868 L1535.08 688.868 L1535.63 688.868 L1536.19 688.868 L1536.75 688.868 L1537.31 688.868 L1537.87 688.868 L1538.43 688.868 L1538.99 688.868 L1539.55 688.868 L1540.11 688.868 L1540.67 688.868 L1541.23 688.868 L1541.79 688.868 L1542.35 688.868 L1542.9 688.868 L1543.46 688.868 L1544.02 688.868 L1544.58 688.868 L1545.14 688.868 L1545.7 688.868 L1546.26 688.868 L1546.82 688.868 L1547.38 688.868 L1547.94 688.868 L1548.5 688.868 L1549.06 688.868 L1549.62 688.868 L1550.18 688.868 L1550.73 688.868 L1551.29 688.868 L1551.85 688.868 L1552.41 688.868 L1552.97 688.868 L1553.53 688.868 L1554.09 688.868 L1554.65 688.868 L1555.21 688.868 L1555.77 688.868 L1556.33 688.868 L1556.89 688.868 L1557.45 688.868 L1558 688.868 L1558.56 688.868 L1559.12 688.868 L1559.68 688.868 L1560.24 688.868 L1560.8 688.868 L1561.36 688.868 L1561.92 688.868 L1562.48 688.868 L1563.04 688.868 L1563.6 688.868 L1564.16 688.868 L1564.72 688.868 L1565.28 688.868 L1565.83 688.868 L1566.39 688.868 L1566.95 688.868 L1567.51 688.868 L1568.07 688.868 L1568.63 688.868 L1569.19 688.868 L1569.75 688.868 L1570.31 688.868 L1570.87 688.868 L1571.43 688.868 L1571.99 688.868 L1572.55 688.868 L1573.1 688.868 L1573.66 688.868 L1574.22 688.868 L1574.78 688.868 L1575.34 688.868 L1575.9 688.868 L1576.46 688.868 L1577.02 688.868 L1577.58 688.868 L1578.14 688.868 L1578.7 688.868 L1579.26 688.868 L1579.82 688.868 L1580.37 688.868 L1580.93 688.868 L1581.49 688.868 L1582.05 688.868 L1582.61 688.868 L1583.17 688.868 L1583.73 688.868 L1584.29 688.868 L1584.85 688.868 L1585.41 688.868 L1585.97 688.868 L1586.53 688.868 L1587.09 688.868 L1587.65 688.868 L1588.2 688.868 L1588.76 688.868 L1589.32 688.868 L1589.88 688.868 L1590.44 688.868 L1591 688.868 L1591.56 688.868 L1592.12 688.868 L1592.68 688.868 L1593.24 688.868 L1593.8 688.868 L1594.36 688.868 L1594.92 688.868 L1595.47 688.868 L1596.03 688.868 L1596.59 688.868 L1597.15 688.868 L1597.71 688.868 L1598.27 688.868 L1598.83 688.868 L1599.39 688.868 L1599.95 688.868 L1600.51 688.868 L1601.07 688.868 L1601.63 688.868 L1602.19 688.868 L1602.74 688.868 L1603.3 688.868 L1603.86 688.868 L1604.42 688.868 L1604.98 688.868 L1605.54 688.868 L1606.1 688.868 L1606.66 688.868 L1607.22 688.868 L1607.78 688.868 L1608.34 688.868 L1608.9 688.868 L1609.46 688.868 L1610.02 688.868 L1610.57 688.868 L1611.13 688.868 L1611.69 688.868 L1612.25 688.868 L1612.81 688.868 L1613.37 688.868 L1613.93 688.868 L1614.49 688.868 L1615.05 688.868 L1615.61 688.868 L1616.17 688.868 L1616.73 688.868 L1617.29 688.868 L1617.84 688.868 L1618.4 688.868 L1618.96 688.868 L1619.52 688.868 L1620.08 688.868 L1620.64 688.868 L1621.2 688.868 L1621.76 688.868 L1622.32 688.868 L1622.88 688.868 L1623.44 688.868 L1624 688.868 L1624.56 688.868 L1625.11 688.868 L1625.67 688.868 L1626.23 688.868 L1626.79 688.868 L1627.35 688.868 L1627.91 688.868 L1628.47 688.868 L1629.03 688.868 L1629.59 688.868 L1630.15 688.868 L1630.71 688.868 L1631.27 688.868 L1631.83 688.868 L1632.39 688.868 L1632.94 688.868 L1633.5 688.868 L1634.06 688.868 L1634.62 688.868 L1635.18 688.868 L1635.74 688.868 L1636.3 688.868 L1636.86 688.868 L1637.42 688.868 L1637.98 688.868 L1638.54 688.868 L1639.1 688.868 L1639.66 688.868 L1640.21 688.868 L1640.77 688.868 L1641.33 688.868 L1641.89 688.868 L1642.45 688.868 L1643.01 688.868 L1643.57 688.868 L1644.13 688.868 L1644.69 688.868 L1645.25 688.868 L1645.81 688.868 L1646.37 688.868 L1646.93 688.868 L1647.48 688.868 L1648.04 688.868 L1648.6 688.868 L1649.16 688.868 L1649.72 688.868 L1650.28 688.868 L1650.84 688.868 L1651.4 688.868 L1651.96 688.868 L1652.52 688.868 L1653.08 688.868 L1653.64 688.868 L1654.2 688.868 L1654.76 688.868 L1655.31 688.868 L1655.87 688.868 L1656.43 688.868 L1656.99 688.868 L1657.55 688.868 L1658.11 688.868 L1658.67 688.868 L1659.23 688.868 L1659.79 688.868 L1660.35 688.868 L1660.91 688.868 L1661.47 688.868 L1662.03 688.868 L1662.58 688.868 L1663.14 688.868 L1663.7 688.868 L1664.26 688.868 L1664.82 688.868 L1665.38 688.868 L1665.94 688.868 L1666.5 688.868 L1667.06 688.868 L1667.62 688.868 L1668.18 688.868 L1668.74 688.868 L1669.3 688.868 L1669.85 688.868 L1670.41 688.868 L1670.97 688.868 L1671.53 688.868 L1672.09 688.868 L1672.65 688.868 L1673.21 688.868 L1673.77 688.868 L1674.33 688.868 L1674.89 688.868 L1675.45 688.868 L1676.01 688.868 L1676.57 688.868 L1677.13 688.868 L1677.68 688.868 L1678.24 688.868 L1678.8 688.868 L1679.36 688.868 L1679.92 688.868 L1680.48 688.868 L1681.04 688.868 L1681.6 688.868 L1682.16 688.868 L1682.72 688.868 L1683.28 688.868 L1683.84 688.868 L1684.4 688.868 L1684.95 688.868 L1685.51 688.868 L1686.07 688.868 L1686.63 688.868 L1687.19 688.868 L1687.75 688.868 L1688.31 688.868 L1688.87 688.868 L1689.43 688.868 L1689.99 688.868 L1690.55 688.868 L1691.11 688.868 L1691.67 688.868 L1692.23 688.868 L1692.78 688.868 L1693.34 688.868 L1693.9 688.868 L1694.46 688.868 L1695.02 688.868 L1695.58 688.868 L1696.14 688.868 L1696.7 688.868 L1697.26 688.868 L1697.82 688.868 L1698.38 688.868 L1698.94 688.868 L1699.5 688.868 L1700.05 688.868 L1700.61 688.868 L1701.17 688.868 L1701.73 688.868 L1702.29 688.868 L1702.85 688.868 L1703.41 688.868 L1703.97 688.868 L1704.53 688.868 L1705.09 688.868 L1705.65 688.868 L1706.21 688.868 L1706.77 688.868 L1707.32 688.868 L1707.88 688.868 L1708.44 688.868 L1709 688.868 L1709.56 688.868 L1710.12 688.868 L1710.68 688.868 L1711.24 688.868 L1711.8 688.868 L1712.36 688.868 L1712.92 688.868 L1713.48 688.868 L1714.04 688.868 L1714.6 688.868 L1715.15 688.868 L1715.71 688.868 L1716.27 688.868 L1716.83 688.868 L1717.39 688.868 L1717.95 688.868 L1718.51 688.868 L1719.07 688.868 L1719.63 688.868 L1720.19 688.868 L1720.75 688.868 L1721.31 688.868 L1721.87 688.868 L1722.42 688.868 L1722.98 688.868 L1723.54 688.868 L1724.1 688.868 L1724.66 688.868 L1725.22 688.868 L1725.78 688.868 L1726.34 688.868 L1726.9 688.868 L1727.46 688.868 L1728.02 688.868 L1728.58 688.868 L1729.14 688.868 L1729.69 688.868 L1730.25 688.868 L1730.81 688.868 L1731.37 688.868 L1731.93 688.868 L1732.49 688.868 L1733.05 688.868 L1733.61 688.868 L1734.17 688.868 L1734.73 688.868 L1735.29 688.868 L1735.85 688.868 L1736.41 688.868 L1736.97 688.868 L1737.52 688.868 L1738.08 688.868 L1738.64 688.868 L1739.2 688.868 L1739.76 688.868 L1740.32 688.868 L1740.88 688.868 L1741.44 688.868 L1742 688.868 L1742.56 688.868 L1743.12 688.868 L1743.68 688.868 L1744.24 688.868 L1744.79 688.868 L1745.35 688.868 L1745.91 688.868 L1746.47 688.868 L1747.03 688.868 L1747.59 688.868 L1748.15 688.868 L1748.71 688.868 L1749.27 688.868 L1749.83 688.868 L1750.39 688.868 L1750.95 688.868 L1751.51 688.868 L1752.06 688.868 L1752.62 688.868 L1753.18 688.868 L1753.74 688.868 L1754.3 688.868 L1754.86 688.868 L1755.42 688.868 L1755.98 688.868 L1756.54 688.868 L1757.1 688.868 L1757.66 688.868 L1758.22 688.868 L1758.78 688.868 L1759.34 688.868 L1759.89 688.868 L1760.45 688.868 L1761.01 688.868 L1761.57 688.868 L1762.13 688.868 L1762.69 688.868 L1763.25 688.868 L1763.81 688.868 L1764.37 688.868 L1764.93 688.868 L1765.49 688.868 L1766.05 688.868 L1766.61 688.868 L1767.16 688.868 L1767.72 688.868 L1768.28 688.868 L1768.84 688.868 L1769.4 688.868 L1769.96 688.868 L1770.52 688.868 L1771.08 688.868 L1771.64 688.868 L1772.2 688.868 L1772.76 688.868 L1773.32 688.868 L1773.88 688.868 L1774.43 688.868 L1774.99 688.868 L1775.55 688.868 L1776.11 688.868 L1776.67 688.868 L1777.23 688.868 L1777.79 688.868 L1778.35 688.868 L1778.91 688.868 L1779.47 688.868 L1780.03 688.868 L1780.59 688.868 L1781.15 688.868 L1781.71 688.868 L1782.26 688.868 L1782.82 688.868 L1783.38 688.868 L1783.94 688.868 L1784.5 688.868 L1785.06 688.868 L1785.62 688.868 L1786.18 688.868 L1786.74 688.868 L1787.3 688.868 L1787.86 688.868 L1788.42 688.868 L1788.98 688.868 L1789.53 688.868 L1790.09 688.868 L1790.65 688.868 L1791.21 688.868 L1791.77 688.868 L1792.33 688.868 L1792.89 688.868 L1793.45 688.868 L1794.01 688.868 L1794.57 688.868 L1795.13 688.868 L1795.69 688.868 L1796.25 688.868 L1796.8 688.868 L1797.36 688.868 L1797.92 688.868 L1798.48 688.868 L1799.04 688.868 L1799.6 688.868 L1800.16 688.868 L1800.72 688.868 L1801.28 688.868 L1801.84 688.868 L1802.4 688.868 L1802.96 688.868 L1803.52 688.868 L1804.08 688.868 L1804.63 688.868 L1805.19 688.868 L1805.75 688.868 L1806.31 688.868 L1806.87 688.868 L1807.43 688.868 L1807.99 688.868 L1808.55 688.868 L1809.11 688.868 L1809.67 688.868 L1810.23 688.868 L1810.79 688.868 L1811.35 688.868 L1811.9 688.868 L1812.46 688.868 L1813.02 688.868 L1813.58 688.868 L1814.14 688.868 L1814.7 688.868 L1815.26 688.868 L1815.82 688.868 L1816.38 688.868 L1816.94 688.868 L1817.5 688.868 L1818.06 688.868 L1818.62 688.868 L1819.18 688.868 L1819.73 688.868 L1820.29 688.868 L1820.85 688.868 L1821.41 688.868 L1821.97 688.868 L1822.53 688.868 L1823.09 688.868 L1823.65 688.868 L1824.21 688.868 L1824.77 688.868 L1825.33 688.868 L1825.89 688.868 L1826.45 688.868 L1827 688.868 L1827.56 688.868 L1828.12 688.868 L1828.68 688.868 L1829.24 688.868 L1829.8 688.868 L1830.36 688.868 L1830.92 688.868 L1831.48 688.868 L1832.04 688.868 L1832.6 688.868 L1833.16 688.868 L1833.72 688.868 L1834.27 688.868 L1834.83 688.868 L1835.39 688.868 L1835.95 688.868 L1836.51 688.868 L1837.07 688.868 L1837.63 688.868 L1838.19 688.868 L1838.19 679.895 L1837.63 679.895 L1837.07 679.895 L1836.51 679.895 L1835.95 679.895 L1835.39 679.895 L1834.83 679.895 L1834.27 679.895 L1833.72 679.895 L1833.16 679.895 L1832.6 679.895 L1832.04 679.895 L1831.48 679.895 L1830.92 679.895 L1830.36 679.895 L1829.8 679.895 L1829.24 679.895 L1828.68 679.895 L1828.12 679.895 L1827.56 679.895 L1827 679.895 L1826.45 679.895 L1825.89 679.895 L1825.33 679.895 L1824.77 679.895 L1824.21 679.895 L1823.65 679.895 L1823.09 679.895 L1822.53 679.895 L1821.97 679.895 L1821.41 679.895 L1820.85 679.895 L1820.29 679.895 L1819.73 679.895 L1819.18 679.895 L1818.62 679.895 L1818.06 679.895 L1817.5 679.895 L1816.94 679.895 L1816.38 679.895 L1815.82 679.895 L1815.26 679.895 L1814.7 679.895 L1814.14 679.895 L1813.58 679.895 L1813.02 679.895 L1812.46 679.895 L1811.9 679.895 L1811.35 679.895 L1810.79 679.895 L1810.23 679.895 L1809.67 679.895 L1809.11 679.895 L1808.55 679.895 L1807.99 679.895 L1807.43 679.895 L1806.87 679.895 L1806.31 679.895 L1805.75 679.895 L1805.19 679.895 L1804.63 679.895 L1804.08 679.895 L1803.52 679.895 L1802.96 679.895 L1802.4 679.895 L1801.84 679.895 L1801.28 679.895 L1800.72 679.895 L1800.16 679.895 L1799.6 679.895 L1799.04 679.895 L1798.48 679.895 L1797.92 679.895 L1797.36 679.895 L1796.8 679.895 L1796.25 679.895 L1795.69 679.895 L1795.13 679.895 L1794.57 679.895 L1794.01 679.895 L1793.45 679.895 L1792.89 679.895 L1792.33 679.895 L1791.77 679.895 L1791.21 679.895 L1790.65 679.895 L1790.09 679.895 L1789.53 679.895 L1788.98 679.895 L1788.42 679.895 L1787.86 679.895 L1787.3 679.895 L1786.74 679.895 L1786.18 679.895 L1785.62 679.895 L1785.06 679.895 L1784.5 679.895 L1783.94 679.895 L1783.38 679.895 L1782.82 679.895 L1782.26 679.895 L1781.71 679.895 L1781.15 679.895 L1780.59 679.895 L1780.03 679.895 L1779.47 679.895 L1778.91 679.895 L1778.35 679.895 L1777.79 679.895 L1777.23 679.895 L1776.67 679.895 L1776.11 679.895 L1775.55 679.895 L1774.99 679.895 L1774.43 679.895 L1773.88 679.895 L1773.32 679.895 L1772.76 679.895 L1772.2 679.895 L1771.64 679.895 L1771.08 679.895 L1770.52 679.895 L1769.96 679.895 L1769.4 679.895 L1768.84 679.895 L1768.28 679.895 L1767.72 679.895 L1767.16 679.895 L1766.61 679.895 L1766.05 679.895 L1765.49 679.895 L1764.93 679.895 L1764.37 679.895 L1763.81 679.895 L1763.25 679.895 L1762.69 679.895 L1762.13 679.895 L1761.57 679.895 L1761.01 679.895 L1760.45 679.895 L1759.89 679.895 L1759.34 679.895 L1758.78 679.895 L1758.22 679.895 L1757.66 679.895 L1757.1 679.895 L1756.54 679.895 L1755.98 679.895 L1755.42 679.895 L1754.86 679.895 L1754.3 679.895 L1753.74 679.895 L1753.18 679.895 L1752.62 679.895 L1752.06 679.895 L1751.51 679.895 L1750.95 679.895 L1750.39 679.895 L1749.83 679.895 L1749.27 679.895 L1748.71 679.895 L1748.15 679.895 L1747.59 679.895 L1747.03 679.895 L1746.47 679.895 L1745.91 679.895 L1745.35 679.895 L1744.79 679.895 L1744.24 679.895 L1743.68 679.895 L1743.12 679.895 L1742.56 679.895 L1742 679.895 L1741.44 679.895 L1740.88 679.895 L1740.32 679.895 L1739.76 679.895 L1739.2 679.895 L1738.64 679.895 L1738.08 679.895 L1737.52 679.895 L1736.97 679.895 L1736.41 679.895 L1735.85 679.895 L1735.29 679.895 L1734.73 679.895 L1734.17 679.895 L1733.61 679.895 L1733.05 679.895 L1732.49 679.895 L1731.93 679.895 L1731.37 679.895 L1730.81 679.895 L1730.25 679.895 L1729.69 679.895 L1729.14 679.895 L1728.58 679.895 L1728.02 679.895 L1727.46 679.895 L1726.9 679.895 L1726.34 679.895 L1725.78 679.895 L1725.22 679.895 L1724.66 679.895 L1724.1 679.895 L1723.54 679.895 L1722.98 679.895 L1722.42 679.895 L1721.87 679.895 L1721.31 679.895 L1720.75 679.895 L1720.19 679.895 L1719.63 679.895 L1719.07 679.895 L1718.51 679.895 L1717.95 679.895 L1717.39 679.895 L1716.83 679.895 L1716.27 679.895 L1715.71 679.895 L1715.15 679.895 L1714.6 679.895 L1714.04 679.895 L1713.48 679.895 L1712.92 679.895 L1712.36 679.895 L1711.8 679.895 L1711.24 679.895 L1710.68 679.895 L1710.12 679.895 L1709.56 679.895 L1709 679.895 L1708.44 679.895 L1707.88 679.895 L1707.32 679.895 L1706.77 679.895 L1706.21 679.895 L1705.65 679.895 L1705.09 679.895 L1704.53 679.895 L1703.97 679.895 L1703.41 679.895 L1702.85 679.895 L1702.29 679.895 L1701.73 679.895 L1701.17 679.895 L1700.61 679.895 L1700.05 679.895 L1699.5 679.895 L1698.94 679.895 L1698.38 679.895 L1697.82 679.895 L1697.26 679.895 L1696.7 679.895 L1696.14 679.895 L1695.58 679.895 L1695.02 679.895 L1694.46 679.895 L1693.9 679.895 L1693.34 679.895 L1692.78 679.895 L1692.23 679.895 L1691.67 679.895 L1691.11 679.895 L1690.55 679.895 L1689.99 679.895 L1689.43 679.895 L1688.87 679.895 L1688.31 679.895 L1687.75 679.895 L1687.19 679.895 L1686.63 679.895 L1686.07 679.895 L1685.51 679.895 L1684.95 679.895 L1684.4 679.895 L1683.84 679.895 L1683.28 679.895 L1682.72 679.895 L1682.16 679.895 L1681.6 679.895 L1681.04 679.895 L1680.48 679.895 L1679.92 679.895 L1679.36 679.895 L1678.8 679.895 L1678.24 679.895 L1677.68 679.895 L1677.13 679.895 L1676.57 679.895 L1676.01 679.895 L1675.45 679.895 L1674.89 679.895 L1674.33 679.895 L1673.77 679.895 L1673.21 679.895 L1672.65 679.895 L1672.09 679.895 L1671.53 679.895 L1670.97 679.895 L1670.41 679.895 L1669.85 679.895 L1669.3 679.895 L1668.74 679.895 L1668.18 679.895 L1667.62 679.895 L1667.06 679.895 L1666.5 679.895 L1665.94 679.895 L1665.38 679.895 L1664.82 679.895 L1664.26 679.895 L1663.7 679.895 L1663.14 679.895 L1662.58 679.895 L1662.03 679.895 L1661.47 679.895 L1660.91 679.895 L1660.35 679.895 L1659.79 679.895 L1659.23 679.895 L1658.67 679.895 L1658.11 679.895 L1657.55 679.895 L1656.99 679.895 L1656.43 679.895 L1655.87 679.895 L1655.31 679.895 L1654.76 679.895 L1654.2 679.895 L1653.64 679.895 L1653.08 679.895 L1652.52 679.895 L1651.96 679.895 L1651.4 679.895 L1650.84 679.895 L1650.28 679.895 L1649.72 679.895 L1649.16 679.895 L1648.6 679.895 L1648.04 679.895 L1647.48 679.895 L1646.93 679.895 L1646.37 679.895 L1645.81 679.895 L1645.25 679.895 L1644.69 679.895 L1644.13 679.895 L1643.57 679.895 L1643.01 679.895 L1642.45 679.895 L1641.89 679.895 L1641.33 679.895 L1640.77 679.895 L1640.21 679.895 L1639.66 679.895 L1639.1 679.895 L1638.54 679.895 L1637.98 679.895 L1637.42 679.895 L1636.86 679.895 L1636.3 679.895 L1635.74 679.895 L1635.18 679.895 L1634.62 679.895 L1634.06 679.895 L1633.5 679.895 L1632.94 679.895 L1632.39 679.895 L1631.83 679.895 L1631.27 679.895 L1630.71 679.895 L1630.15 679.895 L1629.59 679.895 L1629.03 679.895 L1628.47 679.895 L1627.91 679.895 L1627.35 679.895 L1626.79 679.895 L1626.23 679.895 L1625.67 679.895 L1625.11 679.895 L1624.56 679.895 L1624 679.895 L1623.44 679.895 L1622.88 679.895 L1622.32 679.895 L1621.76 679.895 L1621.2 679.895 L1620.64 679.895 L1620.08 679.895 L1619.52 679.895 L1618.96 679.895 L1618.4 679.895 L1617.84 679.895 L1617.29 679.895 L1616.73 679.895 L1616.17 679.895 L1615.61 679.895 L1615.05 679.895 L1614.49 679.895 L1613.93 679.895 L1613.37 679.895 L1612.81 679.895 L1612.25 679.895 L1611.69 679.895 L1611.13 679.895 L1610.57 679.895 L1610.02 679.895 L1609.46 679.895 L1608.9 679.895 L1608.34 679.895 L1607.78 679.895 L1607.22 679.895 L1606.66 679.895 L1606.1 679.895 L1605.54 679.895 L1604.98 679.895 L1604.42 679.895 L1603.86 679.895 L1603.3 679.895 L1602.74 679.895 L1602.19 679.895 L1601.63 679.895 L1601.07 679.895 L1600.51 679.895 L1599.95 679.895 L1599.39 679.895 L1598.83 679.895 L1598.27 679.895 L1597.71 679.895 L1597.15 679.895 L1596.59 679.895 L1596.03 679.895 L1595.47 679.895 L1594.92 679.895 L1594.36 679.895 L1593.8 679.895 L1593.24 679.895 L1592.68 679.895 L1592.12 679.895 L1591.56 679.895 L1591 679.895 L1590.44 679.895 L1589.88 679.895 L1589.32 679.895 L1588.76 679.895 L1588.2 679.895 L1587.65 679.895 L1587.09 679.895 L1586.53 679.895 L1585.97 679.895 L1585.41 679.895 L1584.85 679.895 L1584.29 679.895 L1583.73 679.895 L1583.17 679.895 L1582.61 679.895 L1582.05 679.895 L1581.49 679.895 L1580.93 679.895 L1580.37 679.895 L1579.82 679.895 L1579.26 679.895 L1578.7 679.895 L1578.14 679.895 L1577.58 679.895 L1577.02 679.895 L1576.46 679.895 L1575.9 679.895 L1575.34 679.895 L1574.78 679.895 L1574.22 679.895 L1573.66 679.895 L1573.1 679.895 L1572.55 679.895 L1571.99 679.895 L1571.43 679.895 L1570.87 679.895 L1570.31 679.895 L1569.75 679.895 L1569.19 679.895 L1568.63 679.895 L1568.07 679.895 L1567.51 679.895 L1566.95 679.895 L1566.39 679.895 L1565.83 679.895 L1565.28 679.895 L1564.72 679.895 L1564.16 679.895 L1563.6 679.895 L1563.04 679.895 L1562.48 679.895 L1561.92 679.895 L1561.36 679.895 L1560.8 679.895 L1560.24 679.895 L1559.68 679.895 L1559.12 679.895 L1558.56 679.895 L1558 679.895 L1557.45 679.895 L1556.89 679.895 L1556.33 679.895 L1555.77 679.895 L1555.21 679.895 L1554.65 679.895 L1554.09 679.895 L1553.53 679.895 L1552.97 679.895 L1552.41 679.895 L1551.85 679.895 L1551.29 679.895 L1550.73 679.895 L1550.18 679.895 L1549.62 679.895 L1549.06 679.895 L1548.5 679.895 L1547.94 679.895 L1547.38 679.895 L1546.82 679.895 L1546.26 679.895 L1545.7 679.895 L1545.14 679.895 L1544.58 679.895 L1544.02 679.895 L1543.46 679.895 L1542.9 679.895 L1542.35 679.895 L1541.79 679.895 L1541.23 679.895 L1540.67 679.895 L1540.11 679.895 L1539.55 679.895 L1538.99 679.895 L1538.43 679.895 L1537.87 679.895 L1537.31 679.895 L1536.75 679.895 L1536.19 679.895 L1535.63 679.895 L1535.08 679.895 L1534.52 679.895 L1533.96 679.895 L1533.4 679.895 L1532.84 679.895 L1532.28 679.895 L1531.72 679.895 L1531.16 679.895 L1530.6 679.895 L1530.04 679.895 L1529.48 679.895 L1528.92 679.895 L1528.36 679.895 L1527.81 679.895 L1527.25 679.895 L1526.69 679.895 L1526.13 679.895 L1525.57 679.895 L1525.01 679.895 L1524.45 679.895 L1523.89 679.895 L1523.33 679.895 L1522.77 679.895 L1522.21 679.895 L1521.65 679.895 L1521.09 679.895 L1520.53 679.895 L1519.98 679.895 L1519.42 679.895 L1518.86 679.895 L1518.3 679.895 L1517.74 679.895 L1517.18 679.895 L1516.62 679.895 L1516.06 679.895 L1515.5 679.895 L1514.94 679.895 L1514.38 679.895 L1513.82 679.895 L1513.26 679.895 L1512.71 679.895 L1512.15 679.895 L1511.59 679.895 L1511.03 679.895 L1510.47 679.895 L1509.91 679.895 L1509.35 679.895 L1508.79 679.895 L1508.23 679.895 L1507.67 679.895 L1507.11 679.895 L1506.55 679.895 L1505.99 679.895 L1505.44 679.895 L1504.88 679.895 L1504.32 679.895 L1503.76 679.895 L1503.2 679.895 L1502.64 679.895 L1502.08 679.895 L1501.52 679.895 L1500.96 679.895 L1500.4 679.895 L1499.84 679.895 L1499.28 679.895 L1498.72 679.895 L1498.16 679.895 L1497.61 679.895 L1497.05 679.895 L1496.49 679.895 L1495.93 679.895 L1495.37 679.895 L1494.81 679.895 L1494.25 679.895 L1493.69 679.895 L1493.13 679.895 L1492.57 679.895 L1492.01 679.895 L1491.45 679.895 L1490.89 679.895 L1490.34 679.895 L1489.78 679.895 L1489.22 679.895 L1488.66 679.895 L1488.1 679.895 L1487.54 679.895 L1486.98 679.895 L1486.42 679.895 L1485.86 679.895 L1485.3 679.895 L1484.74 679.895 L1484.18 679.895 L1483.62 679.895 L1483.07 679.895 L1482.51 679.895 L1481.95 679.895 L1481.39 679.895 L1480.83 679.895 L1480.27 679.895 L1479.71 679.895 L1479.15 679.895 L1478.59 679.895 L1478.03 679.895 L1477.47 679.895 L1476.91 679.895 L1476.35 679.895 L1475.79 679.895 L1475.24 679.895 L1474.68 679.895 L1474.12 679.895 L1473.56 679.895 L1473 679.895 L1472.44 679.895 L1471.88 679.895 L1471.32 679.895 L1470.76 679.895 L1470.2 679.895 L1469.64 679.895 L1469.08 679.895 L1468.52 679.895 L1467.97 679.895 L1467.41 679.895 L1466.85 679.895 L1466.29 679.895 L1465.73 679.895 L1465.17 679.895 L1464.61 679.895 L1464.05 679.895 L1463.49 679.895 L1462.93 679.895 L1462.37 679.895 L1461.81 679.895 L1461.25 679.895 L1460.7 679.895 L1460.14 679.895 L1459.58 679.895 L1459.02 679.895 L1458.46 679.895 L1457.9 679.895 L1457.34 679.895 L1456.78 679.895 L1456.22 679.895 L1455.66 679.895 L1455.1 679.895 L1454.54 679.895 L1453.98 679.895 L1453.42 679.895 L1452.87 679.895 L1452.31 679.895 L1451.75 679.895 L1451.19 679.895 L1450.63 679.895 L1450.07 679.895 L1449.51 679.895 L1448.95 679.895 L1448.39 679.895 L1447.83 679.895 L1447.27 679.895 L1446.71 679.895 L1446.15 679.895 L1445.6 679.895 L1445.04 679.895 L1444.48 679.895 L1443.92 679.895 L1443.36 679.895 L1442.8 679.895 L1442.24 679.895 L1441.68 679.895 L1441.12 679.895 L1440.56 679.895 L1440 679.895 L1439.44 679.895 L1438.88 679.895 L1438.33 679.895 L1437.77 679.895 L1437.21 679.895 L1436.65 679.895 L1436.09 679.895 L1435.53 679.895 L1434.97 679.895 L1434.41 679.895 L1433.85 679.895 L1433.29 679.895 L1432.73 679.895 L1432.17 679.895 L1431.61 679.895 L1431.05 679.895 L1430.5 679.895 L1429.94 679.895 L1429.38 679.895 L1428.82 679.895 L1428.26 679.895 L1427.7 679.895 L1427.14 679.895 L1426.58 679.895 L1426.02 679.895 L1425.46 679.895 L1424.9 679.895 L1424.34 679.895 L1423.78 679.895 L1423.23 679.895 L1422.67 679.895 L1422.11 679.895 L1421.55 679.895 L1420.99 679.895 L1420.43 679.895 L1419.87 679.895 L1419.31 679.895 L1418.75 679.895 L1418.19 679.895 L1417.63 679.895 L1417.07 679.895 L1416.51 679.895 L1415.95 679.895 L1415.4 679.895 L1414.84 679.895 L1414.28 679.895 L1413.72 679.895 L1413.16 679.895 L1412.6 679.895 L1412.04 679.895 L1411.48 679.895 L1410.92 679.895 L1410.36 679.895 L1409.8 679.895 L1409.24 679.895 L1408.68 679.895 L1408.13 679.895 L1407.57 679.895 L1407.01 679.895 L1406.45 679.895 L1405.89 679.895 L1405.33 679.895 L1404.77 679.895 L1404.21 679.895 L1403.65 679.895 L1403.09 679.895 L1402.53 679.895 L1401.97 679.895 L1401.41 679.895 L1400.86 679.895 L1400.3 679.895 L1399.74 679.895 L1399.18 679.895 L1398.62 679.895 L1398.06 679.895 L1397.5 679.895 L1396.94 679.895 L1396.38 679.895 L1395.82 679.895 L1395.26 679.895 L1394.7 679.895 L1394.14 679.895 L1393.58 679.895 L1393.03 679.895 L1392.47 679.895 L1391.91 679.895 L1391.35 679.895 L1390.79 679.895 L1390.23 679.895 L1389.67 679.895 L1389.11 679.895 L1388.55 679.895 L1387.99 679.895 L1387.43 679.895 L1386.87 679.895 L1386.31 679.895 L1385.76 679.895 L1385.2 679.895 L1384.64 679.895 L1384.08 679.895 L1383.52 679.895 L1382.96 679.895 L1382.4 679.895 L1381.84 679.895 L1381.28 679.895 L1380.72 679.895 L1380.16 679.895 L1379.6 679.895 L1379.04 679.895 L1378.49 679.895 L1377.93 679.895 L1377.37 679.895 L1376.81 679.895 L1376.25 679.895 L1375.69 679.895 L1375.13 679.895 L1374.57 679.895 L1374.01 679.895 L1373.45 679.895 L1372.89 679.895 L1372.33 679.895 L1371.77 679.895 L1371.21 679.895 L1370.66 679.895 L1370.1 679.895 L1369.54 679.895 L1368.98 679.895 L1368.42 679.895 L1367.86 679.895 L1367.3 679.895 L1366.74 679.895 L1366.18 679.895 L1365.62 679.895 L1365.06 679.895 L1364.5 679.895 L1363.94 679.895 L1363.39 679.895 L1362.83 679.895 L1362.27 679.895 L1361.71 679.895 L1361.15 679.895 L1360.59 679.895 L1360.03 679.895 L1359.47 679.895 L1358.91 679.895 L1358.35 679.895 L1357.79 679.895 L1357.23 679.895 L1356.67 679.895 L1356.12 679.895 L1355.56 679.895 L1355 679.895 L1354.44 679.895 L1353.88 679.895 L1353.32 679.895 L1352.76 679.895 L1352.2 679.895 L1351.64 679.895 L1351.08 679.895 L1350.52 679.895 L1349.96 679.895 L1349.4 679.895 L1348.84 679.895 L1348.29 679.895 L1347.73 679.895 L1347.17 679.895 L1346.61 679.895 L1346.05 679.895 L1345.49 679.895 L1344.93 679.895 L1344.37 679.895 L1343.81 679.895 L1343.25 679.895 L1342.69 679.895 L1342.13 679.895 L1341.57 679.895 L1341.02 679.895 L1340.46 679.895 L1339.9 679.895 L1339.34 679.895 L1338.78 679.895 L1338.22 679.895 L1337.66 679.895 L1337.1 679.895 L1336.54 679.895 L1335.98 679.895 L1335.42 679.895 L1334.86 679.895 L1334.3 679.895 L1333.75 679.895 L1333.19 679.895 L1332.63 679.895 L1332.07 679.895 L1331.51 679.895 L1330.95 679.895 L1330.39 679.895 L1329.83 679.895 L1329.27 679.895 L1328.71 679.895 L1328.15 679.895 L1327.59 679.895 L1327.03 679.895 L1326.47 679.895 L1325.92 679.895 L1325.36 679.895 L1324.8 679.895 L1324.24 679.895 L1323.68 679.895 L1323.12 679.895 L1322.56 679.895 L1322 679.895 L1321.44 679.895 L1320.88 679.895 L1320.32 679.895 L1319.76 679.895 L1319.2 679.895 L1318.65 679.895 L1318.09 679.895 L1317.53 679.895 L1316.97 679.895 L1316.41 679.895 L1315.85 679.895 L1315.29 679.895 L1314.73 679.895 L1314.17 679.895 L1313.61 679.895 L1313.05 679.895 L1312.49 679.895 L1311.93 679.895 L1311.38 679.895 L1310.82 679.895 L1310.26 679.895 L1309.7 679.895 L1309.14 679.895 L1308.58 679.895 L1308.02 679.895 L1307.46 679.895 L1306.9 679.895 L1306.34 679.895 L1305.78 679.895 L1305.22 679.895 L1304.66 679.895 L1304.1 679.895 L1303.55 679.895 L1302.99 679.895 L1302.43 679.895 L1301.87 679.895 L1301.31 679.895 L1300.75 679.895 L1300.19 679.895 L1299.63 679.895 L1299.07 679.895 L1298.51 679.895 L1297.95 679.895 L1297.39 679.895 L1296.83 679.895 L1296.28 679.895 L1295.72 679.895 L1295.16 679.895 L1294.6 679.895 L1294.04 679.895 L1293.48 679.895 L1292.92 679.895 L1292.36 679.895 L1291.8 679.895 L1291.24 679.895 L1290.68 679.895 L1290.12 679.895 L1289.56 679.895 L1289 679.895 L1288.45 679.895 L1287.89 679.895 L1287.33 679.895 L1286.77 679.895 L1286.21 679.895 L1285.65 679.895 L1285.09 679.895 L1284.53 679.895 L1283.97 679.895 L1283.41 679.895 L1282.85 679.895 L1282.29 679.895 L1281.73 679.895 L1281.18 679.895 L1280.62 679.895 L1280.06 679.895 L1279.5 679.895 L1278.94 679.895 L1278.38 679.895 L1277.82 679.895 L1277.26 679.895 L1276.7 679.895 L1276.14 679.895 L1275.58 679.895 L1275.02 679.895 L1274.46 679.895 L1273.91 679.895 L1273.35 679.895 L1272.79 679.895 L1272.23 679.895 L1271.67 679.895 L1271.11 679.895 L1270.55 679.895 L1269.99 679.895 L1269.43 679.895 L1268.87 679.895 L1268.31 679.895 L1267.75 679.895 L1267.19 679.895 L1266.63 679.895 L1266.08 679.895 L1265.52 679.895 L1264.96 679.895 L1264.4 679.895 L1263.84 679.895 L1263.28 679.895 L1262.72 679.895 L1262.16 679.895 L1261.6 679.895 L1261.04 679.895 L1260.48 679.895 L1259.92 679.895 L1259.36 679.895 L1258.81 679.895 L1258.25 679.895 L1257.69 679.895 L1257.13 679.895 L1256.57 679.895 L1256.01 679.895 L1255.45 679.895 L1254.89 679.895 L1254.33 679.895 L1253.77 679.895 L1253.21 679.895 L1252.65 679.895 L1252.09 679.895 L1251.54 679.895 L1250.98 679.895 L1250.42 679.895 L1249.86 679.895 L1249.3 679.895 L1248.74 679.895 L1248.18 679.895 L1247.62 679.895 L1247.06 679.895 L1246.5 679.895 L1245.94 679.895 L1245.38 679.895 L1244.82 679.895 L1244.26 679.895 L1243.71 679.895 L1243.15 679.895 L1242.59 679.895 L1242.03 679.895 L1241.47 679.895 L1240.91 679.895 L1240.35 679.895 L1239.79 679.895 L1239.23 679.895 L1238.67 679.895 L1238.11 679.895 L1237.55 679.895 L1236.99 679.895 L1236.44 679.895 L1235.88 679.895 L1235.32 679.895 L1234.76 679.895 L1234.2 679.895 L1233.64 679.895 L1233.08 679.895 L1232.52 679.895 L1231.96 679.895 L1231.4 679.895 L1230.84 679.895 L1230.28 679.895 L1229.72 679.895 L1229.17 679.895 L1228.61 679.895 L1228.05 679.895 L1227.49 679.895 L1226.93 679.895 L1226.37 679.895 L1225.81 679.895 L1225.25 679.895 L1224.69 679.895 L1224.13 679.895 L1223.57 679.895 L1223.01 679.895 L1222.45 679.895 L1221.89 679.895 L1221.34 679.895 L1220.78 679.895 L1220.22 679.895 L1219.66 679.895 L1219.1 679.895 L1218.54 679.895 L1217.98 679.895 L1217.42 679.895 L1216.86 679.895 L1216.3 679.895 L1215.74 679.895 L1215.18 679.895 L1214.62 679.895 L1214.07 679.895 L1213.51 679.895 L1212.95 679.895 L1212.39 679.895 L1211.83 679.895 L1211.27 679.895 L1210.71 679.895 L1210.15 679.895 L1209.59 679.895 L1209.03 679.895 L1208.47 679.895 L1207.91 679.895 L1207.35 679.895 L1206.8 679.895 L1206.24 679.895 L1205.68 679.895 L1205.12 679.895 L1204.56 679.895 L1204 679.895 L1203.44 679.895 L1202.88 679.895 L1202.32 679.895 L1201.76 679.895 L1201.2 679.895 L1200.64 679.895 L1200.08 679.895 L1199.52 679.895 L1198.97 679.895 L1198.41 679.895 L1197.85 679.895 L1197.29 679.895 L1196.73 679.895 L1196.17 679.895 L1195.61 679.895 L1195.05 679.895 L1194.49 679.895 L1193.93 679.895 L1193.37 679.895 L1192.81 679.895 L1192.25 679.895 L1191.7 679.895 L1191.14 679.895 L1190.58 679.895 L1190.02 679.895 L1189.46 679.895 L1188.9 679.895 L1188.34 679.895 L1187.78 679.895 L1187.22 679.895 L1186.66 679.895 L1186.1 679.895 L1185.54 679.895 L1184.98 679.895 L1184.43 679.895 L1183.87 679.895 L1183.31 679.895 L1182.75 679.895 L1182.19 679.895 L1181.63 679.895 L1181.07 679.895 L1180.51 679.895 L1179.95 679.895 L1179.39 679.895 L1178.83 679.895 L1178.27 679.895 L1177.71 679.895 L1177.15 679.895 L1176.6 679.895 L1176.04 679.895 L1175.48 679.895 L1174.92 679.895 L1174.36 679.895 L1173.8 679.895 L1173.24 679.895 L1172.68 679.895 L1172.12 679.895 L1171.56 679.895 L1171 679.895 L1170.44 679.895 L1169.88 679.895 L1169.33 679.895 L1168.77 679.895 L1168.21 679.895 L1167.65 679.895 L1167.09 679.895 L1166.53 679.895 L1165.97 679.895 L1165.41 679.895 L1164.85 679.895 L1164.29 679.895 L1163.73 679.895 L1163.17 679.895 L1162.61 679.895 L1162.05 679.895 L1161.5 679.895 L1160.94 679.895 L1160.38 679.895 L1159.82 679.895 L1159.26 679.895 L1158.7 679.895 L1158.14 679.895 L1157.58 679.895 L1157.02 679.895 L1156.46 679.895 L1155.9 679.895 L1155.34 679.895 L1154.78 679.895 L1154.23 679.895 L1153.67 679.895 L1153.11 679.895 L1152.55 679.895 L1151.99 679.895 L1151.43 679.895 L1150.87 679.895 L1150.31 679.895 L1149.75 679.895 L1149.19 679.895 L1148.63 679.895 L1148.07 679.895 L1147.51 679.895 L1146.96 679.895 L1146.4 679.895 L1145.84 679.895 L1145.28 679.895 L1144.72 679.895 L1144.16 679.895 L1143.6 679.895 L1143.04 679.895 L1142.48 679.895 L1141.92 679.895 L1141.36 679.895 L1140.8 679.895 L1140.24 679.895 L1139.68 679.895 L1139.13 679.895 L1138.57 679.895 L1138.01 679.895 L1137.45 679.895 L1136.89 679.895 L1136.33 679.895 L1135.77 679.895 L1135.21 679.895 L1134.65 679.895 L1134.09 679.895 L1133.53 679.895 L1132.97 679.895 L1132.41 679.895 L1131.86 679.895 L1131.3 679.895 L1130.74 679.895 L1130.18 679.895 L1129.62 679.895 L1129.06 679.895 L1128.5 679.895 L1127.94 679.895 L1127.38 679.895 L1126.82 679.895 L1126.26 679.895 L1125.7 679.895 L1125.14 679.895 L1124.59 679.895 L1124.03 679.895 L1123.47 679.895 L1122.91 679.895 L1122.35 679.895 L1121.79 679.895 L1121.23 679.895 L1120.67 679.895 L1120.11 679.895 L1119.55 679.895 L1118.99 679.895 L1118.43 679.895 L1117.87 679.895 L1117.31 679.895 L1116.76 679.895 L1116.2 679.895 L1115.64 679.895 L1115.08 679.895 L1114.52 679.895 L1113.96 679.895 L1113.4 679.895 L1112.84 679.895 L1112.28 679.895 L1111.72 679.895 L1111.16 679.895 L1110.6 679.895 L1110.04 679.895 L1109.49 679.895 L1108.93 679.895 L1108.37 679.895 L1107.81 679.895 L1107.25 679.895 L1106.69 679.895 L1106.13 679.895 L1105.57 679.895 L1105.01 679.895 L1104.45 679.895 L1103.89 679.895 L1103.33 679.895 L1102.77 679.895 L1102.22 679.895 L1101.66 679.895 L1101.1 679.895 L1100.54 679.895 L1099.98 679.895 L1099.42 679.895 L1098.86 679.895 L1098.3 679.895 L1097.74 679.895 L1097.18 679.895 L1096.62 679.895 L1096.06 679.895 L1095.5 679.895 L1094.94 679.895 L1094.39 679.895 L1093.83 679.895 L1093.27 679.895 L1092.71 679.895 L1092.15 679.895 L1091.59 679.895 L1091.03 679.895 L1090.47 679.895 L1089.91 679.895 L1089.35 679.895 L1088.79 679.895 L1088.23 679.895 L1087.67 679.895 L1087.12 679.895 L1086.56 679.895 L1086 679.895 L1085.44 679.895 L1084.88 679.895 L1084.32 679.895 L1083.76 679.895 L1083.2 679.895 L1082.64 679.895 L1082.08 679.895 L1081.52 679.895 L1080.96 679.895 L1080.4 679.895 L1079.85 679.895 L1079.29 679.895 L1078.73 679.895 L1078.17 679.895 L1077.61 679.895 L1077.05 679.895 L1076.49 679.895 L1075.93 679.895 L1075.37 679.895 L1074.81 679.895 L1074.25 679.895 L1073.69 679.895 L1073.13 679.895 L1072.57 679.895 L1072.02 679.895 L1071.46 679.895 L1070.9 679.895 L1070.34 679.895 L1069.78 679.895 L1069.22 679.895 L1068.66 679.895 L1068.1 679.895 L1067.54 679.895 L1066.98 679.895 L1066.42 679.895 L1065.86 679.895 L1065.3 679.895 L1064.75 679.895 L1064.19 679.895 L1063.63 679.895 L1063.07 679.895 L1062.51 679.895 L1061.95 679.895 L1061.39 679.895 L1060.83 679.895 L1060.27 679.895 L1059.71 679.895 L1059.15 679.895 L1058.59 679.895 L1058.03 679.895 L1057.48 679.895 L1056.92 679.895 L1056.36 679.895 L1055.8 679.895 L1055.24 679.895 L1054.68 679.895 L1054.12 679.895 L1053.56 679.895 L1053 679.895 L1052.44 679.895 L1051.88 679.895 L1051.32 679.895 L1050.76 679.895 L1050.2 679.895 L1049.65 679.895 L1049.09 679.895 L1048.53 679.895 L1047.97 679.895 L1047.41 679.895 L1046.85 679.895 L1046.29 679.895 L1045.73 679.895 L1045.17 679.895 L1044.61 679.895 L1044.05 679.895 L1043.49 679.895 L1042.93 679.895 L1042.38 679.895 L1041.82 679.895 L1041.26 679.895 L1040.7 679.895 L1040.14 679.895 L1039.58 679.895 L1039.02 679.895 L1038.46 679.895 L1037.9 679.895 L1037.34 679.895 L1036.78 679.895 L1036.22 679.895 L1035.66 679.895 L1035.1 679.895 L1034.55 679.895 L1033.99 679.895 L1033.43 679.895 L1032.87 679.895 L1032.31 679.895 L1031.75 679.895 L1031.19 679.895 L1030.63 679.895 L1030.07 679.895 L1029.51 679.895 L1028.95 679.895 L1028.39 679.895 L1027.83 679.895 L1027.28 679.895 L1026.72 679.895 L1026.16 679.895 L1025.6 679.895 L1025.04 679.895 L1024.48 679.895 L1023.92 679.895 L1023.36 679.895 L1022.8 679.895 L1022.24 679.895 L1021.68 679.895 L1021.12 679.895 L1020.56 679.895 L1020.01 679.895 L1019.45 679.895 L1018.89 679.895 L1018.33 679.895 L1017.77 679.895 L1017.21 679.895 L1016.65 679.895 L1016.09 679.895 L1015.53 679.895 L1014.97 679.895 L1014.41 679.895 L1013.85 679.895 L1013.29 679.895 L1012.73 679.895 L1012.18 679.895 L1011.62 679.895 L1011.06 679.895 L1010.5 679.895 L1009.94 679.895 L1009.38 679.895 L1008.82 679.895 L1008.26 679.895 L1007.7 679.895 L1007.14 679.895 L1006.58 679.895 L1006.02 679.895 L1005.46 679.895 L1004.91 679.895 L1004.35 679.895 L1003.79 679.895 L1003.23 679.895 L1002.67 679.895 L1002.11 679.895 L1001.55 679.895 L1000.99 679.895 L1000.43 679.895 L999.872 679.895 L999.313 679.895 L998.754 679.895 L998.194 679.895 L997.635 679.895 L997.076 679.895 L996.517 679.895 L995.957 679.895 L995.398 679.895 L994.839 679.895 L994.28 679.895 L993.72 679.895 L993.161 679.895 L992.602 679.895 L992.043 679.895 L991.483 679.895 L990.924 679.895 L990.365 679.895 L989.806 679.895 L989.246 679.895 L988.687 679.895 L988.128 679.895 L987.569 679.895 L987.009 679.895 L986.45 679.895 L985.891 679.895 L985.332 679.895 L984.772 679.895 L984.213 679.895 L983.654 679.895 L983.095 679.895 L982.535 679.895 L981.976 679.895 L981.417 679.895 L980.858 679.895 L980.298 679.895 L979.739 679.895 L979.18 679.895 L978.621 679.895 L978.061 679.895 L977.502 679.895 L976.943 679.895 L976.384 679.895 L975.824 679.895 L975.265 679.895 L974.706 679.895 L974.147 679.895 L973.587 679.895 L973.028 679.895 L972.469 679.895 L971.91 679.895 L971.35 679.895 L970.791 679.895 L970.232 679.895 L969.673 679.895 L969.113 679.895 L968.554 679.895 L967.995 679.895 L967.436 679.895 L966.876 679.895 L966.317 679.895 L965.758 679.895 L965.199 679.895 L964.639 679.895 L964.08 679.895 L963.521 679.895 L962.962 679.895 L962.402 679.895 L961.843 679.895 L961.284 679.895 L960.725 679.895 L960.165 679.895 L959.606 679.895 L959.047 679.895 L958.488 679.895 L957.928 679.895 L957.369 679.895 L956.81 679.895 L956.251 679.895 L955.691 679.895 L955.132 679.895 L954.573 679.895 L954.014 679.895 L953.454 679.895 L952.895 679.895 L952.336 679.895 L951.777 679.895 L951.217 679.895 L950.658 679.895 L950.099 679.895 L949.54 679.895 L948.98 679.895 L948.421 679.895 L947.862 679.895 L947.303 679.895 L946.743 679.895 L946.184 679.895 L945.625 679.895 L945.066 679.895 L944.506 679.895 L943.947 679.895 L943.388 679.895 L942.829 679.895 L942.269 679.895 L941.71 679.895 L941.151 679.895 L940.592 679.895 L940.032 679.895 L939.473 679.895 L938.914 679.895 L938.355 679.895 L937.795 679.895 L937.236 679.895 L936.677 679.895 L936.118 679.895 L935.558 679.895 L934.999 679.895 L934.44 679.895 L933.881 679.895 L933.321 679.895 L932.762 679.895 L932.203 679.895 L931.644 679.895 L931.084 679.895 L930.525 679.895 L929.966 679.895 L929.406 679.895 L928.847 679.895 L928.288 679.895 L927.729 679.895 L927.169 679.895 L926.61 679.895 L926.051 679.895 L925.492 679.895 L924.932 679.895 L924.373 679.895 L923.814 679.895 L923.255 679.895 L922.695 679.895 L922.136 679.895 L921.577 679.895 L921.018 679.895 L920.458 679.895 L919.899 679.895 L919.34 679.895 L918.781 679.895 L918.221 679.895 L917.662 679.895 L917.103 679.895 L916.544 679.895 L915.984 679.895 L915.425 679.895 L914.866 679.895 L914.307 679.895 L913.747 679.895 L913.188 679.895 L912.629 679.895 L912.07 679.895 L911.51 679.895 L910.951 679.895 L910.392 679.895 L909.833 679.895 L909.273 679.895 L908.714 679.895 L908.155 679.895 L907.596 679.895 L907.036 679.895 L906.477 679.895 L905.918 679.895 L905.359 679.895 L904.799 679.895 L904.24 679.895 L903.681 679.895 L903.122 679.895 L902.562 679.895 L902.003 679.895 L901.444 679.895 L900.885 679.895 L900.325 679.895 L899.766 679.895 L899.207 679.895 L898.648 679.895 L898.088 679.895 L897.529 679.895 L896.97 679.895 L896.411 679.895 L895.851 679.895 L895.292 679.895 L894.733 679.895 L894.174 679.895 L893.614 679.895 L893.055 679.895 L892.496 679.895 L891.937 679.895 L891.377 679.895 L890.818 679.895 L890.259 679.895 L889.7 679.895 L889.14 679.895 L888.581 679.895 L888.022 679.895 L887.463 679.895 L886.903 679.895 L886.344 679.895 L885.785 679.895 L885.226 679.895 L884.666 679.895 L884.107 679.895 L883.548 679.895 L882.989 679.895 L882.429 679.895 L881.87 679.895 L881.311 679.895 L880.752 679.895 L880.192 679.895 L879.633 679.895 L879.074 679.895 L878.515 679.895 L877.955 679.895 L877.396 679.895 L876.837 679.895 L876.278 679.895 L875.718 679.895 L875.159 679.895 L874.6 679.895 L874.041 679.895 L873.481 679.895 L872.922 679.895 L872.363 679.895 L871.804 679.895 L871.244 679.895 L870.685 679.895 L870.126 679.895 L869.567 679.895 L869.007 679.895 L868.448 679.895 L867.889 679.895 L867.33 679.895 L866.77 679.895 L866.211 679.895 L865.652 679.895 L865.093 679.895 L864.533 679.895 L863.974 679.895 L863.415 679.895 L862.856 679.895 L862.296 679.895 L861.737 679.895 L861.178 679.895 L860.619 679.895 L860.059 679.895 L859.5 679.895 L858.941 679.895 L858.382 679.895 L857.822 679.895 L857.263 679.895 L856.704 679.895 L856.145 679.895 L855.585 679.895 L855.026 679.895 L854.467 679.895 L853.908 679.895 L853.348 679.895 L852.789 679.895 L852.23 679.895 L851.671 679.895 L851.111 679.895 L850.552 679.895 L849.993 679.895 L849.434 679.895 L848.874 679.895 L848.315 679.895 L847.756 679.895 L847.197 679.895 L846.637 679.895 L846.078 679.895 L845.519 679.895 L844.96 679.895 L844.4 679.895 L843.841 679.895 L843.282 679.895 L842.723 679.895 L842.163 679.895 L841.604 679.895 L841.045 679.895 L840.486 679.895 L839.926 679.895 L839.367 679.895 L838.808 679.895 L838.249 679.895 L837.689 679.895 L837.13 679.895 L836.571 679.895 L836.012 679.895 L835.452 679.895 L834.893 679.895 L834.334 679.895 L833.775 679.895 L833.215 679.895 L832.656 679.895 L832.097 679.895 L831.538 679.895 L830.978 679.895 L830.419 679.895 L829.86 679.895 L829.301 679.895 L828.741 679.895 L828.182 679.895 L827.623 679.895 L827.064 679.895 L826.504 679.895 L825.945 679.895 L825.386 679.895 L824.827 679.895 L824.267 679.895 L823.708 679.895 L823.149 679.895 L822.59 679.895 L822.03 679.895 L821.471 679.895 L820.912 679.895 L820.353 679.895 L819.793 679.895 L819.234 679.895 L818.675 679.895 L818.116 679.895 L817.556 679.895 L816.997 679.895 L816.438 679.895 L815.879 679.895 L815.319 679.895 L814.76 679.895 L814.201 679.895 L813.642 679.895 L813.082 679.895 L812.523 679.895 L811.964 679.895 L811.405 679.895 L810.845 679.895 L810.286 679.895 L809.727 679.895 L809.168 679.895 L808.608 679.895 L808.049 679.895 L807.49 679.895 L806.931 679.895 L806.371 679.895 L805.812 679.895 L805.253 679.895 L804.693 679.895 L804.134 679.895 L803.575 679.895 L803.016 679.895 L802.456 679.895 L801.897 679.895 L801.338 679.895 L800.779 679.895 L800.219 679.895 L799.66 679.895 L799.101 679.895 L798.542 679.895 L797.982 679.895 L797.423 679.895 L796.864 679.895 L796.305 679.895 L795.745 679.895 L795.186 679.895 L794.627 679.895 L794.068 679.895 L793.508 679.895 L792.949 679.895 L792.39 679.895 L791.831 679.895 L791.271 679.895 L790.712 679.895 L790.153 679.895 L789.594 679.895 L789.034 679.895 L788.475 679.895 L787.916 679.895 L787.357 679.895 L786.797 679.895 L786.238 679.895 L785.679 679.895 L785.12 679.895 L784.56 679.895 L784.001 679.895 L783.442 679.895 L782.883 679.895 L782.323 679.895 L781.764 679.895 L781.205 679.895 L780.646 679.895 L780.086 679.895 L779.527 679.895 L778.968 679.895 L778.409 679.895 L777.849 679.895 L777.29 679.895 L776.731 679.895 L776.172 679.895 L775.612 679.895 L775.053 679.895 L774.494 679.895 L773.935 679.895 L773.375 679.895 L772.816 679.895 L772.257 679.895 L771.698 679.895 L771.138 679.895 L770.579 679.895 L770.02 679.895 L769.461 679.895 L768.901 679.895 L768.342 679.895 L767.783 679.895 L767.224 679.895 L766.664 679.895 L766.105 679.895 L765.546 679.895 L764.987 679.895 L764.427 679.895 L763.868 679.895 L763.309 679.895 L762.75 679.895 L762.19 679.895 L761.631 679.895 L761.072 679.895 L760.513 679.895 L759.953 679.895 L759.394 679.895 L758.835 679.895 L758.276 679.895 L757.716 679.895 L757.157 679.895 L756.598 679.895 L756.039 679.895 L755.479 679.895 L754.92 679.895 L754.361 679.895 L753.802 679.895 L753.242 679.895 L752.683 679.895 L752.124 679.895 L751.565 679.895 L751.005 679.895 L750.446 679.895 L749.887 679.895 L749.328 679.895 L748.768 679.895 L748.209 679.895 L747.65 679.895 L747.091 679.895 L746.531 679.895 L745.972 679.895 L745.413 679.895 L744.854 679.895 L744.294 679.895 L743.735 679.895 L743.176 679.895 L742.617 679.895 L742.057 679.895 L741.498 679.895 L740.939 679.895 L740.38 679.895 L739.82 679.895 L739.261 679.895 L738.702 679.895 L738.143 679.895 L737.583 679.895 L737.024 679.895 L736.465 679.895 L735.906 679.895 L735.346 679.895 L734.787 679.895 L734.228 679.895 L733.669 679.895 L733.109 679.895 L732.55 679.895 L731.991 679.895 L731.432 679.895 L730.872 679.895 L730.313 679.895 L729.754 679.895 L729.195 679.895 L728.635 679.895 L728.076 679.895 L727.517 679.895 L726.958 679.895 L726.398 679.895 L725.839 679.895 L725.28 679.895 L724.721 679.895 L724.161 679.895 L723.602 679.895 L723.043 679.895 L722.484 679.895 L721.924 679.895 L721.365 679.895 L720.806 679.895 L720.247 679.895  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.381 720.806,684.381 721.365,684.381 721.924,684.381 722.484,684.381 723.043,684.381 723.602,684.381 724.161,684.381 724.721,684.381 725.28,684.381 725.839,684.381 726.398,684.381 726.958,684.381 727.517,684.381 728.076,684.381 728.635,684.381 729.195,684.381 729.754,684.381 730.313,684.381 730.872,684.381 731.432,684.381 731.991,684.381 732.55,684.381 733.109,684.381 733.669,684.381 734.228,684.381 734.787,684.381 735.346,684.381 735.906,684.381 736.465,684.381 737.024,684.381 737.583,684.381 738.143,684.381 738.702,684.381 739.261,684.381 739.82,684.381 740.38,684.381 740.939,684.381 741.498,684.381 742.057,684.381 742.617,684.381 743.176,684.381 743.735,684.381 744.294,684.381 744.854,684.381 745.413,684.381 745.972,684.381 746.531,684.381 747.091,684.381 747.65,684.381 748.209,684.381 748.768,684.381 749.328,684.381 749.887,684.381 750.446,684.381 751.005,684.381 751.565,684.381 752.124,684.381 752.683,684.381 753.242,684.381 753.802,684.381 754.361,684.381 754.92,684.381 755.479,684.381 756.039,684.381 756.598,684.381 757.157,684.381 757.716,684.381 758.276,684.381 758.835,684.381 759.394,684.381 759.953,684.381 760.513,684.381 761.072,684.381 761.631,684.381 762.19,684.381 762.75,684.381 763.309,684.381 763.868,684.381 764.427,684.381 764.987,684.381 765.546,684.381 766.105,684.381 766.664,684.381 767.224,684.381 767.783,684.381 768.342,684.381 768.901,684.381 769.461,684.381 770.02,684.381 770.579,684.381 771.138,684.381 771.698,684.381 772.257,684.381 772.816,684.381 773.375,684.381 773.935,684.381 774.494,684.381 775.053,684.381 775.612,684.381 776.172,684.381 776.731,684.381 777.29,684.381 777.849,684.381 778.409,684.381 778.968,684.381 779.527,684.381 780.086,684.381 780.646,684.381 781.205,684.381 781.764,684.381 782.323,684.381 782.883,684.381 783.442,684.381 784.001,684.381 784.56,684.381 785.12,684.381 785.679,684.381 786.238,684.381 786.797,684.381 787.357,684.381 787.916,684.381 788.475,684.381 789.034,684.381 789.594,684.381 790.153,684.381 790.712,684.381 791.271,684.381 791.831,684.381 792.39,684.381 792.949,684.381 793.508,684.381 794.068,684.381 794.627,684.381 795.186,684.381 795.745,684.381 796.305,684.381 796.864,684.381 797.423,684.381 797.982,684.381 798.542,684.381 799.101,684.381 799.66,684.381 800.219,684.381 800.779,684.381 801.338,684.381 801.897,684.381 802.456,684.381 803.016,684.381 803.575,684.381 804.134,684.381 804.693,684.381 805.253,684.381 805.812,684.381 806.371,684.381 806.931,684.381 807.49,684.381 808.049,684.381 808.608,684.381 809.168,684.381 809.727,684.381 810.286,684.381 810.845,684.381 811.405,684.381 811.964,684.381 812.523,684.381 813.082,684.381 813.642,684.381 814.201,684.381 814.76,684.381 815.319,684.381 815.879,684.381 816.438,684.381 816.997,684.381 817.556,684.381 818.116,684.381 818.675,684.381 819.234,684.381 819.793,684.381 820.353,684.381 820.912,684.381 821.471,684.381 822.03,684.381 822.59,684.381 823.149,684.381 823.708,684.381 824.267,684.381 824.827,684.381 825.386,684.381 825.945,684.381 826.504,684.381 827.064,684.381 827.623,684.381 828.182,684.381 828.741,684.381 829.301,684.381 829.86,684.381 830.419,684.381 830.978,684.381 831.538,684.381 832.097,684.381 832.656,684.381 833.215,684.381 833.775,684.381 834.334,684.381 834.893,684.381 835.452,684.381 836.012,684.381 836.571,684.381 837.13,684.381 837.689,684.381 838.249,684.381 838.808,684.381 839.367,684.381 839.926,684.381 840.486,684.381 841.045,684.381 841.604,684.381 842.163,684.381 842.723,684.381 843.282,684.381 843.841,684.381 844.4,684.381 844.96,684.381 845.519,684.381 846.078,684.381 846.637,684.381 847.197,684.381 847.756,684.381 848.315,684.381 848.874,684.381 849.434,684.381 849.993,684.381 850.552,684.381 851.111,684.381 851.671,684.381 852.23,684.381 852.789,684.381 853.348,684.381 853.908,684.381 854.467,684.381 855.026,684.381 855.585,684.381 856.145,684.381 856.704,684.381 857.263,684.381 857.822,684.381 858.382,684.381 858.941,684.381 859.5,684.381 860.059,684.381 860.619,684.381 861.178,684.381 861.737,684.381 862.296,684.381 862.856,684.381 863.415,684.381 863.974,684.381 864.533,684.381 865.093,684.381 865.652,684.381 866.211,684.381 866.77,684.381 867.33,684.381 867.889,684.381 868.448,684.381 869.007,684.381 869.567,684.381 870.126,684.381 870.685,684.381 871.244,684.381 871.804,684.381 872.363,684.381 872.922,684.381 873.481,684.381 874.041,684.381 874.6,684.381 875.159,684.381 875.718,684.381 876.278,684.381 876.837,684.381 877.396,684.381 877.955,684.381 878.515,684.381 879.074,684.381 879.633,684.381 880.192,684.381 880.752,684.381 881.311,684.381 881.87,684.381 882.429,684.381 882.989,684.381 883.548,684.381 884.107,684.381 884.666,684.381 885.226,684.381 885.785,684.381 886.344,684.381 886.903,684.381 887.463,684.381 888.022,684.381 888.581,684.381 889.14,684.381 889.7,684.381 890.259,684.381 890.818,684.381 891.377,684.381 891.937,684.381 892.496,684.381 893.055,684.381 893.614,684.381 894.174,684.381 894.733,684.381 895.292,684.381 895.851,684.381 896.411,684.381 896.97,684.381 897.529,684.381 898.088,684.381 898.648,684.381 899.207,684.381 899.766,684.381 900.325,684.381 900.885,684.381 901.444,684.381 902.003,684.381 902.562,684.381 903.122,684.381 903.681,684.381 904.24,684.381 904.799,684.381 905.359,684.381 905.918,684.381 906.477,684.381 907.036,684.381 907.596,684.381 908.155,684.381 908.714,684.381 909.273,684.381 909.833,684.381 910.392,684.381 910.951,684.381 911.51,684.381 912.07,684.381 912.629,684.381 913.188,684.381 913.747,684.381 914.307,684.381 914.866,684.381 915.425,684.381 915.984,684.381 916.544,684.381 917.103,684.381 917.662,684.381 918.221,684.381 918.781,684.381 919.34,684.381 919.899,684.381 920.458,684.381 921.018,684.381 921.577,684.381 922.136,684.381 922.695,684.381 923.255,684.381 923.814,684.381 924.373,684.381 924.932,684.381 925.492,684.381 926.051,684.381 926.61,684.381 927.169,684.381 927.729,684.381 928.288,684.381 928.847,684.381 929.406,684.381 929.966,684.381 930.525,684.381 931.084,684.381 931.644,684.381 932.203,684.381 932.762,684.381 933.321,684.381 933.881,684.381 934.44,684.381 934.999,684.381 935.558,684.381 936.118,684.381 936.677,684.381 937.236,684.381 937.795,684.381 938.355,684.381 938.914,684.381 939.473,684.381 940.032,684.381 940.592,684.381 941.151,684.381 941.71,684.381 942.269,684.381 942.829,684.381 943.388,684.381 943.947,684.381 944.506,684.381 945.066,684.381 945.625,684.381 946.184,684.381 946.743,684.381 947.303,684.381 947.862,684.381 948.421,684.381 948.98,684.381 949.54,684.381 950.099,684.381 950.658,684.381 951.217,684.381 951.777,684.381 952.336,684.381 952.895,684.381 953.454,684.381 954.014,684.381 954.573,684.381 955.132,684.381 955.691,684.381 956.251,684.381 956.81,684.381 957.369,684.381 957.928,684.381 958.488,684.381 959.047,684.381 959.606,684.381 960.165,684.381 960.725,684.381 961.284,684.381 961.843,684.381 962.402,684.381 962.962,684.381 963.521,684.381 964.08,684.381 964.639,684.381 965.199,684.381 965.758,684.381 966.317,684.381 966.876,684.381 967.436,684.381 967.995,684.381 968.554,684.381 969.113,684.381 969.673,684.381 970.232,684.381 970.791,684.381 971.35,684.381 971.91,684.381 972.469,684.381 973.028,684.381 973.587,684.381 974.147,684.381 974.706,684.381 975.265,684.381 975.824,684.381 976.384,684.381 976.943,684.381 977.502,684.381 978.061,684.381 978.621,684.381 979.18,684.381 979.739,684.381 980.298,684.381 980.858,684.381 981.417,684.381 981.976,684.381 982.535,684.381 983.095,684.381 983.654,684.381 984.213,684.381 984.772,684.381 985.332,684.381 985.891,684.381 986.45,684.381 987.009,684.381 987.569,684.381 988.128,684.381 988.687,684.381 989.246,684.381 989.806,684.381 990.365,684.381 990.924,684.381 991.483,684.381 992.043,684.381 992.602,684.381 993.161,684.381 993.72,684.381 994.28,684.381 994.839,684.381 995.398,684.381 995.957,684.381 996.517,684.381 997.076,684.381 997.635,684.381 998.194,684.381 998.754,684.381 999.313,684.381 999.872,684.381 1000.43,684.381 1000.99,684.381 1001.55,684.381 1002.11,684.381 1002.67,684.381 1003.23,684.381 1003.79,684.381 1004.35,684.381 1004.91,684.381 1005.46,684.381 1006.02,684.381 1006.58,684.381 1007.14,684.381 1007.7,684.381 1008.26,684.381 1008.82,684.381 1009.38,684.381 1009.94,684.381 1010.5,684.381 1011.06,684.381 1011.62,684.381 1012.18,684.381 1012.73,684.381 1013.29,684.381 1013.85,684.381 1014.41,684.381 1014.97,684.381 1015.53,684.381 1016.09,684.381 1016.65,684.381 1017.21,684.381 1017.77,684.381 1018.33,684.381 1018.89,684.381 1019.45,684.381 1020.01,684.381 1020.56,684.381 1021.12,684.381 1021.68,684.381 1022.24,684.381 1022.8,684.381 1023.36,684.381 1023.92,684.381 1024.48,684.381 1025.04,684.381 1025.6,684.381 1026.16,684.381 1026.72,684.381 1027.28,684.381 1027.83,684.381 1028.39,684.381 1028.95,684.381 1029.51,684.381 1030.07,684.381 1030.63,684.381 1031.19,684.381 1031.75,684.381 1032.31,684.381 1032.87,684.381 1033.43,684.381 1033.99,684.381 1034.55,684.381 1035.1,684.381 1035.66,684.381 1036.22,684.381 1036.78,684.381 1037.34,684.381 1037.9,684.381 1038.46,684.381 1039.02,684.381 1039.58,684.381 1040.14,684.381 1040.7,684.381 1041.26,684.381 1041.82,684.381 1042.38,684.381 1042.93,684.381 1043.49,684.381 1044.05,684.381 1044.61,684.381 1045.17,684.381 1045.73,684.381 1046.29,684.381 1046.85,684.381 1047.41,684.381 1047.97,684.381 1048.53,684.381 1049.09,684.381 1049.65,684.381 1050.2,684.381 1050.76,684.381 1051.32,684.381 1051.88,684.381 1052.44,684.381 1053,684.381 1053.56,684.381 1054.12,684.381 1054.68,684.381 1055.24,684.381 1055.8,684.381 1056.36,684.381 1056.92,684.381 1057.48,684.381 1058.03,684.381 1058.59,684.381 1059.15,684.381 1059.71,684.381 1060.27,684.381 1060.83,684.381 1061.39,684.381 1061.95,684.381 1062.51,684.381 1063.07,684.381 1063.63,684.381 1064.19,684.381 1064.75,684.381 1065.3,684.381 1065.86,684.381 1066.42,684.381 1066.98,684.381 1067.54,684.381 1068.1,684.381 1068.66,684.381 1069.22,684.381 1069.78,684.381 1070.34,684.381 1070.9,684.381 1071.46,684.381 1072.02,684.381 1072.57,684.381 1073.13,684.381 1073.69,684.381 1074.25,684.381 1074.81,684.381 1075.37,684.381 1075.93,684.381 1076.49,684.381 1077.05,684.381 1077.61,684.381 1078.17,684.381 1078.73,684.381 1079.29,684.381 1079.85,684.381 1080.4,684.381 1080.96,684.381 1081.52,684.381 1082.08,684.381 1082.64,684.381 1083.2,684.381 1083.76,684.381 1084.32,684.381 1084.88,684.381 1085.44,684.381 1086,684.381 1086.56,684.381 1087.12,684.381 1087.67,684.381 1088.23,684.381 1088.79,684.381 1089.35,684.381 1089.91,684.381 1090.47,684.381 1091.03,684.381 1091.59,684.381 1092.15,684.381 1092.71,684.381 1093.27,684.381 1093.83,684.381 1094.39,684.381 1094.94,684.381 1095.5,684.381 1096.06,684.381 1096.62,684.381 1097.18,684.381 1097.74,684.381 1098.3,684.381 1098.86,684.381 1099.42,684.381 1099.98,684.381 1100.54,684.381 1101.1,684.381 1101.66,684.381 1102.22,684.381 1102.77,684.381 1103.33,684.381 1103.89,684.381 1104.45,684.381 1105.01,684.381 1105.57,684.381 1106.13,684.381 1106.69,684.381 1107.25,684.381 1107.81,684.381 1108.37,684.381 1108.93,684.381 1109.49,684.381 1110.04,684.381 1110.6,684.381 1111.16,684.381 1111.72,684.381 1112.28,684.381 1112.84,684.381 1113.4,684.381 1113.96,684.381 1114.52,684.381 1115.08,684.381 1115.64,684.381 1116.2,684.381 1116.76,684.381 1117.31,684.381 1117.87,684.381 1118.43,684.381 1118.99,684.381 1119.55,684.381 1120.11,684.381 1120.67,684.381 1121.23,684.381 1121.79,684.381 1122.35,684.381 1122.91,684.381 1123.47,684.381 1124.03,684.381 1124.59,684.381 1125.14,684.381 1125.7,684.381 1126.26,684.381 1126.82,684.381 1127.38,684.381 1127.94,684.381 1128.5,684.381 1129.06,684.381 1129.62,684.381 1130.18,684.381 1130.74,684.381 1131.3,684.381 1131.86,684.381 1132.41,684.381 1132.97,684.381 1133.53,684.381 1134.09,684.381 1134.65,684.381 1135.21,684.381 1135.77,684.381 1136.33,684.381 1136.89,684.381 1137.45,684.381 1138.01,684.381 1138.57,684.381 1139.13,684.381 1139.68,684.381 1140.24,684.381 1140.8,684.381 1141.36,684.381 1141.92,684.381 1142.48,684.381 1143.04,684.381 1143.6,684.381 1144.16,684.381 1144.72,684.381 1145.28,684.381 1145.84,684.381 1146.4,684.381 1146.96,684.381 1147.51,684.381 1148.07,684.381 1148.63,684.381 1149.19,684.381 1149.75,684.381 1150.31,684.381 1150.87,684.381 1151.43,684.381 1151.99,684.381 1152.55,684.381 1153.11,684.381 1153.67,684.381 1154.23,684.381 1154.78,684.381 1155.34,684.381 1155.9,684.381 1156.46,684.381 1157.02,684.381 1157.58,684.381 1158.14,684.381 1158.7,684.381 1159.26,684.381 1159.82,684.381 1160.38,684.381 1160.94,684.381 1161.5,684.381 1162.05,684.381 1162.61,684.381 1163.17,684.381 1163.73,684.381 1164.29,684.381 1164.85,684.381 1165.41,684.381 1165.97,684.381 1166.53,684.381 1167.09,684.381 1167.65,684.381 1168.21,684.381 1168.77,684.381 1169.33,684.381 1169.88,684.381 1170.44,684.381 1171,684.381 1171.56,684.381 1172.12,684.381 1172.68,684.381 1173.24,684.381 1173.8,684.381 1174.36,684.381 1174.92,684.381 1175.48,684.381 1176.04,684.381 1176.6,684.381 1177.15,684.381 1177.71,684.381 1178.27,684.381 1178.83,684.381 1179.39,684.381 1179.95,684.381 1180.51,684.381 1181.07,684.381 1181.63,684.381 1182.19,684.381 1182.75,684.381 1183.31,684.381 1183.87,684.381 1184.43,684.381 1184.98,684.381 1185.54,684.381 1186.1,684.381 1186.66,684.381 1187.22,684.381 1187.78,684.381 1188.34,684.381 1188.9,684.381 1189.46,684.381 1190.02,684.381 1190.58,684.381 1191.14,684.381 1191.7,684.381 1192.25,684.381 1192.81,684.381 1193.37,684.381 1193.93,684.381 1194.49,684.381 1195.05,684.381 1195.61,684.381 1196.17,684.381 1196.73,684.381 1197.29,684.381 1197.85,684.381 1198.41,684.381 1198.97,684.381 1199.52,684.381 1200.08,684.381 1200.64,684.381 1201.2,684.381 1201.76,684.381 1202.32,684.381 1202.88,684.381 1203.44,684.381 1204,684.381 1204.56,684.381 1205.12,684.381 1205.68,684.381 1206.24,684.381 1206.8,684.381 1207.35,684.381 1207.91,684.381 1208.47,684.381 1209.03,684.381 1209.59,684.381 1210.15,684.381 1210.71,684.381 1211.27,684.381 1211.83,684.381 1212.39,684.381 1212.95,684.381 1213.51,684.381 1214.07,684.381 1214.62,684.381 1215.18,684.381 1215.74,684.381 1216.3,684.381 1216.86,684.381 1217.42,684.381 1217.98,684.381 1218.54,684.381 1219.1,684.381 1219.66,684.381 1220.22,684.381 1220.78,684.381 1221.34,684.381 1221.89,684.381 1222.45,684.381 1223.01,684.381 1223.57,684.381 1224.13,684.381 1224.69,684.381 1225.25,684.381 1225.81,684.381 1226.37,684.381 1226.93,684.381 1227.49,684.381 1228.05,684.381 1228.61,684.381 1229.17,684.381 1229.72,684.381 1230.28,684.381 1230.84,684.381 1231.4,684.381 1231.96,684.381 1232.52,684.381 1233.08,684.381 1233.64,684.381 1234.2,684.381 1234.76,684.381 1235.32,684.381 1235.88,684.381 1236.44,684.381 1236.99,684.381 1237.55,684.381 1238.11,684.381 1238.67,684.381 1239.23,684.381 1239.79,684.381 1240.35,684.381 1240.91,684.381 1241.47,684.381 1242.03,684.381 1242.59,684.381 1243.15,684.381 1243.71,684.381 1244.26,684.381 1244.82,684.381 1245.38,684.381 1245.94,684.381 1246.5,684.381 1247.06,684.381 1247.62,684.381 1248.18,684.381 1248.74,684.381 1249.3,684.381 1249.86,684.381 1250.42,684.381 1250.98,684.381 1251.54,684.381 1252.09,684.381 1252.65,684.381 1253.21,684.381 1253.77,684.381 1254.33,684.381 1254.89,684.381 1255.45,684.381 1256.01,684.381 1256.57,684.381 1257.13,684.381 1257.69,684.381 1258.25,684.381 1258.81,684.381 1259.36,684.381 1259.92,684.381 1260.48,684.381 1261.04,684.381 1261.6,684.381 1262.16,684.381 1262.72,684.381 1263.28,684.381 1263.84,684.381 1264.4,684.381 1264.96,684.381 1265.52,684.381 1266.08,684.381 1266.63,684.381 1267.19,684.381 1267.75,684.381 1268.31,684.381 1268.87,684.381 1269.43,684.381 1269.99,684.381 1270.55,684.381 1271.11,684.381 1271.67,684.381 1272.23,684.381 1272.79,684.381 1273.35,684.381 1273.91,684.381 1274.46,684.381 1275.02,684.381 1275.58,684.381 1276.14,684.381 1276.7,684.381 1277.26,684.381 1277.82,684.381 1278.38,684.381 1278.94,684.381 1279.5,684.381 1280.06,684.381 1280.62,684.381 1281.18,684.381 1281.73,684.381 1282.29,684.381 1282.85,684.381 1283.41,684.381 1283.97,684.381 1284.53,684.381 1285.09,684.381 1285.65,684.381 1286.21,684.381 1286.77,684.381 1287.33,684.381 1287.89,684.381 1288.45,684.381 1289,684.381 1289.56,684.381 1290.12,684.381 1290.68,684.381 1291.24,684.381 1291.8,684.381 1292.36,684.381 1292.92,684.381 1293.48,684.381 1294.04,684.381 1294.6,684.381 1295.16,684.381 1295.72,684.381 1296.28,684.381 1296.83,684.381 1297.39,684.381 1297.95,684.381 1298.51,684.381 1299.07,684.381 1299.63,684.381 1300.19,684.381 1300.75,684.381 1301.31,684.381 1301.87,684.381 1302.43,684.381 1302.99,684.381 1303.55,684.381 1304.1,684.381 1304.66,684.381 1305.22,684.381 1305.78,684.381 1306.34,684.381 1306.9,684.381 1307.46,684.381 1308.02,684.381 1308.58,684.381 1309.14,684.381 1309.7,684.381 1310.26,684.381 1310.82,684.381 1311.38,684.381 1311.93,684.381 1312.49,684.381 1313.05,684.381 1313.61,684.381 1314.17,684.381 1314.73,684.381 1315.29,684.381 1315.85,684.381 1316.41,684.381 1316.97,684.381 1317.53,684.381 1318.09,684.381 1318.65,684.381 1319.2,684.381 1319.76,684.381 1320.32,684.381 1320.88,684.381 1321.44,684.381 1322,684.381 1322.56,684.381 1323.12,684.381 1323.68,684.381 1324.24,684.381 1324.8,684.381 1325.36,684.381 1325.92,684.381 1326.47,684.381 1327.03,684.381 1327.59,684.381 1328.15,684.381 1328.71,684.381 1329.27,684.381 1329.83,684.381 1330.39,684.381 1330.95,684.381 1331.51,684.381 1332.07,684.381 1332.63,684.381 1333.19,684.381 1333.75,684.381 1334.3,684.381 1334.86,684.381 1335.42,684.381 1335.98,684.381 1336.54,684.381 1337.1,684.381 1337.66,684.381 1338.22,684.381 1338.78,684.381 1339.34,684.381 1339.9,684.381 1340.46,684.381 1341.02,684.381 1341.57,684.381 1342.13,684.381 1342.69,684.381 1343.25,684.381 1343.81,684.381 1344.37,684.381 1344.93,684.381 1345.49,684.381 1346.05,684.381 1346.61,684.381 1347.17,684.381 1347.73,684.381 1348.29,684.381 1348.84,684.381 1349.4,684.381 1349.96,684.381 1350.52,684.381 1351.08,684.381 1351.64,684.381 1352.2,684.381 1352.76,684.381 1353.32,684.381 1353.88,684.381 1354.44,684.381 1355,684.381 1355.56,684.381 1356.12,684.381 1356.67,684.381 1357.23,684.381 1357.79,684.381 1358.35,684.381 1358.91,684.381 1359.47,684.381 1360.03,684.381 1360.59,684.381 1361.15,684.381 1361.71,684.381 1362.27,684.381 1362.83,684.381 1363.39,684.381 1363.94,684.381 1364.5,684.381 1365.06,684.381 1365.62,684.381 1366.18,684.381 1366.74,684.381 1367.3,684.381 1367.86,684.381 1368.42,684.381 1368.98,684.381 1369.54,684.381 1370.1,684.381 1370.66,684.381 1371.21,684.381 1371.77,684.381 1372.33,684.381 1372.89,684.381 1373.45,684.381 1374.01,684.381 1374.57,684.381 1375.13,684.381 1375.69,684.381 1376.25,684.381 1376.81,684.381 1377.37,684.381 1377.93,684.381 1378.49,684.381 1379.04,684.381 1379.6,684.381 1380.16,684.381 1380.72,684.381 1381.28,684.381 1381.84,684.381 1382.4,684.381 1382.96,684.381 1383.52,684.381 1384.08,684.381 1384.64,684.381 1385.2,684.381 1385.76,684.381 1386.31,684.381 1386.87,684.381 1387.43,684.381 1387.99,684.381 1388.55,684.381 1389.11,684.381 1389.67,684.381 1390.23,684.381 1390.79,684.381 1391.35,684.381 1391.91,684.381 1392.47,684.381 1393.03,684.381 1393.58,684.381 1394.14,684.381 1394.7,684.381 1395.26,684.381 1395.82,684.381 1396.38,684.381 1396.94,684.381 1397.5,684.381 1398.06,684.381 1398.62,684.381 1399.18,684.381 1399.74,684.381 1400.3,684.381 1400.86,684.381 1401.41,684.381 1401.97,684.381 1402.53,684.381 1403.09,684.381 1403.65,684.381 1404.21,684.381 1404.77,684.381 1405.33,684.381 1405.89,684.381 1406.45,684.381 1407.01,684.381 1407.57,684.381 1408.13,684.381 1408.68,684.381 1409.24,684.381 1409.8,684.381 1410.36,684.381 1410.92,684.381 1411.48,684.381 1412.04,684.381 1412.6,684.381 1413.16,684.381 1413.72,684.381 1414.28,684.381 1414.84,684.381 1415.4,684.381 1415.95,684.381 1416.51,684.381 1417.07,684.381 1417.63,684.381 1418.19,684.381 1418.75,684.381 1419.31,684.381 1419.87,684.381 1420.43,684.381 1420.99,684.381 1421.55,684.381 1422.11,684.381 1422.67,684.381 1423.23,684.381 1423.78,684.381 1424.34,684.381 1424.9,684.381 1425.46,684.381 1426.02,684.381 1426.58,684.381 1427.14,684.381 1427.7,684.381 1428.26,684.381 1428.82,684.381 1429.38,684.381 1429.94,684.381 1430.5,684.381 1431.05,684.381 1431.61,684.381 1432.17,684.381 1432.73,684.381 1433.29,684.381 1433.85,684.381 1434.41,684.381 1434.97,684.381 1435.53,684.381 1436.09,684.381 1436.65,684.381 1437.21,684.381 1437.77,684.381 1438.33,684.381 1438.88,684.381 1439.44,684.381 1440,684.381 1440.56,684.381 1441.12,684.381 1441.68,684.381 1442.24,684.381 1442.8,684.381 1443.36,684.381 1443.92,684.381 1444.48,684.381 1445.04,684.381 1445.6,684.381 1446.15,684.381 1446.71,684.381 1447.27,684.381 1447.83,684.381 1448.39,684.381 1448.95,684.381 1449.51,684.381 1450.07,684.381 1450.63,684.381 1451.19,684.381 1451.75,684.381 1452.31,684.381 1452.87,684.381 1453.42,684.381 1453.98,684.381 1454.54,684.381 1455.1,684.381 1455.66,684.381 1456.22,684.381 1456.78,684.381 1457.34,684.381 1457.9,684.381 1458.46,684.381 1459.02,684.381 1459.58,684.381 1460.14,684.381 1460.7,684.381 1461.25,684.381 1461.81,684.381 1462.37,684.381 1462.93,684.381 1463.49,684.381 1464.05,684.381 1464.61,684.381 1465.17,684.381 1465.73,684.381 1466.29,684.381 1466.85,684.381 1467.41,684.381 1467.97,684.381 1468.52,684.381 1469.08,684.381 1469.64,684.381 1470.2,684.381 1470.76,684.381 1471.32,684.381 1471.88,684.381 1472.44,684.381 1473,684.381 1473.56,684.381 1474.12,684.381 1474.68,684.381 1475.24,684.381 1475.79,684.381 1476.35,684.381 1476.91,684.381 1477.47,684.381 1478.03,684.381 1478.59,684.381 1479.15,684.381 1479.71,684.381 1480.27,684.381 1480.83,684.381 1481.39,684.381 1481.95,684.381 1482.51,684.381 1483.07,684.381 1483.62,684.381 1484.18,684.381 1484.74,684.381 1485.3,684.381 1485.86,684.381 1486.42,684.381 1486.98,684.381 1487.54,684.381 1488.1,684.381 1488.66,684.381 1489.22,684.381 1489.78,684.381 1490.34,684.381 1490.89,684.381 1491.45,684.381 1492.01,684.381 1492.57,684.381 1493.13,684.381 1493.69,684.381 1494.25,684.381 1494.81,684.381 1495.37,684.381 1495.93,684.381 1496.49,684.381 1497.05,684.381 1497.61,684.381 1498.16,684.381 1498.72,684.381 1499.28,684.381 1499.84,684.381 1500.4,684.381 1500.96,684.381 1501.52,684.381 1502.08,684.381 1502.64,684.381 1503.2,684.381 1503.76,684.381 1504.32,684.381 1504.88,684.381 1505.44,684.381 1505.99,684.381 1506.55,684.381 1507.11,684.381 1507.67,684.381 1508.23,684.381 1508.79,684.381 1509.35,684.381 1509.91,684.381 1510.47,684.381 1511.03,684.381 1511.59,684.381 1512.15,684.381 1512.71,684.381 1513.26,684.381 1513.82,684.381 1514.38,684.381 1514.94,684.381 1515.5,684.381 1516.06,684.381 1516.62,684.381 1517.18,684.381 1517.74,684.381 1518.3,684.381 1518.86,684.381 1519.42,684.381 1519.98,684.381 1520.53,684.381 1521.09,684.381 1521.65,684.381 1522.21,684.381 1522.77,684.381 1523.33,684.381 1523.89,684.381 1524.45,684.381 1525.01,684.381 1525.57,684.381 1526.13,684.381 1526.69,684.381 1527.25,684.381 1527.81,684.381 1528.36,684.381 1528.92,684.381 1529.48,684.381 1530.04,684.381 1530.6,684.381 1531.16,684.381 1531.72,684.381 1532.28,684.381 1532.84,684.381 1533.4,684.381 1533.96,684.381 1534.52,684.381 1535.08,684.381 1535.63,684.381 1536.19,684.381 1536.75,684.381 1537.31,684.381 1537.87,684.381 1538.43,684.381 1538.99,684.381 1539.55,684.381 1540.11,684.381 1540.67,684.381 1541.23,684.381 1541.79,684.381 1542.35,684.381 1542.9,684.381 1543.46,684.381 1544.02,684.381 1544.58,684.381 1545.14,684.381 1545.7,684.381 1546.26,684.381 1546.82,684.381 1547.38,684.381 1547.94,684.381 1548.5,684.381 1549.06,684.381 1549.62,684.381 1550.18,684.381 1550.73,684.381 1551.29,684.381 1551.85,684.381 1552.41,684.381 1552.97,684.381 1553.53,684.381 1554.09,684.381 1554.65,684.381 1555.21,684.381 1555.77,684.381 1556.33,684.381 1556.89,684.381 1557.45,684.381 1558,684.381 1558.56,684.381 1559.12,684.381 1559.68,684.381 1560.24,684.381 1560.8,684.381 1561.36,684.381 1561.92,684.381 1562.48,684.381 1563.04,684.381 1563.6,684.381 1564.16,684.381 1564.72,684.381 1565.28,684.381 1565.83,684.381 1566.39,684.381 1566.95,684.381 1567.51,684.381 1568.07,684.381 1568.63,684.381 1569.19,684.381 1569.75,684.381 1570.31,684.381 1570.87,684.381 1571.43,684.381 1571.99,684.381 1572.55,684.381 1573.1,684.381 1573.66,684.381 1574.22,684.381 1574.78,684.381 1575.34,684.381 1575.9,684.381 1576.46,684.381 1577.02,684.381 1577.58,684.381 1578.14,684.381 1578.7,684.381 1579.26,684.381 1579.82,684.381 1580.37,684.381 1580.93,684.381 1581.49,684.381 1582.05,684.381 1582.61,684.381 1583.17,684.381 1583.73,684.381 1584.29,684.381 1584.85,684.381 1585.41,684.381 1585.97,684.381 1586.53,684.381 1587.09,684.381 1587.65,684.381 1588.2,684.381 1588.76,684.381 1589.32,684.381 1589.88,684.381 1590.44,684.381 1591,684.381 1591.56,684.381 1592.12,684.381 1592.68,684.381 1593.24,684.381 1593.8,684.381 1594.36,684.381 1594.92,684.381 1595.47,684.381 1596.03,684.381 1596.59,684.381 1597.15,684.381 1597.71,684.381 1598.27,684.381 1598.83,684.381 1599.39,684.381 1599.95,684.381 1600.51,684.381 1601.07,684.381 1601.63,684.381 1602.19,684.381 1602.74,684.381 1603.3,684.381 1603.86,684.381 1604.42,684.381 1604.98,684.381 1605.54,684.381 1606.1,684.381 1606.66,684.381 1607.22,684.381 1607.78,684.381 1608.34,684.381 1608.9,684.381 1609.46,684.381 1610.02,684.381 1610.57,684.381 1611.13,684.381 1611.69,684.381 1612.25,684.381 1612.81,684.381 1613.37,684.381 1613.93,684.381 1614.49,684.381 1615.05,684.381 1615.61,684.381 1616.17,684.381 1616.73,684.381 1617.29,684.381 1617.84,684.381 1618.4,684.381 1618.96,684.381 1619.52,684.381 1620.08,684.381 1620.64,684.381 1621.2,684.381 1621.76,684.381 1622.32,684.381 1622.88,684.381 1623.44,684.381 1624,684.381 1624.56,684.381 1625.11,684.381 1625.67,684.381 1626.23,684.381 1626.79,684.381 1627.35,684.381 1627.91,684.381 1628.47,684.381 1629.03,684.381 1629.59,684.381 1630.15,684.381 1630.71,684.381 1631.27,684.381 1631.83,684.381 1632.39,684.381 1632.94,684.381 1633.5,684.381 1634.06,684.381 1634.62,684.381 1635.18,684.381 1635.74,684.381 1636.3,684.381 1636.86,684.381 1637.42,684.381 1637.98,684.381 1638.54,684.381 1639.1,684.381 1639.66,684.381 1640.21,684.381 1640.77,684.381 1641.33,684.381 1641.89,684.381 1642.45,684.381 1643.01,684.381 1643.57,684.381 1644.13,684.381 1644.69,684.381 1645.25,684.381 1645.81,684.381 1646.37,684.381 1646.93,684.381 1647.48,684.381 1648.04,684.381 1648.6,684.381 1649.16,684.381 1649.72,684.381 1650.28,684.381 1650.84,684.381 1651.4,684.381 1651.96,684.381 1652.52,684.381 1653.08,684.381 1653.64,684.381 1654.2,684.381 1654.76,684.381 1655.31,684.381 1655.87,684.381 1656.43,684.381 1656.99,684.381 1657.55,684.381 1658.11,684.381 1658.67,684.381 1659.23,684.381 1659.79,684.381 1660.35,684.381 1660.91,684.381 1661.47,684.381 1662.03,684.381 1662.58,684.381 1663.14,684.381 1663.7,684.381 1664.26,684.381 1664.82,684.381 1665.38,684.381 1665.94,684.381 1666.5,684.381 1667.06,684.381 1667.62,684.381 1668.18,684.381 1668.74,684.381 1669.3,684.381 1669.85,684.381 1670.41,684.381 1670.97,684.381 1671.53,684.381 1672.09,684.381 1672.65,684.381 1673.21,684.381 1673.77,684.381 1674.33,684.381 1674.89,684.381 1675.45,684.381 1676.01,684.381 1676.57,684.381 1677.13,684.381 1677.68,684.381 1678.24,684.381 1678.8,684.381 1679.36,684.381 1679.92,684.381 1680.48,684.381 1681.04,684.381 1681.6,684.381 1682.16,684.381 1682.72,684.381 1683.28,684.381 1683.84,684.381 1684.4,684.381 1684.95,684.381 1685.51,684.381 1686.07,684.381 1686.63,684.381 1687.19,684.381 1687.75,684.381 1688.31,684.381 1688.87,684.381 1689.43,684.381 1689.99,684.381 1690.55,684.381 1691.11,684.381 1691.67,684.381 1692.23,684.381 1692.78,684.381 1693.34,684.381 1693.9,684.381 1694.46,684.381 1695.02,684.381 1695.58,684.381 1696.14,684.381 1696.7,684.381 1697.26,684.381 1697.82,684.381 1698.38,684.381 1698.94,684.381 1699.5,684.381 1700.05,684.381 1700.61,684.381 1701.17,684.381 1701.73,684.381 1702.29,684.381 1702.85,684.381 1703.41,684.381 1703.97,684.381 1704.53,684.381 1705.09,684.381 1705.65,684.381 1706.21,684.381 1706.77,684.381 1707.32,684.381 1707.88,684.381 1708.44,684.381 1709,684.381 1709.56,684.381 1710.12,684.381 1710.68,684.381 1711.24,684.381 1711.8,684.381 1712.36,684.381 1712.92,684.381 1713.48,684.381 1714.04,684.381 1714.6,684.381 1715.15,684.381 1715.71,684.381 1716.27,684.381 1716.83,684.381 1717.39,684.381 1717.95,684.381 1718.51,684.381 1719.07,684.381 1719.63,684.381 1720.19,684.381 1720.75,684.381 1721.31,684.381 1721.87,684.381 1722.42,684.381 1722.98,684.381 1723.54,684.381 1724.1,684.381 1724.66,684.381 1725.22,684.381 1725.78,684.381 1726.34,684.381 1726.9,684.381 1727.46,684.381 1728.02,684.381 1728.58,684.381 1729.14,684.381 1729.69,684.381 1730.25,684.381 1730.81,684.381 1731.37,684.381 1731.93,684.381 1732.49,684.381 1733.05,684.381 1733.61,684.381 1734.17,684.381 1734.73,684.381 1735.29,684.381 1735.85,684.381 1736.41,684.381 1736.97,684.381 1737.52,684.381 1738.08,684.381 1738.64,684.381 1739.2,684.381 1739.76,684.381 1740.32,684.381 1740.88,684.381 1741.44,684.381 1742,684.381 1742.56,684.381 1743.12,684.381 1743.68,684.381 1744.24,684.381 1744.79,684.381 1745.35,684.381 1745.91,684.381 1746.47,684.381 1747.03,684.381 1747.59,684.381 1748.15,684.381 1748.71,684.381 1749.27,684.381 1749.83,684.381 1750.39,684.381 1750.95,684.381 1751.51,684.381 1752.06,684.381 1752.62,684.381 1753.18,684.381 1753.74,684.381 1754.3,684.381 1754.86,684.381 1755.42,684.381 1755.98,684.381 1756.54,684.381 1757.1,684.381 1757.66,684.381 1758.22,684.381 1758.78,684.381 1759.34,684.381 1759.89,684.381 1760.45,684.381 1761.01,684.381 1761.57,684.381 1762.13,684.381 1762.69,684.381 1763.25,684.381 1763.81,684.381 1764.37,684.381 1764.93,684.381 1765.49,684.381 1766.05,684.381 1766.61,684.381 1767.16,684.381 1767.72,684.381 1768.28,684.381 1768.84,684.381 1769.4,684.381 1769.96,684.381 1770.52,684.381 1771.08,684.381 1771.64,684.381 1772.2,684.381 1772.76,684.381 1773.32,684.381 1773.88,684.381 1774.43,684.381 1774.99,684.381 1775.55,684.381 1776.11,684.381 1776.67,684.381 1777.23,684.381 1777.79,684.381 1778.35,684.381 1778.91,684.381 1779.47,684.381 1780.03,684.381 1780.59,684.381 1781.15,684.381 1781.71,684.381 1782.26,684.381 1782.82,684.381 1783.38,684.381 1783.94,684.381 1784.5,684.381 1785.06,684.381 1785.62,684.381 1786.18,684.381 1786.74,684.381 1787.3,684.381 1787.86,684.381 1788.42,684.381 1788.98,684.381 1789.53,684.381 1790.09,684.381 1790.65,684.381 1791.21,684.381 1791.77,684.381 1792.33,684.381 1792.89,684.381 1793.45,684.381 1794.01,684.381 1794.57,684.381 1795.13,684.381 1795.69,684.381 1796.25,684.381 1796.8,684.381 1797.36,684.381 1797.92,684.381 1798.48,684.381 1799.04,684.381 1799.6,684.381 1800.16,684.381 1800.72,684.381 1801.28,684.381 1801.84,684.381 1802.4,684.381 1802.96,684.381 1803.52,684.381 1804.08,684.381 1804.63,684.381 1805.19,684.381 1805.75,684.381 1806.31,684.381 1806.87,684.381 1807.43,684.381 1807.99,684.381 1808.55,684.381 1809.11,684.381 1809.67,684.381 1810.23,684.381 1810.79,684.381 1811.35,684.381 1811.9,684.381 1812.46,684.381 1813.02,684.381 1813.58,684.381 1814.14,684.381 1814.7,684.381 1815.26,684.381 1815.82,684.381 1816.38,684.381 1816.94,684.381 1817.5,684.381 1818.06,684.381 1818.62,684.381 1819.18,684.381 1819.73,684.381 1820.29,684.381 1820.85,684.381 1821.41,684.381 1821.97,684.381 1822.53,684.381 1823.09,684.381 1823.65,684.381 1824.21,684.381 1824.77,684.381 1825.33,684.381 1825.89,684.381 1826.45,684.381 1827,684.381 1827.56,684.381 1828.12,684.381 1828.68,684.381 1829.24,684.381 1829.8,684.381 1830.36,684.381 1830.92,684.381 1831.48,684.381 1832.04,684.381 1832.6,684.381 1833.16,684.381 1833.72,684.381 1834.27,684.381 1834.83,684.381 1835.39,684.381 1835.95,684.381 1836.51,684.381 1837.07,684.381 1837.63,684.381 1838.19,684.381 \"/>\n<path clip-path=\"url(#clip393)\" d=\"M720.247 685.106 L720.806 685.106 L721.365 685.106 L721.924 685.106 L722.484 685.106 L723.043 685.106 L723.602 685.106 L724.161 685.106 L724.721 685.106 L725.28 685.106 L725.839 685.106 L726.398 685.106 L726.958 685.106 L727.517 685.106 L728.076 685.106 L728.635 685.106 L729.195 685.106 L729.754 685.106 L730.313 685.106 L730.872 685.106 L731.432 685.106 L731.991 685.106 L732.55 685.106 L733.109 685.106 L733.669 685.106 L734.228 685.106 L734.787 685.106 L735.346 685.106 L735.906 685.106 L736.465 685.106 L737.024 685.106 L737.583 685.106 L738.143 685.106 L738.702 685.106 L739.261 685.106 L739.82 685.106 L740.38 685.106 L740.939 685.106 L741.498 685.106 L742.057 685.106 L742.617 685.106 L743.176 685.106 L743.735 685.106 L744.294 685.106 L744.854 685.106 L745.413 685.106 L745.972 685.106 L746.531 685.106 L747.091 685.106 L747.65 685.106 L748.209 685.106 L748.768 685.106 L749.328 685.106 L749.887 685.106 L750.446 685.106 L751.005 685.106 L751.565 685.106 L752.124 685.106 L752.683 685.106 L753.242 685.106 L753.802 685.106 L754.361 685.106 L754.92 685.106 L755.479 685.106 L756.039 685.106 L756.598 685.106 L757.157 685.106 L757.716 685.106 L758.276 685.106 L758.835 685.106 L759.394 685.106 L759.953 685.106 L760.513 685.106 L761.072 685.106 L761.631 685.106 L762.19 685.106 L762.75 685.106 L763.309 685.106 L763.868 685.106 L764.427 685.106 L764.987 685.106 L765.546 685.106 L766.105 685.106 L766.664 685.106 L767.224 685.106 L767.783 685.106 L768.342 685.106 L768.901 685.106 L769.461 685.106 L770.02 685.106 L770.579 685.106 L771.138 685.106 L771.698 685.106 L772.257 685.106 L772.816 685.106 L773.375 685.106 L773.935 685.106 L774.494 685.106 L775.053 685.106 L775.612 685.106 L776.172 685.106 L776.731 685.106 L777.29 685.106 L777.849 685.106 L778.409 685.106 L778.968 685.106 L779.527 685.106 L780.086 685.106 L780.646 685.106 L781.205 685.106 L781.764 685.106 L782.323 685.106 L782.883 685.106 L783.442 685.106 L784.001 685.106 L784.56 685.106 L785.12 685.106 L785.679 685.106 L786.238 685.106 L786.797 685.106 L787.357 685.106 L787.916 685.106 L788.475 685.106 L789.034 685.106 L789.594 685.106 L790.153 685.106 L790.712 685.106 L791.271 685.106 L791.831 685.106 L792.39 685.106 L792.949 685.106 L793.508 685.106 L794.068 685.106 L794.627 685.106 L795.186 685.106 L795.745 685.106 L796.305 685.106 L796.864 685.106 L797.423 685.106 L797.982 685.106 L798.542 685.106 L799.101 685.106 L799.66 685.106 L800.219 685.106 L800.779 685.106 L801.338 685.106 L801.897 685.106 L802.456 685.106 L803.016 685.106 L803.575 685.106 L804.134 685.106 L804.693 685.106 L805.253 685.106 L805.812 685.106 L806.371 685.106 L806.931 685.106 L807.49 685.106 L808.049 685.106 L808.608 685.106 L809.168 685.106 L809.727 685.106 L810.286 685.106 L810.845 685.106 L811.405 685.106 L811.964 685.106 L812.523 685.106 L813.082 685.106 L813.642 685.106 L814.201 685.106 L814.76 685.106 L815.319 685.106 L815.879 685.106 L816.438 685.106 L816.997 685.106 L817.556 685.106 L818.116 685.106 L818.675 685.106 L819.234 685.106 L819.793 685.106 L820.353 685.106 L820.912 685.106 L821.471 685.106 L822.03 685.106 L822.59 685.106 L823.149 685.106 L823.708 685.106 L824.267 685.106 L824.827 685.106 L825.386 685.106 L825.945 685.106 L826.504 685.106 L827.064 685.106 L827.623 685.106 L828.182 685.106 L828.741 685.106 L829.301 685.106 L829.86 685.106 L830.419 685.106 L830.978 685.106 L831.538 685.106 L832.097 685.106 L832.656 685.106 L833.215 685.106 L833.775 685.106 L834.334 685.106 L834.893 685.106 L835.452 685.106 L836.012 685.106 L836.571 685.106 L837.13 685.106 L837.689 685.106 L838.249 685.106 L838.808 685.106 L839.367 685.106 L839.926 685.106 L840.486 685.106 L841.045 685.106 L841.604 685.106 L842.163 685.106 L842.723 685.106 L843.282 685.106 L843.841 685.106 L844.4 685.106 L844.96 685.106 L845.519 685.106 L846.078 685.106 L846.637 685.106 L847.197 685.106 L847.756 685.106 L848.315 685.106 L848.874 685.106 L849.434 685.106 L849.993 685.106 L850.552 685.106 L851.111 685.106 L851.671 685.106 L852.23 685.106 L852.789 685.106 L853.348 685.106 L853.908 685.106 L854.467 685.106 L855.026 685.106 L855.585 685.106 L856.145 685.106 L856.704 685.106 L857.263 685.106 L857.822 685.106 L858.382 685.106 L858.941 685.106 L859.5 685.106 L860.059 685.106 L860.619 685.106 L861.178 685.106 L861.737 685.106 L862.296 685.106 L862.856 685.106 L863.415 685.106 L863.974 685.106 L864.533 685.106 L865.093 685.106 L865.652 685.106 L866.211 685.106 L866.77 685.106 L867.33 685.106 L867.889 685.106 L868.448 685.106 L869.007 685.106 L869.567 685.106 L870.126 685.106 L870.685 685.106 L871.244 685.106 L871.804 685.106 L872.363 685.106 L872.922 685.106 L873.481 685.106 L874.041 685.106 L874.6 685.106 L875.159 685.106 L875.718 685.106 L876.278 685.106 L876.837 685.106 L877.396 685.106 L877.955 685.106 L878.515 685.106 L879.074 685.106 L879.633 685.106 L880.192 685.106 L880.752 685.106 L881.311 685.106 L881.87 685.106 L882.429 685.106 L882.989 685.106 L883.548 685.106 L884.107 685.106 L884.666 685.106 L885.226 685.106 L885.785 685.106 L886.344 685.106 L886.903 685.106 L887.463 685.106 L888.022 685.106 L888.581 685.106 L889.14 685.106 L889.7 685.106 L890.259 685.106 L890.818 685.106 L891.377 685.106 L891.937 685.106 L892.496 685.106 L893.055 685.106 L893.614 685.106 L894.174 685.106 L894.733 685.106 L895.292 685.106 L895.851 685.106 L896.411 685.106 L896.97 685.106 L897.529 685.106 L898.088 685.106 L898.648 685.106 L899.207 685.106 L899.766 685.106 L900.325 685.106 L900.885 685.106 L901.444 685.106 L902.003 685.106 L902.562 685.106 L903.122 685.106 L903.681 685.106 L904.24 685.106 L904.799 685.106 L905.359 685.106 L905.918 685.106 L906.477 685.106 L907.036 685.106 L907.596 685.106 L908.155 685.106 L908.714 685.106 L909.273 685.106 L909.833 685.106 L910.392 685.106 L910.951 685.106 L911.51 685.106 L912.07 685.106 L912.629 685.106 L913.188 685.106 L913.747 685.106 L914.307 685.106 L914.866 685.106 L915.425 685.106 L915.984 685.106 L916.544 685.106 L917.103 685.106 L917.662 685.106 L918.221 685.106 L918.781 685.106 L919.34 685.106 L919.899 685.106 L920.458 685.106 L921.018 685.106 L921.577 685.106 L922.136 685.106 L922.695 685.106 L923.255 685.106 L923.814 685.106 L924.373 685.106 L924.932 685.106 L925.492 685.106 L926.051 685.106 L926.61 685.106 L927.169 685.106 L927.729 685.106 L928.288 685.106 L928.847 685.106 L929.406 685.106 L929.966 685.106 L930.525 685.106 L931.084 685.106 L931.644 685.106 L932.203 685.106 L932.762 685.106 L933.321 685.106 L933.881 685.106 L934.44 685.106 L934.999 685.106 L935.558 685.106 L936.118 685.106 L936.677 685.106 L937.236 685.106 L937.795 685.106 L938.355 685.106 L938.914 685.106 L939.473 685.106 L940.032 685.106 L940.592 685.106 L941.151 685.106 L941.71 685.106 L942.269 685.106 L942.829 685.106 L943.388 685.106 L943.947 685.106 L944.506 685.106 L945.066 685.106 L945.625 685.106 L946.184 685.106 L946.743 685.106 L947.303 685.106 L947.862 685.106 L948.421 685.106 L948.98 685.106 L949.54 685.106 L950.099 685.106 L950.658 685.106 L951.217 685.106 L951.777 685.106 L952.336 685.106 L952.895 685.106 L953.454 685.106 L954.014 685.106 L954.573 685.106 L955.132 685.106 L955.691 685.106 L956.251 685.106 L956.81 685.106 L957.369 685.106 L957.928 685.106 L958.488 685.106 L959.047 685.106 L959.606 685.106 L960.165 685.106 L960.725 685.106 L961.284 685.106 L961.843 685.106 L962.402 685.106 L962.962 685.106 L963.521 685.106 L964.08 685.106 L964.639 685.106 L965.199 685.106 L965.758 685.106 L966.317 685.106 L966.876 685.106 L967.436 685.106 L967.995 685.106 L968.554 685.106 L969.113 685.106 L969.673 685.106 L970.232 685.106 L970.791 685.106 L971.35 685.106 L971.91 685.106 L972.469 685.106 L973.028 685.106 L973.587 685.106 L974.147 685.106 L974.706 685.106 L975.265 685.106 L975.824 685.106 L976.384 685.106 L976.943 685.106 L977.502 685.106 L978.061 685.106 L978.621 685.106 L979.18 685.106 L979.739 685.106 L980.298 685.106 L980.858 685.106 L981.417 685.106 L981.976 685.106 L982.535 685.106 L983.095 685.106 L983.654 685.106 L984.213 685.106 L984.772 685.106 L985.332 685.106 L985.891 685.106 L986.45 685.106 L987.009 685.106 L987.569 685.106 L988.128 685.106 L988.687 685.106 L989.246 685.106 L989.806 685.106 L990.365 685.106 L990.924 685.106 L991.483 685.106 L992.043 685.106 L992.602 685.106 L993.161 685.106 L993.72 685.106 L994.28 685.106 L994.839 685.106 L995.398 685.106 L995.957 685.106 L996.517 685.106 L997.076 685.106 L997.635 685.106 L998.194 685.106 L998.754 685.106 L999.313 685.106 L999.872 685.106 L1000.43 685.106 L1000.99 685.106 L1001.55 685.106 L1002.11 685.106 L1002.67 685.106 L1003.23 685.106 L1003.79 685.106 L1004.35 685.106 L1004.91 685.106 L1005.46 685.106 L1006.02 685.106 L1006.58 685.106 L1007.14 685.106 L1007.7 685.106 L1008.26 685.106 L1008.82 685.106 L1009.38 685.106 L1009.94 685.106 L1010.5 685.106 L1011.06 685.106 L1011.62 685.106 L1012.18 685.106 L1012.73 685.106 L1013.29 685.106 L1013.85 685.106 L1014.41 685.106 L1014.97 685.106 L1015.53 685.106 L1016.09 685.106 L1016.65 685.106 L1017.21 685.106 L1017.77 685.106 L1018.33 685.106 L1018.89 685.106 L1019.45 685.106 L1020.01 685.106 L1020.56 685.106 L1021.12 685.106 L1021.68 685.106 L1022.24 685.106 L1022.8 685.106 L1023.36 685.106 L1023.92 685.106 L1024.48 685.106 L1025.04 685.106 L1025.6 685.106 L1026.16 685.106 L1026.72 685.106 L1027.28 685.106 L1027.83 685.106 L1028.39 685.106 L1028.95 685.106 L1029.51 685.106 L1030.07 685.106 L1030.63 685.106 L1031.19 685.106 L1031.75 685.106 L1032.31 685.106 L1032.87 685.106 L1033.43 685.106 L1033.99 685.106 L1034.55 685.106 L1035.1 685.106 L1035.66 685.106 L1036.22 685.106 L1036.78 685.106 L1037.34 685.106 L1037.9 685.106 L1038.46 685.106 L1039.02 685.106 L1039.58 685.106 L1040.14 685.106 L1040.7 685.106 L1041.26 685.106 L1041.82 685.106 L1042.38 685.106 L1042.93 685.106 L1043.49 685.106 L1044.05 685.106 L1044.61 685.106 L1045.17 685.106 L1045.73 685.106 L1046.29 685.106 L1046.85 685.106 L1047.41 685.106 L1047.97 685.106 L1048.53 685.106 L1049.09 685.106 L1049.65 685.106 L1050.2 685.106 L1050.76 685.106 L1051.32 685.106 L1051.88 685.106 L1052.44 685.106 L1053 685.106 L1053.56 685.106 L1054.12 685.106 L1054.68 685.106 L1055.24 685.106 L1055.8 685.106 L1056.36 685.106 L1056.92 685.106 L1057.48 685.106 L1058.03 685.106 L1058.59 685.106 L1059.15 685.106 L1059.71 685.106 L1060.27 685.106 L1060.83 685.106 L1061.39 685.106 L1061.95 685.106 L1062.51 685.106 L1063.07 685.106 L1063.63 685.106 L1064.19 685.106 L1064.75 685.106 L1065.3 685.106 L1065.86 685.106 L1066.42 685.106 L1066.98 685.106 L1067.54 685.106 L1068.1 685.106 L1068.66 685.106 L1069.22 685.106 L1069.78 685.106 L1070.34 685.106 L1070.9 685.106 L1071.46 685.106 L1072.02 685.106 L1072.57 685.106 L1073.13 685.106 L1073.69 685.106 L1074.25 685.106 L1074.81 685.106 L1075.37 685.106 L1075.93 685.106 L1076.49 685.106 L1077.05 685.106 L1077.61 685.106 L1078.17 685.106 L1078.73 685.106 L1079.29 685.106 L1079.85 685.106 L1080.4 685.106 L1080.96 685.106 L1081.52 685.106 L1082.08 685.106 L1082.64 685.106 L1083.2 685.106 L1083.76 685.106 L1084.32 685.106 L1084.88 685.106 L1085.44 685.106 L1086 685.106 L1086.56 685.106 L1087.12 685.106 L1087.67 685.106 L1088.23 685.106 L1088.79 685.106 L1089.35 685.106 L1089.91 685.106 L1090.47 685.106 L1091.03 685.106 L1091.59 685.106 L1092.15 685.106 L1092.71 685.106 L1093.27 685.106 L1093.83 685.106 L1094.39 685.106 L1094.94 685.106 L1095.5 685.106 L1096.06 685.106 L1096.62 685.106 L1097.18 685.106 L1097.74 685.106 L1098.3 685.106 L1098.86 685.106 L1099.42 685.106 L1099.98 685.106 L1100.54 685.106 L1101.1 685.106 L1101.66 685.106 L1102.22 685.106 L1102.77 685.106 L1103.33 685.106 L1103.89 685.106 L1104.45 685.106 L1105.01 685.106 L1105.57 685.106 L1106.13 685.106 L1106.69 685.106 L1107.25 685.106 L1107.81 685.106 L1108.37 685.106 L1108.93 685.106 L1109.49 685.106 L1110.04 685.106 L1110.6 685.106 L1111.16 685.106 L1111.72 685.106 L1112.28 685.106 L1112.84 685.106 L1113.4 685.106 L1113.96 685.106 L1114.52 685.106 L1115.08 685.106 L1115.64 685.106 L1116.2 685.106 L1116.76 685.106 L1117.31 685.106 L1117.87 685.106 L1118.43 685.106 L1118.99 685.106 L1119.55 685.106 L1120.11 685.106 L1120.67 685.106 L1121.23 685.106 L1121.79 685.106 L1122.35 685.106 L1122.91 685.106 L1123.47 685.106 L1124.03 685.106 L1124.59 685.106 L1125.14 685.106 L1125.7 685.106 L1126.26 685.106 L1126.82 685.106 L1127.38 685.106 L1127.94 685.106 L1128.5 685.106 L1129.06 685.106 L1129.62 685.106 L1130.18 685.106 L1130.74 685.106 L1131.3 685.106 L1131.86 685.106 L1132.41 685.106 L1132.97 685.106 L1133.53 685.106 L1134.09 685.106 L1134.65 685.106 L1135.21 685.106 L1135.77 685.106 L1136.33 685.106 L1136.89 685.106 L1137.45 685.106 L1138.01 685.106 L1138.57 685.106 L1139.13 685.106 L1139.68 685.106 L1140.24 685.106 L1140.8 685.106 L1141.36 685.106 L1141.92 685.106 L1142.48 685.106 L1143.04 685.106 L1143.6 685.106 L1144.16 685.106 L1144.72 685.106 L1145.28 685.106 L1145.84 685.106 L1146.4 685.106 L1146.96 685.106 L1147.51 685.106 L1148.07 685.106 L1148.63 685.106 L1149.19 685.106 L1149.75 685.106 L1150.31 685.106 L1150.87 685.106 L1151.43 685.106 L1151.99 685.106 L1152.55 685.106 L1153.11 685.106 L1153.67 685.106 L1154.23 685.106 L1154.78 685.106 L1155.34 685.106 L1155.9 685.106 L1156.46 685.106 L1157.02 685.106 L1157.58 685.106 L1158.14 685.106 L1158.7 685.106 L1159.26 685.106 L1159.82 685.106 L1160.38 685.106 L1160.94 685.106 L1161.5 685.106 L1162.05 685.106 L1162.61 685.106 L1163.17 685.106 L1163.73 685.106 L1164.29 685.106 L1164.85 685.106 L1165.41 685.106 L1165.97 685.106 L1166.53 685.106 L1167.09 685.106 L1167.65 685.106 L1168.21 685.106 L1168.77 685.106 L1169.33 685.106 L1169.88 685.106 L1170.44 685.106 L1171 685.106 L1171.56 685.106 L1172.12 685.106 L1172.68 685.106 L1173.24 685.106 L1173.8 685.106 L1174.36 685.106 L1174.92 685.106 L1175.48 685.106 L1176.04 685.106 L1176.6 685.106 L1177.15 685.106 L1177.71 685.106 L1178.27 685.106 L1178.83 685.106 L1179.39 685.106 L1179.95 685.106 L1180.51 685.106 L1181.07 685.106 L1181.63 685.106 L1182.19 685.106 L1182.75 685.106 L1183.31 685.106 L1183.87 685.106 L1184.43 685.106 L1184.98 685.106 L1185.54 685.106 L1186.1 685.106 L1186.66 685.106 L1187.22 685.106 L1187.78 685.106 L1188.34 685.106 L1188.9 685.106 L1189.46 685.106 L1190.02 685.106 L1190.58 685.106 L1191.14 685.106 L1191.7 685.106 L1192.25 685.106 L1192.81 685.106 L1193.37 685.106 L1193.93 685.106 L1194.49 685.106 L1195.05 685.106 L1195.61 685.106 L1196.17 685.106 L1196.73 685.106 L1197.29 685.106 L1197.85 685.106 L1198.41 685.106 L1198.97 685.106 L1199.52 685.106 L1200.08 685.106 L1200.64 685.106 L1201.2 685.106 L1201.76 685.106 L1202.32 685.106 L1202.88 685.106 L1203.44 685.106 L1204 685.106 L1204.56 685.106 L1205.12 685.106 L1205.68 685.106 L1206.24 685.106 L1206.8 685.106 L1207.35 685.106 L1207.91 685.106 L1208.47 685.106 L1209.03 685.106 L1209.59 685.106 L1210.15 685.106 L1210.71 685.106 L1211.27 685.106 L1211.83 685.106 L1212.39 685.106 L1212.95 685.106 L1213.51 685.106 L1214.07 685.106 L1214.62 685.106 L1215.18 685.106 L1215.74 685.106 L1216.3 685.106 L1216.86 685.106 L1217.42 685.106 L1217.98 685.106 L1218.54 685.106 L1219.1 685.106 L1219.66 685.106 L1220.22 685.106 L1220.78 685.106 L1221.34 685.106 L1221.89 685.106 L1222.45 685.106 L1223.01 685.106 L1223.57 685.106 L1224.13 685.106 L1224.69 685.106 L1225.25 685.106 L1225.81 685.106 L1226.37 685.106 L1226.93 685.106 L1227.49 685.106 L1228.05 685.106 L1228.61 685.106 L1229.17 685.106 L1229.72 685.106 L1230.28 685.106 L1230.84 685.106 L1231.4 685.106 L1231.96 685.106 L1232.52 685.106 L1233.08 685.106 L1233.64 685.106 L1234.2 685.106 L1234.76 685.106 L1235.32 685.106 L1235.88 685.106 L1236.44 685.106 L1236.99 685.106 L1237.55 685.106 L1238.11 685.106 L1238.67 685.106 L1239.23 685.106 L1239.79 685.106 L1240.35 685.106 L1240.91 685.106 L1241.47 685.106 L1242.03 685.106 L1242.59 685.106 L1243.15 685.106 L1243.71 685.106 L1244.26 685.106 L1244.82 685.106 L1245.38 685.106 L1245.94 685.106 L1246.5 685.106 L1247.06 685.106 L1247.62 685.106 L1248.18 685.106 L1248.74 685.106 L1249.3 685.106 L1249.86 685.106 L1250.42 685.106 L1250.98 685.106 L1251.54 685.106 L1252.09 685.106 L1252.65 685.106 L1253.21 685.106 L1253.77 685.106 L1254.33 685.106 L1254.89 685.106 L1255.45 685.106 L1256.01 685.106 L1256.57 685.106 L1257.13 685.106 L1257.69 685.106 L1258.25 685.106 L1258.81 685.106 L1259.36 685.106 L1259.92 685.106 L1260.48 685.106 L1261.04 685.106 L1261.6 685.106 L1262.16 685.106 L1262.72 685.106 L1263.28 685.106 L1263.84 685.106 L1264.4 685.106 L1264.96 685.106 L1265.52 685.106 L1266.08 685.106 L1266.63 685.106 L1267.19 685.106 L1267.75 685.106 L1268.31 685.106 L1268.87 685.106 L1269.43 685.106 L1269.99 685.106 L1270.55 685.106 L1271.11 685.106 L1271.67 685.106 L1272.23 685.106 L1272.79 685.106 L1273.35 685.106 L1273.91 685.106 L1274.46 685.106 L1275.02 685.106 L1275.58 685.106 L1276.14 685.106 L1276.7 685.106 L1277.26 685.106 L1277.82 685.106 L1278.38 685.106 L1278.94 685.106 L1279.5 685.106 L1280.06 685.106 L1280.62 685.106 L1281.18 685.106 L1281.73 685.106 L1282.29 685.106 L1282.85 685.106 L1283.41 685.106 L1283.97 685.106 L1284.53 685.106 L1285.09 685.106 L1285.65 685.106 L1286.21 685.106 L1286.77 685.106 L1287.33 685.106 L1287.89 685.106 L1288.45 685.106 L1289 685.106 L1289.56 685.106 L1290.12 685.106 L1290.68 685.106 L1291.24 685.106 L1291.8 685.106 L1292.36 685.106 L1292.92 685.106 L1293.48 685.106 L1294.04 685.106 L1294.6 685.106 L1295.16 685.106 L1295.72 685.106 L1296.28 685.106 L1296.83 685.106 L1297.39 685.106 L1297.95 685.106 L1298.51 685.106 L1299.07 685.106 L1299.63 685.106 L1300.19 685.106 L1300.75 685.106 L1301.31 685.106 L1301.87 685.106 L1302.43 685.106 L1302.99 685.106 L1303.55 685.106 L1304.1 685.106 L1304.66 685.106 L1305.22 685.106 L1305.78 685.106 L1306.34 685.106 L1306.9 685.106 L1307.46 685.106 L1308.02 685.106 L1308.58 685.106 L1309.14 685.106 L1309.7 685.106 L1310.26 685.106 L1310.82 685.106 L1311.38 685.106 L1311.93 685.106 L1312.49 685.106 L1313.05 685.106 L1313.61 685.106 L1314.17 685.106 L1314.73 685.106 L1315.29 685.106 L1315.85 685.106 L1316.41 685.106 L1316.97 685.106 L1317.53 685.106 L1318.09 685.106 L1318.65 685.106 L1319.2 685.106 L1319.76 685.106 L1320.32 685.106 L1320.88 685.106 L1321.44 685.106 L1322 685.106 L1322.56 685.106 L1323.12 685.106 L1323.68 685.106 L1324.24 685.106 L1324.8 685.106 L1325.36 685.106 L1325.92 685.106 L1326.47 685.106 L1327.03 685.106 L1327.59 685.106 L1328.15 685.106 L1328.71 685.106 L1329.27 685.106 L1329.83 685.106 L1330.39 685.106 L1330.95 685.106 L1331.51 685.106 L1332.07 685.106 L1332.63 685.106 L1333.19 685.106 L1333.75 685.106 L1334.3 685.106 L1334.86 685.106 L1335.42 685.106 L1335.98 685.106 L1336.54 685.106 L1337.1 685.106 L1337.66 685.106 L1338.22 685.106 L1338.78 685.106 L1339.34 685.106 L1339.9 685.106 L1340.46 685.106 L1341.02 685.106 L1341.57 685.106 L1342.13 685.106 L1342.69 685.106 L1343.25 685.106 L1343.81 685.106 L1344.37 685.106 L1344.93 685.106 L1345.49 685.106 L1346.05 685.106 L1346.61 685.106 L1347.17 685.106 L1347.73 685.106 L1348.29 685.106 L1348.84 685.106 L1349.4 685.106 L1349.96 685.106 L1350.52 685.106 L1351.08 685.106 L1351.64 685.106 L1352.2 685.106 L1352.76 685.106 L1353.32 685.106 L1353.88 685.106 L1354.44 685.106 L1355 685.106 L1355.56 685.106 L1356.12 685.106 L1356.67 685.106 L1357.23 685.106 L1357.79 685.106 L1358.35 685.106 L1358.91 685.106 L1359.47 685.106 L1360.03 685.106 L1360.59 685.106 L1361.15 685.106 L1361.71 685.106 L1362.27 685.106 L1362.83 685.106 L1363.39 685.106 L1363.94 685.106 L1364.5 685.106 L1365.06 685.106 L1365.62 685.106 L1366.18 685.106 L1366.74 685.106 L1367.3 685.106 L1367.86 685.106 L1368.42 685.106 L1368.98 685.106 L1369.54 685.106 L1370.1 685.106 L1370.66 685.106 L1371.21 685.106 L1371.77 685.106 L1372.33 685.106 L1372.89 685.106 L1373.45 685.106 L1374.01 685.106 L1374.57 685.106 L1375.13 685.106 L1375.69 685.106 L1376.25 685.106 L1376.81 685.106 L1377.37 685.106 L1377.93 685.106 L1378.49 685.106 L1379.04 685.106 L1379.6 685.106 L1380.16 685.106 L1380.72 685.106 L1381.28 685.106 L1381.84 685.106 L1382.4 685.106 L1382.96 685.106 L1383.52 685.106 L1384.08 685.106 L1384.64 685.106 L1385.2 685.106 L1385.76 685.106 L1386.31 685.106 L1386.87 685.106 L1387.43 685.106 L1387.99 685.106 L1388.55 685.106 L1389.11 685.106 L1389.67 685.106 L1390.23 685.106 L1390.79 685.106 L1391.35 685.106 L1391.91 685.106 L1392.47 685.106 L1393.03 685.106 L1393.58 685.106 L1394.14 685.106 L1394.7 685.106 L1395.26 685.106 L1395.82 685.106 L1396.38 685.106 L1396.94 685.106 L1397.5 685.106 L1398.06 685.106 L1398.62 685.106 L1399.18 685.106 L1399.74 685.106 L1400.3 685.106 L1400.86 685.106 L1401.41 685.106 L1401.97 685.106 L1402.53 685.106 L1403.09 685.106 L1403.65 685.106 L1404.21 685.106 L1404.77 685.106 L1405.33 685.106 L1405.89 685.106 L1406.45 685.106 L1407.01 685.106 L1407.57 685.106 L1408.13 685.106 L1408.68 685.106 L1409.24 685.106 L1409.8 685.106 L1410.36 685.106 L1410.92 685.106 L1411.48 685.106 L1412.04 685.106 L1412.6 685.106 L1413.16 685.106 L1413.72 685.106 L1414.28 685.106 L1414.84 685.106 L1415.4 685.106 L1415.95 685.106 L1416.51 685.106 L1417.07 685.106 L1417.63 685.106 L1418.19 685.106 L1418.75 685.106 L1419.31 685.106 L1419.87 685.106 L1420.43 685.106 L1420.99 685.106 L1421.55 685.106 L1422.11 685.106 L1422.67 685.106 L1423.23 685.106 L1423.78 685.106 L1424.34 685.106 L1424.9 685.106 L1425.46 685.106 L1426.02 685.106 L1426.58 685.106 L1427.14 685.106 L1427.7 685.106 L1428.26 685.106 L1428.82 685.106 L1429.38 685.106 L1429.94 685.106 L1430.5 685.106 L1431.05 685.106 L1431.61 685.106 L1432.17 685.106 L1432.73 685.106 L1433.29 685.106 L1433.85 685.106 L1434.41 685.106 L1434.97 685.106 L1435.53 685.106 L1436.09 685.106 L1436.65 685.106 L1437.21 685.106 L1437.77 685.106 L1438.33 685.106 L1438.88 685.106 L1439.44 685.106 L1440 685.106 L1440.56 685.106 L1441.12 685.106 L1441.68 685.106 L1442.24 685.106 L1442.8 685.106 L1443.36 685.106 L1443.92 685.106 L1444.48 685.106 L1445.04 685.106 L1445.6 685.106 L1446.15 685.106 L1446.71 685.106 L1447.27 685.106 L1447.83 685.106 L1448.39 685.106 L1448.95 685.106 L1449.51 685.106 L1450.07 685.106 L1450.63 685.106 L1451.19 685.106 L1451.75 685.106 L1452.31 685.106 L1452.87 685.106 L1453.42 685.106 L1453.98 685.106 L1454.54 685.106 L1455.1 685.106 L1455.66 685.106 L1456.22 685.106 L1456.78 685.106 L1457.34 685.106 L1457.9 685.106 L1458.46 685.106 L1459.02 685.106 L1459.58 685.106 L1460.14 685.106 L1460.7 685.106 L1461.25 685.106 L1461.81 685.106 L1462.37 685.106 L1462.93 685.106 L1463.49 685.106 L1464.05 685.106 L1464.61 685.106 L1465.17 685.106 L1465.73 685.106 L1466.29 685.106 L1466.85 685.106 L1467.41 685.106 L1467.97 685.106 L1468.52 685.106 L1469.08 685.106 L1469.64 685.106 L1470.2 685.106 L1470.76 685.106 L1471.32 685.106 L1471.88 685.106 L1472.44 685.106 L1473 685.106 L1473.56 685.106 L1474.12 685.106 L1474.68 685.106 L1475.24 685.106 L1475.79 685.106 L1476.35 685.106 L1476.91 685.106 L1477.47 685.106 L1478.03 685.106 L1478.59 685.106 L1479.15 685.106 L1479.71 685.106 L1480.27 685.106 L1480.83 685.106 L1481.39 685.106 L1481.95 685.106 L1482.51 685.106 L1483.07 685.106 L1483.62 685.106 L1484.18 685.106 L1484.74 685.106 L1485.3 685.106 L1485.86 685.106 L1486.42 685.106 L1486.98 685.106 L1487.54 685.106 L1488.1 685.106 L1488.66 685.106 L1489.22 685.106 L1489.78 685.106 L1490.34 685.106 L1490.89 685.106 L1491.45 685.106 L1492.01 685.106 L1492.57 685.106 L1493.13 685.106 L1493.69 685.106 L1494.25 685.106 L1494.81 685.106 L1495.37 685.106 L1495.93 685.106 L1496.49 685.106 L1497.05 685.106 L1497.61 685.106 L1498.16 685.106 L1498.72 685.106 L1499.28 685.106 L1499.84 685.106 L1500.4 685.106 L1500.96 685.106 L1501.52 685.106 L1502.08 685.106 L1502.64 685.106 L1503.2 685.106 L1503.76 685.106 L1504.32 685.106 L1504.88 685.106 L1505.44 685.106 L1505.99 685.106 L1506.55 685.106 L1507.11 685.106 L1507.67 685.106 L1508.23 685.106 L1508.79 685.106 L1509.35 685.106 L1509.91 685.106 L1510.47 685.106 L1511.03 685.106 L1511.59 685.106 L1512.15 685.106 L1512.71 685.106 L1513.26 685.106 L1513.82 685.106 L1514.38 685.106 L1514.94 685.106 L1515.5 685.106 L1516.06 685.106 L1516.62 685.106 L1517.18 685.106 L1517.74 685.106 L1518.3 685.106 L1518.86 685.106 L1519.42 685.106 L1519.98 685.106 L1520.53 685.106 L1521.09 685.106 L1521.65 685.106 L1522.21 685.106 L1522.77 685.106 L1523.33 685.106 L1523.89 685.106 L1524.45 685.106 L1525.01 685.106 L1525.57 685.106 L1526.13 685.106 L1526.69 685.106 L1527.25 685.106 L1527.81 685.106 L1528.36 685.106 L1528.92 685.106 L1529.48 685.106 L1530.04 685.106 L1530.6 685.106 L1531.16 685.106 L1531.72 685.106 L1532.28 685.106 L1532.84 685.106 L1533.4 685.106 L1533.96 685.106 L1534.52 685.106 L1535.08 685.106 L1535.63 685.106 L1536.19 685.106 L1536.75 685.106 L1537.31 685.106 L1537.87 685.106 L1538.43 685.106 L1538.99 685.106 L1539.55 685.106 L1540.11 685.106 L1540.67 685.106 L1541.23 685.106 L1541.79 685.106 L1542.35 685.106 L1542.9 685.106 L1543.46 685.106 L1544.02 685.106 L1544.58 685.106 L1545.14 685.106 L1545.7 685.106 L1546.26 685.106 L1546.82 685.106 L1547.38 685.106 L1547.94 685.106 L1548.5 685.106 L1549.06 685.106 L1549.62 685.106 L1550.18 685.106 L1550.73 685.106 L1551.29 685.106 L1551.85 685.106 L1552.41 685.106 L1552.97 685.106 L1553.53 685.106 L1554.09 685.106 L1554.65 685.106 L1555.21 685.106 L1555.77 685.106 L1556.33 685.106 L1556.89 685.106 L1557.45 685.106 L1558 685.106 L1558.56 685.106 L1559.12 685.106 L1559.68 685.106 L1560.24 685.106 L1560.8 685.106 L1561.36 685.106 L1561.92 685.106 L1562.48 685.106 L1563.04 685.106 L1563.6 685.106 L1564.16 685.106 L1564.72 685.106 L1565.28 685.106 L1565.83 685.106 L1566.39 685.106 L1566.95 685.106 L1567.51 685.106 L1568.07 685.106 L1568.63 685.106 L1569.19 685.106 L1569.75 685.106 L1570.31 685.106 L1570.87 685.106 L1571.43 685.106 L1571.99 685.106 L1572.55 685.106 L1573.1 685.106 L1573.66 685.106 L1574.22 685.106 L1574.78 685.106 L1575.34 685.106 L1575.9 685.106 L1576.46 685.106 L1577.02 685.106 L1577.58 685.106 L1578.14 685.106 L1578.7 685.106 L1579.26 685.106 L1579.82 685.106 L1580.37 685.106 L1580.93 685.106 L1581.49 685.106 L1582.05 685.106 L1582.61 685.106 L1583.17 685.106 L1583.73 685.106 L1584.29 685.106 L1584.85 685.106 L1585.41 685.106 L1585.97 685.106 L1586.53 685.106 L1587.09 685.106 L1587.65 685.106 L1588.2 685.106 L1588.76 685.106 L1589.32 685.106 L1589.88 685.106 L1590.44 685.106 L1591 685.106 L1591.56 685.106 L1592.12 685.106 L1592.68 685.106 L1593.24 685.106 L1593.8 685.106 L1594.36 685.106 L1594.92 685.106 L1595.47 685.106 L1596.03 685.106 L1596.59 685.106 L1597.15 685.106 L1597.71 685.106 L1598.27 685.106 L1598.83 685.106 L1599.39 685.106 L1599.95 685.106 L1600.51 685.106 L1601.07 685.106 L1601.63 685.106 L1602.19 685.106 L1602.74 685.106 L1603.3 685.106 L1603.86 685.106 L1604.42 685.106 L1604.98 685.106 L1605.54 685.106 L1606.1 685.106 L1606.66 685.106 L1607.22 685.106 L1607.78 685.106 L1608.34 685.106 L1608.9 685.106 L1609.46 685.106 L1610.02 685.106 L1610.57 685.106 L1611.13 685.106 L1611.69 685.106 L1612.25 685.106 L1612.81 685.106 L1613.37 685.106 L1613.93 685.106 L1614.49 685.106 L1615.05 685.106 L1615.61 685.106 L1616.17 685.106 L1616.73 685.106 L1617.29 685.106 L1617.84 685.106 L1618.4 685.106 L1618.96 685.106 L1619.52 685.106 L1620.08 685.106 L1620.64 685.106 L1621.2 685.106 L1621.76 685.106 L1622.32 685.106 L1622.88 685.106 L1623.44 685.106 L1624 685.106 L1624.56 685.106 L1625.11 685.106 L1625.67 685.106 L1626.23 685.106 L1626.79 685.106 L1627.35 685.106 L1627.91 685.106 L1628.47 685.106 L1629.03 685.106 L1629.59 685.106 L1630.15 685.106 L1630.71 685.106 L1631.27 685.106 L1631.83 685.106 L1632.39 685.106 L1632.94 685.106 L1633.5 685.106 L1634.06 685.106 L1634.62 685.106 L1635.18 685.106 L1635.74 685.106 L1636.3 685.106 L1636.86 685.106 L1637.42 685.106 L1637.98 685.106 L1638.54 685.106 L1639.1 685.106 L1639.66 685.106 L1640.21 685.106 L1640.77 685.106 L1641.33 685.106 L1641.89 685.106 L1642.45 685.106 L1643.01 685.106 L1643.57 685.106 L1644.13 685.106 L1644.69 685.106 L1645.25 685.106 L1645.81 685.106 L1646.37 685.106 L1646.93 685.106 L1647.48 685.106 L1648.04 685.106 L1648.6 685.106 L1649.16 685.106 L1649.72 685.106 L1650.28 685.106 L1650.84 685.106 L1651.4 685.106 L1651.96 685.106 L1652.52 685.106 L1653.08 685.106 L1653.64 685.106 L1654.2 685.106 L1654.76 685.106 L1655.31 685.106 L1655.87 685.106 L1656.43 685.106 L1656.99 685.106 L1657.55 685.106 L1658.11 685.106 L1658.67 685.106 L1659.23 685.106 L1659.79 685.106 L1660.35 685.106 L1660.91 685.106 L1661.47 685.106 L1662.03 685.106 L1662.58 685.106 L1663.14 685.106 L1663.7 685.106 L1664.26 685.106 L1664.82 685.106 L1665.38 685.106 L1665.94 685.106 L1666.5 685.106 L1667.06 685.106 L1667.62 685.106 L1668.18 685.106 L1668.74 685.106 L1669.3 685.106 L1669.85 685.106 L1670.41 685.106 L1670.97 685.106 L1671.53 685.106 L1672.09 685.106 L1672.65 685.106 L1673.21 685.106 L1673.77 685.106 L1674.33 685.106 L1674.89 685.106 L1675.45 685.106 L1676.01 685.106 L1676.57 685.106 L1677.13 685.106 L1677.68 685.106 L1678.24 685.106 L1678.8 685.106 L1679.36 685.106 L1679.92 685.106 L1680.48 685.106 L1681.04 685.106 L1681.6 685.106 L1682.16 685.106 L1682.72 685.106 L1683.28 685.106 L1683.84 685.106 L1684.4 685.106 L1684.95 685.106 L1685.51 685.106 L1686.07 685.106 L1686.63 685.106 L1687.19 685.106 L1687.75 685.106 L1688.31 685.106 L1688.87 685.106 L1689.43 685.106 L1689.99 685.106 L1690.55 685.106 L1691.11 685.106 L1691.67 685.106 L1692.23 685.106 L1692.78 685.106 L1693.34 685.106 L1693.9 685.106 L1694.46 685.106 L1695.02 685.106 L1695.58 685.106 L1696.14 685.106 L1696.7 685.106 L1697.26 685.106 L1697.82 685.106 L1698.38 685.106 L1698.94 685.106 L1699.5 685.106 L1700.05 685.106 L1700.61 685.106 L1701.17 685.106 L1701.73 685.106 L1702.29 685.106 L1702.85 685.106 L1703.41 685.106 L1703.97 685.106 L1704.53 685.106 L1705.09 685.106 L1705.65 685.106 L1706.21 685.106 L1706.77 685.106 L1707.32 685.106 L1707.88 685.106 L1708.44 685.106 L1709 685.106 L1709.56 685.106 L1710.12 685.106 L1710.68 685.106 L1711.24 685.106 L1711.8 685.106 L1712.36 685.106 L1712.92 685.106 L1713.48 685.106 L1714.04 685.106 L1714.6 685.106 L1715.15 685.106 L1715.71 685.106 L1716.27 685.106 L1716.83 685.106 L1717.39 685.106 L1717.95 685.106 L1718.51 685.106 L1719.07 685.106 L1719.63 685.106 L1720.19 685.106 L1720.75 685.106 L1721.31 685.106 L1721.87 685.106 L1722.42 685.106 L1722.98 685.106 L1723.54 685.106 L1724.1 685.106 L1724.66 685.106 L1725.22 685.106 L1725.78 685.106 L1726.34 685.106 L1726.9 685.106 L1727.46 685.106 L1728.02 685.106 L1728.58 685.106 L1729.14 685.106 L1729.69 685.106 L1730.25 685.106 L1730.81 685.106 L1731.37 685.106 L1731.93 685.106 L1732.49 685.106 L1733.05 685.106 L1733.61 685.106 L1734.17 685.106 L1734.73 685.106 L1735.29 685.106 L1735.85 685.106 L1736.41 685.106 L1736.97 685.106 L1737.52 685.106 L1738.08 685.106 L1738.64 685.106 L1739.2 685.106 L1739.76 685.106 L1740.32 685.106 L1740.88 685.106 L1741.44 685.106 L1742 685.106 L1742.56 685.106 L1743.12 685.106 L1743.68 685.106 L1744.24 685.106 L1744.79 685.106 L1745.35 685.106 L1745.91 685.106 L1746.47 685.106 L1747.03 685.106 L1747.59 685.106 L1748.15 685.106 L1748.71 685.106 L1749.27 685.106 L1749.83 685.106 L1750.39 685.106 L1750.95 685.106 L1751.51 685.106 L1752.06 685.106 L1752.62 685.106 L1753.18 685.106 L1753.74 685.106 L1754.3 685.106 L1754.86 685.106 L1755.42 685.106 L1755.98 685.106 L1756.54 685.106 L1757.1 685.106 L1757.66 685.106 L1758.22 685.106 L1758.78 685.106 L1759.34 685.106 L1759.89 685.106 L1760.45 685.106 L1761.01 685.106 L1761.57 685.106 L1762.13 685.106 L1762.69 685.106 L1763.25 685.106 L1763.81 685.106 L1764.37 685.106 L1764.93 685.106 L1765.49 685.106 L1766.05 685.106 L1766.61 685.106 L1767.16 685.106 L1767.72 685.106 L1768.28 685.106 L1768.84 685.106 L1769.4 685.106 L1769.96 685.106 L1770.52 685.106 L1771.08 685.106 L1771.64 685.106 L1772.2 685.106 L1772.76 685.106 L1773.32 685.106 L1773.88 685.106 L1774.43 685.106 L1774.99 685.106 L1775.55 685.106 L1776.11 685.106 L1776.67 685.106 L1777.23 685.106 L1777.79 685.106 L1778.35 685.106 L1778.91 685.106 L1779.47 685.106 L1780.03 685.106 L1780.59 685.106 L1781.15 685.106 L1781.71 685.106 L1782.26 685.106 L1782.82 685.106 L1783.38 685.106 L1783.94 685.106 L1784.5 685.106 L1785.06 685.106 L1785.62 685.106 L1786.18 685.106 L1786.74 685.106 L1787.3 685.106 L1787.86 685.106 L1788.42 685.106 L1788.98 685.106 L1789.53 685.106 L1790.09 685.106 L1790.65 685.106 L1791.21 685.106 L1791.77 685.106 L1792.33 685.106 L1792.89 685.106 L1793.45 685.106 L1794.01 685.106 L1794.57 685.106 L1795.13 685.106 L1795.69 685.106 L1796.25 685.106 L1796.8 685.106 L1797.36 685.106 L1797.92 685.106 L1798.48 685.106 L1799.04 685.106 L1799.6 685.106 L1800.16 685.106 L1800.72 685.106 L1801.28 685.106 L1801.84 685.106 L1802.4 685.106 L1802.96 685.106 L1803.52 685.106 L1804.08 685.106 L1804.63 685.106 L1805.19 685.106 L1805.75 685.106 L1806.31 685.106 L1806.87 685.106 L1807.43 685.106 L1807.99 685.106 L1808.55 685.106 L1809.11 685.106 L1809.67 685.106 L1810.23 685.106 L1810.79 685.106 L1811.35 685.106 L1811.9 685.106 L1812.46 685.106 L1813.02 685.106 L1813.58 685.106 L1814.14 685.106 L1814.7 685.106 L1815.26 685.106 L1815.82 685.106 L1816.38 685.106 L1816.94 685.106 L1817.5 685.106 L1818.06 685.106 L1818.62 685.106 L1819.18 685.106 L1819.73 685.106 L1820.29 685.106 L1820.85 685.106 L1821.41 685.106 L1821.97 685.106 L1822.53 685.106 L1823.09 685.106 L1823.65 685.106 L1824.21 685.106 L1824.77 685.106 L1825.33 685.106 L1825.89 685.106 L1826.45 685.106 L1827 685.106 L1827.56 685.106 L1828.12 685.106 L1828.68 685.106 L1829.24 685.106 L1829.8 685.106 L1830.36 685.106 L1830.92 685.106 L1831.48 685.106 L1832.04 685.106 L1832.6 685.106 L1833.16 685.106 L1833.72 685.106 L1834.27 685.106 L1834.83 685.106 L1835.39 685.106 L1835.95 685.106 L1836.51 685.106 L1837.07 685.106 L1837.63 685.106 L1838.19 685.106 L1838.19 682.44 L1837.63 682.44 L1837.07 682.44 L1836.51 682.44 L1835.95 682.44 L1835.39 682.44 L1834.83 682.44 L1834.27 682.44 L1833.72 682.44 L1833.16 682.44 L1832.6 682.44 L1832.04 682.44 L1831.48 682.44 L1830.92 682.44 L1830.36 682.44 L1829.8 682.44 L1829.24 682.44 L1828.68 682.44 L1828.12 682.44 L1827.56 682.44 L1827 682.44 L1826.45 682.44 L1825.89 682.44 L1825.33 682.44 L1824.77 682.44 L1824.21 682.44 L1823.65 682.44 L1823.09 682.44 L1822.53 682.44 L1821.97 682.44 L1821.41 682.44 L1820.85 682.44 L1820.29 682.44 L1819.73 682.44 L1819.18 682.44 L1818.62 682.44 L1818.06 682.44 L1817.5 682.44 L1816.94 682.44 L1816.38 682.44 L1815.82 682.44 L1815.26 682.44 L1814.7 682.44 L1814.14 682.44 L1813.58 682.44 L1813.02 682.44 L1812.46 682.44 L1811.9 682.44 L1811.35 682.44 L1810.79 682.44 L1810.23 682.44 L1809.67 682.44 L1809.11 682.44 L1808.55 682.44 L1807.99 682.44 L1807.43 682.44 L1806.87 682.44 L1806.31 682.44 L1805.75 682.44 L1805.19 682.44 L1804.63 682.44 L1804.08 682.44 L1803.52 682.44 L1802.96 682.44 L1802.4 682.44 L1801.84 682.44 L1801.28 682.44 L1800.72 682.44 L1800.16 682.44 L1799.6 682.44 L1799.04 682.44 L1798.48 682.44 L1797.92 682.44 L1797.36 682.44 L1796.8 682.44 L1796.25 682.44 L1795.69 682.44 L1795.13 682.44 L1794.57 682.44 L1794.01 682.44 L1793.45 682.44 L1792.89 682.44 L1792.33 682.44 L1791.77 682.44 L1791.21 682.44 L1790.65 682.44 L1790.09 682.44 L1789.53 682.44 L1788.98 682.44 L1788.42 682.44 L1787.86 682.44 L1787.3 682.44 L1786.74 682.44 L1786.18 682.44 L1785.62 682.44 L1785.06 682.44 L1784.5 682.44 L1783.94 682.44 L1783.38 682.44 L1782.82 682.44 L1782.26 682.44 L1781.71 682.44 L1781.15 682.44 L1780.59 682.44 L1780.03 682.44 L1779.47 682.44 L1778.91 682.44 L1778.35 682.44 L1777.79 682.44 L1777.23 682.44 L1776.67 682.44 L1776.11 682.44 L1775.55 682.44 L1774.99 682.44 L1774.43 682.44 L1773.88 682.44 L1773.32 682.44 L1772.76 682.44 L1772.2 682.44 L1771.64 682.44 L1771.08 682.44 L1770.52 682.44 L1769.96 682.44 L1769.4 682.44 L1768.84 682.44 L1768.28 682.44 L1767.72 682.44 L1767.16 682.44 L1766.61 682.44 L1766.05 682.44 L1765.49 682.44 L1764.93 682.44 L1764.37 682.44 L1763.81 682.44 L1763.25 682.44 L1762.69 682.44 L1762.13 682.44 L1761.57 682.44 L1761.01 682.44 L1760.45 682.44 L1759.89 682.44 L1759.34 682.44 L1758.78 682.44 L1758.22 682.44 L1757.66 682.44 L1757.1 682.44 L1756.54 682.44 L1755.98 682.44 L1755.42 682.44 L1754.86 682.44 L1754.3 682.44 L1753.74 682.44 L1753.18 682.44 L1752.62 682.44 L1752.06 682.44 L1751.51 682.44 L1750.95 682.44 L1750.39 682.44 L1749.83 682.44 L1749.27 682.44 L1748.71 682.44 L1748.15 682.44 L1747.59 682.44 L1747.03 682.44 L1746.47 682.44 L1745.91 682.44 L1745.35 682.44 L1744.79 682.44 L1744.24 682.44 L1743.68 682.44 L1743.12 682.44 L1742.56 682.44 L1742 682.44 L1741.44 682.44 L1740.88 682.44 L1740.32 682.44 L1739.76 682.44 L1739.2 682.44 L1738.64 682.44 L1738.08 682.44 L1737.52 682.44 L1736.97 682.44 L1736.41 682.44 L1735.85 682.44 L1735.29 682.44 L1734.73 682.44 L1734.17 682.44 L1733.61 682.44 L1733.05 682.44 L1732.49 682.44 L1731.93 682.44 L1731.37 682.44 L1730.81 682.44 L1730.25 682.44 L1729.69 682.44 L1729.14 682.44 L1728.58 682.44 L1728.02 682.44 L1727.46 682.44 L1726.9 682.44 L1726.34 682.44 L1725.78 682.44 L1725.22 682.44 L1724.66 682.44 L1724.1 682.44 L1723.54 682.44 L1722.98 682.44 L1722.42 682.44 L1721.87 682.44 L1721.31 682.44 L1720.75 682.44 L1720.19 682.44 L1719.63 682.44 L1719.07 682.44 L1718.51 682.44 L1717.95 682.44 L1717.39 682.44 L1716.83 682.44 L1716.27 682.44 L1715.71 682.44 L1715.15 682.44 L1714.6 682.44 L1714.04 682.44 L1713.48 682.44 L1712.92 682.44 L1712.36 682.44 L1711.8 682.44 L1711.24 682.44 L1710.68 682.44 L1710.12 682.44 L1709.56 682.44 L1709 682.44 L1708.44 682.44 L1707.88 682.44 L1707.32 682.44 L1706.77 682.44 L1706.21 682.44 L1705.65 682.44 L1705.09 682.44 L1704.53 682.44 L1703.97 682.44 L1703.41 682.44 L1702.85 682.44 L1702.29 682.44 L1701.73 682.44 L1701.17 682.44 L1700.61 682.44 L1700.05 682.44 L1699.5 682.44 L1698.94 682.44 L1698.38 682.44 L1697.82 682.44 L1697.26 682.44 L1696.7 682.44 L1696.14 682.44 L1695.58 682.44 L1695.02 682.44 L1694.46 682.44 L1693.9 682.44 L1693.34 682.44 L1692.78 682.44 L1692.23 682.44 L1691.67 682.44 L1691.11 682.44 L1690.55 682.44 L1689.99 682.44 L1689.43 682.44 L1688.87 682.44 L1688.31 682.44 L1687.75 682.44 L1687.19 682.44 L1686.63 682.44 L1686.07 682.44 L1685.51 682.44 L1684.95 682.44 L1684.4 682.44 L1683.84 682.44 L1683.28 682.44 L1682.72 682.44 L1682.16 682.44 L1681.6 682.44 L1681.04 682.44 L1680.48 682.44 L1679.92 682.44 L1679.36 682.44 L1678.8 682.44 L1678.24 682.44 L1677.68 682.44 L1677.13 682.44 L1676.57 682.44 L1676.01 682.44 L1675.45 682.44 L1674.89 682.44 L1674.33 682.44 L1673.77 682.44 L1673.21 682.44 L1672.65 682.44 L1672.09 682.44 L1671.53 682.44 L1670.97 682.44 L1670.41 682.44 L1669.85 682.44 L1669.3 682.44 L1668.74 682.44 L1668.18 682.44 L1667.62 682.44 L1667.06 682.44 L1666.5 682.44 L1665.94 682.44 L1665.38 682.44 L1664.82 682.44 L1664.26 682.44 L1663.7 682.44 L1663.14 682.44 L1662.58 682.44 L1662.03 682.44 L1661.47 682.44 L1660.91 682.44 L1660.35 682.44 L1659.79 682.44 L1659.23 682.44 L1658.67 682.44 L1658.11 682.44 L1657.55 682.44 L1656.99 682.44 L1656.43 682.44 L1655.87 682.44 L1655.31 682.44 L1654.76 682.44 L1654.2 682.44 L1653.64 682.44 L1653.08 682.44 L1652.52 682.44 L1651.96 682.44 L1651.4 682.44 L1650.84 682.44 L1650.28 682.44 L1649.72 682.44 L1649.16 682.44 L1648.6 682.44 L1648.04 682.44 L1647.48 682.44 L1646.93 682.44 L1646.37 682.44 L1645.81 682.44 L1645.25 682.44 L1644.69 682.44 L1644.13 682.44 L1643.57 682.44 L1643.01 682.44 L1642.45 682.44 L1641.89 682.44 L1641.33 682.44 L1640.77 682.44 L1640.21 682.44 L1639.66 682.44 L1639.1 682.44 L1638.54 682.44 L1637.98 682.44 L1637.42 682.44 L1636.86 682.44 L1636.3 682.44 L1635.74 682.44 L1635.18 682.44 L1634.62 682.44 L1634.06 682.44 L1633.5 682.44 L1632.94 682.44 L1632.39 682.44 L1631.83 682.44 L1631.27 682.44 L1630.71 682.44 L1630.15 682.44 L1629.59 682.44 L1629.03 682.44 L1628.47 682.44 L1627.91 682.44 L1627.35 682.44 L1626.79 682.44 L1626.23 682.44 L1625.67 682.44 L1625.11 682.44 L1624.56 682.44 L1624 682.44 L1623.44 682.44 L1622.88 682.44 L1622.32 682.44 L1621.76 682.44 L1621.2 682.44 L1620.64 682.44 L1620.08 682.44 L1619.52 682.44 L1618.96 682.44 L1618.4 682.44 L1617.84 682.44 L1617.29 682.44 L1616.73 682.44 L1616.17 682.44 L1615.61 682.44 L1615.05 682.44 L1614.49 682.44 L1613.93 682.44 L1613.37 682.44 L1612.81 682.44 L1612.25 682.44 L1611.69 682.44 L1611.13 682.44 L1610.57 682.44 L1610.02 682.44 L1609.46 682.44 L1608.9 682.44 L1608.34 682.44 L1607.78 682.44 L1607.22 682.44 L1606.66 682.44 L1606.1 682.44 L1605.54 682.44 L1604.98 682.44 L1604.42 682.44 L1603.86 682.44 L1603.3 682.44 L1602.74 682.44 L1602.19 682.44 L1601.63 682.44 L1601.07 682.44 L1600.51 682.44 L1599.95 682.44 L1599.39 682.44 L1598.83 682.44 L1598.27 682.44 L1597.71 682.44 L1597.15 682.44 L1596.59 682.44 L1596.03 682.44 L1595.47 682.44 L1594.92 682.44 L1594.36 682.44 L1593.8 682.44 L1593.24 682.44 L1592.68 682.44 L1592.12 682.44 L1591.56 682.44 L1591 682.44 L1590.44 682.44 L1589.88 682.44 L1589.32 682.44 L1588.76 682.44 L1588.2 682.44 L1587.65 682.44 L1587.09 682.44 L1586.53 682.44 L1585.97 682.44 L1585.41 682.44 L1584.85 682.44 L1584.29 682.44 L1583.73 682.44 L1583.17 682.44 L1582.61 682.44 L1582.05 682.44 L1581.49 682.44 L1580.93 682.44 L1580.37 682.44 L1579.82 682.44 L1579.26 682.44 L1578.7 682.44 L1578.14 682.44 L1577.58 682.44 L1577.02 682.44 L1576.46 682.44 L1575.9 682.44 L1575.34 682.44 L1574.78 682.44 L1574.22 682.44 L1573.66 682.44 L1573.1 682.44 L1572.55 682.44 L1571.99 682.44 L1571.43 682.44 L1570.87 682.44 L1570.31 682.44 L1569.75 682.44 L1569.19 682.44 L1568.63 682.44 L1568.07 682.44 L1567.51 682.44 L1566.95 682.44 L1566.39 682.44 L1565.83 682.44 L1565.28 682.44 L1564.72 682.44 L1564.16 682.44 L1563.6 682.44 L1563.04 682.44 L1562.48 682.44 L1561.92 682.44 L1561.36 682.44 L1560.8 682.44 L1560.24 682.44 L1559.68 682.44 L1559.12 682.44 L1558.56 682.44 L1558 682.44 L1557.45 682.44 L1556.89 682.44 L1556.33 682.44 L1555.77 682.44 L1555.21 682.44 L1554.65 682.44 L1554.09 682.44 L1553.53 682.44 L1552.97 682.44 L1552.41 682.44 L1551.85 682.44 L1551.29 682.44 L1550.73 682.44 L1550.18 682.44 L1549.62 682.44 L1549.06 682.44 L1548.5 682.44 L1547.94 682.44 L1547.38 682.44 L1546.82 682.44 L1546.26 682.44 L1545.7 682.44 L1545.14 682.44 L1544.58 682.44 L1544.02 682.44 L1543.46 682.44 L1542.9 682.44 L1542.35 682.44 L1541.79 682.44 L1541.23 682.44 L1540.67 682.44 L1540.11 682.44 L1539.55 682.44 L1538.99 682.44 L1538.43 682.44 L1537.87 682.44 L1537.31 682.44 L1536.75 682.44 L1536.19 682.44 L1535.63 682.44 L1535.08 682.44 L1534.52 682.44 L1533.96 682.44 L1533.4 682.44 L1532.84 682.44 L1532.28 682.44 L1531.72 682.44 L1531.16 682.44 L1530.6 682.44 L1530.04 682.44 L1529.48 682.44 L1528.92 682.44 L1528.36 682.44 L1527.81 682.44 L1527.25 682.44 L1526.69 682.44 L1526.13 682.44 L1525.57 682.44 L1525.01 682.44 L1524.45 682.44 L1523.89 682.44 L1523.33 682.44 L1522.77 682.44 L1522.21 682.44 L1521.65 682.44 L1521.09 682.44 L1520.53 682.44 L1519.98 682.44 L1519.42 682.44 L1518.86 682.44 L1518.3 682.44 L1517.74 682.44 L1517.18 682.44 L1516.62 682.44 L1516.06 682.44 L1515.5 682.44 L1514.94 682.44 L1514.38 682.44 L1513.82 682.44 L1513.26 682.44 L1512.71 682.44 L1512.15 682.44 L1511.59 682.44 L1511.03 682.44 L1510.47 682.44 L1509.91 682.44 L1509.35 682.44 L1508.79 682.44 L1508.23 682.44 L1507.67 682.44 L1507.11 682.44 L1506.55 682.44 L1505.99 682.44 L1505.44 682.44 L1504.88 682.44 L1504.32 682.44 L1503.76 682.44 L1503.2 682.44 L1502.64 682.44 L1502.08 682.44 L1501.52 682.44 L1500.96 682.44 L1500.4 682.44 L1499.84 682.44 L1499.28 682.44 L1498.72 682.44 L1498.16 682.44 L1497.61 682.44 L1497.05 682.44 L1496.49 682.44 L1495.93 682.44 L1495.37 682.44 L1494.81 682.44 L1494.25 682.44 L1493.69 682.44 L1493.13 682.44 L1492.57 682.44 L1492.01 682.44 L1491.45 682.44 L1490.89 682.44 L1490.34 682.44 L1489.78 682.44 L1489.22 682.44 L1488.66 682.44 L1488.1 682.44 L1487.54 682.44 L1486.98 682.44 L1486.42 682.44 L1485.86 682.44 L1485.3 682.44 L1484.74 682.44 L1484.18 682.44 L1483.62 682.44 L1483.07 682.44 L1482.51 682.44 L1481.95 682.44 L1481.39 682.44 L1480.83 682.44 L1480.27 682.44 L1479.71 682.44 L1479.15 682.44 L1478.59 682.44 L1478.03 682.44 L1477.47 682.44 L1476.91 682.44 L1476.35 682.44 L1475.79 682.44 L1475.24 682.44 L1474.68 682.44 L1474.12 682.44 L1473.56 682.44 L1473 682.44 L1472.44 682.44 L1471.88 682.44 L1471.32 682.44 L1470.76 682.44 L1470.2 682.44 L1469.64 682.44 L1469.08 682.44 L1468.52 682.44 L1467.97 682.44 L1467.41 682.44 L1466.85 682.44 L1466.29 682.44 L1465.73 682.44 L1465.17 682.44 L1464.61 682.44 L1464.05 682.44 L1463.49 682.44 L1462.93 682.44 L1462.37 682.44 L1461.81 682.44 L1461.25 682.44 L1460.7 682.44 L1460.14 682.44 L1459.58 682.44 L1459.02 682.44 L1458.46 682.44 L1457.9 682.44 L1457.34 682.44 L1456.78 682.44 L1456.22 682.44 L1455.66 682.44 L1455.1 682.44 L1454.54 682.44 L1453.98 682.44 L1453.42 682.44 L1452.87 682.44 L1452.31 682.44 L1451.75 682.44 L1451.19 682.44 L1450.63 682.44 L1450.07 682.44 L1449.51 682.44 L1448.95 682.44 L1448.39 682.44 L1447.83 682.44 L1447.27 682.44 L1446.71 682.44 L1446.15 682.44 L1445.6 682.44 L1445.04 682.44 L1444.48 682.44 L1443.92 682.44 L1443.36 682.44 L1442.8 682.44 L1442.24 682.44 L1441.68 682.44 L1441.12 682.44 L1440.56 682.44 L1440 682.44 L1439.44 682.44 L1438.88 682.44 L1438.33 682.44 L1437.77 682.44 L1437.21 682.44 L1436.65 682.44 L1436.09 682.44 L1435.53 682.44 L1434.97 682.44 L1434.41 682.44 L1433.85 682.44 L1433.29 682.44 L1432.73 682.44 L1432.17 682.44 L1431.61 682.44 L1431.05 682.44 L1430.5 682.44 L1429.94 682.44 L1429.38 682.44 L1428.82 682.44 L1428.26 682.44 L1427.7 682.44 L1427.14 682.44 L1426.58 682.44 L1426.02 682.44 L1425.46 682.44 L1424.9 682.44 L1424.34 682.44 L1423.78 682.44 L1423.23 682.44 L1422.67 682.44 L1422.11 682.44 L1421.55 682.44 L1420.99 682.44 L1420.43 682.44 L1419.87 682.44 L1419.31 682.44 L1418.75 682.44 L1418.19 682.44 L1417.63 682.44 L1417.07 682.44 L1416.51 682.44 L1415.95 682.44 L1415.4 682.44 L1414.84 682.44 L1414.28 682.44 L1413.72 682.44 L1413.16 682.44 L1412.6 682.44 L1412.04 682.44 L1411.48 682.44 L1410.92 682.44 L1410.36 682.44 L1409.8 682.44 L1409.24 682.44 L1408.68 682.44 L1408.13 682.44 L1407.57 682.44 L1407.01 682.44 L1406.45 682.44 L1405.89 682.44 L1405.33 682.44 L1404.77 682.44 L1404.21 682.44 L1403.65 682.44 L1403.09 682.44 L1402.53 682.44 L1401.97 682.44 L1401.41 682.44 L1400.86 682.44 L1400.3 682.44 L1399.74 682.44 L1399.18 682.44 L1398.62 682.44 L1398.06 682.44 L1397.5 682.44 L1396.94 682.44 L1396.38 682.44 L1395.82 682.44 L1395.26 682.44 L1394.7 682.44 L1394.14 682.44 L1393.58 682.44 L1393.03 682.44 L1392.47 682.44 L1391.91 682.44 L1391.35 682.44 L1390.79 682.44 L1390.23 682.44 L1389.67 682.44 L1389.11 682.44 L1388.55 682.44 L1387.99 682.44 L1387.43 682.44 L1386.87 682.44 L1386.31 682.44 L1385.76 682.44 L1385.2 682.44 L1384.64 682.44 L1384.08 682.44 L1383.52 682.44 L1382.96 682.44 L1382.4 682.44 L1381.84 682.44 L1381.28 682.44 L1380.72 682.44 L1380.16 682.44 L1379.6 682.44 L1379.04 682.44 L1378.49 682.44 L1377.93 682.44 L1377.37 682.44 L1376.81 682.44 L1376.25 682.44 L1375.69 682.44 L1375.13 682.44 L1374.57 682.44 L1374.01 682.44 L1373.45 682.44 L1372.89 682.44 L1372.33 682.44 L1371.77 682.44 L1371.21 682.44 L1370.66 682.44 L1370.1 682.44 L1369.54 682.44 L1368.98 682.44 L1368.42 682.44 L1367.86 682.44 L1367.3 682.44 L1366.74 682.44 L1366.18 682.44 L1365.62 682.44 L1365.06 682.44 L1364.5 682.44 L1363.94 682.44 L1363.39 682.44 L1362.83 682.44 L1362.27 682.44 L1361.71 682.44 L1361.15 682.44 L1360.59 682.44 L1360.03 682.44 L1359.47 682.44 L1358.91 682.44 L1358.35 682.44 L1357.79 682.44 L1357.23 682.44 L1356.67 682.44 L1356.12 682.44 L1355.56 682.44 L1355 682.44 L1354.44 682.44 L1353.88 682.44 L1353.32 682.44 L1352.76 682.44 L1352.2 682.44 L1351.64 682.44 L1351.08 682.44 L1350.52 682.44 L1349.96 682.44 L1349.4 682.44 L1348.84 682.44 L1348.29 682.44 L1347.73 682.44 L1347.17 682.44 L1346.61 682.44 L1346.05 682.44 L1345.49 682.44 L1344.93 682.44 L1344.37 682.44 L1343.81 682.44 L1343.25 682.44 L1342.69 682.44 L1342.13 682.44 L1341.57 682.44 L1341.02 682.44 L1340.46 682.44 L1339.9 682.44 L1339.34 682.44 L1338.78 682.44 L1338.22 682.44 L1337.66 682.44 L1337.1 682.44 L1336.54 682.44 L1335.98 682.44 L1335.42 682.44 L1334.86 682.44 L1334.3 682.44 L1333.75 682.44 L1333.19 682.44 L1332.63 682.44 L1332.07 682.44 L1331.51 682.44 L1330.95 682.44 L1330.39 682.44 L1329.83 682.44 L1329.27 682.44 L1328.71 682.44 L1328.15 682.44 L1327.59 682.44 L1327.03 682.44 L1326.47 682.44 L1325.92 682.44 L1325.36 682.44 L1324.8 682.44 L1324.24 682.44 L1323.68 682.44 L1323.12 682.44 L1322.56 682.44 L1322 682.44 L1321.44 682.44 L1320.88 682.44 L1320.32 682.44 L1319.76 682.44 L1319.2 682.44 L1318.65 682.44 L1318.09 682.44 L1317.53 682.44 L1316.97 682.44 L1316.41 682.44 L1315.85 682.44 L1315.29 682.44 L1314.73 682.44 L1314.17 682.44 L1313.61 682.44 L1313.05 682.44 L1312.49 682.44 L1311.93 682.44 L1311.38 682.44 L1310.82 682.44 L1310.26 682.44 L1309.7 682.44 L1309.14 682.44 L1308.58 682.44 L1308.02 682.44 L1307.46 682.44 L1306.9 682.44 L1306.34 682.44 L1305.78 682.44 L1305.22 682.44 L1304.66 682.44 L1304.1 682.44 L1303.55 682.44 L1302.99 682.44 L1302.43 682.44 L1301.87 682.44 L1301.31 682.44 L1300.75 682.44 L1300.19 682.44 L1299.63 682.44 L1299.07 682.44 L1298.51 682.44 L1297.95 682.44 L1297.39 682.44 L1296.83 682.44 L1296.28 682.44 L1295.72 682.44 L1295.16 682.44 L1294.6 682.44 L1294.04 682.44 L1293.48 682.44 L1292.92 682.44 L1292.36 682.44 L1291.8 682.44 L1291.24 682.44 L1290.68 682.44 L1290.12 682.44 L1289.56 682.44 L1289 682.44 L1288.45 682.44 L1287.89 682.44 L1287.33 682.44 L1286.77 682.44 L1286.21 682.44 L1285.65 682.44 L1285.09 682.44 L1284.53 682.44 L1283.97 682.44 L1283.41 682.44 L1282.85 682.44 L1282.29 682.44 L1281.73 682.44 L1281.18 682.44 L1280.62 682.44 L1280.06 682.44 L1279.5 682.44 L1278.94 682.44 L1278.38 682.44 L1277.82 682.44 L1277.26 682.44 L1276.7 682.44 L1276.14 682.44 L1275.58 682.44 L1275.02 682.44 L1274.46 682.44 L1273.91 682.44 L1273.35 682.44 L1272.79 682.44 L1272.23 682.44 L1271.67 682.44 L1271.11 682.44 L1270.55 682.44 L1269.99 682.44 L1269.43 682.44 L1268.87 682.44 L1268.31 682.44 L1267.75 682.44 L1267.19 682.44 L1266.63 682.44 L1266.08 682.44 L1265.52 682.44 L1264.96 682.44 L1264.4 682.44 L1263.84 682.44 L1263.28 682.44 L1262.72 682.44 L1262.16 682.44 L1261.6 682.44 L1261.04 682.44 L1260.48 682.44 L1259.92 682.44 L1259.36 682.44 L1258.81 682.44 L1258.25 682.44 L1257.69 682.44 L1257.13 682.44 L1256.57 682.44 L1256.01 682.44 L1255.45 682.44 L1254.89 682.44 L1254.33 682.44 L1253.77 682.44 L1253.21 682.44 L1252.65 682.44 L1252.09 682.44 L1251.54 682.44 L1250.98 682.44 L1250.42 682.44 L1249.86 682.44 L1249.3 682.44 L1248.74 682.44 L1248.18 682.44 L1247.62 682.44 L1247.06 682.44 L1246.5 682.44 L1245.94 682.44 L1245.38 682.44 L1244.82 682.44 L1244.26 682.44 L1243.71 682.44 L1243.15 682.44 L1242.59 682.44 L1242.03 682.44 L1241.47 682.44 L1240.91 682.44 L1240.35 682.44 L1239.79 682.44 L1239.23 682.44 L1238.67 682.44 L1238.11 682.44 L1237.55 682.44 L1236.99 682.44 L1236.44 682.44 L1235.88 682.44 L1235.32 682.44 L1234.76 682.44 L1234.2 682.44 L1233.64 682.44 L1233.08 682.44 L1232.52 682.44 L1231.96 682.44 L1231.4 682.44 L1230.84 682.44 L1230.28 682.44 L1229.72 682.44 L1229.17 682.44 L1228.61 682.44 L1228.05 682.44 L1227.49 682.44 L1226.93 682.44 L1226.37 682.44 L1225.81 682.44 L1225.25 682.44 L1224.69 682.44 L1224.13 682.44 L1223.57 682.44 L1223.01 682.44 L1222.45 682.44 L1221.89 682.44 L1221.34 682.44 L1220.78 682.44 L1220.22 682.44 L1219.66 682.44 L1219.1 682.44 L1218.54 682.44 L1217.98 682.44 L1217.42 682.44 L1216.86 682.44 L1216.3 682.44 L1215.74 682.44 L1215.18 682.44 L1214.62 682.44 L1214.07 682.44 L1213.51 682.44 L1212.95 682.44 L1212.39 682.44 L1211.83 682.44 L1211.27 682.44 L1210.71 682.44 L1210.15 682.44 L1209.59 682.44 L1209.03 682.44 L1208.47 682.44 L1207.91 682.44 L1207.35 682.44 L1206.8 682.44 L1206.24 682.44 L1205.68 682.44 L1205.12 682.44 L1204.56 682.44 L1204 682.44 L1203.44 682.44 L1202.88 682.44 L1202.32 682.44 L1201.76 682.44 L1201.2 682.44 L1200.64 682.44 L1200.08 682.44 L1199.52 682.44 L1198.97 682.44 L1198.41 682.44 L1197.85 682.44 L1197.29 682.44 L1196.73 682.44 L1196.17 682.44 L1195.61 682.44 L1195.05 682.44 L1194.49 682.44 L1193.93 682.44 L1193.37 682.44 L1192.81 682.44 L1192.25 682.44 L1191.7 682.44 L1191.14 682.44 L1190.58 682.44 L1190.02 682.44 L1189.46 682.44 L1188.9 682.44 L1188.34 682.44 L1187.78 682.44 L1187.22 682.44 L1186.66 682.44 L1186.1 682.44 L1185.54 682.44 L1184.98 682.44 L1184.43 682.44 L1183.87 682.44 L1183.31 682.44 L1182.75 682.44 L1182.19 682.44 L1181.63 682.44 L1181.07 682.44 L1180.51 682.44 L1179.95 682.44 L1179.39 682.44 L1178.83 682.44 L1178.27 682.44 L1177.71 682.44 L1177.15 682.44 L1176.6 682.44 L1176.04 682.44 L1175.48 682.44 L1174.92 682.44 L1174.36 682.44 L1173.8 682.44 L1173.24 682.44 L1172.68 682.44 L1172.12 682.44 L1171.56 682.44 L1171 682.44 L1170.44 682.44 L1169.88 682.44 L1169.33 682.44 L1168.77 682.44 L1168.21 682.44 L1167.65 682.44 L1167.09 682.44 L1166.53 682.44 L1165.97 682.44 L1165.41 682.44 L1164.85 682.44 L1164.29 682.44 L1163.73 682.44 L1163.17 682.44 L1162.61 682.44 L1162.05 682.44 L1161.5 682.44 L1160.94 682.44 L1160.38 682.44 L1159.82 682.44 L1159.26 682.44 L1158.7 682.44 L1158.14 682.44 L1157.58 682.44 L1157.02 682.44 L1156.46 682.44 L1155.9 682.44 L1155.34 682.44 L1154.78 682.44 L1154.23 682.44 L1153.67 682.44 L1153.11 682.44 L1152.55 682.44 L1151.99 682.44 L1151.43 682.44 L1150.87 682.44 L1150.31 682.44 L1149.75 682.44 L1149.19 682.44 L1148.63 682.44 L1148.07 682.44 L1147.51 682.44 L1146.96 682.44 L1146.4 682.44 L1145.84 682.44 L1145.28 682.44 L1144.72 682.44 L1144.16 682.44 L1143.6 682.44 L1143.04 682.44 L1142.48 682.44 L1141.92 682.44 L1141.36 682.44 L1140.8 682.44 L1140.24 682.44 L1139.68 682.44 L1139.13 682.44 L1138.57 682.44 L1138.01 682.44 L1137.45 682.44 L1136.89 682.44 L1136.33 682.44 L1135.77 682.44 L1135.21 682.44 L1134.65 682.44 L1134.09 682.44 L1133.53 682.44 L1132.97 682.44 L1132.41 682.44 L1131.86 682.44 L1131.3 682.44 L1130.74 682.44 L1130.18 682.44 L1129.62 682.44 L1129.06 682.44 L1128.5 682.44 L1127.94 682.44 L1127.38 682.44 L1126.82 682.44 L1126.26 682.44 L1125.7 682.44 L1125.14 682.44 L1124.59 682.44 L1124.03 682.44 L1123.47 682.44 L1122.91 682.44 L1122.35 682.44 L1121.79 682.44 L1121.23 682.44 L1120.67 682.44 L1120.11 682.44 L1119.55 682.44 L1118.99 682.44 L1118.43 682.44 L1117.87 682.44 L1117.31 682.44 L1116.76 682.44 L1116.2 682.44 L1115.64 682.44 L1115.08 682.44 L1114.52 682.44 L1113.96 682.44 L1113.4 682.44 L1112.84 682.44 L1112.28 682.44 L1111.72 682.44 L1111.16 682.44 L1110.6 682.44 L1110.04 682.44 L1109.49 682.44 L1108.93 682.44 L1108.37 682.44 L1107.81 682.44 L1107.25 682.44 L1106.69 682.44 L1106.13 682.44 L1105.57 682.44 L1105.01 682.44 L1104.45 682.44 L1103.89 682.44 L1103.33 682.44 L1102.77 682.44 L1102.22 682.44 L1101.66 682.44 L1101.1 682.44 L1100.54 682.44 L1099.98 682.44 L1099.42 682.44 L1098.86 682.44 L1098.3 682.44 L1097.74 682.44 L1097.18 682.44 L1096.62 682.44 L1096.06 682.44 L1095.5 682.44 L1094.94 682.44 L1094.39 682.44 L1093.83 682.44 L1093.27 682.44 L1092.71 682.44 L1092.15 682.44 L1091.59 682.44 L1091.03 682.44 L1090.47 682.44 L1089.91 682.44 L1089.35 682.44 L1088.79 682.44 L1088.23 682.44 L1087.67 682.44 L1087.12 682.44 L1086.56 682.44 L1086 682.44 L1085.44 682.44 L1084.88 682.44 L1084.32 682.44 L1083.76 682.44 L1083.2 682.44 L1082.64 682.44 L1082.08 682.44 L1081.52 682.44 L1080.96 682.44 L1080.4 682.44 L1079.85 682.44 L1079.29 682.44 L1078.73 682.44 L1078.17 682.44 L1077.61 682.44 L1077.05 682.44 L1076.49 682.44 L1075.93 682.44 L1075.37 682.44 L1074.81 682.44 L1074.25 682.44 L1073.69 682.44 L1073.13 682.44 L1072.57 682.44 L1072.02 682.44 L1071.46 682.44 L1070.9 682.44 L1070.34 682.44 L1069.78 682.44 L1069.22 682.44 L1068.66 682.44 L1068.1 682.44 L1067.54 682.44 L1066.98 682.44 L1066.42 682.44 L1065.86 682.44 L1065.3 682.44 L1064.75 682.44 L1064.19 682.44 L1063.63 682.44 L1063.07 682.44 L1062.51 682.44 L1061.95 682.44 L1061.39 682.44 L1060.83 682.44 L1060.27 682.44 L1059.71 682.44 L1059.15 682.44 L1058.59 682.44 L1058.03 682.44 L1057.48 682.44 L1056.92 682.44 L1056.36 682.44 L1055.8 682.44 L1055.24 682.44 L1054.68 682.44 L1054.12 682.44 L1053.56 682.44 L1053 682.44 L1052.44 682.44 L1051.88 682.44 L1051.32 682.44 L1050.76 682.44 L1050.2 682.44 L1049.65 682.44 L1049.09 682.44 L1048.53 682.44 L1047.97 682.44 L1047.41 682.44 L1046.85 682.44 L1046.29 682.44 L1045.73 682.44 L1045.17 682.44 L1044.61 682.44 L1044.05 682.44 L1043.49 682.44 L1042.93 682.44 L1042.38 682.44 L1041.82 682.44 L1041.26 682.44 L1040.7 682.44 L1040.14 682.44 L1039.58 682.44 L1039.02 682.44 L1038.46 682.44 L1037.9 682.44 L1037.34 682.44 L1036.78 682.44 L1036.22 682.44 L1035.66 682.44 L1035.1 682.44 L1034.55 682.44 L1033.99 682.44 L1033.43 682.44 L1032.87 682.44 L1032.31 682.44 L1031.75 682.44 L1031.19 682.44 L1030.63 682.44 L1030.07 682.44 L1029.51 682.44 L1028.95 682.44 L1028.39 682.44 L1027.83 682.44 L1027.28 682.44 L1026.72 682.44 L1026.16 682.44 L1025.6 682.44 L1025.04 682.44 L1024.48 682.44 L1023.92 682.44 L1023.36 682.44 L1022.8 682.44 L1022.24 682.44 L1021.68 682.44 L1021.12 682.44 L1020.56 682.44 L1020.01 682.44 L1019.45 682.44 L1018.89 682.44 L1018.33 682.44 L1017.77 682.44 L1017.21 682.44 L1016.65 682.44 L1016.09 682.44 L1015.53 682.44 L1014.97 682.44 L1014.41 682.44 L1013.85 682.44 L1013.29 682.44 L1012.73 682.44 L1012.18 682.44 L1011.62 682.44 L1011.06 682.44 L1010.5 682.44 L1009.94 682.44 L1009.38 682.44 L1008.82 682.44 L1008.26 682.44 L1007.7 682.44 L1007.14 682.44 L1006.58 682.44 L1006.02 682.44 L1005.46 682.44 L1004.91 682.44 L1004.35 682.44 L1003.79 682.44 L1003.23 682.44 L1002.67 682.44 L1002.11 682.44 L1001.55 682.44 L1000.99 682.44 L1000.43 682.44 L999.872 682.44 L999.313 682.44 L998.754 682.44 L998.194 682.44 L997.635 682.44 L997.076 682.44 L996.517 682.44 L995.957 682.44 L995.398 682.44 L994.839 682.44 L994.28 682.44 L993.72 682.44 L993.161 682.44 L992.602 682.44 L992.043 682.44 L991.483 682.44 L990.924 682.44 L990.365 682.44 L989.806 682.44 L989.246 682.44 L988.687 682.44 L988.128 682.44 L987.569 682.44 L987.009 682.44 L986.45 682.44 L985.891 682.44 L985.332 682.44 L984.772 682.44 L984.213 682.44 L983.654 682.44 L983.095 682.44 L982.535 682.44 L981.976 682.44 L981.417 682.44 L980.858 682.44 L980.298 682.44 L979.739 682.44 L979.18 682.44 L978.621 682.44 L978.061 682.44 L977.502 682.44 L976.943 682.44 L976.384 682.44 L975.824 682.44 L975.265 682.44 L974.706 682.44 L974.147 682.44 L973.587 682.44 L973.028 682.44 L972.469 682.44 L971.91 682.44 L971.35 682.44 L970.791 682.44 L970.232 682.44 L969.673 682.44 L969.113 682.44 L968.554 682.44 L967.995 682.44 L967.436 682.44 L966.876 682.44 L966.317 682.44 L965.758 682.44 L965.199 682.44 L964.639 682.44 L964.08 682.44 L963.521 682.44 L962.962 682.44 L962.402 682.44 L961.843 682.44 L961.284 682.44 L960.725 682.44 L960.165 682.44 L959.606 682.44 L959.047 682.44 L958.488 682.44 L957.928 682.44 L957.369 682.44 L956.81 682.44 L956.251 682.44 L955.691 682.44 L955.132 682.44 L954.573 682.44 L954.014 682.44 L953.454 682.44 L952.895 682.44 L952.336 682.44 L951.777 682.44 L951.217 682.44 L950.658 682.44 L950.099 682.44 L949.54 682.44 L948.98 682.44 L948.421 682.44 L947.862 682.44 L947.303 682.44 L946.743 682.44 L946.184 682.44 L945.625 682.44 L945.066 682.44 L944.506 682.44 L943.947 682.44 L943.388 682.44 L942.829 682.44 L942.269 682.44 L941.71 682.44 L941.151 682.44 L940.592 682.44 L940.032 682.44 L939.473 682.44 L938.914 682.44 L938.355 682.44 L937.795 682.44 L937.236 682.44 L936.677 682.44 L936.118 682.44 L935.558 682.44 L934.999 682.44 L934.44 682.44 L933.881 682.44 L933.321 682.44 L932.762 682.44 L932.203 682.44 L931.644 682.44 L931.084 682.44 L930.525 682.44 L929.966 682.44 L929.406 682.44 L928.847 682.44 L928.288 682.44 L927.729 682.44 L927.169 682.44 L926.61 682.44 L926.051 682.44 L925.492 682.44 L924.932 682.44 L924.373 682.44 L923.814 682.44 L923.255 682.44 L922.695 682.44 L922.136 682.44 L921.577 682.44 L921.018 682.44 L920.458 682.44 L919.899 682.44 L919.34 682.44 L918.781 682.44 L918.221 682.44 L917.662 682.44 L917.103 682.44 L916.544 682.44 L915.984 682.44 L915.425 682.44 L914.866 682.44 L914.307 682.44 L913.747 682.44 L913.188 682.44 L912.629 682.44 L912.07 682.44 L911.51 682.44 L910.951 682.44 L910.392 682.44 L909.833 682.44 L909.273 682.44 L908.714 682.44 L908.155 682.44 L907.596 682.44 L907.036 682.44 L906.477 682.44 L905.918 682.44 L905.359 682.44 L904.799 682.44 L904.24 682.44 L903.681 682.44 L903.122 682.44 L902.562 682.44 L902.003 682.44 L901.444 682.44 L900.885 682.44 L900.325 682.44 L899.766 682.44 L899.207 682.44 L898.648 682.44 L898.088 682.44 L897.529 682.44 L896.97 682.44 L896.411 682.44 L895.851 682.44 L895.292 682.44 L894.733 682.44 L894.174 682.44 L893.614 682.44 L893.055 682.44 L892.496 682.44 L891.937 682.44 L891.377 682.44 L890.818 682.44 L890.259 682.44 L889.7 682.44 L889.14 682.44 L888.581 682.44 L888.022 682.44 L887.463 682.44 L886.903 682.44 L886.344 682.44 L885.785 682.44 L885.226 682.44 L884.666 682.44 L884.107 682.44 L883.548 682.44 L882.989 682.44 L882.429 682.44 L881.87 682.44 L881.311 682.44 L880.752 682.44 L880.192 682.44 L879.633 682.44 L879.074 682.44 L878.515 682.44 L877.955 682.44 L877.396 682.44 L876.837 682.44 L876.278 682.44 L875.718 682.44 L875.159 682.44 L874.6 682.44 L874.041 682.44 L873.481 682.44 L872.922 682.44 L872.363 682.44 L871.804 682.44 L871.244 682.44 L870.685 682.44 L870.126 682.44 L869.567 682.44 L869.007 682.44 L868.448 682.44 L867.889 682.44 L867.33 682.44 L866.77 682.44 L866.211 682.44 L865.652 682.44 L865.093 682.44 L864.533 682.44 L863.974 682.44 L863.415 682.44 L862.856 682.44 L862.296 682.44 L861.737 682.44 L861.178 682.44 L860.619 682.44 L860.059 682.44 L859.5 682.44 L858.941 682.44 L858.382 682.44 L857.822 682.44 L857.263 682.44 L856.704 682.44 L856.145 682.44 L855.585 682.44 L855.026 682.44 L854.467 682.44 L853.908 682.44 L853.348 682.44 L852.789 682.44 L852.23 682.44 L851.671 682.44 L851.111 682.44 L850.552 682.44 L849.993 682.44 L849.434 682.44 L848.874 682.44 L848.315 682.44 L847.756 682.44 L847.197 682.44 L846.637 682.44 L846.078 682.44 L845.519 682.44 L844.96 682.44 L844.4 682.44 L843.841 682.44 L843.282 682.44 L842.723 682.44 L842.163 682.44 L841.604 682.44 L841.045 682.44 L840.486 682.44 L839.926 682.44 L839.367 682.44 L838.808 682.44 L838.249 682.44 L837.689 682.44 L837.13 682.44 L836.571 682.44 L836.012 682.44 L835.452 682.44 L834.893 682.44 L834.334 682.44 L833.775 682.44 L833.215 682.44 L832.656 682.44 L832.097 682.44 L831.538 682.44 L830.978 682.44 L830.419 682.44 L829.86 682.44 L829.301 682.44 L828.741 682.44 L828.182 682.44 L827.623 682.44 L827.064 682.44 L826.504 682.44 L825.945 682.44 L825.386 682.44 L824.827 682.44 L824.267 682.44 L823.708 682.44 L823.149 682.44 L822.59 682.44 L822.03 682.44 L821.471 682.44 L820.912 682.44 L820.353 682.44 L819.793 682.44 L819.234 682.44 L818.675 682.44 L818.116 682.44 L817.556 682.44 L816.997 682.44 L816.438 682.44 L815.879 682.44 L815.319 682.44 L814.76 682.44 L814.201 682.44 L813.642 682.44 L813.082 682.44 L812.523 682.44 L811.964 682.44 L811.405 682.44 L810.845 682.44 L810.286 682.44 L809.727 682.44 L809.168 682.44 L808.608 682.44 L808.049 682.44 L807.49 682.44 L806.931 682.44 L806.371 682.44 L805.812 682.44 L805.253 682.44 L804.693 682.44 L804.134 682.44 L803.575 682.44 L803.016 682.44 L802.456 682.44 L801.897 682.44 L801.338 682.44 L800.779 682.44 L800.219 682.44 L799.66 682.44 L799.101 682.44 L798.542 682.44 L797.982 682.44 L797.423 682.44 L796.864 682.44 L796.305 682.44 L795.745 682.44 L795.186 682.44 L794.627 682.44 L794.068 682.44 L793.508 682.44 L792.949 682.44 L792.39 682.44 L791.831 682.44 L791.271 682.44 L790.712 682.44 L790.153 682.44 L789.594 682.44 L789.034 682.44 L788.475 682.44 L787.916 682.44 L787.357 682.44 L786.797 682.44 L786.238 682.44 L785.679 682.44 L785.12 682.44 L784.56 682.44 L784.001 682.44 L783.442 682.44 L782.883 682.44 L782.323 682.44 L781.764 682.44 L781.205 682.44 L780.646 682.44 L780.086 682.44 L779.527 682.44 L778.968 682.44 L778.409 682.44 L777.849 682.44 L777.29 682.44 L776.731 682.44 L776.172 682.44 L775.612 682.44 L775.053 682.44 L774.494 682.44 L773.935 682.44 L773.375 682.44 L772.816 682.44 L772.257 682.44 L771.698 682.44 L771.138 682.44 L770.579 682.44 L770.02 682.44 L769.461 682.44 L768.901 682.44 L768.342 682.44 L767.783 682.44 L767.224 682.44 L766.664 682.44 L766.105 682.44 L765.546 682.44 L764.987 682.44 L764.427 682.44 L763.868 682.44 L763.309 682.44 L762.75 682.44 L762.19 682.44 L761.631 682.44 L761.072 682.44 L760.513 682.44 L759.953 682.44 L759.394 682.44 L758.835 682.44 L758.276 682.44 L757.716 682.44 L757.157 682.44 L756.598 682.44 L756.039 682.44 L755.479 682.44 L754.92 682.44 L754.361 682.44 L753.802 682.44 L753.242 682.44 L752.683 682.44 L752.124 682.44 L751.565 682.44 L751.005 682.44 L750.446 682.44 L749.887 682.44 L749.328 682.44 L748.768 682.44 L748.209 682.44 L747.65 682.44 L747.091 682.44 L746.531 682.44 L745.972 682.44 L745.413 682.44 L744.854 682.44 L744.294 682.44 L743.735 682.44 L743.176 682.44 L742.617 682.44 L742.057 682.44 L741.498 682.44 L740.939 682.44 L740.38 682.44 L739.82 682.44 L739.261 682.44 L738.702 682.44 L738.143 682.44 L737.583 682.44 L737.024 682.44 L736.465 682.44 L735.906 682.44 L735.346 682.44 L734.787 682.44 L734.228 682.44 L733.669 682.44 L733.109 682.44 L732.55 682.44 L731.991 682.44 L731.432 682.44 L730.872 682.44 L730.313 682.44 L729.754 682.44 L729.195 682.44 L728.635 682.44 L728.076 682.44 L727.517 682.44 L726.958 682.44 L726.398 682.44 L725.839 682.44 L725.28 682.44 L724.721 682.44 L724.161 682.44 L723.602 682.44 L723.043 682.44 L722.484 682.44 L721.924 682.44 L721.365 682.44 L720.806 682.44 L720.247 682.44  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip393)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.784 720.806,683.784 721.365,683.784 721.924,683.784 722.484,683.784 723.043,683.784 723.602,683.784 724.161,683.784 724.721,683.784 725.28,683.784 725.839,683.784 726.398,683.784 726.958,683.784 727.517,683.784 728.076,683.784 728.635,683.784 729.195,683.784 729.754,683.784 730.313,683.784 730.872,683.784 731.432,683.784 731.991,683.784 732.55,683.784 733.109,683.784 733.669,683.784 734.228,683.784 734.787,683.784 735.346,683.784 735.906,683.784 736.465,683.784 737.024,683.784 737.583,683.784 738.143,683.784 738.702,683.784 739.261,683.784 739.82,683.784 740.38,683.784 740.939,683.784 741.498,683.784 742.057,683.784 742.617,683.784 743.176,683.784 743.735,683.784 744.294,683.784 744.854,683.784 745.413,683.784 745.972,683.784 746.531,683.784 747.091,683.784 747.65,683.784 748.209,683.784 748.768,683.784 749.328,683.784 749.887,683.784 750.446,683.784 751.005,683.784 751.565,683.784 752.124,683.784 752.683,683.784 753.242,683.784 753.802,683.784 754.361,683.784 754.92,683.784 755.479,683.784 756.039,683.784 756.598,683.784 757.157,683.784 757.716,683.784 758.276,683.784 758.835,683.784 759.394,683.784 759.953,683.784 760.513,683.784 761.072,683.784 761.631,683.784 762.19,683.784 762.75,683.784 763.309,683.784 763.868,683.784 764.427,683.784 764.987,683.784 765.546,683.784 766.105,683.784 766.664,683.784 767.224,683.784 767.783,683.784 768.342,683.784 768.901,683.784 769.461,683.784 770.02,683.784 770.579,683.784 771.138,683.784 771.698,683.784 772.257,683.784 772.816,683.784 773.375,683.784 773.935,683.784 774.494,683.784 775.053,683.784 775.612,683.784 776.172,683.784 776.731,683.784 777.29,683.784 777.849,683.784 778.409,683.784 778.968,683.784 779.527,683.784 780.086,683.784 780.646,683.784 781.205,683.784 781.764,683.784 782.323,683.784 782.883,683.784 783.442,683.784 784.001,683.784 784.56,683.784 785.12,683.784 785.679,683.784 786.238,683.784 786.797,683.784 787.357,683.784 787.916,683.784 788.475,683.784 789.034,683.784 789.594,683.784 790.153,683.784 790.712,683.784 791.271,683.784 791.831,683.784 792.39,683.784 792.949,683.784 793.508,683.784 794.068,683.784 794.627,683.784 795.186,683.784 795.745,683.784 796.305,683.784 796.864,683.784 797.423,683.784 797.982,683.784 798.542,683.784 799.101,683.784 799.66,683.784 800.219,683.784 800.779,683.784 801.338,683.784 801.897,683.784 802.456,683.784 803.016,683.784 803.575,683.784 804.134,683.784 804.693,683.784 805.253,683.784 805.812,683.784 806.371,683.784 806.931,683.784 807.49,683.784 808.049,683.784 808.608,683.784 809.168,683.784 809.727,683.784 810.286,683.784 810.845,683.784 811.405,683.784 811.964,683.784 812.523,683.784 813.082,683.784 813.642,683.784 814.201,683.784 814.76,683.784 815.319,683.784 815.879,683.784 816.438,683.784 816.997,683.784 817.556,683.784 818.116,683.784 818.675,683.784 819.234,683.784 819.793,683.784 820.353,683.784 820.912,683.784 821.471,683.784 822.03,683.784 822.59,683.784 823.149,683.784 823.708,683.784 824.267,683.784 824.827,683.784 825.386,683.784 825.945,683.784 826.504,683.784 827.064,683.784 827.623,683.784 828.182,683.784 828.741,683.784 829.301,683.784 829.86,683.784 830.419,683.784 830.978,683.784 831.538,683.784 832.097,683.784 832.656,683.784 833.215,683.784 833.775,683.784 834.334,683.784 834.893,683.784 835.452,683.784 836.012,683.784 836.571,683.784 837.13,683.784 837.689,683.784 838.249,683.784 838.808,683.784 839.367,683.784 839.926,683.784 840.486,683.784 841.045,683.784 841.604,683.784 842.163,683.784 842.723,683.784 843.282,683.784 843.841,683.784 844.4,683.784 844.96,683.784 845.519,683.784 846.078,683.784 846.637,683.784 847.197,683.784 847.756,683.784 848.315,683.784 848.874,683.784 849.434,683.784 849.993,683.784 850.552,683.784 851.111,683.784 851.671,683.784 852.23,683.784 852.789,683.784 853.348,683.784 853.908,683.784 854.467,683.784 855.026,683.784 855.585,683.784 856.145,683.784 856.704,683.784 857.263,683.784 857.822,683.784 858.382,683.784 858.941,683.784 859.5,683.784 860.059,683.784 860.619,683.784 861.178,683.784 861.737,683.784 862.296,683.784 862.856,683.784 863.415,683.784 863.974,683.784 864.533,683.784 865.093,683.784 865.652,683.784 866.211,683.784 866.77,683.784 867.33,683.784 867.889,683.784 868.448,683.784 869.007,683.784 869.567,683.784 870.126,683.784 870.685,683.784 871.244,683.784 871.804,683.784 872.363,683.784 872.922,683.784 873.481,683.784 874.041,683.784 874.6,683.784 875.159,683.784 875.718,683.784 876.278,683.784 876.837,683.784 877.396,683.784 877.955,683.784 878.515,683.784 879.074,683.784 879.633,683.784 880.192,683.784 880.752,683.784 881.311,683.784 881.87,683.784 882.429,683.784 882.989,683.784 883.548,683.784 884.107,683.784 884.666,683.784 885.226,683.784 885.785,683.784 886.344,683.784 886.903,683.784 887.463,683.784 888.022,683.784 888.581,683.784 889.14,683.784 889.7,683.784 890.259,683.784 890.818,683.784 891.377,683.784 891.937,683.784 892.496,683.784 893.055,683.784 893.614,683.784 894.174,683.784 894.733,683.784 895.292,683.784 895.851,683.784 896.411,683.784 896.97,683.784 897.529,683.784 898.088,683.784 898.648,683.784 899.207,683.784 899.766,683.784 900.325,683.784 900.885,683.784 901.444,683.784 902.003,683.784 902.562,683.784 903.122,683.784 903.681,683.784 904.24,683.784 904.799,683.784 905.359,683.784 905.918,683.784 906.477,683.784 907.036,683.784 907.596,683.784 908.155,683.784 908.714,683.784 909.273,683.784 909.833,683.784 910.392,683.784 910.951,683.784 911.51,683.784 912.07,683.784 912.629,683.784 913.188,683.784 913.747,683.784 914.307,683.784 914.866,683.784 915.425,683.784 915.984,683.784 916.544,683.784 917.103,683.784 917.662,683.784 918.221,683.784 918.781,683.784 919.34,683.784 919.899,683.784 920.458,683.784 921.018,683.784 921.577,683.784 922.136,683.784 922.695,683.784 923.255,683.784 923.814,683.784 924.373,683.784 924.932,683.784 925.492,683.784 926.051,683.784 926.61,683.784 927.169,683.784 927.729,683.784 928.288,683.784 928.847,683.784 929.406,683.784 929.966,683.784 930.525,683.784 931.084,683.784 931.644,683.784 932.203,683.784 932.762,683.784 933.321,683.784 933.881,683.784 934.44,683.784 934.999,683.784 935.558,683.784 936.118,683.784 936.677,683.784 937.236,683.784 937.795,683.784 938.355,683.784 938.914,683.784 939.473,683.784 940.032,683.784 940.592,683.784 941.151,683.784 941.71,683.784 942.269,683.784 942.829,683.784 943.388,683.784 943.947,683.784 944.506,683.784 945.066,683.784 945.625,683.784 946.184,683.784 946.743,683.784 947.303,683.784 947.862,683.784 948.421,683.784 948.98,683.784 949.54,683.784 950.099,683.784 950.658,683.784 951.217,683.784 951.777,683.784 952.336,683.784 952.895,683.784 953.454,683.784 954.014,683.784 954.573,683.784 955.132,683.784 955.691,683.784 956.251,683.784 956.81,683.784 957.369,683.784 957.928,683.784 958.488,683.784 959.047,683.784 959.606,683.784 960.165,683.784 960.725,683.784 961.284,683.784 961.843,683.784 962.402,683.784 962.962,683.784 963.521,683.784 964.08,683.784 964.639,683.784 965.199,683.784 965.758,683.784 966.317,683.784 966.876,683.784 967.436,683.784 967.995,683.784 968.554,683.784 969.113,683.784 969.673,683.784 970.232,683.784 970.791,683.784 971.35,683.784 971.91,683.784 972.469,683.784 973.028,683.784 973.587,683.784 974.147,683.784 974.706,683.784 975.265,683.784 975.824,683.784 976.384,683.784 976.943,683.784 977.502,683.784 978.061,683.784 978.621,683.784 979.18,683.784 979.739,683.784 980.298,683.784 980.858,683.784 981.417,683.784 981.976,683.784 982.535,683.784 983.095,683.784 983.654,683.784 984.213,683.784 984.772,683.784 985.332,683.784 985.891,683.784 986.45,683.784 987.009,683.784 987.569,683.784 988.128,683.784 988.687,683.784 989.246,683.784 989.806,683.784 990.365,683.784 990.924,683.784 991.483,683.784 992.043,683.784 992.602,683.784 993.161,683.784 993.72,683.784 994.28,683.784 994.839,683.784 995.398,683.784 995.957,683.784 996.517,683.784 997.076,683.784 997.635,683.784 998.194,683.784 998.754,683.784 999.313,683.784 999.872,683.784 1000.43,683.784 1000.99,683.784 1001.55,683.784 1002.11,683.784 1002.67,683.784 1003.23,683.784 1003.79,683.784 1004.35,683.784 1004.91,683.784 1005.46,683.784 1006.02,683.784 1006.58,683.784 1007.14,683.784 1007.7,683.784 1008.26,683.784 1008.82,683.784 1009.38,683.784 1009.94,683.784 1010.5,683.784 1011.06,683.784 1011.62,683.784 1012.18,683.784 1012.73,683.784 1013.29,683.784 1013.85,683.784 1014.41,683.784 1014.97,683.784 1015.53,683.784 1016.09,683.784 1016.65,683.784 1017.21,683.784 1017.77,683.784 1018.33,683.784 1018.89,683.784 1019.45,683.784 1020.01,683.784 1020.56,683.784 1021.12,683.784 1021.68,683.784 1022.24,683.784 1022.8,683.784 1023.36,683.784 1023.92,683.784 1024.48,683.784 1025.04,683.784 1025.6,683.784 1026.16,683.784 1026.72,683.784 1027.28,683.784 1027.83,683.784 1028.39,683.784 1028.95,683.784 1029.51,683.784 1030.07,683.784 1030.63,683.784 1031.19,683.784 1031.75,683.784 1032.31,683.784 1032.87,683.784 1033.43,683.784 1033.99,683.784 1034.55,683.784 1035.1,683.784 1035.66,683.784 1036.22,683.784 1036.78,683.784 1037.34,683.784 1037.9,683.784 1038.46,683.784 1039.02,683.784 1039.58,683.784 1040.14,683.784 1040.7,683.784 1041.26,683.784 1041.82,683.784 1042.38,683.784 1042.93,683.784 1043.49,683.784 1044.05,683.784 1044.61,683.784 1045.17,683.784 1045.73,683.784 1046.29,683.784 1046.85,683.784 1047.41,683.784 1047.97,683.784 1048.53,683.784 1049.09,683.784 1049.65,683.784 1050.2,683.784 1050.76,683.784 1051.32,683.784 1051.88,683.784 1052.44,683.784 1053,683.784 1053.56,683.784 1054.12,683.784 1054.68,683.784 1055.24,683.784 1055.8,683.784 1056.36,683.784 1056.92,683.784 1057.48,683.784 1058.03,683.784 1058.59,683.784 1059.15,683.784 1059.71,683.784 1060.27,683.784 1060.83,683.784 1061.39,683.784 1061.95,683.784 1062.51,683.784 1063.07,683.784 1063.63,683.784 1064.19,683.784 1064.75,683.784 1065.3,683.784 1065.86,683.784 1066.42,683.784 1066.98,683.784 1067.54,683.784 1068.1,683.784 1068.66,683.784 1069.22,683.784 1069.78,683.784 1070.34,683.784 1070.9,683.784 1071.46,683.784 1072.02,683.784 1072.57,683.784 1073.13,683.784 1073.69,683.784 1074.25,683.784 1074.81,683.784 1075.37,683.784 1075.93,683.784 1076.49,683.784 1077.05,683.784 1077.61,683.784 1078.17,683.784 1078.73,683.784 1079.29,683.784 1079.85,683.784 1080.4,683.784 1080.96,683.784 1081.52,683.784 1082.08,683.784 1082.64,683.784 1083.2,683.784 1083.76,683.784 1084.32,683.784 1084.88,683.784 1085.44,683.784 1086,683.784 1086.56,683.784 1087.12,683.784 1087.67,683.784 1088.23,683.784 1088.79,683.784 1089.35,683.784 1089.91,683.784 1090.47,683.784 1091.03,683.784 1091.59,683.784 1092.15,683.784 1092.71,683.784 1093.27,683.784 1093.83,683.784 1094.39,683.784 1094.94,683.784 1095.5,683.784 1096.06,683.784 1096.62,683.784 1097.18,683.784 1097.74,683.784 1098.3,683.784 1098.86,683.784 1099.42,683.784 1099.98,683.784 1100.54,683.784 1101.1,683.784 1101.66,683.784 1102.22,683.784 1102.77,683.784 1103.33,683.784 1103.89,683.784 1104.45,683.784 1105.01,683.784 1105.57,683.784 1106.13,683.784 1106.69,683.784 1107.25,683.784 1107.81,683.784 1108.37,683.784 1108.93,683.784 1109.49,683.784 1110.04,683.784 1110.6,683.784 1111.16,683.784 1111.72,683.784 1112.28,683.784 1112.84,683.784 1113.4,683.784 1113.96,683.784 1114.52,683.784 1115.08,683.784 1115.64,683.784 1116.2,683.784 1116.76,683.784 1117.31,683.784 1117.87,683.784 1118.43,683.784 1118.99,683.784 1119.55,683.784 1120.11,683.784 1120.67,683.784 1121.23,683.784 1121.79,683.784 1122.35,683.784 1122.91,683.784 1123.47,683.784 1124.03,683.784 1124.59,683.784 1125.14,683.784 1125.7,683.784 1126.26,683.784 1126.82,683.784 1127.38,683.784 1127.94,683.784 1128.5,683.784 1129.06,683.784 1129.62,683.784 1130.18,683.784 1130.74,683.784 1131.3,683.784 1131.86,683.784 1132.41,683.784 1132.97,683.784 1133.53,683.784 1134.09,683.784 1134.65,683.784 1135.21,683.784 1135.77,683.784 1136.33,683.784 1136.89,683.784 1137.45,683.784 1138.01,683.784 1138.57,683.784 1139.13,683.784 1139.68,683.784 1140.24,683.784 1140.8,683.784 1141.36,683.784 1141.92,683.784 1142.48,683.784 1143.04,683.784 1143.6,683.784 1144.16,683.784 1144.72,683.784 1145.28,683.784 1145.84,683.784 1146.4,683.784 1146.96,683.784 1147.51,683.784 1148.07,683.784 1148.63,683.784 1149.19,683.784 1149.75,683.784 1150.31,683.784 1150.87,683.784 1151.43,683.784 1151.99,683.784 1152.55,683.784 1153.11,683.784 1153.67,683.784 1154.23,683.784 1154.78,683.784 1155.34,683.784 1155.9,683.784 1156.46,683.784 1157.02,683.784 1157.58,683.784 1158.14,683.784 1158.7,683.784 1159.26,683.784 1159.82,683.784 1160.38,683.784 1160.94,683.784 1161.5,683.784 1162.05,683.784 1162.61,683.784 1163.17,683.784 1163.73,683.784 1164.29,683.784 1164.85,683.784 1165.41,683.784 1165.97,683.784 1166.53,683.784 1167.09,683.784 1167.65,683.784 1168.21,683.784 1168.77,683.784 1169.33,683.784 1169.88,683.784 1170.44,683.784 1171,683.784 1171.56,683.784 1172.12,683.784 1172.68,683.784 1173.24,683.784 1173.8,683.784 1174.36,683.784 1174.92,683.784 1175.48,683.784 1176.04,683.784 1176.6,683.784 1177.15,683.784 1177.71,683.784 1178.27,683.784 1178.83,683.784 1179.39,683.784 1179.95,683.784 1180.51,683.784 1181.07,683.784 1181.63,683.784 1182.19,683.784 1182.75,683.784 1183.31,683.784 1183.87,683.784 1184.43,683.784 1184.98,683.784 1185.54,683.784 1186.1,683.784 1186.66,683.784 1187.22,683.784 1187.78,683.784 1188.34,683.784 1188.9,683.784 1189.46,683.784 1190.02,683.784 1190.58,683.784 1191.14,683.784 1191.7,683.784 1192.25,683.784 1192.81,683.784 1193.37,683.784 1193.93,683.784 1194.49,683.784 1195.05,683.784 1195.61,683.784 1196.17,683.784 1196.73,683.784 1197.29,683.784 1197.85,683.784 1198.41,683.784 1198.97,683.784 1199.52,683.784 1200.08,683.784 1200.64,683.784 1201.2,683.784 1201.76,683.784 1202.32,683.784 1202.88,683.784 1203.44,683.784 1204,683.784 1204.56,683.784 1205.12,683.784 1205.68,683.784 1206.24,683.784 1206.8,683.784 1207.35,683.784 1207.91,683.784 1208.47,683.784 1209.03,683.784 1209.59,683.784 1210.15,683.784 1210.71,683.784 1211.27,683.784 1211.83,683.784 1212.39,683.784 1212.95,683.784 1213.51,683.784 1214.07,683.784 1214.62,683.784 1215.18,683.784 1215.74,683.784 1216.3,683.784 1216.86,683.784 1217.42,683.784 1217.98,683.784 1218.54,683.784 1219.1,683.784 1219.66,683.784 1220.22,683.784 1220.78,683.784 1221.34,683.784 1221.89,683.784 1222.45,683.784 1223.01,683.784 1223.57,683.784 1224.13,683.784 1224.69,683.784 1225.25,683.784 1225.81,683.784 1226.37,683.784 1226.93,683.784 1227.49,683.784 1228.05,683.784 1228.61,683.784 1229.17,683.784 1229.72,683.784 1230.28,683.784 1230.84,683.784 1231.4,683.784 1231.96,683.784 1232.52,683.784 1233.08,683.784 1233.64,683.784 1234.2,683.784 1234.76,683.784 1235.32,683.784 1235.88,683.784 1236.44,683.784 1236.99,683.784 1237.55,683.784 1238.11,683.784 1238.67,683.784 1239.23,683.784 1239.79,683.784 1240.35,683.784 1240.91,683.784 1241.47,683.784 1242.03,683.784 1242.59,683.784 1243.15,683.784 1243.71,683.784 1244.26,683.784 1244.82,683.784 1245.38,683.784 1245.94,683.784 1246.5,683.784 1247.06,683.784 1247.62,683.784 1248.18,683.784 1248.74,683.784 1249.3,683.784 1249.86,683.784 1250.42,683.784 1250.98,683.784 1251.54,683.784 1252.09,683.784 1252.65,683.784 1253.21,683.784 1253.77,683.784 1254.33,683.784 1254.89,683.784 1255.45,683.784 1256.01,683.784 1256.57,683.784 1257.13,683.784 1257.69,683.784 1258.25,683.784 1258.81,683.784 1259.36,683.784 1259.92,683.784 1260.48,683.784 1261.04,683.784 1261.6,683.784 1262.16,683.784 1262.72,683.784 1263.28,683.784 1263.84,683.784 1264.4,683.784 1264.96,683.784 1265.52,683.784 1266.08,683.784 1266.63,683.784 1267.19,683.784 1267.75,683.784 1268.31,683.784 1268.87,683.784 1269.43,683.784 1269.99,683.784 1270.55,683.784 1271.11,683.784 1271.67,683.784 1272.23,683.784 1272.79,683.784 1273.35,683.784 1273.91,683.784 1274.46,683.784 1275.02,683.784 1275.58,683.784 1276.14,683.784 1276.7,683.784 1277.26,683.784 1277.82,683.784 1278.38,683.784 1278.94,683.784 1279.5,683.784 1280.06,683.784 1280.62,683.784 1281.18,683.784 1281.73,683.784 1282.29,683.784 1282.85,683.784 1283.41,683.784 1283.97,683.784 1284.53,683.784 1285.09,683.784 1285.65,683.784 1286.21,683.784 1286.77,683.784 1287.33,683.784 1287.89,683.784 1288.45,683.784 1289,683.784 1289.56,683.784 1290.12,683.784 1290.68,683.784 1291.24,683.784 1291.8,683.784 1292.36,683.784 1292.92,683.784 1293.48,683.784 1294.04,683.784 1294.6,683.784 1295.16,683.784 1295.72,683.784 1296.28,683.784 1296.83,683.784 1297.39,683.784 1297.95,683.784 1298.51,683.784 1299.07,683.784 1299.63,683.784 1300.19,683.784 1300.75,683.784 1301.31,683.784 1301.87,683.784 1302.43,683.784 1302.99,683.784 1303.55,683.784 1304.1,683.784 1304.66,683.784 1305.22,683.784 1305.78,683.784 1306.34,683.784 1306.9,683.784 1307.46,683.784 1308.02,683.784 1308.58,683.784 1309.14,683.784 1309.7,683.784 1310.26,683.784 1310.82,683.784 1311.38,683.784 1311.93,683.784 1312.49,683.784 1313.05,683.784 1313.61,683.784 1314.17,683.784 1314.73,683.784 1315.29,683.784 1315.85,683.784 1316.41,683.784 1316.97,683.784 1317.53,683.784 1318.09,683.784 1318.65,683.784 1319.2,683.784 1319.76,683.784 1320.32,683.784 1320.88,683.784 1321.44,683.784 1322,683.784 1322.56,683.784 1323.12,683.784 1323.68,683.784 1324.24,683.784 1324.8,683.784 1325.36,683.784 1325.92,683.784 1326.47,683.784 1327.03,683.784 1327.59,683.784 1328.15,683.784 1328.71,683.784 1329.27,683.784 1329.83,683.784 1330.39,683.784 1330.95,683.784 1331.51,683.784 1332.07,683.784 1332.63,683.784 1333.19,683.784 1333.75,683.784 1334.3,683.784 1334.86,683.784 1335.42,683.784 1335.98,683.784 1336.54,683.784 1337.1,683.784 1337.66,683.784 1338.22,683.784 1338.78,683.784 1339.34,683.784 1339.9,683.784 1340.46,683.784 1341.02,683.784 1341.57,683.784 1342.13,683.784 1342.69,683.784 1343.25,683.784 1343.81,683.784 1344.37,683.784 1344.93,683.784 1345.49,683.784 1346.05,683.784 1346.61,683.784 1347.17,683.784 1347.73,683.784 1348.29,683.784 1348.84,683.784 1349.4,683.784 1349.96,683.784 1350.52,683.784 1351.08,683.784 1351.64,683.784 1352.2,683.784 1352.76,683.784 1353.32,683.784 1353.88,683.784 1354.44,683.784 1355,683.784 1355.56,683.784 1356.12,683.784 1356.67,683.784 1357.23,683.784 1357.79,683.784 1358.35,683.784 1358.91,683.784 1359.47,683.784 1360.03,683.784 1360.59,683.784 1361.15,683.784 1361.71,683.784 1362.27,683.784 1362.83,683.784 1363.39,683.784 1363.94,683.784 1364.5,683.784 1365.06,683.784 1365.62,683.784 1366.18,683.784 1366.74,683.784 1367.3,683.784 1367.86,683.784 1368.42,683.784 1368.98,683.784 1369.54,683.784 1370.1,683.784 1370.66,683.784 1371.21,683.784 1371.77,683.784 1372.33,683.784 1372.89,683.784 1373.45,683.784 1374.01,683.784 1374.57,683.784 1375.13,683.784 1375.69,683.784 1376.25,683.784 1376.81,683.784 1377.37,683.784 1377.93,683.784 1378.49,683.784 1379.04,683.784 1379.6,683.784 1380.16,683.784 1380.72,683.784 1381.28,683.784 1381.84,683.784 1382.4,683.784 1382.96,683.784 1383.52,683.784 1384.08,683.784 1384.64,683.784 1385.2,683.784 1385.76,683.784 1386.31,683.784 1386.87,683.784 1387.43,683.784 1387.99,683.784 1388.55,683.784 1389.11,683.784 1389.67,683.784 1390.23,683.784 1390.79,683.784 1391.35,683.784 1391.91,683.784 1392.47,683.784 1393.03,683.784 1393.58,683.784 1394.14,683.784 1394.7,683.784 1395.26,683.784 1395.82,683.784 1396.38,683.784 1396.94,683.784 1397.5,683.784 1398.06,683.784 1398.62,683.784 1399.18,683.784 1399.74,683.784 1400.3,683.784 1400.86,683.784 1401.41,683.784 1401.97,683.784 1402.53,683.784 1403.09,683.784 1403.65,683.784 1404.21,683.784 1404.77,683.784 1405.33,683.784 1405.89,683.784 1406.45,683.784 1407.01,683.784 1407.57,683.784 1408.13,683.784 1408.68,683.784 1409.24,683.784 1409.8,683.784 1410.36,683.784 1410.92,683.784 1411.48,683.784 1412.04,683.784 1412.6,683.784 1413.16,683.784 1413.72,683.784 1414.28,683.784 1414.84,683.784 1415.4,683.784 1415.95,683.784 1416.51,683.784 1417.07,683.784 1417.63,683.784 1418.19,683.784 1418.75,683.784 1419.31,683.784 1419.87,683.784 1420.43,683.784 1420.99,683.784 1421.55,683.784 1422.11,683.784 1422.67,683.784 1423.23,683.784 1423.78,683.784 1424.34,683.784 1424.9,683.784 1425.46,683.784 1426.02,683.784 1426.58,683.784 1427.14,683.784 1427.7,683.784 1428.26,683.784 1428.82,683.784 1429.38,683.784 1429.94,683.784 1430.5,683.784 1431.05,683.784 1431.61,683.784 1432.17,683.784 1432.73,683.784 1433.29,683.784 1433.85,683.784 1434.41,683.784 1434.97,683.784 1435.53,683.784 1436.09,683.784 1436.65,683.784 1437.21,683.784 1437.77,683.784 1438.33,683.784 1438.88,683.784 1439.44,683.784 1440,683.784 1440.56,683.784 1441.12,683.784 1441.68,683.784 1442.24,683.784 1442.8,683.784 1443.36,683.784 1443.92,683.784 1444.48,683.784 1445.04,683.784 1445.6,683.784 1446.15,683.784 1446.71,683.784 1447.27,683.784 1447.83,683.784 1448.39,683.784 1448.95,683.784 1449.51,683.784 1450.07,683.784 1450.63,683.784 1451.19,683.784 1451.75,683.784 1452.31,683.784 1452.87,683.784 1453.42,683.784 1453.98,683.784 1454.54,683.784 1455.1,683.784 1455.66,683.784 1456.22,683.784 1456.78,683.784 1457.34,683.784 1457.9,683.784 1458.46,683.784 1459.02,683.784 1459.58,683.784 1460.14,683.784 1460.7,683.784 1461.25,683.784 1461.81,683.784 1462.37,683.784 1462.93,683.784 1463.49,683.784 1464.05,683.784 1464.61,683.784 1465.17,683.784 1465.73,683.784 1466.29,683.784 1466.85,683.784 1467.41,683.784 1467.97,683.784 1468.52,683.784 1469.08,683.784 1469.64,683.784 1470.2,683.784 1470.76,683.784 1471.32,683.784 1471.88,683.784 1472.44,683.784 1473,683.784 1473.56,683.784 1474.12,683.784 1474.68,683.784 1475.24,683.784 1475.79,683.784 1476.35,683.784 1476.91,683.784 1477.47,683.784 1478.03,683.784 1478.59,683.784 1479.15,683.784 1479.71,683.784 1480.27,683.784 1480.83,683.784 1481.39,683.784 1481.95,683.784 1482.51,683.784 1483.07,683.784 1483.62,683.784 1484.18,683.784 1484.74,683.784 1485.3,683.784 1485.86,683.784 1486.42,683.784 1486.98,683.784 1487.54,683.784 1488.1,683.784 1488.66,683.784 1489.22,683.784 1489.78,683.784 1490.34,683.784 1490.89,683.784 1491.45,683.784 1492.01,683.784 1492.57,683.784 1493.13,683.784 1493.69,683.784 1494.25,683.784 1494.81,683.784 1495.37,683.784 1495.93,683.784 1496.49,683.784 1497.05,683.784 1497.61,683.784 1498.16,683.784 1498.72,683.784 1499.28,683.784 1499.84,683.784 1500.4,683.784 1500.96,683.784 1501.52,683.784 1502.08,683.784 1502.64,683.784 1503.2,683.784 1503.76,683.784 1504.32,683.784 1504.88,683.784 1505.44,683.784 1505.99,683.784 1506.55,683.784 1507.11,683.784 1507.67,683.784 1508.23,683.784 1508.79,683.784 1509.35,683.784 1509.91,683.784 1510.47,683.784 1511.03,683.784 1511.59,683.784 1512.15,683.784 1512.71,683.784 1513.26,683.784 1513.82,683.784 1514.38,683.784 1514.94,683.784 1515.5,683.784 1516.06,683.784 1516.62,683.784 1517.18,683.784 1517.74,683.784 1518.3,683.784 1518.86,683.784 1519.42,683.784 1519.98,683.784 1520.53,683.784 1521.09,683.784 1521.65,683.784 1522.21,683.784 1522.77,683.784 1523.33,683.784 1523.89,683.784 1524.45,683.784 1525.01,683.784 1525.57,683.784 1526.13,683.784 1526.69,683.784 1527.25,683.784 1527.81,683.784 1528.36,683.784 1528.92,683.784 1529.48,683.784 1530.04,683.784 1530.6,683.784 1531.16,683.784 1531.72,683.784 1532.28,683.784 1532.84,683.784 1533.4,683.784 1533.96,683.784 1534.52,683.784 1535.08,683.784 1535.63,683.784 1536.19,683.784 1536.75,683.784 1537.31,683.784 1537.87,683.784 1538.43,683.784 1538.99,683.784 1539.55,683.784 1540.11,683.784 1540.67,683.784 1541.23,683.784 1541.79,683.784 1542.35,683.784 1542.9,683.784 1543.46,683.784 1544.02,683.784 1544.58,683.784 1545.14,683.784 1545.7,683.784 1546.26,683.784 1546.82,683.784 1547.38,683.784 1547.94,683.784 1548.5,683.784 1549.06,683.784 1549.62,683.784 1550.18,683.784 1550.73,683.784 1551.29,683.784 1551.85,683.784 1552.41,683.784 1552.97,683.784 1553.53,683.784 1554.09,683.784 1554.65,683.784 1555.21,683.784 1555.77,683.784 1556.33,683.784 1556.89,683.784 1557.45,683.784 1558,683.784 1558.56,683.784 1559.12,683.784 1559.68,683.784 1560.24,683.784 1560.8,683.784 1561.36,683.784 1561.92,683.784 1562.48,683.784 1563.04,683.784 1563.6,683.784 1564.16,683.784 1564.72,683.784 1565.28,683.784 1565.83,683.784 1566.39,683.784 1566.95,683.784 1567.51,683.784 1568.07,683.784 1568.63,683.784 1569.19,683.784 1569.75,683.784 1570.31,683.784 1570.87,683.784 1571.43,683.784 1571.99,683.784 1572.55,683.784 1573.1,683.784 1573.66,683.784 1574.22,683.784 1574.78,683.784 1575.34,683.784 1575.9,683.784 1576.46,683.784 1577.02,683.784 1577.58,683.784 1578.14,683.784 1578.7,683.784 1579.26,683.784 1579.82,683.784 1580.37,683.784 1580.93,683.784 1581.49,683.784 1582.05,683.784 1582.61,683.784 1583.17,683.784 1583.73,683.784 1584.29,683.784 1584.85,683.784 1585.41,683.784 1585.97,683.784 1586.53,683.784 1587.09,683.784 1587.65,683.784 1588.2,683.784 1588.76,683.784 1589.32,683.784 1589.88,683.784 1590.44,683.784 1591,683.784 1591.56,683.784 1592.12,683.784 1592.68,683.784 1593.24,683.784 1593.8,683.784 1594.36,683.784 1594.92,683.784 1595.47,683.784 1596.03,683.784 1596.59,683.784 1597.15,683.784 1597.71,683.784 1598.27,683.784 1598.83,683.784 1599.39,683.784 1599.95,683.784 1600.51,683.784 1601.07,683.784 1601.63,683.784 1602.19,683.784 1602.74,683.784 1603.3,683.784 1603.86,683.784 1604.42,683.784 1604.98,683.784 1605.54,683.784 1606.1,683.784 1606.66,683.784 1607.22,683.784 1607.78,683.784 1608.34,683.784 1608.9,683.784 1609.46,683.784 1610.02,683.784 1610.57,683.784 1611.13,683.784 1611.69,683.784 1612.25,683.784 1612.81,683.784 1613.37,683.784 1613.93,683.784 1614.49,683.784 1615.05,683.784 1615.61,683.784 1616.17,683.784 1616.73,683.784 1617.29,683.784 1617.84,683.784 1618.4,683.784 1618.96,683.784 1619.52,683.784 1620.08,683.784 1620.64,683.784 1621.2,683.784 1621.76,683.784 1622.32,683.784 1622.88,683.784 1623.44,683.784 1624,683.784 1624.56,683.784 1625.11,683.784 1625.67,683.784 1626.23,683.784 1626.79,683.784 1627.35,683.784 1627.91,683.784 1628.47,683.784 1629.03,683.784 1629.59,683.784 1630.15,683.784 1630.71,683.784 1631.27,683.784 1631.83,683.784 1632.39,683.784 1632.94,683.784 1633.5,683.784 1634.06,683.784 1634.62,683.784 1635.18,683.784 1635.74,683.784 1636.3,683.784 1636.86,683.784 1637.42,683.784 1637.98,683.784 1638.54,683.784 1639.1,683.784 1639.66,683.784 1640.21,683.784 1640.77,683.784 1641.33,683.784 1641.89,683.784 1642.45,683.784 1643.01,683.784 1643.57,683.784 1644.13,683.784 1644.69,683.784 1645.25,683.784 1645.81,683.784 1646.37,683.784 1646.93,683.784 1647.48,683.784 1648.04,683.784 1648.6,683.784 1649.16,683.784 1649.72,683.784 1650.28,683.784 1650.84,683.784 1651.4,683.784 1651.96,683.784 1652.52,683.784 1653.08,683.784 1653.64,683.784 1654.2,683.784 1654.76,683.784 1655.31,683.784 1655.87,683.784 1656.43,683.784 1656.99,683.784 1657.55,683.784 1658.11,683.784 1658.67,683.784 1659.23,683.784 1659.79,683.784 1660.35,683.784 1660.91,683.784 1661.47,683.784 1662.03,683.784 1662.58,683.784 1663.14,683.784 1663.7,683.784 1664.26,683.784 1664.82,683.784 1665.38,683.784 1665.94,683.784 1666.5,683.784 1667.06,683.784 1667.62,683.784 1668.18,683.784 1668.74,683.784 1669.3,683.784 1669.85,683.784 1670.41,683.784 1670.97,683.784 1671.53,683.784 1672.09,683.784 1672.65,683.784 1673.21,683.784 1673.77,683.784 1674.33,683.784 1674.89,683.784 1675.45,683.784 1676.01,683.784 1676.57,683.784 1677.13,683.784 1677.68,683.784 1678.24,683.784 1678.8,683.784 1679.36,683.784 1679.92,683.784 1680.48,683.784 1681.04,683.784 1681.6,683.784 1682.16,683.784 1682.72,683.784 1683.28,683.784 1683.84,683.784 1684.4,683.784 1684.95,683.784 1685.51,683.784 1686.07,683.784 1686.63,683.784 1687.19,683.784 1687.75,683.784 1688.31,683.784 1688.87,683.784 1689.43,683.784 1689.99,683.784 1690.55,683.784 1691.11,683.784 1691.67,683.784 1692.23,683.784 1692.78,683.784 1693.34,683.784 1693.9,683.784 1694.46,683.784 1695.02,683.784 1695.58,683.784 1696.14,683.784 1696.7,683.784 1697.26,683.784 1697.82,683.784 1698.38,683.784 1698.94,683.784 1699.5,683.784 1700.05,683.784 1700.61,683.784 1701.17,683.784 1701.73,683.784 1702.29,683.784 1702.85,683.784 1703.41,683.784 1703.97,683.784 1704.53,683.784 1705.09,683.784 1705.65,683.784 1706.21,683.784 1706.77,683.784 1707.32,683.784 1707.88,683.784 1708.44,683.784 1709,683.784 1709.56,683.784 1710.12,683.784 1710.68,683.784 1711.24,683.784 1711.8,683.784 1712.36,683.784 1712.92,683.784 1713.48,683.784 1714.04,683.784 1714.6,683.784 1715.15,683.784 1715.71,683.784 1716.27,683.784 1716.83,683.784 1717.39,683.784 1717.95,683.784 1718.51,683.784 1719.07,683.784 1719.63,683.784 1720.19,683.784 1720.75,683.784 1721.31,683.784 1721.87,683.784 1722.42,683.784 1722.98,683.784 1723.54,683.784 1724.1,683.784 1724.66,683.784 1725.22,683.784 1725.78,683.784 1726.34,683.784 1726.9,683.784 1727.46,683.784 1728.02,683.784 1728.58,683.784 1729.14,683.784 1729.69,683.784 1730.25,683.784 1730.81,683.784 1731.37,683.784 1731.93,683.784 1732.49,683.784 1733.05,683.784 1733.61,683.784 1734.17,683.784 1734.73,683.784 1735.29,683.784 1735.85,683.784 1736.41,683.784 1736.97,683.784 1737.52,683.784 1738.08,683.784 1738.64,683.784 1739.2,683.784 1739.76,683.784 1740.32,683.784 1740.88,683.784 1741.44,683.784 1742,683.784 1742.56,683.784 1743.12,683.784 1743.68,683.784 1744.24,683.784 1744.79,683.784 1745.35,683.784 1745.91,683.784 1746.47,683.784 1747.03,683.784 1747.59,683.784 1748.15,683.784 1748.71,683.784 1749.27,683.784 1749.83,683.784 1750.39,683.784 1750.95,683.784 1751.51,683.784 1752.06,683.784 1752.62,683.784 1753.18,683.784 1753.74,683.784 1754.3,683.784 1754.86,683.784 1755.42,683.784 1755.98,683.784 1756.54,683.784 1757.1,683.784 1757.66,683.784 1758.22,683.784 1758.78,683.784 1759.34,683.784 1759.89,683.784 1760.45,683.784 1761.01,683.784 1761.57,683.784 1762.13,683.784 1762.69,683.784 1763.25,683.784 1763.81,683.784 1764.37,683.784 1764.93,683.784 1765.49,683.784 1766.05,683.784 1766.61,683.784 1767.16,683.784 1767.72,683.784 1768.28,683.784 1768.84,683.784 1769.4,683.784 1769.96,683.784 1770.52,683.784 1771.08,683.784 1771.64,683.784 1772.2,683.784 1772.76,683.784 1773.32,683.784 1773.88,683.784 1774.43,683.784 1774.99,683.784 1775.55,683.784 1776.11,683.784 1776.67,683.784 1777.23,683.784 1777.79,683.784 1778.35,683.784 1778.91,683.784 1779.47,683.784 1780.03,683.784 1780.59,683.784 1781.15,683.784 1781.71,683.784 1782.26,683.784 1782.82,683.784 1783.38,683.784 1783.94,683.784 1784.5,683.784 1785.06,683.784 1785.62,683.784 1786.18,683.784 1786.74,683.784 1787.3,683.784 1787.86,683.784 1788.42,683.784 1788.98,683.784 1789.53,683.784 1790.09,683.784 1790.65,683.784 1791.21,683.784 1791.77,683.784 1792.33,683.784 1792.89,683.784 1793.45,683.784 1794.01,683.784 1794.57,683.784 1795.13,683.784 1795.69,683.784 1796.25,683.784 1796.8,683.784 1797.36,683.784 1797.92,683.784 1798.48,683.784 1799.04,683.784 1799.6,683.784 1800.16,683.784 1800.72,683.784 1801.28,683.784 1801.84,683.784 1802.4,683.784 1802.96,683.784 1803.52,683.784 1804.08,683.784 1804.63,683.784 1805.19,683.784 1805.75,683.784 1806.31,683.784 1806.87,683.784 1807.43,683.784 1807.99,683.784 1808.55,683.784 1809.11,683.784 1809.67,683.784 1810.23,683.784 1810.79,683.784 1811.35,683.784 1811.9,683.784 1812.46,683.784 1813.02,683.784 1813.58,683.784 1814.14,683.784 1814.7,683.784 1815.26,683.784 1815.82,683.784 1816.38,683.784 1816.94,683.784 1817.5,683.784 1818.06,683.784 1818.62,683.784 1819.18,683.784 1819.73,683.784 1820.29,683.784 1820.85,683.784 1821.41,683.784 1821.97,683.784 1822.53,683.784 1823.09,683.784 1823.65,683.784 1824.21,683.784 1824.77,683.784 1825.33,683.784 1825.89,683.784 1826.45,683.784 1827,683.784 1827.56,683.784 1828.12,683.784 1828.68,683.784 1829.24,683.784 1829.8,683.784 1830.36,683.784 1830.92,683.784 1831.48,683.784 1832.04,683.784 1832.6,683.784 1833.16,683.784 1833.72,683.784 1834.27,683.784 1834.83,683.784 1835.39,683.784 1835.95,683.784 1836.51,683.784 1837.07,683.784 1837.63,683.784 1838.19,683.784 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.0190943713517 ± 0.022586465476248832\nProjected Energy: -4.016089892196749 ± (0.006652723736129573, 0.0067669696883490005)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.504529</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.559e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.8335e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.648e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.152e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.525e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.786e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
